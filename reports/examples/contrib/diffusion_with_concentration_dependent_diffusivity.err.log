Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/test/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/share/miniconda3/envs/test/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda3/envs/test/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda3/envs/test/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda3/envs/test/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/share/miniconda3/envs/test/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda3/envs/test/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda3/envs/test/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fd = op.algorithms.FickianDiffusion(network=net, phase=water)
fd.set_value_BC(pores=net.pores('top'), values=10.0)
fd.set_value_BC(pores=net.pores('bottom'), values=0.0)
fd.run()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
Cell [0;32mIn [8], line 4[0m
[1;32m      2[0m fd[38;5;241m.[39mset_value_BC(pores[38;5;241m=[39mnet[38;5;241m.[39mpores([38;5;124m'[39m[38;5;124mtop[39m[38;5;124m'[39m), values[38;5;241m=[39m[38;5;241m10.0[39m)
[1;32m      3[0m fd[38;5;241m.[39mset_value_BC(pores[38;5;241m=[39mnet[38;5;241m.[39mpores([38;5;124m'[39m[38;5;124mbottom[39m[38;5;124m'[39m), values[38;5;241m=[39m[38;5;241m0.0[39m)
[0;32m----> 4[0m [43mfd[49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m[43m)[49m

File [0;32m~/work/OpenPNM/OpenPNM/openpnm/algorithms/_transport.py:189[0m, in [0;36mTransport.run[0;34m(self, solver, x0, verbose)[0m
[1;32m    187[0m [38;5;66;03m# Perform pre-solve validations[39;00m
[1;32m    188[0m [38;5;28mself[39m[38;5;241m.[39m_validate_settings()
[0;32m--> 189[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_data_health[49m[43m([49m[43m)[49m
[1;32m    190[0m [38;5;66;03m# Write x0 to algorithm (needed by _update_iterative_props)[39;00m
[1;32m    191[0m [38;5;28mself[39m[38;5;241m.[39mx [38;5;241m=[39m x0 [38;5;241m=[39m np[38;5;241m.[39mzeros_like([38;5;28mself[39m[38;5;241m.[39mb) [38;5;28;01mif[39;00m x0 [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m x0[38;5;241m.[39mcopy()

File [0;32m~/work/OpenPNM/OpenPNM/openpnm/algorithms/_transport.py:283[0m, in [0;36mTransport._validate_data_health[0;34m(self)[0m
[1;32m    281[0m [38;5;28mself[39m[38;5;241m.[39m_validate_topology_health()
[1;32m    282[0m [38;5;66;03m# Short-circuit subsequent checks if data are healthy[39;00m
[0;32m--> 283[0m [38;5;28;01mif[39;00m np[38;5;241m.[39misfinite([38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mA[49m[38;5;241m.[39mdata)[38;5;241m.[39mall() [38;5;129;01mand[39;00m np[38;5;241m.[39misfinite([38;5;28mself[39m[38;5;241m.[39mb)[38;5;241m.[39mall():
[1;32m    284[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mTrue[39;00m
[1;32m    286[0m [38;5;66;03m# Fetch phase/geometries/physics[39;00m

File [0;32m~/work/OpenPNM/OpenPNM/openpnm/algorithms/_transport.py:121[0m, in [0;36mTransport.A[0;34m(self)[0m
[1;32m    119[0m [38;5;124;03m"""The coefficient matrix, A (in Ax = b)"""[39;00m
[1;32m    120[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_A [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 121[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_build_A[49m[43m([49m[43m)[49m
[1;32m    122[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_A

File [0;32m~/work/OpenPNM/OpenPNM/openpnm/algorithms/_transport.py:102[0m, in [0;36mTransport._build_A[0;34m(self)[0m
[1;32m    100[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_pure_A [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    101[0m     phase [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mproject[[38;5;28mself[39m[38;5;241m.[39msettings[38;5;241m.[39mphase]
[0;32m--> 102[0m     g [38;5;241m=[39m [43mphase[49m[43m[[49m[43mgvals[49m[43m][49m
[1;32m    103[0m     am [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mnetwork[38;5;241m.[39mcreate_adjacency_matrix(weights[38;5;241m=[39mg, fmt[38;5;241m=[39m[38;5;124m'[39m[38;5;124mcoo[39m[38;5;124m'[39m)
[1;32m    104[0m     [38;5;28mself[39m[38;5;241m.[39m_pure_A [38;5;241m=[39m spgr[38;5;241m.[39mlaplacian(am)[38;5;241m.[39mastype([38;5;28mfloat[39m)

File [0;32m~/work/OpenPNM/OpenPNM/openpnm/phase/_phase.py:88[0m, in [0;36mPhase.__getitem__[0;34m(self, key)[0m
[1;32m     86[0m         [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key)
[1;32m     87[0m     [38;5;28;01melif[39;00m (element [38;5;241m==[39m [38;5;124m'[39m[38;5;124mthroat[39m[38;5;124m'[39m) [38;5;129;01mand[39;00m ([38;5;124m'[39m[38;5;124mpore.[39m[38;5;124m'[39m[38;5;241m+[39mprop [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mkeys()):
[0;32m---> 88[0m         [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key)
[1;32m     89[0m     vals [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39minterpolate_data(element [38;5;241m+[39m [38;5;124m'[39m[38;5;124m.[39m[38;5;124m'[39m [38;5;241m+[39m prop)
[1;32m     90[0m [38;5;28;01melse[39;00m:

[0;31mKeyError[0m: 'throat.diffusive_conductance'
KeyError: 'throat.diffusive_conductance'

