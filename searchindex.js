Search.setIndex({"docnames": ["_examples/applications", "_examples/index", "_examples/reference", "_examples/tutorials", "basic_usage", "examples/applications/absolute_permeability", "examples/applications/adjusting_pore_size_distributions", "examples/applications/dispersion_coefficient", "examples/applications/effective_diffusivity_and_tortuosity", "examples/applications/formation_factor", "examples/applications/mercury_intrusion", "examples/applications/porosity", "examples/applications/relative_diffusivity", "examples/applications/relative_permeability", "examples/contrib/README", "examples/reference/architecture/pore_scale_models", "examples/reference/architecture/settings_attribute_machinery", "examples/reference/architecture/workspace_and_projects", "examples/reference/simulations/available_matrix_solvers", "examples/reference/simulations/basic_transport", "examples/reference/simulations/explanation_of_units", "examples/reference/simulations/reactive_transport", "examples/reference/simulations/size_factors_and_transport_conductance", "examples/reference/simulations/transient_transport", "examples/tutorials/01_numerical_python_primer", "examples/tutorials/02_network_generation_and_visualization", "examples/tutorials/03_data_and_topology_storage", "examples/tutorials/04_graph_queries_and_manipulation", "examples/tutorials/05_defining_geometry", "examples/tutorials/06_labels_and_domains", "examples/tutorials/07_phases_and_mixtures", "examples/tutorials/08_simulating_transport", "examples/tutorials/09_simulating_invasion", "examples/tutorials/10_visualization_options", "index", "installation", "modules/generated/openpnm.algorithms", "modules/generated/openpnm.algorithms.AdvectionDiffusion", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values", "modules/generated/openpnm.algorithms.Algorithm", "modules/generated/openpnm.algorithms.Algorithm.clear", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs", "modules/generated/openpnm.algorithms.Algorithm.copy", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label", "modules/generated/openpnm.algorithms.Algorithm.fromkeys", "modules/generated/openpnm.algorithms.Algorithm.get", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data", "modules/generated/openpnm.algorithms.Algorithm.items", "modules/generated/openpnm.algorithms.Algorithm.keys", "modules/generated/openpnm.algorithms.Algorithm.labels", "modules/generated/openpnm.algorithms.Algorithm.num_pores", "modules/generated/openpnm.algorithms.Algorithm.num_throats", "modules/generated/openpnm.algorithms.Algorithm.pop", "modules/generated/openpnm.algorithms.Algorithm.popitem", "modules/generated/openpnm.algorithms.Algorithm.pores", "modules/generated/openpnm.algorithms.Algorithm.props", "modules/generated/openpnm.algorithms.Algorithm.set_BC", "modules/generated/openpnm.algorithms.Algorithm.set_label", "modules/generated/openpnm.algorithms.Algorithm.setdefault", "modules/generated/openpnm.algorithms.Algorithm.throats", "modules/generated/openpnm.algorithms.Algorithm.to_indices", "modules/generated/openpnm.algorithms.Algorithm.to_mask", "modules/generated/openpnm.algorithms.Algorithm.update", "modules/generated/openpnm.algorithms.Algorithm.values", "modules/generated/openpnm.algorithms.Drainage", "modules/generated/openpnm.algorithms.Drainage.apply_trapping", "modules/generated/openpnm.algorithms.Drainage.clear", "modules/generated/openpnm.algorithms.Drainage.clear_BCs", "modules/generated/openpnm.algorithms.Drainage.copy", "modules/generated/openpnm.algorithms.Drainage.filter_by_label", "modules/generated/openpnm.algorithms.Drainage.fromkeys", "modules/generated/openpnm.algorithms.Drainage.get", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data", "modules/generated/openpnm.algorithms.Drainage.interpolate_data", "modules/generated/openpnm.algorithms.Drainage.items", "modules/generated/openpnm.algorithms.Drainage.keys", "modules/generated/openpnm.algorithms.Drainage.labels", "modules/generated/openpnm.algorithms.Drainage.num_pores", "modules/generated/openpnm.algorithms.Drainage.num_throats", "modules/generated/openpnm.algorithms.Drainage.pc_curve", "modules/generated/openpnm.algorithms.Drainage.pop", "modules/generated/openpnm.algorithms.Drainage.popitem", "modules/generated/openpnm.algorithms.Drainage.pores", "modules/generated/openpnm.algorithms.Drainage.props", "modules/generated/openpnm.algorithms.Drainage.reset", "modules/generated/openpnm.algorithms.Drainage.run", "modules/generated/openpnm.algorithms.Drainage.set_BC", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC", "modules/generated/openpnm.algorithms.Drainage.set_label", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC", "modules/generated/openpnm.algorithms.Drainage.setdefault", "modules/generated/openpnm.algorithms.Drainage.throats", "modules/generated/openpnm.algorithms.Drainage.to_indices", "modules/generated/openpnm.algorithms.Drainage.to_mask", "modules/generated/openpnm.algorithms.Drainage.update", "modules/generated/openpnm.algorithms.Drainage.values", "modules/generated/openpnm.algorithms.FickianDiffusion", "modules/generated/openpnm.algorithms.FickianDiffusion.clear", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.copy", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.FickianDiffusion.get", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.FickianDiffusion.items", "modules/generated/openpnm.algorithms.FickianDiffusion.keys", "modules/generated/openpnm.algorithms.FickianDiffusion.labels", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.FickianDiffusion.pop", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem", "modules/generated/openpnm.algorithms.FickianDiffusion.pores", "modules/generated/openpnm.algorithms.FickianDiffusion.props", "modules/generated/openpnm.algorithms.FickianDiffusion.rate", "modules/generated/openpnm.algorithms.FickianDiffusion.run", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.FickianDiffusion.throats", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.FickianDiffusion.update", "modules/generated/openpnm.algorithms.FickianDiffusion.values", "modules/generated/openpnm.algorithms.FourierConduction", "modules/generated/openpnm.algorithms.FourierConduction.clear", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.FourierConduction.copy", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys", "modules/generated/openpnm.algorithms.FourierConduction.get", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data", "modules/generated/openpnm.algorithms.FourierConduction.items", "modules/generated/openpnm.algorithms.FourierConduction.keys", "modules/generated/openpnm.algorithms.FourierConduction.labels", "modules/generated/openpnm.algorithms.FourierConduction.num_pores", "modules/generated/openpnm.algorithms.FourierConduction.num_throats", "modules/generated/openpnm.algorithms.FourierConduction.pop", "modules/generated/openpnm.algorithms.FourierConduction.popitem", "modules/generated/openpnm.algorithms.FourierConduction.pores", "modules/generated/openpnm.algorithms.FourierConduction.props", "modules/generated/openpnm.algorithms.FourierConduction.rate", "modules/generated/openpnm.algorithms.FourierConduction.run", "modules/generated/openpnm.algorithms.FourierConduction.set_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_label", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_source", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC", "modules/generated/openpnm.algorithms.FourierConduction.setdefault", "modules/generated/openpnm.algorithms.FourierConduction.throats", "modules/generated/openpnm.algorithms.FourierConduction.to_indices", "modules/generated/openpnm.algorithms.FourierConduction.to_mask", "modules/generated/openpnm.algorithms.FourierConduction.update", "modules/generated/openpnm.algorithms.FourierConduction.values", "modules/generated/openpnm.algorithms.InvasionPercolation", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping", "modules/generated/openpnm.algorithms.InvasionPercolation.clear", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs", "modules/generated/openpnm.algorithms.InvasionPercolation.copy", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys", "modules/generated/openpnm.algorithms.InvasionPercolation.get", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data", "modules/generated/openpnm.algorithms.InvasionPercolation.items", "modules/generated/openpnm.algorithms.InvasionPercolation.keys", "modules/generated/openpnm.algorithms.InvasionPercolation.labels", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve", "modules/generated/openpnm.algorithms.InvasionPercolation.pop", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem", "modules/generated/openpnm.algorithms.InvasionPercolation.pores", "modules/generated/openpnm.algorithms.InvasionPercolation.props", "modules/generated/openpnm.algorithms.InvasionPercolation.reset", "modules/generated/openpnm.algorithms.InvasionPercolation.run", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault", "modules/generated/openpnm.algorithms.InvasionPercolation.throats", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask", "modules/generated/openpnm.algorithms.InvasionPercolation.update", "modules/generated/openpnm.algorithms.InvasionPercolation.values", "modules/generated/openpnm.algorithms.OhmicConduction", "modules/generated/openpnm.algorithms.OhmicConduction.clear", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.copy", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys", "modules/generated/openpnm.algorithms.OhmicConduction.get", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data", "modules/generated/openpnm.algorithms.OhmicConduction.items", "modules/generated/openpnm.algorithms.OhmicConduction.keys", "modules/generated/openpnm.algorithms.OhmicConduction.labels", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats", "modules/generated/openpnm.algorithms.OhmicConduction.pop", "modules/generated/openpnm.algorithms.OhmicConduction.popitem", "modules/generated/openpnm.algorithms.OhmicConduction.pores", "modules/generated/openpnm.algorithms.OhmicConduction.props", "modules/generated/openpnm.algorithms.OhmicConduction.rate", "modules/generated/openpnm.algorithms.OhmicConduction.run", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_label", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_source", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault", "modules/generated/openpnm.algorithms.OhmicConduction.throats", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask", "modules/generated/openpnm.algorithms.OhmicConduction.update", "modules/generated/openpnm.algorithms.OhmicConduction.values", "modules/generated/openpnm.algorithms.ReactiveTransport", "modules/generated/openpnm.algorithms.ReactiveTransport.clear", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.copy", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.ReactiveTransport.get", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.ReactiveTransport.items", "modules/generated/openpnm.algorithms.ReactiveTransport.keys", "modules/generated/openpnm.algorithms.ReactiveTransport.labels", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.ReactiveTransport.pop", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem", "modules/generated/openpnm.algorithms.ReactiveTransport.pores", "modules/generated/openpnm.algorithms.ReactiveTransport.props", "modules/generated/openpnm.algorithms.ReactiveTransport.rate", "modules/generated/openpnm.algorithms.ReactiveTransport.run", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.ReactiveTransport.throats", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.ReactiveTransport.update", "modules/generated/openpnm.algorithms.ReactiveTransport.values", "modules/generated/openpnm.algorithms.StokesFlow", "modules/generated/openpnm.algorithms.StokesFlow.clear", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs", "modules/generated/openpnm.algorithms.StokesFlow.copy", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys", "modules/generated/openpnm.algorithms.StokesFlow.get", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data", "modules/generated/openpnm.algorithms.StokesFlow.items", "modules/generated/openpnm.algorithms.StokesFlow.keys", "modules/generated/openpnm.algorithms.StokesFlow.labels", "modules/generated/openpnm.algorithms.StokesFlow.num_pores", "modules/generated/openpnm.algorithms.StokesFlow.num_throats", "modules/generated/openpnm.algorithms.StokesFlow.pop", "modules/generated/openpnm.algorithms.StokesFlow.popitem", "modules/generated/openpnm.algorithms.StokesFlow.pores", "modules/generated/openpnm.algorithms.StokesFlow.props", "modules/generated/openpnm.algorithms.StokesFlow.rate", "modules/generated/openpnm.algorithms.StokesFlow.run", "modules/generated/openpnm.algorithms.StokesFlow.set_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_label", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_source", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC", "modules/generated/openpnm.algorithms.StokesFlow.setdefault", "modules/generated/openpnm.algorithms.StokesFlow.throats", "modules/generated/openpnm.algorithms.StokesFlow.to_indices", "modules/generated/openpnm.algorithms.StokesFlow.to_mask", "modules/generated/openpnm.algorithms.StokesFlow.update", "modules/generated/openpnm.algorithms.StokesFlow.values", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values", "modules/generated/openpnm.algorithms.TransientFickianDiffusion", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values", "modules/generated/openpnm.algorithms.TransientReactiveTransport", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values", "modules/generated/openpnm.algorithms.Transport", "modules/generated/openpnm.algorithms.Transport.clear", "modules/generated/openpnm.algorithms.Transport.clear_BCs", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs", "modules/generated/openpnm.algorithms.Transport.copy", "modules/generated/openpnm.algorithms.Transport.filter_by_label", "modules/generated/openpnm.algorithms.Transport.fromkeys", "modules/generated/openpnm.algorithms.Transport.get", "modules/generated/openpnm.algorithms.Transport.get_conduit_data", "modules/generated/openpnm.algorithms.Transport.interpolate_data", "modules/generated/openpnm.algorithms.Transport.items", "modules/generated/openpnm.algorithms.Transport.keys", "modules/generated/openpnm.algorithms.Transport.labels", "modules/generated/openpnm.algorithms.Transport.num_pores", "modules/generated/openpnm.algorithms.Transport.num_throats", "modules/generated/openpnm.algorithms.Transport.pop", "modules/generated/openpnm.algorithms.Transport.popitem", "modules/generated/openpnm.algorithms.Transport.pores", "modules/generated/openpnm.algorithms.Transport.props", "modules/generated/openpnm.algorithms.Transport.rate", "modules/generated/openpnm.algorithms.Transport.run", "modules/generated/openpnm.algorithms.Transport.set_BC", "modules/generated/openpnm.algorithms.Transport.set_label", "modules/generated/openpnm.algorithms.Transport.set_rate_BC", "modules/generated/openpnm.algorithms.Transport.set_value_BC", "modules/generated/openpnm.algorithms.Transport.setdefault", "modules/generated/openpnm.algorithms.Transport.throats", "modules/generated/openpnm.algorithms.Transport.to_indices", "modules/generated/openpnm.algorithms.Transport.to_mask", "modules/generated/openpnm.algorithms.Transport.update", "modules/generated/openpnm.algorithms.Transport.values", "modules/generated/openpnm.core", "modules/generated/openpnm.core.Base2", "modules/generated/openpnm.core.Base2.clear", "modules/generated/openpnm.core.Base2.copy", "modules/generated/openpnm.core.Base2.fromkeys", "modules/generated/openpnm.core.Base2.get", "modules/generated/openpnm.core.Base2.get_conduit_data", "modules/generated/openpnm.core.Base2.interpolate_data", "modules/generated/openpnm.core.Base2.items", "modules/generated/openpnm.core.Base2.keys", "modules/generated/openpnm.core.Base2.pop", "modules/generated/openpnm.core.Base2.popitem", "modules/generated/openpnm.core.Base2.props", "modules/generated/openpnm.core.Base2.setdefault", "modules/generated/openpnm.core.Base2.to_indices", "modules/generated/openpnm.core.Base2.to_mask", "modules/generated/openpnm.core.Base2.update", "modules/generated/openpnm.core.Base2.values", "modules/generated/openpnm.core.Domain", "modules/generated/openpnm.core.Domain.add_model", "modules/generated/openpnm.core.Domain.add_model_collection", "modules/generated/openpnm.core.Domain.clear", "modules/generated/openpnm.core.Domain.copy", "modules/generated/openpnm.core.Domain.filter_by_label", "modules/generated/openpnm.core.Domain.fromkeys", "modules/generated/openpnm.core.Domain.get", "modules/generated/openpnm.core.Domain.get_conduit_data", "modules/generated/openpnm.core.Domain.interpolate_data", "modules/generated/openpnm.core.Domain.items", "modules/generated/openpnm.core.Domain.keys", "modules/generated/openpnm.core.Domain.labels", "modules/generated/openpnm.core.Domain.num_pores", "modules/generated/openpnm.core.Domain.num_throats", "modules/generated/openpnm.core.Domain.pop", "modules/generated/openpnm.core.Domain.popitem", "modules/generated/openpnm.core.Domain.pores", "modules/generated/openpnm.core.Domain.props", "modules/generated/openpnm.core.Domain.regenerate_models", "modules/generated/openpnm.core.Domain.run_model", "modules/generated/openpnm.core.Domain.set_label", "modules/generated/openpnm.core.Domain.setdefault", "modules/generated/openpnm.core.Domain.throats", "modules/generated/openpnm.core.Domain.to_indices", "modules/generated/openpnm.core.Domain.to_mask", "modules/generated/openpnm.core.Domain.update", "modules/generated/openpnm.core.Domain.values", "modules/generated/openpnm.core.LabelMixin", "modules/generated/openpnm.core.LabelMixin.filter_by_label", "modules/generated/openpnm.core.LabelMixin.labels", "modules/generated/openpnm.core.LabelMixin.num_pores", "modules/generated/openpnm.core.LabelMixin.num_throats", "modules/generated/openpnm.core.LabelMixin.pores", "modules/generated/openpnm.core.LabelMixin.set_label", "modules/generated/openpnm.core.LabelMixin.throats", "modules/generated/openpnm.core.ModelWrapper", "modules/generated/openpnm.core.ModelWrapper.__call__", "modules/generated/openpnm.core.ModelWrapper.clear", "modules/generated/openpnm.core.ModelWrapper.copy", "modules/generated/openpnm.core.ModelWrapper.fromkeys", "modules/generated/openpnm.core.ModelWrapper.get", "modules/generated/openpnm.core.ModelWrapper.items", "modules/generated/openpnm.core.ModelWrapper.keys", "modules/generated/openpnm.core.ModelWrapper.pop", "modules/generated/openpnm.core.ModelWrapper.popitem", "modules/generated/openpnm.core.ModelWrapper.setdefault", "modules/generated/openpnm.core.ModelWrapper.update", "modules/generated/openpnm.core.ModelWrapper.values", "modules/generated/openpnm.core.ModelsDict", "modules/generated/openpnm.core.ModelsDict.clear", "modules/generated/openpnm.core.ModelsDict.copy", "modules/generated/openpnm.core.ModelsDict.dependency_graph", "modules/generated/openpnm.core.ModelsDict.dependency_list", "modules/generated/openpnm.core.ModelsDict.dependency_map", "modules/generated/openpnm.core.ModelsDict.fromkeys", "modules/generated/openpnm.core.ModelsDict.get", "modules/generated/openpnm.core.ModelsDict.items", "modules/generated/openpnm.core.ModelsDict.keys", "modules/generated/openpnm.core.ModelsDict.pop", "modules/generated/openpnm.core.ModelsDict.popitem", "modules/generated/openpnm.core.ModelsDict.setdefault", "modules/generated/openpnm.core.ModelsDict.update", "modules/generated/openpnm.core.ModelsDict.values", "modules/generated/openpnm.core.ModelsMixin2", "modules/generated/openpnm.core.ModelsMixin2.add_model", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models", "modules/generated/openpnm.core.ModelsMixin2.run_model", "modules/generated/openpnm.core.ParserMixin", "modules/generated/openpnm.integrators", "modules/generated/openpnm.integrators.Integrator", "modules/generated/openpnm.integrators.ScipyRK45", "modules/generated/openpnm.integrators.ScipyRK45.solve", "modules/generated/openpnm.io", "modules/generated/openpnm.io.network_from_csv", "modules/generated/openpnm.io.network_from_jsongraph", "modules/generated/openpnm.io.network_from_marock", "modules/generated/openpnm.io.network_from_networkx", "modules/generated/openpnm.io.network_from_pergeos", "modules/generated/openpnm.io.network_from_porespy", "modules/generated/openpnm.io.network_from_statoil", "modules/generated/openpnm.io.network_to_comsol", "modules/generated/openpnm.io.network_to_csv", "modules/generated/openpnm.io.network_to_jsongraph", "modules/generated/openpnm.io.network_to_networkx", "modules/generated/openpnm.io.network_to_pandas", "modules/generated/openpnm.io.network_to_pergeos", "modules/generated/openpnm.io.network_to_salome", "modules/generated/openpnm.io.network_to_stl", "modules/generated/openpnm.io.print_hdf5", "modules/generated/openpnm.io.project_to_csv", "modules/generated/openpnm.io.project_to_dict", "modules/generated/openpnm.io.project_to_hdf5", "modules/generated/openpnm.io.project_to_pandas", "modules/generated/openpnm.io.project_to_paraview", "modules/generated/openpnm.io.project_to_vtk", "modules/generated/openpnm.io.project_to_xdmf", "modules/generated/openpnm.models", "modules/generated/openpnm.models.collections", "modules/generated/openpnm.models.collections.geometry", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles", "modules/generated/openpnm.models.collections.network", "modules/generated/openpnm.models.collections.phase", "modules/generated/openpnm.models.collections.phase.air", "modules/generated/openpnm.models.collections.phase.gas", "modules/generated/openpnm.models.collections.phase.liquid", "modules/generated/openpnm.models.collections.phase.mercury", "modules/generated/openpnm.models.collections.phase.water", "modules/generated/openpnm.models.collections.physics", "modules/generated/openpnm.models.collections.physics.basic", "modules/generated/openpnm.models.collections.physics.standard", "modules/generated/openpnm.models.geometry", "modules/generated/openpnm.models.geometry.conduit_lengths", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square", "modules/generated/openpnm.models.geometry.pore_seed", "modules/generated/openpnm.models.geometry.pore_seed.random", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated", "modules/generated/openpnm.models.geometry.pore_size", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere", "modules/generated/openpnm.models.geometry.pore_size.normal", "modules/generated/openpnm.models.geometry.pore_size.random", "modules/generated/openpnm.models.geometry.pore_size.weibull", "modules/generated/openpnm.models.geometry.pore_surface_area", "modules/generated/openpnm.models.geometry.pore_surface_area.circle", "modules/generated/openpnm.models.geometry.pore_surface_area.cube", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere", "modules/generated/openpnm.models.geometry.pore_surface_area.square", "modules/generated/openpnm.models.geometry.pore_volume", "modules/generated/openpnm.models.geometry.pore_volume.circle", "modules/generated/openpnm.models.geometry.pore_volume.cube", "modules/generated/openpnm.models.geometry.pore_volume.effective", "modules/generated/openpnm.models.geometry.pore_volume.sphere", "modules/generated/openpnm.models.geometry.pore_volume.square", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow", "modules/generated/openpnm.models.geometry.throat_centroid", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle", "modules/generated/openpnm.models.geometry.throat_endpoints", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_perimeter", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle", "modules/generated/openpnm.models.geometry.throat_seed", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_seed.random", "modules/generated/openpnm.models.geometry.throat_size", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution", "modules/generated/openpnm.models.geometry.throat_size.normal", "modules/generated/openpnm.models.geometry.throat_size.random", "modules/generated/openpnm.models.geometry.throat_size.weibull", "modules/generated/openpnm.models.geometry.throat_surface_area", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle", "modules/generated/openpnm.models.geometry.throat_vector", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore", "modules/generated/openpnm.models.geometry.throat_volume", "modules/generated/openpnm.models.geometry.throat_volume.cuboid", "modules/generated/openpnm.models.geometry.throat_volume.cylinder", "modules/generated/openpnm.models.geometry.throat_volume.extrusion", "modules/generated/openpnm.models.geometry.throat_volume.lens", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring", "modules/generated/openpnm.models.geometry.throat_volume.rectangle", "modules/generated/openpnm.models.misc", "modules/generated/openpnm.models.misc.blank", "modules/generated/openpnm.models.misc.clip", "modules/generated/openpnm.models.misc.constant", "modules/generated/openpnm.models.misc.difference", "modules/generated/openpnm.models.misc.fraction", "modules/generated/openpnm.models.misc.from_neighbor_pores", "modules/generated/openpnm.models.misc.from_neighbor_throats", "modules/generated/openpnm.models.misc.generic_distribution", "modules/generated/openpnm.models.misc.generic_function", "modules/generated/openpnm.models.misc.invert", "modules/generated/openpnm.models.misc.linear", "modules/generated/openpnm.models.misc.match_histogram", "modules/generated/openpnm.models.misc.normal", "modules/generated/openpnm.models.misc.normalize", "modules/generated/openpnm.models.misc.polynomial", "modules/generated/openpnm.models.misc.product", "modules/generated/openpnm.models.misc.random", "modules/generated/openpnm.models.misc.scaled", "modules/generated/openpnm.models.misc.summation", "modules/generated/openpnm.models.misc.weibull", "modules/generated/openpnm.models.network", "modules/generated/openpnm.models.network.bidirectional_throats", "modules/generated/openpnm.models.network.cluster_number", "modules/generated/openpnm.models.network.cluster_size", "modules/generated/openpnm.models.network.coordination_number", "modules/generated/openpnm.models.network.count_coincident_pores", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_pore", "modules/generated/openpnm.models.network.duplicate_throats", "modules/generated/openpnm.models.network.find_coincident_pores", "modules/generated/openpnm.models.network.headless_throats", "modules/generated/openpnm.models.network.isolated_pores", "modules/generated/openpnm.models.network.looped_throats", "modules/generated/openpnm.models.network.pore_to_pore_distance", "modules/generated/openpnm.models.network.reversed_throats", "modules/generated/openpnm.models.phase", "modules/generated/openpnm.models.phase.chemicals_wrapper", "modules/generated/openpnm.models.phase.critical_props", "modules/generated/openpnm.models.phase.density", "modules/generated/openpnm.models.phase.density.ideal_gas", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD", "modules/generated/openpnm.models.phase.density.mass_to_molar", "modules/generated/openpnm.models.phase.density.water_correlation", "modules/generated/openpnm.models.phase.diffusivity", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc", "modules/generated/openpnm.models.phase.heat_capacity", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp", "modules/generated/openpnm.models.phase.misc", "modules/generated/openpnm.models.phase.misc.mix_and_match", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures", "modules/generated/openpnm.models.phase.mixtures.from_component", "modules/generated/openpnm.models.phase.mixtures.mixing_rule", "modules/generated/openpnm.models.phase.mixtures.mole_summation", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures.salinity", "modules/generated/openpnm.models.phase.partition_coefficient", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water", "modules/generated/openpnm.models.phase.surface_tension", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb", "modules/generated/openpnm.models.phase.surface_tension.water_correlation", "modules/generated/openpnm.models.phase.thermal_conductivity", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation", "modules/generated/openpnm.models.phase.vapor_pressure", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation", "modules/generated/openpnm.models.phase.viscosity", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls", "modules/generated/openpnm.models.phase.viscosity.water_correlation", "modules/generated/openpnm.models.physics", "modules/generated/openpnm.models.physics.ad_dif_conductance", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif", "modules/generated/openpnm.models.physics.capillary_pressure", "modules/generated/openpnm.models.physics.capillary_pressure.purcell", "modules/generated/openpnm.models.physics.capillary_pressure.washburn", "modules/generated/openpnm.models.physics.diffusive_conductance", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion", "modules/generated/openpnm.models.physics.electrical_conductance", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors", "modules/generated/openpnm.models.physics.hydraulic_conductance", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt", "modules/generated/openpnm.models.physics.meniscus", "modules/generated/openpnm.models.physics.meniscus.general_toroidal", "modules/generated/openpnm.models.physics.meniscus.purcell", "modules/generated/openpnm.models.physics.meniscus.sinusoidal", "modules/generated/openpnm.models.physics.multiphase", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance", "modules/generated/openpnm.models.physics.multiphase.late_filling", "modules/generated/openpnm.models.physics.source_terms", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage", "modules/generated/openpnm.models.physics.source_terms.exponential", "modules/generated/openpnm.models.physics.source_terms.general_symbolic", "modules/generated/openpnm.models.physics.source_terms.linear", "modules/generated/openpnm.models.physics.source_terms.logarithm", "modules/generated/openpnm.models.physics.source_terms.natural_exponential", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm", "modules/generated/openpnm.models.physics.source_terms.power_law", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics", "modules/generated/openpnm.models.physics.thermal_conductance", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors", "modules/generated/openpnm.network", "modules/generated/openpnm.network.BodyCenteredCubic", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.BodyCenteredCubic.add_model", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection", "modules/generated/openpnm.network.BodyCenteredCubic.clear", "modules/generated/openpnm.network.BodyCenteredCubic.copy", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys", "modules/generated/openpnm.network.BodyCenteredCubic.get", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data", "modules/generated/openpnm.network.BodyCenteredCubic.items", "modules/generated/openpnm.network.BodyCenteredCubic.keys", "modules/generated/openpnm.network.BodyCenteredCubic.labels", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats", "modules/generated/openpnm.network.BodyCenteredCubic.pop", "modules/generated/openpnm.network.BodyCenteredCubic.popitem", "modules/generated/openpnm.network.BodyCenteredCubic.pores", "modules/generated/openpnm.network.BodyCenteredCubic.props", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models", "modules/generated/openpnm.network.BodyCenteredCubic.run_model", "modules/generated/openpnm.network.BodyCenteredCubic.set_label", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault", "modules/generated/openpnm.network.BodyCenteredCubic.throats", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask", "modules/generated/openpnm.network.BodyCenteredCubic.update", "modules/generated/openpnm.network.BodyCenteredCubic.values", "modules/generated/openpnm.network.Cubic", "modules/generated/openpnm.network.Cubic.add_boundary_pores", "modules/generated/openpnm.network.Cubic.add_model", "modules/generated/openpnm.network.Cubic.add_model_collection", "modules/generated/openpnm.network.Cubic.clear", "modules/generated/openpnm.network.Cubic.copy", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix", "modules/generated/openpnm.network.Cubic.create_incidence_matrix", "modules/generated/openpnm.network.Cubic.filter_by_label", "modules/generated/openpnm.network.Cubic.find_connected_pores", "modules/generated/openpnm.network.Cubic.find_connecting_throat", "modules/generated/openpnm.network.Cubic.find_nearby_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_throats", "modules/generated/openpnm.network.Cubic.fromkeys", "modules/generated/openpnm.network.Cubic.get", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix", "modules/generated/openpnm.network.Cubic.get_conduit_data", "modules/generated/openpnm.network.Cubic.get_incidence_matrix", "modules/generated/openpnm.network.Cubic.interpolate_data", "modules/generated/openpnm.network.Cubic.items", "modules/generated/openpnm.network.Cubic.keys", "modules/generated/openpnm.network.Cubic.labels", "modules/generated/openpnm.network.Cubic.num_neighbors", "modules/generated/openpnm.network.Cubic.num_pores", "modules/generated/openpnm.network.Cubic.num_throats", "modules/generated/openpnm.network.Cubic.pop", "modules/generated/openpnm.network.Cubic.popitem", "modules/generated/openpnm.network.Cubic.pores", "modules/generated/openpnm.network.Cubic.props", "modules/generated/openpnm.network.Cubic.regenerate_models", "modules/generated/openpnm.network.Cubic.run_model", "modules/generated/openpnm.network.Cubic.set_label", "modules/generated/openpnm.network.Cubic.setdefault", "modules/generated/openpnm.network.Cubic.throats", "modules/generated/openpnm.network.Cubic.to_indices", "modules/generated/openpnm.network.Cubic.to_mask", "modules/generated/openpnm.network.Cubic.update", "modules/generated/openpnm.network.Cubic.values", "modules/generated/openpnm.network.CubicTemplate", "modules/generated/openpnm.network.CubicTemplate.add_model", "modules/generated/openpnm.network.CubicTemplate.add_model_collection", "modules/generated/openpnm.network.CubicTemplate.clear", "modules/generated/openpnm.network.CubicTemplate.copy", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.filter_by_label", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats", "modules/generated/openpnm.network.CubicTemplate.fromkeys", "modules/generated/openpnm.network.CubicTemplate.get", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.interpolate_data", "modules/generated/openpnm.network.CubicTemplate.items", "modules/generated/openpnm.network.CubicTemplate.keys", "modules/generated/openpnm.network.CubicTemplate.labels", "modules/generated/openpnm.network.CubicTemplate.num_neighbors", "modules/generated/openpnm.network.CubicTemplate.num_pores", "modules/generated/openpnm.network.CubicTemplate.num_throats", "modules/generated/openpnm.network.CubicTemplate.pop", "modules/generated/openpnm.network.CubicTemplate.popitem", "modules/generated/openpnm.network.CubicTemplate.pores", "modules/generated/openpnm.network.CubicTemplate.props", "modules/generated/openpnm.network.CubicTemplate.regenerate_models", "modules/generated/openpnm.network.CubicTemplate.run_model", "modules/generated/openpnm.network.CubicTemplate.set_label", "modules/generated/openpnm.network.CubicTemplate.setdefault", "modules/generated/openpnm.network.CubicTemplate.throats", "modules/generated/openpnm.network.CubicTemplate.to_indices", "modules/generated/openpnm.network.CubicTemplate.to_mask", "modules/generated/openpnm.network.CubicTemplate.update", "modules/generated/openpnm.network.CubicTemplate.values", "modules/generated/openpnm.network.Delaunay", "modules/generated/openpnm.network.Delaunay.add_model", "modules/generated/openpnm.network.Delaunay.add_model_collection", "modules/generated/openpnm.network.Delaunay.clear", "modules/generated/openpnm.network.Delaunay.copy", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix", "modules/generated/openpnm.network.Delaunay.filter_by_label", "modules/generated/openpnm.network.Delaunay.find_connected_pores", "modules/generated/openpnm.network.Delaunay.find_connecting_throat", "modules/generated/openpnm.network.Delaunay.find_nearby_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats", "modules/generated/openpnm.network.Delaunay.fromkeys", "modules/generated/openpnm.network.Delaunay.get", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.get_conduit_data", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix", "modules/generated/openpnm.network.Delaunay.interpolate_data", "modules/generated/openpnm.network.Delaunay.items", "modules/generated/openpnm.network.Delaunay.keys", "modules/generated/openpnm.network.Delaunay.labels", "modules/generated/openpnm.network.Delaunay.num_neighbors", "modules/generated/openpnm.network.Delaunay.num_pores", "modules/generated/openpnm.network.Delaunay.num_throats", "modules/generated/openpnm.network.Delaunay.pop", "modules/generated/openpnm.network.Delaunay.popitem", "modules/generated/openpnm.network.Delaunay.pores", "modules/generated/openpnm.network.Delaunay.props", "modules/generated/openpnm.network.Delaunay.regenerate_models", "modules/generated/openpnm.network.Delaunay.run_model", "modules/generated/openpnm.network.Delaunay.set_label", "modules/generated/openpnm.network.Delaunay.setdefault", "modules/generated/openpnm.network.Delaunay.throats", "modules/generated/openpnm.network.Delaunay.to_indices", "modules/generated/openpnm.network.Delaunay.to_mask", "modules/generated/openpnm.network.Delaunay.update", "modules/generated/openpnm.network.Delaunay.values", "modules/generated/openpnm.network.DelaunayVoronoiDual", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys", "modules/generated/openpnm.network.DelaunayVoronoiDual.get", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.items", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.props", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask", "modules/generated/openpnm.network.DelaunayVoronoiDual.update", "modules/generated/openpnm.network.DelaunayVoronoiDual.values", "modules/generated/openpnm.network.Demo", "modules/generated/openpnm.network.Demo.add_boundary_pores", "modules/generated/openpnm.network.Demo.add_model", "modules/generated/openpnm.network.Demo.add_model_collection", "modules/generated/openpnm.network.Demo.clear", "modules/generated/openpnm.network.Demo.copy", "modules/generated/openpnm.network.Demo.create_adjacency_matrix", "modules/generated/openpnm.network.Demo.create_incidence_matrix", "modules/generated/openpnm.network.Demo.filter_by_label", "modules/generated/openpnm.network.Demo.find_connected_pores", "modules/generated/openpnm.network.Demo.find_connecting_throat", "modules/generated/openpnm.network.Demo.find_nearby_pores", "modules/generated/openpnm.network.Demo.find_neighbor_pores", "modules/generated/openpnm.network.Demo.find_neighbor_throats", "modules/generated/openpnm.network.Demo.fromkeys", "modules/generated/openpnm.network.Demo.get", "modules/generated/openpnm.network.Demo.get_adjacency_matrix", "modules/generated/openpnm.network.Demo.get_conduit_data", "modules/generated/openpnm.network.Demo.get_incidence_matrix", "modules/generated/openpnm.network.Demo.interpolate_data", "modules/generated/openpnm.network.Demo.items", "modules/generated/openpnm.network.Demo.keys", "modules/generated/openpnm.network.Demo.labels", "modules/generated/openpnm.network.Demo.num_neighbors", "modules/generated/openpnm.network.Demo.num_pores", "modules/generated/openpnm.network.Demo.num_throats", "modules/generated/openpnm.network.Demo.pop", "modules/generated/openpnm.network.Demo.popitem", "modules/generated/openpnm.network.Demo.pores", "modules/generated/openpnm.network.Demo.props", "modules/generated/openpnm.network.Demo.regenerate_models", "modules/generated/openpnm.network.Demo.run_model", "modules/generated/openpnm.network.Demo.set_label", "modules/generated/openpnm.network.Demo.setdefault", "modules/generated/openpnm.network.Demo.throats", "modules/generated/openpnm.network.Demo.to_indices", "modules/generated/openpnm.network.Demo.to_mask", "modules/generated/openpnm.network.Demo.update", "modules/generated/openpnm.network.Demo.values", "modules/generated/openpnm.network.FaceCenteredCubic", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.FaceCenteredCubic.add_model", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection", "modules/generated/openpnm.network.FaceCenteredCubic.clear", "modules/generated/openpnm.network.FaceCenteredCubic.copy", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys", "modules/generated/openpnm.network.FaceCenteredCubic.get", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data", "modules/generated/openpnm.network.FaceCenteredCubic.items", "modules/generated/openpnm.network.FaceCenteredCubic.keys", "modules/generated/openpnm.network.FaceCenteredCubic.labels", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats", "modules/generated/openpnm.network.FaceCenteredCubic.pop", "modules/generated/openpnm.network.FaceCenteredCubic.popitem", "modules/generated/openpnm.network.FaceCenteredCubic.pores", "modules/generated/openpnm.network.FaceCenteredCubic.props", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models", "modules/generated/openpnm.network.FaceCenteredCubic.run_model", "modules/generated/openpnm.network.FaceCenteredCubic.set_label", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault", "modules/generated/openpnm.network.FaceCenteredCubic.throats", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask", "modules/generated/openpnm.network.FaceCenteredCubic.update", "modules/generated/openpnm.network.FaceCenteredCubic.values", "modules/generated/openpnm.network.Network", "modules/generated/openpnm.network.Network.add_model", "modules/generated/openpnm.network.Network.add_model_collection", "modules/generated/openpnm.network.Network.clear", "modules/generated/openpnm.network.Network.copy", "modules/generated/openpnm.network.Network.create_adjacency_matrix", "modules/generated/openpnm.network.Network.create_incidence_matrix", "modules/generated/openpnm.network.Network.filter_by_label", "modules/generated/openpnm.network.Network.find_connected_pores", "modules/generated/openpnm.network.Network.find_connecting_throat", "modules/generated/openpnm.network.Network.find_nearby_pores", "modules/generated/openpnm.network.Network.find_neighbor_pores", "modules/generated/openpnm.network.Network.find_neighbor_throats", "modules/generated/openpnm.network.Network.fromkeys", "modules/generated/openpnm.network.Network.get", "modules/generated/openpnm.network.Network.get_adjacency_matrix", "modules/generated/openpnm.network.Network.get_conduit_data", "modules/generated/openpnm.network.Network.get_incidence_matrix", "modules/generated/openpnm.network.Network.interpolate_data", "modules/generated/openpnm.network.Network.items", "modules/generated/openpnm.network.Network.keys", "modules/generated/openpnm.network.Network.labels", "modules/generated/openpnm.network.Network.num_neighbors", "modules/generated/openpnm.network.Network.num_pores", "modules/generated/openpnm.network.Network.num_throats", "modules/generated/openpnm.network.Network.pop", "modules/generated/openpnm.network.Network.popitem", "modules/generated/openpnm.network.Network.pores", "modules/generated/openpnm.network.Network.props", "modules/generated/openpnm.network.Network.regenerate_models", "modules/generated/openpnm.network.Network.run_model", "modules/generated/openpnm.network.Network.set_label", "modules/generated/openpnm.network.Network.setdefault", "modules/generated/openpnm.network.Network.throats", "modules/generated/openpnm.network.Network.to_indices", "modules/generated/openpnm.network.Network.to_mask", "modules/generated/openpnm.network.Network.update", "modules/generated/openpnm.network.Network.values", "modules/generated/openpnm.network.Voronoi", "modules/generated/openpnm.network.Voronoi.add_model", "modules/generated/openpnm.network.Voronoi.add_model_collection", "modules/generated/openpnm.network.Voronoi.clear", "modules/generated/openpnm.network.Voronoi.copy", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix", "modules/generated/openpnm.network.Voronoi.filter_by_label", "modules/generated/openpnm.network.Voronoi.find_connected_pores", "modules/generated/openpnm.network.Voronoi.find_connecting_throat", "modules/generated/openpnm.network.Voronoi.find_nearby_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats", "modules/generated/openpnm.network.Voronoi.fromkeys", "modules/generated/openpnm.network.Voronoi.get", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.get_conduit_data", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix", "modules/generated/openpnm.network.Voronoi.interpolate_data", "modules/generated/openpnm.network.Voronoi.items", "modules/generated/openpnm.network.Voronoi.keys", "modules/generated/openpnm.network.Voronoi.labels", "modules/generated/openpnm.network.Voronoi.num_neighbors", "modules/generated/openpnm.network.Voronoi.num_pores", "modules/generated/openpnm.network.Voronoi.num_throats", "modules/generated/openpnm.network.Voronoi.pop", "modules/generated/openpnm.network.Voronoi.popitem", "modules/generated/openpnm.network.Voronoi.pores", "modules/generated/openpnm.network.Voronoi.props", "modules/generated/openpnm.network.Voronoi.regenerate_models", "modules/generated/openpnm.network.Voronoi.run_model", "modules/generated/openpnm.network.Voronoi.set_label", "modules/generated/openpnm.network.Voronoi.setdefault", "modules/generated/openpnm.network.Voronoi.throats", "modules/generated/openpnm.network.Voronoi.to_indices", "modules/generated/openpnm.network.Voronoi.to_mask", "modules/generated/openpnm.network.Voronoi.update", "modules/generated/openpnm.network.Voronoi.values", "modules/generated/openpnm.phase", "modules/generated/openpnm.phase.Air", "modules/generated/openpnm.phase.Air.add_model", "modules/generated/openpnm.phase.Air.add_model_collection", "modules/generated/openpnm.phase.Air.clear", "modules/generated/openpnm.phase.Air.copy", "modules/generated/openpnm.phase.Air.filter_by_label", "modules/generated/openpnm.phase.Air.fromkeys", "modules/generated/openpnm.phase.Air.get", "modules/generated/openpnm.phase.Air.get_conduit_data", "modules/generated/openpnm.phase.Air.interpolate_data", "modules/generated/openpnm.phase.Air.items", "modules/generated/openpnm.phase.Air.keys", "modules/generated/openpnm.phase.Air.labels", "modules/generated/openpnm.phase.Air.num_pores", "modules/generated/openpnm.phase.Air.num_throats", "modules/generated/openpnm.phase.Air.pop", "modules/generated/openpnm.phase.Air.popitem", "modules/generated/openpnm.phase.Air.pores", "modules/generated/openpnm.phase.Air.props", "modules/generated/openpnm.phase.Air.regenerate_models", "modules/generated/openpnm.phase.Air.run_model", "modules/generated/openpnm.phase.Air.set_label", "modules/generated/openpnm.phase.Air.setdefault", "modules/generated/openpnm.phase.Air.throats", "modules/generated/openpnm.phase.Air.to_indices", "modules/generated/openpnm.phase.Air.to_mask", "modules/generated/openpnm.phase.Air.update", "modules/generated/openpnm.phase.Air.values", "modules/generated/openpnm.phase.BinaryGas", "modules/generated/openpnm.phase.BinaryGas.add_comp", "modules/generated/openpnm.phase.BinaryGas.add_model", "modules/generated/openpnm.phase.BinaryGas.add_model_collection", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health", "modules/generated/openpnm.phase.BinaryGas.clear", "modules/generated/openpnm.phase.BinaryGas.copy", "modules/generated/openpnm.phase.BinaryGas.filter_by_label", "modules/generated/openpnm.phase.BinaryGas.fromkeys", "modules/generated/openpnm.phase.BinaryGas.get", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals", "modules/generated/openpnm.phase.BinaryGas.interpolate_data", "modules/generated/openpnm.phase.BinaryGas.items", "modules/generated/openpnm.phase.BinaryGas.keys", "modules/generated/openpnm.phase.BinaryGas.labels", "modules/generated/openpnm.phase.BinaryGas.num_pores", "modules/generated/openpnm.phase.BinaryGas.num_throats", "modules/generated/openpnm.phase.BinaryGas.pop", "modules/generated/openpnm.phase.BinaryGas.popitem", "modules/generated/openpnm.phase.BinaryGas.pores", "modules/generated/openpnm.phase.BinaryGas.props", "modules/generated/openpnm.phase.BinaryGas.regenerate_models", "modules/generated/openpnm.phase.BinaryGas.remove_comp", "modules/generated/openpnm.phase.BinaryGas.run_model", "modules/generated/openpnm.phase.BinaryGas.set_label", "modules/generated/openpnm.phase.BinaryGas.setdefault", "modules/generated/openpnm.phase.BinaryGas.throats", "modules/generated/openpnm.phase.BinaryGas.to_indices", "modules/generated/openpnm.phase.BinaryGas.to_mask", "modules/generated/openpnm.phase.BinaryGas.update", "modules/generated/openpnm.phase.BinaryGas.values", "modules/generated/openpnm.phase.BinaryGas.y", "modules/generated/openpnm.phase.GasMixture", "modules/generated/openpnm.phase.GasMixture.add_comp", "modules/generated/openpnm.phase.GasMixture.add_model", "modules/generated/openpnm.phase.GasMixture.add_model_collection", "modules/generated/openpnm.phase.GasMixture.check_mixture_health", "modules/generated/openpnm.phase.GasMixture.clear", "modules/generated/openpnm.phase.GasMixture.copy", "modules/generated/openpnm.phase.GasMixture.filter_by_label", "modules/generated/openpnm.phase.GasMixture.fromkeys", "modules/generated/openpnm.phase.GasMixture.get", "modules/generated/openpnm.phase.GasMixture.get_comp_vals", "modules/generated/openpnm.phase.GasMixture.get_conduit_data", "modules/generated/openpnm.phase.GasMixture.get_mix_vals", "modules/generated/openpnm.phase.GasMixture.interpolate_data", "modules/generated/openpnm.phase.GasMixture.items", "modules/generated/openpnm.phase.GasMixture.keys", "modules/generated/openpnm.phase.GasMixture.labels", "modules/generated/openpnm.phase.GasMixture.num_pores", "modules/generated/openpnm.phase.GasMixture.num_throats", "modules/generated/openpnm.phase.GasMixture.pop", "modules/generated/openpnm.phase.GasMixture.popitem", "modules/generated/openpnm.phase.GasMixture.pores", "modules/generated/openpnm.phase.GasMixture.props", "modules/generated/openpnm.phase.GasMixture.regenerate_models", "modules/generated/openpnm.phase.GasMixture.remove_comp", "modules/generated/openpnm.phase.GasMixture.run_model", "modules/generated/openpnm.phase.GasMixture.set_label", "modules/generated/openpnm.phase.GasMixture.setdefault", "modules/generated/openpnm.phase.GasMixture.throats", "modules/generated/openpnm.phase.GasMixture.to_indices", "modules/generated/openpnm.phase.GasMixture.to_mask", "modules/generated/openpnm.phase.GasMixture.update", "modules/generated/openpnm.phase.GasMixture.values", "modules/generated/openpnm.phase.GasMixture.y", "modules/generated/openpnm.phase.LiquidMixture", "modules/generated/openpnm.phase.LiquidMixture.add_comp", "modules/generated/openpnm.phase.LiquidMixture.add_model", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.LiquidMixture.clear", "modules/generated/openpnm.phase.LiquidMixture.copy", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label", "modules/generated/openpnm.phase.LiquidMixture.fromkeys", "modules/generated/openpnm.phase.LiquidMixture.get", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data", "modules/generated/openpnm.phase.LiquidMixture.items", "modules/generated/openpnm.phase.LiquidMixture.keys", "modules/generated/openpnm.phase.LiquidMixture.labels", "modules/generated/openpnm.phase.LiquidMixture.num_pores", "modules/generated/openpnm.phase.LiquidMixture.num_throats", "modules/generated/openpnm.phase.LiquidMixture.pop", "modules/generated/openpnm.phase.LiquidMixture.popitem", "modules/generated/openpnm.phase.LiquidMixture.pores", "modules/generated/openpnm.phase.LiquidMixture.props", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models", "modules/generated/openpnm.phase.LiquidMixture.remove_comp", "modules/generated/openpnm.phase.LiquidMixture.run_model", "modules/generated/openpnm.phase.LiquidMixture.set_label", "modules/generated/openpnm.phase.LiquidMixture.setdefault", "modules/generated/openpnm.phase.LiquidMixture.throats", "modules/generated/openpnm.phase.LiquidMixture.to_indices", "modules/generated/openpnm.phase.LiquidMixture.to_mask", "modules/generated/openpnm.phase.LiquidMixture.update", "modules/generated/openpnm.phase.LiquidMixture.values", "modules/generated/openpnm.phase.LiquidMixture.x", "modules/generated/openpnm.phase.Mercury", "modules/generated/openpnm.phase.Mercury.add_model", "modules/generated/openpnm.phase.Mercury.add_model_collection", "modules/generated/openpnm.phase.Mercury.clear", "modules/generated/openpnm.phase.Mercury.copy", "modules/generated/openpnm.phase.Mercury.filter_by_label", "modules/generated/openpnm.phase.Mercury.fromkeys", "modules/generated/openpnm.phase.Mercury.get", "modules/generated/openpnm.phase.Mercury.get_conduit_data", "modules/generated/openpnm.phase.Mercury.interpolate_data", "modules/generated/openpnm.phase.Mercury.items", "modules/generated/openpnm.phase.Mercury.keys", "modules/generated/openpnm.phase.Mercury.labels", "modules/generated/openpnm.phase.Mercury.num_pores", "modules/generated/openpnm.phase.Mercury.num_throats", "modules/generated/openpnm.phase.Mercury.pop", "modules/generated/openpnm.phase.Mercury.popitem", "modules/generated/openpnm.phase.Mercury.pores", "modules/generated/openpnm.phase.Mercury.props", "modules/generated/openpnm.phase.Mercury.regenerate_models", "modules/generated/openpnm.phase.Mercury.run_model", "modules/generated/openpnm.phase.Mercury.set_label", "modules/generated/openpnm.phase.Mercury.setdefault", "modules/generated/openpnm.phase.Mercury.throats", "modules/generated/openpnm.phase.Mercury.to_indices", "modules/generated/openpnm.phase.Mercury.to_mask", "modules/generated/openpnm.phase.Mercury.update", "modules/generated/openpnm.phase.Mercury.values", "modules/generated/openpnm.phase.Mixture", "modules/generated/openpnm.phase.Mixture.add_comp", "modules/generated/openpnm.phase.Mixture.add_model", "modules/generated/openpnm.phase.Mixture.add_model_collection", "modules/generated/openpnm.phase.Mixture.check_mixture_health", "modules/generated/openpnm.phase.Mixture.clear", "modules/generated/openpnm.phase.Mixture.copy", "modules/generated/openpnm.phase.Mixture.filter_by_label", "modules/generated/openpnm.phase.Mixture.fromkeys", "modules/generated/openpnm.phase.Mixture.get", "modules/generated/openpnm.phase.Mixture.get_comp_vals", "modules/generated/openpnm.phase.Mixture.get_conduit_data", "modules/generated/openpnm.phase.Mixture.get_mix_vals", "modules/generated/openpnm.phase.Mixture.interpolate_data", "modules/generated/openpnm.phase.Mixture.items", "modules/generated/openpnm.phase.Mixture.keys", "modules/generated/openpnm.phase.Mixture.labels", "modules/generated/openpnm.phase.Mixture.num_pores", "modules/generated/openpnm.phase.Mixture.num_throats", "modules/generated/openpnm.phase.Mixture.pop", "modules/generated/openpnm.phase.Mixture.popitem", "modules/generated/openpnm.phase.Mixture.pores", "modules/generated/openpnm.phase.Mixture.props", "modules/generated/openpnm.phase.Mixture.regenerate_models", "modules/generated/openpnm.phase.Mixture.remove_comp", "modules/generated/openpnm.phase.Mixture.run_model", "modules/generated/openpnm.phase.Mixture.set_label", "modules/generated/openpnm.phase.Mixture.setdefault", "modules/generated/openpnm.phase.Mixture.throats", "modules/generated/openpnm.phase.Mixture.to_indices", "modules/generated/openpnm.phase.Mixture.to_mask", "modules/generated/openpnm.phase.Mixture.update", "modules/generated/openpnm.phase.Mixture.values", "modules/generated/openpnm.phase.Phase", "modules/generated/openpnm.phase.Phase.add_model", "modules/generated/openpnm.phase.Phase.add_model_collection", "modules/generated/openpnm.phase.Phase.clear", "modules/generated/openpnm.phase.Phase.copy", "modules/generated/openpnm.phase.Phase.filter_by_label", "modules/generated/openpnm.phase.Phase.fromkeys", "modules/generated/openpnm.phase.Phase.get", "modules/generated/openpnm.phase.Phase.get_conduit_data", "modules/generated/openpnm.phase.Phase.interpolate_data", "modules/generated/openpnm.phase.Phase.items", "modules/generated/openpnm.phase.Phase.keys", "modules/generated/openpnm.phase.Phase.labels", "modules/generated/openpnm.phase.Phase.num_pores", "modules/generated/openpnm.phase.Phase.num_throats", "modules/generated/openpnm.phase.Phase.pop", "modules/generated/openpnm.phase.Phase.popitem", "modules/generated/openpnm.phase.Phase.pores", "modules/generated/openpnm.phase.Phase.props", "modules/generated/openpnm.phase.Phase.regenerate_models", "modules/generated/openpnm.phase.Phase.run_model", "modules/generated/openpnm.phase.Phase.set_label", "modules/generated/openpnm.phase.Phase.setdefault", "modules/generated/openpnm.phase.Phase.throats", "modules/generated/openpnm.phase.Phase.to_indices", "modules/generated/openpnm.phase.Phase.to_mask", "modules/generated/openpnm.phase.Phase.update", "modules/generated/openpnm.phase.Phase.values", "modules/generated/openpnm.phase.Species", "modules/generated/openpnm.phase.Species.add_model", "modules/generated/openpnm.phase.Species.add_model_collection", "modules/generated/openpnm.phase.Species.clear", "modules/generated/openpnm.phase.Species.copy", "modules/generated/openpnm.phase.Species.filter_by_label", "modules/generated/openpnm.phase.Species.fromkeys", "modules/generated/openpnm.phase.Species.get", "modules/generated/openpnm.phase.Species.get_conduit_data", "modules/generated/openpnm.phase.Species.interpolate_data", "modules/generated/openpnm.phase.Species.items", "modules/generated/openpnm.phase.Species.keys", "modules/generated/openpnm.phase.Species.labels", "modules/generated/openpnm.phase.Species.num_pores", "modules/generated/openpnm.phase.Species.num_throats", "modules/generated/openpnm.phase.Species.pop", "modules/generated/openpnm.phase.Species.popitem", "modules/generated/openpnm.phase.Species.pores", "modules/generated/openpnm.phase.Species.props", "modules/generated/openpnm.phase.Species.regenerate_models", "modules/generated/openpnm.phase.Species.run_model", "modules/generated/openpnm.phase.Species.set_label", "modules/generated/openpnm.phase.Species.setdefault", "modules/generated/openpnm.phase.Species.throats", "modules/generated/openpnm.phase.Species.to_indices", "modules/generated/openpnm.phase.Species.to_mask", "modules/generated/openpnm.phase.Species.update", "modules/generated/openpnm.phase.Species.values", "modules/generated/openpnm.phase.StandardGas", "modules/generated/openpnm.phase.StandardGas.add_model", "modules/generated/openpnm.phase.StandardGas.add_model_collection", "modules/generated/openpnm.phase.StandardGas.clear", "modules/generated/openpnm.phase.StandardGas.copy", "modules/generated/openpnm.phase.StandardGas.filter_by_label", "modules/generated/openpnm.phase.StandardGas.fromkeys", "modules/generated/openpnm.phase.StandardGas.get", "modules/generated/openpnm.phase.StandardGas.get_conduit_data", "modules/generated/openpnm.phase.StandardGas.interpolate_data", "modules/generated/openpnm.phase.StandardGas.items", "modules/generated/openpnm.phase.StandardGas.keys", "modules/generated/openpnm.phase.StandardGas.labels", "modules/generated/openpnm.phase.StandardGas.num_pores", "modules/generated/openpnm.phase.StandardGas.num_throats", "modules/generated/openpnm.phase.StandardGas.pop", "modules/generated/openpnm.phase.StandardGas.popitem", "modules/generated/openpnm.phase.StandardGas.pores", "modules/generated/openpnm.phase.StandardGas.props", "modules/generated/openpnm.phase.StandardGas.regenerate_models", "modules/generated/openpnm.phase.StandardGas.run_model", "modules/generated/openpnm.phase.StandardGas.set_label", "modules/generated/openpnm.phase.StandardGas.setdefault", "modules/generated/openpnm.phase.StandardGas.throats", "modules/generated/openpnm.phase.StandardGas.to_indices", "modules/generated/openpnm.phase.StandardGas.to_mask", "modules/generated/openpnm.phase.StandardGas.update", "modules/generated/openpnm.phase.StandardGas.values", "modules/generated/openpnm.phase.StandardGasMixture", "modules/generated/openpnm.phase.StandardGasMixture.add_comp", "modules/generated/openpnm.phase.StandardGasMixture.add_model", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardGasMixture.clear", "modules/generated/openpnm.phase.StandardGasMixture.copy", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys", "modules/generated/openpnm.phase.StandardGasMixture.get", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data", "modules/generated/openpnm.phase.StandardGasMixture.items", "modules/generated/openpnm.phase.StandardGasMixture.keys", "modules/generated/openpnm.phase.StandardGasMixture.labels", "modules/generated/openpnm.phase.StandardGasMixture.num_pores", "modules/generated/openpnm.phase.StandardGasMixture.num_throats", "modules/generated/openpnm.phase.StandardGasMixture.pop", "modules/generated/openpnm.phase.StandardGasMixture.popitem", "modules/generated/openpnm.phase.StandardGasMixture.pores", "modules/generated/openpnm.phase.StandardGasMixture.props", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp", "modules/generated/openpnm.phase.StandardGasMixture.run_model", "modules/generated/openpnm.phase.StandardGasMixture.set_label", "modules/generated/openpnm.phase.StandardGasMixture.setdefault", "modules/generated/openpnm.phase.StandardGasMixture.throats", "modules/generated/openpnm.phase.StandardGasMixture.to_indices", "modules/generated/openpnm.phase.StandardGasMixture.to_mask", "modules/generated/openpnm.phase.StandardGasMixture.update", "modules/generated/openpnm.phase.StandardGasMixture.values", "modules/generated/openpnm.phase.StandardGasMixture.y", "modules/generated/openpnm.phase.StandardLiquid", "modules/generated/openpnm.phase.StandardLiquid.add_model", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection", "modules/generated/openpnm.phase.StandardLiquid.clear", "modules/generated/openpnm.phase.StandardLiquid.copy", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label", "modules/generated/openpnm.phase.StandardLiquid.fromkeys", "modules/generated/openpnm.phase.StandardLiquid.get", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data", "modules/generated/openpnm.phase.StandardLiquid.items", "modules/generated/openpnm.phase.StandardLiquid.keys", "modules/generated/openpnm.phase.StandardLiquid.labels", "modules/generated/openpnm.phase.StandardLiquid.num_pores", "modules/generated/openpnm.phase.StandardLiquid.num_throats", "modules/generated/openpnm.phase.StandardLiquid.pop", "modules/generated/openpnm.phase.StandardLiquid.popitem", "modules/generated/openpnm.phase.StandardLiquid.pores", "modules/generated/openpnm.phase.StandardLiquid.props", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models", "modules/generated/openpnm.phase.StandardLiquid.run_model", "modules/generated/openpnm.phase.StandardLiquid.set_label", "modules/generated/openpnm.phase.StandardLiquid.setdefault", "modules/generated/openpnm.phase.StandardLiquid.throats", "modules/generated/openpnm.phase.StandardLiquid.to_indices", "modules/generated/openpnm.phase.StandardLiquid.to_mask", "modules/generated/openpnm.phase.StandardLiquid.update", "modules/generated/openpnm.phase.StandardLiquid.values", "modules/generated/openpnm.phase.StandardLiquidMixture", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardLiquidMixture.clear", "modules/generated/openpnm.phase.StandardLiquidMixture.copy", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys", "modules/generated/openpnm.phase.StandardLiquidMixture.get", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data", "modules/generated/openpnm.phase.StandardLiquidMixture.items", "modules/generated/openpnm.phase.StandardLiquidMixture.keys", "modules/generated/openpnm.phase.StandardLiquidMixture.labels", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats", "modules/generated/openpnm.phase.StandardLiquidMixture.pop", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem", "modules/generated/openpnm.phase.StandardLiquidMixture.pores", "modules/generated/openpnm.phase.StandardLiquidMixture.props", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault", "modules/generated/openpnm.phase.StandardLiquidMixture.throats", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask", "modules/generated/openpnm.phase.StandardLiquidMixture.update", "modules/generated/openpnm.phase.StandardLiquidMixture.values", "modules/generated/openpnm.phase.StandardLiquidMixture.x", "modules/generated/openpnm.phase.Water", "modules/generated/openpnm.phase.Water.add_model", "modules/generated/openpnm.phase.Water.add_model_collection", "modules/generated/openpnm.phase.Water.clear", "modules/generated/openpnm.phase.Water.copy", "modules/generated/openpnm.phase.Water.filter_by_label", "modules/generated/openpnm.phase.Water.fromkeys", "modules/generated/openpnm.phase.Water.get", "modules/generated/openpnm.phase.Water.get_conduit_data", "modules/generated/openpnm.phase.Water.interpolate_data", "modules/generated/openpnm.phase.Water.items", "modules/generated/openpnm.phase.Water.keys", "modules/generated/openpnm.phase.Water.labels", "modules/generated/openpnm.phase.Water.num_pores", "modules/generated/openpnm.phase.Water.num_throats", "modules/generated/openpnm.phase.Water.pop", "modules/generated/openpnm.phase.Water.popitem", "modules/generated/openpnm.phase.Water.pores", "modules/generated/openpnm.phase.Water.props", "modules/generated/openpnm.phase.Water.regenerate_models", "modules/generated/openpnm.phase.Water.run_model", "modules/generated/openpnm.phase.Water.set_label", "modules/generated/openpnm.phase.Water.setdefault", "modules/generated/openpnm.phase.Water.throats", "modules/generated/openpnm.phase.Water.to_indices", "modules/generated/openpnm.phase.Water.to_mask", "modules/generated/openpnm.phase.Water.update", "modules/generated/openpnm.phase.Water.values", "modules/generated/openpnm.solvers", "modules/generated/openpnm.solvers.BaseSolver", "modules/generated/openpnm.solvers.BaseSolver.solve", "modules/generated/openpnm.solvers.DirectSolver", "modules/generated/openpnm.solvers.DirectSolver.solve", "modules/generated/openpnm.solvers.IterativeSolver", "modules/generated/openpnm.solvers.IterativeSolver.solve", "modules/generated/openpnm.solvers.PETScLinearSolver", "modules/generated/openpnm.solvers.PETScLinearSolver.solve", "modules/generated/openpnm.solvers.PardisoSpsolve", "modules/generated/openpnm.solvers.PardisoSpsolve.solve", "modules/generated/openpnm.solvers.ScipyCG", "modules/generated/openpnm.solvers.ScipyCG.solve", "modules/generated/openpnm.solvers.ScipySpsolve", "modules/generated/openpnm.solvers.ScipySpsolve.solve", "modules/generated/openpnm.topotools", "modules/generated/openpnm.topotools.add_boundary_pores", "modules/generated/openpnm.topotools.add_reservoir_pore", "modules/generated/openpnm.topotools.bond_percolation", "modules/generated/openpnm.topotools.clone_pores", "modules/generated/openpnm.topotools.connect_pores", "modules/generated/openpnm.topotools.conns_to_am", "modules/generated/openpnm.topotools.dimensionality", "modules/generated/openpnm.topotools.drop_sites", "modules/generated/openpnm.topotools.extend", "modules/generated/openpnm.topotools.filter_pores_by_z", "modules/generated/openpnm.topotools.find_clusters", "modules/generated/openpnm.topotools.find_connected_sites", "modules/generated/openpnm.topotools.find_connecting_bonds", "modules/generated/openpnm.topotools.find_interface_throats", "modules/generated/openpnm.topotools.find_isolated_clusters", "modules/generated/openpnm.topotools.find_neighbor_bonds", "modules/generated/openpnm.topotools.find_neighbor_sites", "modules/generated/openpnm.topotools.find_path", "modules/generated/openpnm.topotools.find_surface_pores", "modules/generated/openpnm.topotools.generate_base_points", "modules/generated/openpnm.topotools.get_domain_area", "modules/generated/openpnm.topotools.get_domain_length", "modules/generated/openpnm.topotools.get_shape", "modules/generated/openpnm.topotools.get_spacing", "modules/generated/openpnm.topotools.hull_centroid", "modules/generated/openpnm.topotools.is_fully_connected", "modules/generated/openpnm.topotools.iscoplanar", "modules/generated/openpnm.topotools.isoutside", "modules/generated/openpnm.topotools.ispercolating", "modules/generated/openpnm.topotools.issymmetric", "modules/generated/openpnm.topotools.istriangular", "modules/generated/openpnm.topotools.istril", "modules/generated/openpnm.topotools.istriu", "modules/generated/openpnm.topotools.label_faces", "modules/generated/openpnm.topotools.merge_networks", "modules/generated/openpnm.topotools.merge_pores", "modules/generated/openpnm.topotools.reduce_coordination", "modules/generated/openpnm.topotools.reflect_base_points", "modules/generated/openpnm.topotools.rotate_coords", "modules/generated/openpnm.topotools.shear_coords", "modules/generated/openpnm.topotools.site_percolation", "modules/generated/openpnm.topotools.stitch", "modules/generated/openpnm.topotools.template_cylinder_annulus", "modules/generated/openpnm.topotools.template_sphere_shell", "modules/generated/openpnm.topotools.tri_to_am", "modules/generated/openpnm.topotools.trim", "modules/generated/openpnm.topotools.trim_disconnected_clusters", "modules/generated/openpnm.topotools.vor_to_am", "modules/generated/openpnm.utils", "modules/generated/openpnm.utils.Docorator", "modules/generated/openpnm.utils.Docorator.__call__", "modules/generated/openpnm.utils.Docorator.dedent", "modules/generated/openpnm.utils.Docorator.dedents", "modules/generated/openpnm.utils.Docorator.delete_kwargs", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s", "modules/generated/openpnm.utils.Docorator.delete_params", "modules/generated/openpnm.utils.Docorator.delete_params_s", "modules/generated/openpnm.utils.Docorator.delete_types", "modules/generated/openpnm.utils.Docorator.delete_types_s", "modules/generated/openpnm.utils.Docorator.get_docstring", "modules/generated/openpnm.utils.Docorator.get_extended_summary", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf", "modules/generated/openpnm.utils.Docorator.get_full_description", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf", "modules/generated/openpnm.utils.Docorator.get_sections", "modules/generated/openpnm.utils.Docorator.get_sectionsf", "modules/generated/openpnm.utils.Docorator.get_summary", "modules/generated/openpnm.utils.Docorator.get_summaryf", "modules/generated/openpnm.utils.Docorator.keep_params", "modules/generated/openpnm.utils.Docorator.keep_params_s", "modules/generated/openpnm.utils.Docorator.keep_types", "modules/generated/openpnm.utils.Docorator.keep_types_s", "modules/generated/openpnm.utils.Docorator.save_docstring", "modules/generated/openpnm.utils.Docorator.with_indent", "modules/generated/openpnm.utils.Docorator.with_indents", "modules/generated/openpnm.utils.HealthDict", "modules/generated/openpnm.utils.HealthDict.clear", "modules/generated/openpnm.utils.HealthDict.copy", "modules/generated/openpnm.utils.HealthDict.fromkeys", "modules/generated/openpnm.utils.HealthDict.get", "modules/generated/openpnm.utils.HealthDict.items", "modules/generated/openpnm.utils.HealthDict.keys", "modules/generated/openpnm.utils.HealthDict.pop", "modules/generated/openpnm.utils.HealthDict.popitem", "modules/generated/openpnm.utils.HealthDict.setdefault", "modules/generated/openpnm.utils.HealthDict.update", "modules/generated/openpnm.utils.HealthDict.values", "modules/generated/openpnm.utils.NestedDict", "modules/generated/openpnm.utils.NestedDict.clear", "modules/generated/openpnm.utils.NestedDict.copy", "modules/generated/openpnm.utils.NestedDict.fromkeys", "modules/generated/openpnm.utils.NestedDict.get", "modules/generated/openpnm.utils.NestedDict.items", "modules/generated/openpnm.utils.NestedDict.keys", "modules/generated/openpnm.utils.NestedDict.pop", "modules/generated/openpnm.utils.NestedDict.popitem", "modules/generated/openpnm.utils.NestedDict.setdefault", "modules/generated/openpnm.utils.NestedDict.to_dict", "modules/generated/openpnm.utils.NestedDict.unravel", "modules/generated/openpnm.utils.NestedDict.update", "modules/generated/openpnm.utils.NestedDict.values", "modules/generated/openpnm.utils.PrintableDict", "modules/generated/openpnm.utils.PrintableDict.clear", "modules/generated/openpnm.utils.PrintableDict.copy", "modules/generated/openpnm.utils.PrintableDict.fromkeys", "modules/generated/openpnm.utils.PrintableDict.get", "modules/generated/openpnm.utils.PrintableDict.items", "modules/generated/openpnm.utils.PrintableDict.keys", "modules/generated/openpnm.utils.PrintableDict.pop", "modules/generated/openpnm.utils.PrintableDict.popitem", "modules/generated/openpnm.utils.PrintableDict.setdefault", "modules/generated/openpnm.utils.PrintableDict.update", "modules/generated/openpnm.utils.PrintableDict.values", "modules/generated/openpnm.utils.PrintableList", "modules/generated/openpnm.utils.PrintableList.append", "modules/generated/openpnm.utils.PrintableList.clear", "modules/generated/openpnm.utils.PrintableList.copy", "modules/generated/openpnm.utils.PrintableList.count", "modules/generated/openpnm.utils.PrintableList.extend", "modules/generated/openpnm.utils.PrintableList.index", "modules/generated/openpnm.utils.PrintableList.insert", "modules/generated/openpnm.utils.PrintableList.pop", "modules/generated/openpnm.utils.PrintableList.remove", "modules/generated/openpnm.utils.PrintableList.reverse", "modules/generated/openpnm.utils.PrintableList.sort", "modules/generated/openpnm.utils.Project", "modules/generated/openpnm.utils.Project.append", "modules/generated/openpnm.utils.Project.copy", "modules/generated/openpnm.utils.SettingsAttr", "modules/generated/openpnm.utils.SimpleList", "modules/generated/openpnm.utils.SimpleList.append", "modules/generated/openpnm.utils.TypedList", "modules/generated/openpnm.utils.TypedList.append", "modules/generated/openpnm.utils.TypedList.clear", "modules/generated/openpnm.utils.TypedList.copy", "modules/generated/openpnm.utils.TypedList.count", "modules/generated/openpnm.utils.TypedList.extend", "modules/generated/openpnm.utils.TypedList.index", "modules/generated/openpnm.utils.TypedList.insert", "modules/generated/openpnm.utils.TypedList.pop", "modules/generated/openpnm.utils.TypedList.remove", "modules/generated/openpnm.utils.TypedList.reverse", "modules/generated/openpnm.utils.TypedList.sort", "modules/generated/openpnm.utils.TypedMixin", "modules/generated/openpnm.utils.TypedSet", "modules/generated/openpnm.utils.TypedSet.add", "modules/generated/openpnm.utils.TypedSet.clear", "modules/generated/openpnm.utils.TypedSet.copy", "modules/generated/openpnm.utils.TypedSet.difference", "modules/generated/openpnm.utils.TypedSet.difference_update", "modules/generated/openpnm.utils.TypedSet.discard", "modules/generated/openpnm.utils.TypedSet.intersection", "modules/generated/openpnm.utils.TypedSet.intersection_update", "modules/generated/openpnm.utils.TypedSet.isdisjoint", "modules/generated/openpnm.utils.TypedSet.issubset", "modules/generated/openpnm.utils.TypedSet.issuperset", "modules/generated/openpnm.utils.TypedSet.pop", "modules/generated/openpnm.utils.TypedSet.remove", "modules/generated/openpnm.utils.TypedSet.symmetric_difference", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update", "modules/generated/openpnm.utils.TypedSet.union", "modules/generated/openpnm.utils.TypedSet.update", "modules/generated/openpnm.utils.Workspace", "modules/generated/openpnm.utils.Workspace.clear", "modules/generated/openpnm.utils.Workspace.close_project", "modules/generated/openpnm.utils.Workspace.copy", "modules/generated/openpnm.utils.Workspace.copy_project", "modules/generated/openpnm.utils.Workspace.fromkeys", "modules/generated/openpnm.utils.Workspace.get", "modules/generated/openpnm.utils.Workspace.items", "modules/generated/openpnm.utils.Workspace.keys", "modules/generated/openpnm.utils.Workspace.load_project", "modules/generated/openpnm.utils.Workspace.load_workspace", "modules/generated/openpnm.utils.Workspace.new_project", "modules/generated/openpnm.utils.Workspace.pop", "modules/generated/openpnm.utils.Workspace.popitem", "modules/generated/openpnm.utils.Workspace.save_project", "modules/generated/openpnm.utils.Workspace.save_workspace", "modules/generated/openpnm.utils.Workspace.setdefault", "modules/generated/openpnm.utils.Workspace.update", "modules/generated/openpnm.utils.Workspace.values", "modules/generated/openpnm.utils.check_data_health", "modules/generated/openpnm.utils.check_network_health", "modules/generated/openpnm.utils.dict_to_struct", "modules/generated/openpnm.utils.flat_list", "modules/generated/openpnm.utils.get_mixture_model_args", "modules/generated/openpnm.utils.get_printable_labels", "modules/generated/openpnm.utils.get_printable_props", "modules/generated/openpnm.utils.ignore_warnings", "modules/generated/openpnm.utils.is_symmetric", "modules/generated/openpnm.utils.is_transient", "modules/generated/openpnm.utils.is_valid_propname", "modules/generated/openpnm.utils.methods_to_table", "modules/generated/openpnm.utils.models_to_table", "modules/generated/openpnm.utils.sanitize_dict", "modules/generated/openpnm.utils.struct_to_dict", "modules/index"], "filenames": ["_examples/applications.rst", "_examples/index.rst", "_examples/reference.rst", "_examples/tutorials.rst", "basic_usage.rst", "examples/applications/absolute_permeability.ipynb", "examples/applications/adjusting_pore_size_distributions.ipynb", "examples/applications/dispersion_coefficient.ipynb", "examples/applications/effective_diffusivity_and_tortuosity.ipynb", "examples/applications/formation_factor.ipynb", "examples/applications/mercury_intrusion.ipynb", "examples/applications/porosity.ipynb", "examples/applications/relative_diffusivity.ipynb", "examples/applications/relative_permeability.ipynb", "examples/contrib/README.md", "examples/reference/architecture/pore_scale_models.ipynb", "examples/reference/architecture/settings_attribute_machinery.ipynb", "examples/reference/architecture/workspace_and_projects.ipynb", "examples/reference/simulations/available_matrix_solvers.ipynb", "examples/reference/simulations/basic_transport.ipynb", "examples/reference/simulations/explanation_of_units.ipynb", "examples/reference/simulations/reactive_transport.ipynb", "examples/reference/simulations/size_factors_and_transport_conductance.ipynb", "examples/reference/simulations/transient_transport.ipynb", "examples/tutorials/01_numerical_python_primer.ipynb", "examples/tutorials/02_network_generation_and_visualization.ipynb", "examples/tutorials/03_data_and_topology_storage.ipynb", "examples/tutorials/04_graph_queries_and_manipulation.ipynb", "examples/tutorials/05_defining_geometry.ipynb", "examples/tutorials/06_labels_and_domains.ipynb", "examples/tutorials/07_phases_and_mixtures.ipynb", "examples/tutorials/08_simulating_transport.ipynb", "examples/tutorials/09_simulating_invasion.ipynb", "examples/tutorials/10_visualization_options.ipynb", "index.rst", "installation.rst", "modules/generated/openpnm.algorithms.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.Algorithm.rst", "modules/generated/openpnm.algorithms.Algorithm.clear.rst", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs.rst", "modules/generated/openpnm.algorithms.Algorithm.copy.rst", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label.rst", "modules/generated/openpnm.algorithms.Algorithm.fromkeys.rst", "modules/generated/openpnm.algorithms.Algorithm.get.rst", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data.rst", "modules/generated/openpnm.algorithms.Algorithm.items.rst", "modules/generated/openpnm.algorithms.Algorithm.keys.rst", "modules/generated/openpnm.algorithms.Algorithm.labels.rst", "modules/generated/openpnm.algorithms.Algorithm.num_pores.rst", "modules/generated/openpnm.algorithms.Algorithm.num_throats.rst", "modules/generated/openpnm.algorithms.Algorithm.pop.rst", "modules/generated/openpnm.algorithms.Algorithm.popitem.rst", "modules/generated/openpnm.algorithms.Algorithm.pores.rst", "modules/generated/openpnm.algorithms.Algorithm.props.rst", "modules/generated/openpnm.algorithms.Algorithm.set_BC.rst", "modules/generated/openpnm.algorithms.Algorithm.set_label.rst", "modules/generated/openpnm.algorithms.Algorithm.setdefault.rst", "modules/generated/openpnm.algorithms.Algorithm.throats.rst", "modules/generated/openpnm.algorithms.Algorithm.to_indices.rst", "modules/generated/openpnm.algorithms.Algorithm.to_mask.rst", "modules/generated/openpnm.algorithms.Algorithm.update.rst", "modules/generated/openpnm.algorithms.Algorithm.values.rst", "modules/generated/openpnm.algorithms.Drainage.rst", "modules/generated/openpnm.algorithms.Drainage.apply_trapping.rst", "modules/generated/openpnm.algorithms.Drainage.clear.rst", "modules/generated/openpnm.algorithms.Drainage.clear_BCs.rst", "modules/generated/openpnm.algorithms.Drainage.copy.rst", "modules/generated/openpnm.algorithms.Drainage.filter_by_label.rst", "modules/generated/openpnm.algorithms.Drainage.fromkeys.rst", "modules/generated/openpnm.algorithms.Drainage.get.rst", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Drainage.interpolate_data.rst", "modules/generated/openpnm.algorithms.Drainage.items.rst", "modules/generated/openpnm.algorithms.Drainage.keys.rst", "modules/generated/openpnm.algorithms.Drainage.labels.rst", "modules/generated/openpnm.algorithms.Drainage.num_pores.rst", "modules/generated/openpnm.algorithms.Drainage.num_throats.rst", "modules/generated/openpnm.algorithms.Drainage.pc_curve.rst", "modules/generated/openpnm.algorithms.Drainage.pop.rst", "modules/generated/openpnm.algorithms.Drainage.popitem.rst", "modules/generated/openpnm.algorithms.Drainage.pores.rst", "modules/generated/openpnm.algorithms.Drainage.props.rst", "modules/generated/openpnm.algorithms.Drainage.reset.rst", "modules/generated/openpnm.algorithms.Drainage.run.rst", "modules/generated/openpnm.algorithms.Drainage.set_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_label.rst", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.setdefault.rst", "modules/generated/openpnm.algorithms.Drainage.throats.rst", "modules/generated/openpnm.algorithms.Drainage.to_indices.rst", "modules/generated/openpnm.algorithms.Drainage.to_mask.rst", "modules/generated/openpnm.algorithms.Drainage.update.rst", "modules/generated/openpnm.algorithms.Drainage.values.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.FourierConduction.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.copy.rst", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.FourierConduction.get.rst", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.items.rst", "modules/generated/openpnm.algorithms.FourierConduction.keys.rst", "modules/generated/openpnm.algorithms.FourierConduction.labels.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.pop.rst", "modules/generated/openpnm.algorithms.FourierConduction.popitem.rst", "modules/generated/openpnm.algorithms.FourierConduction.pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.props.rst", "modules/generated/openpnm.algorithms.FourierConduction.rate.rst", "modules/generated/openpnm.algorithms.FourierConduction.run.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_source.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.setdefault.rst", "modules/generated/openpnm.algorithms.FourierConduction.throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_indices.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_mask.rst", "modules/generated/openpnm.algorithms.FourierConduction.update.rst", "modules/generated/openpnm.algorithms.FourierConduction.values.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.copy.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.items.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.keys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.labels.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pop.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.props.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.reset.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.run.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.update.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.values.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.copy.rst", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.items.rst", "modules/generated/openpnm.algorithms.OhmicConduction.keys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.labels.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pop.rst", "modules/generated/openpnm.algorithms.OhmicConduction.popitem.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.props.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rate.rst", "modules/generated/openpnm.algorithms.OhmicConduction.run.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_source.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault.rst", "modules/generated/openpnm.algorithms.OhmicConduction.throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask.rst", "modules/generated/openpnm.algorithms.OhmicConduction.update.rst", "modules/generated/openpnm.algorithms.OhmicConduction.values.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.StokesFlow.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.copy.rst", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys.rst", "modules/generated/openpnm.algorithms.StokesFlow.get.rst", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.items.rst", "modules/generated/openpnm.algorithms.StokesFlow.keys.rst", "modules/generated/openpnm.algorithms.StokesFlow.labels.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.pop.rst", "modules/generated/openpnm.algorithms.StokesFlow.popitem.rst", "modules/generated/openpnm.algorithms.StokesFlow.pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.props.rst", "modules/generated/openpnm.algorithms.StokesFlow.rate.rst", "modules/generated/openpnm.algorithms.StokesFlow.run.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_source.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.setdefault.rst", "modules/generated/openpnm.algorithms.StokesFlow.throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_indices.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_mask.rst", "modules/generated/openpnm.algorithms.StokesFlow.update.rst", "modules/generated/openpnm.algorithms.StokesFlow.values.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.Transport.rst", "modules/generated/openpnm.algorithms.Transport.clear.rst", "modules/generated/openpnm.algorithms.Transport.clear_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.Transport.copy.rst", "modules/generated/openpnm.algorithms.Transport.filter_by_label.rst", "modules/generated/openpnm.algorithms.Transport.fromkeys.rst", "modules/generated/openpnm.algorithms.Transport.get.rst", "modules/generated/openpnm.algorithms.Transport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Transport.interpolate_data.rst", "modules/generated/openpnm.algorithms.Transport.items.rst", "modules/generated/openpnm.algorithms.Transport.keys.rst", "modules/generated/openpnm.algorithms.Transport.labels.rst", "modules/generated/openpnm.algorithms.Transport.num_pores.rst", "modules/generated/openpnm.algorithms.Transport.num_throats.rst", "modules/generated/openpnm.algorithms.Transport.pop.rst", "modules/generated/openpnm.algorithms.Transport.popitem.rst", "modules/generated/openpnm.algorithms.Transport.pores.rst", "modules/generated/openpnm.algorithms.Transport.props.rst", "modules/generated/openpnm.algorithms.Transport.rate.rst", "modules/generated/openpnm.algorithms.Transport.run.rst", "modules/generated/openpnm.algorithms.Transport.set_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_label.rst", "modules/generated/openpnm.algorithms.Transport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_value_BC.rst", "modules/generated/openpnm.algorithms.Transport.setdefault.rst", "modules/generated/openpnm.algorithms.Transport.throats.rst", "modules/generated/openpnm.algorithms.Transport.to_indices.rst", "modules/generated/openpnm.algorithms.Transport.to_mask.rst", "modules/generated/openpnm.algorithms.Transport.update.rst", "modules/generated/openpnm.algorithms.Transport.values.rst", "modules/generated/openpnm.core.rst", "modules/generated/openpnm.core.Base2.rst", "modules/generated/openpnm.core.Base2.clear.rst", "modules/generated/openpnm.core.Base2.copy.rst", "modules/generated/openpnm.core.Base2.fromkeys.rst", "modules/generated/openpnm.core.Base2.get.rst", "modules/generated/openpnm.core.Base2.get_conduit_data.rst", "modules/generated/openpnm.core.Base2.interpolate_data.rst", "modules/generated/openpnm.core.Base2.items.rst", "modules/generated/openpnm.core.Base2.keys.rst", "modules/generated/openpnm.core.Base2.pop.rst", "modules/generated/openpnm.core.Base2.popitem.rst", "modules/generated/openpnm.core.Base2.props.rst", "modules/generated/openpnm.core.Base2.setdefault.rst", "modules/generated/openpnm.core.Base2.to_indices.rst", "modules/generated/openpnm.core.Base2.to_mask.rst", "modules/generated/openpnm.core.Base2.update.rst", "modules/generated/openpnm.core.Base2.values.rst", "modules/generated/openpnm.core.Domain.rst", "modules/generated/openpnm.core.Domain.add_model.rst", "modules/generated/openpnm.core.Domain.add_model_collection.rst", "modules/generated/openpnm.core.Domain.clear.rst", "modules/generated/openpnm.core.Domain.copy.rst", "modules/generated/openpnm.core.Domain.filter_by_label.rst", "modules/generated/openpnm.core.Domain.fromkeys.rst", "modules/generated/openpnm.core.Domain.get.rst", "modules/generated/openpnm.core.Domain.get_conduit_data.rst", "modules/generated/openpnm.core.Domain.interpolate_data.rst", "modules/generated/openpnm.core.Domain.items.rst", "modules/generated/openpnm.core.Domain.keys.rst", "modules/generated/openpnm.core.Domain.labels.rst", "modules/generated/openpnm.core.Domain.num_pores.rst", "modules/generated/openpnm.core.Domain.num_throats.rst", "modules/generated/openpnm.core.Domain.pop.rst", "modules/generated/openpnm.core.Domain.popitem.rst", "modules/generated/openpnm.core.Domain.pores.rst", "modules/generated/openpnm.core.Domain.props.rst", "modules/generated/openpnm.core.Domain.regenerate_models.rst", "modules/generated/openpnm.core.Domain.run_model.rst", "modules/generated/openpnm.core.Domain.set_label.rst", "modules/generated/openpnm.core.Domain.setdefault.rst", "modules/generated/openpnm.core.Domain.throats.rst", "modules/generated/openpnm.core.Domain.to_indices.rst", "modules/generated/openpnm.core.Domain.to_mask.rst", "modules/generated/openpnm.core.Domain.update.rst", "modules/generated/openpnm.core.Domain.values.rst", "modules/generated/openpnm.core.LabelMixin.rst", "modules/generated/openpnm.core.LabelMixin.filter_by_label.rst", "modules/generated/openpnm.core.LabelMixin.labels.rst", "modules/generated/openpnm.core.LabelMixin.num_pores.rst", "modules/generated/openpnm.core.LabelMixin.num_throats.rst", "modules/generated/openpnm.core.LabelMixin.pores.rst", "modules/generated/openpnm.core.LabelMixin.set_label.rst", "modules/generated/openpnm.core.LabelMixin.throats.rst", "modules/generated/openpnm.core.ModelWrapper.rst", "modules/generated/openpnm.core.ModelWrapper.__call__.rst", "modules/generated/openpnm.core.ModelWrapper.clear.rst", "modules/generated/openpnm.core.ModelWrapper.copy.rst", "modules/generated/openpnm.core.ModelWrapper.fromkeys.rst", "modules/generated/openpnm.core.ModelWrapper.get.rst", "modules/generated/openpnm.core.ModelWrapper.items.rst", "modules/generated/openpnm.core.ModelWrapper.keys.rst", "modules/generated/openpnm.core.ModelWrapper.pop.rst", "modules/generated/openpnm.core.ModelWrapper.popitem.rst", "modules/generated/openpnm.core.ModelWrapper.setdefault.rst", "modules/generated/openpnm.core.ModelWrapper.update.rst", "modules/generated/openpnm.core.ModelWrapper.values.rst", "modules/generated/openpnm.core.ModelsDict.rst", "modules/generated/openpnm.core.ModelsDict.clear.rst", "modules/generated/openpnm.core.ModelsDict.copy.rst", "modules/generated/openpnm.core.ModelsDict.dependency_graph.rst", "modules/generated/openpnm.core.ModelsDict.dependency_list.rst", "modules/generated/openpnm.core.ModelsDict.dependency_map.rst", "modules/generated/openpnm.core.ModelsDict.fromkeys.rst", "modules/generated/openpnm.core.ModelsDict.get.rst", "modules/generated/openpnm.core.ModelsDict.items.rst", "modules/generated/openpnm.core.ModelsDict.keys.rst", "modules/generated/openpnm.core.ModelsDict.pop.rst", "modules/generated/openpnm.core.ModelsDict.popitem.rst", "modules/generated/openpnm.core.ModelsDict.setdefault.rst", "modules/generated/openpnm.core.ModelsDict.update.rst", "modules/generated/openpnm.core.ModelsDict.values.rst", "modules/generated/openpnm.core.ModelsMixin2.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection.rst", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models.rst", "modules/generated/openpnm.core.ModelsMixin2.run_model.rst", "modules/generated/openpnm.core.ParserMixin.rst", "modules/generated/openpnm.integrators.rst", "modules/generated/openpnm.integrators.Integrator.rst", "modules/generated/openpnm.integrators.ScipyRK45.rst", "modules/generated/openpnm.integrators.ScipyRK45.solve.rst", "modules/generated/openpnm.io.rst", "modules/generated/openpnm.io.network_from_csv.rst", "modules/generated/openpnm.io.network_from_jsongraph.rst", "modules/generated/openpnm.io.network_from_marock.rst", "modules/generated/openpnm.io.network_from_networkx.rst", "modules/generated/openpnm.io.network_from_pergeos.rst", "modules/generated/openpnm.io.network_from_porespy.rst", "modules/generated/openpnm.io.network_from_statoil.rst", "modules/generated/openpnm.io.network_to_comsol.rst", "modules/generated/openpnm.io.network_to_csv.rst", "modules/generated/openpnm.io.network_to_jsongraph.rst", "modules/generated/openpnm.io.network_to_networkx.rst", "modules/generated/openpnm.io.network_to_pandas.rst", "modules/generated/openpnm.io.network_to_pergeos.rst", "modules/generated/openpnm.io.network_to_salome.rst", "modules/generated/openpnm.io.network_to_stl.rst", "modules/generated/openpnm.io.print_hdf5.rst", "modules/generated/openpnm.io.project_to_csv.rst", "modules/generated/openpnm.io.project_to_dict.rst", "modules/generated/openpnm.io.project_to_hdf5.rst", "modules/generated/openpnm.io.project_to_pandas.rst", "modules/generated/openpnm.io.project_to_paraview.rst", "modules/generated/openpnm.io.project_to_vtk.rst", "modules/generated/openpnm.io.project_to_xdmf.rst", "modules/generated/openpnm.models.rst", "modules/generated/openpnm.models.collections.rst", "modules/generated/openpnm.models.collections.geometry.rst", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.collections.network.rst", "modules/generated/openpnm.models.collections.phase.rst", "modules/generated/openpnm.models.collections.phase.air.rst", "modules/generated/openpnm.models.collections.phase.gas.rst", "modules/generated/openpnm.models.collections.phase.liquid.rst", "modules/generated/openpnm.models.collections.phase.mercury.rst", "modules/generated/openpnm.models.collections.phase.water.rst", "modules/generated/openpnm.models.collections.physics.rst", "modules/generated/openpnm.models.collections.physics.basic.rst", "modules/generated/openpnm.models.collections.physics.standard.rst", "modules/generated/openpnm.models.geometry.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square.rst", "modules/generated/openpnm.models.geometry.pore_seed.rst", "modules/generated/openpnm.models.geometry.pore_seed.random.rst", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated.rst", "modules/generated/openpnm.models.geometry.pore_size.rst", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats.rst", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere.rst", "modules/generated/openpnm.models.geometry.pore_size.normal.rst", "modules/generated/openpnm.models.geometry.pore_size.random.rst", "modules/generated/openpnm.models.geometry.pore_size.weibull.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.square.rst", "modules/generated/openpnm.models.geometry.pore_volume.rst", "modules/generated/openpnm.models.geometry.pore_volume.circle.rst", "modules/generated/openpnm.models.geometry.pore_volume.cube.rst", "modules/generated/openpnm.models.geometry.pore_volume.effective.rst", "modules/generated/openpnm.models.geometry.pore_volume.sphere.rst", "modules/generated/openpnm.models.geometry.pore_volume.square.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow.rst", "modules/generated/openpnm.models.geometry.throat_centroid.rst", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.rst", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_seed.rst", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_seed.random.rst", "modules/generated/openpnm.models.geometry.throat_size.rst", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.throat_size.normal.rst", "modules/generated/openpnm.models.geometry.throat_size.random.rst", "modules/generated/openpnm.models.geometry.throat_size.weibull.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_vector.rst", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore.rst", "modules/generated/openpnm.models.geometry.throat_volume.rst", "modules/generated/openpnm.models.geometry.throat_volume.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_volume.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_volume.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_volume.lens.rst", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring.rst", "modules/generated/openpnm.models.geometry.throat_volume.rectangle.rst", "modules/generated/openpnm.models.misc.rst", "modules/generated/openpnm.models.misc.blank.rst", "modules/generated/openpnm.models.misc.clip.rst", "modules/generated/openpnm.models.misc.constant.rst", "modules/generated/openpnm.models.misc.difference.rst", "modules/generated/openpnm.models.misc.fraction.rst", "modules/generated/openpnm.models.misc.from_neighbor_pores.rst", "modules/generated/openpnm.models.misc.from_neighbor_throats.rst", "modules/generated/openpnm.models.misc.generic_distribution.rst", "modules/generated/openpnm.models.misc.generic_function.rst", "modules/generated/openpnm.models.misc.invert.rst", "modules/generated/openpnm.models.misc.linear.rst", "modules/generated/openpnm.models.misc.match_histogram.rst", "modules/generated/openpnm.models.misc.normal.rst", "modules/generated/openpnm.models.misc.normalize.rst", "modules/generated/openpnm.models.misc.polynomial.rst", "modules/generated/openpnm.models.misc.product.rst", "modules/generated/openpnm.models.misc.random.rst", "modules/generated/openpnm.models.misc.scaled.rst", "modules/generated/openpnm.models.misc.summation.rst", "modules/generated/openpnm.models.misc.weibull.rst", "modules/generated/openpnm.models.network.rst", "modules/generated/openpnm.models.network.bidirectional_throats.rst", "modules/generated/openpnm.models.network.cluster_number.rst", "modules/generated/openpnm.models.network.cluster_size.rst", "modules/generated/openpnm.models.network.coordination_number.rst", "modules/generated/openpnm.models.network.count_coincident_pores.rst", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_pore.rst", "modules/generated/openpnm.models.network.duplicate_throats.rst", "modules/generated/openpnm.models.network.find_coincident_pores.rst", "modules/generated/openpnm.models.network.headless_throats.rst", "modules/generated/openpnm.models.network.isolated_pores.rst", "modules/generated/openpnm.models.network.looped_throats.rst", "modules/generated/openpnm.models.network.pore_to_pore_distance.rst", "modules/generated/openpnm.models.network.reversed_throats.rst", "modules/generated/openpnm.models.phase.rst", "modules/generated/openpnm.models.phase.chemicals_wrapper.rst", "modules/generated/openpnm.models.phase.critical_props.rst", "modules/generated/openpnm.models.phase.density.rst", "modules/generated/openpnm.models.phase.density.ideal_gas.rst", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD.rst", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD.rst", "modules/generated/openpnm.models.phase.density.mass_to_molar.rst", "modules/generated/openpnm.models.phase.density.water_correlation.rst", "modules/generated/openpnm.models.phase.diffusivity.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg.rst", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc.rst", "modules/generated/openpnm.models.phase.heat_capacity.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp.rst", "modules/generated/openpnm.models.phase.misc.rst", "modules/generated/openpnm.models.phase.misc.mix_and_match.rst", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.rst", "modules/generated/openpnm.models.phase.mixtures.from_component.rst", "modules/generated/openpnm.models.phase.mixtures.mixing_rule.rst", "modules/generated/openpnm.models.phase.mixtures.mole_summation.rst", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.salinity.rst", "modules/generated/openpnm.models.phase.partition_coefficient.rst", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water.rst", "modules/generated/openpnm.models.phase.surface_tension.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb.rst", "modules/generated/openpnm.models.phase.surface_tension.water_correlation.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation.rst", "modules/generated/openpnm.models.phase.vapor_pressure.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk.rst", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation.rst", "modules/generated/openpnm.models.phase.viscosity.rst", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls.rst", "modules/generated/openpnm.models.phase.viscosity.water_correlation.rst", "modules/generated/openpnm.models.physics.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif.rst", "modules/generated/openpnm.models.physics.capillary_pressure.rst", "modules/generated/openpnm.models.physics.capillary_pressure.purcell.rst", "modules/generated/openpnm.models.physics.capillary_pressure.washburn.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion.rst", "modules/generated/openpnm.models.physics.electrical_conductance.rst", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical.rst", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt.rst", "modules/generated/openpnm.models.physics.meniscus.rst", "modules/generated/openpnm.models.physics.meniscus.general_toroidal.rst", "modules/generated/openpnm.models.physics.meniscus.purcell.rst", "modules/generated/openpnm.models.physics.meniscus.sinusoidal.rst", "modules/generated/openpnm.models.physics.multiphase.rst", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance.rst", "modules/generated/openpnm.models.physics.multiphase.late_filling.rst", "modules/generated/openpnm.models.physics.source_terms.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage.rst", "modules/generated/openpnm.models.physics.source_terms.exponential.rst", "modules/generated/openpnm.models.physics.source_terms.general_symbolic.rst", "modules/generated/openpnm.models.physics.source_terms.linear.rst", "modules/generated/openpnm.models.physics.source_terms.logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.natural_exponential.rst", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.power_law.rst", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics.rst", "modules/generated/openpnm.models.physics.thermal_conductance.rst", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal.rst", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors.rst", "modules/generated/openpnm.network.rst", "modules/generated/openpnm.network.BodyCenteredCubic.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.BodyCenteredCubic.clear.rst", "modules/generated/openpnm.network.BodyCenteredCubic.copy.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.items.rst", "modules/generated/openpnm.network.BodyCenteredCubic.keys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.labels.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pop.rst", "modules/generated/openpnm.network.BodyCenteredCubic.popitem.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.props.rst", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.BodyCenteredCubic.run_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.set_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.BodyCenteredCubic.throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.BodyCenteredCubic.update.rst", "modules/generated/openpnm.network.BodyCenteredCubic.values.rst", "modules/generated/openpnm.network.Cubic.rst", "modules/generated/openpnm.network.Cubic.add_boundary_pores.rst", "modules/generated/openpnm.network.Cubic.add_model.rst", "modules/generated/openpnm.network.Cubic.add_model_collection.rst", "modules/generated/openpnm.network.Cubic.clear.rst", "modules/generated/openpnm.network.Cubic.copy.rst", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.filter_by_label.rst", "modules/generated/openpnm.network.Cubic.find_connected_pores.rst", "modules/generated/openpnm.network.Cubic.find_connecting_throat.rst", "modules/generated/openpnm.network.Cubic.find_nearby_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.Cubic.fromkeys.rst", "modules/generated/openpnm.network.Cubic.get.rst", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.get_conduit_data.rst", "modules/generated/openpnm.network.Cubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.interpolate_data.rst", "modules/generated/openpnm.network.Cubic.items.rst", "modules/generated/openpnm.network.Cubic.keys.rst", "modules/generated/openpnm.network.Cubic.labels.rst", "modules/generated/openpnm.network.Cubic.num_neighbors.rst", "modules/generated/openpnm.network.Cubic.num_pores.rst", "modules/generated/openpnm.network.Cubic.num_throats.rst", "modules/generated/openpnm.network.Cubic.pop.rst", "modules/generated/openpnm.network.Cubic.popitem.rst", "modules/generated/openpnm.network.Cubic.pores.rst", "modules/generated/openpnm.network.Cubic.props.rst", "modules/generated/openpnm.network.Cubic.regenerate_models.rst", "modules/generated/openpnm.network.Cubic.run_model.rst", "modules/generated/openpnm.network.Cubic.set_label.rst", "modules/generated/openpnm.network.Cubic.setdefault.rst", "modules/generated/openpnm.network.Cubic.throats.rst", "modules/generated/openpnm.network.Cubic.to_indices.rst", "modules/generated/openpnm.network.Cubic.to_mask.rst", "modules/generated/openpnm.network.Cubic.update.rst", "modules/generated/openpnm.network.Cubic.values.rst", "modules/generated/openpnm.network.CubicTemplate.rst", "modules/generated/openpnm.network.CubicTemplate.add_model.rst", "modules/generated/openpnm.network.CubicTemplate.add_model_collection.rst", "modules/generated/openpnm.network.CubicTemplate.clear.rst", "modules/generated/openpnm.network.CubicTemplate.copy.rst", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.filter_by_label.rst", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat.rst", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats.rst", "modules/generated/openpnm.network.CubicTemplate.fromkeys.rst", "modules/generated/openpnm.network.CubicTemplate.get.rst", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data.rst", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.interpolate_data.rst", "modules/generated/openpnm.network.CubicTemplate.items.rst", "modules/generated/openpnm.network.CubicTemplate.keys.rst", "modules/generated/openpnm.network.CubicTemplate.labels.rst", "modules/generated/openpnm.network.CubicTemplate.num_neighbors.rst", "modules/generated/openpnm.network.CubicTemplate.num_pores.rst", "modules/generated/openpnm.network.CubicTemplate.num_throats.rst", "modules/generated/openpnm.network.CubicTemplate.pop.rst", "modules/generated/openpnm.network.CubicTemplate.popitem.rst", "modules/generated/openpnm.network.CubicTemplate.pores.rst", "modules/generated/openpnm.network.CubicTemplate.props.rst", "modules/generated/openpnm.network.CubicTemplate.regenerate_models.rst", "modules/generated/openpnm.network.CubicTemplate.run_model.rst", "modules/generated/openpnm.network.CubicTemplate.set_label.rst", "modules/generated/openpnm.network.CubicTemplate.setdefault.rst", "modules/generated/openpnm.network.CubicTemplate.throats.rst", "modules/generated/openpnm.network.CubicTemplate.to_indices.rst", "modules/generated/openpnm.network.CubicTemplate.to_mask.rst", "modules/generated/openpnm.network.CubicTemplate.update.rst", "modules/generated/openpnm.network.CubicTemplate.values.rst", "modules/generated/openpnm.network.Delaunay.rst", "modules/generated/openpnm.network.Delaunay.add_model.rst", "modules/generated/openpnm.network.Delaunay.add_model_collection.rst", "modules/generated/openpnm.network.Delaunay.clear.rst", "modules/generated/openpnm.network.Delaunay.copy.rst", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.filter_by_label.rst", "modules/generated/openpnm.network.Delaunay.find_connected_pores.rst", "modules/generated/openpnm.network.Delaunay.find_connecting_throat.rst", "modules/generated/openpnm.network.Delaunay.find_nearby_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats.rst", "modules/generated/openpnm.network.Delaunay.fromkeys.rst", "modules/generated/openpnm.network.Delaunay.get.rst", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.get_conduit_data.rst", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.interpolate_data.rst", "modules/generated/openpnm.network.Delaunay.items.rst", "modules/generated/openpnm.network.Delaunay.keys.rst", "modules/generated/openpnm.network.Delaunay.labels.rst", "modules/generated/openpnm.network.Delaunay.num_neighbors.rst", "modules/generated/openpnm.network.Delaunay.num_pores.rst", "modules/generated/openpnm.network.Delaunay.num_throats.rst", "modules/generated/openpnm.network.Delaunay.pop.rst", "modules/generated/openpnm.network.Delaunay.popitem.rst", "modules/generated/openpnm.network.Delaunay.pores.rst", "modules/generated/openpnm.network.Delaunay.props.rst", "modules/generated/openpnm.network.Delaunay.regenerate_models.rst", "modules/generated/openpnm.network.Delaunay.run_model.rst", "modules/generated/openpnm.network.Delaunay.set_label.rst", "modules/generated/openpnm.network.Delaunay.setdefault.rst", "modules/generated/openpnm.network.Delaunay.throats.rst", "modules/generated/openpnm.network.Delaunay.to_indices.rst", "modules/generated/openpnm.network.Delaunay.to_mask.rst", "modules/generated/openpnm.network.Delaunay.update.rst", "modules/generated/openpnm.network.Delaunay.values.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.items.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.props.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.update.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.values.rst", "modules/generated/openpnm.network.Demo.rst", "modules/generated/openpnm.network.Demo.add_boundary_pores.rst", "modules/generated/openpnm.network.Demo.add_model.rst", "modules/generated/openpnm.network.Demo.add_model_collection.rst", "modules/generated/openpnm.network.Demo.clear.rst", "modules/generated/openpnm.network.Demo.copy.rst", "modules/generated/openpnm.network.Demo.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.create_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.filter_by_label.rst", "modules/generated/openpnm.network.Demo.find_connected_pores.rst", "modules/generated/openpnm.network.Demo.find_connecting_throat.rst", "modules/generated/openpnm.network.Demo.find_nearby_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_throats.rst", "modules/generated/openpnm.network.Demo.fromkeys.rst", "modules/generated/openpnm.network.Demo.get.rst", "modules/generated/openpnm.network.Demo.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.get_conduit_data.rst", "modules/generated/openpnm.network.Demo.get_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.interpolate_data.rst", "modules/generated/openpnm.network.Demo.items.rst", "modules/generated/openpnm.network.Demo.keys.rst", "modules/generated/openpnm.network.Demo.labels.rst", "modules/generated/openpnm.network.Demo.num_neighbors.rst", "modules/generated/openpnm.network.Demo.num_pores.rst", "modules/generated/openpnm.network.Demo.num_throats.rst", "modules/generated/openpnm.network.Demo.pop.rst", "modules/generated/openpnm.network.Demo.popitem.rst", "modules/generated/openpnm.network.Demo.pores.rst", "modules/generated/openpnm.network.Demo.props.rst", "modules/generated/openpnm.network.Demo.regenerate_models.rst", "modules/generated/openpnm.network.Demo.run_model.rst", "modules/generated/openpnm.network.Demo.set_label.rst", "modules/generated/openpnm.network.Demo.setdefault.rst", "modules/generated/openpnm.network.Demo.throats.rst", "modules/generated/openpnm.network.Demo.to_indices.rst", "modules/generated/openpnm.network.Demo.to_mask.rst", "modules/generated/openpnm.network.Demo.update.rst", "modules/generated/openpnm.network.Demo.values.rst", "modules/generated/openpnm.network.FaceCenteredCubic.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.FaceCenteredCubic.clear.rst", "modules/generated/openpnm.network.FaceCenteredCubic.copy.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.items.rst", "modules/generated/openpnm.network.FaceCenteredCubic.keys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.labels.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pop.rst", "modules/generated/openpnm.network.FaceCenteredCubic.popitem.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.props.rst", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.FaceCenteredCubic.run_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.set_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.FaceCenteredCubic.throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.FaceCenteredCubic.update.rst", "modules/generated/openpnm.network.FaceCenteredCubic.values.rst", "modules/generated/openpnm.network.Network.rst", "modules/generated/openpnm.network.Network.add_model.rst", "modules/generated/openpnm.network.Network.add_model_collection.rst", "modules/generated/openpnm.network.Network.clear.rst", "modules/generated/openpnm.network.Network.copy.rst", "modules/generated/openpnm.network.Network.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.create_incidence_matrix.rst", "modules/generated/openpnm.network.Network.filter_by_label.rst", "modules/generated/openpnm.network.Network.find_connected_pores.rst", "modules/generated/openpnm.network.Network.find_connecting_throat.rst", "modules/generated/openpnm.network.Network.find_nearby_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_throats.rst", "modules/generated/openpnm.network.Network.fromkeys.rst", "modules/generated/openpnm.network.Network.get.rst", "modules/generated/openpnm.network.Network.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.get_conduit_data.rst", "modules/generated/openpnm.network.Network.get_incidence_matrix.rst", "modules/generated/openpnm.network.Network.interpolate_data.rst", "modules/generated/openpnm.network.Network.items.rst", "modules/generated/openpnm.network.Network.keys.rst", "modules/generated/openpnm.network.Network.labels.rst", "modules/generated/openpnm.network.Network.num_neighbors.rst", "modules/generated/openpnm.network.Network.num_pores.rst", "modules/generated/openpnm.network.Network.num_throats.rst", "modules/generated/openpnm.network.Network.pop.rst", "modules/generated/openpnm.network.Network.popitem.rst", "modules/generated/openpnm.network.Network.pores.rst", "modules/generated/openpnm.network.Network.props.rst", "modules/generated/openpnm.network.Network.regenerate_models.rst", "modules/generated/openpnm.network.Network.run_model.rst", "modules/generated/openpnm.network.Network.set_label.rst", "modules/generated/openpnm.network.Network.setdefault.rst", "modules/generated/openpnm.network.Network.throats.rst", "modules/generated/openpnm.network.Network.to_indices.rst", "modules/generated/openpnm.network.Network.to_mask.rst", "modules/generated/openpnm.network.Network.update.rst", "modules/generated/openpnm.network.Network.values.rst", "modules/generated/openpnm.network.Voronoi.rst", "modules/generated/openpnm.network.Voronoi.add_model.rst", "modules/generated/openpnm.network.Voronoi.add_model_collection.rst", "modules/generated/openpnm.network.Voronoi.clear.rst", "modules/generated/openpnm.network.Voronoi.copy.rst", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.filter_by_label.rst", "modules/generated/openpnm.network.Voronoi.find_connected_pores.rst", "modules/generated/openpnm.network.Voronoi.find_connecting_throat.rst", "modules/generated/openpnm.network.Voronoi.find_nearby_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats.rst", "modules/generated/openpnm.network.Voronoi.fromkeys.rst", "modules/generated/openpnm.network.Voronoi.get.rst", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.get_conduit_data.rst", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.interpolate_data.rst", "modules/generated/openpnm.network.Voronoi.items.rst", "modules/generated/openpnm.network.Voronoi.keys.rst", "modules/generated/openpnm.network.Voronoi.labels.rst", "modules/generated/openpnm.network.Voronoi.num_neighbors.rst", "modules/generated/openpnm.network.Voronoi.num_pores.rst", "modules/generated/openpnm.network.Voronoi.num_throats.rst", "modules/generated/openpnm.network.Voronoi.pop.rst", "modules/generated/openpnm.network.Voronoi.popitem.rst", "modules/generated/openpnm.network.Voronoi.pores.rst", "modules/generated/openpnm.network.Voronoi.props.rst", "modules/generated/openpnm.network.Voronoi.regenerate_models.rst", "modules/generated/openpnm.network.Voronoi.run_model.rst", "modules/generated/openpnm.network.Voronoi.set_label.rst", "modules/generated/openpnm.network.Voronoi.setdefault.rst", "modules/generated/openpnm.network.Voronoi.throats.rst", "modules/generated/openpnm.network.Voronoi.to_indices.rst", "modules/generated/openpnm.network.Voronoi.to_mask.rst", "modules/generated/openpnm.network.Voronoi.update.rst", "modules/generated/openpnm.network.Voronoi.values.rst", "modules/generated/openpnm.phase.rst", "modules/generated/openpnm.phase.Air.rst", "modules/generated/openpnm.phase.Air.add_model.rst", "modules/generated/openpnm.phase.Air.add_model_collection.rst", "modules/generated/openpnm.phase.Air.clear.rst", "modules/generated/openpnm.phase.Air.copy.rst", "modules/generated/openpnm.phase.Air.filter_by_label.rst", "modules/generated/openpnm.phase.Air.fromkeys.rst", "modules/generated/openpnm.phase.Air.get.rst", "modules/generated/openpnm.phase.Air.get_conduit_data.rst", "modules/generated/openpnm.phase.Air.interpolate_data.rst", "modules/generated/openpnm.phase.Air.items.rst", "modules/generated/openpnm.phase.Air.keys.rst", "modules/generated/openpnm.phase.Air.labels.rst", "modules/generated/openpnm.phase.Air.num_pores.rst", "modules/generated/openpnm.phase.Air.num_throats.rst", "modules/generated/openpnm.phase.Air.pop.rst", "modules/generated/openpnm.phase.Air.popitem.rst", "modules/generated/openpnm.phase.Air.pores.rst", "modules/generated/openpnm.phase.Air.props.rst", "modules/generated/openpnm.phase.Air.regenerate_models.rst", "modules/generated/openpnm.phase.Air.run_model.rst", "modules/generated/openpnm.phase.Air.set_label.rst", "modules/generated/openpnm.phase.Air.setdefault.rst", "modules/generated/openpnm.phase.Air.throats.rst", "modules/generated/openpnm.phase.Air.to_indices.rst", "modules/generated/openpnm.phase.Air.to_mask.rst", "modules/generated/openpnm.phase.Air.update.rst", "modules/generated/openpnm.phase.Air.values.rst", "modules/generated/openpnm.phase.BinaryGas.rst", "modules/generated/openpnm.phase.BinaryGas.add_comp.rst", "modules/generated/openpnm.phase.BinaryGas.add_model.rst", "modules/generated/openpnm.phase.BinaryGas.add_model_collection.rst", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health.rst", "modules/generated/openpnm.phase.BinaryGas.clear.rst", "modules/generated/openpnm.phase.BinaryGas.copy.rst", "modules/generated/openpnm.phase.BinaryGas.filter_by_label.rst", "modules/generated/openpnm.phase.BinaryGas.fromkeys.rst", "modules/generated/openpnm.phase.BinaryGas.get.rst", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals.rst", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data.rst", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals.rst", "modules/generated/openpnm.phase.BinaryGas.interpolate_data.rst", "modules/generated/openpnm.phase.BinaryGas.items.rst", "modules/generated/openpnm.phase.BinaryGas.keys.rst", "modules/generated/openpnm.phase.BinaryGas.labels.rst", "modules/generated/openpnm.phase.BinaryGas.num_pores.rst", "modules/generated/openpnm.phase.BinaryGas.num_throats.rst", "modules/generated/openpnm.phase.BinaryGas.pop.rst", "modules/generated/openpnm.phase.BinaryGas.popitem.rst", "modules/generated/openpnm.phase.BinaryGas.pores.rst", "modules/generated/openpnm.phase.BinaryGas.props.rst", "modules/generated/openpnm.phase.BinaryGas.regenerate_models.rst", "modules/generated/openpnm.phase.BinaryGas.remove_comp.rst", "modules/generated/openpnm.phase.BinaryGas.run_model.rst", "modules/generated/openpnm.phase.BinaryGas.set_label.rst", "modules/generated/openpnm.phase.BinaryGas.setdefault.rst", "modules/generated/openpnm.phase.BinaryGas.throats.rst", "modules/generated/openpnm.phase.BinaryGas.to_indices.rst", "modules/generated/openpnm.phase.BinaryGas.to_mask.rst", "modules/generated/openpnm.phase.BinaryGas.update.rst", "modules/generated/openpnm.phase.BinaryGas.values.rst", "modules/generated/openpnm.phase.BinaryGas.y.rst", "modules/generated/openpnm.phase.GasMixture.rst", "modules/generated/openpnm.phase.GasMixture.add_comp.rst", "modules/generated/openpnm.phase.GasMixture.add_model.rst", "modules/generated/openpnm.phase.GasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.GasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.GasMixture.clear.rst", "modules/generated/openpnm.phase.GasMixture.copy.rst", "modules/generated/openpnm.phase.GasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.GasMixture.fromkeys.rst", "modules/generated/openpnm.phase.GasMixture.get.rst", "modules/generated/openpnm.phase.GasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.GasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.GasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.GasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.GasMixture.items.rst", "modules/generated/openpnm.phase.GasMixture.keys.rst", "modules/generated/openpnm.phase.GasMixture.labels.rst", "modules/generated/openpnm.phase.GasMixture.num_pores.rst", "modules/generated/openpnm.phase.GasMixture.num_throats.rst", "modules/generated/openpnm.phase.GasMixture.pop.rst", "modules/generated/openpnm.phase.GasMixture.popitem.rst", "modules/generated/openpnm.phase.GasMixture.pores.rst", "modules/generated/openpnm.phase.GasMixture.props.rst", "modules/generated/openpnm.phase.GasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.GasMixture.remove_comp.rst", "modules/generated/openpnm.phase.GasMixture.run_model.rst", "modules/generated/openpnm.phase.GasMixture.set_label.rst", "modules/generated/openpnm.phase.GasMixture.setdefault.rst", "modules/generated/openpnm.phase.GasMixture.throats.rst", "modules/generated/openpnm.phase.GasMixture.to_indices.rst", "modules/generated/openpnm.phase.GasMixture.to_mask.rst", "modules/generated/openpnm.phase.GasMixture.update.rst", "modules/generated/openpnm.phase.GasMixture.values.rst", "modules/generated/openpnm.phase.GasMixture.y.rst", "modules/generated/openpnm.phase.LiquidMixture.rst", "modules/generated/openpnm.phase.LiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.LiquidMixture.clear.rst", "modules/generated/openpnm.phase.LiquidMixture.copy.rst", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.LiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.LiquidMixture.get.rst", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.LiquidMixture.items.rst", "modules/generated/openpnm.phase.LiquidMixture.keys.rst", "modules/generated/openpnm.phase.LiquidMixture.labels.rst", "modules/generated/openpnm.phase.LiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.LiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.LiquidMixture.pop.rst", "modules/generated/openpnm.phase.LiquidMixture.popitem.rst", "modules/generated/openpnm.phase.LiquidMixture.pores.rst", "modules/generated/openpnm.phase.LiquidMixture.props.rst", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.LiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.run_model.rst", "modules/generated/openpnm.phase.LiquidMixture.set_label.rst", "modules/generated/openpnm.phase.LiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.LiquidMixture.throats.rst", "modules/generated/openpnm.phase.LiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.LiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.LiquidMixture.update.rst", "modules/generated/openpnm.phase.LiquidMixture.values.rst", "modules/generated/openpnm.phase.LiquidMixture.x.rst", "modules/generated/openpnm.phase.Mercury.rst", "modules/generated/openpnm.phase.Mercury.add_model.rst", "modules/generated/openpnm.phase.Mercury.add_model_collection.rst", "modules/generated/openpnm.phase.Mercury.clear.rst", "modules/generated/openpnm.phase.Mercury.copy.rst", "modules/generated/openpnm.phase.Mercury.filter_by_label.rst", "modules/generated/openpnm.phase.Mercury.fromkeys.rst", "modules/generated/openpnm.phase.Mercury.get.rst", "modules/generated/openpnm.phase.Mercury.get_conduit_data.rst", "modules/generated/openpnm.phase.Mercury.interpolate_data.rst", "modules/generated/openpnm.phase.Mercury.items.rst", "modules/generated/openpnm.phase.Mercury.keys.rst", "modules/generated/openpnm.phase.Mercury.labels.rst", "modules/generated/openpnm.phase.Mercury.num_pores.rst", "modules/generated/openpnm.phase.Mercury.num_throats.rst", "modules/generated/openpnm.phase.Mercury.pop.rst", "modules/generated/openpnm.phase.Mercury.popitem.rst", "modules/generated/openpnm.phase.Mercury.pores.rst", "modules/generated/openpnm.phase.Mercury.props.rst", "modules/generated/openpnm.phase.Mercury.regenerate_models.rst", "modules/generated/openpnm.phase.Mercury.run_model.rst", "modules/generated/openpnm.phase.Mercury.set_label.rst", "modules/generated/openpnm.phase.Mercury.setdefault.rst", "modules/generated/openpnm.phase.Mercury.throats.rst", "modules/generated/openpnm.phase.Mercury.to_indices.rst", "modules/generated/openpnm.phase.Mercury.to_mask.rst", "modules/generated/openpnm.phase.Mercury.update.rst", "modules/generated/openpnm.phase.Mercury.values.rst", "modules/generated/openpnm.phase.Mixture.rst", "modules/generated/openpnm.phase.Mixture.add_comp.rst", "modules/generated/openpnm.phase.Mixture.add_model.rst", "modules/generated/openpnm.phase.Mixture.add_model_collection.rst", "modules/generated/openpnm.phase.Mixture.check_mixture_health.rst", "modules/generated/openpnm.phase.Mixture.clear.rst", "modules/generated/openpnm.phase.Mixture.copy.rst", "modules/generated/openpnm.phase.Mixture.filter_by_label.rst", "modules/generated/openpnm.phase.Mixture.fromkeys.rst", "modules/generated/openpnm.phase.Mixture.get.rst", "modules/generated/openpnm.phase.Mixture.get_comp_vals.rst", "modules/generated/openpnm.phase.Mixture.get_conduit_data.rst", "modules/generated/openpnm.phase.Mixture.get_mix_vals.rst", "modules/generated/openpnm.phase.Mixture.interpolate_data.rst", "modules/generated/openpnm.phase.Mixture.items.rst", "modules/generated/openpnm.phase.Mixture.keys.rst", "modules/generated/openpnm.phase.Mixture.labels.rst", "modules/generated/openpnm.phase.Mixture.num_pores.rst", "modules/generated/openpnm.phase.Mixture.num_throats.rst", "modules/generated/openpnm.phase.Mixture.pop.rst", "modules/generated/openpnm.phase.Mixture.popitem.rst", "modules/generated/openpnm.phase.Mixture.pores.rst", "modules/generated/openpnm.phase.Mixture.props.rst", "modules/generated/openpnm.phase.Mixture.regenerate_models.rst", "modules/generated/openpnm.phase.Mixture.remove_comp.rst", "modules/generated/openpnm.phase.Mixture.run_model.rst", "modules/generated/openpnm.phase.Mixture.set_label.rst", "modules/generated/openpnm.phase.Mixture.setdefault.rst", "modules/generated/openpnm.phase.Mixture.throats.rst", "modules/generated/openpnm.phase.Mixture.to_indices.rst", "modules/generated/openpnm.phase.Mixture.to_mask.rst", "modules/generated/openpnm.phase.Mixture.update.rst", "modules/generated/openpnm.phase.Mixture.values.rst", "modules/generated/openpnm.phase.Phase.rst", "modules/generated/openpnm.phase.Phase.add_model.rst", "modules/generated/openpnm.phase.Phase.add_model_collection.rst", "modules/generated/openpnm.phase.Phase.clear.rst", "modules/generated/openpnm.phase.Phase.copy.rst", "modules/generated/openpnm.phase.Phase.filter_by_label.rst", "modules/generated/openpnm.phase.Phase.fromkeys.rst", "modules/generated/openpnm.phase.Phase.get.rst", "modules/generated/openpnm.phase.Phase.get_conduit_data.rst", "modules/generated/openpnm.phase.Phase.interpolate_data.rst", "modules/generated/openpnm.phase.Phase.items.rst", "modules/generated/openpnm.phase.Phase.keys.rst", "modules/generated/openpnm.phase.Phase.labels.rst", "modules/generated/openpnm.phase.Phase.num_pores.rst", "modules/generated/openpnm.phase.Phase.num_throats.rst", "modules/generated/openpnm.phase.Phase.pop.rst", "modules/generated/openpnm.phase.Phase.popitem.rst", "modules/generated/openpnm.phase.Phase.pores.rst", "modules/generated/openpnm.phase.Phase.props.rst", "modules/generated/openpnm.phase.Phase.regenerate_models.rst", "modules/generated/openpnm.phase.Phase.run_model.rst", "modules/generated/openpnm.phase.Phase.set_label.rst", "modules/generated/openpnm.phase.Phase.setdefault.rst", "modules/generated/openpnm.phase.Phase.throats.rst", "modules/generated/openpnm.phase.Phase.to_indices.rst", "modules/generated/openpnm.phase.Phase.to_mask.rst", "modules/generated/openpnm.phase.Phase.update.rst", "modules/generated/openpnm.phase.Phase.values.rst", "modules/generated/openpnm.phase.Species.rst", "modules/generated/openpnm.phase.Species.add_model.rst", "modules/generated/openpnm.phase.Species.add_model_collection.rst", "modules/generated/openpnm.phase.Species.clear.rst", "modules/generated/openpnm.phase.Species.copy.rst", "modules/generated/openpnm.phase.Species.filter_by_label.rst", "modules/generated/openpnm.phase.Species.fromkeys.rst", "modules/generated/openpnm.phase.Species.get.rst", "modules/generated/openpnm.phase.Species.get_conduit_data.rst", "modules/generated/openpnm.phase.Species.interpolate_data.rst", "modules/generated/openpnm.phase.Species.items.rst", "modules/generated/openpnm.phase.Species.keys.rst", "modules/generated/openpnm.phase.Species.labels.rst", "modules/generated/openpnm.phase.Species.num_pores.rst", "modules/generated/openpnm.phase.Species.num_throats.rst", "modules/generated/openpnm.phase.Species.pop.rst", "modules/generated/openpnm.phase.Species.popitem.rst", "modules/generated/openpnm.phase.Species.pores.rst", "modules/generated/openpnm.phase.Species.props.rst", "modules/generated/openpnm.phase.Species.regenerate_models.rst", "modules/generated/openpnm.phase.Species.run_model.rst", "modules/generated/openpnm.phase.Species.set_label.rst", "modules/generated/openpnm.phase.Species.setdefault.rst", "modules/generated/openpnm.phase.Species.throats.rst", "modules/generated/openpnm.phase.Species.to_indices.rst", "modules/generated/openpnm.phase.Species.to_mask.rst", "modules/generated/openpnm.phase.Species.update.rst", "modules/generated/openpnm.phase.Species.values.rst", "modules/generated/openpnm.phase.StandardGas.rst", "modules/generated/openpnm.phase.StandardGas.add_model.rst", "modules/generated/openpnm.phase.StandardGas.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGas.clear.rst", "modules/generated/openpnm.phase.StandardGas.copy.rst", "modules/generated/openpnm.phase.StandardGas.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGas.fromkeys.rst", "modules/generated/openpnm.phase.StandardGas.get.rst", "modules/generated/openpnm.phase.StandardGas.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGas.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGas.items.rst", "modules/generated/openpnm.phase.StandardGas.keys.rst", "modules/generated/openpnm.phase.StandardGas.labels.rst", "modules/generated/openpnm.phase.StandardGas.num_pores.rst", "modules/generated/openpnm.phase.StandardGas.num_throats.rst", "modules/generated/openpnm.phase.StandardGas.pop.rst", "modules/generated/openpnm.phase.StandardGas.popitem.rst", "modules/generated/openpnm.phase.StandardGas.pores.rst", "modules/generated/openpnm.phase.StandardGas.props.rst", "modules/generated/openpnm.phase.StandardGas.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGas.run_model.rst", "modules/generated/openpnm.phase.StandardGas.set_label.rst", "modules/generated/openpnm.phase.StandardGas.setdefault.rst", "modules/generated/openpnm.phase.StandardGas.throats.rst", "modules/generated/openpnm.phase.StandardGas.to_indices.rst", "modules/generated/openpnm.phase.StandardGas.to_mask.rst", "modules/generated/openpnm.phase.StandardGas.update.rst", "modules/generated/openpnm.phase.StandardGas.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardGasMixture.clear.rst", "modules/generated/openpnm.phase.StandardGasMixture.copy.rst", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardGasMixture.get.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.items.rst", "modules/generated/openpnm.phase.StandardGasMixture.keys.rst", "modules/generated/openpnm.phase.StandardGasMixture.labels.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.pop.rst", "modules/generated/openpnm.phase.StandardGasMixture.popitem.rst", "modules/generated/openpnm.phase.StandardGasMixture.pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.props.rst", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.run_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.set_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardGasMixture.throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardGasMixture.update.rst", "modules/generated/openpnm.phase.StandardGasMixture.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.y.rst", "modules/generated/openpnm.phase.StandardLiquid.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquid.clear.rst", "modules/generated/openpnm.phase.StandardLiquid.copy.rst", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquid.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquid.get.rst", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquid.items.rst", "modules/generated/openpnm.phase.StandardLiquid.keys.rst", "modules/generated/openpnm.phase.StandardLiquid.labels.rst", "modules/generated/openpnm.phase.StandardLiquid.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquid.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquid.pop.rst", "modules/generated/openpnm.phase.StandardLiquid.popitem.rst", "modules/generated/openpnm.phase.StandardLiquid.pores.rst", "modules/generated/openpnm.phase.StandardLiquid.props.rst", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquid.run_model.rst", "modules/generated/openpnm.phase.StandardLiquid.set_label.rst", "modules/generated/openpnm.phase.StandardLiquid.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquid.throats.rst", "modules/generated/openpnm.phase.StandardLiquid.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquid.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquid.update.rst", "modules/generated/openpnm.phase.StandardLiquid.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.clear.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.copy.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.items.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.keys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.labels.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pop.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.props.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.update.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.x.rst", "modules/generated/openpnm.phase.Water.rst", "modules/generated/openpnm.phase.Water.add_model.rst", "modules/generated/openpnm.phase.Water.add_model_collection.rst", "modules/generated/openpnm.phase.Water.clear.rst", "modules/generated/openpnm.phase.Water.copy.rst", "modules/generated/openpnm.phase.Water.filter_by_label.rst", "modules/generated/openpnm.phase.Water.fromkeys.rst", "modules/generated/openpnm.phase.Water.get.rst", "modules/generated/openpnm.phase.Water.get_conduit_data.rst", "modules/generated/openpnm.phase.Water.interpolate_data.rst", "modules/generated/openpnm.phase.Water.items.rst", "modules/generated/openpnm.phase.Water.keys.rst", "modules/generated/openpnm.phase.Water.labels.rst", "modules/generated/openpnm.phase.Water.num_pores.rst", "modules/generated/openpnm.phase.Water.num_throats.rst", "modules/generated/openpnm.phase.Water.pop.rst", "modules/generated/openpnm.phase.Water.popitem.rst", "modules/generated/openpnm.phase.Water.pores.rst", "modules/generated/openpnm.phase.Water.props.rst", "modules/generated/openpnm.phase.Water.regenerate_models.rst", "modules/generated/openpnm.phase.Water.run_model.rst", "modules/generated/openpnm.phase.Water.set_label.rst", "modules/generated/openpnm.phase.Water.setdefault.rst", "modules/generated/openpnm.phase.Water.throats.rst", "modules/generated/openpnm.phase.Water.to_indices.rst", "modules/generated/openpnm.phase.Water.to_mask.rst", "modules/generated/openpnm.phase.Water.update.rst", "modules/generated/openpnm.phase.Water.values.rst", "modules/generated/openpnm.solvers.rst", "modules/generated/openpnm.solvers.BaseSolver.rst", "modules/generated/openpnm.solvers.BaseSolver.solve.rst", "modules/generated/openpnm.solvers.DirectSolver.rst", "modules/generated/openpnm.solvers.DirectSolver.solve.rst", "modules/generated/openpnm.solvers.IterativeSolver.rst", "modules/generated/openpnm.solvers.IterativeSolver.solve.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.solve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.solve.rst", "modules/generated/openpnm.solvers.ScipyCG.rst", "modules/generated/openpnm.solvers.ScipyCG.solve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.solve.rst", "modules/generated/openpnm.topotools.rst", "modules/generated/openpnm.topotools.add_boundary_pores.rst", "modules/generated/openpnm.topotools.add_reservoir_pore.rst", "modules/generated/openpnm.topotools.bond_percolation.rst", "modules/generated/openpnm.topotools.clone_pores.rst", "modules/generated/openpnm.topotools.connect_pores.rst", "modules/generated/openpnm.topotools.conns_to_am.rst", "modules/generated/openpnm.topotools.dimensionality.rst", "modules/generated/openpnm.topotools.drop_sites.rst", "modules/generated/openpnm.topotools.extend.rst", "modules/generated/openpnm.topotools.filter_pores_by_z.rst", "modules/generated/openpnm.topotools.find_clusters.rst", "modules/generated/openpnm.topotools.find_connected_sites.rst", "modules/generated/openpnm.topotools.find_connecting_bonds.rst", "modules/generated/openpnm.topotools.find_interface_throats.rst", "modules/generated/openpnm.topotools.find_isolated_clusters.rst", "modules/generated/openpnm.topotools.find_neighbor_bonds.rst", "modules/generated/openpnm.topotools.find_neighbor_sites.rst", "modules/generated/openpnm.topotools.find_path.rst", "modules/generated/openpnm.topotools.find_surface_pores.rst", "modules/generated/openpnm.topotools.generate_base_points.rst", "modules/generated/openpnm.topotools.get_domain_area.rst", "modules/generated/openpnm.topotools.get_domain_length.rst", "modules/generated/openpnm.topotools.get_shape.rst", "modules/generated/openpnm.topotools.get_spacing.rst", "modules/generated/openpnm.topotools.hull_centroid.rst", "modules/generated/openpnm.topotools.is_fully_connected.rst", "modules/generated/openpnm.topotools.iscoplanar.rst", "modules/generated/openpnm.topotools.isoutside.rst", "modules/generated/openpnm.topotools.ispercolating.rst", "modules/generated/openpnm.topotools.issymmetric.rst", "modules/generated/openpnm.topotools.istriangular.rst", "modules/generated/openpnm.topotools.istril.rst", "modules/generated/openpnm.topotools.istriu.rst", "modules/generated/openpnm.topotools.label_faces.rst", "modules/generated/openpnm.topotools.merge_networks.rst", "modules/generated/openpnm.topotools.merge_pores.rst", "modules/generated/openpnm.topotools.reduce_coordination.rst", "modules/generated/openpnm.topotools.reflect_base_points.rst", "modules/generated/openpnm.topotools.rotate_coords.rst", "modules/generated/openpnm.topotools.shear_coords.rst", "modules/generated/openpnm.topotools.site_percolation.rst", "modules/generated/openpnm.topotools.stitch.rst", "modules/generated/openpnm.topotools.template_cylinder_annulus.rst", "modules/generated/openpnm.topotools.template_sphere_shell.rst", "modules/generated/openpnm.topotools.tri_to_am.rst", "modules/generated/openpnm.topotools.trim.rst", "modules/generated/openpnm.topotools.trim_disconnected_clusters.rst", "modules/generated/openpnm.topotools.vor_to_am.rst", "modules/generated/openpnm.utils.rst", "modules/generated/openpnm.utils.Docorator.rst", "modules/generated/openpnm.utils.Docorator.__call__.rst", "modules/generated/openpnm.utils.Docorator.dedent.rst", "modules/generated/openpnm.utils.Docorator.dedents.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s.rst", "modules/generated/openpnm.utils.Docorator.delete_params.rst", "modules/generated/openpnm.utils.Docorator.delete_params_s.rst", "modules/generated/openpnm.utils.Docorator.delete_types.rst", "modules/generated/openpnm.utils.Docorator.delete_types_s.rst", "modules/generated/openpnm.utils.Docorator.get_docstring.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summary.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf.rst", "modules/generated/openpnm.utils.Docorator.get_full_description.rst", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf.rst", "modules/generated/openpnm.utils.Docorator.get_sections.rst", "modules/generated/openpnm.utils.Docorator.get_sectionsf.rst", "modules/generated/openpnm.utils.Docorator.get_summary.rst", "modules/generated/openpnm.utils.Docorator.get_summaryf.rst", "modules/generated/openpnm.utils.Docorator.keep_params.rst", "modules/generated/openpnm.utils.Docorator.keep_params_s.rst", "modules/generated/openpnm.utils.Docorator.keep_types.rst", "modules/generated/openpnm.utils.Docorator.keep_types_s.rst", "modules/generated/openpnm.utils.Docorator.save_docstring.rst", "modules/generated/openpnm.utils.Docorator.with_indent.rst", "modules/generated/openpnm.utils.Docorator.with_indents.rst", "modules/generated/openpnm.utils.HealthDict.rst", "modules/generated/openpnm.utils.HealthDict.clear.rst", "modules/generated/openpnm.utils.HealthDict.copy.rst", "modules/generated/openpnm.utils.HealthDict.fromkeys.rst", "modules/generated/openpnm.utils.HealthDict.get.rst", "modules/generated/openpnm.utils.HealthDict.items.rst", "modules/generated/openpnm.utils.HealthDict.keys.rst", "modules/generated/openpnm.utils.HealthDict.pop.rst", "modules/generated/openpnm.utils.HealthDict.popitem.rst", "modules/generated/openpnm.utils.HealthDict.setdefault.rst", "modules/generated/openpnm.utils.HealthDict.update.rst", "modules/generated/openpnm.utils.HealthDict.values.rst", "modules/generated/openpnm.utils.NestedDict.rst", "modules/generated/openpnm.utils.NestedDict.clear.rst", "modules/generated/openpnm.utils.NestedDict.copy.rst", "modules/generated/openpnm.utils.NestedDict.fromkeys.rst", "modules/generated/openpnm.utils.NestedDict.get.rst", "modules/generated/openpnm.utils.NestedDict.items.rst", "modules/generated/openpnm.utils.NestedDict.keys.rst", "modules/generated/openpnm.utils.NestedDict.pop.rst", "modules/generated/openpnm.utils.NestedDict.popitem.rst", "modules/generated/openpnm.utils.NestedDict.setdefault.rst", "modules/generated/openpnm.utils.NestedDict.to_dict.rst", "modules/generated/openpnm.utils.NestedDict.unravel.rst", "modules/generated/openpnm.utils.NestedDict.update.rst", "modules/generated/openpnm.utils.NestedDict.values.rst", "modules/generated/openpnm.utils.PrintableDict.rst", "modules/generated/openpnm.utils.PrintableDict.clear.rst", "modules/generated/openpnm.utils.PrintableDict.copy.rst", "modules/generated/openpnm.utils.PrintableDict.fromkeys.rst", "modules/generated/openpnm.utils.PrintableDict.get.rst", "modules/generated/openpnm.utils.PrintableDict.items.rst", "modules/generated/openpnm.utils.PrintableDict.keys.rst", "modules/generated/openpnm.utils.PrintableDict.pop.rst", "modules/generated/openpnm.utils.PrintableDict.popitem.rst", "modules/generated/openpnm.utils.PrintableDict.setdefault.rst", "modules/generated/openpnm.utils.PrintableDict.update.rst", "modules/generated/openpnm.utils.PrintableDict.values.rst", "modules/generated/openpnm.utils.PrintableList.rst", "modules/generated/openpnm.utils.PrintableList.append.rst", "modules/generated/openpnm.utils.PrintableList.clear.rst", "modules/generated/openpnm.utils.PrintableList.copy.rst", "modules/generated/openpnm.utils.PrintableList.count.rst", "modules/generated/openpnm.utils.PrintableList.extend.rst", "modules/generated/openpnm.utils.PrintableList.index.rst", "modules/generated/openpnm.utils.PrintableList.insert.rst", "modules/generated/openpnm.utils.PrintableList.pop.rst", "modules/generated/openpnm.utils.PrintableList.remove.rst", "modules/generated/openpnm.utils.PrintableList.reverse.rst", "modules/generated/openpnm.utils.PrintableList.sort.rst", "modules/generated/openpnm.utils.Project.rst", "modules/generated/openpnm.utils.Project.append.rst", "modules/generated/openpnm.utils.Project.copy.rst", "modules/generated/openpnm.utils.SettingsAttr.rst", "modules/generated/openpnm.utils.SimpleList.rst", "modules/generated/openpnm.utils.SimpleList.append.rst", "modules/generated/openpnm.utils.TypedList.rst", "modules/generated/openpnm.utils.TypedList.append.rst", "modules/generated/openpnm.utils.TypedList.clear.rst", "modules/generated/openpnm.utils.TypedList.copy.rst", "modules/generated/openpnm.utils.TypedList.count.rst", "modules/generated/openpnm.utils.TypedList.extend.rst", "modules/generated/openpnm.utils.TypedList.index.rst", "modules/generated/openpnm.utils.TypedList.insert.rst", "modules/generated/openpnm.utils.TypedList.pop.rst", "modules/generated/openpnm.utils.TypedList.remove.rst", "modules/generated/openpnm.utils.TypedList.reverse.rst", "modules/generated/openpnm.utils.TypedList.sort.rst", "modules/generated/openpnm.utils.TypedMixin.rst", "modules/generated/openpnm.utils.TypedSet.rst", "modules/generated/openpnm.utils.TypedSet.add.rst", "modules/generated/openpnm.utils.TypedSet.clear.rst", "modules/generated/openpnm.utils.TypedSet.copy.rst", "modules/generated/openpnm.utils.TypedSet.difference.rst", "modules/generated/openpnm.utils.TypedSet.difference_update.rst", "modules/generated/openpnm.utils.TypedSet.discard.rst", "modules/generated/openpnm.utils.TypedSet.intersection.rst", "modules/generated/openpnm.utils.TypedSet.intersection_update.rst", "modules/generated/openpnm.utils.TypedSet.isdisjoint.rst", "modules/generated/openpnm.utils.TypedSet.issubset.rst", "modules/generated/openpnm.utils.TypedSet.issuperset.rst", "modules/generated/openpnm.utils.TypedSet.pop.rst", "modules/generated/openpnm.utils.TypedSet.remove.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update.rst", "modules/generated/openpnm.utils.TypedSet.union.rst", "modules/generated/openpnm.utils.TypedSet.update.rst", "modules/generated/openpnm.utils.Workspace.rst", "modules/generated/openpnm.utils.Workspace.clear.rst", "modules/generated/openpnm.utils.Workspace.close_project.rst", "modules/generated/openpnm.utils.Workspace.copy.rst", "modules/generated/openpnm.utils.Workspace.copy_project.rst", "modules/generated/openpnm.utils.Workspace.fromkeys.rst", "modules/generated/openpnm.utils.Workspace.get.rst", "modules/generated/openpnm.utils.Workspace.items.rst", "modules/generated/openpnm.utils.Workspace.keys.rst", "modules/generated/openpnm.utils.Workspace.load_project.rst", "modules/generated/openpnm.utils.Workspace.load_workspace.rst", "modules/generated/openpnm.utils.Workspace.new_project.rst", "modules/generated/openpnm.utils.Workspace.pop.rst", "modules/generated/openpnm.utils.Workspace.popitem.rst", "modules/generated/openpnm.utils.Workspace.save_project.rst", "modules/generated/openpnm.utils.Workspace.save_workspace.rst", "modules/generated/openpnm.utils.Workspace.setdefault.rst", "modules/generated/openpnm.utils.Workspace.update.rst", "modules/generated/openpnm.utils.Workspace.values.rst", "modules/generated/openpnm.utils.check_data_health.rst", "modules/generated/openpnm.utils.check_network_health.rst", "modules/generated/openpnm.utils.dict_to_struct.rst", "modules/generated/openpnm.utils.flat_list.rst", "modules/generated/openpnm.utils.get_mixture_model_args.rst", "modules/generated/openpnm.utils.get_printable_labels.rst", "modules/generated/openpnm.utils.get_printable_props.rst", "modules/generated/openpnm.utils.ignore_warnings.rst", "modules/generated/openpnm.utils.is_symmetric.rst", "modules/generated/openpnm.utils.is_transient.rst", "modules/generated/openpnm.utils.is_valid_propname.rst", "modules/generated/openpnm.utils.methods_to_table.rst", "modules/generated/openpnm.utils.models_to_table.rst", "modules/generated/openpnm.utils.sanitize_dict.rst", "modules/generated/openpnm.utils.struct_to_dict.rst", "modules/index.rst"], "titles": ["Applications", "Examples", "Reference", "10 Steps to Learn OpenPNM", "Basic Usage", "Predicting absolute permeability", "Adjusting Pore Size Distributions", "Predicting dispersion coefficient", "Finding Effective Diffusivity and Tortuosity of a Network", "Predicting Formation Factor", "Simulating Mercury Intrusion Porosimetry Curves", "Predicting Porosity", "Obtaining Relative Diffusivity Curves", "Predicting relative permeability", "Contibuted Examples", "Pore-Scale Models", "Settings Attribute Machinery", "The Workspace and Projects", "Available Matrix Solvers", "Steady State Transport", "Explanation of Units", "Reactive Transport", "Size Factors and Transport Conductance", "Transient Transport", "Numerical Python Primer", "Generating Networks and Quick Visualization", "Storage of Network Data and Topology", "Network Representation, Queries, and Manipulation", "Assigning Geometric Properties", "Using Labels and Defining Domains", "Creating Phases", "Simulating Single Phase Transport", "Simulating Invasion", "Visualization options", "Pore Network Modeling Framework in Python", "Installation", "algorithms", "AdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Algorithm", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "set_BC", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Drainage", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FourierConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "InvasionPercolation", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "OhmicConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "ReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StokesFlow", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientAdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientFickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Transport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "core", "Base2", "clear", "copy", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "pop", "popitem", "props", "setdefault", "to_indices", "to_mask", "update", "values", "Domain", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "LabelMixin", "filter_by_label", "labels", "num_pores", "num_throats", "pores", "set_label", "throats", "ModelWrapper", "__call__", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsDict", "clear", "copy", "dependency_graph", "dependency_list", "dependency_map", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsMixin2", "add_model", "add_model_collection", "regenerate_models", "run_model", "ParserMixin", "integrators", "Integrator", "ScipyRK45", "solve", "io", "network_from_csv", "network_from_jsongraph", "network_from_marock", "network_from_networkx", "network_from_pergeos", "network_from_porespy", "network_from_statoil", "network_to_comsol", "network_to_csv", "network_to_jsongraph", "network_to_networkx", "network_to_pandas", "network_to_pergeos", "network_to_salome", "network_to_stl", "print_hdf5", "project_to_csv", "project_to_dict", "project_to_hdf5", "project_to_pandas", "project_to_paraview", "project_to_vtk", "project_to_xdmf", "models", "collections", "geometry", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "network", "phase", "air", "gas", "liquid", "mercury", "water", "physics", "basic", "standard", "geometry", "conduit_lengths", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "diffusive_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "hydraulic_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "pore_cross_sectional_area", "circle", "cone", "cube", "sphere", "square", "pore_seed", "random", "spatially_correlated", "pore_size", "equivalent_diameter", "from_neighbor_throats", "generic_distribution", "largest_sphere", "normal", "random", "weibull", "pore_surface_area", "circle", "cube", "sphere", "square", "pore_volume", "circle", "cube", "effective", "sphere", "square", "throat_capillary_shape_factor", "jenkins_rao", "mason_morrow", "throat_centroid", "pore_coords", "throat_cross_sectional_area", "cuboid", "cylinder", "rectangle", "throat_endpoints", "spheres_and_cylinders", "throat_length", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "throat_perimeter", "cuboid", "cylinder", "rectangle", "throat_seed", "from_neighbor_pores", "random", "throat_size", "equivalent_diameter", "from_neighbor_pores", "generic_distribution", "normal", "random", "weibull", "throat_surface_area", "cuboid", "cylinder", "extrusion", "rectangle", "throat_vector", "pore_to_pore", "throat_volume", "cuboid", "cylinder", "extrusion", "lens", "pendular_ring", "rectangle", "misc", "blank", "clip", "constant", "difference", "fraction", "from_neighbor_pores", "from_neighbor_throats", "generic_distribution", "generic_function", "invert", "linear", "match_histogram", "normal", "normalize", "polynomial", "product", "random", "scaled", "summation", "weibull", "network", "bidirectional_throats", "cluster_number", "cluster_size", "coordination_number", "count_coincident_pores", "distance_to_furthest_neighbor", "distance_to_nearest_neighbor", "distance_to_nearest_pore", "duplicate_throats", "find_coincident_pores", "headless_throats", "isolated_pores", "looped_throats", "pore_to_pore_distance", "reversed_throats", "phase", "chemicals_wrapper", "critical_props", "density", "ideal_gas", "liquid_mixture_COSTALD", "liquid_pure_COSTALD", "mass_to_molar", "water_correlation", "diffusivity", "gas_mixture_ce", "gas_mixture_fesg", "liquid_mixture_tc", "heat_capacity", "gas_mixture_yweighted", "gas_pure_TRC", "liquid_mixture_xweighted", "liquid_pure_rp", "misc", "mix_and_match", "mole_to_mass_fraction", "mixtures", "from_component", "mixing_rule", "mole_summation", "mole_to_mass_fraction", "salinity", "partition_coefficient", "gaseous_species_in_water", "surface_tension", "liquid_mixture_wsd", "liquid_pure_bb", "water_correlation", "thermal_conductivity", "gas_mixture_whz", "gas_pure_gismr", "liquid_mixture_DIPPR9H", "liquid_pure_gismr", "liquid_pure_sr", "water_correlation", "vapor_pressure", "liquid_pure_antoine", "liquid_pure_lk", "water_correlation", "viscosity", "gas_mixture_hz", "gas_pure_gesmr", "gas_pure_st", "liquid_mixture_xweighted", "liquid_pure_ls", "water_correlation", "physics", "ad_dif_conductance", "ad_dif", "capillary_pressure", "purcell", "washburn", "diffusive_conductance", "generic_diffusive", "mixed_diffusion", "ordinary_diffusion", "taylor_aris_diffusion", "electrical_conductance", "generic_electrical", "series_resistors", "hydraulic_conductance", "generic_hydraulic", "hagen_poiseuille", "valvatne_blunt", "meniscus", "general_toroidal", "purcell", "sinusoidal", "multiphase", "conduit_conductance", "late_filling", "source_terms", "butler_volmer_conc", "butler_volmer_voltage", "exponential", "general_symbolic", "linear", "logarithm", "natural_exponential", "natural_logarithm", "power_law", "standard_kinetics", "thermal_conductance", "generic_thermal", "series_resistors", "network", "BodyCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Cubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "CubicTemplate", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Delaunay", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "DelaunayVoronoiDual", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "find_pore_hulls", "find_throat_facets", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Demo", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FaceCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Network", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Voronoi", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "phase", "Air", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "BinaryGas", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "GasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "LiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Mercury", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Mixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Phase", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Species", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGas", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "StandardLiquid", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardLiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Water", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "solvers", "BaseSolver", "solve", "DirectSolver", "solve", "IterativeSolver", "solve", "PETScLinearSolver", "solve", "PardisoSpsolve", "solve", "ScipyCG", "solve", "ScipySpsolve", "solve", "topotools", "add_boundary_pores", "add_reservoir_pore", "bond_percolation", "clone_pores", "connect_pores", "conns_to_am", "dimensionality", "drop_sites", "extend", "filter_pores_by_z", "find_clusters", "find_connected_sites", "find_connecting_bonds", "find_interface_throats", "find_isolated_clusters", "find_neighbor_bonds", "find_neighbor_sites", "find_path", "find_surface_pores", "generate_base_points", "get_domain_area", "get_domain_length", "get_shape", "get_spacing", "hull_centroid", "is_fully_connected", "iscoplanar", "isoutside", "ispercolating", "issymmetric", "istriangular", "istril", "istriu", "label_faces", "merge_networks", "merge_pores", "reduce_coordination", "reflect_base_points", "rotate_coords", "shear_coords", "site_percolation", "stitch", "template_cylinder_annulus", "template_sphere_shell", "tri_to_am", "trim", "trim_disconnected_clusters", "vor_to_am", "utils", "Docorator", "__call__", "dedent", "dedents", "delete_kwargs", "delete_kwargs_s", "delete_params", "delete_params_s", "delete_types", "delete_types_s", "get_docstring", "get_extended_summary", "get_extended_summaryf", "get_full_description", "get_full_descriptionf", "get_sections", "get_sectionsf", "get_summary", "get_summaryf", "keep_params", "keep_params_s", "keep_types", "keep_types_s", "save_docstring", "with_indent", "with_indents", "HealthDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "NestedDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "to_dict", "unravel", "update", "values", "PrintableDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "PrintableList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "Project", "append", "copy", "SettingsAttr", "SimpleList", "append", "TypedList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "TypedMixin", "TypedSet", "add", "clear", "copy", "difference", "difference_update", "discard", "intersection", "intersection_update", "isdisjoint", "issubset", "issuperset", "pop", "remove", "symmetric_difference", "symmetric_difference_update", "union", "update", "Workspace", "clear", "close_project", "copy", "copy_project", "fromkeys", "get", "items", "keys", "load_project", "load_workspace", "new_project", "pop", "popitem", "save_project", "save_workspace", "setdefault", "update", "values", "check_data_health", "check_network_health", "dict_to_struct", "flat_list", "get_mixture_model_args", "get_printable_labels", "get_printable_props", "ignore_warnings", "is_symmetric", "is_transient", "is_valid_propname", "methods_to_table", "models_to_table", "sanitize_dict", "struct_to_dict", "Module Reference"], "terms": {"predict": [0, 1, 22, 30, 825], "absolut": [0, 1, 13, 28, 553, 1783, 1788], "permeabl": [0, 1, 12, 30], "adjust": [0, 1, 27, 28, 33, 59, 89, 98, 119, 151, 184, 196, 217, 249, 282, 315, 348, 382, 415, 448, 827, 831, 1614, 1652], "pore": [0, 1, 2, 5, 8, 9, 10, 12, 13, 19, 20, 21, 24, 25, 30, 32, 33, 43, 47, 49, 50, 51, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 75, 79, 81, 82, 83, 88, 89, 90, 92, 93, 94, 98, 102, 106, 108, 109, 110, 116, 119, 120, 121, 122, 124, 125, 126, 129, 135, 139, 141, 142, 143, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 168, 172, 174, 175, 176, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 196, 200, 204, 206, 207, 208, 214, 217, 218, 219, 220, 222, 223, 224, 233, 237, 239, 240, 241, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 266, 270, 272, 273, 274, 279, 280, 282, 283, 284, 285, 286, 288, 289, 290, 299, 303, 305, 306, 307, 312, 313, 315, 316, 317, 318, 319, 321, 322, 323, 332, 336, 338, 339, 340, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 366, 370, 372, 373, 374, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 399, 403, 405, 406, 407, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 432, 436, 438, 439, 440, 445, 446, 448, 449, 450, 451, 453, 454, 455, 458, 465, 467, 470, 472, 473, 477, 481, 485, 487, 488, 489, 494, 495, 496, 497, 499, 500, 501, 505, 506, 507, 510, 511, 540, 541, 543, 544, 553, 554, 558, 561, 564, 565, 567, 568, 570, 573, 577, 578, 579, 580, 581, 582, 583, 586, 589, 590, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 647, 649, 650, 651, 652, 653, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 670, 671, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 697, 698, 701, 702, 711, 712, 714, 715, 716, 717, 718, 719, 720, 726, 727, 728, 729, 732, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 781, 782, 783, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 821, 823, 824, 825, 827, 828, 829, 831, 832, 834, 835, 837, 845, 846, 848, 849, 850, 854, 855, 856, 857, 858, 859, 860, 861, 866, 867, 869, 870, 871, 872, 877, 878, 879, 880, 882, 883, 884, 887, 888, 889, 893, 894, 895, 896, 897, 898, 899, 900, 905, 906, 908, 909, 910, 911, 916, 917, 918, 919, 921, 922, 923, 926, 927, 931, 932, 933, 934, 935, 936, 937, 938, 943, 944, 946, 947, 948, 949, 954, 955, 956, 957, 959, 960, 961, 964, 965, 969, 970, 971, 972, 973, 974, 975, 976, 981, 982, 984, 985, 986, 987, 992, 993, 994, 995, 997, 998, 999, 1002, 1003, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1021, 1022, 1024, 1025, 1026, 1027, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1042, 1043, 1044, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1060, 1061, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1099, 1100, 1102, 1103, 1104, 1105, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1137, 1138, 1140, 1141, 1142, 1143, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1158, 1159, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1175, 1176, 1178, 1179, 1180, 1181, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1198, 1202, 1206, 1208, 1209, 1210, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1226, 1227, 1229, 1232, 1235, 1237, 1238, 1240, 1241, 1242, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1258, 1260, 1261, 1263, 1266, 1269, 1271, 1272, 1274, 1275, 1276, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1292, 1294, 1295, 1297, 1300, 1303, 1305, 1306, 1308, 1309, 1310, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1326, 1327, 1328, 1332, 1336, 1338, 1339, 1340, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1356, 1357, 1359, 1362, 1365, 1367, 1368, 1370, 1371, 1372, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1388, 1389, 1393, 1397, 1399, 1400, 1401, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1417, 1421, 1425, 1427, 1428, 1429, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1445, 1449, 1453, 1455, 1456, 1457, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1473, 1474, 1476, 1479, 1482, 1484, 1485, 1487, 1488, 1489, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1505, 1507, 1511, 1515, 1517, 1518, 1519, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1535, 1536, 1538, 1541, 1544, 1546, 1547, 1549, 1550, 1551, 1556, 1557, 1558, 1559, 1560, 1562, 1563, 1564, 1567, 1569, 1573, 1577, 1579, 1580, 1581, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1612, 1613, 1615, 1616, 1618, 1620, 1621, 1622, 1626, 1630, 1632, 1633, 1637, 1638, 1645, 1647, 1648, 1651, 1653, 1657, 1793, 1794, 1797, 1798, 1799, 1800, 1803, 1808], "size": [0, 1, 2, 5, 9, 10, 11, 15, 25, 29, 31, 32, 33, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 351, 353, 384, 386, 417, 419, 450, 451, 530, 565, 614, 617, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 646, 651, 654, 702, 704, 728, 732, 737, 744, 815, 816, 817, 818, 820, 821, 823, 824, 845, 846, 887, 964, 1002, 1158, 1631, 1639, 1649, 1795], "distribut": [0, 1, 7, 10, 15, 29, 33, 35, 646, 647, 651, 653, 654, 655, 702, 703, 704, 705, 728, 733, 737, 740, 887, 1631, 1648], "dispers": [0, 1], "coeffici": [0, 1, 4, 8, 9, 21, 30, 37, 129, 162, 227, 260, 293, 326, 360, 393, 426, 609, 610, 611, 612, 613, 615, 616, 618, 621, 623, 735, 767, 768, 769, 772, 798, 836, 838, 839, 840, 841, 842, 1225, 1604], "find": [0, 1, 5, 7, 9, 11, 12, 13, 15, 17, 19, 21, 24, 28, 29, 30, 32, 33, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 477, 512, 541, 553, 648, 652, 653, 655, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 705, 733, 740, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 783, 827, 850, 854, 855, 857, 859, 860, 861, 871, 889, 893, 894, 896, 898, 899, 900, 910, 927, 931, 932, 934, 936, 937, 938, 948, 965, 969, 970, 972, 974, 975, 976, 986, 1003, 1007, 1008, 1010, 1012, 1013, 1014, 1015, 1016, 1026, 1044, 1048, 1049, 1051, 1053, 1054, 1055, 1065, 1083, 1087, 1088, 1090, 1092, 1093, 1094, 1104, 1121, 1125, 1126, 1128, 1130, 1131, 1132, 1142, 1159, 1163, 1164, 1166, 1168, 1169, 1170, 1180, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1416, 1417, 1445, 1474, 1507, 1536, 1569, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1645, 1647, 1648, 1794], "effect": [0, 1, 9, 13, 26, 27, 28, 29, 129, 227, 477, 541, 621, 636, 655, 668, 705, 740, 808, 812, 818, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1757], "diffus": [0, 1, 5, 10, 13, 19, 20, 21, 26, 33, 37, 129, 326, 360, 586, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 647, 767, 768, 769, 810, 812, 815, 816, 817, 818, 820, 821, 829, 845, 846, 1225], "tortuos": [0, 1, 129], "network": [0, 1, 3, 4, 15, 19, 20, 21, 24, 28, 29, 30, 31, 32, 33, 37, 71, 97, 122, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 458, 459, 476, 540, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 669, 671, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 728, 729, 732, 733, 737, 740, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 810, 812, 815, 816, 817, 818, 820, 821, 823, 824, 825, 828, 837, 845, 846, 848, 849, 854, 855, 857, 858, 859, 860, 861, 871, 887, 888, 893, 894, 896, 897, 898, 899, 900, 910, 926, 931, 932, 934, 935, 936, 937, 938, 948, 964, 969, 970, 972, 973, 974, 975, 976, 986, 1002, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1026, 1042, 1043, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1065, 1081, 1082, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1104, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1180, 1197, 1225, 1259, 1293, 1327, 1355, 1388, 1416, 1444, 1472, 1506, 1534, 1568, 1612, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1637, 1639, 1640, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1737, 1785, 1794, 1808], "format": [0, 1, 7, 8, 19, 25, 26, 29, 31, 33, 478, 530, 542, 550, 552, 553, 555, 557, 565, 568, 572, 606, 621, 636, 721, 848, 851, 854, 855, 864, 866, 887, 890, 893, 894, 903, 905, 926, 928, 931, 932, 941, 943, 964, 966, 969, 970, 979, 981, 1002, 1004, 1007, 1008, 1019, 1021, 1042, 1045, 1048, 1049, 1058, 1060, 1081, 1084, 1087, 1088, 1097, 1099, 1120, 1122, 1125, 1126, 1135, 1137, 1158, 1160, 1163, 1164, 1173, 1175, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1613, 1617, 1619, 1624, 1656, 1659, 1798, 1799], "factor": [0, 1, 2, 5, 8, 28, 31, 33, 577, 578, 579, 580, 581, 582, 583, 614, 617, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 669, 738, 763, 774, 792, 794, 799, 806, 810, 815, 816, 817, 818, 820, 821, 823, 824, 825, 827, 831, 834, 835, 845, 846, 1604, 1651], "simul": [0, 1, 3, 4, 5, 7, 8, 9, 12, 13, 17, 19, 21, 22, 25, 30, 33, 34, 37, 118, 129, 162, 227, 260, 293, 326, 360, 393, 664, 710, 762, 1416, 1737, 1808], "mercuri": [0, 1, 4, 30, 32, 668, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354], "intrus": [0, 1, 4, 32], "porosimetri": [0, 1, 4, 32, 668], "curv": [0, 1, 4, 6, 13, 32, 1631], "poros": [0, 1, 8, 25, 129], "obtain": [0, 1, 13, 19, 22, 25, 26, 32, 651, 702, 728, 860, 861, 864, 866, 899, 900, 903, 905, 937, 938, 941, 943, 975, 976, 979, 981, 1013, 1014, 1019, 1021, 1054, 1055, 1058, 1060, 1093, 1094, 1097, 1099, 1131, 1132, 1135, 1137, 1169, 1170, 1173, 1175, 1237, 1271, 1305, 1367, 1484, 1546, 1627, 1628, 1648, 1774], "rel": [0, 1, 4, 553, 1632, 1633, 1653, 1783, 1788, 1801], "The": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 24, 25, 28, 31, 32, 33, 37, 39, 43, 46, 47, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 73, 75, 78, 79, 82, 83, 84, 87, 88, 89, 90, 92, 94, 100, 102, 105, 106, 109, 110, 111, 115, 116, 118, 119, 121, 122, 124, 126, 129, 131, 135, 138, 139, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 162, 164, 168, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 195, 198, 200, 203, 204, 207, 208, 209, 213, 214, 217, 218, 219, 220, 222, 224, 227, 229, 233, 236, 237, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 260, 262, 266, 269, 270, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 293, 295, 299, 302, 303, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 323, 326, 328, 332, 335, 336, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 357, 360, 362, 366, 369, 370, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 393, 395, 399, 402, 403, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 426, 428, 432, 435, 436, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 464, 465, 470, 473, 476, 477, 478, 481, 484, 485, 488, 489, 490, 493, 494, 496, 497, 499, 501, 505, 506, 507, 508, 509, 510, 511, 525, 541, 542, 544, 546, 552, 553, 554, 556, 557, 558, 561, 564, 565, 566, 567, 568, 569, 571, 572, 573, 606, 621, 636, 646, 647, 649, 650, 651, 652, 653, 654, 655, 664, 668, 677, 698, 700, 701, 702, 703, 704, 705, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 746, 751, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 827, 828, 829, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 849, 850, 851, 854, 855, 856, 858, 859, 860, 861, 864, 865, 866, 867, 870, 871, 872, 873, 876, 877, 879, 880, 882, 884, 887, 888, 889, 890, 893, 894, 895, 897, 898, 899, 900, 903, 904, 905, 906, 909, 910, 911, 912, 915, 916, 918, 919, 921, 923, 926, 927, 928, 931, 932, 933, 935, 936, 937, 938, 941, 942, 943, 944, 947, 948, 949, 950, 953, 954, 956, 957, 959, 961, 964, 965, 966, 969, 970, 971, 973, 974, 975, 976, 979, 980, 981, 982, 985, 986, 987, 988, 991, 992, 994, 995, 997, 999, 1002, 1003, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1031, 1032, 1034, 1035, 1037, 1039, 1043, 1044, 1045, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1064, 1065, 1066, 1067, 1070, 1071, 1073, 1074, 1076, 1078, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1109, 1110, 1112, 1113, 1115, 1117, 1120, 1121, 1122, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1147, 1148, 1150, 1151, 1153, 1155, 1158, 1159, 1160, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1173, 1174, 1175, 1176, 1179, 1180, 1181, 1182, 1185, 1186, 1188, 1189, 1191, 1193, 1198, 1199, 1202, 1205, 1206, 1209, 1210, 1211, 1214, 1215, 1217, 1218, 1220, 1222, 1225, 1226, 1227, 1228, 1232, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1246, 1247, 1249, 1250, 1251, 1253, 1255, 1258, 1260, 1261, 1262, 1266, 1269, 1270, 1271, 1272, 1275, 1276, 1277, 1280, 1281, 1283, 1284, 1285, 1287, 1289, 1292, 1294, 1295, 1296, 1300, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1314, 1315, 1317, 1318, 1319, 1321, 1323, 1326, 1328, 1329, 1332, 1335, 1336, 1339, 1340, 1341, 1344, 1345, 1347, 1348, 1350, 1352, 1356, 1357, 1358, 1362, 1365, 1366, 1367, 1368, 1371, 1372, 1373, 1376, 1377, 1379, 1380, 1381, 1383, 1385, 1389, 1390, 1393, 1396, 1397, 1400, 1401, 1402, 1405, 1406, 1408, 1409, 1411, 1413, 1416, 1417, 1418, 1421, 1424, 1425, 1428, 1429, 1430, 1433, 1434, 1436, 1437, 1439, 1441, 1445, 1446, 1449, 1452, 1453, 1456, 1457, 1458, 1461, 1462, 1464, 1465, 1467, 1469, 1472, 1473, 1474, 1475, 1479, 1482, 1483, 1484, 1485, 1488, 1489, 1490, 1493, 1494, 1496, 1497, 1498, 1500, 1502, 1505, 1507, 1508, 1511, 1514, 1515, 1518, 1519, 1520, 1523, 1524, 1526, 1527, 1529, 1531, 1534, 1535, 1536, 1537, 1541, 1544, 1545, 1546, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1559, 1560, 1562, 1564, 1567, 1569, 1570, 1573, 1576, 1577, 1580, 1581, 1582, 1585, 1586, 1588, 1589, 1591, 1593, 1596, 1604, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1639, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1663, 1665, 1667, 1669, 1672, 1674, 1678, 1680, 1682, 1685, 1736, 1737, 1739, 1740, 1743, 1754, 1774, 1776, 1778, 1783, 1784, 1785, 1788, 1789, 1794, 1795, 1798, 1799, 1807], "best": [1, 24, 25, 26, 28, 32, 35], "wai": [1, 7, 12, 13, 24, 25, 27, 28, 29, 30, 31, 32, 652, 659, 669, 758], "learn": [1, 22, 24, 28], "openpnm": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 71, 129, 260, 347, 381, 414, 426, 459, 478, 542, 550, 552, 553, 554, 556, 557, 561, 564, 567, 568, 570, 571, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 649, 651, 652, 653, 654, 655, 657, 659, 662, 663, 664, 665, 666, 669, 671, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 700, 702, 703, 704, 705, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 724, 728, 729, 732, 733, 737, 740, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 851, 854, 855, 857, 858, 859, 860, 861, 864, 866, 871, 887, 890, 893, 894, 896, 897, 898, 899, 900, 903, 905, 910, 928, 931, 932, 934, 935, 936, 937, 938, 941, 943, 948, 966, 969, 970, 972, 973, 974, 975, 976, 979, 981, 986, 1004, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1019, 1021, 1026, 1045, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1058, 1060, 1065, 1084, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1097, 1099, 1104, 1120, 1122, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1137, 1142, 1160, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1173, 1175, 1180, 1197, 1199, 1228, 1262, 1296, 1329, 1355, 1358, 1388, 1390, 1418, 1446, 1475, 1508, 1537, 1568, 1570, 1613, 1618, 1626, 1713, 1725, 1737, 1774, 1789, 1798, 1799, 1800, 1803, 1808], "like": [1, 4, 6, 15, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 48, 59, 80, 89, 107, 119, 140, 151, 173, 184, 205, 217, 238, 249, 271, 282, 304, 315, 337, 348, 371, 382, 404, 415, 437, 448, 466, 486, 518, 519, 533, 534, 554, 758, 810, 848, 868, 887, 907, 945, 964, 983, 1023, 1042, 1062, 1081, 1101, 1120, 1139, 1158, 1177, 1207, 1239, 1273, 1307, 1337, 1369, 1398, 1416, 1426, 1454, 1486, 1516, 1548, 1578, 1665, 1669, 1671, 1680, 1682, 1692, 1693, 1704, 1705, 1718, 1719, 1781, 1782], "anyth": [1, 24, 28, 30, 32, 59, 89, 119, 151, 184, 196, 217, 249, 282, 315, 348, 382, 415, 448], "i": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 43, 45, 47, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 71, 75, 77, 79, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 102, 104, 106, 109, 113, 114, 115, 116, 119, 120, 122, 123, 124, 125, 126, 127, 129, 135, 137, 139, 142, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 168, 170, 172, 175, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 195, 196, 200, 202, 204, 207, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 233, 235, 237, 240, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 266, 268, 270, 273, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 299, 301, 303, 306, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 332, 334, 336, 339, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 366, 368, 370, 373, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 393, 399, 401, 403, 406, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 426, 432, 434, 436, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 463, 465, 468, 469, 470, 471, 472, 473, 474, 477, 481, 483, 485, 488, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 505, 506, 509, 511, 512, 517, 520, 521, 522, 523, 525, 528, 529, 530, 532, 535, 536, 537, 538, 540, 541, 543, 544, 546, 549, 550, 552, 553, 554, 555, 557, 565, 566, 568, 569, 572, 573, 574, 575, 576, 584, 585, 587, 588, 591, 594, 595, 596, 597, 599, 600, 601, 602, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 630, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 661, 664, 667, 670, 672, 676, 678, 692, 696, 698, 699, 701, 702, 703, 704, 705, 706, 711, 712, 713, 716, 717, 718, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 850, 854, 855, 856, 857, 859, 860, 861, 863, 864, 866, 867, 870, 871, 874, 875, 876, 877, 878, 879, 881, 882, 883, 884, 885, 887, 889, 893, 894, 895, 896, 898, 899, 900, 902, 903, 905, 906, 909, 910, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 926, 927, 931, 932, 933, 934, 936, 937, 938, 940, 941, 943, 944, 947, 948, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 965, 969, 970, 971, 972, 974, 975, 976, 978, 979, 981, 982, 985, 986, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1002, 1003, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1040, 1044, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1057, 1058, 1060, 1061, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1081, 1083, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1096, 1097, 1099, 1100, 1103, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1121, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1137, 1138, 1141, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1159, 1163, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1175, 1176, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1202, 1204, 1206, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1232, 1234, 1237, 1238, 1241, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1258, 1260, 1261, 1266, 1268, 1271, 1272, 1275, 1278, 1279, 1280, 1281, 1282, 1284, 1286, 1287, 1288, 1289, 1290, 1292, 1294, 1295, 1300, 1302, 1305, 1306, 1309, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1321, 1322, 1323, 1324, 1326, 1328, 1332, 1334, 1336, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1362, 1364, 1367, 1368, 1371, 1374, 1375, 1376, 1377, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1393, 1395, 1397, 1400, 1403, 1404, 1405, 1406, 1407, 1408, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1421, 1423, 1425, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1445, 1449, 1451, 1453, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1479, 1481, 1484, 1485, 1488, 1491, 1492, 1493, 1494, 1495, 1497, 1499, 1500, 1501, 1502, 1503, 1505, 1507, 1511, 1513, 1515, 1518, 1521, 1522, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1541, 1543, 1546, 1547, 1550, 1553, 1554, 1555, 1556, 1557, 1559, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1573, 1575, 1577, 1580, 1583, 1584, 1585, 1586, 1587, 1588, 1590, 1591, 1592, 1593, 1594, 1596, 1603, 1604, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1659, 1660, 1665, 1672, 1674, 1678, 1687, 1691, 1694, 1695, 1696, 1697, 1703, 1706, 1707, 1708, 1711, 1713, 1717, 1720, 1721, 1722, 1723, 1731, 1733, 1734, 1736, 1737, 1739, 1740, 1749, 1751, 1752, 1754, 1757, 1760, 1762, 1763, 1768, 1769, 1770, 1772, 1774, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1797, 1798, 1799, 1801, 1803, 1806, 1808], "experi": [1, 10, 32], "In": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 69, 95, 127, 160, 193, 195, 225, 258, 291, 324, 358, 391, 424, 456, 458, 474, 502, 523, 529, 538, 885, 924, 962, 1000, 1040, 1079, 1118, 1156, 1194, 1223, 1256, 1290, 1324, 1353, 1386, 1414, 1442, 1470, 1503, 1532, 1565, 1594, 1623, 1697, 1711, 1723, 1737, 1791], "thi": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 50, 55, 58, 59, 60, 66, 67, 69, 82, 87, 89, 90, 92, 93, 95, 98, 109, 115, 119, 121, 122, 124, 125, 127, 129, 142, 147, 150, 151, 152, 157, 158, 160, 175, 180, 183, 184, 185, 190, 191, 193, 195, 196, 207, 213, 217, 219, 220, 222, 223, 225, 227, 240, 245, 248, 249, 250, 255, 256, 258, 260, 273, 278, 281, 282, 283, 288, 289, 291, 306, 311, 314, 315, 316, 321, 322, 324, 339, 344, 348, 349, 355, 356, 358, 373, 378, 382, 383, 388, 389, 391, 393, 406, 411, 415, 416, 421, 422, 424, 426, 439, 444, 447, 448, 449, 453, 454, 456, 458, 472, 474, 476, 477, 488, 493, 495, 497, 499, 500, 502, 504, 506, 509, 510, 511, 512, 523, 525, 529, 538, 540, 541, 543, 546, 550, 552, 553, 554, 557, 558, 564, 565, 568, 569, 570, 573, 574, 575, 576, 584, 585, 587, 588, 591, 594, 595, 596, 601, 604, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 624, 630, 633, 637, 638, 639, 640, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 667, 670, 672, 676, 678, 692, 696, 698, 699, 701, 702, 703, 704, 705, 706, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 854, 855, 857, 859, 860, 861, 864, 866, 870, 871, 876, 878, 880, 882, 883, 885, 888, 889, 893, 894, 896, 898, 899, 900, 903, 905, 909, 910, 915, 917, 919, 921, 922, 924, 927, 931, 932, 934, 936, 937, 938, 941, 943, 947, 948, 953, 955, 957, 959, 960, 962, 964, 965, 969, 970, 972, 974, 975, 976, 979, 981, 985, 986, 991, 993, 995, 997, 998, 1000, 1002, 1003, 1007, 1008, 1010, 1012, 1013, 1014, 1015, 1019, 1021, 1025, 1026, 1031, 1033, 1035, 1037, 1038, 1040, 1043, 1044, 1048, 1049, 1051, 1053, 1054, 1055, 1058, 1060, 1064, 1065, 1070, 1072, 1074, 1076, 1077, 1079, 1082, 1083, 1087, 1088, 1090, 1092, 1093, 1094, 1097, 1099, 1103, 1104, 1109, 1111, 1113, 1115, 1116, 1118, 1120, 1121, 1125, 1126, 1128, 1130, 1131, 1132, 1135, 1137, 1141, 1142, 1147, 1149, 1151, 1153, 1154, 1156, 1159, 1163, 1164, 1166, 1168, 1169, 1170, 1173, 1175, 1179, 1180, 1185, 1187, 1189, 1191, 1192, 1194, 1196, 1198, 1209, 1214, 1216, 1218, 1220, 1221, 1223, 1226, 1227, 1229, 1237, 1241, 1246, 1248, 1249, 1251, 1253, 1254, 1256, 1258, 1259, 1260, 1261, 1263, 1271, 1275, 1280, 1282, 1283, 1285, 1287, 1288, 1290, 1292, 1293, 1294, 1295, 1297, 1305, 1309, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1328, 1339, 1344, 1346, 1348, 1350, 1351, 1353, 1356, 1357, 1359, 1367, 1371, 1376, 1378, 1379, 1381, 1383, 1384, 1386, 1388, 1389, 1400, 1405, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1428, 1433, 1435, 1437, 1439, 1440, 1442, 1445, 1456, 1461, 1463, 1465, 1467, 1468, 1470, 1472, 1473, 1474, 1476, 1484, 1488, 1493, 1495, 1496, 1498, 1500, 1501, 1503, 1505, 1507, 1518, 1523, 1525, 1527, 1529, 1530, 1532, 1534, 1535, 1536, 1538, 1546, 1550, 1555, 1557, 1558, 1560, 1562, 1563, 1565, 1567, 1569, 1580, 1585, 1587, 1589, 1591, 1592, 1594, 1596, 1604, 1611, 1612, 1613, 1614, 1618, 1619, 1623, 1624, 1626, 1627, 1628, 1630, 1631, 1640, 1645, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1659, 1660, 1667, 1669, 1671, 1672, 1674, 1676, 1678, 1680, 1682, 1687, 1697, 1711, 1723, 1737, 1740, 1757, 1758, 1760, 1761, 1766, 1767, 1774, 1776, 1783, 1788, 1789, 1791, 1794, 1797, 1798, 1799, 1806], "page": [1, 4, 35], "you": [1, 4, 6, 8, 15, 17, 22, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 493, 509, 549, 876, 887, 915, 953, 991, 1031, 1070, 1109, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585, 1616, 1680, 1682, 1800], "can": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 50, 55, 59, 82, 87, 89, 109, 115, 117, 119, 129, 142, 147, 151, 175, 180, 184, 207, 213, 217, 240, 245, 249, 273, 278, 282, 306, 311, 315, 339, 344, 347, 348, 373, 378, 381, 382, 406, 411, 414, 415, 439, 444, 448, 488, 493, 506, 509, 529, 549, 553, 554, 556, 557, 568, 570, 571, 652, 653, 655, 703, 705, 729, 732, 733, 735, 740, 758, 769, 783, 810, 827, 834, 835, 848, 849, 858, 870, 876, 887, 888, 897, 909, 915, 935, 947, 953, 964, 973, 985, 991, 1002, 1011, 1025, 1031, 1042, 1043, 1052, 1064, 1070, 1081, 1082, 1091, 1103, 1109, 1120, 1129, 1141, 1147, 1158, 1167, 1179, 1185, 1209, 1214, 1226, 1241, 1246, 1249, 1260, 1275, 1280, 1283, 1294, 1309, 1314, 1317, 1339, 1344, 1356, 1371, 1376, 1379, 1400, 1405, 1416, 1428, 1433, 1456, 1461, 1472, 1473, 1488, 1493, 1496, 1518, 1523, 1534, 1535, 1550, 1555, 1558, 1580, 1585, 1604, 1619, 1622, 1631, 1639, 1645, 1647, 1650, 1651, 1680, 1682, 1736, 1737, 1754, 1783, 1788, 1789], "lot": [1, 22, 28, 29, 32, 1800], "help": [1, 17, 24, 25, 27, 28, 29, 525, 926, 1653], "get": [1, 4, 6, 14, 15, 17, 21, 22, 24, 26, 27, 28, 29, 31, 35, 210, 549, 652, 761, 762, 763, 764, 765, 767, 768, 769, 772, 774, 783, 785, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 803, 804, 806, 807, 1002, 1235, 1237, 1258, 1259, 1269, 1271, 1292, 1293, 1303, 1305, 1326, 1365, 1367, 1482, 1484, 1505, 1544, 1546, 1567, 1671, 1672, 1674, 1678, 1798, 1799, 1800], "start": [1, 6, 13, 15, 21, 22, 24, 25, 27, 28, 30, 31, 32, 35, 218, 496, 544, 646, 652, 654, 704, 737, 879, 918, 956, 994, 1034, 1073, 1112, 1150, 1188, 1217, 1250, 1284, 1318, 1347, 1380, 1408, 1436, 1464, 1497, 1526, 1559, 1588, 1639, 1731, 1749, 1803], "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 43, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 75, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 98, 102, 106, 108, 109, 110, 111, 114, 115, 116, 119, 120, 121, 122, 124, 135, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 168, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 196, 200, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, 220, 222, 227, 233, 237, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 260, 266, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 299, 303, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 332, 336, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 366, 370, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 399, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 432, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 458, 465, 467, 469, 470, 477, 478, 481, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 499, 504, 505, 506, 507, 508, 509, 510, 511, 521, 525, 529, 536, 541, 542, 543, 553, 554, 557, 565, 568, 569, 570, 572, 573, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 621, 622, 623, 625, 626, 627, 628, 629, 630, 635, 636, 637, 638, 645, 646, 647, 649, 650, 652, 654, 657, 658, 659, 660, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 698, 700, 701, 704, 717, 718, 720, 724, 726, 727, 731, 735, 737, 746, 751, 753, 754, 756, 758, 765, 769, 780, 783, 785, 789, 796, 798, 805, 807, 812, 827, 828, 831, 837, 848, 849, 850, 851, 854, 855, 856, 857, 858, 859, 860, 861, 864, 866, 867, 869, 870, 871, 872, 873, 875, 876, 877, 878, 880, 882, 887, 888, 889, 890, 893, 894, 895, 896, 897, 898, 899, 900, 903, 905, 906, 908, 909, 910, 911, 912, 914, 915, 916, 917, 919, 921, 926, 927, 928, 931, 932, 933, 934, 935, 936, 937, 938, 941, 943, 944, 946, 947, 948, 949, 950, 952, 953, 954, 955, 957, 959, 964, 965, 966, 969, 970, 971, 972, 973, 974, 975, 976, 979, 981, 982, 984, 985, 986, 987, 988, 990, 991, 992, 993, 995, 997, 1002, 1003, 1004, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1035, 1037, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1076, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1113, 1115, 1120, 1121, 1122, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1151, 1153, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1189, 1191, 1198, 1199, 1202, 1206, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1218, 1220, 1227, 1228, 1229, 1232, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1251, 1253, 1261, 1262, 1263, 1266, 1271, 1272, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1285, 1287, 1295, 1296, 1297, 1300, 1305, 1306, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1319, 1321, 1328, 1329, 1332, 1336, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1348, 1350, 1357, 1358, 1359, 1362, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1381, 1383, 1389, 1390, 1393, 1397, 1399, 1400, 1401, 1402, 1404, 1405, 1406, 1407, 1409, 1411, 1416, 1417, 1418, 1421, 1425, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1437, 1439, 1445, 1446, 1449, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1465, 1467, 1472, 1474, 1475, 1476, 1479, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1498, 1500, 1507, 1508, 1511, 1515, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1525, 1527, 1529, 1534, 1536, 1537, 1538, 1541, 1546, 1547, 1549, 1550, 1551, 1552, 1554, 1555, 1556, 1557, 1560, 1562, 1569, 1570, 1573, 1577, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1591, 1604, 1612, 1614, 1615, 1616, 1617, 1622, 1623, 1624, 1626, 1627, 1628, 1630, 1631, 1637, 1638, 1639, 1640, 1645, 1647, 1648, 1650, 1651, 1652, 1653, 1656, 1658, 1659, 1695, 1707, 1721, 1737, 1739, 1740, 1743, 1760, 1763, 1770, 1772, 1787, 1789, 1793, 1794, 1798, 1799, 1800, 1806], "categor": [1, 568], "follow": [1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 69, 95, 98, 127, 129, 160, 193, 225, 258, 291, 324, 358, 391, 424, 456, 474, 477, 502, 523, 538, 541, 568, 647, 651, 653, 655, 702, 703, 705, 728, 729, 733, 740, 825, 827, 834, 835, 836, 838, 839, 840, 841, 842, 843, 850, 885, 889, 924, 927, 962, 964, 965, 1000, 1003, 1040, 1044, 1079, 1083, 1118, 1121, 1156, 1158, 1159, 1194, 1198, 1223, 1227, 1256, 1261, 1290, 1295, 1324, 1328, 1353, 1357, 1386, 1389, 1414, 1417, 1442, 1445, 1470, 1474, 1503, 1507, 1532, 1536, 1565, 1569, 1594, 1616, 1631, 1639, 1649, 1676, 1697, 1711, 1723, 1791, 1794], "categori": 1, "10": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 196, 577, 578, 579, 580, 581, 582, 583, 652, 792, 794, 834, 835, 839, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1801], "step": [1, 5, 7, 9, 12, 13, 19, 26, 27, 28, 30, 32, 35, 98, 118, 216, 347, 381, 414, 477, 541, 556, 652, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1630, 1653], "numer": [1, 3, 19, 21, 27, 28, 29, 30, 49, 56, 67, 81, 88, 93, 108, 116, 125, 141, 148, 158, 174, 181, 191, 206, 214, 223, 239, 246, 256, 272, 279, 289, 305, 312, 322, 338, 345, 356, 372, 379, 389, 405, 412, 422, 438, 445, 454, 467, 470, 472, 487, 494, 500, 554, 557, 568, 723, 725, 761, 762, 763, 764, 765, 767, 768, 769, 772, 774, 777, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 806, 807, 837, 869, 877, 883, 908, 916, 922, 946, 954, 960, 984, 992, 998, 1024, 1032, 1038, 1063, 1071, 1077, 1102, 1110, 1116, 1140, 1148, 1154, 1178, 1186, 1192, 1208, 1215, 1221, 1240, 1247, 1254, 1274, 1281, 1288, 1308, 1315, 1322, 1338, 1345, 1351, 1370, 1377, 1384, 1399, 1406, 1412, 1427, 1434, 1440, 1455, 1462, 1468, 1487, 1494, 1501, 1517, 1524, 1530, 1549, 1556, 1563, 1579, 1586, 1592, 1798, 1799], "python": [1, 3, 6, 17, 26, 27, 28, 30, 32, 33, 35, 458, 758, 848, 860, 887, 899, 937, 964, 975, 1013, 1042, 1054, 1081, 1093, 1120, 1131, 1158, 1169, 1416, 1603, 1623, 1627, 1628, 1783, 1788, 1800, 1806], "primer": [1, 3, 25], "gener": [1, 3, 4, 5, 6, 8, 11, 14, 15, 20, 21, 26, 27, 28, 29, 30, 33, 47, 49, 68, 71, 79, 81, 94, 106, 108, 126, 139, 141, 159, 172, 174, 192, 204, 206, 224, 237, 239, 257, 270, 272, 290, 303, 305, 323, 336, 338, 357, 370, 372, 390, 403, 405, 423, 436, 438, 455, 465, 467, 473, 477, 485, 487, 501, 525, 541, 568, 645, 646, 647, 654, 704, 720, 732, 737, 827, 828, 834, 835, 837, 848, 850, 854, 860, 867, 869, 884, 887, 889, 893, 899, 906, 908, 923, 926, 927, 931, 937, 944, 946, 961, 964, 965, 969, 975, 982, 984, 999, 1002, 1003, 1007, 1013, 1022, 1024, 1039, 1042, 1044, 1048, 1054, 1061, 1063, 1078, 1081, 1083, 1087, 1093, 1100, 1102, 1117, 1120, 1121, 1125, 1131, 1138, 1140, 1155, 1158, 1159, 1163, 1169, 1176, 1178, 1193, 1198, 1206, 1208, 1222, 1227, 1238, 1240, 1255, 1261, 1272, 1274, 1289, 1295, 1306, 1308, 1323, 1328, 1336, 1338, 1352, 1357, 1368, 1370, 1385, 1389, 1397, 1399, 1413, 1416, 1417, 1425, 1427, 1441, 1445, 1453, 1455, 1469, 1474, 1485, 1487, 1502, 1507, 1515, 1517, 1531, 1536, 1547, 1549, 1564, 1569, 1577, 1579, 1593, 1623, 1627, 1628, 1630, 1631, 1648, 1654, 1655, 1739, 1778, 1785, 1797], "quick": [1, 3, 4, 6, 10, 24], "visual": [1, 3, 5, 6, 7, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 529, 572, 887], "storag": [1, 3, 27, 29, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "data": [1, 3, 7, 8, 15, 19, 24, 27, 30, 31, 32, 33, 46, 47, 56, 78, 79, 88, 98, 105, 106, 116, 138, 139, 148, 171, 172, 181, 195, 203, 204, 210, 214, 236, 237, 246, 269, 270, 279, 302, 303, 312, 335, 336, 345, 369, 370, 379, 402, 403, 412, 435, 436, 445, 458, 459, 464, 465, 470, 477, 484, 485, 494, 529, 541, 552, 553, 554, 557, 558, 564, 565, 567, 568, 569, 570, 571, 572, 573, 729, 734, 779, 785, 827, 834, 835, 850, 854, 855, 864, 865, 866, 867, 877, 889, 893, 894, 903, 904, 905, 906, 916, 927, 931, 932, 941, 942, 943, 944, 954, 965, 969, 970, 979, 980, 981, 982, 992, 1003, 1007, 1008, 1019, 1020, 1021, 1022, 1032, 1044, 1048, 1049, 1058, 1059, 1060, 1061, 1071, 1083, 1087, 1088, 1097, 1098, 1099, 1100, 1110, 1121, 1125, 1126, 1135, 1136, 1137, 1138, 1148, 1159, 1163, 1164, 1173, 1174, 1175, 1176, 1186, 1198, 1205, 1206, 1215, 1227, 1236, 1238, 1247, 1261, 1270, 1272, 1281, 1295, 1304, 1306, 1315, 1328, 1335, 1336, 1345, 1357, 1366, 1368, 1377, 1389, 1396, 1397, 1406, 1417, 1424, 1425, 1434, 1445, 1452, 1453, 1462, 1474, 1483, 1485, 1494, 1507, 1514, 1515, 1524, 1536, 1545, 1547, 1556, 1569, 1576, 1577, 1586, 1739, 1740, 1741, 1793], "topologi": [1, 3, 6, 25, 27, 887, 1120], "represent": [1, 3, 19, 554, 837, 1656, 1659], "queri": [1, 3, 29, 30, 32, 50, 55, 66, 82, 87, 92, 109, 115, 124, 142, 147, 157, 175, 180, 190, 207, 213, 222, 240, 245, 255, 273, 278, 288, 306, 311, 321, 339, 344, 355, 373, 378, 388, 406, 411, 421, 439, 444, 453, 488, 493, 499, 506, 509, 511, 870, 876, 882, 909, 915, 921, 947, 953, 959, 985, 991, 997, 1025, 1031, 1037, 1064, 1070, 1076, 1103, 1109, 1115, 1120, 1141, 1147, 1153, 1179, 1185, 1191, 1209, 1214, 1220, 1241, 1246, 1253, 1275, 1280, 1287, 1309, 1314, 1321, 1339, 1344, 1350, 1371, 1376, 1383, 1400, 1405, 1411, 1428, 1433, 1439, 1456, 1461, 1467, 1488, 1493, 1500, 1518, 1523, 1529, 1550, 1555, 1562, 1580, 1585, 1591], "manipul": [1, 3, 25, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 493, 509, 876, 915, 953, 991, 1031, 1070, 1109, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585], "assign": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 25, 26, 27, 29, 32, 33, 43, 50, 51, 52, 55, 62, 64, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 153, 155, 157, 168, 175, 176, 177, 180, 186, 188, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 251, 253, 255, 266, 273, 274, 275, 278, 284, 286, 288, 299, 306, 307, 308, 311, 317, 319, 321, 332, 339, 340, 341, 344, 351, 353, 355, 366, 373, 374, 375, 378, 384, 386, 388, 399, 406, 407, 408, 411, 417, 419, 421, 432, 439, 440, 441, 444, 450, 451, 453, 458, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 512, 525, 554, 652, 743, 834, 835, 848, 856, 870, 872, 873, 876, 882, 887, 895, 909, 911, 912, 915, 921, 933, 947, 949, 950, 953, 959, 964, 971, 985, 987, 988, 991, 997, 1002, 1009, 1025, 1027, 1028, 1031, 1037, 1042, 1050, 1064, 1066, 1067, 1070, 1076, 1081, 1089, 1103, 1105, 1106, 1109, 1115, 1120, 1127, 1141, 1143, 1144, 1147, 1153, 1158, 1165, 1179, 1181, 1182, 1185, 1191, 1202, 1209, 1210, 1211, 1214, 1220, 1226, 1232, 1241, 1242, 1243, 1246, 1253, 1260, 1266, 1275, 1276, 1277, 1280, 1287, 1294, 1300, 1309, 1310, 1311, 1314, 1321, 1332, 1339, 1340, 1341, 1344, 1350, 1356, 1362, 1371, 1372, 1373, 1376, 1383, 1393, 1400, 1401, 1402, 1405, 1411, 1421, 1428, 1429, 1430, 1433, 1439, 1449, 1456, 1457, 1458, 1461, 1467, 1473, 1479, 1488, 1489, 1490, 1493, 1500, 1511, 1518, 1519, 1520, 1523, 1529, 1535, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1614, 1652, 1658, 1740], "geometr": [1, 3, 4, 5, 6, 10, 11, 12, 13, 15, 22, 26, 30, 31, 32, 553, 594, 621, 636, 825, 1042], "properti": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 19, 20, 21, 22, 24, 25, 27, 29, 31, 32, 33, 37, 46, 56, 63, 71, 78, 88, 97, 105, 116, 129, 138, 148, 154, 162, 171, 181, 187, 195, 203, 214, 227, 236, 246, 252, 260, 269, 279, 285, 293, 302, 312, 318, 326, 335, 345, 352, 360, 369, 379, 385, 393, 402, 412, 418, 426, 435, 445, 464, 470, 477, 484, 494, 541, 554, 557, 561, 568, 570, 572, 594, 646, 650, 651, 653, 654, 655, 698, 701, 702, 703, 704, 705, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 757, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 827, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 850, 865, 877, 889, 904, 916, 927, 942, 954, 965, 980, 992, 1003, 1020, 1032, 1042, 1044, 1059, 1071, 1083, 1098, 1110, 1120, 1121, 1136, 1148, 1159, 1174, 1186, 1198, 1205, 1215, 1225, 1227, 1235, 1236, 1237, 1247, 1261, 1269, 1270, 1271, 1281, 1295, 1303, 1304, 1305, 1315, 1328, 1335, 1345, 1357, 1365, 1366, 1367, 1377, 1388, 1389, 1396, 1406, 1417, 1424, 1434, 1445, 1452, 1462, 1472, 1474, 1482, 1483, 1484, 1494, 1507, 1514, 1524, 1534, 1536, 1544, 1545, 1546, 1556, 1569, 1576, 1586, 1739, 1799, 1803], "us": [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 22, 24, 25, 26, 31, 33, 34, 35, 50, 51, 52, 55, 59, 82, 83, 84, 87, 89, 109, 110, 111, 115, 119, 129, 142, 143, 144, 147, 151, 175, 176, 177, 180, 184, 195, 196, 207, 208, 209, 213, 217, 240, 241, 242, 245, 249, 273, 274, 275, 278, 282, 306, 307, 308, 311, 315, 339, 340, 341, 344, 347, 348, 373, 374, 375, 378, 381, 382, 406, 407, 408, 411, 414, 415, 439, 440, 441, 444, 448, 458, 459, 476, 477, 488, 489, 490, 493, 506, 507, 508, 509, 512, 529, 541, 549, 553, 554, 555, 556, 557, 564, 565, 572, 596, 601, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 630, 633, 637, 638, 640, 644, 646, 647, 650, 651, 653, 654, 655, 664, 698, 701, 702, 703, 704, 705, 715, 716, 717, 720, 721, 723, 726, 727, 728, 729, 731, 733, 735, 736, 737, 738, 740, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 780, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 825, 827, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 850, 854, 855, 857, 858, 860, 861, 864, 866, 870, 871, 872, 873, 876, 887, 888, 889, 893, 894, 896, 897, 899, 900, 903, 905, 909, 910, 911, 912, 915, 927, 931, 932, 934, 935, 937, 938, 941, 943, 947, 948, 949, 950, 953, 964, 965, 969, 970, 972, 973, 975, 976, 979, 981, 985, 986, 987, 988, 991, 1002, 1003, 1007, 1008, 1010, 1011, 1013, 1014, 1019, 1021, 1025, 1026, 1027, 1028, 1031, 1043, 1044, 1048, 1049, 1051, 1052, 1054, 1055, 1058, 1060, 1064, 1065, 1066, 1067, 1070, 1083, 1087, 1088, 1090, 1091, 1093, 1094, 1097, 1099, 1103, 1104, 1105, 1106, 1109, 1120, 1121, 1125, 1126, 1128, 1129, 1131, 1132, 1135, 1137, 1141, 1142, 1143, 1144, 1147, 1158, 1159, 1163, 1164, 1166, 1167, 1169, 1170, 1173, 1175, 1179, 1180, 1181, 1182, 1185, 1198, 1209, 1210, 1211, 1214, 1225, 1227, 1237, 1241, 1242, 1243, 1246, 1261, 1271, 1275, 1276, 1277, 1280, 1295, 1305, 1309, 1310, 1311, 1314, 1328, 1339, 1340, 1341, 1344, 1357, 1367, 1371, 1372, 1373, 1376, 1389, 1400, 1401, 1402, 1405, 1416, 1417, 1428, 1429, 1430, 1433, 1445, 1456, 1457, 1458, 1461, 1474, 1484, 1488, 1489, 1490, 1493, 1507, 1518, 1519, 1520, 1523, 1536, 1546, 1550, 1551, 1552, 1555, 1569, 1580, 1581, 1582, 1585, 1603, 1604, 1605, 1607, 1609, 1612, 1616, 1619, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1645, 1647, 1648, 1653, 1654, 1655, 1664, 1665, 1666, 1668, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1737, 1788, 1789, 1797, 1798, 1799, 1800, 1801, 1807], "label": [1, 3, 6, 7, 8, 12, 13, 21, 25, 27, 28, 30, 31, 32, 43, 49, 51, 52, 55, 60, 66, 75, 81, 83, 84, 87, 90, 92, 102, 108, 110, 111, 115, 121, 124, 135, 141, 143, 144, 147, 152, 157, 168, 174, 176, 177, 180, 185, 190, 200, 206, 208, 209, 213, 219, 222, 233, 239, 241, 242, 245, 250, 255, 266, 272, 274, 275, 278, 283, 288, 299, 305, 307, 308, 311, 316, 321, 332, 338, 340, 341, 344, 349, 355, 366, 372, 374, 375, 378, 383, 388, 399, 405, 407, 408, 411, 416, 421, 432, 438, 440, 441, 444, 449, 453, 458, 467, 477, 478, 481, 487, 489, 490, 493, 496, 497, 499, 504, 505, 507, 508, 509, 510, 511, 541, 542, 544, 568, 570, 848, 849, 850, 851, 856, 860, 861, 869, 872, 873, 876, 879, 880, 882, 888, 889, 890, 895, 899, 900, 908, 911, 912, 915, 918, 919, 921, 927, 928, 933, 937, 938, 946, 949, 950, 953, 956, 957, 959, 965, 966, 971, 975, 976, 984, 987, 988, 991, 994, 995, 997, 1002, 1003, 1004, 1009, 1013, 1014, 1024, 1027, 1028, 1031, 1034, 1035, 1037, 1043, 1044, 1045, 1050, 1054, 1055, 1063, 1066, 1067, 1070, 1073, 1074, 1076, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1102, 1105, 1106, 1109, 1112, 1113, 1115, 1121, 1122, 1127, 1131, 1132, 1140, 1143, 1144, 1147, 1150, 1151, 1153, 1159, 1160, 1165, 1169, 1170, 1178, 1181, 1182, 1185, 1188, 1189, 1191, 1198, 1199, 1202, 1208, 1210, 1211, 1214, 1217, 1218, 1220, 1227, 1228, 1232, 1240, 1242, 1243, 1246, 1250, 1251, 1253, 1261, 1262, 1266, 1274, 1276, 1277, 1280, 1284, 1285, 1287, 1295, 1296, 1300, 1308, 1310, 1311, 1314, 1318, 1319, 1321, 1328, 1329, 1332, 1338, 1340, 1341, 1344, 1347, 1348, 1350, 1357, 1358, 1362, 1370, 1372, 1373, 1376, 1380, 1381, 1383, 1389, 1390, 1393, 1399, 1401, 1402, 1405, 1408, 1409, 1411, 1417, 1418, 1421, 1427, 1429, 1430, 1433, 1436, 1437, 1439, 1445, 1446, 1449, 1455, 1457, 1458, 1461, 1464, 1465, 1467, 1474, 1475, 1479, 1487, 1489, 1490, 1493, 1497, 1498, 1500, 1507, 1508, 1511, 1517, 1519, 1520, 1523, 1526, 1527, 1529, 1536, 1537, 1541, 1549, 1551, 1552, 1555, 1559, 1560, 1562, 1569, 1570, 1573, 1579, 1581, 1582, 1585, 1588, 1589, 1591, 1612, 1614, 1615, 1616, 1620, 1622, 1630, 1645, 1647, 1652, 1653, 1658, 1798, 1807], "defin": [1, 3, 4, 5, 8, 20, 21, 22, 24, 27, 28, 30, 33, 71, 528, 549, 596, 597, 599, 602, 606, 652, 677, 834, 835, 848, 849, 887, 888, 964, 1015, 1016, 1042, 1043, 1081, 1082, 1120, 1158, 1625, 1626, 1645, 1737], "domain": [1, 3, 4, 5, 8, 9, 22, 28, 30, 32, 120, 129, 220, 458, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 512, 541, 542, 544, 850, 851, 879, 887, 889, 890, 918, 926, 927, 928, 956, 964, 965, 966, 994, 1002, 1003, 1004, 1034, 1044, 1045, 1073, 1083, 1084, 1112, 1121, 1122, 1150, 1158, 1159, 1160, 1188, 1198, 1199, 1217, 1227, 1228, 1250, 1261, 1262, 1284, 1295, 1296, 1318, 1328, 1329, 1347, 1357, 1358, 1380, 1389, 1390, 1408, 1417, 1418, 1436, 1445, 1446, 1464, 1474, 1475, 1497, 1507, 1508, 1526, 1536, 1537, 1559, 1569, 1570, 1588, 1630, 1631, 1633, 1639, 1649], "creat": [1, 3, 4, 6, 7, 10, 15, 17, 20, 21, 24, 25, 26, 27, 28, 32, 33, 44, 60, 76, 90, 103, 121, 136, 152, 169, 185, 201, 219, 234, 250, 267, 283, 300, 316, 333, 349, 367, 383, 400, 416, 433, 449, 462, 482, 497, 510, 516, 530, 531, 554, 557, 569, 646, 647, 654, 704, 737, 832, 854, 855, 862, 864, 866, 880, 887, 893, 894, 901, 903, 905, 919, 926, 931, 932, 939, 941, 943, 957, 964, 969, 970, 977, 979, 981, 995, 1002, 1007, 1008, 1017, 1019, 1021, 1035, 1048, 1049, 1056, 1058, 1060, 1074, 1087, 1088, 1095, 1097, 1099, 1113, 1120, 1125, 1126, 1133, 1135, 1137, 1151, 1158, 1163, 1164, 1171, 1173, 1175, 1189, 1197, 1203, 1218, 1233, 1251, 1259, 1267, 1285, 1293, 1301, 1319, 1327, 1333, 1348, 1355, 1363, 1381, 1394, 1409, 1422, 1437, 1450, 1465, 1480, 1498, 1512, 1527, 1542, 1560, 1568, 1574, 1589, 1631, 1653, 1667, 1669, 1680, 1682, 1690, 1702, 1716, 1737, 1739, 1779, 1785], "phase": [1, 3, 4, 17, 19, 20, 21, 27, 28, 29, 32, 33, 210, 218, 220, 458, 476, 540, 565, 567, 569, 570, 572, 573, 731, 735, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 821, 823, 824, 825, 827, 828, 829, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 1197, 1327, 1355, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1568, 1737, 1797], "singl": [1, 3, 7, 12, 13, 17, 24, 26, 27, 29, 30, 32, 33, 57, 59, 89, 119, 149, 151, 182, 184, 217, 247, 249, 280, 282, 313, 315, 346, 348, 380, 382, 413, 415, 446, 448, 557, 568, 570, 572, 825, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1416, 1613, 1617, 1630, 1647, 1789, 1796], "transport": [1, 2, 3, 5, 7, 8, 9, 12, 15, 25, 26, 28, 32, 260, 326, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 783, 808, 831, 887, 1002, 1808], "invas": [1, 3, 12, 98, 195, 196, 218], "option": [1, 3, 19, 24, 25, 26, 28, 30, 32, 35, 43, 47, 49, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 66, 75, 79, 81, 82, 83, 84, 87, 89, 90, 92, 102, 106, 108, 109, 110, 111, 115, 119, 120, 121, 122, 124, 135, 139, 141, 142, 143, 144, 147, 149, 151, 152, 153, 154, 155, 157, 168, 172, 174, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 200, 204, 206, 207, 208, 209, 213, 217, 218, 219, 220, 222, 233, 237, 239, 240, 241, 242, 245, 247, 249, 250, 251, 252, 253, 255, 260, 266, 270, 272, 273, 274, 275, 278, 280, 282, 283, 284, 285, 286, 288, 299, 303, 305, 306, 307, 308, 311, 313, 315, 316, 317, 318, 319, 321, 332, 336, 338, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 366, 370, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 385, 386, 388, 399, 403, 405, 406, 407, 408, 411, 413, 414, 415, 416, 417, 418, 419, 421, 432, 436, 438, 439, 440, 441, 444, 446, 448, 449, 450, 451, 453, 465, 467, 477, 481, 485, 487, 488, 489, 490, 493, 497, 499, 505, 506, 507, 508, 509, 510, 511, 528, 530, 541, 556, 565, 568, 569, 572, 573, 647, 649, 650, 664, 698, 700, 701, 726, 727, 744, 758, 780, 805, 827, 831, 848, 850, 854, 855, 856, 857, 860, 861, 864, 866, 867, 869, 870, 871, 872, 873, 876, 880, 882, 887, 889, 893, 894, 895, 896, 899, 900, 903, 905, 906, 908, 909, 910, 911, 912, 915, 919, 921, 926, 927, 931, 932, 933, 934, 937, 938, 941, 943, 944, 946, 947, 948, 949, 950, 953, 957, 959, 964, 965, 969, 970, 971, 972, 975, 976, 979, 981, 982, 984, 985, 986, 987, 988, 991, 995, 997, 1003, 1007, 1008, 1009, 1010, 1013, 1014, 1019, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1031, 1035, 1037, 1042, 1044, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1070, 1074, 1076, 1081, 1083, 1087, 1088, 1089, 1090, 1093, 1094, 1097, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1109, 1113, 1115, 1120, 1121, 1125, 1126, 1127, 1128, 1131, 1132, 1135, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1147, 1151, 1153, 1158, 1159, 1163, 1164, 1165, 1166, 1169, 1170, 1173, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1185, 1189, 1191, 1198, 1202, 1206, 1208, 1209, 1210, 1211, 1214, 1218, 1220, 1227, 1232, 1237, 1238, 1240, 1241, 1242, 1243, 1246, 1251, 1253, 1258, 1261, 1266, 1271, 1272, 1274, 1275, 1276, 1277, 1280, 1285, 1287, 1292, 1295, 1300, 1305, 1306, 1308, 1309, 1310, 1311, 1314, 1319, 1321, 1326, 1328, 1332, 1336, 1338, 1339, 1340, 1341, 1344, 1348, 1350, 1357, 1362, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1381, 1383, 1389, 1393, 1397, 1399, 1400, 1401, 1402, 1405, 1409, 1411, 1416, 1417, 1421, 1425, 1427, 1428, 1429, 1430, 1433, 1437, 1439, 1445, 1449, 1453, 1455, 1456, 1457, 1458, 1461, 1465, 1467, 1474, 1479, 1484, 1485, 1487, 1488, 1489, 1490, 1493, 1498, 1500, 1505, 1507, 1511, 1515, 1517, 1518, 1519, 1520, 1523, 1527, 1529, 1536, 1541, 1546, 1547, 1549, 1550, 1551, 1552, 1555, 1560, 1562, 1567, 1569, 1573, 1577, 1579, 1580, 1581, 1582, 1585, 1589, 1591, 1604, 1615, 1617, 1620, 1623, 1624, 1627, 1628, 1629, 1637, 1639, 1650, 1653, 1654, 1655, 1680, 1778, 1785, 1788, 1798, 1799], "applic": [1, 19, 20, 22, 24, 28, 32, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 488, 506, 870, 909, 947, 985, 1025, 1064, 1103, 1141, 1179, 1209, 1241, 1275, 1309, 1339, 1371, 1400, 1428, 1456, 1488, 1518, 1550, 1580], "refer": [1, 8, 17, 24, 25, 26, 28, 30, 31, 32, 64, 155, 188, 196, 253, 286, 319, 347, 353, 381, 386, 414, 419, 451, 458, 553, 557, 647, 653, 655, 668, 669, 703, 705, 733, 740, 758, 765, 768, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 806, 807, 812, 825, 828, 829, 834, 835, 1676, 1739], "scale": [1, 2, 4, 5, 6, 7, 11, 12, 13, 20, 26, 29, 30, 33, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 458, 467, 477, 487, 540, 541, 553, 564, 573, 577, 578, 579, 580, 581, 582, 583, 594, 651, 653, 655, 702, 703, 705, 720, 728, 733, 734, 740, 788, 825, 827, 850, 869, 889, 908, 927, 946, 965, 984, 1003, 1024, 1044, 1063, 1083, 1102, 1121, 1140, 1159, 1178, 1198, 1208, 1227, 1240, 1261, 1274, 1295, 1308, 1327, 1328, 1338, 1357, 1370, 1388, 1389, 1399, 1417, 1427, 1445, 1455, 1474, 1487, 1507, 1517, 1536, 1549, 1569, 1579, 1604, 1800], "model": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 20, 21, 25, 26, 32, 33, 49, 63, 81, 108, 141, 154, 174, 187, 206, 239, 252, 272, 285, 305, 318, 338, 352, 372, 385, 405, 418, 438, 458, 467, 477, 478, 487, 495, 496, 512, 525, 529, 540, 541, 542, 543, 544, 564, 573, 577, 578, 579, 580, 581, 582, 583, 586, 589, 590, 592, 593, 594, 596, 601, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 630, 633, 637, 638, 640, 644, 646, 647, 650, 651, 652, 653, 654, 655, 698, 701, 702, 703, 704, 705, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 736, 737, 738, 739, 740, 741, 757, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 850, 851, 869, 878, 879, 889, 890, 908, 917, 918, 927, 928, 946, 955, 956, 965, 966, 984, 993, 994, 1002, 1003, 1004, 1024, 1033, 1034, 1044, 1045, 1063, 1072, 1073, 1083, 1084, 1102, 1111, 1112, 1121, 1122, 1140, 1149, 1150, 1159, 1160, 1178, 1187, 1188, 1197, 1198, 1199, 1208, 1216, 1217, 1225, 1227, 1228, 1240, 1248, 1250, 1261, 1262, 1274, 1282, 1284, 1295, 1296, 1308, 1316, 1318, 1327, 1328, 1329, 1338, 1346, 1347, 1357, 1358, 1370, 1378, 1380, 1388, 1389, 1390, 1399, 1407, 1408, 1417, 1418, 1427, 1435, 1436, 1445, 1446, 1455, 1463, 1464, 1472, 1474, 1475, 1487, 1495, 1497, 1507, 1508, 1517, 1525, 1526, 1534, 1536, 1537, 1549, 1557, 1559, 1569, 1570, 1579, 1587, 1588, 1797, 1800, 1804, 1805], "set": [1, 2, 4, 7, 8, 10, 12, 13, 15, 19, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 37, 44, 48, 50, 57, 58, 59, 60, 63, 71, 76, 80, 82, 89, 90, 97, 98, 103, 107, 109, 119, 121, 129, 136, 140, 142, 149, 150, 151, 152, 154, 162, 169, 173, 175, 182, 183, 184, 185, 187, 195, 196, 201, 205, 207, 217, 219, 227, 234, 238, 240, 247, 248, 249, 250, 252, 260, 267, 271, 273, 280, 281, 282, 283, 285, 293, 300, 304, 306, 313, 314, 315, 316, 318, 326, 333, 337, 339, 346, 348, 349, 352, 360, 367, 371, 373, 380, 382, 383, 385, 393, 400, 404, 406, 413, 415, 416, 418, 426, 433, 437, 439, 446, 447, 448, 449, 459, 462, 466, 476, 482, 486, 488, 497, 506, 510, 516, 518, 519, 531, 533, 534, 557, 565, 653, 655, 703, 705, 733, 740, 831, 848, 854, 855, 860, 861, 862, 868, 870, 880, 887, 893, 894, 899, 900, 901, 907, 909, 919, 926, 931, 932, 937, 938, 939, 945, 947, 957, 964, 969, 970, 975, 976, 977, 983, 985, 995, 1002, 1007, 1008, 1013, 1014, 1017, 1023, 1025, 1035, 1042, 1048, 1049, 1054, 1055, 1056, 1062, 1064, 1074, 1081, 1087, 1088, 1093, 1094, 1095, 1101, 1103, 1113, 1120, 1125, 1126, 1131, 1132, 1133, 1139, 1141, 1151, 1158, 1163, 1164, 1169, 1170, 1171, 1177, 1179, 1189, 1197, 1203, 1207, 1209, 1218, 1225, 1233, 1239, 1241, 1251, 1258, 1259, 1267, 1273, 1275, 1285, 1292, 1293, 1301, 1307, 1309, 1319, 1326, 1327, 1333, 1337, 1339, 1348, 1355, 1363, 1369, 1371, 1381, 1388, 1394, 1398, 1400, 1409, 1416, 1422, 1426, 1428, 1437, 1444, 1450, 1454, 1456, 1465, 1472, 1480, 1486, 1488, 1498, 1505, 1506, 1512, 1516, 1518, 1527, 1534, 1542, 1548, 1550, 1560, 1567, 1568, 1574, 1578, 1580, 1589, 1622, 1623, 1625, 1627, 1628, 1629, 1631, 1639, 1649, 1653, 1656, 1658, 1659, 1690, 1692, 1693, 1702, 1704, 1705, 1716, 1718, 1719, 1736, 1739, 1740, 1743, 1754, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1779, 1781, 1782, 1804, 1805], "attribut": [1, 2, 5, 15, 17, 19, 24, 26, 28, 29, 32, 37, 58, 71, 97, 129, 150, 162, 183, 195, 227, 248, 260, 281, 293, 314, 326, 360, 393, 426, 447, 458, 459, 476, 495, 512, 525, 540, 543, 564, 573, 758, 848, 878, 887, 917, 926, 955, 964, 993, 1002, 1033, 1042, 1072, 1081, 1111, 1120, 1149, 1158, 1187, 1197, 1216, 1225, 1248, 1259, 1282, 1293, 1316, 1327, 1346, 1355, 1378, 1388, 1407, 1416, 1435, 1444, 1463, 1472, 1495, 1506, 1525, 1534, 1557, 1568, 1587, 1662, 1663, 1665, 1672, 1674, 1676, 1678, 1687, 1737, 1743, 1755, 1756, 1793, 1805], "machineri": [1, 2], "workspac": [1, 2, 10, 22, 564, 1660, 1737, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792], "project": [1, 2, 6, 33, 34, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 476, 552, 557, 564, 567, 568, 569, 570, 571, 572, 573, 848, 887, 926, 964, 1002, 1042, 1081, 1120, 1158, 1197, 1225, 1259, 1293, 1327, 1355, 1388, 1416, 1444, 1472, 1506, 1534, 1568, 1613, 1660, 1738, 1739, 1774, 1776, 1778, 1783, 1784, 1785, 1788, 1789], "avail": [1, 2, 8, 11, 20, 22, 24, 30, 31, 32, 33, 35, 478, 542, 557, 783, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1603, 1624], "matrix": [1, 2, 21, 24, 26, 28, 37, 129, 162, 227, 260, 293, 326, 360, 393, 426, 848, 854, 855, 864, 866, 887, 893, 894, 903, 905, 926, 931, 932, 941, 943, 964, 969, 970, 979, 981, 1002, 1007, 1008, 1019, 1021, 1042, 1048, 1049, 1058, 1060, 1081, 1087, 1088, 1097, 1099, 1120, 1125, 1126, 1135, 1137, 1158, 1163, 1164, 1173, 1175, 1603, 1604, 1617, 1619, 1624, 1641, 1642, 1643, 1644, 1650, 1651, 1656, 1659, 1801], "solver": [1, 2, 19, 21, 22, 58, 150, 183, 248, 281, 314, 447, 546, 1597, 1599, 1601, 1603, 1604], "steadi": [1, 2, 22, 33, 260, 326, 426, 565, 573], "state": [1, 2, 22, 26, 31, 32, 33, 260, 426, 565, 571, 573, 762, 763, 831, 1229, 1263, 1297, 1359, 1476, 1538], "explan": [1, 2, 1699, 1755, 1756, 1777], "unit": [1, 2, 8, 553, 712, 758, 761, 762, 763, 764, 765, 767, 768, 769, 772, 774, 783, 785, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 803, 804, 806, 807, 834, 835, 848, 1081], "reactiv": [1, 2], "conduct": [1, 2, 5, 7, 9, 19, 21, 26, 162, 227, 793, 794, 795, 796, 808, 810, 815, 816, 817, 818, 820, 821, 823, 824, 825, 831, 835, 845, 846], "transient": [1, 2, 326, 347, 360, 381, 393, 414, 565, 573, 664], "tutori": [3, 24, 25, 26, 28, 29, 30], "It": [4, 5, 6, 8, 10, 12, 14, 15, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 59, 89, 119, 151, 184, 196, 217, 249, 282, 315, 348, 382, 415, 448, 540, 553, 647, 758, 964, 1158, 1639, 1648, 1654, 1655, 1664, 1666, 1668, 1670, 1673, 1675, 1677, 1679, 1681, 1683, 1684, 1686, 1774, 1794], "easi": [4, 8, 15, 21, 24, 27, 29, 887], "go": [4, 8, 14, 22, 24, 28, 29], "fact": [4, 26, 27, 28, 30, 31, 32], "code": [4, 6, 13, 14, 17, 21, 24, 26, 28, 32, 33, 557, 651, 653, 655, 702, 703, 705, 728, 733, 740, 758], "block": [4, 21, 24, 25, 28, 32], "produc": [4, 28, 31, 477, 541, 653, 655, 703, 705, 733, 740, 834, 835, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1158, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1388, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1656, 1659, 1783, 1788], "just": [4, 6, 7, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 472, 500, 871, 883, 910, 922, 948, 960, 986, 998, 1026, 1038, 1065, 1077, 1104, 1116, 1142, 1154, 1180, 1192, 1221, 1226, 1249, 1254, 1260, 1283, 1288, 1294, 1317, 1322, 1351, 1356, 1379, 1384, 1412, 1440, 1468, 1473, 1496, 1501, 1530, 1535, 1558, 1563, 1592, 1680, 1682, 1794, 1804, 1805, 1806], "few": [4, 15, 24, 25, 27, 28, 29, 32, 458, 762], "line": [4, 5, 11, 15, 27, 28, 29, 30, 1674, 1725], "import": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 552, 651, 653, 655, 702, 703, 705, 712, 728, 729, 733, 740, 825, 837, 854, 855, 857, 858, 859, 860, 861, 871, 893, 894, 896, 897, 898, 899, 900, 910, 931, 932, 934, 935, 936, 937, 938, 948, 969, 970, 972, 973, 974, 975, 976, 986, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1026, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1065, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1104, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1142, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1180, 1660, 1680, 1682, 1713, 1725, 1800], "op": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 651, 702, 728, 729, 837, 854, 855, 857, 858, 859, 860, 861, 871, 893, 894, 896, 897, 898, 899, 900, 910, 931, 932, 934, 935, 936, 937, 938, 948, 969, 970, 972, 973, 974, 975, 976, 986, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1026, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1065, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1104, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1142, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1180, 1648], "paramet": [4, 6, 8, 12, 13, 15, 20, 22, 26, 28, 29, 30, 33, 39, 43, 46, 47, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 75, 78, 79, 81, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 100, 102, 105, 106, 108, 109, 110, 111, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 129, 131, 135, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 164, 168, 171, 172, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 198, 200, 203, 204, 206, 207, 208, 209, 213, 214, 217, 218, 219, 220, 222, 223, 224, 229, 233, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 260, 262, 266, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 295, 299, 302, 303, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 328, 332, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 362, 366, 369, 370, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 393, 395, 399, 402, 403, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 426, 428, 432, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 458, 459, 464, 465, 467, 470, 472, 473, 477, 478, 481, 484, 485, 487, 488, 489, 490, 493, 494, 495, 496, 497, 499, 500, 501, 505, 506, 507, 508, 509, 510, 511, 525, 528, 530, 541, 542, 543, 544, 549, 552, 553, 554, 556, 557, 558, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 669, 671, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 698, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 746, 751, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 821, 823, 824, 825, 827, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 849, 850, 851, 854, 855, 856, 857, 858, 859, 860, 861, 864, 865, 866, 867, 869, 870, 871, 872, 873, 876, 877, 878, 879, 880, 882, 883, 884, 887, 888, 889, 890, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 905, 906, 908, 909, 910, 911, 912, 915, 916, 917, 918, 919, 921, 922, 923, 926, 927, 928, 931, 932, 933, 934, 935, 936, 937, 938, 941, 942, 943, 944, 946, 947, 948, 949, 950, 953, 954, 955, 956, 957, 959, 960, 961, 964, 965, 966, 969, 970, 971, 972, 973, 974, 975, 976, 979, 980, 981, 982, 984, 985, 986, 987, 988, 991, 992, 993, 994, 995, 997, 998, 999, 1002, 1003, 1004, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1120, 1121, 1122, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1197, 1198, 1199, 1202, 1205, 1206, 1208, 1209, 1210, 1211, 1214, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1226, 1227, 1228, 1232, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1258, 1260, 1261, 1262, 1266, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1292, 1294, 1295, 1296, 1300, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1326, 1327, 1328, 1329, 1332, 1335, 1336, 1338, 1339, 1340, 1341, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1362, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1388, 1389, 1390, 1393, 1396, 1397, 1399, 1400, 1401, 1402, 1405, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1416, 1417, 1418, 1421, 1424, 1425, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1445, 1446, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1473, 1474, 1475, 1479, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1505, 1507, 1508, 1511, 1514, 1515, 1517, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1535, 1536, 1537, 1541, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1555, 1556, 1557, 1558, 1559, 1560, 1562, 1563, 1564, 1567, 1568, 1569, 1570, 1573, 1576, 1577, 1579, 1580, 1581, 1582, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1604, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1662, 1663, 1665, 1667, 1669, 1672, 1674, 1676, 1678, 1680, 1682, 1685, 1739, 1776, 1778, 1783, 1784, 1785, 1788, 1789, 1793, 1795, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1807], "lc": 4, "1e": [4, 5, 7, 8, 9, 11, 12, 13, 20, 21, 25, 28, 31, 32, 33, 548, 746, 751, 831, 1601, 1603, 1607, 1801], "4": [4, 6, 7, 8, 11, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 554, 557, 825, 836, 839, 840, 841, 859, 871, 898, 910, 936, 948, 974, 986, 1012, 1026, 1053, 1065, 1092, 1104, 1120, 1130, 1142, 1168, 1180, 1664, 1666, 1668, 1670, 1673, 1675, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1686], "nx": [4, 11, 28, 647, 887], "ny": [4, 647, 887], "nz": [4, 647, 887], "geometri": [4, 5, 7, 9, 11, 12, 13, 19, 20, 22, 28, 29, 33, 458, 558, 651, 652, 702, 728, 1002, 1613], "physic": [4, 5, 7, 9, 12, 13, 19, 21, 22, 27, 28, 29, 30, 31, 32, 33, 458, 783, 810, 837], "pn": [4, 5, 6, 7, 9, 11, 12, 13, 15, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 651, 702, 728, 729, 735, 837, 854, 855, 857, 858, 859, 860, 861, 871, 893, 894, 896, 897, 898, 899, 900, 910, 931, 932, 934, 935, 936, 937, 938, 948, 969, 970, 972, 973, 974, 975, 976, 986, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1026, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1065, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1104, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1142, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1180], "cubic": [4, 6, 7, 8, 9, 10, 12, 13, 15, 17, 19, 20, 21, 27, 28, 29, 30, 33, 647, 651, 663, 666, 702, 728, 729, 837, 848, 854, 855, 857, 858, 859, 860, 861, 871, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 931, 932, 934, 935, 936, 937, 938, 948, 964, 969, 970, 972, 973, 974, 975, 976, 986, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1026, 1042, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1065, 1081, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1104, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1142, 1158, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1180, 1631, 1634, 1635, 1639, 1645, 1654, 1655], "shape": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 25, 26, 27, 28, 30, 31, 32, 33, 558, 595, 609, 610, 611, 612, 613, 615, 616, 618, 621, 623, 624, 639, 649, 651, 655, 661, 669, 678, 700, 702, 705, 709, 713, 715, 716, 719, 728, 729, 740, 810, 825, 837, 848, 854, 855, 857, 858, 859, 860, 861, 871, 887, 893, 894, 896, 897, 898, 899, 900, 910, 926, 931, 932, 934, 935, 936, 937, 938, 948, 964, 969, 970, 972, 973, 974, 975, 976, 986, 1002, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1026, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1065, 1081, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1104, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1142, 1158, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1180, 1617, 1620, 1631, 1634, 1639, 1640, 1645, 1649, 1654, 1655, 1713], "space": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 25, 26, 28, 29, 31, 32, 33, 129, 553, 810, 837, 848, 849, 887, 888, 926, 1002, 1043, 1081, 1082, 1635, 1685], "geo": [4, 6, 8, 10, 651, 702, 728], "spheresandcylind": 4, "p": [4, 5, 11, 22, 25, 27, 29, 31, 32, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 476, 477, 541, 636, 761, 767, 768, 832, 848, 850, 857, 859, 860, 887, 889, 896, 898, 899, 926, 927, 934, 936, 937, 964, 965, 972, 974, 975, 1002, 1003, 1010, 1012, 1013, 1042, 1044, 1051, 1053, 1054, 1081, 1083, 1090, 1092, 1093, 1120, 1121, 1128, 1130, 1131, 1158, 1159, 1166, 1168, 1169, 1197, 1198, 1225, 1227, 1259, 1261, 1293, 1295, 1327, 1328, 1355, 1357, 1388, 1389, 1416, 1417, 1444, 1445, 1472, 1474, 1506, 1507, 1534, 1536, 1568, 1569], "throat": [4, 5, 7, 8, 10, 12, 13, 15, 19, 21, 24, 25, 30, 31, 32, 33, 43, 46, 47, 50, 52, 55, 56, 57, 60, 67, 68, 75, 78, 79, 82, 84, 87, 88, 90, 93, 94, 98, 102, 105, 106, 109, 111, 115, 116, 121, 125, 126, 135, 138, 139, 142, 144, 147, 148, 149, 152, 158, 159, 168, 171, 172, 175, 177, 180, 181, 182, 185, 191, 192, 195, 196, 200, 203, 204, 207, 209, 213, 214, 219, 223, 224, 233, 236, 237, 240, 242, 245, 246, 247, 250, 256, 257, 266, 269, 270, 273, 275, 278, 279, 280, 283, 289, 290, 299, 302, 303, 306, 308, 311, 312, 313, 316, 322, 323, 332, 335, 336, 339, 341, 344, 345, 346, 349, 356, 357, 366, 369, 370, 373, 375, 378, 379, 380, 383, 389, 390, 399, 402, 403, 406, 408, 411, 412, 413, 416, 422, 423, 432, 435, 436, 439, 441, 444, 445, 446, 449, 454, 455, 458, 464, 465, 470, 472, 473, 481, 484, 485, 488, 490, 493, 494, 497, 500, 501, 505, 506, 508, 509, 510, 553, 554, 558, 561, 565, 567, 568, 570, 577, 578, 579, 580, 581, 582, 583, 589, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 650, 657, 658, 659, 660, 664, 668, 669, 671, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 700, 702, 703, 705, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 727, 732, 738, 750, 752, 753, 754, 756, 776, 785, 810, 812, 813, 815, 816, 817, 818, 820, 821, 823, 824, 825, 827, 828, 829, 831, 832, 845, 846, 848, 854, 855, 856, 857, 858, 861, 864, 865, 867, 870, 873, 876, 877, 880, 883, 884, 887, 893, 894, 895, 896, 897, 900, 903, 904, 906, 909, 912, 915, 916, 919, 922, 923, 926, 931, 932, 933, 934, 935, 938, 941, 942, 944, 947, 950, 953, 954, 957, 960, 961, 964, 969, 970, 971, 972, 973, 976, 979, 980, 982, 985, 988, 991, 992, 995, 998, 999, 1002, 1007, 1008, 1009, 1010, 1011, 1014, 1016, 1019, 1020, 1022, 1025, 1028, 1031, 1032, 1035, 1038, 1039, 1042, 1048, 1049, 1050, 1051, 1052, 1055, 1058, 1059, 1061, 1064, 1067, 1070, 1071, 1074, 1077, 1078, 1081, 1087, 1088, 1089, 1090, 1091, 1094, 1097, 1098, 1100, 1103, 1106, 1109, 1110, 1113, 1116, 1117, 1120, 1125, 1126, 1127, 1128, 1129, 1132, 1135, 1136, 1138, 1141, 1144, 1147, 1148, 1151, 1154, 1155, 1158, 1163, 1164, 1165, 1166, 1167, 1170, 1173, 1174, 1176, 1179, 1182, 1185, 1186, 1189, 1192, 1193, 1202, 1205, 1206, 1209, 1211, 1214, 1215, 1218, 1221, 1222, 1232, 1236, 1238, 1241, 1243, 1246, 1247, 1251, 1254, 1255, 1266, 1270, 1272, 1275, 1277, 1280, 1281, 1285, 1288, 1289, 1300, 1304, 1306, 1309, 1311, 1314, 1315, 1319, 1322, 1323, 1332, 1335, 1336, 1339, 1341, 1344, 1345, 1348, 1351, 1352, 1362, 1366, 1368, 1371, 1373, 1376, 1377, 1381, 1384, 1385, 1393, 1396, 1397, 1400, 1402, 1405, 1406, 1409, 1412, 1413, 1421, 1424, 1425, 1428, 1430, 1433, 1434, 1437, 1440, 1441, 1449, 1452, 1453, 1456, 1458, 1461, 1462, 1465, 1468, 1469, 1479, 1483, 1485, 1488, 1490, 1493, 1494, 1498, 1501, 1502, 1511, 1514, 1515, 1518, 1520, 1523, 1524, 1527, 1530, 1531, 1541, 1545, 1547, 1550, 1552, 1555, 1556, 1560, 1563, 1564, 1573, 1576, 1577, 1580, 1582, 1585, 1586, 1589, 1592, 1593, 1613, 1616, 1620, 1622, 1626, 1647, 1648, 1653, 1657, 1793, 1794, 1803], "t": [4, 6, 7, 8, 10, 11, 15, 17, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 476, 549, 758, 761, 762, 763, 765, 767, 768, 769, 772, 774, 783, 785, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 803, 804, 806, 807, 825, 834, 835, 848, 858, 861, 887, 897, 900, 926, 935, 938, 964, 973, 976, 1002, 1011, 1014, 1042, 1052, 1055, 1081, 1091, 1094, 1120, 1129, 1132, 1158, 1167, 1170, 1197, 1225, 1259, 1293, 1327, 1355, 1388, 1416, 1444, 1472, 1506, 1534, 1568], "hg": [4, 10, 32], "phy": [4, 8, 10, 768], "standard": [4, 6, 7, 21, 25, 27, 29, 30, 32, 565, 653, 703, 733, 854, 855, 893, 894, 926, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164, 1687, 1783, 1788], "algorithm": [4, 5, 7, 8, 9, 10, 12, 13, 17, 21, 22, 33, 37, 58, 59, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 117, 119, 129, 150, 151, 162, 183, 184, 195, 216, 217, 227, 248, 249, 260, 281, 282, 293, 314, 315, 326, 347, 348, 360, 381, 382, 393, 414, 415, 426, 447, 448, 458, 476, 553, 783, 832, 834, 835, 1629, 1737, 1788, 1802], "run": [4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 21, 28, 30, 31, 32, 33, 37, 71, 97, 117, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 458, 477, 495, 496, 512, 540, 541, 543, 544, 553, 646, 652, 654, 704, 729, 737, 850, 878, 879, 889, 917, 918, 927, 955, 956, 965, 993, 994, 1003, 1033, 1034, 1044, 1072, 1073, 1083, 1111, 1112, 1121, 1149, 1150, 1159, 1187, 1188, 1198, 1216, 1217, 1227, 1248, 1250, 1261, 1282, 1284, 1295, 1316, 1318, 1328, 1346, 1347, 1357, 1378, 1380, 1389, 1407, 1408, 1417, 1435, 1436, 1445, 1463, 1464, 1474, 1495, 1497, 1507, 1525, 1526, 1536, 1557, 1559, 1569, 1587, 1588, 1603, 1797], "mip": [4, 10, 32], "set_inlet": 4, "left": [4, 5, 6, 8, 9, 11, 12, 13, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 477, 488, 506, 541, 849, 850, 870, 888, 889, 909, 927, 947, 965, 985, 1003, 1025, 1043, 1044, 1064, 1082, 1083, 1103, 1121, 1141, 1159, 1179, 1198, 1209, 1227, 1241, 1261, 1275, 1295, 1309, 1328, 1339, 1357, 1371, 1389, 1400, 1417, 1428, 1445, 1456, 1474, 1488, 1507, 1518, 1536, 1550, 1569, 1580], "right": [4, 5, 6, 8, 9, 11, 12, 13, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 129, 162, 227, 260, 293, 326, 360, 393, 426, 849, 888, 1043, 1082, 1604], "top": [4, 17, 24, 25, 26, 28, 29, 888, 1043, 1645, 1651], "bottom": [4, 17, 25, 27, 28, 888, 1043, 1645], "result": [4, 5, 6, 7, 10, 11, 12, 13, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 50, 55, 59, 63, 82, 87, 89, 109, 115, 117, 119, 142, 147, 151, 154, 175, 180, 184, 187, 207, 213, 217, 218, 220, 240, 245, 249, 252, 273, 278, 282, 285, 306, 311, 315, 318, 339, 344, 348, 352, 373, 378, 382, 385, 406, 411, 415, 418, 439, 444, 448, 477, 488, 493, 496, 506, 509, 541, 544, 565, 566, 668, 698, 701, 724, 726, 729, 850, 857, 860, 861, 870, 876, 879, 887, 889, 896, 899, 900, 909, 915, 918, 927, 934, 937, 938, 947, 953, 956, 964, 965, 972, 975, 976, 985, 991, 994, 1003, 1010, 1013, 1014, 1025, 1031, 1034, 1044, 1051, 1054, 1055, 1064, 1070, 1073, 1083, 1090, 1093, 1094, 1103, 1109, 1112, 1121, 1128, 1131, 1132, 1141, 1147, 1150, 1159, 1166, 1169, 1170, 1179, 1185, 1188, 1198, 1209, 1214, 1217, 1227, 1241, 1246, 1250, 1261, 1275, 1280, 1284, 1295, 1309, 1314, 1318, 1328, 1339, 1344, 1347, 1357, 1371, 1376, 1380, 1389, 1400, 1405, 1408, 1417, 1428, 1433, 1436, 1445, 1456, 1461, 1464, 1474, 1488, 1493, 1497, 1507, 1518, 1523, 1526, 1536, 1550, 1555, 1559, 1569, 1580, 1585, 1588, 1623, 1627, 1628, 1631, 1638, 1649, 1654, 1655, 1665, 1669, 1682, 1713, 1725, 1737], "plot_intrusion_curv": 4, "give": [4, 8, 22, 24, 26, 27, 31, 59, 89, 119, 151, 184, 217, 218, 220, 249, 282, 315, 348, 382, 415, 448, 709, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164, 1614, 1652, 1739, 1785], "someth": [4, 17, 24, 28, 1806], "As": [4, 5, 12, 13, 15, 20, 21, 22, 26, 28, 29, 30, 31, 33, 758], "anoth": [4, 9, 11, 12, 19, 24, 25, 26, 27, 29, 30, 32, 529, 758, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164, 1229, 1263, 1297, 1359, 1476, 1538, 1761, 1764, 1766, 1767, 1771], "exampl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 22, 24, 25, 28, 30, 33, 651, 653, 655, 702, 703, 705, 728, 729, 733, 740, 837, 854, 855, 857, 858, 859, 860, 861, 871, 893, 894, 896, 897, 898, 899, 900, 910, 931, 932, 934, 935, 936, 937, 938, 948, 969, 970, 972, 973, 974, 975, 976, 986, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1026, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1065, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1104, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1142, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1180, 1616, 1653, 1667, 1669, 1680, 1682, 1713, 1725, 1800], "found": [4, 5, 6, 7, 11, 12, 13, 17, 22, 24, 25, 26, 27, 28, 29, 31, 32, 53, 85, 113, 145, 178, 211, 243, 276, 309, 342, 376, 409, 442, 468, 491, 520, 535, 650, 717, 718, 727, 751, 798, 857, 858, 859, 860, 861, 871, 874, 896, 897, 898, 899, 900, 910, 913, 934, 935, 936, 937, 938, 948, 951, 972, 973, 974, 975, 976, 986, 989, 1010, 1011, 1012, 1013, 1014, 1015, 1026, 1029, 1051, 1052, 1053, 1054, 1055, 1065, 1068, 1090, 1091, 1092, 1093, 1094, 1104, 1107, 1128, 1129, 1130, 1131, 1132, 1142, 1145, 1166, 1167, 1168, 1169, 1170, 1180, 1183, 1212, 1244, 1278, 1312, 1342, 1374, 1403, 1431, 1459, 1491, 1521, 1553, 1583, 1604, 1613, 1623, 1627, 1628, 1629, 1630, 1645, 1658, 1694, 1706, 1720, 1786], "water": [4, 7, 9, 12, 13, 20, 31, 32, 765, 783, 785, 789, 796, 800, 807, 825, 829, 837, 1416, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595], "boundari": [4, 5, 8, 9, 11, 13, 22, 29, 32, 39, 59, 61, 62, 63, 64, 73, 89, 100, 119, 120, 122, 129, 131, 151, 153, 154, 155, 164, 184, 186, 187, 188, 198, 217, 218, 220, 229, 249, 251, 252, 253, 262, 282, 284, 285, 286, 295, 315, 317, 318, 319, 328, 348, 350, 351, 352, 353, 362, 382, 384, 385, 386, 395, 415, 417, 418, 419, 428, 448, 450, 451, 849, 888, 1043, 1082, 1612, 1631, 1637, 1639], "condit": [4, 5, 9, 13, 21, 22, 29, 32, 39, 59, 61, 62, 63, 64, 73, 89, 100, 119, 120, 122, 129, 131, 151, 153, 154, 155, 164, 184, 186, 187, 188, 198, 217, 218, 220, 229, 249, 251, 252, 253, 262, 282, 284, 285, 286, 295, 315, 317, 318, 319, 328, 347, 348, 350, 351, 352, 353, 362, 381, 382, 384, 385, 386, 395, 414, 415, 417, 418, 419, 428, 448, 450, 451, 758, 762, 769, 1637], "sf": [4, 7, 22, 31], "stokesflow": [4, 5, 7, 13, 22, 31, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "pin": 4, "pout": 4, "200_000": 4, "101_325": 4, "set_value_bc": [4, 5, 7, 8, 9, 12, 13, 21, 31, 33, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448], "valu": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 41, 43, 44, 45, 47, 53, 54, 55, 57, 59, 61, 62, 64, 65, 66, 67, 68, 75, 76, 77, 79, 85, 86, 87, 89, 91, 92, 93, 94, 102, 103, 104, 106, 113, 114, 115, 119, 120, 122, 123, 124, 125, 126, 133, 135, 136, 137, 139, 145, 146, 147, 149, 151, 153, 155, 156, 157, 158, 159, 166, 168, 169, 170, 172, 178, 179, 180, 182, 184, 186, 188, 189, 190, 191, 192, 196, 200, 201, 202, 204, 211, 212, 213, 217, 218, 220, 221, 222, 223, 224, 231, 233, 234, 235, 237, 243, 244, 245, 247, 249, 251, 253, 254, 255, 256, 257, 264, 266, 267, 268, 270, 276, 277, 278, 280, 282, 284, 286, 287, 288, 289, 290, 297, 299, 300, 301, 303, 309, 310, 311, 313, 315, 317, 319, 320, 321, 322, 323, 330, 332, 333, 334, 336, 342, 343, 344, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 364, 366, 367, 368, 370, 376, 377, 378, 380, 381, 382, 384, 386, 387, 388, 389, 390, 397, 399, 400, 401, 403, 409, 410, 411, 413, 414, 415, 417, 419, 420, 421, 422, 423, 430, 432, 433, 434, 436, 442, 443, 444, 446, 448, 450, 451, 452, 453, 454, 455, 458, 462, 463, 465, 468, 469, 471, 472, 473, 477, 481, 482, 483, 485, 491, 492, 493, 498, 499, 500, 501, 505, 509, 511, 516, 517, 520, 521, 522, 525, 531, 532, 535, 536, 537, 541, 549, 553, 565, 572, 589, 590, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 649, 650, 651, 652, 653, 654, 655, 657, 659, 662, 663, 664, 665, 666, 669, 670, 671, 673, 674, 675, 677, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 698, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 758, 761, 762, 763, 764, 765, 767, 768, 769, 772, 774, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 827, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 850, 854, 855, 856, 858, 862, 863, 864, 866, 867, 871, 874, 875, 876, 881, 882, 883, 884, 887, 889, 893, 894, 895, 897, 901, 902, 903, 905, 906, 910, 913, 914, 915, 920, 921, 922, 923, 926, 927, 931, 932, 933, 935, 939, 940, 941, 943, 944, 948, 951, 952, 953, 958, 959, 960, 961, 964, 965, 969, 970, 971, 973, 977, 978, 979, 981, 982, 986, 989, 990, 991, 996, 997, 998, 999, 1002, 1003, 1007, 1008, 1009, 1011, 1017, 1018, 1019, 1021, 1022, 1026, 1029, 1030, 1031, 1036, 1037, 1038, 1039, 1042, 1044, 1048, 1049, 1050, 1052, 1056, 1057, 1058, 1060, 1061, 1065, 1068, 1069, 1070, 1075, 1076, 1077, 1078, 1081, 1083, 1087, 1088, 1089, 1091, 1095, 1096, 1097, 1099, 1100, 1104, 1107, 1108, 1109, 1114, 1115, 1116, 1117, 1120, 1121, 1125, 1126, 1127, 1129, 1133, 1134, 1135, 1137, 1138, 1142, 1145, 1146, 1147, 1152, 1153, 1154, 1155, 1158, 1159, 1163, 1164, 1165, 1167, 1171, 1172, 1173, 1175, 1176, 1180, 1183, 1184, 1185, 1190, 1191, 1192, 1193, 1197, 1198, 1202, 1203, 1204, 1206, 1212, 1213, 1214, 1219, 1220, 1221, 1222, 1226, 1227, 1229, 1232, 1233, 1234, 1235, 1237, 1238, 1244, 1245, 1246, 1252, 1253, 1254, 1255, 1260, 1261, 1263, 1266, 1267, 1268, 1269, 1271, 1272, 1278, 1279, 1280, 1286, 1287, 1288, 1289, 1294, 1295, 1297, 1300, 1301, 1302, 1303, 1305, 1306, 1312, 1313, 1314, 1320, 1321, 1322, 1323, 1327, 1328, 1332, 1333, 1334, 1336, 1342, 1343, 1344, 1349, 1350, 1351, 1352, 1356, 1357, 1359, 1362, 1363, 1364, 1365, 1367, 1368, 1374, 1375, 1376, 1382, 1383, 1384, 1385, 1389, 1393, 1394, 1395, 1397, 1403, 1404, 1405, 1410, 1411, 1412, 1413, 1417, 1421, 1422, 1423, 1425, 1431, 1432, 1433, 1438, 1439, 1440, 1441, 1445, 1449, 1450, 1451, 1453, 1459, 1460, 1461, 1466, 1467, 1468, 1469, 1473, 1474, 1476, 1479, 1480, 1481, 1482, 1484, 1485, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1507, 1511, 1512, 1513, 1515, 1521, 1522, 1523, 1528, 1529, 1530, 1531, 1535, 1536, 1538, 1541, 1542, 1543, 1544, 1546, 1547, 1553, 1554, 1555, 1561, 1562, 1563, 1564, 1568, 1569, 1573, 1574, 1575, 1577, 1583, 1584, 1585, 1590, 1591, 1592, 1593, 1612, 1614, 1617, 1618, 1619, 1624, 1626, 1638, 1639, 1640, 1648, 1651, 1652, 1654, 1655, 1687, 1690, 1691, 1694, 1695, 1696, 1702, 1703, 1706, 1707, 1708, 1713, 1716, 1717, 1720, 1721, 1722, 1729, 1731, 1734, 1736, 1740, 1744, 1747, 1749, 1750, 1752, 1754, 1779, 1780, 1786, 1787, 1790, 1804, 1805], "total": [4, 7, 11, 22, 25, 28, 31, 129, 781, 871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180, 1613], "flow": [4, 8, 12, 13, 19, 22, 26, 27, 31, 293, 636, 810, 818, 825], "rate": [4, 5, 7, 8, 9, 13, 21, 22, 31, 40, 59, 62, 89, 119, 129, 132, 151, 153, 165, 184, 186, 217, 230, 249, 251, 263, 282, 284, 296, 315, 317, 329, 348, 351, 363, 382, 384, 396, 415, 417, 429, 448, 450, 808, 832, 834, 835, 836, 838, 839, 840, 841, 842, 843], "through": [4, 7, 8, 9, 13, 17, 19, 28, 31, 32, 57, 129, 149, 182, 247, 280, 313, 346, 380, 413, 446, 1015, 1016], "insert": [4, 29, 32, 65, 91, 123, 156, 189, 221, 254, 287, 320, 354, 387, 420, 452, 471, 498, 522, 537, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590, 1653, 1662, 1663, 1696, 1708, 1722, 1790], "known": [4, 7, 8, 9, 11, 21, 26, 28, 30, 783, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164, 1623, 1627, 1628], "darci": [4, 5], "": [4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 43, 48, 55, 58, 59, 66, 70, 73, 75, 80, 87, 89, 92, 96, 100, 102, 107, 115, 117, 119, 124, 128, 129, 131, 135, 140, 147, 150, 151, 157, 161, 164, 168, 173, 180, 183, 184, 190, 194, 198, 200, 205, 213, 217, 222, 226, 229, 233, 238, 245, 248, 249, 255, 259, 262, 266, 271, 278, 281, 282, 288, 292, 295, 299, 304, 311, 314, 315, 321, 325, 328, 332, 337, 344, 348, 355, 359, 362, 366, 371, 378, 382, 388, 392, 395, 399, 404, 411, 415, 421, 425, 428, 432, 437, 444, 447, 448, 453, 457, 458, 466, 475, 481, 486, 493, 495, 499, 503, 505, 509, 511, 518, 519, 524, 525, 529, 533, 534, 539, 543, 549, 553, 554, 557, 569, 570, 572, 621, 636, 646, 651, 652, 653, 654, 655, 658, 660, 668, 702, 703, 704, 705, 728, 732, 733, 737, 740, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 821, 823, 824, 825, 827, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 854, 855, 856, 859, 860, 861, 864, 866, 868, 876, 878, 882, 886, 893, 894, 895, 898, 899, 900, 903, 905, 907, 915, 917, 921, 925, 931, 932, 933, 936, 937, 938, 941, 943, 945, 953, 955, 959, 963, 964, 969, 970, 971, 974, 975, 976, 979, 981, 983, 991, 993, 997, 1001, 1002, 1007, 1008, 1009, 1012, 1013, 1014, 1019, 1021, 1023, 1031, 1033, 1037, 1041, 1048, 1049, 1050, 1053, 1054, 1055, 1058, 1060, 1062, 1070, 1072, 1076, 1080, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1099, 1101, 1109, 1111, 1115, 1119, 1125, 1126, 1127, 1130, 1131, 1132, 1135, 1137, 1139, 1147, 1149, 1153, 1157, 1158, 1163, 1164, 1165, 1168, 1169, 1170, 1173, 1175, 1177, 1185, 1187, 1191, 1195, 1202, 1207, 1214, 1216, 1220, 1224, 1232, 1239, 1246, 1248, 1249, 1253, 1257, 1266, 1273, 1280, 1282, 1283, 1287, 1291, 1300, 1307, 1314, 1316, 1317, 1321, 1325, 1327, 1332, 1337, 1344, 1346, 1350, 1354, 1362, 1369, 1376, 1378, 1379, 1383, 1387, 1393, 1398, 1405, 1407, 1411, 1415, 1421, 1426, 1433, 1435, 1439, 1443, 1449, 1454, 1461, 1463, 1467, 1471, 1479, 1486, 1493, 1495, 1496, 1500, 1504, 1511, 1516, 1523, 1525, 1529, 1533, 1541, 1548, 1555, 1557, 1558, 1562, 1566, 1573, 1578, 1585, 1587, 1591, 1595, 1629, 1646, 1650, 1651, 1653, 1654, 1655, 1656, 1659, 1662, 1663, 1665, 1669, 1671, 1672, 1674, 1676, 1678, 1680, 1682, 1685, 1692, 1693, 1698, 1704, 1705, 1712, 1718, 1719, 1724, 1737, 1781, 1782, 1784, 1792, 1795, 1803, 1807], "law": [4, 5, 8, 19, 21, 22, 129, 621, 761, 785, 800], "q": [4, 5, 22, 28, 31, 32, 636, 651, 653, 655, 702, 703, 705, 728, 733, 740], "A": [4, 5, 7, 8, 9, 11, 12, 13, 17, 19, 21, 22, 26, 27, 28, 29, 30, 32, 33, 34, 37, 43, 50, 55, 58, 60, 66, 67, 68, 75, 82, 87, 90, 92, 93, 94, 98, 102, 109, 115, 121, 124, 125, 126, 129, 135, 142, 147, 150, 152, 157, 158, 159, 162, 168, 175, 180, 183, 185, 190, 191, 192, 195, 200, 207, 213, 219, 222, 223, 224, 227, 233, 240, 245, 248, 250, 255, 256, 257, 260, 266, 273, 278, 281, 283, 288, 289, 290, 293, 299, 306, 311, 314, 316, 321, 322, 323, 326, 332, 339, 344, 349, 355, 356, 357, 360, 366, 373, 378, 383, 388, 389, 390, 393, 399, 406, 411, 416, 421, 422, 423, 426, 432, 439, 444, 447, 449, 453, 454, 455, 459, 472, 473, 481, 488, 493, 497, 499, 500, 501, 505, 506, 509, 510, 511, 553, 561, 568, 569, 572, 573, 596, 597, 599, 602, 606, 621, 636, 643, 646, 647, 649, 651, 652, 654, 655, 671, 689, 694, 700, 702, 704, 705, 708, 712, 715, 724, 728, 729, 735, 737, 740, 746, 764, 769, 785, 788, 789, 795, 796, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 827, 829, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 856, 859, 870, 876, 880, 882, 883, 884, 887, 895, 898, 909, 915, 919, 921, 922, 923, 933, 936, 947, 953, 957, 959, 960, 961, 964, 971, 974, 985, 991, 995, 997, 998, 999, 1002, 1009, 1012, 1025, 1031, 1035, 1037, 1038, 1039, 1042, 1050, 1053, 1064, 1070, 1074, 1076, 1077, 1078, 1081, 1089, 1092, 1103, 1109, 1113, 1115, 1116, 1117, 1120, 1127, 1130, 1141, 1147, 1151, 1153, 1154, 1155, 1158, 1165, 1168, 1179, 1185, 1189, 1191, 1192, 1193, 1202, 1209, 1214, 1218, 1220, 1221, 1222, 1225, 1229, 1232, 1235, 1241, 1246, 1251, 1253, 1254, 1255, 1263, 1266, 1269, 1275, 1280, 1285, 1287, 1288, 1289, 1297, 1300, 1303, 1309, 1314, 1319, 1321, 1322, 1323, 1332, 1339, 1344, 1348, 1350, 1351, 1352, 1355, 1359, 1362, 1365, 1371, 1376, 1381, 1383, 1384, 1385, 1393, 1400, 1405, 1409, 1411, 1412, 1413, 1416, 1421, 1428, 1433, 1437, 1439, 1440, 1441, 1449, 1456, 1461, 1465, 1467, 1468, 1469, 1472, 1476, 1479, 1482, 1488, 1493, 1498, 1500, 1501, 1502, 1511, 1518, 1523, 1527, 1529, 1530, 1531, 1534, 1538, 1541, 1544, 1550, 1555, 1560, 1562, 1563, 1564, 1573, 1580, 1585, 1589, 1591, 1592, 1593, 1604, 1606, 1608, 1610, 1612, 1614, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1636, 1638, 1639, 1640, 1641, 1648, 1650, 1651, 1652, 1654, 1655, 1656, 1659, 1672, 1674, 1676, 1678, 1680, 1682, 1737, 1739, 1740, 1743, 1778, 1793, 1794, 1795, 1798, 1799, 1807], "2": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 54, 86, 98, 114, 146, 179, 212, 227, 244, 277, 310, 343, 377, 410, 443, 469, 492, 521, 536, 549, 554, 577, 578, 579, 580, 581, 582, 583, 589, 596, 597, 599, 602, 606, 621, 636, 651, 668, 677, 702, 728, 768, 789, 800, 812, 813, 820, 821, 825, 828, 829, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 849, 854, 857, 858, 859, 860, 871, 875, 888, 893, 896, 897, 898, 899, 910, 914, 931, 934, 935, 936, 937, 948, 952, 969, 972, 973, 974, 975, 986, 990, 1007, 1010, 1011, 1012, 1013, 1026, 1030, 1043, 1048, 1051, 1052, 1053, 1054, 1065, 1069, 1082, 1087, 1090, 1091, 1092, 1093, 1104, 1108, 1120, 1125, 1128, 1129, 1130, 1131, 1142, 1146, 1163, 1166, 1167, 1168, 1169, 1180, 1184, 1213, 1225, 1245, 1279, 1313, 1343, 1375, 1404, 1432, 1460, 1492, 1522, 1554, 1584, 1614, 1616, 1617, 1620, 1624, 1629, 1640, 1647, 1652, 1680, 1695, 1707, 1713, 1721, 1725, 1783, 1787, 1788], "l": [4, 5, 7, 8, 9, 11, 19, 22, 24, 31, 129, 621, 636, 783, 785], "mu": [4, 5, 22, 30, 31, 636, 758, 769, 802, 806, 807, 1797], "viscos": [4, 5, 7, 13, 20, 22, 30, 586, 589, 590, 758, 769, 791, 802, 803, 804, 805, 806, 807, 823, 824, 825, 1235, 1237, 1269, 1271, 1303, 1305, 1365, 1367, 1482, 1484, 1544, 1546, 1797, 1798, 1799], "mean": [4, 6, 8, 10, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 47, 50, 51, 52, 55, 57, 59, 61, 63, 66, 75, 79, 82, 83, 84, 87, 89, 92, 102, 106, 109, 110, 111, 115, 119, 120, 122, 124, 135, 139, 142, 143, 144, 147, 149, 151, 154, 157, 168, 172, 175, 176, 177, 180, 182, 184, 187, 190, 195, 200, 204, 207, 208, 209, 213, 217, 218, 220, 222, 233, 237, 240, 241, 242, 245, 247, 249, 252, 255, 266, 270, 273, 274, 275, 278, 280, 282, 285, 288, 299, 303, 306, 307, 308, 311, 313, 315, 318, 321, 332, 336, 339, 340, 341, 344, 346, 348, 350, 352, 355, 366, 370, 373, 374, 375, 378, 380, 382, 385, 388, 399, 403, 406, 407, 408, 411, 413, 415, 418, 421, 432, 436, 439, 440, 441, 444, 446, 448, 453, 465, 481, 485, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 529, 557, 568, 572, 646, 650, 652, 653, 654, 698, 701, 703, 704, 726, 727, 733, 737, 751, 758, 831, 856, 857, 860, 861, 867, 870, 871, 872, 873, 876, 882, 895, 896, 899, 900, 906, 909, 910, 911, 912, 915, 921, 933, 934, 937, 938, 944, 947, 948, 949, 950, 953, 959, 971, 972, 975, 976, 982, 985, 986, 987, 988, 991, 997, 1009, 1010, 1013, 1014, 1022, 1025, 1026, 1027, 1028, 1031, 1037, 1050, 1051, 1054, 1055, 1061, 1064, 1065, 1066, 1067, 1070, 1076, 1089, 1090, 1093, 1094, 1100, 1103, 1104, 1105, 1106, 1109, 1115, 1127, 1128, 1131, 1132, 1138, 1141, 1142, 1143, 1144, 1147, 1153, 1165, 1166, 1169, 1170, 1176, 1179, 1180, 1181, 1182, 1185, 1191, 1202, 1206, 1209, 1210, 1211, 1214, 1220, 1232, 1238, 1241, 1242, 1243, 1246, 1253, 1266, 1272, 1275, 1276, 1277, 1280, 1287, 1300, 1306, 1309, 1310, 1311, 1314, 1321, 1332, 1336, 1339, 1340, 1341, 1344, 1350, 1362, 1368, 1371, 1372, 1373, 1376, 1383, 1393, 1397, 1400, 1401, 1402, 1405, 1411, 1421, 1425, 1428, 1429, 1430, 1433, 1439, 1449, 1453, 1456, 1457, 1458, 1461, 1467, 1479, 1485, 1488, 1489, 1490, 1493, 1500, 1511, 1515, 1518, 1519, 1520, 1523, 1529, 1541, 1547, 1550, 1551, 1552, 1555, 1562, 1573, 1577, 1580, 1581, 1582, 1585, 1591, 1648, 1651, 1739], "k": [4, 5, 6, 20, 21, 22, 26, 27, 28, 30, 31, 53, 69, 85, 95, 113, 127, 145, 160, 178, 193, 211, 225, 243, 258, 276, 291, 309, 324, 342, 358, 376, 391, 409, 424, 442, 456, 468, 474, 491, 502, 520, 523, 535, 538, 761, 762, 763, 765, 767, 768, 769, 772, 774, 783, 785, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 803, 804, 806, 807, 834, 835, 864, 874, 885, 903, 913, 924, 941, 951, 962, 979, 989, 1000, 1019, 1029, 1040, 1058, 1068, 1079, 1097, 1107, 1118, 1135, 1145, 1156, 1173, 1183, 1194, 1212, 1223, 1244, 1256, 1278, 1290, 1312, 1324, 1342, 1353, 1374, 1386, 1403, 1414, 1431, 1442, 1459, 1470, 1491, 1503, 1521, 1532, 1553, 1565, 1583, 1594, 1694, 1697, 1706, 1711, 1720, 1723, 1786, 1791], "also": [4, 6, 7, 11, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 196, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 355, 366, 373, 374, 375, 378, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 453, 458, 476, 477, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 541, 646, 650, 651, 652, 653, 654, 655, 698, 701, 702, 703, 704, 705, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 850, 856, 857, 860, 861, 870, 871, 872, 873, 876, 882, 887, 889, 895, 896, 899, 900, 909, 910, 911, 912, 915, 921, 927, 933, 934, 937, 938, 947, 948, 949, 950, 953, 959, 965, 971, 972, 975, 976, 985, 986, 987, 988, 991, 997, 1003, 1009, 1010, 1013, 1014, 1025, 1026, 1027, 1028, 1031, 1037, 1044, 1050, 1051, 1054, 1055, 1064, 1065, 1066, 1067, 1070, 1076, 1083, 1089, 1090, 1093, 1094, 1103, 1104, 1105, 1106, 1109, 1115, 1121, 1127, 1128, 1131, 1132, 1141, 1142, 1143, 1144, 1147, 1153, 1159, 1165, 1166, 1169, 1170, 1179, 1180, 1181, 1182, 1185, 1191, 1198, 1202, 1209, 1210, 1211, 1214, 1220, 1227, 1232, 1241, 1242, 1243, 1246, 1253, 1258, 1261, 1266, 1275, 1276, 1277, 1280, 1287, 1292, 1295, 1300, 1309, 1310, 1311, 1314, 1321, 1328, 1332, 1339, 1340, 1341, 1344, 1350, 1357, 1362, 1371, 1372, 1373, 1376, 1383, 1389, 1393, 1400, 1401, 1402, 1405, 1411, 1416, 1417, 1421, 1428, 1429, 1430, 1433, 1439, 1445, 1449, 1456, 1457, 1458, 1461, 1467, 1472, 1474, 1479, 1488, 1489, 1490, 1493, 1500, 1505, 1507, 1511, 1518, 1519, 1520, 1523, 1529, 1534, 1536, 1541, 1550, 1551, 1552, 1555, 1562, 1569, 1573, 1580, 1581, 1582, 1585, 1591, 1614, 1616, 1623, 1627, 1628, 1647, 1658, 1662, 1739, 1783, 1788, 1794], "worth": [4, 14, 19, 25, 27, 28, 29], "explain": [4, 5, 11, 19, 21, 26, 28, 30], "how": [4, 6, 7, 8, 9, 10, 11, 12, 15, 22, 24, 25, 26, 27, 28, 29, 30, 31, 43, 47, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 66, 75, 79, 82, 83, 84, 87, 89, 90, 92, 102, 106, 109, 110, 111, 115, 119, 120, 121, 122, 124, 135, 139, 142, 143, 144, 147, 149, 151, 152, 153, 154, 155, 157, 168, 172, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 200, 204, 207, 208, 209, 213, 217, 218, 219, 220, 222, 233, 237, 240, 241, 242, 245, 247, 249, 250, 251, 252, 253, 255, 266, 270, 273, 274, 275, 278, 280, 282, 283, 284, 285, 286, 288, 299, 303, 306, 307, 308, 311, 313, 315, 316, 317, 318, 319, 321, 332, 336, 339, 340, 341, 344, 346, 348, 349, 350, 351, 352, 353, 355, 366, 370, 373, 374, 375, 378, 380, 382, 383, 384, 385, 386, 388, 399, 403, 406, 407, 408, 411, 413, 415, 416, 417, 418, 419, 421, 432, 436, 439, 440, 441, 444, 446, 448, 449, 450, 451, 453, 465, 477, 481, 485, 488, 489, 490, 493, 497, 499, 505, 506, 507, 508, 509, 510, 511, 541, 568, 650, 698, 701, 726, 727, 729, 732, 831, 850, 856, 867, 870, 872, 873, 876, 880, 882, 889, 895, 906, 909, 911, 912, 915, 919, 921, 927, 933, 944, 947, 949, 950, 953, 957, 959, 965, 971, 982, 985, 987, 988, 991, 995, 997, 1003, 1009, 1022, 1025, 1027, 1028, 1031, 1035, 1037, 1044, 1050, 1061, 1064, 1066, 1067, 1070, 1074, 1076, 1083, 1089, 1100, 1103, 1105, 1106, 1109, 1113, 1115, 1121, 1127, 1138, 1141, 1143, 1144, 1147, 1151, 1153, 1159, 1165, 1176, 1179, 1181, 1182, 1185, 1189, 1191, 1198, 1202, 1206, 1209, 1210, 1211, 1214, 1218, 1220, 1227, 1232, 1238, 1241, 1242, 1243, 1246, 1251, 1253, 1261, 1266, 1272, 1275, 1276, 1277, 1280, 1285, 1287, 1295, 1300, 1306, 1309, 1310, 1311, 1314, 1319, 1321, 1328, 1332, 1336, 1339, 1340, 1341, 1344, 1348, 1350, 1357, 1362, 1368, 1371, 1372, 1373, 1376, 1381, 1383, 1389, 1393, 1397, 1400, 1401, 1402, 1405, 1409, 1411, 1417, 1421, 1425, 1428, 1429, 1430, 1433, 1437, 1439, 1445, 1449, 1453, 1456, 1457, 1458, 1461, 1465, 1467, 1474, 1479, 1485, 1488, 1489, 1490, 1493, 1498, 1500, 1507, 1511, 1515, 1518, 1519, 1520, 1523, 1527, 1529, 1536, 1541, 1547, 1550, 1551, 1552, 1555, 1560, 1562, 1569, 1573, 1577, 1580, 1581, 1582, 1585, 1589, 1591, 1639], "so": [4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 56, 59, 63, 88, 89, 116, 117, 119, 148, 151, 154, 181, 184, 187, 195, 214, 217, 218, 220, 246, 249, 252, 279, 282, 285, 312, 315, 318, 345, 348, 352, 379, 382, 385, 412, 415, 418, 445, 448, 458, 470, 494, 504, 554, 557, 572, 652, 735, 758, 762, 854, 859, 877, 893, 898, 916, 931, 936, 954, 969, 974, 992, 1002, 1007, 1012, 1015, 1016, 1032, 1048, 1053, 1071, 1087, 1092, 1110, 1125, 1130, 1148, 1158, 1163, 1168, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586, 1614, 1620, 1624, 1630, 1647, 1651, 1652, 1653, 1656, 1659, 1774, 1776, 1798, 1799], "capillari": [4, 10, 12, 32, 210, 668, 669, 808, 812, 813, 825, 827, 828, 829, 832], "chang": [4, 6, 22, 24, 26, 28, 30, 31, 33, 35, 61, 350, 964, 1158, 1776], "match": [4, 20, 22, 26, 32, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1416, 1648], "object": [4, 6, 8, 10, 15, 17, 21, 24, 25, 26, 28, 29, 32, 33, 48, 50, 56, 58, 60, 70, 71, 80, 82, 88, 90, 96, 98, 107, 109, 116, 121, 128, 129, 140, 142, 148, 150, 152, 161, 173, 175, 181, 183, 185, 194, 196, 205, 207, 214, 219, 226, 238, 240, 246, 248, 250, 259, 260, 271, 273, 279, 281, 283, 292, 304, 306, 312, 314, 316, 325, 337, 339, 345, 347, 349, 359, 371, 373, 379, 381, 383, 392, 404, 406, 412, 414, 416, 425, 426, 437, 439, 445, 447, 449, 457, 458, 459, 466, 470, 475, 476, 477, 486, 488, 494, 495, 497, 503, 506, 510, 512, 518, 519, 524, 525, 528, 530, 533, 534, 539, 540, 541, 543, 554, 558, 561, 564, 565, 567, 568, 569, 570, 573, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 649, 650, 651, 652, 653, 654, 655, 657, 659, 662, 663, 664, 665, 666, 669, 671, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 698, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 850, 864, 866, 868, 870, 877, 878, 880, 886, 887, 889, 903, 905, 907, 909, 916, 917, 919, 925, 926, 927, 941, 943, 945, 947, 954, 955, 957, 963, 964, 965, 979, 981, 983, 985, 992, 993, 995, 1001, 1003, 1019, 1021, 1023, 1025, 1032, 1033, 1035, 1041, 1042, 1044, 1058, 1060, 1062, 1064, 1071, 1072, 1074, 1080, 1081, 1083, 1097, 1099, 1101, 1103, 1110, 1111, 1113, 1119, 1120, 1121, 1135, 1137, 1139, 1141, 1148, 1149, 1151, 1157, 1158, 1159, 1173, 1175, 1177, 1179, 1186, 1187, 1189, 1195, 1197, 1198, 1207, 1209, 1215, 1216, 1218, 1224, 1226, 1227, 1229, 1239, 1241, 1247, 1248, 1249, 1251, 1257, 1260, 1261, 1263, 1273, 1275, 1281, 1282, 1283, 1285, 1291, 1294, 1295, 1297, 1307, 1309, 1315, 1316, 1317, 1319, 1325, 1327, 1328, 1337, 1339, 1345, 1346, 1348, 1354, 1355, 1356, 1357, 1359, 1369, 1371, 1377, 1378, 1379, 1381, 1387, 1388, 1389, 1398, 1400, 1406, 1407, 1409, 1415, 1416, 1417, 1426, 1428, 1434, 1435, 1437, 1443, 1445, 1454, 1456, 1462, 1463, 1465, 1471, 1473, 1474, 1476, 1486, 1488, 1494, 1495, 1496, 1498, 1504, 1507, 1516, 1518, 1524, 1525, 1527, 1533, 1535, 1536, 1538, 1548, 1550, 1556, 1557, 1558, 1560, 1566, 1568, 1569, 1578, 1580, 1586, 1587, 1589, 1595, 1604, 1613, 1615, 1632, 1633, 1646, 1656, 1659, 1692, 1693, 1698, 1704, 1705, 1712, 1718, 1719, 1724, 1726, 1732, 1737, 1739, 1740, 1744, 1750, 1774, 1776, 1778, 1781, 1782, 1783, 1785, 1788, 1792, 1793, 1798, 1799, 1801, 1804, 1805], "control": [4, 26, 28, 32, 43, 49, 50, 57, 59, 60, 61, 62, 63, 64, 75, 81, 82, 89, 90, 102, 108, 109, 119, 121, 129, 135, 141, 142, 149, 151, 152, 153, 154, 155, 168, 174, 175, 182, 184, 185, 186, 187, 188, 200, 206, 207, 217, 218, 219, 220, 233, 239, 240, 247, 249, 250, 251, 252, 253, 266, 272, 273, 280, 282, 283, 284, 285, 286, 299, 305, 306, 313, 315, 316, 317, 318, 319, 332, 338, 339, 346, 348, 349, 350, 351, 352, 353, 366, 372, 373, 380, 382, 383, 384, 385, 386, 399, 405, 406, 413, 415, 416, 417, 418, 419, 432, 438, 439, 446, 448, 449, 450, 451, 467, 481, 487, 488, 497, 505, 506, 510, 646, 647, 650, 651, 653, 654, 655, 698, 701, 702, 703, 704, 705, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 856, 859, 869, 870, 880, 895, 898, 908, 909, 919, 933, 936, 946, 947, 957, 971, 974, 984, 985, 995, 1009, 1012, 1024, 1025, 1035, 1050, 1053, 1063, 1064, 1074, 1089, 1092, 1102, 1103, 1113, 1127, 1130, 1140, 1141, 1151, 1165, 1168, 1178, 1179, 1189, 1202, 1208, 1209, 1218, 1232, 1240, 1241, 1251, 1266, 1274, 1275, 1285, 1300, 1308, 1309, 1319, 1332, 1338, 1339, 1348, 1362, 1370, 1371, 1381, 1393, 1399, 1400, 1409, 1421, 1427, 1428, 1437, 1449, 1455, 1456, 1465, 1479, 1487, 1488, 1498, 1511, 1517, 1518, 1527, 1541, 1549, 1550, 1560, 1573, 1579, 1580, 1589, 1613, 1615, 1631, 1639, 1649, 1774], "possess": [4, 29, 458, 779], "demand": [4, 1120], "let": [4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 556], "weibul": [4, 6, 653, 703, 733], "first": [4, 6, 7, 8, 10, 12, 13, 17, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 35, 54, 86, 114, 129, 146, 179, 212, 244, 277, 310, 343, 377, 410, 443, 469, 492, 521, 536, 724, 769, 854, 875, 893, 914, 931, 952, 969, 990, 1007, 1030, 1048, 1069, 1087, 1108, 1125, 1146, 1163, 1184, 1213, 1245, 1279, 1313, 1343, 1375, 1404, 1432, 1460, 1492, 1522, 1554, 1584, 1616, 1625, 1648, 1695, 1707, 1721, 1731, 1734, 1749, 1752, 1787], "store": [4, 6, 15, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 58, 129, 150, 162, 183, 195, 227, 248, 260, 281, 293, 314, 326, 347, 360, 381, 393, 414, 426, 447, 458, 459, 477, 495, 540, 541, 543, 549, 553, 557, 567, 568, 652, 712, 735, 785, 837, 848, 850, 864, 866, 878, 887, 889, 903, 905, 917, 927, 941, 943, 955, 964, 965, 979, 981, 993, 1003, 1019, 1021, 1033, 1042, 1044, 1058, 1060, 1072, 1081, 1083, 1097, 1099, 1111, 1120, 1121, 1135, 1137, 1149, 1158, 1159, 1173, 1175, 1187, 1198, 1216, 1227, 1248, 1261, 1282, 1295, 1316, 1328, 1346, 1357, 1378, 1389, 1407, 1416, 1417, 1435, 1445, 1463, 1474, 1495, 1507, 1525, 1536, 1557, 1569, 1587, 1665, 1672, 1674, 1678, 1737, 1739, 1774], "exist": [4, 6, 11, 12, 13, 21, 27, 28, 29, 30, 31, 33, 55, 59, 60, 63, 66, 87, 89, 90, 92, 115, 119, 120, 121, 122, 124, 147, 151, 152, 154, 157, 180, 184, 185, 187, 190, 213, 217, 218, 219, 220, 222, 245, 249, 250, 252, 255, 278, 282, 283, 285, 288, 311, 315, 316, 318, 321, 344, 348, 349, 352, 355, 378, 382, 383, 385, 388, 411, 415, 416, 418, 421, 444, 448, 449, 453, 477, 493, 497, 499, 509, 510, 511, 541, 738, 752, 758, 850, 876, 880, 882, 889, 915, 919, 921, 927, 953, 957, 959, 965, 991, 995, 997, 1003, 1031, 1035, 1037, 1044, 1070, 1074, 1076, 1083, 1109, 1113, 1115, 1121, 1147, 1151, 1153, 1159, 1185, 1189, 1191, 1198, 1214, 1218, 1220, 1227, 1246, 1251, 1253, 1261, 1280, 1285, 1287, 1295, 1314, 1319, 1321, 1328, 1344, 1348, 1350, 1357, 1376, 1381, 1383, 1389, 1405, 1409, 1411, 1417, 1433, 1437, 1439, 1445, 1461, 1465, 1467, 1474, 1493, 1498, 1500, 1507, 1523, 1527, 1529, 1536, 1555, 1560, 1562, 1569, 1585, 1589, 1591, 1618, 1620, 1640, 1778, 1783], "dummi": [4, 1680], "variabl": [4, 17, 20, 22, 29, 58, 150, 183, 248, 281, 314, 447, 731, 735, 810, 834, 835, 837], "we": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 758, 834, 835], "compar": [4, 7, 22, 31], "later": [4, 15, 22, 25, 26, 28, 29, 1653], "gmod": 4, "old_diamet": 4, "pop": [4, 24, 32], "diamet": [4, 6, 8, 9, 10, 11, 15, 19, 20, 22, 25, 26, 28, 29, 31, 32, 33, 477, 495, 496, 541, 543, 544, 554, 577, 578, 579, 580, 581, 582, 583, 596, 597, 598, 599, 600, 601, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 649, 652, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 688, 689, 690, 691, 693, 694, 695, 700, 701, 707, 708, 714, 715, 717, 718, 719, 812, 813, 816, 827, 828, 829, 850, 878, 879, 889, 917, 918, 927, 955, 956, 965, 993, 994, 1003, 1033, 1034, 1044, 1072, 1073, 1083, 1111, 1112, 1121, 1149, 1150, 1159, 1187, 1188, 1198, 1216, 1217, 1227, 1248, 1250, 1261, 1282, 1284, 1295, 1316, 1318, 1328, 1346, 1347, 1357, 1378, 1380, 1389, 1407, 1408, 1417, 1435, 1436, 1445, 1463, 1464, 1474, 1495, 1497, 1507, 1525, 1526, 1536, 1557, 1559, 1569, 1587, 1588], "add_model": [4, 5, 6, 7, 11, 12, 13, 20, 21, 28, 29, 30, 31, 32, 478, 542, 651, 702, 728, 729, 837, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "propnam": [4, 6, 7, 8, 11, 12, 13, 20, 21, 26, 28, 29, 30, 31, 32, 46, 47, 63, 78, 79, 105, 106, 138, 139, 154, 171, 172, 187, 203, 204, 236, 237, 252, 269, 270, 285, 302, 303, 318, 335, 336, 352, 369, 370, 385, 402, 403, 418, 435, 436, 464, 465, 477, 484, 485, 495, 496, 512, 541, 543, 544, 568, 651, 702, 728, 729, 837, 850, 865, 867, 878, 879, 889, 904, 906, 917, 918, 927, 942, 944, 955, 956, 965, 980, 982, 993, 994, 1003, 1020, 1022, 1033, 1034, 1044, 1059, 1061, 1072, 1073, 1083, 1098, 1100, 1111, 1112, 1121, 1136, 1138, 1149, 1150, 1159, 1174, 1176, 1187, 1188, 1198, 1205, 1206, 1216, 1217, 1227, 1235, 1236, 1237, 1238, 1248, 1250, 1261, 1269, 1270, 1271, 1272, 1282, 1284, 1295, 1303, 1304, 1305, 1306, 1316, 1318, 1328, 1335, 1336, 1346, 1347, 1357, 1365, 1366, 1367, 1368, 1378, 1380, 1389, 1396, 1397, 1407, 1408, 1417, 1424, 1425, 1435, 1436, 1445, 1452, 1453, 1463, 1464, 1474, 1482, 1483, 1484, 1485, 1495, 1497, 1507, 1514, 1515, 1525, 1526, 1536, 1544, 1545, 1546, 1547, 1557, 1559, 1569, 1576, 1577, 1587, 1588, 1803], "pore_s": [4, 6, 28, 29, 651, 702, 728], "0": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 61, 67, 93, 98, 125, 158, 191, 195, 223, 256, 289, 322, 350, 356, 389, 422, 454, 472, 500, 554, 565, 572, 577, 578, 579, 580, 581, 582, 583, 586, 589, 590, 646, 647, 651, 652, 653, 654, 655, 698, 702, 703, 704, 705, 722, 724, 728, 733, 734, 735, 736, 737, 740, 765, 781, 783, 789, 796, 800, 807, 828, 829, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 854, 855, 857, 858, 859, 860, 861, 871, 883, 893, 894, 896, 897, 898, 899, 900, 910, 922, 931, 932, 934, 935, 936, 937, 938, 948, 960, 964, 969, 970, 972, 973, 974, 975, 976, 986, 998, 1002, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1026, 1038, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1065, 1077, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1104, 1116, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1142, 1154, 1158, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1180, 1192, 1221, 1254, 1288, 1322, 1351, 1384, 1412, 1440, 1468, 1501, 1530, 1563, 1592, 1612, 1613, 1616, 1631, 1639, 1640, 1645, 1649, 1650, 1651, 1654, 1655, 1664, 1666, 1668, 1670, 1673, 1675, 1677, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1731, 1749, 1800], "5": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 554, 577, 578, 579, 580, 581, 582, 583, 589, 619, 634, 652, 655, 705, 729, 740, 758, 768, 800, 807, 834, 835, 836, 837, 839, 840, 841, 854, 855, 857, 858, 859, 860, 861, 871, 893, 894, 896, 897, 898, 899, 900, 910, 931, 932, 934, 935, 936, 937, 938, 948, 969, 970, 972, 973, 974, 975, 976, 986, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1026, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1065, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1104, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1142, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1180, 1616, 1800], "loc": [4, 6, 28, 29, 651, 653, 655, 702, 703, 705, 728, 733, 740], "now": [4, 6, 7, 8, 10, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 651, 702, 728], "show_hist": 4, "glanc": 4, "histogram": [4, 6, 33, 732], "two": [4, 6, 11, 12, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 35, 98, 553, 554, 570, 600, 602, 646, 654, 704, 725, 737, 746, 751, 825, 834, 835, 857, 860, 861, 871, 896, 899, 900, 910, 934, 937, 938, 948, 972, 975, 976, 986, 1002, 1010, 1013, 1014, 1026, 1051, 1054, 1055, 1065, 1090, 1093, 1094, 1104, 1120, 1128, 1131, 1132, 1142, 1166, 1169, 1170, 1180, 1616, 1623, 1625, 1627, 1628, 1640, 1652, 1660, 1678, 1680, 1682, 1736, 1754, 1760, 1763, 1765, 1770], "more": [4, 5, 8, 13, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 50, 51, 52, 55, 59, 66, 75, 82, 83, 84, 87, 89, 92, 102, 109, 110, 111, 115, 119, 124, 135, 142, 143, 144, 147, 151, 157, 168, 175, 176, 177, 180, 184, 190, 195, 200, 207, 208, 209, 213, 217, 222, 233, 240, 241, 242, 245, 249, 255, 266, 273, 274, 275, 278, 282, 288, 299, 306, 307, 308, 311, 315, 321, 332, 339, 340, 341, 344, 348, 355, 366, 373, 374, 375, 378, 382, 388, 399, 406, 407, 408, 411, 415, 421, 432, 439, 440, 441, 444, 448, 453, 477, 478, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 541, 542, 555, 655, 705, 740, 834, 835, 850, 851, 856, 857, 860, 861, 870, 871, 872, 873, 876, 882, 887, 889, 890, 895, 896, 899, 900, 909, 910, 911, 912, 915, 921, 927, 928, 933, 934, 937, 938, 947, 948, 949, 950, 953, 959, 965, 966, 971, 972, 975, 976, 985, 986, 987, 988, 991, 997, 1003, 1004, 1009, 1010, 1013, 1014, 1025, 1026, 1027, 1028, 1031, 1037, 1044, 1045, 1050, 1051, 1054, 1055, 1064, 1065, 1066, 1067, 1070, 1076, 1083, 1084, 1089, 1090, 1093, 1094, 1103, 1104, 1105, 1106, 1109, 1115, 1121, 1122, 1127, 1128, 1131, 1132, 1141, 1142, 1143, 1144, 1147, 1153, 1159, 1160, 1165, 1166, 1169, 1170, 1179, 1180, 1181, 1182, 1185, 1191, 1198, 1199, 1202, 1209, 1210, 1211, 1214, 1220, 1227, 1228, 1232, 1241, 1242, 1243, 1246, 1253, 1261, 1262, 1266, 1275, 1276, 1277, 1280, 1287, 1295, 1296, 1300, 1309, 1310, 1311, 1314, 1321, 1328, 1329, 1332, 1339, 1340, 1341, 1344, 1350, 1357, 1358, 1362, 1371, 1372, 1373, 1376, 1383, 1389, 1390, 1393, 1400, 1401, 1402, 1405, 1411, 1417, 1418, 1421, 1428, 1429, 1430, 1433, 1439, 1445, 1446, 1449, 1456, 1457, 1458, 1461, 1467, 1474, 1475, 1479, 1488, 1489, 1490, 1493, 1500, 1507, 1508, 1511, 1518, 1519, 1520, 1523, 1529, 1536, 1537, 1541, 1550, 1551, 1552, 1555, 1562, 1569, 1570, 1573, 1580, 1581, 1582, 1585, 1591, 1623, 1627, 1628, 1630, 1687, 1760, 1783, 1788, 1804, 1805], "complex": [4, 25, 28, 29, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 493, 509, 876, 915, 953, 991, 1031, 1070, 1109, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585], "task": [4, 26], "permeabilti": 5, "note": [5, 6, 7, 8, 9, 11, 12, 13, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 50, 51, 52, 55, 59, 61, 63, 67, 82, 83, 84, 87, 89, 93, 98, 109, 110, 111, 115, 119, 125, 129, 142, 143, 144, 147, 151, 154, 158, 175, 176, 177, 180, 184, 187, 191, 195, 196, 207, 208, 209, 213, 217, 223, 240, 241, 242, 245, 249, 252, 256, 260, 273, 274, 275, 278, 282, 285, 289, 306, 307, 308, 311, 315, 318, 322, 339, 340, 341, 344, 348, 350, 352, 356, 373, 374, 375, 378, 382, 385, 389, 393, 406, 407, 408, 411, 415, 418, 422, 439, 440, 441, 444, 448, 454, 472, 477, 478, 488, 489, 490, 493, 495, 500, 506, 507, 508, 509, 529, 541, 542, 543, 553, 554, 555, 557, 558, 564, 565, 571, 573, 596, 601, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 644, 647, 652, 655, 657, 659, 705, 712, 714, 715, 716, 717, 718, 719, 723, 735, 740, 758, 762, 765, 772, 781, 783, 785, 789, 796, 798, 800, 807, 810, 812, 813, 820, 821, 828, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 848, 850, 851, 854, 855, 858, 860, 861, 864, 866, 870, 871, 872, 873, 876, 878, 883, 887, 889, 890, 893, 894, 897, 899, 900, 903, 905, 909, 910, 911, 912, 915, 917, 922, 926, 927, 928, 931, 932, 935, 937, 938, 941, 943, 947, 948, 949, 950, 953, 955, 960, 964, 965, 966, 969, 970, 973, 975, 976, 979, 981, 985, 986, 987, 988, 991, 993, 998, 1002, 1003, 1004, 1007, 1008, 1011, 1013, 1014, 1015, 1016, 1019, 1021, 1025, 1026, 1027, 1028, 1031, 1033, 1038, 1044, 1045, 1048, 1049, 1052, 1054, 1055, 1058, 1060, 1064, 1065, 1066, 1067, 1070, 1072, 1077, 1081, 1083, 1084, 1087, 1088, 1091, 1093, 1094, 1097, 1099, 1103, 1104, 1105, 1106, 1109, 1111, 1116, 1121, 1122, 1125, 1126, 1129, 1131, 1132, 1135, 1137, 1141, 1142, 1143, 1144, 1147, 1149, 1154, 1158, 1159, 1160, 1163, 1164, 1167, 1169, 1170, 1173, 1175, 1179, 1180, 1181, 1182, 1185, 1187, 1192, 1198, 1199, 1209, 1210, 1211, 1214, 1216, 1221, 1226, 1227, 1228, 1241, 1242, 1243, 1246, 1248, 1249, 1254, 1258, 1260, 1261, 1262, 1275, 1276, 1277, 1280, 1282, 1283, 1288, 1292, 1294, 1295, 1296, 1309, 1310, 1311, 1314, 1316, 1317, 1322, 1326, 1328, 1329, 1339, 1340, 1341, 1344, 1346, 1351, 1356, 1357, 1358, 1371, 1372, 1373, 1376, 1378, 1379, 1384, 1389, 1390, 1400, 1401, 1402, 1405, 1407, 1412, 1417, 1418, 1428, 1429, 1430, 1433, 1435, 1440, 1445, 1446, 1456, 1457, 1458, 1461, 1463, 1468, 1473, 1474, 1475, 1488, 1489, 1490, 1493, 1495, 1496, 1501, 1505, 1507, 1508, 1518, 1519, 1520, 1523, 1525, 1530, 1535, 1536, 1537, 1550, 1551, 1552, 1555, 1557, 1558, 1563, 1567, 1569, 1570, 1580, 1581, 1582, 1585, 1587, 1592, 1603, 1604, 1614, 1616, 1618, 1620, 1623, 1624, 1627, 1628, 1629, 1630, 1631, 1639, 1647, 1648, 1651, 1652, 1653, 1658, 1665, 1676, 1739, 1774, 1783, 1788, 1789, 1794, 1798, 1799], "calcualt": [5, 758], "an": [5, 7, 8, 9, 12, 13, 15, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 47, 49, 59, 63, 67, 70, 71, 78, 79, 81, 89, 93, 96, 105, 106, 108, 118, 119, 120, 122, 125, 128, 129, 138, 139, 141, 151, 154, 158, 161, 171, 172, 174, 184, 187, 191, 194, 196, 203, 204, 206, 217, 218, 220, 223, 226, 236, 237, 239, 249, 252, 256, 259, 260, 269, 270, 272, 282, 285, 289, 292, 302, 303, 305, 315, 318, 322, 325, 335, 336, 338, 347, 348, 352, 356, 359, 369, 370, 372, 381, 382, 385, 389, 392, 402, 403, 405, 414, 415, 418, 422, 425, 426, 435, 436, 438, 448, 454, 457, 458, 459, 464, 465, 467, 472, 475, 484, 485, 487, 500, 503, 524, 525, 529, 539, 552, 553, 554, 556, 557, 564, 565, 566, 567, 568, 569, 570, 571, 646, 647, 651, 654, 668, 677, 702, 704, 709, 712, 720, 723, 728, 729, 737, 738, 744, 751, 758, 761, 762, 779, 780, 781, 782, 802, 805, 806, 812, 828, 831, 832, 854, 855, 858, 859, 860, 865, 867, 869, 871, 883, 886, 893, 894, 897, 898, 899, 904, 906, 908, 910, 922, 925, 926, 931, 932, 935, 936, 937, 942, 944, 946, 948, 960, 963, 964, 969, 970, 973, 974, 975, 980, 982, 984, 986, 998, 1001, 1002, 1007, 1008, 1011, 1012, 1013, 1020, 1022, 1024, 1026, 1038, 1041, 1048, 1049, 1052, 1053, 1054, 1059, 1061, 1063, 1065, 1077, 1080, 1087, 1088, 1091, 1092, 1093, 1098, 1100, 1102, 1104, 1116, 1119, 1120, 1125, 1126, 1129, 1130, 1131, 1136, 1138, 1140, 1142, 1154, 1157, 1158, 1163, 1164, 1167, 1168, 1169, 1174, 1176, 1178, 1180, 1192, 1195, 1197, 1205, 1206, 1208, 1221, 1224, 1226, 1229, 1236, 1237, 1238, 1240, 1254, 1257, 1260, 1263, 1270, 1271, 1272, 1274, 1288, 1291, 1294, 1297, 1304, 1305, 1306, 1308, 1322, 1325, 1335, 1336, 1338, 1351, 1354, 1355, 1356, 1359, 1366, 1367, 1368, 1370, 1384, 1387, 1388, 1396, 1397, 1399, 1412, 1415, 1424, 1425, 1427, 1440, 1443, 1452, 1453, 1455, 1468, 1471, 1472, 1473, 1476, 1483, 1484, 1485, 1487, 1501, 1504, 1514, 1515, 1517, 1530, 1533, 1534, 1535, 1538, 1545, 1546, 1547, 1549, 1563, 1566, 1568, 1576, 1577, 1579, 1592, 1595, 1604, 1613, 1614, 1619, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1634, 1635, 1640, 1645, 1652, 1654, 1655, 1658, 1663, 1667, 1669, 1676, 1682, 1685, 1698, 1712, 1724, 1737, 1757, 1762, 1768, 1769, 1778, 1785, 1792, 1793, 1804, 1805, 1806], "extract": [5, 8, 9, 12, 22, 25, 26, 28, 29, 33, 477, 541, 553, 554, 556, 557, 810, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1672, 1674, 1676, 1678, 1680, 1682, 1789], "from": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 21, 22, 25, 26, 27, 29, 30, 32, 33, 38, 44, 59, 60, 63, 69, 72, 76, 89, 90, 95, 99, 103, 119, 120, 121, 122, 127, 130, 136, 151, 152, 154, 160, 163, 169, 184, 185, 187, 193, 197, 201, 217, 218, 219, 220, 225, 228, 234, 249, 250, 252, 258, 261, 267, 282, 283, 285, 291, 294, 300, 315, 316, 318, 324, 327, 333, 348, 349, 352, 358, 361, 367, 382, 383, 385, 391, 394, 400, 415, 416, 418, 424, 427, 433, 448, 449, 456, 458, 460, 462, 474, 476, 479, 482, 497, 502, 510, 514, 516, 523, 525, 526, 531, 538, 553, 554, 557, 558, 565, 568, 569, 573, 649, 650, 651, 653, 655, 661, 662, 663, 665, 666, 700, 702, 703, 705, 712, 716, 717, 724, 727, 728, 733, 740, 756, 764, 769, 772, 776, 779, 782, 783, 798, 829, 832, 837, 849, 852, 862, 880, 885, 887, 888, 891, 901, 919, 924, 926, 929, 939, 957, 962, 967, 977, 995, 1000, 1005, 1015, 1016, 1017, 1035, 1040, 1043, 1046, 1056, 1074, 1079, 1082, 1085, 1095, 1113, 1118, 1123, 1133, 1151, 1156, 1158, 1161, 1171, 1189, 1194, 1200, 1203, 1218, 1223, 1230, 1233, 1235, 1249, 1251, 1256, 1264, 1267, 1269, 1283, 1285, 1290, 1298, 1301, 1303, 1317, 1319, 1324, 1330, 1333, 1348, 1353, 1360, 1363, 1365, 1379, 1381, 1386, 1391, 1394, 1409, 1414, 1416, 1419, 1422, 1437, 1442, 1447, 1450, 1465, 1470, 1472, 1477, 1480, 1482, 1496, 1498, 1503, 1509, 1512, 1527, 1532, 1534, 1539, 1542, 1544, 1558, 1560, 1565, 1571, 1574, 1589, 1594, 1604, 1613, 1617, 1619, 1620, 1628, 1639, 1648, 1656, 1657, 1658, 1659, 1662, 1665, 1667, 1669, 1672, 1674, 1676, 1678, 1680, 1682, 1688, 1690, 1697, 1700, 1702, 1711, 1713, 1714, 1716, 1723, 1725, 1727, 1730, 1745, 1748, 1758, 1761, 1762, 1769, 1774, 1775, 1776, 1779, 1783, 1784, 1791, 1794, 1795, 1800], "porespi": [5, 8, 9, 11, 556], "similar": [5, 7, 8, 9, 11, 12, 13, 22, 28, 30, 32, 669], "numpi": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 25, 27, 28, 29, 30, 31, 32, 33, 55, 58, 66, 87, 92, 115, 124, 147, 150, 157, 180, 183, 190, 213, 222, 245, 248, 255, 278, 281, 288, 311, 314, 321, 344, 347, 355, 378, 381, 388, 411, 414, 421, 444, 447, 453, 493, 499, 509, 511, 549, 643, 646, 647, 651, 652, 653, 654, 655, 659, 665, 671, 689, 694, 700, 702, 703, 704, 705, 708, 712, 715, 728, 729, 733, 737, 740, 746, 764, 785, 788, 789, 795, 796, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 832, 837, 845, 846, 858, 860, 876, 882, 897, 899, 915, 921, 935, 937, 953, 959, 973, 975, 991, 997, 1011, 1013, 1031, 1037, 1052, 1054, 1070, 1076, 1091, 1093, 1109, 1115, 1120, 1129, 1131, 1147, 1153, 1167, 1169, 1185, 1191, 1214, 1220, 1246, 1253, 1280, 1287, 1314, 1321, 1344, 1350, 1376, 1383, 1405, 1411, 1433, 1439, 1461, 1467, 1493, 1500, 1523, 1529, 1555, 1562, 1585, 1591, 1604, 1623, 1627, 1628, 1636, 1654, 1655, 1676, 1713, 1795, 1798, 1799, 1800, 1807], "np": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 51, 55, 59, 67, 68, 71, 83, 87, 89, 93, 94, 97, 98, 110, 115, 119, 125, 126, 129, 143, 147, 151, 158, 159, 162, 176, 180, 184, 191, 192, 195, 208, 213, 217, 223, 224, 227, 241, 245, 249, 256, 257, 260, 274, 278, 282, 289, 290, 293, 307, 311, 315, 322, 323, 326, 340, 344, 348, 356, 357, 360, 374, 378, 382, 389, 390, 393, 407, 411, 415, 422, 423, 426, 440, 444, 448, 454, 455, 459, 472, 473, 476, 477, 489, 493, 500, 501, 507, 509, 541, 647, 729, 744, 746, 802, 806, 837, 848, 850, 854, 855, 871, 872, 876, 883, 884, 887, 889, 893, 894, 910, 911, 915, 922, 923, 926, 927, 931, 932, 948, 949, 953, 960, 961, 964, 965, 969, 970, 986, 987, 991, 998, 999, 1002, 1003, 1007, 1008, 1026, 1027, 1031, 1038, 1039, 1042, 1044, 1048, 1049, 1065, 1066, 1070, 1077, 1078, 1081, 1083, 1087, 1088, 1104, 1105, 1109, 1116, 1117, 1120, 1121, 1125, 1126, 1142, 1143, 1147, 1154, 1155, 1158, 1159, 1163, 1164, 1180, 1181, 1185, 1192, 1193, 1197, 1198, 1210, 1214, 1221, 1222, 1225, 1226, 1227, 1242, 1246, 1254, 1255, 1259, 1260, 1261, 1276, 1280, 1288, 1289, 1293, 1294, 1295, 1310, 1314, 1322, 1323, 1327, 1328, 1340, 1344, 1351, 1352, 1355, 1356, 1357, 1372, 1376, 1384, 1385, 1388, 1389, 1401, 1405, 1412, 1413, 1416, 1417, 1429, 1433, 1440, 1441, 1444, 1445, 1457, 1461, 1468, 1469, 1472, 1473, 1474, 1489, 1493, 1501, 1502, 1506, 1507, 1519, 1523, 1530, 1531, 1534, 1535, 1536, 1551, 1555, 1563, 1564, 1568, 1569, 1581, 1585, 1592, 1593, 1603, 1622, 1626, 1636, 1800], "set_mpl_styl": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33], "seed": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 25, 26, 28, 29, 31, 32, 33, 577, 578, 579, 580, 581, 582, 583, 646, 647, 651, 653, 654, 655, 697, 698, 702, 703, 704, 705, 728, 733, 737, 740], "matplotlib": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 25, 27, 28, 29, 32, 33, 530, 651, 653, 655, 702, 703, 705, 728, 733, 740], "inlin": [5, 7, 8, 9, 11, 12, 13, 20, 33], "set_printopt": [5, 7, 8, 9, 10, 11, 12, 13, 20], "precis": [5, 7, 8, 9, 10, 11, 12, 13, 20], "15": [5, 6, 8, 9, 11, 12, 13, 20, 24, 25, 26, 27, 28, 29, 31, 32, 33], "6": [5, 6, 8, 9, 11, 12, 13, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 586, 589, 831, 834, 835, 836, 839, 860, 871, 887, 899, 910, 937, 948, 975, 986, 1013, 1026, 1054, 1065, 1093, 1104, 1131, 1142, 1169, 1180, 1630, 1649], "add_model_collect": [5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 28, 33], "collect": [5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 33, 478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "spheres_and_cylind": [5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 22, 28, 33], "regenerate_model": [5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 28, 30, 33, 458, 477, 541, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569], "assum": [5, 7, 8, 10, 11, 12, 13, 22, 24, 25, 27, 28, 29, 31, 32, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 649, 652, 657, 658, 659, 660, 661, 662, 663, 665, 666, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 700, 758, 783, 810, 812, 813, 834, 835, 837, 854, 887, 893, 926, 931, 969, 1007, 1016, 1048, 1087, 1125, 1163, 1612, 1617, 1640, 1645], "flowsthrough": 5, "porou": [5, 7, 8, 9, 10, 12, 13, 22, 25, 32, 34, 129, 1808], "medium": [5, 7, 9, 12, 13, 22, 831], "fluid": [5, 7, 8, 10, 12, 13, 19, 22, 31, 32, 98, 120, 122, 195, 218, 220, 810, 832], "ani": [5, 6, 8, 9, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 33, 35, 43, 50, 51, 52, 55, 59, 66, 75, 82, 83, 84, 87, 89, 92, 102, 109, 110, 111, 115, 119, 120, 122, 124, 135, 142, 143, 144, 147, 151, 157, 168, 175, 176, 177, 180, 184, 190, 200, 207, 208, 209, 213, 217, 218, 220, 222, 233, 240, 241, 242, 245, 249, 255, 266, 273, 274, 275, 278, 282, 288, 299, 306, 307, 308, 311, 315, 321, 332, 339, 340, 341, 344, 348, 355, 366, 373, 374, 375, 378, 382, 388, 399, 406, 407, 408, 411, 415, 421, 432, 439, 440, 441, 444, 448, 453, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 554, 564, 565, 568, 573, 652, 729, 751, 752, 753, 754, 756, 758, 831, 856, 857, 860, 861, 870, 871, 872, 873, 876, 882, 887, 895, 896, 899, 900, 909, 910, 911, 912, 915, 921, 933, 934, 937, 938, 947, 948, 949, 950, 953, 959, 964, 971, 972, 975, 976, 985, 986, 987, 988, 991, 997, 1009, 1010, 1013, 1014, 1025, 1026, 1027, 1028, 1031, 1037, 1050, 1051, 1054, 1055, 1064, 1065, 1066, 1067, 1070, 1076, 1089, 1090, 1093, 1094, 1103, 1104, 1105, 1106, 1109, 1115, 1127, 1128, 1131, 1132, 1141, 1142, 1143, 1144, 1147, 1153, 1165, 1166, 1169, 1170, 1179, 1180, 1181, 1182, 1185, 1191, 1202, 1209, 1210, 1211, 1214, 1220, 1232, 1241, 1242, 1243, 1246, 1253, 1266, 1275, 1276, 1277, 1280, 1287, 1300, 1309, 1310, 1311, 1314, 1321, 1332, 1339, 1340, 1341, 1344, 1350, 1362, 1371, 1372, 1373, 1376, 1383, 1388, 1393, 1400, 1401, 1402, 1405, 1411, 1421, 1428, 1429, 1430, 1433, 1439, 1449, 1456, 1457, 1458, 1461, 1467, 1479, 1488, 1489, 1490, 1493, 1500, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1614, 1618, 1623, 1626, 1627, 1628, 1630, 1646, 1647, 1651, 1658, 1737, 1776, 1783, 1798, 1799, 1804, 1805], "other": [5, 6, 7, 8, 11, 12, 13, 17, 22, 24, 26, 28, 30, 31, 32, 33, 59, 61, 89, 119, 120, 122, 151, 184, 217, 218, 220, 249, 282, 315, 348, 350, 382, 415, 448, 458, 477, 541, 549, 550, 564, 565, 570, 572, 573, 646, 650, 651, 653, 654, 655, 698, 701, 702, 703, 704, 705, 720, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 746, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 849, 850, 859, 864, 866, 888, 889, 898, 903, 905, 926, 927, 936, 941, 943, 965, 974, 979, 981, 1002, 1003, 1012, 1019, 1021, 1043, 1044, 1053, 1058, 1060, 1081, 1082, 1083, 1092, 1097, 1099, 1121, 1130, 1135, 1137, 1159, 1168, 1173, 1175, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1615, 1619, 1638, 1646, 1651, 1653, 1676, 1737, 1760, 1773, 1794], "To": [5, 6, 7, 8, 9, 10, 12, 13, 20, 22, 24, 27, 28, 30, 31, 32, 33, 35, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 493, 509, 564, 864, 866, 876, 903, 905, 915, 941, 943, 953, 979, 981, 991, 1002, 1019, 1021, 1031, 1058, 1060, 1070, 1097, 1099, 1109, 1135, 1137, 1147, 1173, 1175, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585, 1631, 1653, 1680, 1682], "hydraul": [5, 13, 31, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 810, 818, 823, 824, 825], "conduit": [5, 7, 12, 13, 19, 31, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 810, 815, 816, 817, 818, 820, 821, 823, 824, 825, 831, 845, 846], "must": [5, 7, 8, 12, 13, 19, 22, 24, 27, 28, 29, 30, 32, 62, 64, 67, 93, 125, 153, 155, 158, 186, 188, 191, 196, 220, 223, 251, 253, 256, 284, 286, 289, 317, 319, 322, 351, 353, 356, 384, 386, 389, 393, 417, 419, 422, 450, 451, 454, 472, 500, 557, 569, 572, 735, 758, 765, 789, 796, 800, 807, 834, 835, 837, 849, 858, 883, 897, 922, 935, 960, 973, 998, 1011, 1038, 1052, 1077, 1082, 1091, 1116, 1129, 1154, 1167, 1192, 1221, 1254, 1288, 1322, 1351, 1384, 1388, 1412, 1416, 1440, 1468, 1501, 1530, 1563, 1592, 1603, 1612, 1620, 1624, 1639, 1650, 1651, 1658, 1665, 1676, 1769, 1795], "here": [5, 6, 7, 8, 12, 13, 17, 24, 25, 26, 27, 28, 29, 30, 33, 555, 712, 785, 834, 835, 871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180, 1604, 1672, 1674], "basic": [5, 8, 9, 10, 12, 13, 17, 24, 25, 26, 27, 30, 33, 347, 381, 414, 647, 780, 805, 813, 1237, 1271, 1305, 1367, 1484, 1546, 1793], "includ": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 50, 51, 52, 55, 59, 75, 82, 83, 84, 87, 89, 102, 109, 110, 111, 115, 119, 120, 122, 135, 142, 143, 144, 147, 151, 168, 175, 176, 177, 180, 184, 200, 207, 208, 209, 213, 217, 218, 220, 233, 240, 241, 242, 245, 249, 266, 273, 274, 275, 278, 282, 299, 306, 307, 308, 311, 315, 332, 339, 340, 341, 344, 348, 366, 373, 374, 375, 378, 382, 399, 406, 407, 408, 411, 415, 432, 439, 440, 441, 444, 448, 481, 488, 489, 490, 493, 505, 506, 507, 508, 509, 569, 573, 758, 808, 856, 859, 860, 870, 872, 873, 876, 895, 898, 899, 909, 911, 912, 915, 933, 936, 937, 947, 949, 950, 953, 971, 974, 975, 985, 987, 988, 991, 1009, 1012, 1013, 1025, 1027, 1028, 1031, 1050, 1053, 1054, 1064, 1066, 1067, 1070, 1089, 1092, 1093, 1103, 1105, 1106, 1109, 1127, 1130, 1131, 1141, 1143, 1144, 1147, 1165, 1168, 1169, 1179, 1181, 1182, 1185, 1202, 1209, 1210, 1211, 1214, 1232, 1241, 1242, 1243, 1246, 1266, 1275, 1276, 1277, 1280, 1300, 1309, 1310, 1311, 1314, 1332, 1339, 1340, 1341, 1344, 1362, 1371, 1372, 1373, 1376, 1393, 1400, 1401, 1402, 1405, 1421, 1428, 1429, 1430, 1433, 1449, 1456, 1457, 1458, 1461, 1479, 1488, 1489, 1490, 1493, 1511, 1518, 1519, 1520, 1523, 1541, 1550, 1551, 1552, 1555, 1573, 1580, 1581, 1582, 1585, 1629, 1783, 1788, 1804, 1805], "generic_hydraul": [5, 31, 592, 593], "1": [5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 98, 196, 553, 554, 572, 586, 589, 596, 597, 599, 602, 606, 612, 621, 622, 627, 636, 637, 646, 647, 654, 655, 669, 698, 704, 705, 724, 734, 736, 737, 740, 758, 765, 768, 780, 781, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 812, 820, 821, 825, 828, 829, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 849, 854, 855, 857, 858, 859, 860, 861, 864, 871, 887, 888, 893, 894, 896, 897, 898, 899, 900, 903, 910, 926, 931, 932, 934, 935, 936, 937, 938, 941, 948, 969, 970, 972, 973, 974, 975, 976, 979, 986, 1002, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1019, 1026, 1043, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1058, 1065, 1082, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1097, 1104, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1142, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1173, 1180, 1237, 1271, 1305, 1367, 1484, 1546, 1612, 1613, 1614, 1616, 1617, 1618, 1622, 1629, 1636, 1639, 1647, 1651, 1652, 1654, 1655, 1656, 1658, 1659, 1676, 1680, 1682, 1713, 1725, 1733, 1751, 1800], "18": [5, 6, 7, 8, 9, 10, 13, 22, 25, 26, 28, 29, 31, 32, 33, 34, 768, 887], "20": [5, 7, 9, 10, 25, 26, 28, 29, 32, 834, 835, 887], "01": [5, 11, 28, 30], "warn": [5, 6, 7, 9, 10, 11, 13, 33, 572, 1663, 1685, 1800], "entry_pressur": [5, 8, 32, 33, 592, 593], "wa": [5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 67, 68, 93, 94, 125, 126, 158, 159, 191, 192, 223, 224, 256, 257, 289, 290, 322, 323, 356, 357, 389, 390, 422, 423, 454, 455, 458, 472, 473, 477, 500, 501, 541, 553, 570, 718, 850, 883, 884, 889, 922, 923, 927, 960, 961, 965, 998, 999, 1003, 1038, 1039, 1044, 1077, 1078, 1083, 1116, 1117, 1121, 1154, 1155, 1159, 1192, 1193, 1198, 1221, 1222, 1227, 1254, 1255, 1261, 1288, 1289, 1295, 1322, 1323, 1328, 1351, 1352, 1357, 1384, 1385, 1389, 1412, 1413, 1417, 1440, 1441, 1445, 1468, 1469, 1474, 1501, 1502, 1507, 1530, 1531, 1536, 1563, 1564, 1569, 1592, 1593, 1629], "sinc": [5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 98, 495, 543, 554, 565, 762, 849, 860, 878, 887, 888, 899, 917, 937, 955, 975, 993, 1013, 1033, 1043, 1054, 1072, 1082, 1093, 1111, 1131, 1149, 1169, 1187, 1216, 1225, 1248, 1282, 1316, 1346, 1378, 1407, 1435, 1463, 1495, 1525, 1557, 1587, 1623, 1627, 1628, 1650, 1651, 1664, 1666, 1668, 1670, 1673, 1675, 1677, 1679, 1681, 1683, 1684, 1686, 1737], "miss": [5, 7, 10, 13, 27, 33, 828, 1650], "_model": [5, 7, 10, 13, 33], "py": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 564, 1603], "480": [5, 7, 10, 13, 33], "surface_tens": [5, 12, 13, 30, 32, 33, 589, 590, 787, 812, 813, 827, 828, 829], "diffusive_conduct": [5, 8, 10, 12, 13, 19, 21, 592, 593, 810], "x": [5, 6, 7, 9, 11, 12, 13, 19, 21, 22, 25, 26, 30, 37, 58, 129, 150, 162, 183, 227, 248, 260, 281, 293, 314, 326, 360, 393, 426, 447, 554, 647, 732, 827, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 964, 1002, 1120, 1158, 1293, 1612, 1614, 1617, 1618, 1629, 1630, 1631, 1639, 1640, 1649, 1650, 1651, 1652, 1797, 1800], "direct": [5, 8, 9, 11, 12, 13, 15, 19, 26, 29, 32, 57, 149, 182, 247, 280, 313, 346, 380, 413, 446, 458, 647, 712, 848, 860, 864, 887, 899, 903, 926, 937, 941, 975, 979, 1013, 1019, 1054, 1058, 1081, 1093, 1097, 1131, 1135, 1169, 1173, 1599, 1604, 1612, 1634, 1635, 1651], "constant": [5, 9, 21, 26, 49, 62, 64, 81, 108, 141, 153, 155, 174, 186, 188, 206, 239, 251, 253, 272, 284, 286, 305, 317, 319, 338, 351, 353, 372, 384, 386, 405, 417, 419, 438, 450, 451, 467, 477, 487, 541, 589, 590, 758, 785, 810, 834, 835, 850, 869, 889, 908, 927, 946, 965, 984, 1003, 1024, 1044, 1063, 1083, 1102, 1121, 1140, 1159, 1178, 1198, 1208, 1227, 1240, 1261, 1274, 1295, 1308, 1328, 1338, 1357, 1370, 1389, 1399, 1416, 1417, 1427, 1445, 1455, 1474, 1487, 1507, 1517, 1536, 1549, 1569, 1579], "pressur": [5, 7, 10, 12, 13, 19, 21, 22, 30, 31, 32, 98, 112, 118, 195, 210, 668, 669, 758, 761, 765, 767, 768, 788, 789, 792, 794, 796, 798, 799, 800, 803, 804, 806, 807, 810, 812, 813, 818, 827, 828, 829, 832], "side": [5, 9, 10, 11, 19, 22, 29, 31, 32, 37, 129, 162, 227, 260, 293, 326, 360, 393, 426, 1604], "procedur": [5, 8, 9, 12, 13, 196], "y": [5, 9, 12, 13, 21, 25, 26, 30, 196, 549, 554, 732, 827, 837, 964, 1002, 1120, 1158, 1259, 1631, 1639, 1649, 1650, 1651], "z": [5, 9, 12, 13, 25, 30, 554, 780, 805, 964, 1002, 1120, 1158, 1237, 1271, 1305, 1367, 1484, 1546, 1612, 1621, 1631, 1639, 1648, 1649, 1650, 1651, 1654], "inlet": [5, 7, 8, 9, 11, 12, 13, 32, 33, 218, 1613, 1626, 1632, 1633, 1637, 1640, 1658], "outlet": [5, 7, 8, 9, 11, 12, 13, 32, 33, 98, 122, 196, 220, 1613, 1632, 1633, 1637, 1640], "updat": [5, 6, 7, 12, 13, 21, 27, 28, 33, 35, 60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 383, 416, 449, 497, 510, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589, 1619, 1764, 1771], "soln": [5, 7, 31, 33, 58, 150, 183, 248, 281, 314, 447, 549, 834, 835], "solut": [5, 7, 21, 22, 32, 37, 58, 129, 150, 162, 183, 227, 248, 260, 281, 293, 314, 326, 347, 360, 381, 393, 414, 426, 447, 549, 769, 783, 834, 835, 1604], "dict": [5, 21, 26, 29, 30, 31, 54, 69, 71, 86, 95, 114, 127, 129, 146, 160, 179, 193, 212, 225, 244, 258, 260, 277, 291, 310, 324, 343, 358, 377, 391, 410, 424, 426, 443, 456, 458, 459, 469, 474, 478, 492, 502, 521, 523, 536, 538, 542, 552, 553, 554, 556, 561, 570, 651, 653, 655, 702, 703, 705, 724, 728, 733, 740, 744, 746, 751, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 777, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 806, 807, 827, 834, 835, 836, 838, 839, 840, 841, 842, 843, 848, 851, 875, 885, 887, 890, 914, 924, 928, 952, 962, 964, 966, 990, 1000, 1004, 1030, 1040, 1042, 1045, 1069, 1079, 1081, 1084, 1108, 1118, 1120, 1122, 1146, 1156, 1158, 1160, 1184, 1194, 1197, 1199, 1213, 1223, 1228, 1229, 1235, 1245, 1256, 1262, 1263, 1269, 1279, 1290, 1296, 1297, 1303, 1313, 1324, 1329, 1343, 1353, 1355, 1358, 1359, 1365, 1375, 1386, 1388, 1390, 1404, 1414, 1418, 1432, 1442, 1446, 1460, 1470, 1475, 1476, 1482, 1492, 1503, 1508, 1522, 1532, 1537, 1538, 1544, 1554, 1565, 1568, 1570, 1584, 1594, 1618, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1639, 1676, 1687, 1695, 1697, 1707, 1711, 1713, 1721, 1723, 1787, 1791, 1793, 1794, 1795, 1798, 1799, 1806, 1807], "quantiti": [5, 8, 19, 21, 31, 33, 61, 350, 834, 835, 836, 838, 839, 840, 841, 842, 843], "kei": [5, 6, 15, 19, 21, 24, 25, 27, 28, 29, 30, 31, 44, 45, 46, 50, 53, 54, 56, 65, 69, 76, 77, 78, 82, 85, 86, 88, 91, 95, 103, 104, 105, 109, 113, 114, 116, 123, 127, 136, 137, 138, 142, 145, 146, 148, 156, 160, 169, 170, 171, 175, 178, 179, 181, 189, 193, 201, 202, 203, 207, 211, 212, 214, 221, 225, 234, 235, 236, 240, 243, 244, 246, 254, 258, 267, 268, 269, 273, 276, 277, 279, 287, 291, 300, 301, 302, 306, 309, 310, 312, 320, 324, 333, 334, 335, 339, 342, 343, 345, 354, 358, 367, 368, 369, 373, 376, 377, 379, 387, 391, 400, 401, 402, 406, 409, 410, 412, 420, 424, 433, 434, 435, 439, 442, 443, 445, 452, 456, 462, 463, 464, 468, 469, 470, 471, 474, 482, 483, 484, 488, 491, 492, 494, 498, 502, 506, 516, 517, 520, 521, 522, 523, 525, 531, 532, 535, 536, 537, 538, 568, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653, 655, 657, 659, 662, 663, 664, 665, 666, 669, 673, 674, 675, 677, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 698, 700, 701, 702, 703, 705, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 724, 725, 726, 727, 728, 729, 730, 731, 733, 735, 738, 739, 740, 744, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 780, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 862, 863, 865, 870, 874, 875, 877, 881, 885, 887, 901, 902, 904, 909, 913, 914, 916, 920, 924, 939, 940, 942, 947, 951, 952, 954, 958, 962, 964, 977, 978, 980, 985, 989, 990, 992, 996, 1000, 1017, 1018, 1020, 1025, 1029, 1030, 1032, 1036, 1040, 1042, 1056, 1057, 1059, 1064, 1068, 1069, 1071, 1075, 1079, 1081, 1095, 1096, 1098, 1103, 1107, 1108, 1110, 1114, 1118, 1120, 1133, 1134, 1136, 1141, 1145, 1146, 1148, 1152, 1156, 1158, 1171, 1172, 1174, 1179, 1183, 1184, 1186, 1190, 1194, 1203, 1204, 1205, 1209, 1212, 1213, 1215, 1219, 1223, 1233, 1234, 1235, 1236, 1241, 1244, 1245, 1247, 1252, 1256, 1258, 1267, 1268, 1269, 1270, 1275, 1278, 1279, 1281, 1286, 1290, 1292, 1301, 1302, 1303, 1304, 1309, 1312, 1313, 1315, 1320, 1324, 1326, 1333, 1334, 1335, 1339, 1342, 1343, 1345, 1349, 1353, 1363, 1364, 1365, 1366, 1371, 1374, 1375, 1377, 1382, 1386, 1394, 1395, 1396, 1400, 1403, 1404, 1406, 1410, 1414, 1422, 1423, 1424, 1428, 1431, 1432, 1434, 1438, 1442, 1450, 1451, 1452, 1456, 1459, 1460, 1462, 1466, 1470, 1480, 1481, 1482, 1483, 1488, 1491, 1492, 1494, 1499, 1503, 1505, 1512, 1513, 1514, 1518, 1521, 1522, 1524, 1528, 1532, 1542, 1543, 1544, 1545, 1550, 1553, 1554, 1556, 1561, 1565, 1567, 1574, 1575, 1576, 1580, 1583, 1584, 1586, 1590, 1594, 1663, 1665, 1667, 1669, 1672, 1674, 1678, 1680, 1682, 1685, 1690, 1691, 1694, 1695, 1696, 1697, 1702, 1703, 1706, 1707, 1708, 1711, 1713, 1716, 1717, 1720, 1721, 1722, 1723, 1736, 1754, 1779, 1780, 1786, 1787, 1790, 1791, 1794, 1795, 1798, 1799, 1807], "e": [5, 8, 13, 17, 24, 26, 27, 28, 29, 30, 32, 35, 47, 56, 61, 69, 79, 88, 95, 106, 116, 127, 139, 148, 160, 172, 181, 193, 204, 214, 225, 237, 246, 258, 270, 279, 291, 303, 312, 324, 336, 345, 347, 350, 358, 370, 379, 381, 391, 403, 412, 414, 424, 436, 445, 456, 465, 470, 474, 477, 485, 494, 502, 523, 528, 529, 538, 541, 554, 568, 569, 596, 601, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 630, 633, 637, 638, 640, 644, 646, 651, 653, 654, 655, 702, 703, 704, 705, 728, 732, 733, 737, 740, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 849, 850, 867, 877, 885, 887, 888, 889, 906, 916, 924, 927, 944, 954, 962, 965, 982, 992, 1000, 1002, 1003, 1022, 1032, 1040, 1043, 1044, 1061, 1071, 1079, 1081, 1082, 1083, 1100, 1110, 1118, 1121, 1138, 1148, 1156, 1159, 1176, 1186, 1194, 1198, 1206, 1215, 1223, 1225, 1227, 1238, 1247, 1256, 1258, 1261, 1272, 1281, 1290, 1292, 1295, 1306, 1315, 1324, 1326, 1328, 1336, 1345, 1353, 1357, 1368, 1377, 1386, 1389, 1397, 1406, 1414, 1417, 1425, 1434, 1442, 1445, 1453, 1462, 1470, 1474, 1485, 1494, 1503, 1505, 1507, 1515, 1524, 1532, 1536, 1547, 1556, 1565, 1567, 1569, 1577, 1586, 1594, 1604, 1619, 1637, 1640, 1665, 1667, 1674, 1680, 1697, 1711, 1723, 1736, 1754, 1760, 1763, 1770, 1772, 1778, 1785, 1791, 1803], "ndarrai": [5, 26, 30, 46, 47, 58, 67, 68, 78, 79, 93, 94, 105, 106, 118, 120, 122, 125, 126, 138, 139, 150, 158, 159, 171, 172, 183, 191, 192, 203, 204, 218, 220, 223, 224, 236, 237, 248, 256, 257, 269, 270, 281, 289, 290, 302, 303, 314, 322, 323, 335, 336, 347, 356, 357, 369, 370, 381, 389, 390, 402, 403, 414, 422, 423, 435, 436, 447, 454, 455, 464, 465, 472, 473, 484, 485, 500, 501, 549, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 647, 649, 650, 652, 655, 657, 659, 662, 663, 664, 665, 666, 669, 671, 673, 674, 675, 677, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 698, 700, 701, 705, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 723, 726, 727, 729, 731, 732, 735, 736, 738, 740, 744, 746, 761, 762, 763, 764, 765, 767, 768, 769, 772, 774, 776, 782, 783, 785, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 802, 803, 804, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 832, 845, 846, 857, 858, 865, 867, 883, 884, 896, 897, 904, 906, 922, 923, 934, 935, 942, 944, 960, 961, 972, 973, 980, 982, 998, 999, 1010, 1011, 1020, 1022, 1038, 1039, 1051, 1052, 1059, 1061, 1077, 1078, 1090, 1091, 1098, 1100, 1116, 1117, 1128, 1129, 1136, 1138, 1154, 1155, 1166, 1167, 1174, 1176, 1192, 1193, 1205, 1206, 1221, 1222, 1226, 1236, 1237, 1238, 1254, 1255, 1258, 1260, 1270, 1271, 1272, 1288, 1289, 1292, 1294, 1304, 1305, 1306, 1322, 1323, 1326, 1335, 1336, 1351, 1352, 1356, 1366, 1367, 1368, 1384, 1385, 1396, 1397, 1412, 1413, 1424, 1425, 1440, 1441, 1452, 1453, 1468, 1469, 1473, 1483, 1484, 1485, 1501, 1502, 1505, 1514, 1515, 1530, 1531, 1535, 1545, 1546, 1547, 1563, 1564, 1567, 1576, 1577, 1592, 1593, 1604, 1614, 1616, 1617, 1619, 1622, 1624, 1625, 1626, 1628, 1629, 1634, 1635, 1636, 1639, 1648, 1649, 1650, 1651, 1652, 1658, 1801], "last": [5, 11, 24, 26, 54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 377, 410, 443, 469, 492, 521, 536, 854, 875, 893, 914, 931, 952, 969, 990, 1007, 1030, 1048, 1069, 1087, 1108, 1125, 1146, 1163, 1184, 1213, 1245, 1279, 1313, 1343, 1375, 1404, 1432, 1460, 1492, 1522, 1554, 1584, 1695, 1707, 1721, 1733, 1751, 1787], "cell": [5, 6, 11, 24, 28, 32, 33, 647, 848, 1081, 1158], "abov": [5, 6, 7, 11, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 722, 1630, 1649, 1674, 1783, 1788], "new": [5, 6, 8, 17, 19, 21, 24, 26, 27, 28, 29, 30, 32, 35, 44, 76, 103, 136, 169, 195, 201, 234, 267, 300, 333, 367, 400, 433, 462, 482, 516, 531, 647, 758, 785, 862, 901, 939, 977, 1017, 1056, 1095, 1133, 1171, 1203, 1233, 1267, 1301, 1333, 1363, 1394, 1422, 1450, 1480, 1512, 1542, 1574, 1613, 1615, 1616, 1620, 1647, 1649, 1651, 1653, 1667, 1669, 1680, 1682, 1690, 1702, 1716, 1739, 1760, 1763, 1770, 1772, 1778, 1779, 1785], "comput": [5, 15, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 477, 485, 495, 541, 543, 553, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 677, 758, 762, 763, 780, 781, 782, 787, 788, 802, 805, 806, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 832, 845, 846, 850, 867, 878, 889, 906, 917, 927, 944, 955, 965, 982, 993, 1003, 1022, 1033, 1044, 1061, 1072, 1083, 1100, 1111, 1121, 1138, 1149, 1159, 1176, 1187, 1198, 1206, 1216, 1225, 1227, 1238, 1248, 1261, 1272, 1282, 1295, 1306, 1316, 1328, 1336, 1346, 1357, 1368, 1378, 1389, 1397, 1407, 1417, 1425, 1435, 1445, 1453, 1463, 1472, 1474, 1485, 1495, 1507, 1515, 1525, 1534, 1536, 1547, 1557, 1569, 1577, 1587, 1603, 1636, 1658], "solv": [5, 8, 21, 22, 28, 31, 61, 350, 834, 835, 1603, 1605, 1607, 1609], "visul": 5, "ax": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 37, 129, 162, 227, 260, 293, 326, 360, 393, 426, 530, 1598, 1600, 1602, 1603, 1604, 1606, 1608, 1610, 1618], "plot_connect": [5, 6, 8, 25, 27, 32, 33], "plot_coordin": [5, 8, 9, 25, 27, 32, 33], "color_bi": [5, 8, 9, 25, 32, 33], "usr": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "share": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 857, 860, 861, 871, 896, 899, 900, 910, 934, 937, 938, 948, 972, 975, 976, 986, 1010, 1013, 1014, 1026, 1051, 1054, 1055, 1065, 1090, 1093, 1094, 1104, 1128, 1131, 1132, 1142, 1166, 1169, 1170, 1180, 1617, 1623, 1625, 1627, 1628], "miniconda3": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "env": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 35], "test": [5, 6, 7, 8, 9, 10, 12, 13, 14, 22, 24, 25, 26, 27, 28, 29, 32, 33, 723, 758, 1797], "lib": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "python3": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "8": [5, 6, 7, 8, 9, 10, 12, 13, 15, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 636, 765, 785, 796, 834, 835], "site": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 98, 860, 861, 899, 900, 937, 938, 975, 976, 1013, 1014, 1054, 1055, 1093, 1094, 1131, 1132, 1169, 1170, 1614, 1617, 1619, 1622, 1623, 1624, 1626, 1627, 1628, 1639, 1640, 1650, 1652, 1658], "packag": [5, 6, 7, 8, 9, 10, 12, 13, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 553, 556, 565, 758, 798, 1225, 1416, 1472, 1534, 1808], "ipython": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "core": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 1603], "pylabtool": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "151": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "userwarn": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "figur": [5, 6, 7, 8, 9, 10, 11, 12, 13, 22, 25, 26, 27, 28, 29, 32, 33], "compat": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 1613, 1804, 1805], "tight_layout": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "might": [5, 6, 7, 8, 9, 10, 12, 13, 15, 25, 26, 27, 28, 29, 30, 31, 32, 33, 549, 572, 717, 718, 723, 860, 861, 899, 900, 937, 938, 975, 976, 1013, 1014, 1054, 1055, 1093, 1094, 1131, 1132, 1169, 1170, 1623, 1627, 1628, 1630, 1653, 1774], "incorrect": [5, 6, 7, 8, 9, 10, 12, 13, 20, 25, 26, 27, 28, 29, 32, 33], "fig": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 653, 703, 733], "canva": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "print_figur": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "bytes_io": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "kw": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "k_": [5, 13], "ab": [5, 8, 9, 12, 13, 19, 621], "frac": [5, 7, 8, 9, 10, 12, 13, 19, 21, 22, 31, 621, 636, 785, 813, 825, 829, 834, 835], "delta": [5, 8, 19, 22, 31, 129, 621, 636], "where": [5, 7, 10, 12, 13, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 55, 59, 60, 61, 62, 63, 64, 66, 67, 68, 87, 89, 90, 92, 93, 94, 115, 119, 121, 124, 125, 126, 147, 151, 152, 153, 154, 155, 157, 158, 159, 180, 184, 185, 186, 187, 188, 190, 191, 192, 213, 217, 219, 222, 223, 224, 245, 249, 250, 251, 252, 253, 255, 256, 257, 278, 282, 283, 284, 285, 286, 288, 289, 290, 311, 315, 316, 317, 318, 319, 321, 322, 323, 344, 348, 349, 350, 351, 352, 353, 355, 356, 357, 378, 382, 383, 384, 385, 386, 388, 389, 390, 411, 415, 416, 417, 418, 419, 421, 422, 423, 444, 448, 449, 450, 451, 453, 454, 455, 458, 472, 473, 477, 493, 497, 499, 500, 501, 509, 510, 511, 541, 554, 558, 600, 602, 652, 735, 756, 820, 821, 825, 829, 834, 835, 849, 850, 859, 860, 861, 876, 880, 882, 883, 884, 888, 889, 898, 899, 900, 915, 919, 921, 922, 923, 927, 936, 937, 938, 953, 957, 959, 960, 961, 965, 974, 975, 976, 991, 995, 997, 998, 999, 1003, 1012, 1013, 1014, 1031, 1035, 1037, 1038, 1039, 1043, 1044, 1053, 1054, 1055, 1070, 1074, 1076, 1077, 1078, 1082, 1083, 1092, 1093, 1094, 1109, 1113, 1115, 1116, 1117, 1121, 1130, 1131, 1132, 1147, 1151, 1153, 1154, 1155, 1159, 1168, 1169, 1170, 1185, 1189, 1191, 1192, 1193, 1198, 1214, 1218, 1220, 1221, 1222, 1227, 1229, 1246, 1251, 1253, 1254, 1255, 1261, 1263, 1280, 1285, 1287, 1288, 1289, 1295, 1297, 1314, 1319, 1321, 1322, 1323, 1328, 1344, 1348, 1350, 1351, 1352, 1357, 1359, 1376, 1381, 1383, 1384, 1385, 1389, 1405, 1409, 1411, 1412, 1413, 1417, 1433, 1437, 1439, 1440, 1441, 1445, 1461, 1465, 1467, 1468, 1469, 1472, 1474, 1476, 1493, 1498, 1500, 1501, 1502, 1507, 1523, 1527, 1529, 1530, 1531, 1534, 1536, 1538, 1555, 1560, 1562, 1563, 1564, 1569, 1585, 1589, 1591, 1592, 1593, 1603, 1620, 1651, 1800], "area": [5, 9, 11, 22, 31, 553, 621, 636, 640, 641, 642, 643, 644, 647, 657, 658, 659, 660, 673, 674, 675, 700, 707, 708, 709, 710, 716, 810, 818, 825, 834, 835, 887, 1632, 1633], "distanc": [5, 11, 28, 647, 652, 718, 746, 747, 748, 749, 751, 755, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1612, 1613, 1647], "between": [5, 6, 7, 10, 11, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 458, 550, 565, 677, 711, 712, 717, 718, 725, 734, 747, 748, 755, 834, 835, 848, 887, 926, 1002, 1016, 1081, 1120, 1615, 1616, 1625, 1629, 1630, 1631, 1635, 1798, 1799], "differ": [5, 8, 11, 12, 19, 20, 22, 24, 25, 26, 28, 30, 31, 33, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 557, 568, 570, 581, 595, 646, 652, 654, 704, 737, 758, 810, 825, 834, 835, 1002, 1158, 1604, 1770, 1771], "were": [5, 6, 9, 11, 17, 20, 24, 25, 27, 28, 29, 30, 49, 81, 98, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 467, 487, 717, 751, 857, 859, 861, 869, 896, 898, 900, 908, 934, 936, 938, 946, 972, 974, 976, 984, 1010, 1012, 1014, 1024, 1051, 1053, 1055, 1063, 1090, 1092, 1094, 1102, 1128, 1130, 1132, 1140, 1166, 1168, 1170, 1178, 1208, 1240, 1274, 1308, 1338, 1370, 1399, 1427, 1455, 1487, 1517, 1549, 1579, 1615, 1619], "have": [5, 6, 8, 12, 13, 15, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 59, 63, 75, 89, 102, 119, 135, 151, 154, 168, 184, 187, 200, 217, 233, 249, 252, 266, 282, 285, 299, 315, 318, 332, 348, 352, 366, 382, 385, 399, 415, 418, 432, 448, 481, 505, 558, 595, 609, 624, 652, 678, 758, 849, 856, 857, 860, 861, 871, 888, 895, 896, 899, 900, 910, 933, 934, 937, 938, 948, 971, 972, 975, 976, 986, 1009, 1010, 1013, 1014, 1026, 1043, 1050, 1051, 1054, 1055, 1065, 1082, 1089, 1090, 1093, 1094, 1104, 1120, 1127, 1128, 1131, 1132, 1142, 1165, 1166, 1169, 1170, 1180, 1202, 1232, 1266, 1300, 1332, 1362, 1393, 1421, 1449, 1479, 1511, 1541, 1573, 1618, 1623, 1627, 1628, 1743, 1765], "simplifi": [5, 22], "equat": [5, 7, 10, 20, 21, 22, 31, 32, 767, 772, 798, 812, 813, 828, 829, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 1598, 1600, 1602, 1606, 1608, 1610], "nbval_ignore_output": [5, 9], "mode": [5, 6, 7, 9, 12, 13, 15, 27, 28, 30, 32, 35, 43, 47, 49, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 66, 75, 79, 81, 82, 83, 84, 87, 89, 90, 92, 102, 106, 108, 109, 110, 111, 115, 119, 120, 121, 122, 124, 135, 139, 141, 142, 143, 144, 147, 149, 151, 152, 153, 154, 155, 157, 168, 172, 174, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 200, 204, 206, 207, 208, 209, 213, 217, 218, 219, 220, 222, 233, 237, 239, 240, 241, 242, 245, 247, 249, 250, 251, 252, 253, 255, 266, 270, 272, 273, 274, 275, 278, 280, 282, 283, 284, 285, 286, 288, 299, 303, 305, 306, 307, 308, 311, 313, 315, 316, 317, 318, 319, 321, 332, 336, 338, 339, 340, 341, 344, 346, 348, 349, 350, 351, 352, 353, 355, 366, 370, 372, 373, 374, 375, 378, 380, 382, 383, 384, 385, 386, 388, 399, 403, 405, 406, 407, 408, 411, 413, 415, 416, 417, 418, 419, 421, 432, 436, 438, 439, 440, 441, 444, 446, 448, 449, 450, 451, 453, 465, 467, 481, 485, 487, 488, 489, 490, 493, 497, 499, 505, 506, 507, 508, 509, 510, 511, 577, 578, 579, 580, 581, 582, 583, 650, 697, 698, 701, 726, 727, 780, 805, 827, 828, 829, 831, 856, 857, 860, 861, 867, 869, 870, 871, 872, 873, 876, 880, 882, 895, 896, 899, 900, 906, 908, 909, 910, 911, 912, 915, 919, 921, 933, 934, 937, 938, 944, 946, 947, 948, 949, 950, 953, 957, 959, 971, 972, 975, 976, 982, 984, 985, 986, 987, 988, 991, 995, 997, 1009, 1010, 1013, 1014, 1022, 1024, 1025, 1026, 1027, 1028, 1031, 1035, 1037, 1050, 1051, 1054, 1055, 1061, 1063, 1064, 1065, 1066, 1067, 1070, 1074, 1076, 1089, 1090, 1093, 1094, 1100, 1102, 1103, 1104, 1105, 1106, 1109, 1113, 1115, 1127, 1128, 1131, 1132, 1138, 1140, 1141, 1142, 1143, 1144, 1147, 1151, 1153, 1165, 1166, 1169, 1170, 1176, 1178, 1179, 1180, 1181, 1182, 1185, 1189, 1191, 1202, 1206, 1208, 1209, 1210, 1211, 1214, 1218, 1220, 1232, 1237, 1238, 1240, 1241, 1242, 1243, 1246, 1251, 1253, 1266, 1271, 1272, 1274, 1275, 1276, 1277, 1280, 1285, 1287, 1300, 1305, 1306, 1308, 1309, 1310, 1311, 1314, 1319, 1321, 1332, 1336, 1338, 1339, 1340, 1341, 1344, 1348, 1350, 1362, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1381, 1383, 1393, 1397, 1399, 1400, 1401, 1402, 1405, 1409, 1411, 1421, 1425, 1427, 1428, 1429, 1430, 1433, 1437, 1439, 1449, 1453, 1455, 1456, 1457, 1458, 1461, 1465, 1467, 1479, 1484, 1485, 1487, 1488, 1489, 1490, 1493, 1498, 1500, 1511, 1515, 1517, 1518, 1519, 1520, 1523, 1527, 1529, 1541, 1546, 1547, 1549, 1550, 1551, 1552, 1555, 1560, 1562, 1573, 1577, 1579, 1580, 1581, 1582, 1585, 1589, 1591, 1615, 1653], "group": [5, 9, 12, 13, 21, 35, 57, 149, 182, 247, 280, 313, 346, 380, 413, 446, 553, 557, 1616], "topotool": [5, 9, 11, 25, 27, 887, 1648], "get_domain_area": [5, 9, 11], "get_domain_length": [5, 9, 11], "delta_p": 5, "print": [5, 6, 7, 8, 9, 11, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 512, 565, 566, 857, 858, 859, 860, 861, 871, 896, 897, 898, 899, 900, 910, 934, 935, 936, 937, 938, 948, 972, 973, 974, 975, 976, 986, 1010, 1011, 1012, 1013, 1014, 1026, 1051, 1052, 1053, 1054, 1055, 1065, 1090, 1091, 1092, 1093, 1094, 1104, 1120, 1128, 1129, 1130, 1131, 1132, 1142, 1166, 1167, 1168, 1169, 1170, 1180, 1472, 1534, 1680, 1682, 1713, 1725, 1737, 1798, 1799], "f": [5, 6, 8, 9, 11, 20, 21, 28, 30, 32, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 456, 474, 502, 523, 538, 566, 569, 758, 834, 835, 885, 924, 962, 1000, 1040, 1079, 1118, 1156, 1194, 1223, 1256, 1290, 1324, 1353, 1386, 1414, 1442, 1470, 1503, 1532, 1565, 1594, 1697, 1711, 1723, 1791], "98e": 5, "12": [5, 6, 8, 21, 25, 26, 27, 28, 29, 31, 32, 589], "1000": [5, 20, 651, 702, 728, 827, 828, 829], "2f": [5, 9, 11], "md": 5, "03": [5, 30], "attempt": [5, 8, 9, 11, 26, 30, 31, 63, 154, 187, 252, 285, 318, 352, 385, 418, 1416], "estim": [5, 9, 10, 11, 20, 30, 768, 769], "low": [5, 9, 11, 28, 646, 654, 704, 737, 785, 1229, 1263, 1297, 1359, 1476, 1538], "_topotool": [5, 9, 11], "1030": [5, 9], "length": [5, 6, 7, 8, 9, 11, 19, 22, 24, 25, 27, 31, 55, 59, 66, 67, 68, 87, 89, 92, 93, 94, 115, 119, 124, 125, 126, 147, 151, 157, 158, 159, 180, 184, 190, 191, 192, 213, 217, 222, 223, 224, 245, 249, 255, 256, 257, 278, 282, 288, 289, 290, 311, 315, 321, 322, 323, 344, 348, 355, 356, 357, 378, 382, 388, 389, 390, 411, 415, 421, 422, 423, 444, 448, 453, 454, 455, 472, 473, 477, 493, 499, 500, 501, 509, 511, 541, 553, 554, 570, 577, 578, 579, 580, 581, 582, 583, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 621, 636, 646, 649, 650, 651, 653, 654, 655, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 698, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 746, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 827, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 850, 858, 871, 876, 882, 883, 884, 887, 889, 897, 910, 915, 921, 922, 923, 927, 935, 948, 953, 959, 960, 961, 965, 973, 986, 991, 997, 998, 999, 1003, 1011, 1026, 1031, 1037, 1038, 1039, 1044, 1052, 1065, 1070, 1076, 1077, 1078, 1083, 1091, 1104, 1109, 1115, 1116, 1117, 1121, 1129, 1142, 1147, 1153, 1154, 1155, 1159, 1167, 1180, 1185, 1191, 1192, 1193, 1198, 1214, 1220, 1221, 1222, 1227, 1246, 1253, 1254, 1255, 1261, 1280, 1287, 1288, 1289, 1295, 1314, 1321, 1322, 1323, 1328, 1344, 1350, 1351, 1352, 1357, 1376, 1383, 1384, 1385, 1389, 1405, 1411, 1412, 1413, 1417, 1433, 1439, 1440, 1441, 1445, 1461, 1467, 1468, 1469, 1474, 1493, 1500, 1501, 1502, 1507, 1523, 1529, 1530, 1531, 1536, 1555, 1562, 1563, 1564, 1569, 1585, 1591, 1592, 1593, 1624, 1626, 1633, 1640, 1653], "could": [5, 8, 9, 11, 19, 21, 26, 28, 30, 32, 717, 718, 1015, 1016], "1074": [5, 9], "ad": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 21, 24, 25, 26, 29, 32, 35, 60, 90, 121, 152, 185, 195, 219, 250, 260, 283, 316, 347, 349, 381, 383, 414, 416, 449, 458, 476, 477, 497, 510, 540, 541, 549, 594, 651, 664, 702, 718, 728, 849, 850, 880, 888, 889, 919, 927, 957, 965, 995, 1003, 1035, 1042, 1043, 1044, 1074, 1082, 1083, 1113, 1121, 1151, 1159, 1189, 1198, 1218, 1227, 1251, 1261, 1285, 1295, 1319, 1328, 1348, 1357, 1381, 1389, 1409, 1417, 1437, 1445, 1465, 1474, 1498, 1507, 1527, 1536, 1560, 1569, 1589, 1613, 1615, 1616, 1620, 1630, 1646, 1783, 1793], "07": [5, 8, 13], "method": [5, 6, 8, 10, 11, 21, 22, 25, 26, 28, 30, 32, 33, 37, 58, 59, 69, 71, 89, 95, 97, 119, 127, 129, 150, 151, 160, 162, 183, 184, 193, 195, 196, 217, 225, 227, 248, 249, 258, 260, 281, 282, 291, 293, 314, 315, 324, 326, 348, 358, 360, 382, 391, 393, 415, 424, 426, 447, 448, 456, 458, 459, 474, 476, 502, 504, 523, 525, 538, 540, 548, 564, 573, 651, 653, 655, 702, 703, 705, 716, 728, 733, 740, 762, 763, 785, 792, 794, 831, 848, 854, 855, 864, 866, 871, 885, 887, 893, 894, 903, 905, 910, 924, 926, 931, 932, 941, 943, 948, 962, 964, 969, 970, 979, 981, 986, 1000, 1002, 1007, 1008, 1016, 1019, 1021, 1026, 1040, 1042, 1048, 1049, 1058, 1060, 1065, 1079, 1081, 1087, 1088, 1097, 1099, 1104, 1118, 1120, 1125, 1126, 1135, 1137, 1142, 1156, 1158, 1163, 1164, 1173, 1175, 1180, 1194, 1197, 1223, 1225, 1226, 1249, 1256, 1258, 1259, 1260, 1283, 1290, 1292, 1293, 1294, 1317, 1324, 1326, 1327, 1353, 1355, 1356, 1379, 1386, 1388, 1414, 1416, 1442, 1444, 1470, 1472, 1473, 1496, 1503, 1505, 1506, 1532, 1534, 1535, 1558, 1565, 1567, 1568, 1594, 1597, 1599, 1601, 1603, 1604, 1605, 1607, 1609, 1612, 1616, 1622, 1630, 1641, 1647, 1648, 1653, 1654, 1655, 1661, 1664, 1666, 1667, 1669, 1671, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1684, 1686, 1687, 1697, 1699, 1711, 1723, 1756, 1774, 1791, 1794, 1798, 1799, 1804], "base": [5, 6, 7, 12, 20, 22, 25, 28, 30, 32, 33, 35, 554, 565, 650, 698, 701, 722, 723, 725, 726, 727, 729, 730, 731, 734, 735, 736, 738, 739, 776, 800, 831, 832, 834, 835, 964, 1002, 1158, 1597, 1599, 1601, 1604, 1631, 1658, 1665, 1669, 1671, 1672, 1674, 1676, 1678, 1680, 1682, 1793, 1794, 1804, 1805], "scipi": [5, 7, 19, 26, 27, 32, 35, 651, 653, 655, 702, 703, 705, 728, 733, 740, 854, 893, 931, 969, 1007, 1048, 1087, 1125, 1163, 1607, 1609, 1614, 1617, 1619, 1624, 1629, 1652, 1656, 1659], "convexhul": 5, "approxim": [5, 11, 13, 22, 30, 619, 634], "both": [5, 10, 12, 15, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 50, 56, 82, 88, 109, 116, 142, 148, 175, 181, 207, 214, 240, 246, 273, 279, 306, 312, 339, 345, 373, 379, 406, 412, 439, 445, 470, 488, 494, 506, 754, 758, 768, 831, 834, 835, 870, 877, 909, 916, 947, 954, 985, 992, 1025, 1032, 1064, 1071, 1103, 1110, 1141, 1148, 1179, 1186, 1209, 1215, 1241, 1247, 1275, 1281, 1309, 1315, 1339, 1345, 1371, 1377, 1400, 1406, 1428, 1434, 1456, 1462, 1488, 1494, 1518, 1524, 1550, 1556, 1580, 1586, 1617, 1623, 1627, 1628, 1640, 1652, 1658, 1763], "without": [5, 28, 29, 30, 31, 32, 652, 1120, 1646, 1647, 1667, 1669], "necessarili": [5, 15], "locat": [5, 6, 8, 11, 19, 21, 24, 25, 26, 27, 28, 30, 31, 32, 43, 50, 51, 52, 55, 59, 60, 62, 63, 64, 66, 68, 75, 82, 83, 84, 87, 89, 90, 92, 94, 102, 109, 110, 111, 115, 119, 120, 121, 122, 124, 126, 135, 142, 143, 144, 147, 151, 152, 153, 154, 155, 157, 159, 168, 175, 176, 177, 180, 184, 185, 186, 187, 188, 190, 192, 200, 207, 208, 209, 213, 217, 218, 219, 220, 222, 224, 233, 240, 241, 242, 245, 249, 250, 251, 252, 253, 255, 257, 266, 273, 274, 275, 278, 282, 283, 284, 285, 286, 288, 290, 299, 306, 307, 308, 311, 315, 316, 317, 318, 319, 321, 323, 332, 339, 340, 341, 344, 348, 349, 351, 352, 353, 355, 357, 366, 373, 374, 375, 378, 382, 383, 384, 385, 386, 388, 390, 399, 406, 407, 408, 411, 415, 416, 417, 418, 419, 421, 423, 432, 439, 440, 441, 444, 448, 449, 450, 451, 453, 455, 458, 473, 477, 478, 481, 488, 489, 490, 493, 496, 497, 499, 501, 505, 506, 507, 508, 509, 510, 511, 541, 542, 544, 553, 557, 652, 717, 718, 768, 848, 850, 851, 854, 855, 856, 857, 864, 866, 870, 872, 873, 876, 879, 880, 882, 884, 889, 890, 893, 894, 895, 896, 903, 905, 909, 911, 912, 915, 918, 919, 921, 923, 926, 927, 928, 931, 932, 933, 934, 941, 943, 947, 949, 950, 953, 956, 957, 959, 961, 965, 966, 969, 970, 971, 972, 979, 981, 985, 987, 988, 991, 994, 995, 997, 999, 1003, 1004, 1007, 1008, 1009, 1010, 1019, 1021, 1025, 1027, 1028, 1031, 1034, 1035, 1037, 1039, 1044, 1045, 1048, 1049, 1050, 1051, 1058, 1060, 1064, 1066, 1067, 1070, 1073, 1074, 1076, 1078, 1081, 1083, 1084, 1087, 1088, 1089, 1090, 1097, 1099, 1103, 1105, 1106, 1109, 1112, 1113, 1115, 1117, 1120, 1121, 1122, 1125, 1126, 1127, 1128, 1135, 1137, 1141, 1143, 1144, 1147, 1150, 1151, 1153, 1155, 1159, 1160, 1163, 1164, 1165, 1166, 1173, 1175, 1179, 1181, 1182, 1185, 1188, 1189, 1191, 1193, 1198, 1199, 1202, 1209, 1210, 1211, 1214, 1217, 1218, 1220, 1222, 1227, 1228, 1229, 1232, 1241, 1242, 1243, 1246, 1250, 1251, 1253, 1255, 1261, 1262, 1263, 1266, 1275, 1276, 1277, 1280, 1284, 1285, 1287, 1289, 1295, 1296, 1297, 1300, 1309, 1310, 1311, 1314, 1318, 1319, 1321, 1323, 1328, 1329, 1332, 1339, 1340, 1341, 1344, 1347, 1348, 1350, 1352, 1357, 1358, 1359, 1362, 1371, 1372, 1373, 1376, 1380, 1381, 1383, 1385, 1389, 1390, 1393, 1400, 1401, 1402, 1405, 1408, 1409, 1411, 1413, 1417, 1418, 1421, 1428, 1429, 1430, 1433, 1436, 1437, 1439, 1441, 1445, 1446, 1449, 1456, 1457, 1458, 1461, 1464, 1465, 1467, 1469, 1474, 1475, 1476, 1479, 1488, 1489, 1490, 1493, 1497, 1498, 1500, 1502, 1507, 1508, 1511, 1518, 1519, 1520, 1523, 1526, 1527, 1529, 1531, 1536, 1537, 1538, 1541, 1550, 1551, 1552, 1555, 1559, 1560, 1562, 1564, 1569, 1570, 1573, 1580, 1581, 1582, 1585, 1588, 1589, 1591, 1593, 1612, 1619, 1622, 1624, 1647], "almost": [5, 22, 24, 27, 28], "flat": [5, 566, 1725, 1796], "plane": [5, 11, 600, 602], "ha": [5, 6, 7, 8, 14, 15, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 69, 75, 95, 102, 127, 135, 160, 168, 193, 200, 225, 233, 258, 266, 291, 299, 324, 332, 358, 366, 391, 399, 424, 432, 456, 458, 474, 476, 481, 502, 505, 523, 529, 538, 600, 602, 639, 762, 825, 834, 835, 854, 855, 856, 885, 893, 894, 895, 924, 931, 932, 933, 962, 969, 970, 971, 1000, 1007, 1008, 1009, 1040, 1048, 1049, 1050, 1079, 1087, 1088, 1089, 1118, 1120, 1125, 1126, 1127, 1156, 1163, 1164, 1165, 1194, 1202, 1223, 1225, 1232, 1256, 1259, 1266, 1290, 1293, 1300, 1324, 1332, 1353, 1362, 1386, 1393, 1414, 1421, 1442, 1449, 1470, 1472, 1479, 1503, 1511, 1532, 1534, 1541, 1565, 1573, 1594, 1658, 1665, 1697, 1711, 1713, 1723, 1725, 1757, 1791, 1804, 1805], "spheric": [5, 11, 22, 25, 28, 31, 33, 662, 665, 677, 714, 715, 716, 717, 718, 719, 964, 1631, 1639, 1655], "cylindr": [5, 11, 22, 25, 31, 619, 634, 674, 708, 715, 717, 718, 810, 813, 828, 964, 1631, 1639], "each": [5, 6, 7, 11, 12, 13, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 46, 47, 57, 59, 62, 64, 78, 79, 89, 105, 106, 119, 138, 139, 149, 151, 153, 155, 171, 172, 182, 184, 186, 188, 203, 204, 217, 218, 220, 236, 237, 247, 249, 251, 253, 269, 270, 280, 282, 284, 286, 302, 303, 313, 315, 317, 319, 335, 336, 346, 348, 351, 353, 369, 370, 380, 382, 384, 386, 402, 403, 413, 415, 417, 419, 435, 436, 446, 448, 450, 451, 458, 464, 465, 477, 484, 485, 525, 541, 554, 557, 570, 606, 619, 621, 634, 636, 646, 647, 652, 654, 677, 704, 732, 737, 743, 744, 745, 747, 748, 751, 755, 758, 762, 767, 768, 769, 776, 777, 780, 781, 782, 787, 791, 793, 802, 805, 806, 831, 832, 848, 849, 850, 854, 855, 857, 858, 859, 860, 861, 864, 865, 866, 867, 871, 887, 888, 889, 893, 894, 896, 897, 898, 899, 900, 903, 904, 905, 906, 910, 926, 927, 931, 932, 934, 935, 936, 937, 938, 941, 942, 943, 944, 948, 965, 969, 970, 972, 973, 974, 975, 976, 979, 980, 981, 982, 986, 1002, 1003, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1022, 1026, 1043, 1044, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1065, 1081, 1082, 1083, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1100, 1104, 1120, 1121, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1142, 1158, 1159, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1175, 1176, 1180, 1198, 1205, 1206, 1226, 1227, 1229, 1235, 1236, 1238, 1260, 1261, 1263, 1269, 1270, 1272, 1294, 1295, 1297, 1303, 1304, 1306, 1328, 1335, 1336, 1356, 1357, 1359, 1365, 1366, 1368, 1389, 1396, 1397, 1417, 1424, 1425, 1445, 1452, 1453, 1473, 1474, 1476, 1482, 1483, 1485, 1507, 1514, 1515, 1535, 1536, 1538, 1544, 1545, 1547, 1569, 1576, 1577, 1614, 1615, 1616, 1618, 1623, 1624, 1627, 1628, 1629, 1630, 1631, 1634, 1635, 1638, 1639, 1645, 1648, 1650, 1651, 1652, 1653, 1658, 1676, 1725, 1736, 1754, 1789, 1794, 1795, 1798, 1799], "necessari": [5, 7, 17, 21, 22, 26, 28, 32, 646, 650, 651, 653, 654, 655, 698, 701, 702, 703, 704, 705, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 1653, 1783, 1806], "accordingli": [5, 1619], "These": [5, 8, 12, 15, 24, 25, 26, 27, 28, 30, 32, 33, 64, 155, 188, 253, 286, 319, 353, 386, 419, 451, 553, 594, 837, 848, 858, 897, 935, 973, 1011, 1052, 1081, 1091, 1120, 1129, 1167, 1620], "altern": [5, 24, 30, 834, 835], "choos": [5, 8, 12], "hydraulic_size_factor": [5, 6, 8, 22, 26, 28, 31, 577, 578, 579, 580, 581, 582, 583, 823, 824], "For": [5, 6, 8, 11, 12, 13, 15, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 351, 353, 384, 386, 417, 419, 450, 451, 458, 477, 541, 655, 705, 740, 758, 834, 835, 850, 887, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1416, 1417, 1445, 1474, 1507, 1536, 1569, 1612, 1630, 1647, 1740], "inform": [5, 6, 8, 10, 12, 15, 24, 26, 27, 30, 31, 32, 478, 542, 655, 705, 740, 827, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1783, 1788, 1798, 1799], "see": [5, 13, 15, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 60, 61, 62, 64, 90, 121, 152, 153, 155, 185, 186, 188, 219, 250, 251, 253, 283, 284, 286, 316, 317, 319, 349, 350, 351, 353, 383, 384, 386, 416, 417, 419, 449, 450, 451, 477, 478, 497, 510, 541, 542, 555, 565, 772, 820, 821, 850, 851, 880, 889, 890, 919, 927, 928, 957, 965, 966, 995, 1003, 1004, 1035, 1044, 1045, 1074, 1083, 1084, 1113, 1121, 1122, 1151, 1159, 1160, 1189, 1198, 1199, 1218, 1227, 1228, 1251, 1261, 1262, 1285, 1295, 1296, 1319, 1328, 1329, 1348, 1357, 1358, 1381, 1389, 1390, 1409, 1417, 1418, 1437, 1445, 1446, 1465, 1474, 1475, 1498, 1507, 1508, 1527, 1536, 1537, 1560, 1569, 1570, 1589, 1622, 1631, 1667, 1669, 1783, 1788], "notebook": [5, 8, 15, 19, 20, 21, 22, 23, 25, 30, 31, 32], "show": [6, 7, 8, 9, 10, 25, 26, 27, 28, 30, 32, 33, 651, 653, 655, 702, 703, 705, 728, 729, 733, 740], "your": [6, 17, 28, 29, 35], "veri": [6, 10, 17, 19, 24, 25, 26, 27, 28, 29, 31, 195, 758, 785, 860, 861, 899, 900, 937, 938, 975, 976, 1013, 1014, 1054, 1055, 1093, 1094, 1131, 1132, 1169, 1170, 1627, 1628, 1660], "own": [6, 15, 25, 28, 29, 787, 788], "custom": [6, 7, 15, 24, 650, 698, 701, 726, 727, 729, 1740], "describ": [6, 19, 21, 22, 26, 27, 28, 29, 812, 828, 926], "built": [6, 8, 10, 19, 24, 565], "work": [6, 7, 8, 14, 15, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 35, 529, 553, 557, 572, 647, 653, 655, 703, 705, 733, 740, 758, 1225, 1258, 1292, 1326, 1416, 1505, 1567, 1616, 1647, 1667, 1669, 1680, 1682, 1725, 1783, 1788], "calcul": [6, 7, 10, 20, 22, 29, 33, 57, 129, 149, 182, 227, 247, 280, 313, 346, 380, 413, 426, 446, 529, 565, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 639, 640, 641, 642, 643, 644, 646, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 672, 673, 674, 675, 698, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 744, 757, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 815, 816, 817, 818, 820, 821, 823, 824, 825, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 887, 1225, 1229, 1263, 1297, 1359, 1388, 1476, 1538], "next": [6, 8, 10, 12, 13, 15, 25, 26, 28, 32, 33, 195, 724], "add": [6, 7, 8, 11, 15, 19, 21, 24, 25, 27, 28, 29, 30, 31, 32, 34, 59, 60, 61, 62, 63, 64, 89, 90, 119, 120, 121, 122, 151, 152, 153, 154, 155, 184, 185, 186, 187, 188, 217, 218, 219, 220, 249, 250, 251, 252, 253, 282, 283, 284, 285, 286, 315, 316, 317, 318, 319, 348, 349, 350, 351, 352, 353, 382, 383, 384, 385, 386, 415, 416, 417, 418, 419, 448, 449, 450, 451, 458, 477, 478, 497, 504, 510, 541, 542, 651, 702, 728, 849, 850, 851, 880, 888, 889, 890, 919, 927, 928, 957, 965, 966, 995, 1003, 1004, 1035, 1043, 1044, 1045, 1074, 1082, 1083, 1084, 1113, 1121, 1122, 1151, 1159, 1160, 1189, 1198, 1199, 1218, 1226, 1227, 1228, 1251, 1260, 1261, 1262, 1285, 1294, 1295, 1296, 1319, 1328, 1329, 1348, 1356, 1357, 1358, 1381, 1388, 1389, 1390, 1409, 1417, 1418, 1437, 1445, 1446, 1465, 1473, 1474, 1475, 1498, 1507, 1508, 1527, 1535, 1536, 1537, 1560, 1569, 1570, 1589, 1613, 1615, 1620, 1646, 1687], "our": [6, 8, 15, 19, 21, 22, 24, 25, 28, 30, 32, 35], "pyplot": [6, 7, 8, 9, 10, 11, 12, 13, 15, 25, 27, 28, 29, 32, 33, 651, 653, 655, 702, 703, 705, 728, 733, 740], "plt": [6, 7, 8, 9, 10, 11, 12, 13, 15, 25, 27, 28, 29, 32, 33, 651, 653, 655, 702, 703, 705, 728, 733, 740], "spst": [6, 28], "lattic": [6, 10, 848, 887, 888, 926, 1043, 1081], "given": [6, 7, 12, 13, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 39, 43, 49, 50, 51, 52, 53, 55, 57, 59, 60, 62, 63, 64, 66, 68, 73, 75, 81, 82, 83, 84, 85, 87, 89, 90, 92, 94, 100, 102, 108, 109, 110, 111, 113, 115, 119, 120, 121, 122, 124, 126, 131, 135, 141, 142, 143, 144, 145, 147, 149, 151, 152, 153, 154, 155, 157, 159, 164, 168, 174, 175, 176, 177, 178, 180, 182, 184, 185, 186, 187, 188, 190, 192, 198, 200, 206, 207, 208, 209, 211, 213, 216, 217, 218, 219, 220, 222, 224, 229, 233, 239, 240, 241, 242, 243, 245, 247, 249, 250, 251, 252, 253, 255, 257, 262, 266, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 285, 286, 288, 290, 295, 299, 305, 306, 307, 308, 309, 311, 313, 315, 316, 317, 318, 319, 321, 323, 328, 332, 338, 339, 340, 341, 342, 344, 346, 348, 349, 351, 352, 353, 355, 357, 362, 366, 372, 373, 374, 375, 376, 378, 380, 382, 383, 384, 385, 386, 388, 390, 395, 399, 405, 406, 407, 408, 409, 411, 413, 415, 416, 417, 418, 419, 421, 423, 428, 432, 438, 439, 440, 441, 442, 444, 446, 448, 449, 450, 451, 453, 455, 458, 467, 468, 473, 477, 481, 487, 488, 489, 490, 491, 493, 495, 497, 499, 501, 505, 506, 507, 508, 509, 510, 511, 520, 535, 541, 543, 552, 557, 558, 560, 565, 566, 568, 572, 573, 651, 652, 653, 655, 702, 703, 705, 722, 723, 728, 729, 730, 731, 732, 733, 734, 735, 739, 740, 765, 772, 776, 779, 781, 789, 796, 800, 807, 813, 827, 831, 832, 834, 835, 836, 838, 839, 840, 841, 842, 843, 848, 849, 850, 856, 857, 859, 860, 861, 869, 870, 871, 872, 873, 874, 876, 878, 880, 882, 884, 887, 888, 889, 895, 896, 898, 899, 900, 908, 909, 910, 911, 912, 913, 915, 917, 919, 921, 923, 926, 927, 933, 934, 936, 937, 938, 946, 947, 948, 949, 950, 951, 953, 955, 957, 959, 961, 964, 965, 971, 972, 974, 975, 976, 984, 985, 986, 987, 988, 989, 991, 993, 995, 997, 999, 1003, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1033, 1035, 1037, 1039, 1042, 1043, 1044, 1050, 1051, 1053, 1054, 1055, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1072, 1074, 1076, 1078, 1081, 1082, 1083, 1089, 1090, 1092, 1093, 1094, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1113, 1115, 1117, 1120, 1121, 1127, 1128, 1130, 1131, 1132, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1151, 1153, 1155, 1158, 1159, 1165, 1166, 1168, 1169, 1170, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1187, 1189, 1191, 1193, 1198, 1202, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1220, 1222, 1226, 1227, 1232, 1237, 1240, 1241, 1242, 1243, 1244, 1246, 1248, 1249, 1251, 1253, 1255, 1258, 1260, 1261, 1266, 1271, 1274, 1275, 1276, 1277, 1278, 1280, 1282, 1283, 1285, 1287, 1289, 1292, 1294, 1295, 1300, 1305, 1308, 1309, 1310, 1311, 1312, 1314, 1316, 1317, 1319, 1321, 1323, 1326, 1328, 1332, 1338, 1339, 1340, 1341, 1342, 1344, 1346, 1348, 1350, 1352, 1355, 1356, 1357, 1362, 1367, 1370, 1371, 1372, 1373, 1374, 1376, 1378, 1379, 1381, 1383, 1385, 1389, 1393, 1399, 1400, 1401, 1402, 1403, 1405, 1407, 1409, 1411, 1413, 1416, 1417, 1421, 1427, 1428, 1429, 1430, 1431, 1433, 1435, 1437, 1439, 1441, 1445, 1449, 1455, 1456, 1457, 1458, 1459, 1461, 1463, 1465, 1467, 1469, 1473, 1474, 1479, 1484, 1487, 1488, 1489, 1490, 1491, 1493, 1495, 1496, 1498, 1500, 1502, 1505, 1507, 1511, 1517, 1518, 1519, 1520, 1521, 1523, 1525, 1527, 1529, 1531, 1535, 1536, 1541, 1546, 1549, 1550, 1551, 1552, 1553, 1555, 1557, 1558, 1560, 1562, 1564, 1567, 1569, 1573, 1579, 1580, 1581, 1582, 1583, 1585, 1587, 1589, 1591, 1593, 1598, 1600, 1602, 1606, 1608, 1610, 1612, 1613, 1614, 1617, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1636, 1637, 1638, 1639, 1640, 1646, 1647, 1649, 1650, 1651, 1652, 1656, 1658, 1659, 1667, 1669, 1676, 1678, 1680, 1682, 1694, 1706, 1720, 1736, 1737, 1739, 1754, 1785, 1786, 1788, 1796, 1806], "yet": [6, 21, 26, 34, 35, 477, 541, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1794], "onli": [6, 7, 10, 12, 13, 14, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 43, 49, 50, 51, 52, 55, 66, 75, 81, 82, 83, 84, 87, 92, 102, 108, 109, 110, 111, 115, 122, 124, 135, 141, 142, 143, 144, 147, 157, 168, 174, 175, 176, 177, 180, 190, 200, 206, 207, 208, 209, 213, 222, 233, 239, 240, 241, 242, 245, 255, 266, 272, 273, 274, 275, 278, 288, 299, 305, 306, 307, 308, 311, 321, 332, 338, 339, 340, 341, 344, 355, 366, 372, 373, 374, 375, 378, 388, 399, 405, 406, 407, 408, 411, 421, 432, 438, 439, 440, 441, 444, 453, 467, 477, 481, 487, 488, 489, 490, 493, 495, 499, 505, 506, 507, 508, 509, 511, 528, 541, 543, 558, 564, 572, 573, 596, 601, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 630, 633, 637, 638, 640, 644, 647, 710, 758, 762, 783, 831, 834, 835, 850, 854, 855, 856, 857, 860, 861, 864, 866, 869, 870, 871, 872, 873, 876, 878, 882, 887, 889, 893, 894, 895, 896, 899, 900, 903, 905, 908, 909, 910, 911, 912, 915, 917, 921, 927, 931, 932, 933, 934, 937, 938, 941, 943, 946, 947, 948, 949, 950, 953, 955, 959, 965, 969, 970, 971, 972, 975, 976, 979, 981, 984, 985, 986, 987, 988, 991, 993, 997, 1003, 1007, 1008, 1009, 1010, 1013, 1014, 1019, 1021, 1024, 1025, 1026, 1027, 1028, 1031, 1033, 1037, 1044, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1060, 1063, 1064, 1065, 1066, 1067, 1070, 1072, 1076, 1083, 1087, 1088, 1089, 1090, 1093, 1094, 1097, 1099, 1102, 1103, 1104, 1105, 1106, 1109, 1111, 1115, 1121, 1125, 1126, 1127, 1128, 1131, 1132, 1135, 1137, 1140, 1141, 1142, 1143, 1144, 1147, 1149, 1153, 1159, 1163, 1164, 1165, 1166, 1169, 1170, 1173, 1175, 1178, 1179, 1180, 1181, 1182, 1185, 1187, 1191, 1198, 1202, 1208, 1209, 1210, 1211, 1214, 1216, 1220, 1225, 1227, 1232, 1240, 1241, 1242, 1243, 1246, 1248, 1253, 1261, 1266, 1274, 1275, 1276, 1277, 1280, 1282, 1287, 1295, 1300, 1308, 1309, 1310, 1311, 1314, 1316, 1321, 1328, 1332, 1338, 1339, 1340, 1341, 1344, 1346, 1350, 1357, 1362, 1370, 1371, 1372, 1373, 1376, 1378, 1383, 1389, 1393, 1399, 1400, 1401, 1402, 1405, 1407, 1411, 1417, 1421, 1427, 1428, 1429, 1430, 1433, 1435, 1439, 1445, 1449, 1455, 1456, 1457, 1458, 1461, 1463, 1467, 1474, 1479, 1487, 1488, 1489, 1490, 1493, 1495, 1500, 1507, 1511, 1517, 1518, 1519, 1520, 1523, 1525, 1529, 1536, 1541, 1549, 1550, 1551, 1552, 1555, 1557, 1562, 1569, 1573, 1579, 1580, 1581, 1582, 1585, 1587, 1591, 1615, 1623, 1627, 1628, 1637, 1648, 1676, 1680, 1682, 1725, 1737, 1794, 1798, 1799], "dictat": [6, 19, 32, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 477, 485, 541, 850, 867, 889, 906, 927, 944, 965, 982, 1003, 1022, 1044, 1061, 1083, 1100, 1121, 1138, 1159, 1176, 1198, 1206, 1227, 1238, 1261, 1272, 1295, 1306, 1328, 1336, 1357, 1368, 1389, 1397, 1417, 1425, 1445, 1453, 1474, 1485, 1507, 1515, 1536, 1547, 1569, 1577], "upper": [6, 26, 27, 28, 734, 854, 864, 893, 903, 931, 941, 969, 979, 1007, 1019, 1048, 1058, 1087, 1097, 1125, 1135, 1163, 1173, 1617, 1642, 1644, 1656, 1659], "limit": [6, 10, 13, 15, 22, 24, 25, 28, 32, 652, 722, 734, 831, 1653], "don": [6, 8, 10, 11, 15, 17, 22, 28, 35], "want": [6, 8, 15, 19, 24, 27, 28, 29, 31, 35, 1616, 1800], "exce": [6, 32], "overlap": [6, 27, 28, 29, 652, 717, 718], "neighbor": [6, 7, 19, 22, 28, 32, 47, 79, 98, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 645, 647, 650, 652, 657, 658, 659, 660, 698, 701, 726, 727, 745, 747, 748, 848, 857, 859, 860, 861, 867, 871, 887, 896, 898, 899, 900, 906, 910, 934, 936, 937, 938, 944, 948, 972, 974, 975, 976, 982, 986, 1002, 1010, 1012, 1013, 1014, 1022, 1026, 1051, 1053, 1054, 1055, 1061, 1065, 1081, 1090, 1092, 1093, 1094, 1100, 1104, 1128, 1130, 1131, 1132, 1138, 1142, 1166, 1168, 1169, 1170, 1176, 1180, 1206, 1238, 1272, 1306, 1336, 1368, 1397, 1425, 1453, 1485, 1515, 1547, 1577, 1621, 1623, 1627, 1628, 1647, 1651], "caus": [6, 28, 32, 1647], "paradox": [6, 652], "neg": [6, 28, 57, 149, 182, 247, 280, 313, 346, 380, 413, 446, 1617], "ll": [6, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32], "larg": [6, 17, 19, 27, 28, 32, 717, 718, 860, 861, 899, 900, 937, 938, 975, 976, 1013, 1014, 1015, 1016, 1054, 1055, 1093, 1094, 1131, 1132, 1169, 1170, 1627, 1628], "do": [6, 7, 8, 12, 13, 22, 24, 26, 27, 28, 29, 30, 31, 32, 63, 154, 187, 252, 285, 318, 352, 385, 418, 758, 1762], "need": [6, 8, 10, 11, 12, 13, 15, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 458, 554, 758, 810, 1613, 1624], "express": [6, 22, 26, 31], "scientif": [6, 24], "notat": [6, 19, 22, 28, 29], "below": [6, 8, 10, 11, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 552, 722, 746, 751, 758, 1649, 1653], "25": [6, 28, 29, 30, 31, 32, 34, 118, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1800], "under": [6, 8, 21, 22, 28, 34, 540, 568, 1672, 1674, 1678, 1794], "readi": [6, 8, 14, 19, 21, 34], "dictionari": [6, 15, 21, 27, 28, 29, 30, 31, 32, 44, 45, 46, 56, 65, 76, 77, 78, 88, 91, 103, 104, 105, 116, 123, 136, 137, 138, 148, 156, 169, 170, 171, 181, 189, 201, 202, 203, 214, 221, 234, 235, 236, 246, 254, 267, 268, 269, 279, 287, 300, 301, 302, 312, 320, 333, 334, 335, 345, 354, 367, 368, 369, 379, 387, 400, 401, 402, 412, 420, 433, 434, 435, 445, 452, 458, 459, 462, 463, 464, 470, 471, 478, 482, 483, 484, 494, 498, 516, 517, 522, 525, 531, 532, 537, 542, 552, 553, 554, 556, 568, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653, 655, 657, 659, 662, 663, 664, 665, 666, 669, 673, 674, 675, 677, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 698, 700, 701, 702, 703, 705, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 725, 726, 727, 728, 729, 730, 731, 733, 735, 738, 739, 740, 761, 762, 763, 764, 765, 767, 768, 769, 772, 774, 776, 780, 783, 785, 787, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 827, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 851, 862, 863, 865, 877, 881, 890, 901, 902, 904, 916, 920, 928, 939, 940, 942, 954, 958, 966, 977, 978, 980, 992, 996, 1004, 1017, 1018, 1020, 1032, 1036, 1045, 1056, 1057, 1059, 1071, 1075, 1084, 1095, 1096, 1098, 1110, 1114, 1122, 1133, 1134, 1136, 1148, 1152, 1160, 1171, 1172, 1174, 1186, 1190, 1199, 1203, 1204, 1205, 1215, 1219, 1226, 1228, 1233, 1234, 1235, 1236, 1247, 1252, 1258, 1260, 1262, 1267, 1268, 1269, 1270, 1281, 1286, 1292, 1294, 1296, 1301, 1302, 1303, 1304, 1315, 1320, 1326, 1329, 1333, 1334, 1335, 1345, 1349, 1356, 1358, 1363, 1364, 1365, 1366, 1377, 1382, 1390, 1394, 1395, 1396, 1406, 1410, 1418, 1422, 1423, 1424, 1434, 1438, 1446, 1450, 1451, 1452, 1462, 1466, 1473, 1475, 1480, 1481, 1482, 1483, 1494, 1499, 1505, 1508, 1512, 1513, 1514, 1524, 1528, 1535, 1537, 1542, 1543, 1544, 1545, 1556, 1561, 1567, 1570, 1574, 1575, 1576, 1586, 1590, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1634, 1635, 1639, 1667, 1669, 1680, 1682, 1687, 1690, 1691, 1696, 1702, 1703, 1708, 1716, 1717, 1722, 1774, 1779, 1780, 1790, 1793, 1794, 1795, 1798, 1799, 1806, 1807], "contain": [6, 8, 10, 14, 17, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 49, 50, 55, 56, 66, 67, 78, 79, 81, 82, 87, 88, 92, 93, 98, 105, 106, 108, 109, 115, 116, 124, 125, 138, 139, 141, 142, 147, 148, 157, 158, 171, 172, 174, 175, 180, 181, 190, 191, 203, 204, 206, 207, 213, 214, 222, 223, 236, 237, 239, 240, 245, 246, 255, 256, 269, 270, 272, 273, 278, 279, 288, 289, 302, 303, 305, 306, 311, 312, 321, 322, 335, 336, 338, 339, 344, 345, 347, 355, 356, 369, 370, 372, 373, 378, 379, 381, 388, 389, 402, 403, 405, 406, 411, 412, 414, 421, 422, 435, 436, 438, 439, 444, 445, 453, 454, 458, 464, 465, 467, 470, 472, 484, 485, 487, 488, 493, 494, 499, 500, 506, 509, 511, 525, 530, 546, 550, 552, 554, 557, 558, 564, 565, 568, 569, 570, 571, 572, 573, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 659, 661, 662, 663, 664, 665, 666, 667, 669, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 726, 727, 728, 729, 731, 733, 735, 736, 738, 740, 741, 744, 746, 757, 761, 762, 763, 764, 765, 767, 768, 769, 772, 774, 776, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 827, 831, 832, 834, 835, 836, 838, 839, 840, 841, 842, 843, 845, 846, 854, 855, 857, 858, 859, 860, 861, 865, 867, 869, 870, 876, 877, 882, 883, 893, 894, 896, 897, 898, 899, 900, 904, 906, 908, 909, 915, 916, 921, 922, 931, 932, 934, 935, 936, 937, 938, 942, 944, 946, 947, 953, 954, 959, 960, 969, 970, 972, 973, 974, 975, 976, 980, 982, 984, 985, 991, 992, 997, 998, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1020, 1022, 1024, 1025, 1031, 1032, 1037, 1038, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1059, 1061, 1063, 1064, 1070, 1071, 1076, 1077, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1098, 1100, 1102, 1103, 1109, 1110, 1115, 1116, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1136, 1138, 1140, 1141, 1147, 1148, 1153, 1154, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1174, 1176, 1178, 1179, 1185, 1186, 1191, 1192, 1205, 1206, 1208, 1209, 1214, 1215, 1220, 1221, 1229, 1236, 1238, 1240, 1241, 1246, 1247, 1253, 1254, 1263, 1270, 1272, 1274, 1275, 1280, 1281, 1287, 1288, 1297, 1304, 1306, 1308, 1309, 1314, 1315, 1321, 1322, 1335, 1336, 1338, 1339, 1344, 1345, 1350, 1351, 1359, 1366, 1368, 1370, 1371, 1376, 1377, 1383, 1384, 1396, 1397, 1399, 1400, 1405, 1406, 1411, 1412, 1424, 1425, 1427, 1428, 1433, 1434, 1439, 1440, 1452, 1453, 1455, 1456, 1461, 1462, 1467, 1468, 1476, 1483, 1485, 1487, 1488, 1493, 1494, 1500, 1501, 1514, 1515, 1517, 1518, 1523, 1524, 1529, 1530, 1538, 1545, 1547, 1549, 1550, 1555, 1556, 1562, 1563, 1576, 1577, 1579, 1580, 1585, 1586, 1591, 1592, 1596, 1611, 1614, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1632, 1633, 1634, 1635, 1636, 1652, 1654, 1655, 1658, 1660, 1713, 1725, 1737, 1739, 1766, 1767, 1774, 1784, 1789, 1794, 1798, 1799], "everyth": [6, 8], "pro": 6, "tip": 6, "rememb": 6, "treat": [6, 21, 218, 220, 504, 1002, 1623, 1627, 1628, 1639, 1658], "list": [6, 21, 26, 27, 28, 29, 30, 32, 39, 43, 50, 51, 52, 55, 56, 59, 60, 66, 73, 75, 82, 83, 84, 87, 88, 89, 90, 92, 100, 102, 109, 110, 111, 115, 116, 119, 120, 121, 122, 124, 131, 135, 142, 143, 144, 147, 148, 151, 152, 157, 164, 168, 175, 176, 177, 180, 181, 184, 185, 190, 195, 198, 200, 207, 208, 209, 213, 214, 217, 218, 219, 220, 222, 229, 233, 240, 241, 242, 245, 246, 249, 250, 255, 262, 266, 273, 274, 275, 278, 279, 282, 283, 288, 295, 299, 306, 307, 308, 311, 312, 315, 316, 321, 328, 332, 339, 340, 341, 344, 345, 348, 349, 355, 362, 366, 373, 374, 375, 378, 379, 382, 383, 388, 395, 399, 406, 407, 408, 411, 412, 415, 416, 421, 428, 432, 439, 440, 441, 444, 445, 448, 449, 453, 470, 481, 488, 489, 490, 493, 494, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 529, 543, 554, 565, 567, 568, 569, 570, 572, 573, 612, 622, 627, 637, 646, 647, 654, 704, 724, 735, 736, 737, 739, 751, 758, 769, 772, 776, 813, 827, 848, 849, 856, 857, 858, 859, 860, 861, 870, 872, 873, 876, 877, 878, 880, 882, 887, 888, 895, 896, 897, 898, 899, 900, 909, 911, 912, 915, 916, 917, 919, 921, 926, 933, 934, 935, 936, 937, 938, 947, 949, 950, 953, 954, 955, 957, 959, 964, 971, 972, 973, 974, 975, 976, 985, 987, 988, 991, 992, 993, 995, 997, 1002, 1009, 1010, 1011, 1012, 1013, 1014, 1025, 1027, 1028, 1031, 1032, 1033, 1035, 1037, 1042, 1043, 1050, 1051, 1052, 1053, 1054, 1055, 1064, 1066, 1067, 1070, 1071, 1072, 1074, 1076, 1081, 1082, 1089, 1090, 1091, 1092, 1093, 1094, 1103, 1105, 1106, 1109, 1110, 1111, 1113, 1115, 1120, 1127, 1128, 1129, 1130, 1131, 1132, 1141, 1143, 1144, 1147, 1148, 1149, 1151, 1153, 1158, 1165, 1166, 1167, 1168, 1169, 1170, 1179, 1181, 1182, 1185, 1186, 1187, 1189, 1191, 1202, 1209, 1210, 1211, 1214, 1215, 1216, 1218, 1220, 1229, 1232, 1241, 1242, 1243, 1246, 1247, 1248, 1251, 1253, 1263, 1266, 1275, 1276, 1277, 1280, 1281, 1282, 1285, 1287, 1297, 1300, 1309, 1310, 1311, 1314, 1315, 1316, 1319, 1321, 1332, 1339, 1340, 1341, 1344, 1345, 1346, 1348, 1350, 1355, 1359, 1362, 1371, 1372, 1373, 1376, 1377, 1378, 1381, 1383, 1393, 1400, 1401, 1402, 1405, 1406, 1407, 1409, 1411, 1421, 1428, 1429, 1430, 1433, 1434, 1435, 1437, 1439, 1449, 1456, 1457, 1458, 1461, 1462, 1463, 1465, 1467, 1476, 1479, 1488, 1489, 1490, 1493, 1494, 1495, 1498, 1500, 1511, 1518, 1519, 1520, 1523, 1524, 1525, 1527, 1529, 1538, 1541, 1550, 1551, 1552, 1555, 1556, 1557, 1560, 1562, 1573, 1580, 1581, 1582, 1585, 1586, 1587, 1589, 1591, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1625, 1627, 1628, 1629, 1631, 1638, 1639, 1646, 1647, 1648, 1649, 1652, 1653, 1676, 1687, 1725, 1726, 1727, 1728, 1730, 1733, 1736, 1737, 1739, 1743, 1744, 1745, 1746, 1748, 1751, 1754, 1774, 1778, 1785, 1793, 1794, 1796, 1798, 1799, 1804, 1805], "quickli": [6, 19, 24, 25], "view": [6, 8, 17, 26, 30, 48, 70, 80, 96, 107, 128, 140, 161, 173, 194, 205, 226, 238, 259, 271, 292, 304, 325, 337, 359, 371, 392, 404, 425, 437, 457, 466, 475, 486, 503, 518, 519, 524, 533, 534, 539, 566, 868, 886, 907, 925, 945, 963, 983, 1001, 1023, 1041, 1062, 1080, 1101, 1119, 1139, 1157, 1177, 1195, 1207, 1224, 1239, 1257, 1273, 1291, 1307, 1325, 1337, 1354, 1369, 1387, 1398, 1415, 1426, 1443, 1454, 1471, 1472, 1486, 1504, 1516, 1533, 1534, 1548, 1566, 1578, 1595, 1692, 1693, 1698, 1704, 1705, 1712, 1718, 1719, 1724, 1737, 1781, 1782, 1792], "alreadi": [6, 10, 13, 15, 27, 29, 30, 31, 32, 59, 63, 89, 119, 120, 122, 151, 154, 184, 187, 217, 218, 220, 249, 252, 282, 285, 315, 318, 348, 352, 382, 385, 415, 418, 448, 652, 849, 864, 866, 888, 903, 905, 941, 943, 979, 981, 1019, 1021, 1042, 1043, 1058, 1060, 1082, 1097, 1099, 1135, 1137, 1173, 1175, 1624, 1757], "dict_kei": [6, 24, 30, 31], "max_siz": [6, 8, 26, 28, 31, 577, 578, 579, 580, 581, 582, 583], "volum": [6, 8, 12, 13, 20, 26, 28, 29, 31, 32, 495, 543, 553, 577, 578, 579, 580, 581, 582, 583, 600, 602, 649, 662, 663, 664, 665, 666, 714, 715, 716, 717, 718, 719, 762, 763, 769, 832, 878, 917, 955, 993, 1033, 1072, 1111, 1149, 1187, 1216, 1248, 1282, 1316, 1346, 1378, 1407, 1435, 1463, 1495, 1525, 1557, 1587], "cross_sectional_area": [6, 7, 8, 26, 28, 31, 577, 578, 579, 580, 581, 582, 583, 657, 658, 659, 660, 668, 669, 700, 716, 818, 825], "total_volum": [6, 8, 11, 26, 28, 31, 581], "lens_volum": [6, 8, 26, 28, 31, 581], "diffusive_size_factor": [6, 8, 22, 26, 28, 31, 577, 578, 579, 580, 581, 582, 583, 815, 816, 817, 818, 820, 821, 845, 846], "return": [6, 7, 12, 13, 15, 17, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 37, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 71, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 98, 102, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 123, 124, 125, 126, 129, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 162, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192, 195, 196, 200, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 221, 222, 223, 224, 227, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 254, 255, 256, 257, 260, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 288, 289, 290, 293, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 320, 321, 322, 323, 326, 332, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 355, 356, 357, 360, 366, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 387, 388, 389, 390, 393, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 420, 421, 422, 423, 426, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 452, 453, 454, 455, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 477, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 498, 499, 500, 501, 505, 506, 507, 508, 509, 511, 512, 517, 520, 521, 522, 528, 529, 532, 535, 536, 537, 541, 549, 552, 553, 554, 556, 557, 561, 568, 569, 570, 606, 621, 636, 643, 646, 647, 649, 650, 651, 652, 654, 655, 659, 665, 671, 677, 689, 694, 698, 700, 701, 702, 704, 705, 708, 712, 715, 723, 726, 727, 728, 729, 731, 732, 735, 736, 737, 738, 740, 744, 746, 751, 762, 764, 768, 776, 779, 781, 782, 783, 785, 788, 789, 795, 796, 802, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 821, 823, 824, 825, 827, 831, 832, 834, 835, 836, 838, 839, 840, 841, 842, 843, 845, 846, 848, 850, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 876, 877, 881, 882, 883, 884, 887, 889, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 920, 921, 922, 923, 926, 927, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 958, 959, 960, 961, 964, 965, 969, 970, 971, 972, 973, 974, 975, 976, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 996, 997, 998, 999, 1002, 1003, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1036, 1037, 1038, 1039, 1042, 1044, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1075, 1076, 1077, 1078, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1116, 1117, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1152, 1153, 1154, 1155, 1158, 1159, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1190, 1191, 1192, 1193, 1198, 1202, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1227, 1229, 1232, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1252, 1253, 1254, 1255, 1258, 1261, 1263, 1266, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1286, 1287, 1288, 1289, 1292, 1295, 1297, 1300, 1302, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1320, 1321, 1322, 1323, 1326, 1328, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1349, 1350, 1351, 1352, 1357, 1359, 1362, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1382, 1383, 1384, 1385, 1389, 1393, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1410, 1411, 1412, 1413, 1417, 1421, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1438, 1439, 1440, 1441, 1445, 1449, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1466, 1467, 1468, 1469, 1474, 1476, 1479, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1499, 1500, 1501, 1502, 1505, 1507, 1511, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1528, 1529, 1530, 1531, 1536, 1538, 1541, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1561, 1562, 1563, 1564, 1567, 1569, 1573, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1590, 1591, 1592, 1593, 1604, 1613, 1614, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1658, 1659, 1672, 1674, 1676, 1678, 1682, 1685, 1687, 1691, 1694, 1695, 1696, 1703, 1706, 1707, 1708, 1717, 1720, 1721, 1722, 1728, 1729, 1731, 1733, 1736, 1739, 1746, 1747, 1749, 1751, 1754, 1759, 1760, 1763, 1765, 1768, 1770, 1772, 1778, 1780, 1785, 1786, 1787, 1790, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1807], "argument": [6, 15, 24, 25, 26, 27, 30, 55, 60, 63, 66, 87, 90, 92, 115, 121, 124, 147, 152, 154, 157, 180, 185, 187, 190, 213, 219, 222, 245, 250, 252, 255, 278, 283, 285, 288, 311, 316, 318, 321, 344, 349, 352, 355, 378, 383, 385, 388, 411, 416, 418, 421, 444, 449, 453, 477, 493, 497, 499, 509, 510, 511, 541, 549, 553, 568, 729, 736, 758, 810, 837, 850, 854, 855, 859, 871, 876, 880, 882, 889, 893, 894, 898, 910, 915, 919, 921, 926, 927, 931, 932, 936, 948, 953, 957, 959, 965, 969, 970, 974, 986, 991, 995, 997, 1003, 1007, 1008, 1012, 1026, 1031, 1035, 1037, 1044, 1048, 1049, 1053, 1065, 1070, 1074, 1076, 1083, 1087, 1088, 1092, 1104, 1109, 1113, 1115, 1121, 1125, 1126, 1130, 1142, 1147, 1151, 1153, 1159, 1163, 1164, 1168, 1180, 1185, 1189, 1191, 1198, 1214, 1218, 1220, 1227, 1246, 1251, 1253, 1261, 1280, 1285, 1287, 1295, 1314, 1319, 1321, 1328, 1344, 1348, 1350, 1357, 1376, 1381, 1383, 1389, 1405, 1409, 1411, 1417, 1433, 1437, 1439, 1445, 1461, 1465, 1467, 1474, 1493, 1498, 1500, 1507, 1523, 1527, 1529, 1536, 1555, 1560, 1562, 1569, 1585, 1589, 1591, 1622, 1639, 1651, 1665, 1682, 1737], "function": [6, 7, 11, 15, 17, 19, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 50, 59, 67, 82, 89, 93, 98, 109, 119, 125, 142, 151, 158, 175, 184, 191, 196, 207, 217, 223, 240, 249, 256, 273, 282, 289, 306, 315, 322, 339, 347, 348, 356, 373, 381, 382, 389, 406, 414, 415, 422, 439, 448, 454, 458, 472, 476, 477, 488, 495, 500, 504, 506, 512, 513, 540, 541, 543, 549, 568, 577, 578, 579, 580, 581, 582, 583, 586, 589, 590, 592, 593, 595, 609, 624, 639, 645, 648, 652, 653, 655, 656, 659, 661, 667, 670, 672, 676, 678, 692, 696, 699, 703, 705, 706, 711, 713, 720, 729, 731, 733, 735, 740, 741, 757, 758, 760, 762, 766, 770, 775, 778, 783, 784, 786, 790, 797, 801, 809, 810, 811, 814, 819, 822, 825, 826, 830, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 850, 870, 878, 883, 889, 909, 917, 922, 927, 947, 955, 960, 965, 985, 993, 998, 1003, 1025, 1033, 1038, 1044, 1064, 1072, 1077, 1083, 1103, 1111, 1116, 1120, 1121, 1141, 1149, 1154, 1159, 1179, 1187, 1192, 1198, 1209, 1216, 1221, 1225, 1227, 1241, 1248, 1254, 1261, 1275, 1282, 1288, 1295, 1309, 1316, 1322, 1328, 1339, 1346, 1351, 1357, 1371, 1378, 1384, 1389, 1400, 1407, 1412, 1417, 1428, 1435, 1440, 1445, 1456, 1463, 1468, 1472, 1474, 1488, 1495, 1501, 1507, 1518, 1525, 1530, 1534, 1536, 1550, 1557, 1563, 1569, 1580, 1587, 1592, 1613, 1614, 1616, 1618, 1630, 1631, 1645, 1651, 1652, 1658, 1662, 1668, 1670, 1671, 1680, 1681, 1682, 1683, 1736, 1740, 1754, 1774, 1798, 1799], "misc": [6, 28, 30, 729], "_basic_math": 6, "product": [6, 28, 577, 578, 579, 580, 581, 582, 583], "target": [6, 7, 512, 525, 650, 651, 653, 655, 698, 701, 702, 703, 705, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 827, 831, 832, 843, 845, 846, 1648], "prop": [6, 26, 28, 30, 49, 50, 81, 82, 108, 109, 141, 142, 174, 175, 206, 207, 239, 240, 272, 273, 305, 306, 338, 339, 372, 373, 405, 406, 438, 439, 467, 487, 488, 506, 577, 578, 579, 580, 581, 582, 583, 586, 589, 650, 697, 698, 701, 722, 724, 726, 727, 729, 730, 731, 734, 735, 736, 738, 739, 776, 779, 780, 805, 869, 870, 908, 909, 946, 947, 984, 985, 1024, 1025, 1063, 1064, 1102, 1103, 1120, 1140, 1141, 1178, 1179, 1208, 1209, 1240, 1241, 1274, 1275, 1308, 1309, 1338, 1339, 1370, 1371, 1399, 1400, 1427, 1428, 1455, 1456, 1487, 1488, 1517, 1518, 1549, 1550, 1579, 1580], "final": [6, 15, 19, 22, 24, 31, 32, 33, 1002, 1604, 1669, 1682], "forget": [6, 10, 19], "els": [6, 28, 45, 65, 77, 91, 104, 123, 137, 156, 170, 189, 196, 202, 221, 235, 254, 268, 287, 301, 320, 334, 354, 368, 387, 401, 420, 434, 452, 463, 471, 483, 498, 517, 522, 532, 537, 863, 881, 902, 920, 940, 958, 978, 996, 1018, 1036, 1057, 1075, 1096, 1114, 1134, 1152, 1172, 1190, 1204, 1219, 1234, 1252, 1268, 1286, 1302, 1320, 1334, 1349, 1364, 1382, 1395, 1410, 1423, 1438, 1451, 1466, 1481, 1499, 1513, 1528, 1543, 1561, 1575, 1590, 1687, 1691, 1696, 1703, 1708, 1717, 1722, 1780, 1790], "appear": [6, 17, 21, 26, 28, 30, 1676, 1678], "been": [6, 7, 8, 13, 14, 19, 24, 26, 27, 28, 29, 30, 31, 32, 43, 63, 75, 102, 135, 154, 168, 187, 200, 233, 252, 266, 285, 299, 318, 332, 352, 366, 385, 399, 418, 432, 481, 505, 652, 825, 856, 895, 933, 971, 1009, 1050, 1089, 1127, 1165, 1202, 1232, 1266, 1300, 1332, 1362, 1393, 1421, 1449, 1479, 1511, 1541, 1573, 1623], "net": [6, 8, 10, 17, 19, 21, 22, 25, 27, 28, 29, 31, 57, 149, 182, 247, 280, 313, 346, 380, 413, 446, 834, 835], "0x7f5856066d10": 6, "valid": [6, 8, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 472, 500, 765, 783, 789, 796, 800, 807, 883, 922, 960, 998, 1038, 1077, 1116, 1154, 1192, 1221, 1254, 1288, 1322, 1351, 1384, 1412, 1440, 1468, 1501, 1530, 1563, 1592, 1803], "coord": [6, 8, 21, 25, 26, 27, 28, 29, 31, 554, 599, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 628, 629, 630, 631, 632, 633, 682, 683, 684, 685, 686, 687, 848, 887, 926, 964, 1002, 1042, 1081, 1120, 1158, 1620, 1638, 1650, 1651], "625": [6, 32], "3": [6, 7, 8, 11, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 46, 78, 98, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 464, 477, 484, 541, 553, 554, 586, 589, 606, 621, 636, 651, 677, 702, 712, 728, 763, 764, 768, 796, 798, 832, 834, 835, 836, 837, 839, 840, 841, 842, 850, 859, 860, 865, 871, 889, 898, 899, 904, 910, 927, 936, 937, 942, 948, 964, 965, 974, 975, 980, 986, 1002, 1003, 1012, 1013, 1020, 1026, 1044, 1053, 1054, 1059, 1065, 1083, 1092, 1093, 1098, 1104, 1120, 1121, 1130, 1131, 1136, 1142, 1158, 1159, 1168, 1169, 1174, 1180, 1198, 1205, 1227, 1236, 1261, 1270, 1295, 1304, 1328, 1335, 1357, 1366, 1389, 1396, 1417, 1424, 1445, 1452, 1474, 1483, 1507, 1514, 1536, 1545, 1569, 1576, 1612, 1616, 1618, 1620, 1630, 1636, 1638, 1650, 1651, 1663, 1664, 1666, 1668, 1670, 1673, 1675, 1677, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1725], "conn": [6, 7, 8, 21, 25, 26, 27, 28, 29, 31, 32, 554, 712, 848, 887, 926, 964, 1002, 1042, 1081, 1120, 1158, 1614, 1617, 1620, 1640, 1652], "1200": [6, 32], "coordination_numb": [6, 8, 15, 26, 28, 29, 31], "7": [6, 7, 8, 10, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 565, 577, 578, 579, 580, 581, 582, 583, 586, 825, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1616], "9": [6, 7, 8, 9, 12, 15, 21, 25, 26, 27, 28, 29, 30, 31, 32, 586, 589, 646, 654, 704, 737, 829, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1616], "11": [6, 8, 13, 25, 26, 27, 28, 29, 30, 31, 32, 586], "13": [6, 8, 22, 25, 26, 27, 28, 29, 31, 32], "14": [6, 8, 22, 25, 26, 27, 28, 29, 31, 32, 586, 887], "16": [6, 8, 22, 25, 26, 28, 29, 31, 32, 586], "17": [6, 7, 8, 22, 25, 26, 28, 29, 31, 32, 586], "surfac": [6, 8, 10, 12, 13, 21, 25, 26, 27, 29, 31, 32, 33, 565, 657, 658, 659, 660, 669, 700, 707, 708, 709, 710, 716, 769, 787, 788, 789, 812, 813, 827, 1612, 1630, 1631, 1645, 1649], "96": [6, 25, 32], "front": [6, 7, 8, 10, 21, 25, 27, 28, 29, 31, 888, 1043], "back": [6, 7, 8, 21, 25, 26, 27, 28, 29, 31, 647, 649, 700, 723, 827, 888, 1043], "hist": [6, 28, 651, 653, 655, 702, 703, 705, 728, 733, 740], "ax1": 6, "ax2": 6, "subplot": [6, 7, 8, 9, 27, 28, 29], "figsiz": [6, 8, 9, 12, 13, 27, 28, 29, 530], "bin": [6, 651, 653, 655, 702, 703, 705, 728, 733, 740], "edgecolor": [6, 28], "set_titl": 6, "approach": [6, 17, 27, 28, 29, 32, 35, 647, 762, 812, 813, 828], "most": [6, 8, 11, 15, 24, 27, 30, 31, 32, 195, 758, 813, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "simpl": [6, 8, 10, 22, 24, 25, 26, 27, 29, 30, 31, 848, 887, 926, 1081, 1713, 1725], "straight": [6, 711, 712], "forward": 6, "modul": [6, 11, 21, 25, 26, 28, 31, 36, 347, 381, 414, 458, 546, 550, 574, 575, 576, 584, 585, 587, 588, 591, 594, 595, 609, 624, 639, 645, 648, 653, 655, 656, 661, 667, 670, 672, 676, 678, 692, 696, 699, 703, 705, 706, 711, 713, 720, 733, 740, 741, 757, 759, 760, 766, 770, 775, 778, 784, 786, 790, 797, 801, 808, 809, 811, 814, 819, 822, 826, 830, 833, 844, 847, 1196, 1596, 1611, 1629, 1656, 1659, 1660], "second": [6, 8, 21, 22, 24, 30, 556, 1616, 1625, 1653, 1680, 1682], "latter": [6, 834, 835, 1623], "recommend": [6, 28, 29, 35, 553, 1647], "fetch": [6, 10, 26, 28, 30, 31, 46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 464, 484, 758, 779, 865, 904, 942, 980, 1020, 1059, 1098, 1136, 1174, 1205, 1235, 1236, 1237, 1269, 1270, 1271, 1303, 1304, 1305, 1335, 1365, 1366, 1367, 1396, 1424, 1452, 1482, 1483, 1484, 1514, 1544, 1545, 1546, 1576], "statist": [6, 15, 28], "case": [6, 10, 11, 17, 19, 22, 27, 29, 30, 31, 32, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 456, 474, 502, 523, 529, 538, 652, 758, 834, 835, 885, 924, 962, 1000, 1040, 1079, 1118, 1156, 1194, 1223, 1256, 1290, 1324, 1353, 1386, 1414, 1442, 1470, 1503, 1532, 1565, 1594, 1616, 1623, 1647, 1697, 1711, 1723, 1737, 1791], "weibull_min": [6, 28, 651, 655, 702, 705, 728, 740], "genert": 6, "number": [6, 14, 15, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 51, 52, 83, 84, 110, 111, 118, 143, 144, 176, 177, 208, 209, 216, 241, 242, 274, 275, 307, 308, 340, 341, 374, 375, 407, 408, 440, 441, 489, 490, 507, 508, 554, 619, 634, 646, 647, 649, 652, 653, 654, 655, 703, 704, 705, 720, 732, 733, 737, 740, 743, 744, 745, 746, 827, 834, 835, 848, 857, 871, 872, 873, 887, 896, 910, 911, 912, 934, 948, 949, 950, 964, 972, 986, 987, 988, 1002, 1010, 1026, 1027, 1028, 1051, 1065, 1066, 1067, 1081, 1090, 1104, 1105, 1106, 1128, 1142, 1143, 1144, 1158, 1166, 1180, 1181, 1182, 1210, 1211, 1225, 1242, 1243, 1276, 1277, 1310, 1311, 1340, 1341, 1372, 1373, 1401, 1402, 1429, 1430, 1457, 1458, 1489, 1490, 1519, 1520, 1551, 1552, 1581, 1582, 1603, 1614, 1617, 1620, 1621, 1622, 1624, 1631, 1640, 1648, 1652, 1654, 1655, 1658, 1660, 1682, 1685, 1729, 1747, 1794], "rv": [6, 28], "arrai": [6, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 46, 47, 49, 55, 58, 59, 60, 66, 67, 68, 78, 79, 81, 87, 89, 90, 92, 93, 94, 105, 106, 108, 115, 118, 119, 121, 124, 125, 126, 138, 139, 141, 147, 150, 151, 152, 157, 158, 159, 171, 172, 174, 180, 183, 184, 185, 190, 191, 192, 196, 203, 204, 206, 213, 217, 219, 222, 223, 224, 236, 237, 239, 245, 248, 249, 250, 255, 256, 257, 269, 270, 272, 278, 281, 282, 283, 288, 289, 290, 302, 303, 305, 311, 314, 315, 316, 321, 322, 323, 335, 336, 338, 344, 347, 348, 349, 355, 356, 357, 369, 370, 372, 378, 381, 382, 383, 388, 389, 390, 402, 403, 405, 411, 414, 415, 416, 421, 422, 423, 435, 436, 438, 444, 447, 448, 449, 453, 454, 455, 464, 465, 467, 472, 473, 477, 484, 485, 487, 493, 497, 499, 500, 501, 504, 509, 510, 511, 541, 549, 568, 572, 606, 621, 636, 646, 647, 650, 651, 652, 653, 654, 655, 677, 698, 701, 702, 703, 704, 705, 712, 720, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 746, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 850, 854, 855, 857, 859, 860, 861, 865, 867, 869, 871, 876, 880, 882, 883, 884, 889, 893, 894, 896, 898, 899, 900, 904, 906, 908, 910, 915, 919, 921, 922, 923, 926, 927, 931, 932, 934, 936, 937, 938, 942, 944, 946, 948, 953, 957, 959, 960, 961, 964, 965, 969, 970, 972, 974, 975, 976, 980, 982, 984, 986, 991, 995, 997, 998, 999, 1002, 1003, 1007, 1008, 1010, 1012, 1013, 1014, 1020, 1022, 1024, 1026, 1031, 1035, 1037, 1038, 1039, 1044, 1048, 1049, 1051, 1053, 1054, 1055, 1059, 1061, 1063, 1065, 1070, 1074, 1076, 1077, 1078, 1083, 1087, 1088, 1090, 1092, 1093, 1094, 1098, 1100, 1102, 1104, 1109, 1113, 1115, 1116, 1117, 1120, 1121, 1125, 1126, 1128, 1130, 1131, 1132, 1136, 1138, 1140, 1142, 1147, 1151, 1153, 1154, 1155, 1158, 1159, 1163, 1164, 1166, 1168, 1169, 1170, 1174, 1176, 1178, 1180, 1185, 1189, 1191, 1192, 1193, 1198, 1205, 1206, 1208, 1214, 1218, 1220, 1221, 1222, 1227, 1236, 1238, 1240, 1246, 1251, 1253, 1254, 1255, 1261, 1270, 1272, 1274, 1280, 1285, 1287, 1288, 1289, 1295, 1304, 1306, 1308, 1314, 1319, 1321, 1322, 1323, 1328, 1335, 1336, 1338, 1344, 1348, 1350, 1351, 1352, 1357, 1366, 1368, 1370, 1376, 1381, 1383, 1384, 1385, 1389, 1396, 1397, 1399, 1405, 1409, 1411, 1412, 1413, 1417, 1424, 1425, 1427, 1433, 1437, 1439, 1440, 1441, 1445, 1452, 1453, 1455, 1461, 1465, 1467, 1468, 1469, 1474, 1483, 1485, 1487, 1493, 1498, 1500, 1501, 1502, 1507, 1514, 1515, 1517, 1523, 1527, 1529, 1530, 1531, 1536, 1545, 1547, 1549, 1555, 1560, 1562, 1563, 1564, 1569, 1576, 1577, 1579, 1585, 1589, 1591, 1592, 1593, 1604, 1612, 1614, 1617, 1618, 1619, 1620, 1622, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1634, 1635, 1636, 1639, 1640, 1648, 1649, 1652, 1654, 1655, 1658, 1713, 1793, 1795, 1798, 1799, 1800, 1807], "put": [6, 15, 27, 28, 196, 458, 570, 1650], "one": [6, 9, 15, 17, 22, 24, 26, 27, 28, 29, 30, 31, 32, 43, 50, 51, 52, 55, 59, 66, 75, 82, 83, 84, 87, 89, 92, 102, 109, 110, 111, 115, 119, 124, 135, 142, 143, 144, 147, 151, 157, 168, 175, 176, 177, 180, 184, 190, 200, 207, 208, 209, 213, 217, 222, 233, 240, 241, 242, 245, 249, 255, 266, 273, 274, 275, 278, 282, 288, 299, 306, 307, 308, 311, 315, 321, 332, 339, 340, 341, 344, 348, 355, 366, 373, 374, 375, 378, 382, 388, 399, 406, 407, 408, 411, 415, 421, 432, 439, 440, 441, 444, 448, 453, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 529, 557, 570, 715, 768, 848, 856, 857, 860, 861, 864, 866, 870, 871, 872, 873, 876, 882, 887, 895, 896, 899, 900, 903, 905, 909, 910, 911, 912, 915, 921, 926, 933, 934, 937, 938, 941, 943, 947, 948, 949, 950, 953, 959, 964, 971, 972, 975, 976, 979, 981, 985, 986, 987, 988, 991, 997, 1002, 1009, 1010, 1013, 1014, 1019, 1021, 1025, 1026, 1027, 1028, 1031, 1037, 1042, 1050, 1051, 1054, 1055, 1058, 1060, 1064, 1065, 1066, 1067, 1070, 1076, 1081, 1089, 1090, 1093, 1094, 1097, 1099, 1103, 1104, 1105, 1106, 1109, 1115, 1120, 1127, 1128, 1131, 1132, 1135, 1137, 1141, 1142, 1143, 1144, 1147, 1153, 1158, 1165, 1166, 1169, 1170, 1173, 1175, 1179, 1180, 1181, 1182, 1185, 1191, 1202, 1209, 1210, 1211, 1214, 1220, 1232, 1241, 1242, 1243, 1246, 1253, 1266, 1275, 1276, 1277, 1280, 1287, 1300, 1309, 1310, 1311, 1314, 1321, 1332, 1339, 1340, 1341, 1344, 1350, 1362, 1371, 1372, 1373, 1376, 1383, 1393, 1400, 1401, 1402, 1405, 1411, 1416, 1421, 1428, 1429, 1430, 1433, 1439, 1449, 1456, 1457, 1458, 1461, 1467, 1479, 1488, 1489, 1490, 1493, 1500, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1614, 1617, 1623, 1627, 1628, 1630, 1646, 1651, 1652, 1653, 1687, 1737, 1770, 1774, 1778, 1785, 1789], "c": [6, 7, 8, 24, 25, 27, 28, 32, 35, 651, 655, 702, 705, 724, 728, 740, 768, 832, 834, 835, 837, 1650, 1651, 1680, 1682, 1783, 1788], "random_st": 6, "none": [6, 15, 26, 28, 29, 31, 38, 43, 44, 45, 49, 50, 51, 52, 55, 58, 59, 60, 62, 64, 65, 66, 68, 69, 72, 75, 76, 77, 81, 82, 83, 84, 87, 89, 90, 91, 92, 94, 95, 99, 102, 103, 104, 108, 109, 110, 111, 112, 115, 119, 121, 123, 124, 126, 127, 130, 135, 136, 137, 141, 142, 143, 144, 147, 150, 151, 152, 153, 155, 156, 157, 159, 160, 163, 168, 169, 170, 174, 175, 176, 177, 180, 183, 184, 185, 186, 188, 189, 190, 192, 193, 197, 200, 201, 202, 206, 207, 208, 209, 213, 217, 218, 219, 220, 221, 222, 224, 225, 228, 233, 234, 235, 239, 240, 241, 242, 245, 248, 249, 250, 251, 253, 254, 255, 257, 258, 261, 266, 267, 268, 272, 273, 274, 275, 278, 281, 282, 283, 284, 286, 287, 288, 290, 291, 294, 299, 300, 301, 305, 306, 307, 308, 311, 314, 315, 316, 317, 319, 320, 321, 323, 324, 327, 332, 333, 334, 338, 339, 340, 341, 344, 347, 348, 349, 351, 353, 354, 355, 357, 358, 361, 366, 367, 368, 372, 373, 374, 375, 378, 381, 382, 383, 384, 386, 387, 388, 390, 391, 394, 399, 400, 401, 405, 406, 407, 408, 411, 414, 415, 416, 417, 419, 420, 421, 423, 424, 427, 432, 433, 434, 438, 439, 440, 441, 444, 447, 448, 449, 450, 451, 452, 453, 455, 456, 460, 462, 463, 467, 471, 473, 474, 479, 481, 482, 483, 487, 488, 489, 490, 493, 495, 496, 497, 498, 499, 501, 502, 505, 506, 507, 508, 509, 510, 511, 514, 516, 517, 522, 523, 526, 530, 531, 532, 537, 538, 543, 544, 548, 558, 564, 565, 568, 569, 572, 573, 577, 578, 579, 580, 581, 582, 583, 646, 647, 654, 698, 704, 733, 737, 744, 827, 828, 829, 852, 854, 855, 856, 858, 862, 863, 869, 870, 872, 873, 876, 878, 879, 880, 881, 882, 884, 885, 888, 891, 893, 894, 895, 897, 901, 902, 908, 909, 911, 912, 915, 917, 918, 919, 920, 921, 923, 924, 929, 931, 932, 933, 935, 939, 940, 946, 947, 949, 950, 953, 955, 956, 957, 958, 959, 961, 962, 967, 969, 970, 971, 973, 977, 978, 984, 985, 987, 988, 991, 993, 994, 995, 996, 997, 999, 1000, 1005, 1007, 1008, 1009, 1011, 1015, 1016, 1017, 1018, 1024, 1025, 1027, 1028, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1043, 1046, 1048, 1049, 1050, 1052, 1056, 1057, 1063, 1064, 1066, 1067, 1070, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1085, 1087, 1088, 1089, 1091, 1095, 1096, 1102, 1103, 1105, 1106, 1109, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1123, 1125, 1126, 1127, 1129, 1133, 1134, 1140, 1141, 1143, 1144, 1147, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1161, 1163, 1164, 1165, 1167, 1171, 1172, 1178, 1179, 1181, 1182, 1185, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1211, 1214, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1230, 1232, 1233, 1234, 1240, 1241, 1242, 1243, 1246, 1250, 1251, 1252, 1253, 1255, 1256, 1258, 1264, 1266, 1267, 1268, 1274, 1275, 1276, 1277, 1280, 1284, 1285, 1286, 1287, 1289, 1290, 1292, 1298, 1300, 1301, 1302, 1308, 1309, 1310, 1311, 1314, 1318, 1319, 1320, 1321, 1323, 1324, 1326, 1330, 1332, 1333, 1334, 1338, 1339, 1340, 1341, 1344, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1360, 1362, 1363, 1364, 1370, 1371, 1372, 1373, 1376, 1380, 1381, 1382, 1383, 1385, 1386, 1391, 1393, 1394, 1395, 1399, 1400, 1401, 1402, 1405, 1407, 1408, 1409, 1410, 1411, 1413, 1414, 1419, 1421, 1422, 1423, 1427, 1428, 1429, 1430, 1433, 1435, 1436, 1437, 1438, 1439, 1441, 1442, 1447, 1449, 1450, 1451, 1455, 1456, 1457, 1458, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1477, 1479, 1480, 1481, 1487, 1488, 1489, 1490, 1493, 1497, 1498, 1499, 1500, 1502, 1503, 1505, 1509, 1511, 1512, 1513, 1517, 1518, 1519, 1520, 1523, 1525, 1526, 1527, 1528, 1529, 1531, 1532, 1539, 1541, 1542, 1543, 1549, 1550, 1551, 1552, 1555, 1559, 1560, 1561, 1562, 1564, 1565, 1567, 1571, 1573, 1574, 1575, 1579, 1580, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1593, 1594, 1604, 1612, 1617, 1629, 1630, 1632, 1633, 1637, 1653, 1665, 1671, 1672, 1674, 1676, 1678, 1688, 1690, 1691, 1696, 1697, 1700, 1702, 1703, 1708, 1709, 1711, 1714, 1716, 1717, 1722, 1723, 1736, 1739, 1741, 1754, 1775, 1778, 1779, 1780, 1785, 1788, 1789, 1790, 1791], "would": [6, 7, 11, 17, 19, 21, 24, 25, 27, 29, 30, 647, 832, 1653], "overwrit": [6, 24, 29, 30, 32, 59, 60, 89, 90, 119, 120, 121, 122, 151, 152, 184, 185, 217, 218, 219, 220, 249, 250, 282, 283, 315, 316, 348, 349, 382, 383, 415, 416, 448, 449, 497, 510, 758, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589], "advantag": [6, 29, 887], "regener": [6, 10, 15, 20, 21, 28, 29, 30, 477, 478, 496, 541, 542, 544, 729, 850, 851, 879, 889, 890, 918, 927, 928, 956, 965, 966, 994, 1003, 1004, 1034, 1044, 1045, 1073, 1083, 1084, 1112, 1121, 1122, 1150, 1159, 1160, 1188, 1198, 1199, 1217, 1227, 1228, 1250, 1261, 1262, 1284, 1295, 1296, 1318, 1328, 1329, 1347, 1357, 1358, 1380, 1389, 1390, 1408, 1417, 1418, 1436, 1445, 1446, 1464, 1474, 1475, 1497, 1507, 1508, 1526, 1536, 1537, 1559, 1569, 1570, 1588], "programmat": 6, "b": [6, 10, 19, 21, 24, 32, 34, 37, 58, 129, 150, 162, 183, 227, 248, 260, 281, 293, 314, 326, 360, 393, 426, 447, 553, 589, 668, 724, 731, 769, 825, 837, 843, 860, 861, 899, 900, 937, 938, 975, 976, 1013, 1014, 1054, 1055, 1093, 1094, 1131, 1132, 1169, 1170, 1598, 1600, 1602, 1603, 1604, 1606, 1608, 1610, 1627, 1628, 1650, 1651, 1680], "save": [6, 7, 17, 29, 33, 556, 558, 564, 565, 567, 571, 572, 573, 864, 866, 903, 905, 941, 943, 979, 981, 1019, 1021, 1058, 1060, 1097, 1099, 1120, 1135, 1137, 1173, 1175, 1624, 1671, 1676, 1776, 1784, 1788, 1789], "file": [6, 14, 25, 33, 35, 552, 553, 556, 557, 558, 560, 564, 565, 566, 567, 569, 570, 571, 572, 573, 1613, 1774, 1783, 1788, 1789], "retain": [6, 32], "parametr": 6, "studi": [6, 10, 27, 32], "easili": [6, 8, 28, 32, 35, 195], "hard": [6, 17], "previous": [6, 29, 35], "revers": [6, 196, 1736, 1754], "look": [6, 8, 10, 17, 21, 22, 24, 27, 28, 29, 30, 31, 35, 195, 652, 758, 776, 798, 887, 1618, 1676, 1687, 1783, 1788], "up": [6, 8, 11, 17, 22, 26, 27, 28, 30, 32, 35, 195, 758, 776, 783, 798], "random": [6, 7, 8, 9, 10, 12, 13, 15, 19, 20, 21, 26, 28, 29, 30, 32, 33, 577, 578, 579, 580, 581, 582, 583, 647, 651, 653, 655, 702, 703, 705, 717, 718, 720, 728, 729, 733, 740, 812, 837, 854, 855, 887, 893, 894, 931, 932, 964, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1158, 1163, 1164, 1645, 1648, 1682], "correspond": [6, 9, 20, 26, 27, 28, 29, 30, 31, 32, 53, 85, 113, 145, 178, 211, 243, 276, 309, 342, 376, 409, 442, 468, 477, 491, 520, 525, 535, 541, 557, 565, 568, 655, 705, 712, 732, 735, 740, 751, 758, 762, 783, 850, 854, 855, 858, 860, 861, 874, 889, 893, 894, 897, 899, 900, 913, 927, 931, 932, 935, 937, 938, 951, 965, 969, 970, 973, 975, 976, 989, 1002, 1003, 1007, 1008, 1011, 1013, 1014, 1029, 1044, 1048, 1049, 1052, 1054, 1055, 1068, 1083, 1087, 1088, 1091, 1093, 1094, 1107, 1121, 1125, 1126, 1129, 1131, 1132, 1145, 1159, 1163, 1164, 1167, 1169, 1170, 1183, 1198, 1212, 1227, 1244, 1261, 1278, 1295, 1312, 1328, 1342, 1357, 1374, 1389, 1403, 1417, 1431, 1445, 1459, 1474, 1491, 1507, 1521, 1536, 1553, 1569, 1583, 1616, 1622, 1624, 1649, 1658, 1694, 1706, 1720, 1786], "determin": [6, 8, 9, 10, 19, 21, 27, 31, 32, 565, 758, 827, 831, 834, 835, 887, 1618, 1632, 1633, 1634, 1635, 1638, 1640, 1801], "cumul": [6, 27, 28, 57, 149, 182, 247, 280, 313, 346, 380, 413, 446], "probabl": [6, 17, 27, 28, 30, 32], "allow": [6, 24, 25, 28, 30, 458, 554, 565, 647, 729, 758, 1259, 1293, 1416, 1630, 1743, 1774], "user": [6, 7, 12, 13, 14, 15, 24, 25, 26, 29, 30, 33, 556, 572, 729, 848, 887, 964, 1042, 1081, 1120, 1158, 1388, 1630], "instanc": [6, 17, 24, 25, 26, 27, 28, 29, 30, 477, 541, 758, 849, 850, 888, 889, 927, 965, 1003, 1043, 1044, 1082, 1083, 1120, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1416, 1417, 1445, 1472, 1474, 1507, 1534, 1536, 1569, 1604, 1612, 1630, 1647, 1737, 1740, 1774], "spatial": [6, 10, 647, 746, 751, 859, 898, 936, 974, 1012, 1053, 1092, 1120, 1130, 1168, 1631, 1656, 1659], "correl": [6, 645, 647, 731, 768, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 799, 802, 803, 804, 806, 807], "origin": [6, 7, 11, 21, 32, 33, 831, 1639, 1649, 1667, 1669, 1680, 1682, 1739], "make": [6, 7, 8, 15, 17, 21, 24, 25, 27, 28, 29, 30, 31, 50, 51, 52, 55, 82, 83, 84, 87, 109, 110, 111, 115, 142, 143, 144, 147, 175, 176, 177, 180, 207, 208, 209, 213, 240, 241, 242, 245, 273, 274, 275, 278, 306, 307, 308, 311, 339, 340, 341, 344, 373, 374, 375, 378, 406, 407, 408, 411, 439, 440, 441, 444, 488, 489, 490, 493, 506, 507, 508, 509, 825, 827, 837, 870, 872, 873, 876, 909, 911, 912, 915, 947, 949, 950, 953, 985, 987, 988, 991, 1025, 1027, 1028, 1031, 1064, 1066, 1067, 1070, 1103, 1105, 1106, 1109, 1141, 1143, 1144, 1147, 1179, 1181, 1182, 1185, 1209, 1210, 1211, 1214, 1241, 1242, 1243, 1246, 1275, 1276, 1277, 1280, 1309, 1310, 1311, 1314, 1339, 1340, 1341, 1344, 1371, 1372, 1373, 1376, 1400, 1401, 1402, 1405, 1428, 1429, 1430, 1433, 1456, 1457, 1458, 1461, 1488, 1489, 1490, 1493, 1518, 1519, 1520, 1523, 1550, 1551, 1552, 1555, 1580, 1581, 1582, 1585, 1613, 1616, 1646, 1653, 1654, 1655, 1778], "sure": [6, 8, 19, 28, 35, 1616], "afterward": 6, "pore_se": [6, 15, 28, 29, 651, 702, 728], "num_rang": [6, 15, 28, 29, 577, 578, 579, 580, 581, 582, 583, 646, 654, 698, 704, 737], "99": [6, 25, 28, 32], "ve": [6, 35], "settl": 6, "should": [6, 8, 11, 15, 21, 24, 26, 27, 28, 31, 32, 35, 50, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 82, 83, 84, 87, 88, 89, 90, 92, 109, 110, 111, 115, 116, 119, 120, 121, 122, 124, 142, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 157, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 207, 208, 209, 213, 214, 217, 218, 219, 222, 240, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 255, 273, 274, 275, 278, 279, 280, 282, 283, 284, 285, 286, 288, 306, 307, 308, 311, 312, 313, 315, 316, 317, 318, 319, 321, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 388, 406, 407, 408, 411, 412, 413, 415, 416, 417, 418, 419, 421, 439, 440, 441, 444, 445, 446, 448, 449, 450, 451, 453, 470, 477, 478, 488, 489, 490, 493, 494, 496, 497, 499, 506, 507, 508, 509, 510, 511, 525, 529, 541, 542, 544, 553, 554, 566, 568, 596, 601, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 630, 633, 637, 638, 640, 644, 647, 717, 718, 738, 739, 758, 831, 834, 835, 850, 851, 859, 870, 872, 873, 876, 877, 879, 880, 882, 888, 889, 890, 898, 909, 911, 912, 915, 916, 918, 919, 921, 927, 928, 936, 947, 949, 950, 953, 954, 956, 957, 959, 965, 966, 974, 985, 987, 988, 991, 992, 994, 995, 997, 1003, 1004, 1012, 1015, 1016, 1025, 1027, 1028, 1031, 1032, 1034, 1035, 1037, 1043, 1044, 1045, 1053, 1064, 1066, 1067, 1070, 1071, 1073, 1074, 1076, 1083, 1084, 1092, 1103, 1105, 1106, 1109, 1110, 1112, 1113, 1115, 1121, 1122, 1130, 1141, 1143, 1144, 1147, 1148, 1150, 1151, 1153, 1159, 1160, 1168, 1179, 1181, 1182, 1185, 1186, 1188, 1189, 1191, 1198, 1199, 1209, 1210, 1211, 1214, 1215, 1217, 1218, 1220, 1227, 1228, 1241, 1242, 1243, 1246, 1247, 1250, 1251, 1253, 1261, 1262, 1275, 1276, 1277, 1280, 1281, 1284, 1285, 1287, 1295, 1296, 1309, 1310, 1311, 1314, 1315, 1318, 1319, 1321, 1328, 1329, 1339, 1340, 1341, 1344, 1345, 1347, 1348, 1350, 1357, 1358, 1371, 1372, 1373, 1376, 1377, 1380, 1381, 1383, 1389, 1390, 1400, 1401, 1402, 1405, 1406, 1408, 1409, 1411, 1417, 1418, 1428, 1429, 1430, 1433, 1434, 1436, 1437, 1439, 1445, 1446, 1456, 1457, 1458, 1461, 1462, 1464, 1465, 1467, 1474, 1475, 1488, 1489, 1490, 1493, 1494, 1497, 1498, 1500, 1507, 1508, 1518, 1519, 1520, 1523, 1524, 1526, 1527, 1529, 1536, 1537, 1550, 1551, 1552, 1555, 1556, 1559, 1560, 1562, 1569, 1570, 1580, 1581, 1582, 1585, 1586, 1588, 1589, 1591, 1612, 1613, 1616, 1620, 1624, 1639, 1646, 1647, 1649, 1651, 1657, 1685, 1794], "alwai": [6, 26, 28, 32, 57, 149, 182, 247, 280, 313, 346, 380, 413, 446, 964, 1650, 1651], "less": [6, 11, 26, 28, 718], "than": [6, 7, 22, 25, 26, 28, 29, 30, 32, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 98, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 355, 366, 373, 374, 375, 378, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 453, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 570, 762, 765, 789, 807, 856, 860, 864, 866, 870, 872, 873, 876, 882, 895, 899, 903, 905, 909, 911, 912, 915, 921, 933, 937, 941, 943, 947, 949, 950, 953, 959, 971, 975, 979, 981, 985, 987, 988, 991, 997, 1009, 1013, 1019, 1021, 1025, 1027, 1028, 1031, 1037, 1050, 1054, 1058, 1060, 1064, 1066, 1067, 1070, 1076, 1089, 1093, 1097, 1099, 1103, 1105, 1106, 1109, 1115, 1127, 1131, 1135, 1137, 1141, 1143, 1144, 1147, 1153, 1165, 1169, 1173, 1175, 1179, 1181, 1182, 1185, 1191, 1202, 1209, 1210, 1211, 1214, 1220, 1232, 1241, 1242, 1243, 1246, 1253, 1266, 1275, 1276, 1277, 1280, 1287, 1300, 1309, 1310, 1311, 1314, 1321, 1332, 1339, 1340, 1341, 1344, 1350, 1362, 1371, 1372, 1373, 1376, 1383, 1393, 1400, 1401, 1402, 1405, 1411, 1421, 1428, 1429, 1430, 1433, 1439, 1449, 1456, 1457, 1458, 1461, 1467, 1479, 1488, 1489, 1490, 1493, 1500, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1623, 1627, 1628], "equal": [6, 7, 21, 24, 26, 723, 829, 834, 835, 887, 1640, 1736, 1754], "thei": [6, 10, 11, 12, 13, 14, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 98, 529, 553, 572, 647, 652, 657, 658, 659, 660, 758, 834, 835, 837, 848, 849, 857, 859, 861, 887, 888, 896, 898, 900, 934, 936, 938, 972, 974, 976, 1002, 1010, 1012, 1014, 1043, 1051, 1053, 1055, 1081, 1082, 1090, 1092, 1094, 1120, 1128, 1130, 1132, 1158, 1166, 1168, 1170, 1229, 1263, 1297, 1359, 1388, 1416, 1476, 1538, 1614, 1640, 1645, 1647, 1651, 1652, 1739, 1740], "connect": [6, 10, 21, 22, 25, 26, 28, 31, 32, 33, 98, 554, 711, 712, 717, 718, 749, 750, 753, 754, 756, 827, 829, 848, 854, 855, 857, 858, 859, 887, 893, 894, 896, 897, 898, 926, 931, 932, 934, 935, 936, 964, 969, 970, 972, 973, 974, 1002, 1007, 1008, 1010, 1011, 1012, 1016, 1042, 1048, 1049, 1051, 1052, 1053, 1081, 1087, 1088, 1090, 1091, 1092, 1120, 1125, 1126, 1128, 1129, 1130, 1158, 1163, 1164, 1166, 1167, 1168, 1613, 1614, 1615, 1616, 1617, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1637, 1640, 1646, 1647, 1648, 1652, 1653, 1658], "otherwis": [6, 53, 67, 85, 93, 113, 125, 145, 158, 178, 191, 211, 223, 243, 256, 276, 289, 309, 322, 342, 356, 376, 389, 409, 422, 442, 454, 468, 472, 491, 500, 520, 535, 570, 780, 805, 859, 871, 874, 883, 898, 910, 913, 922, 936, 948, 951, 960, 974, 986, 989, 998, 1012, 1026, 1029, 1038, 1053, 1065, 1068, 1077, 1092, 1104, 1107, 1116, 1130, 1142, 1145, 1154, 1168, 1180, 1183, 1192, 1212, 1221, 1237, 1244, 1254, 1271, 1278, 1288, 1305, 1312, 1322, 1342, 1351, 1367, 1374, 1384, 1403, 1412, 1431, 1440, 1459, 1468, 1484, 1491, 1501, 1521, 1530, 1546, 1553, 1563, 1583, 1592, 1640, 1672, 1674, 1678, 1694, 1706, 1713, 1720, 1786, 1793, 1801], "re": [6, 15, 17, 26, 28, 30, 35, 117, 646, 654, 704, 734, 737, 758], "realli": [6, 24, 26, 27, 28, 29, 32], "break": [6, 17, 26, 32], "happen": [6, 15, 28, 29, 30, 31, 717, 718], "d": [6, 8, 19, 22, 24, 26, 27, 30, 38, 42, 48, 53, 69, 70, 72, 74, 80, 85, 95, 96, 99, 101, 107, 113, 127, 128, 130, 134, 140, 145, 160, 161, 163, 167, 173, 178, 193, 194, 197, 199, 205, 211, 225, 226, 228, 232, 238, 243, 258, 259, 261, 265, 271, 276, 291, 292, 294, 298, 304, 309, 324, 325, 327, 331, 337, 342, 358, 359, 361, 365, 371, 376, 391, 392, 394, 398, 404, 409, 424, 425, 427, 431, 437, 442, 456, 457, 460, 461, 466, 468, 474, 475, 479, 480, 486, 491, 502, 503, 514, 515, 518, 519, 520, 523, 524, 526, 527, 533, 534, 535, 538, 539, 553, 768, 796, 825, 852, 853, 868, 874, 885, 886, 891, 892, 907, 913, 924, 925, 929, 930, 945, 951, 962, 963, 967, 968, 983, 989, 1000, 1001, 1005, 1006, 1023, 1029, 1040, 1041, 1046, 1047, 1062, 1068, 1079, 1080, 1085, 1086, 1101, 1107, 1118, 1119, 1123, 1124, 1139, 1145, 1156, 1157, 1161, 1162, 1177, 1183, 1194, 1195, 1200, 1201, 1207, 1212, 1223, 1224, 1230, 1231, 1239, 1244, 1256, 1257, 1264, 1265, 1273, 1278, 1290, 1291, 1298, 1299, 1307, 1312, 1324, 1325, 1330, 1331, 1337, 1342, 1353, 1354, 1360, 1361, 1369, 1374, 1386, 1387, 1391, 1392, 1398, 1403, 1414, 1415, 1419, 1420, 1426, 1431, 1442, 1443, 1447, 1448, 1454, 1459, 1470, 1471, 1477, 1478, 1486, 1491, 1503, 1504, 1509, 1510, 1516, 1521, 1532, 1533, 1539, 1540, 1548, 1553, 1565, 1566, 1571, 1572, 1578, 1583, 1594, 1595, 1680, 1682, 1688, 1689, 1692, 1693, 1694, 1697, 1698, 1700, 1701, 1704, 1705, 1706, 1711, 1712, 1713, 1714, 1715, 1718, 1719, 1720, 1723, 1724, 1775, 1781, 1782, 1786, 1791, 1792, 1795, 1807], "check": [6, 24, 26, 31, 32, 67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 472, 500, 758, 883, 922, 960, 998, 1038, 1077, 1116, 1154, 1192, 1221, 1229, 1254, 1263, 1288, 1297, 1322, 1351, 1359, 1384, 1412, 1440, 1468, 1476, 1501, 1530, 1538, 1563, 1592, 1630, 1637, 1638, 1641, 1687, 1793, 1794, 1801, 1803], "consist": [6, 11, 22, 26, 31, 553, 557, 621, 636, 1355, 1740], "carefulli": [6, 31, 32, 1647], "ensur": [6, 7, 9, 11, 26, 28, 30, 32, 67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 472, 495, 500, 529, 543, 758, 878, 883, 917, 922, 955, 960, 993, 998, 1033, 1038, 1072, 1077, 1111, 1116, 1149, 1154, 1187, 1192, 1216, 1221, 1248, 1254, 1282, 1288, 1316, 1322, 1346, 1351, 1378, 1384, 1407, 1412, 1435, 1440, 1463, 1468, 1495, 1501, 1525, 1530, 1557, 1563, 1587, 1592, 1740, 1806], "thoat": 6, "smaller": [6, 28], "provid": [6, 10, 11, 20, 27, 28, 29, 30, 31, 32, 34, 39, 48, 59, 70, 73, 80, 89, 96, 100, 107, 119, 128, 131, 140, 151, 161, 164, 173, 184, 194, 198, 205, 217, 218, 220, 226, 229, 238, 249, 259, 262, 271, 282, 292, 295, 304, 315, 325, 328, 337, 348, 359, 362, 371, 382, 392, 395, 404, 415, 425, 428, 437, 448, 457, 466, 475, 486, 503, 512, 518, 519, 524, 533, 534, 539, 540, 557, 646, 650, 651, 652, 653, 654, 655, 698, 701, 702, 703, 704, 705, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 868, 886, 907, 925, 926, 945, 963, 983, 1001, 1023, 1041, 1062, 1080, 1101, 1119, 1139, 1157, 1177, 1195, 1207, 1224, 1239, 1257, 1258, 1273, 1291, 1292, 1307, 1325, 1326, 1337, 1354, 1369, 1387, 1398, 1415, 1416, 1426, 1443, 1454, 1471, 1486, 1504, 1505, 1516, 1533, 1548, 1566, 1567, 1578, 1595, 1624, 1629, 1630, 1692, 1693, 1698, 1704, 1705, 1712, 1718, 1719, 1724, 1737, 1774, 1781, 1782, 1789, 1792, 1798, 1799], "call": [6, 8, 10, 11, 13, 15, 17, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 58, 59, 67, 89, 93, 119, 125, 150, 151, 158, 183, 184, 191, 217, 223, 248, 249, 256, 281, 282, 289, 314, 315, 322, 347, 348, 356, 381, 382, 389, 414, 415, 422, 447, 448, 454, 458, 472, 477, 495, 500, 513, 525, 529, 541, 543, 655, 705, 740, 758, 850, 878, 883, 889, 917, 922, 927, 955, 960, 965, 993, 998, 1003, 1033, 1038, 1044, 1072, 1077, 1083, 1111, 1116, 1121, 1149, 1154, 1159, 1187, 1192, 1198, 1216, 1221, 1227, 1248, 1249, 1254, 1261, 1282, 1283, 1288, 1295, 1316, 1317, 1322, 1328, 1346, 1351, 1357, 1378, 1379, 1384, 1389, 1407, 1412, 1417, 1435, 1440, 1445, 1463, 1468, 1474, 1495, 1496, 1501, 1507, 1525, 1530, 1536, 1557, 1558, 1563, 1569, 1587, 1592], "from_neighbor_por": [6, 28, 29, 577, 578, 579, 580, 581, 582, 583], "either": [6, 13, 19, 21, 24, 26, 27, 28, 30, 31, 32, 67, 69, 93, 95, 98, 125, 127, 158, 160, 191, 193, 223, 225, 256, 258, 289, 291, 322, 324, 356, 358, 389, 391, 393, 422, 424, 454, 456, 472, 474, 500, 502, 523, 538, 556, 732, 769, 831, 883, 885, 922, 924, 960, 962, 964, 998, 1000, 1002, 1038, 1040, 1077, 1079, 1116, 1118, 1154, 1156, 1158, 1192, 1194, 1221, 1223, 1226, 1249, 1254, 1256, 1260, 1283, 1288, 1290, 1294, 1317, 1322, 1324, 1351, 1353, 1356, 1379, 1384, 1386, 1412, 1414, 1440, 1442, 1468, 1470, 1473, 1496, 1501, 1503, 1530, 1532, 1535, 1558, 1563, 1565, 1592, 1594, 1612, 1619, 1622, 1624, 1626, 1639, 1642, 1665, 1676, 1697, 1711, 1723, 1737, 1772, 1791], "minimum": [6, 28, 650, 698, 701, 726, 727, 832, 1645, 1648], "mayb": 6, "down": [6, 17, 22, 26, 32], "distinct": 6, "demonstr": [6, 12, 20, 27, 28, 29, 30, 31, 32, 33], "min": [6, 28, 29, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 577, 578, 579, 580, 581, 582, 583, 650, 697, 698, 701, 726, 727, 867, 906, 944, 982, 1022, 1061, 1100, 1138, 1176, 1206, 1238, 1272, 1306, 1336, 1368, 1397, 1425, 1453, 1485, 1515, 1547, 1577], "throat_siz": [6, 28, 29], "diameter_2": 6, "carefuli": 6, "chosen": [6, 30, 1647], "reason": [6, 11, 15, 17, 20, 22, 24, 27, 28, 30, 31], "mention": [6, 21], "If": [6, 17, 19, 21, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 49, 50, 51, 52, 53, 55, 57, 59, 61, 62, 64, 66, 68, 69, 73, 81, 82, 83, 84, 85, 87, 89, 92, 94, 95, 100, 108, 109, 110, 111, 113, 115, 119, 120, 122, 124, 126, 127, 131, 141, 142, 143, 144, 145, 147, 149, 151, 153, 155, 157, 159, 160, 164, 174, 175, 176, 177, 178, 180, 182, 184, 186, 188, 190, 192, 193, 198, 206, 207, 208, 209, 211, 213, 217, 218, 220, 222, 224, 225, 229, 239, 240, 241, 242, 243, 245, 247, 249, 251, 253, 255, 257, 258, 262, 272, 273, 274, 275, 276, 278, 280, 282, 284, 286, 288, 290, 291, 295, 305, 306, 307, 308, 309, 311, 313, 315, 317, 319, 321, 323, 324, 328, 338, 339, 340, 341, 342, 344, 346, 347, 348, 350, 351, 353, 355, 357, 358, 362, 372, 373, 374, 375, 376, 378, 380, 381, 382, 384, 386, 388, 390, 391, 395, 405, 406, 407, 408, 409, 411, 413, 414, 415, 417, 419, 421, 423, 424, 428, 438, 439, 440, 441, 442, 444, 446, 448, 450, 451, 453, 455, 456, 467, 468, 473, 474, 477, 487, 488, 489, 490, 491, 493, 495, 499, 501, 502, 506, 507, 508, 509, 511, 520, 523, 535, 538, 541, 543, 549, 557, 568, 570, 572, 652, 698, 701, 724, 726, 744, 761, 762, 763, 764, 765, 767, 768, 769, 772, 774, 780, 783, 785, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 803, 804, 805, 806, 807, 813, 827, 831, 837, 848, 850, 854, 855, 857, 859, 860, 861, 864, 866, 869, 870, 871, 872, 873, 874, 876, 878, 882, 884, 885, 887, 889, 893, 894, 896, 898, 899, 900, 903, 905, 908, 909, 910, 911, 912, 913, 915, 917, 921, 923, 924, 926, 927, 931, 932, 934, 936, 937, 938, 941, 943, 946, 947, 948, 949, 950, 951, 953, 955, 959, 961, 962, 964, 965, 969, 970, 972, 974, 975, 976, 979, 981, 984, 985, 986, 987, 988, 989, 991, 993, 997, 999, 1000, 1003, 1007, 1008, 1010, 1012, 1013, 1014, 1015, 1016, 1019, 1021, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1033, 1037, 1039, 1040, 1042, 1044, 1048, 1049, 1051, 1053, 1054, 1055, 1058, 1060, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1072, 1076, 1078, 1079, 1081, 1083, 1087, 1088, 1090, 1092, 1093, 1094, 1097, 1099, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1115, 1117, 1118, 1120, 1121, 1125, 1126, 1128, 1130, 1131, 1132, 1135, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1153, 1155, 1156, 1158, 1159, 1163, 1164, 1166, 1168, 1169, 1170, 1173, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1187, 1191, 1193, 1194, 1198, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1220, 1222, 1223, 1227, 1237, 1240, 1241, 1242, 1243, 1244, 1246, 1248, 1253, 1255, 1256, 1258, 1261, 1271, 1274, 1275, 1276, 1277, 1278, 1280, 1282, 1287, 1289, 1290, 1292, 1295, 1305, 1308, 1309, 1310, 1311, 1312, 1314, 1316, 1321, 1323, 1324, 1326, 1328, 1338, 1339, 1340, 1341, 1342, 1344, 1346, 1350, 1352, 1353, 1357, 1367, 1370, 1371, 1372, 1373, 1374, 1376, 1378, 1383, 1385, 1386, 1389, 1399, 1400, 1401, 1402, 1403, 1405, 1407, 1411, 1413, 1414, 1416, 1417, 1427, 1428, 1429, 1430, 1431, 1433, 1435, 1439, 1441, 1442, 1445, 1455, 1456, 1457, 1458, 1459, 1461, 1463, 1467, 1469, 1470, 1474, 1484, 1487, 1488, 1489, 1490, 1491, 1493, 1495, 1500, 1502, 1503, 1505, 1507, 1517, 1518, 1519, 1520, 1521, 1523, 1525, 1529, 1531, 1532, 1536, 1546, 1549, 1550, 1551, 1552, 1553, 1555, 1557, 1562, 1564, 1565, 1567, 1569, 1579, 1580, 1581, 1582, 1583, 1585, 1587, 1591, 1593, 1594, 1612, 1616, 1617, 1622, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1637, 1639, 1640, 1650, 1651, 1652, 1653, 1672, 1674, 1678, 1687, 1694, 1697, 1706, 1711, 1713, 1720, 1723, 1736, 1739, 1754, 1762, 1769, 1778, 1785, 1786, 1788, 1789, 1791, 1798, 1799], "some": [6, 10, 11, 12, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 458, 512, 549, 738, 758, 832, 834, 835, 1120, 1416, 1630, 1651, 1653], "unhappi": 6, "reduc": [6, 11, 29, 32, 129, 1617], "small": [6, 14, 19, 25, 27, 28, 32, 565], "after": [6, 7, 8, 10, 22, 28, 30, 32, 33, 572, 652, 1619, 1658], "illustr": [6, 10, 21, 24, 25, 26, 27, 28, 30, 31, 32, 651, 653, 655, 702, 703, 705, 728, 733, 740, 1653], "power": [6, 21, 28, 29, 32, 647, 780, 805, 1237, 1271, 1305, 1367, 1484, 1546], "util": [6, 28, 30, 1713, 1725, 1800], "properli": [6, 7, 35], "instead": [6, 15, 19, 22, 24, 27, 28, 29, 30, 31, 1664, 1666, 1668, 1670, 1673, 1675, 1677, 1679, 1681, 1683, 1684, 1686], "essenti": [6, 26, 27, 28, 29, 458, 554, 1614, 1631, 1651, 1652], "done": [6, 8, 10, 17, 19, 24, 25, 26, 27, 28, 31, 32, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 569, 758, 867, 906, 944, 982, 1022, 1061, 1100, 1138, 1176, 1206, 1238, 1272, 1306, 1336, 1368, 1397, 1425, 1453, 1485, 1515, 1547, 1577], "plot": [6, 7, 10, 12, 13, 25, 27, 28, 29, 32], "itself": [6, 17, 27, 28, 58, 150, 183, 248, 281, 314, 447, 512, 1617, 1736, 1754, 1764, 1771, 1773], "ahould": 6, "ideal": [6, 24, 758, 761], "paraview": [6, 25, 35, 571, 572], "plot_networkx": 6, "ig": 6, "fri": 7, "combarn": 7, "1971": 7, "longitudin": 7, "c_": [7, 21, 129, 834, 835], "erfc": 7, "bigl": 7, "ut": 7, "d_": [7, 8, 9, 12, 19, 22, 129, 621], "bigr": 7, "exp": [7, 834, 835, 840], "ux": 7, "time": [7, 8, 11, 17, 22, 24, 26, 27, 28, 29, 32, 33, 195, 347, 381, 414, 477, 541, 549, 646, 654, 704, 737, 850, 889, 927, 965, 1003, 1044, 1083, 1120, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1624, 1789], "u": [7, 24, 25, 27], "averag": [7, 8, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 647, 670, 671, 771, 773, 776, 829, 867, 906, 944, 982, 1022, 1061, 1100, 1138, 1176, 1206, 1238, 1272, 1306, 1336, 1368, 1397, 1425, 1453, 1485, 1515, 1547, 1577, 1648], "veloc": 7, "concentr": [7, 8, 9, 19, 21, 22, 26, 33, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 783, 785, 834, 835], "complementari": [7, 25], "error": [7, 11, 21, 24, 26, 28, 30, 63, 154, 187, 252, 285, 318, 352, 385, 418], "implement": [7, 12, 21, 26, 30, 227, 426, 758, 828, 829], "fit": [7, 8, 30], "special": [7, 11, 28, 31, 32, 1416], "optim": [7, 195, 1015, 1016], "curve_fit": 7, "2d": [7, 29, 558, 596, 601, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 630, 633, 637, 638, 640, 644, 695, 710, 887, 964, 1002, 1158, 1618, 1631, 1639, 1650, 1654], "3d": [7, 29, 565, 647, 964, 1618, 1631, 1639, 1650, 1651], "well": [7, 8, 19, 22, 25, 26, 27, 28, 29, 30, 31, 32, 61, 350, 553, 836, 838, 839, 840, 841, 842, 843, 864, 866, 903, 905, 941, 943, 964, 979, 981, 1016, 1019, 1021, 1058, 1060, 1097, 1099, 1135, 1137, 1158, 1173, 1175, 1631, 1660], "etc": [7, 8, 12, 13, 22, 26, 29, 31, 33, 736, 758, 1645], "entri": [7, 12, 13, 19, 21, 27, 28, 32, 195, 525, 735, 758, 812, 813, 827, 864, 903, 941, 979, 1019, 1058, 1097, 1135, 1173, 1687, 1793, 1801], "40": [7, 10, 29, 31, 32, 789, 825], "electrical_conduct": [7, 593, 820, 821], "accumul": 7, "mass": [7, 19, 21, 22, 31, 761, 764, 777, 782, 834], "occur": [7, 17, 26, 28, 30, 31, 32, 129, 195, 1650], "order": [7, 21, 26, 27, 28, 30, 32, 54, 59, 86, 89, 114, 119, 146, 151, 179, 184, 195, 212, 217, 218, 220, 244, 249, 277, 282, 310, 315, 343, 348, 377, 382, 410, 415, 443, 448, 469, 492, 495, 521, 525, 529, 536, 543, 735, 827, 857, 861, 875, 878, 896, 900, 914, 917, 934, 938, 952, 955, 972, 976, 990, 993, 1010, 1014, 1030, 1033, 1051, 1055, 1069, 1072, 1090, 1094, 1108, 1111, 1128, 1132, 1146, 1149, 1166, 1170, 1184, 1187, 1213, 1216, 1245, 1248, 1279, 1282, 1313, 1316, 1343, 1346, 1375, 1378, 1404, 1407, 1432, 1435, 1460, 1463, 1492, 1495, 1522, 1525, 1554, 1557, 1584, 1587, 1630, 1648, 1695, 1707, 1721, 1736, 1754, 1787], "surround": [7, 812], "its": [7, 11, 12, 22, 25, 28, 29, 30, 32, 33, 98, 747, 748, 758, 769, 787, 788, 1615], "def": [7, 12, 13, 15, 24, 30, 1680, 1682, 1800], "effective_pore_volum": 7, "throat_volum": [7, 11, 28, 664], "pore_volum": [7, 11, 28, 29, 649, 664], "pvol": 7, "tvol": 7, "vtot": 7, "sum": [7, 8, 11, 12, 13, 24, 27, 28, 31, 57, 149, 182, 247, 280, 313, 346, 380, 413, 446, 739, 781, 871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180], "assert": 7, "isclos": 7, "effective_volum": 7, "field": [7, 1795, 1807], "therefor": [7, 9, 11, 12, 13, 20, 22, 26, 32, 553, 600, 602, 834, 835], "netwok": 7, "prior": [7, 32], "advectiondiffus": [7, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "algorthim": 7, "50": [7, 10, 11, 22, 27, 28, 30, 32, 651, 653, 655, 702, 703, 705, 728, 733, 740], "rang": [7, 12, 13, 15, 24, 28, 32, 34, 1631, 1733, 1751], "timestep": 7, "tell": [7, 17, 21, 24, 27, 28, 32], "rather": [7, 21, 28, 32, 762, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1623, 1627, 1628], "default": [7, 20, 24, 29, 30, 31, 33, 35, 43, 45, 50, 56, 57, 59, 60, 61, 62, 63, 64, 65, 75, 77, 82, 88, 89, 90, 91, 102, 104, 109, 116, 119, 120, 121, 122, 123, 135, 137, 142, 148, 149, 151, 152, 153, 154, 155, 156, 168, 170, 175, 181, 182, 184, 185, 186, 187, 188, 189, 200, 202, 207, 214, 217, 218, 219, 220, 221, 227, 233, 235, 240, 246, 247, 249, 250, 251, 252, 253, 254, 266, 268, 273, 279, 280, 282, 283, 284, 285, 286, 287, 299, 301, 306, 312, 313, 315, 316, 317, 318, 319, 320, 332, 334, 339, 345, 346, 348, 349, 350, 351, 352, 353, 354, 366, 368, 373, 379, 380, 382, 383, 384, 385, 386, 387, 399, 401, 406, 412, 413, 415, 416, 417, 418, 419, 420, 432, 434, 439, 445, 446, 448, 449, 450, 451, 452, 463, 470, 471, 477, 478, 481, 483, 488, 494, 497, 498, 505, 506, 510, 517, 522, 528, 532, 537, 541, 542, 553, 560, 565, 566, 568, 569, 570, 572, 573, 646, 649, 650, 652, 654, 698, 700, 701, 704, 723, 726, 727, 737, 758, 780, 805, 827, 831, 848, 850, 851, 854, 855, 856, 857, 859, 860, 861, 863, 864, 866, 870, 871, 877, 880, 881, 887, 889, 890, 893, 894, 895, 896, 898, 899, 900, 902, 903, 905, 909, 910, 916, 919, 920, 927, 928, 931, 932, 933, 934, 936, 937, 938, 940, 941, 943, 947, 948, 954, 957, 958, 964, 965, 966, 969, 970, 971, 972, 974, 975, 976, 978, 979, 981, 985, 986, 992, 995, 996, 1002, 1003, 1004, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1018, 1019, 1021, 1025, 1026, 1032, 1035, 1036, 1042, 1044, 1045, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1057, 1058, 1060, 1064, 1065, 1071, 1074, 1075, 1081, 1083, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1096, 1097, 1099, 1103, 1104, 1110, 1113, 1114, 1120, 1121, 1122, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1137, 1141, 1142, 1148, 1151, 1152, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1175, 1179, 1180, 1186, 1189, 1190, 1198, 1199, 1202, 1204, 1209, 1215, 1218, 1219, 1227, 1228, 1232, 1234, 1237, 1241, 1247, 1251, 1252, 1261, 1262, 1266, 1268, 1271, 1275, 1281, 1285, 1286, 1295, 1296, 1300, 1302, 1305, 1309, 1315, 1319, 1320, 1328, 1329, 1332, 1334, 1339, 1345, 1348, 1349, 1357, 1358, 1362, 1364, 1367, 1371, 1377, 1381, 1382, 1389, 1390, 1393, 1395, 1400, 1406, 1409, 1410, 1417, 1418, 1421, 1423, 1428, 1434, 1437, 1438, 1445, 1446, 1449, 1451, 1456, 1462, 1465, 1466, 1474, 1475, 1479, 1481, 1484, 1488, 1494, 1498, 1499, 1507, 1508, 1511, 1513, 1518, 1524, 1527, 1528, 1536, 1537, 1541, 1543, 1546, 1550, 1556, 1560, 1561, 1569, 1570, 1573, 1575, 1580, 1586, 1589, 1590, 1604, 1612, 1615, 1616, 1617, 1623, 1627, 1628, 1630, 1645, 1653, 1691, 1696, 1703, 1708, 1717, 1722, 1733, 1751, 1780, 1790], "which": [7, 8, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 43, 49, 57, 71, 75, 81, 98, 102, 108, 120, 122, 129, 135, 141, 149, 168, 174, 182, 195, 200, 206, 218, 220, 233, 239, 247, 260, 266, 272, 280, 299, 305, 313, 332, 338, 346, 347, 366, 372, 380, 381, 393, 399, 405, 413, 414, 426, 432, 438, 446, 458, 459, 467, 477, 478, 481, 487, 496, 505, 512, 525, 529, 530, 541, 542, 544, 549, 553, 565, 568, 570, 572, 621, 636, 646, 650, 651, 652, 653, 654, 655, 698, 701, 702, 703, 704, 705, 717, 718, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 746, 751, 753, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 850, 851, 854, 855, 856, 858, 859, 869, 879, 887, 889, 890, 893, 894, 895, 897, 898, 908, 918, 927, 928, 931, 932, 933, 935, 936, 946, 956, 964, 965, 966, 969, 970, 971, 973, 974, 984, 994, 1002, 1003, 1004, 1007, 1008, 1009, 1011, 1012, 1024, 1034, 1044, 1045, 1048, 1049, 1050, 1052, 1053, 1063, 1073, 1081, 1083, 1084, 1087, 1088, 1089, 1091, 1092, 1102, 1112, 1120, 1121, 1122, 1125, 1126, 1127, 1129, 1130, 1140, 1150, 1158, 1159, 1160, 1163, 1164, 1165, 1167, 1168, 1178, 1188, 1197, 1198, 1199, 1202, 1208, 1217, 1226, 1227, 1228, 1232, 1240, 1250, 1259, 1260, 1261, 1262, 1266, 1274, 1284, 1293, 1294, 1295, 1296, 1300, 1308, 1318, 1328, 1329, 1332, 1338, 1347, 1355, 1356, 1357, 1358, 1362, 1370, 1380, 1388, 1389, 1390, 1393, 1399, 1408, 1416, 1417, 1418, 1421, 1427, 1436, 1445, 1446, 1449, 1455, 1464, 1473, 1474, 1475, 1479, 1487, 1497, 1507, 1508, 1511, 1517, 1526, 1535, 1536, 1537, 1541, 1549, 1559, 1568, 1569, 1570, 1573, 1579, 1588, 1612, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1623, 1626, 1629, 1630, 1639, 1640, 1645, 1646, 1647, 1648, 1651, 1652, 1653, 1657, 1667, 1669, 1672, 1674, 1678, 1680, 1682, 1685, 1737, 1783, 1788, 1793, 1794], "interv": [7, 347, 381, 414, 549], "integr": [7, 22, 31, 347, 381, 414, 549], "span": [7, 347, 381, 414, 1640, 1648], "tspan": [7, 347, 381, 414, 549], "mod": [7, 28], "ad_dif_conduct": [7, 593], "ad_dif": [7, 593], "s_scheme": [7, 810], "powerlaw": [7, 810], "transientadvectiondiffus": [7, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359], "_updat": [7, 12, 13], "set_outflow_bc": 7, "100": [7, 8, 9, 11, 24, 25, 32, 861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170], "saveat": [7, 347, 381, 414, 549], "x0": [7, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 549, 1604], "ps_front": 7, "ts_front": 7, "find_neighbor_throat": [7, 27, 29, 32, 871, 910, 948, 986, 1026, 1065, 1104, 1120, 1142, 1180], "xor": [7, 27, 29, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 355, 366, 373, 374, 375, 378, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 453, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 856, 857, 860, 861, 870, 871, 872, 873, 876, 882, 895, 896, 899, 900, 909, 910, 911, 912, 915, 921, 933, 934, 937, 938, 947, 948, 949, 950, 953, 959, 971, 972, 975, 976, 985, 986, 987, 988, 991, 997, 1009, 1010, 1013, 1014, 1025, 1026, 1027, 1028, 1031, 1037, 1050, 1051, 1054, 1055, 1064, 1065, 1066, 1067, 1070, 1076, 1089, 1090, 1093, 1094, 1103, 1104, 1105, 1106, 1109, 1115, 1127, 1128, 1131, 1132, 1141, 1142, 1143, 1144, 1147, 1153, 1165, 1166, 1169, 1170, 1179, 1180, 1181, 1182, 1185, 1191, 1202, 1209, 1210, 1211, 1214, 1220, 1232, 1241, 1242, 1243, 1246, 1253, 1266, 1275, 1276, 1277, 1280, 1287, 1300, 1309, 1310, 1311, 1314, 1321, 1332, 1339, 1340, 1341, 1344, 1350, 1362, 1371, 1372, 1373, 1376, 1383, 1393, 1400, 1401, 1402, 1405, 1411, 1421, 1428, 1429, 1430, 1433, 1439, 1449, 1456, 1457, 1458, 1461, 1467, 1479, 1488, 1489, 1490, 1493, 1500, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1623, 1627, 1628], "count": [7, 28, 51, 52, 83, 84, 110, 111, 143, 144, 176, 177, 208, 209, 241, 242, 274, 275, 307, 308, 340, 341, 374, 375, 407, 408, 440, 441, 489, 490, 507, 508, 553, 746, 857, 860, 861, 871, 872, 873, 896, 899, 900, 910, 911, 912, 934, 937, 938, 948, 949, 950, 972, 975, 976, 986, 987, 988, 1010, 1013, 1014, 1026, 1027, 1028, 1051, 1054, 1055, 1065, 1066, 1067, 1090, 1093, 1094, 1104, 1105, 1106, 1128, 1131, 1132, 1142, 1143, 1144, 1166, 1169, 1170, 1180, 1181, 1182, 1210, 1211, 1242, 1243, 1276, 1277, 1310, 1311, 1340, 1341, 1372, 1373, 1401, 1402, 1429, 1430, 1457, 1458, 1489, 1490, 1519, 1520, 1551, 1552, 1581, 1582, 1645], "c_avg": 7, "ti": 7, "c_front": 7, "q_front": 7, "append": [7, 12, 13, 24, 29, 30, 1620, 1653, 1730, 1748], "o": [7, 10, 12, 13, 29, 32, 33, 1783, 1788], "legend": [7, 12, 13, 29, 32], "set_xlabel": [7, 29], "set_ylabel": [7, 29], "being": [7, 13, 21, 24, 29, 30, 32, 63, 154, 187, 252, 285, 318, 352, 385, 418, 477, 541, 570, 731, 735, 850, 854, 855, 889, 893, 894, 927, 931, 932, 965, 969, 970, 1003, 1007, 1008, 1044, 1048, 1049, 1083, 1087, 1088, 1121, 1125, 1126, 1159, 1163, 1164, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1783, 1801], "effictivli": 7, "fittiong": 7, "v": [7, 27, 28, 30, 53, 69, 85, 95, 113, 127, 145, 160, 178, 193, 210, 211, 225, 243, 258, 276, 291, 309, 324, 342, 358, 376, 391, 409, 424, 442, 456, 468, 474, 491, 502, 520, 523, 535, 538, 834, 835, 874, 885, 913, 924, 951, 962, 989, 1000, 1029, 1040, 1068, 1079, 1107, 1118, 1145, 1156, 1183, 1194, 1212, 1223, 1244, 1256, 1278, 1290, 1312, 1324, 1342, 1353, 1374, 1386, 1403, 1414, 1431, 1442, 1459, 1470, 1491, 1503, 1521, 1532, 1553, 1565, 1583, 1594, 1694, 1697, 1706, 1711, 1720, 1723, 1786, 1791], "dl": 7, "el1": 7, "el2": 7, "el3": 7, "v_pred": 7, "q_throat": 7, "a_throat": 7, "v_throat": 7, "g": [7, 19, 22, 25, 28, 29, 30, 32, 35, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 477, 485, 541, 554, 561, 568, 668, 669, 761, 763, 764, 765, 783, 789, 792, 794, 795, 796, 800, 803, 804, 806, 807, 812, 834, 835, 848, 849, 850, 867, 888, 889, 906, 927, 944, 965, 982, 1003, 1022, 1043, 1044, 1061, 1081, 1082, 1083, 1100, 1121, 1138, 1159, 1176, 1198, 1206, 1227, 1238, 1261, 1272, 1295, 1306, 1328, 1336, 1357, 1368, 1389, 1397, 1417, 1425, 1445, 1453, 1474, 1485, 1507, 1515, 1536, 1547, 1569, 1577, 1624, 1667, 1680, 1778, 1785], "xdata": 7, "float": [7, 19, 27, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 347, 351, 353, 381, 384, 386, 414, 417, 419, 450, 451, 549, 565, 653, 655, 703, 705, 722, 731, 733, 734, 740, 746, 751, 769, 812, 827, 831, 832, 834, 835, 1226, 1260, 1294, 1356, 1473, 1535, 1623, 1653, 1680, 1682, 1801], "ydata": 7, "popt": 7, "pcov": 7, "p0": 7, "disp_coeff": 7, "v_fit": 7, "4e": [7, 25], "m": [7, 20, 22, 28, 34, 553, 589, 668, 731, 763, 764, 765, 769, 788, 789, 795, 796, 800, 807, 834, 835], "6581e": 7, "09": [7, 9, 11, 13, 28], "3610e": 7, "04": [7, 13], "0669e": 7, "05": [7, 28, 30, 586, 589, 783], "el": 7, "zero": [7, 19, 26, 27, 32, 554, 600, 602, 831, 834, 835, 848, 854, 855, 864, 866, 887, 893, 894, 903, 905, 926, 931, 932, 941, 943, 964, 969, 970, 979, 981, 1002, 1007, 1008, 1019, 1021, 1042, 1048, 1049, 1058, 1060, 1081, 1087, 1088, 1097, 1099, 1120, 1125, 1126, 1135, 1137, 1158, 1163, 1164, 1173, 1175, 1624], "len": [7, 11, 13, 28, 31, 477, 541, 581, 677, 715, 718, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569], "torutous": 8, "complic": [8, 17, 19, 27, 28, 29, 30, 32], "multipli": [8, 24, 29, 829, 831, 1613], "divid": [8, 13], "eff": [8, 9, 12, 129], "epsilon": [8, 767], "tau": 8, "correct": [8, 9, 11, 20, 22, 27, 28, 29, 31, 32, 477, 495, 496, 541, 543, 544, 810, 816, 850, 878, 879, 889, 917, 918, 927, 955, 956, 965, 993, 994, 1003, 1033, 1034, 1044, 1072, 1073, 1083, 1111, 1112, 1121, 1149, 1150, 1159, 1187, 1188, 1198, 1216, 1217, 1227, 1248, 1250, 1261, 1282, 1284, 1295, 1316, 1318, 1328, 1346, 1347, 1357, 1378, 1380, 1389, 1407, 1408, 1417, 1435, 1436, 1445, 1463, 1464, 1474, 1495, 1497, 1507, 1525, 1526, 1536, 1557, 1559, 1569, 1587, 1588], "windi": 8, "path": [8, 10, 553, 557, 567, 571, 711, 712, 1629, 1783, 1784, 1788], "matter": 8, "move": [8, 57, 149, 182, 247, 280, 313, 346, 380, 413, 446, 1612, 1617], "substanc": 8, "classic": [8, 195], "definit": [8, 15, 21, 22, 30, 61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 351, 353, 384, 386, 417, 419, 450, 451, 1158, 1774], "actual": [8, 15, 17, 21, 22, 24, 26, 27, 28, 29, 30, 32, 553, 564, 568, 655, 659, 705, 740, 832, 1630, 1658, 1789], "realiti": [8, 22, 30], "mani": [8, 15, 19, 24, 28, 30, 565, 732, 758, 812, 828, 887], "pathwai": 8, "thought": [8, 26, 32], "l_": 8, "repres": [8, 27, 29, 32, 549, 621, 636, 655, 705, 740, 762, 834, 835, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164, 1355, 1416, 1613, 1614, 1650, 1652], "microstructur": 8, "materi": [8, 10, 12, 13, 25, 32, 57, 129, 149, 182, 247, 280, 313, 346, 380, 413, 446, 813, 1808], "toray090": 8, "carbon": 8, "paper": 8, "sand": [8, 32], "stone": 8, "electrospun": 8, "fiber": 8, "sphere": [8, 10, 11, 22, 25, 28, 29, 33, 578, 580, 581, 606, 619, 621, 634, 636, 649, 677, 689, 812, 1655], "cylind": [8, 10, 11, 22, 25, 28, 578, 581, 597, 599, 606, 611, 613, 619, 621, 626, 628, 634, 636, 677, 680, 682, 689, 812, 828, 1654], "all": [8, 10, 15, 17, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 43, 50, 51, 52, 55, 56, 59, 60, 61, 62, 63, 64, 66, 72, 73, 75, 82, 83, 84, 87, 88, 89, 90, 92, 98, 99, 100, 102, 109, 110, 111, 115, 116, 119, 120, 121, 122, 124, 130, 131, 132, 133, 135, 142, 143, 144, 147, 148, 151, 152, 153, 154, 155, 157, 163, 164, 165, 166, 168, 175, 176, 177, 180, 181, 184, 185, 186, 187, 188, 190, 195, 197, 198, 200, 207, 208, 209, 213, 214, 217, 218, 219, 220, 222, 228, 229, 230, 231, 233, 240, 241, 242, 245, 246, 249, 250, 251, 252, 253, 255, 261, 262, 263, 264, 266, 273, 274, 275, 278, 279, 282, 283, 284, 285, 286, 288, 294, 295, 296, 297, 299, 306, 307, 308, 311, 312, 315, 316, 317, 318, 319, 321, 327, 328, 329, 330, 332, 339, 340, 341, 344, 345, 348, 349, 350, 351, 352, 353, 355, 361, 362, 363, 364, 366, 373, 374, 375, 378, 379, 382, 383, 384, 385, 386, 388, 394, 395, 396, 397, 399, 406, 407, 408, 411, 412, 415, 416, 417, 418, 419, 421, 427, 428, 429, 430, 432, 439, 440, 441, 444, 445, 448, 449, 450, 451, 453, 458, 460, 470, 477, 478, 479, 481, 488, 489, 490, 493, 494, 495, 496, 497, 499, 505, 506, 507, 508, 509, 510, 511, 514, 525, 526, 541, 542, 543, 544, 557, 561, 567, 568, 570, 651, 652, 664, 702, 720, 728, 729, 758, 837, 850, 851, 852, 854, 855, 856, 857, 859, 860, 861, 870, 871, 872, 873, 876, 877, 878, 879, 880, 882, 889, 890, 891, 893, 894, 895, 896, 898, 899, 900, 909, 910, 911, 912, 915, 916, 917, 918, 919, 921, 926, 927, 928, 929, 931, 932, 933, 934, 936, 937, 938, 947, 948, 949, 950, 953, 954, 955, 956, 957, 959, 965, 966, 967, 969, 970, 971, 972, 974, 975, 976, 985, 986, 987, 988, 991, 992, 993, 994, 995, 997, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1037, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1064, 1065, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1076, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1115, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1141, 1142, 1143, 1144, 1147, 1148, 1149, 1150, 1151, 1153, 1159, 1160, 1161, 1163, 1164, 1165, 1166, 1168, 1169, 1170, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1188, 1189, 1191, 1198, 1199, 1200, 1202, 1209, 1210, 1211, 1214, 1215, 1216, 1217, 1218, 1220, 1227, 1228, 1229, 1230, 1232, 1241, 1242, 1243, 1246, 1247, 1248, 1250, 1251, 1253, 1258, 1261, 1262, 1263, 1264, 1266, 1275, 1276, 1277, 1280, 1281, 1282, 1284, 1285, 1287, 1292, 1295, 1296, 1297, 1298, 1300, 1309, 1310, 1311, 1314, 1315, 1316, 1318, 1319, 1321, 1326, 1328, 1329, 1330, 1332, 1339, 1340, 1341, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1357, 1358, 1359, 1360, 1362, 1371, 1372, 1373, 1376, 1377, 1378, 1380, 1381, 1383, 1388, 1389, 1390, 1391, 1393, 1400, 1401, 1402, 1405, 1406, 1407, 1408, 1409, 1411, 1416, 1417, 1418, 1419, 1421, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1439, 1445, 1446, 1447, 1449, 1456, 1457, 1458, 1461, 1462, 1463, 1464, 1465, 1467, 1474, 1475, 1476, 1477, 1479, 1488, 1489, 1490, 1493, 1494, 1495, 1497, 1498, 1500, 1505, 1507, 1508, 1509, 1511, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1527, 1529, 1536, 1537, 1538, 1539, 1541, 1550, 1551, 1552, 1555, 1556, 1557, 1559, 1560, 1562, 1567, 1569, 1570, 1571, 1573, 1580, 1581, 1582, 1585, 1586, 1587, 1588, 1589, 1591, 1597, 1599, 1604, 1612, 1613, 1614, 1617, 1618, 1623, 1627, 1628, 1630, 1637, 1645, 1646, 1647, 1649, 1652, 1656, 1659, 1672, 1674, 1678, 1687, 1688, 1700, 1714, 1727, 1737, 1739, 1743, 1745, 1758, 1760, 1761, 1763, 1770, 1772, 1774, 1775, 1788, 1789, 1793, 1795, 1798, 1799, 1804, 1805, 1806], "notic": [8, 30, 32], "0x7f07ab775a90": 8, "180": [8, 12, 13, 24, 32, 668], "36": [8, 11, 25, 28, 30, 32], "thermophys": [8, 10, 30, 757, 1388], "about": [8, 17, 21, 26, 27, 29, 30, 31, 32, 834, 835, 836, 838, 839, 840, 841, 842, 843, 871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180, 1631, 1649, 1650, 1651], "air": [8, 12, 13, 17, 19, 30, 32, 33, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "remov": [8, 22, 24, 25, 28, 29, 32, 35, 38, 53, 54, 59, 60, 63, 72, 85, 86, 89, 90, 99, 113, 114, 119, 120, 121, 122, 130, 145, 146, 151, 152, 154, 163, 178, 179, 184, 185, 187, 197, 211, 212, 217, 218, 219, 220, 228, 243, 244, 249, 250, 252, 261, 276, 277, 282, 283, 285, 294, 309, 310, 315, 316, 318, 327, 342, 343, 348, 349, 352, 361, 376, 377, 382, 383, 385, 394, 409, 410, 415, 416, 418, 427, 442, 443, 448, 449, 460, 468, 469, 479, 491, 492, 497, 510, 514, 520, 521, 526, 535, 536, 852, 854, 855, 874, 875, 880, 887, 891, 893, 894, 913, 914, 919, 929, 931, 932, 951, 952, 957, 967, 969, 970, 989, 990, 995, 1005, 1007, 1008, 1029, 1030, 1035, 1046, 1048, 1049, 1068, 1069, 1074, 1085, 1087, 1088, 1107, 1108, 1113, 1123, 1125, 1126, 1145, 1146, 1151, 1161, 1163, 1164, 1183, 1184, 1189, 1200, 1212, 1213, 1218, 1230, 1244, 1245, 1249, 1251, 1264, 1278, 1279, 1283, 1285, 1298, 1312, 1313, 1317, 1319, 1330, 1342, 1343, 1348, 1360, 1374, 1375, 1379, 1381, 1391, 1403, 1404, 1409, 1419, 1431, 1432, 1437, 1447, 1459, 1460, 1465, 1477, 1491, 1492, 1496, 1498, 1509, 1521, 1522, 1527, 1539, 1553, 1554, 1558, 1560, 1571, 1583, 1584, 1589, 1617, 1619, 1623, 1628, 1657, 1664, 1666, 1668, 1670, 1673, 1675, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1694, 1695, 1700, 1706, 1707, 1714, 1720, 1721, 1727, 1733, 1745, 1751, 1758, 1761, 1762, 1768, 1775, 1776, 1786, 1787, 1794], "del": [8, 24, 29, 30, 1249, 1283, 1317, 1379, 1496, 1558], "purpos": [8, 15, 19, 20, 28, 30, 32, 723], "fickiandiffus": [8, 9, 12, 21, 33, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "fd": [8, 12, 21, 33], "requir": [8, 10, 12, 13, 14, 15, 17, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 122, 495, 543, 565, 729, 758, 812, 828, 832, 878, 887, 917, 955, 993, 1033, 1072, 1111, 1120, 1149, 1187, 1216, 1248, 1282, 1316, 1346, 1378, 1388, 1407, 1435, 1463, 1495, 1525, 1557, 1587, 1613, 1638], "pretti": [8, 29, 512], "much": [8, 19, 22, 24, 27, 28, 29, 31], "everi": [8, 15, 26, 28, 29, 30, 35, 1226, 1260, 1294, 1356, 1473, 1535, 1798, 1799], "specifi": [8, 19, 21, 28, 29, 30, 32, 43, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 64, 66, 75, 82, 83, 84, 85, 87, 89, 90, 92, 102, 109, 110, 111, 113, 115, 119, 120, 121, 122, 124, 129, 135, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 157, 168, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 190, 196, 200, 207, 208, 209, 211, 213, 217, 218, 219, 220, 222, 233, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 255, 266, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 288, 299, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 321, 332, 339, 340, 341, 342, 344, 346, 348, 349, 351, 352, 353, 355, 366, 373, 374, 375, 376, 378, 380, 382, 383, 384, 385, 386, 388, 393, 399, 406, 407, 408, 409, 411, 413, 415, 416, 417, 418, 419, 421, 432, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 453, 458, 468, 481, 488, 489, 490, 491, 493, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 520, 535, 543, 554, 557, 558, 565, 568, 569, 573, 646, 647, 651, 654, 655, 702, 704, 705, 728, 737, 740, 779, 780, 805, 810, 848, 849, 854, 855, 856, 857, 860, 861, 864, 866, 870, 872, 873, 874, 876, 878, 880, 882, 887, 893, 894, 895, 896, 899, 900, 903, 905, 909, 911, 912, 913, 915, 917, 919, 921, 926, 931, 932, 933, 934, 937, 938, 941, 943, 947, 949, 950, 951, 953, 955, 957, 959, 964, 969, 970, 971, 972, 975, 976, 979, 981, 985, 987, 988, 989, 991, 993, 995, 997, 1002, 1007, 1008, 1009, 1010, 1013, 1014, 1016, 1019, 1021, 1025, 1027, 1028, 1029, 1031, 1033, 1035, 1037, 1042, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1060, 1064, 1066, 1067, 1068, 1070, 1072, 1074, 1076, 1081, 1082, 1087, 1088, 1089, 1090, 1093, 1094, 1097, 1099, 1103, 1105, 1106, 1107, 1109, 1111, 1113, 1115, 1120, 1125, 1126, 1127, 1128, 1131, 1132, 1135, 1137, 1141, 1143, 1144, 1145, 1147, 1149, 1151, 1153, 1158, 1163, 1164, 1165, 1166, 1169, 1170, 1173, 1175, 1179, 1181, 1182, 1183, 1185, 1187, 1189, 1191, 1202, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1220, 1232, 1237, 1241, 1242, 1243, 1244, 1246, 1248, 1251, 1253, 1258, 1266, 1271, 1275, 1276, 1277, 1278, 1280, 1282, 1285, 1287, 1292, 1300, 1305, 1309, 1310, 1311, 1312, 1314, 1316, 1319, 1321, 1326, 1332, 1339, 1340, 1341, 1342, 1344, 1346, 1348, 1350, 1362, 1367, 1371, 1372, 1373, 1374, 1376, 1378, 1381, 1383, 1388, 1393, 1400, 1401, 1402, 1403, 1405, 1407, 1409, 1411, 1421, 1428, 1429, 1430, 1431, 1433, 1435, 1437, 1439, 1449, 1456, 1457, 1458, 1459, 1461, 1463, 1465, 1467, 1479, 1484, 1488, 1489, 1490, 1491, 1493, 1495, 1498, 1500, 1505, 1511, 1518, 1519, 1520, 1521, 1523, 1525, 1527, 1529, 1541, 1546, 1550, 1551, 1552, 1553, 1555, 1557, 1560, 1562, 1567, 1573, 1580, 1581, 1582, 1583, 1585, 1587, 1589, 1591, 1612, 1615, 1623, 1627, 1628, 1630, 1631, 1637, 1639, 1648, 1676, 1694, 1706, 1720, 1776, 1783, 1786], "c_in": [8, 9], "c_out": [8, 9], "attach": [8, 15, 24, 27, 29, 30, 561, 646, 651, 653, 654, 655, 702, 703, 704, 705, 728, 732, 733, 737, 740, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 1416, 1653, 1798, 1799], "know": [8, 14, 15, 22, 24, 25, 26, 27, 28, 30, 31, 32, 35], "take": [8, 10, 22, 24, 26, 28, 30, 195, 1795], "interpol": [8, 31, 33, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 813, 827, 867, 906, 944, 982, 1022, 1061, 1100, 1138, 1176, 1206, 1238, 1272, 1306, 1336, 1368, 1397, 1425, 1453, 1485, 1515, 1547, 1577], "pc": [8, 10, 12, 30, 32, 758, 767, 788, 792, 794, 799, 803, 804, 806, 832], "tc": [8, 30, 758, 762, 763, 767, 774, 788, 795, 798, 799, 803, 804, 806], "interpolate_data": [8, 31], "size_bi": [8, 9, 25], "markers": [8, 9, 25, 27], "400": [8, 25, 28], "linewidth": [8, 25], "_": [8, 9, 22, 32], "axi": [8, 9, 28, 31, 530, 553, 732, 827, 1612, 1618, 1630, 1639, 1645, 1650, 1651], "off": [8, 9, 32, 758, 1651], "fick": [8, 19, 22, 129, 621], "shown": [8, 11, 20, 21, 22, 25, 26, 27, 29, 31, 32, 33], "n_a": [8, 19, 621], "molar": [8, 762, 764, 769], "mole": [8, 762, 771, 773, 777, 780, 781, 782, 805, 1226, 1229, 1237, 1258, 1260, 1263, 1271, 1292, 1294, 1297, 1305, 1326, 1356, 1359, 1367, 1473, 1476, 1484, 1505, 1535, 1538, 1546, 1567], "per": [8, 10, 765, 783, 789, 796, 800, 807, 825], "rate_inlet": 8, "5e": [8, 10, 15, 25, 28, 31, 828, 829], "mol": [8, 761, 763, 764, 769, 774, 783, 785, 792, 794, 795, 803, 804, 806, 834, 835], "88846e": 8, "d_eff": [8, 9], "6e": 8, "776925e": 8, "measur": [8, 9], "varepsilon": 8, "But": [8, 29, 30], "pleas": [8, 9, 34], "v_p": 8, "v_t": 8, "v_bulk": 8, "prod": 8, "429901e": 8, "02": [8, 196], "d_ab": 8, "270571e": 8, "00": 8, "ratio": [9, 13, 22, 612, 622, 627, 637, 668, 725, 829], "conducit": 9, "pure": [9, 26, 31, 326, 758, 763, 765, 788, 789, 792, 794, 795, 796, 798, 799, 800, 803, 804, 806, 807, 1226, 1260, 1294, 1356, 1473, 1535], "brine": 9, "sigma_": 9, "factior": 9, "299e": 9, "diff": [9, 28], "colour": [9, 33], "media": [9, 10, 34, 812, 825], "research": [9, 34, 825], "process": [9, 10, 13, 15, 19, 21, 24, 28, 29, 31, 477, 541, 651, 702, 728, 808, 810, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1614, 1652], "substitut": [9, 22, 1603, 1662, 1663, 1685], "electron": [9, 22, 227, 834, 835], "analag": 9, "sigma": [9, 10, 19, 762, 767, 780, 787, 805, 813, 829, 1237, 1271, 1305, 1367, 1484, 1546], "respect": [9, 22, 26, 30, 46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 464, 484, 558, 732, 834, 835, 865, 904, 942, 980, 1020, 1059, 1098, 1136, 1174, 1205, 1236, 1270, 1304, 1335, 1366, 1396, 1424, 1452, 1483, 1514, 1545, 1576, 1650, 1801], "pai": 9, "attent": 9, "mai": [9, 11, 17, 19, 24, 26, 27, 28, 29, 30, 34, 59, 89, 119, 120, 122, 151, 184, 217, 218, 220, 249, 282, 315, 348, 382, 415, 448, 477, 541, 565, 646, 652, 654, 704, 737, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1630], "underestim": [9, 11], "r": [9, 11, 12, 13, 25, 31, 32, 504, 668, 669, 812, 813, 829, 836, 838, 839, 840, 841, 842, 843, 859, 898, 936, 964, 974, 1012, 1053, 1092, 1130, 1168, 1631, 1639, 1649, 1650], "34": [9, 25, 32], "10089643222": 9, "common": [10, 24, 25, 26, 27, 28, 29, 857, 860, 861, 871, 896, 899, 900, 910, 934, 937, 938, 948, 972, 975, 976, 986, 1010, 1013, 1014, 1026, 1051, 1054, 1055, 1065, 1090, 1093, 1094, 1104, 1128, 1131, 1132, 1142, 1166, 1169, 1170, 1180, 1623, 1627, 1628, 1653], "techniqu": 10, "w": [10, 17, 34, 553, 782, 795, 796, 825], "loglevel": [10, 22], "um": [10, 28], "topolog": [10, 28, 30, 741, 747, 748, 749, 1120, 1646, 1794], "conveni": [10, 26, 27, 29, 30, 31, 32, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 834, 835], "half": [10, 11, 28, 31, 652, 664], "smallest": [10, 28, 32, 1801], "neighbour": [10, 664], "invad": [10, 12, 13, 32, 98, 120, 195, 218, 813, 827, 831, 832, 1626], "tension": [10, 12, 13, 32, 769, 787, 788, 789, 812, 813, 827], "cours": [10, 24, 27, 29], "name": [10, 11, 12, 13, 15, 17, 24, 25, 28, 29, 30, 33, 35, 37, 56, 59, 63, 71, 88, 89, 97, 116, 119, 129, 148, 151, 154, 162, 181, 184, 187, 195, 214, 217, 227, 246, 249, 252, 260, 279, 282, 285, 293, 312, 315, 318, 326, 345, 348, 352, 360, 379, 382, 385, 393, 412, 415, 418, 426, 445, 448, 458, 459, 470, 476, 477, 494, 496, 512, 541, 544, 552, 554, 557, 560, 565, 567, 568, 571, 572, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 649, 651, 652, 653, 655, 657, 659, 662, 663, 664, 665, 666, 669, 673, 674, 675, 677, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 700, 702, 703, 705, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 728, 733, 736, 740, 758, 761, 762, 763, 764, 765, 767, 768, 769, 772, 774, 779, 783, 785, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 803, 804, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 832, 843, 845, 846, 848, 850, 877, 879, 887, 889, 916, 918, 926, 927, 954, 956, 964, 965, 992, 994, 1002, 1003, 1032, 1034, 1042, 1044, 1071, 1073, 1081, 1083, 1110, 1112, 1120, 1121, 1148, 1150, 1158, 1159, 1186, 1188, 1197, 1198, 1215, 1217, 1225, 1226, 1227, 1235, 1247, 1249, 1250, 1258, 1259, 1260, 1261, 1269, 1281, 1283, 1284, 1292, 1293, 1294, 1295, 1303, 1315, 1317, 1318, 1326, 1327, 1328, 1345, 1347, 1355, 1356, 1357, 1365, 1377, 1379, 1380, 1388, 1389, 1406, 1408, 1416, 1417, 1434, 1436, 1444, 1445, 1462, 1464, 1472, 1473, 1474, 1482, 1494, 1496, 1497, 1505, 1506, 1507, 1524, 1526, 1534, 1535, 1536, 1544, 1556, 1558, 1559, 1567, 1568, 1569, 1586, 1588, 1653, 1665, 1737, 1739, 1774, 1778, 1783, 1785, 1788, 1794, 1795, 1803], "calul": 10, "washburn": [10, 32, 592, 593, 829, 832], "p_c": [10, 32, 813, 829], "co": [10, 729, 813, 829], "theta": [10, 813, 829], "r_t": [10, 825], "39": [10, 32], "contact": [10, 11, 12, 13, 32, 718, 812, 813, 827], "angl": [10, 12, 13, 32, 812, 813, 827], "while": [10, 17, 24, 25, 26, 30, 32, 37, 60, 71, 90, 97, 121, 129, 152, 162, 185, 195, 219, 227, 250, 260, 283, 293, 316, 326, 349, 360, 383, 393, 416, 426, 449, 497, 510, 834, 835, 880, 919, 926, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589], "radiu": [10, 28, 31, 33, 812, 827, 828, 829, 859, 898, 936, 964, 974, 1012, 1053, 1092, 1130, 1168, 1631, 1639, 1653, 1654, 1655], "setup": [10, 32], "invasionpercol": [10, 13, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], "ordinarypercol": [10, 12], "class": [10, 15, 17, 20, 24, 26, 27, 29, 31, 32, 33, 36, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 476, 504, 512, 525, 540, 545, 546, 547, 548, 554, 557, 558, 825, 847, 848, 887, 926, 964, 1002, 1042, 1081, 1120, 1158, 1196, 1197, 1225, 1259, 1293, 1327, 1355, 1388, 1416, 1444, 1472, 1506, 1534, 1568, 1596, 1597, 1599, 1601, 1603, 1605, 1607, 1609, 1661, 1687, 1699, 1713, 1725, 1737, 1740, 1741, 1743, 1755, 1756, 1774, 1789, 1798, 1799, 1800], "ordinari": [10, 32], "percol": [10, 25, 28, 98, 195, 196, 210, 832, 1614, 1622, 1626, 1640, 1652], "access": [10, 14, 15, 17, 21, 24, 26, 29, 30, 32, 35, 195, 554, 646, 650, 651, 653, 654, 655, 698, 701, 702, 703, 704, 705, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175, 1416, 1667, 1680], "fix": [10, 14, 28, 30, 32, 758, 1794], "appli": [10, 11, 21, 22, 26, 28, 29, 31, 32, 33, 43, 50, 59, 60, 61, 62, 63, 64, 75, 82, 89, 90, 98, 102, 109, 118, 119, 120, 121, 122, 129, 135, 142, 151, 152, 153, 154, 155, 168, 175, 184, 185, 186, 187, 188, 200, 207, 217, 218, 219, 220, 233, 240, 249, 250, 251, 252, 253, 266, 273, 282, 283, 284, 285, 286, 299, 306, 315, 316, 317, 318, 319, 332, 339, 348, 349, 350, 351, 352, 353, 366, 373, 382, 383, 384, 385, 386, 399, 406, 415, 416, 417, 418, 419, 432, 439, 448, 449, 450, 451, 458, 477, 478, 481, 488, 497, 505, 506, 510, 541, 542, 723, 729, 758, 780, 805, 825, 834, 835, 850, 851, 854, 855, 856, 860, 861, 870, 871, 880, 889, 890, 893, 894, 895, 899, 900, 909, 910, 919, 927, 928, 931, 932, 933, 937, 938, 947, 948, 957, 965, 966, 969, 970, 971, 975, 976, 985, 986, 995, 1003, 1004, 1007, 1008, 1009, 1013, 1014, 1025, 1026, 1035, 1044, 1045, 1048, 1049, 1050, 1054, 1055, 1064, 1065, 1074, 1083, 1084, 1087, 1088, 1089, 1093, 1094, 1103, 1104, 1113, 1121, 1122, 1125, 1126, 1127, 1131, 1132, 1141, 1142, 1151, 1159, 1160, 1163, 1164, 1165, 1169, 1170, 1179, 1180, 1189, 1198, 1199, 1202, 1209, 1218, 1226, 1227, 1228, 1232, 1237, 1241, 1251, 1260, 1261, 1262, 1266, 1271, 1275, 1285, 1294, 1295, 1296, 1300, 1305, 1309, 1319, 1328, 1329, 1332, 1339, 1348, 1356, 1357, 1358, 1362, 1367, 1371, 1381, 1389, 1390, 1393, 1400, 1409, 1417, 1418, 1421, 1428, 1437, 1445, 1446, 1449, 1456, 1465, 1473, 1474, 1475, 1479, 1484, 1488, 1498, 1507, 1508, 1511, 1518, 1527, 1535, 1536, 1537, 1541, 1546, 1550, 1560, 1569, 1570, 1573, 1580, 1589, 1612, 1615, 1616, 1620, 1627, 1628, 1630, 1639, 1645, 1647, 1653, 1736, 1754], "penetr": 10, "possibli": [10, 30], "sourc": [10, 11, 33, 34, 35, 37, 61, 63, 71, 73, 89, 97, 98, 112, 117, 118, 120, 122, 129, 154, 162, 187, 195, 196, 210, 215, 216, 218, 220, 227, 252, 260, 282, 285, 293, 318, 326, 352, 360, 385, 393, 414, 418, 426, 429, 430, 446, 447, 450, 451, 459, 460, 464, 465, 467, 468, 470, 472, 473, 476, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 525, 528, 529, 530, 538, 540, 541, 542, 543, 544, 545, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 669, 671, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 821, 823, 824, 825, 827, 828, 829, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 849, 887, 888, 926, 964, 1002, 1015, 1016, 1042, 1081, 1082, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1137, 1142, 1158, 1197, 1225, 1259, 1292, 1293, 1326, 1327, 1355, 1356, 1359, 1365, 1367, 1378, 1379, 1388, 1416, 1444, 1472, 1506, 1534, 1568, 1597, 1598, 1599, 1601, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1661, 1687, 1699, 1705, 1709, 1710, 1713, 1725, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1748, 1750, 1755, 1756, 1757, 1774, 1776, 1777, 1778, 1783, 1784, 1785, 1788, 1789, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807], "directli": [10, 17, 21, 22, 24, 26, 27, 28, 29, 30, 32, 761, 762, 763, 764, 765, 767, 768, 769, 772, 774, 783, 785, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 803, 804, 806, 807, 849, 888, 1043, 1082, 1628, 1651], "though": [10, 25, 26, 28, 29, 855, 887, 894, 932, 970, 1008, 1049, 1088, 1126, 1164], "frequent": [10, 35, 834, 835], "subclass": [10, 26, 37, 71, 129, 162, 227, 260, 293, 326, 393, 426, 459, 525, 549, 1197, 1355, 1388, 1568, 1713, 1725], "sever": [10, 21, 24, 25, 26, 27, 28, 29, 30, 32, 476, 478, 542, 758, 831, 851, 890, 928, 966, 1004, 1045, 1084, 1120, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "drainag": [10, 12, 13, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "set_inlet_bc": [10, 12, 13, 32], "messag": [10, 24, 28], "analyz": [10, 28], "pc_curv": [10, 32, 97], "semilogx": 10, "challeng": [11, 32], "modulenotfounderror": [11, 33], "traceback": 11, "recent": 11, "No": [11, 26, 27, 1615], "cubes_and_cuboid": [11, 22], "vol_void": 11, "vol_bulk": 11, "poro": 11, "2022": [11, 22, 34], "47": [11, 25, 28, 32], "485": 11, "499": 11, "21": [11, 13, 25, 26, 29, 30, 32], "One": [11, 19, 24, 25, 26, 27, 28, 29, 30, 32, 751, 825, 1229, 1263, 1297, 1359, 1476, 1538], "correctli": [11, 1653], "erron": 11, "addit": [11, 19, 20, 25, 26, 28, 29, 30, 458, 477, 478, 541, 542, 715, 758, 837, 848, 850, 851, 889, 890, 927, 928, 965, 966, 1003, 1004, 1044, 1045, 1081, 1083, 1084, 1121, 1122, 1159, 1160, 1198, 1199, 1227, 1228, 1261, 1262, 1295, 1296, 1328, 1329, 1357, 1358, 1389, 1390, 1417, 1418, 1445, 1446, 1474, 1475, 1507, 1508, 1536, 1537, 1569, 1570], "green": [11, 27, 28, 32], "center": [11, 22, 25, 26, 31, 718, 755, 827, 848, 887, 926, 1081, 1158, 1639], "ignor": [11, 22, 60, 63, 68, 90, 94, 121, 126, 152, 154, 159, 185, 187, 192, 219, 224, 250, 252, 257, 283, 285, 290, 316, 318, 323, 349, 352, 357, 383, 385, 390, 416, 418, 423, 449, 455, 473, 497, 501, 510, 698, 701, 726, 780, 805, 854, 880, 884, 893, 919, 923, 931, 957, 961, 969, 995, 999, 1007, 1035, 1039, 1048, 1074, 1078, 1087, 1113, 1117, 1125, 1151, 1155, 1163, 1189, 1193, 1218, 1222, 1237, 1251, 1255, 1271, 1285, 1289, 1305, 1319, 1323, 1348, 1352, 1367, 1381, 1385, 1409, 1413, 1437, 1441, 1465, 1469, 1484, 1498, 1502, 1527, 1531, 1546, 1560, 1564, 1589, 1593, 1604, 1650, 1651, 1798, 1799, 1800], "far": [11, 22, 28, 29, 1639], "overestim": 11, "becaus": [11, 22, 24, 26, 27, 28, 29, 30, 31, 32, 647, 652, 860, 861, 899, 900, 937, 938, 975, 976, 1013, 1014, 1054, 1055, 1093, 1094, 1131, 1132, 1169, 1170, 1627, 1628, 1739], "real": [11, 19, 572], "depend": [11, 19, 22, 26, 30, 32, 35, 477, 528, 529, 530, 541, 568, 810, 834, 835, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569], "account": [11, 12, 13, 19, 22, 31, 659, 714, 715, 716, 719, 812, 828, 832, 1658], "pendular_r": [11, 715, 717], "tackl": 11, "problem": [11, 12, 21, 24, 26, 27, 28, 326, 810, 1794], "end": [11, 22, 26, 27, 28, 31, 621, 636, 646, 654, 677, 704, 717, 718, 737, 754, 758, 810, 1617, 1649, 1658, 1726, 1737, 1744, 1798, 1799], "vol_void_initi": 11, "vol_void_correct": 11, "poro_initi": 11, "poro_correct": 11, "initi": [11, 17, 21, 28, 31, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 549], "5f": 11, "12852": 11, "12590": 11, "although": [11, 22, 26, 758, 834, 835], "neglig": [11, 600, 602], "too": [11, 26, 1229, 1263, 1297, 1359, 1476, 1538], "high": [11, 28, 32, 646, 654, 704, 737, 887, 1229, 1263, 1297, 1359, 1476, 1538], "neglect": [11, 32], "pendular": [11, 718], "ring": [11, 718, 1654], "resid": [11, 717, 718], "radii": [11, 28, 718], "howev": [11, 12, 13, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 51, 52, 83, 84, 110, 111, 143, 144, 176, 177, 195, 208, 209, 241, 242, 274, 275, 307, 308, 340, 341, 374, 375, 407, 408, 440, 441, 489, 490, 507, 508, 758, 872, 873, 911, 912, 949, 950, 987, 988, 1027, 1028, 1066, 1067, 1105, 1106, 1143, 1144, 1181, 1182, 1210, 1211, 1242, 1243, 1276, 1277, 1310, 1311, 1340, 1341, 1372, 1373, 1401, 1402, 1429, 1430, 1457, 1458, 1489, 1490, 1519, 1520, 1551, 1552, 1581, 1582], "segment": 11, "region": [11, 28, 854, 893, 931, 969, 1007, 1048, 1087, 1125, 1163], "regular": 11, "fill": [11, 27, 29, 32, 831, 832], "perfectli": [11, 669, 1631], "im": [11, 25, 27, 848, 855, 887, 894, 926, 932, 964, 970, 1002, 1008, 1042, 1049, 1081, 1088, 1120, 1126, 1158, 1164, 1654, 1655], "overlapping_spher": 11, "maxit": [11, 1601, 1603, 1604, 1607], "imshow": [11, 27], "im_poro": 11, "metric": 11, "imag": [11, 22, 25, 27, 28, 33, 553, 647, 854, 893, 926, 931, 969, 1007, 1048, 1087, 1125, 1163, 1654, 1655], "1f": 11, "63": [11, 25, 32], "snow": 11, "snow2": 11, "boundary_width": 11, "io": [11, 25, 33, 1789], "network_from_porespi": 11, "inscribed_diamet": 11, "throat_length": [11, 28, 577, 578, 579, 580, 581, 582, 583, 707, 708, 709, 710, 714, 715, 716, 719], "regen_mod": [11, 12, 13, 21, 30, 477, 478, 541, 542, 850, 851, 889, 890, 927, 928, 965, 966, 1003, 1004, 1044, 1045, 1083, 1084, 1121, 1122, 1159, 1160, 1198, 1199, 1227, 1228, 1261, 1262, 1295, 1296, 1328, 1329, 1357, 1358, 1389, 1390, 1417, 1418, 1445, 1446, 1474, 1475, 1507, 1508, 1536, 1537, 1569, 1570], "normal": [11, 28, 29, 30, 35, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 477, 541, 647, 758, 765, 789, 796, 798, 807, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1158, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1613, 1806], "cube": [11, 579, 598, 612, 627, 649, 681], "cuboid": [11, 28, 579, 580, 598, 605, 612, 614, 620, 627, 629, 635, 681, 683, 688], "pnm_poro": 11, "pnm": [11, 19, 31, 32, 721, 1783, 1788, 1789], "67": [11, 25, 32], "better": [11, 13, 30, 33], "term": [12, 22, 29, 31, 32, 63, 154, 187, 252, 260, 285, 318, 352, 385, 418, 553, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 887], "indic": [12, 13, 15, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 55, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 87, 88, 90, 92, 93, 94, 115, 116, 120, 121, 124, 125, 126, 147, 148, 149, 152, 153, 154, 155, 157, 158, 159, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 213, 214, 218, 219, 220, 222, 223, 224, 245, 246, 247, 250, 251, 252, 253, 255, 256, 257, 278, 279, 280, 283, 284, 285, 286, 288, 289, 290, 311, 312, 313, 316, 317, 318, 319, 321, 322, 323, 344, 345, 346, 349, 350, 351, 352, 353, 355, 356, 357, 378, 379, 380, 383, 384, 385, 386, 388, 389, 390, 411, 412, 413, 416, 417, 418, 419, 421, 422, 423, 444, 445, 446, 449, 450, 451, 453, 454, 455, 458, 470, 472, 473, 477, 478, 493, 494, 497, 499, 500, 501, 509, 510, 511, 541, 542, 554, 566, 568, 646, 647, 654, 704, 737, 751, 780, 805, 848, 849, 850, 851, 854, 855, 858, 860, 861, 864, 866, 876, 877, 880, 882, 883, 884, 887, 888, 889, 890, 893, 894, 897, 899, 900, 903, 905, 915, 916, 919, 921, 922, 923, 926, 927, 928, 931, 932, 935, 937, 938, 941, 943, 953, 954, 957, 959, 960, 961, 964, 965, 966, 969, 970, 973, 975, 976, 979, 981, 991, 992, 995, 997, 998, 999, 1002, 1003, 1004, 1007, 1008, 1011, 1013, 1014, 1015, 1019, 1021, 1031, 1032, 1035, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1048, 1049, 1052, 1054, 1055, 1058, 1060, 1070, 1071, 1074, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1087, 1088, 1091, 1093, 1094, 1097, 1099, 1109, 1110, 1113, 1115, 1116, 1117, 1120, 1121, 1122, 1125, 1126, 1129, 1131, 1132, 1135, 1137, 1147, 1148, 1151, 1153, 1154, 1155, 1158, 1159, 1160, 1163, 1164, 1167, 1169, 1170, 1173, 1175, 1185, 1186, 1189, 1191, 1192, 1193, 1198, 1199, 1214, 1215, 1218, 1220, 1221, 1222, 1227, 1228, 1229, 1237, 1246, 1247, 1251, 1253, 1254, 1255, 1261, 1262, 1263, 1271, 1280, 1281, 1285, 1287, 1288, 1289, 1295, 1296, 1297, 1305, 1314, 1315, 1319, 1321, 1322, 1323, 1328, 1329, 1344, 1345, 1348, 1350, 1351, 1352, 1357, 1358, 1359, 1367, 1376, 1377, 1381, 1383, 1384, 1385, 1389, 1390, 1405, 1406, 1409, 1411, 1412, 1413, 1417, 1418, 1433, 1434, 1437, 1439, 1440, 1441, 1445, 1446, 1461, 1462, 1465, 1467, 1468, 1469, 1474, 1475, 1476, 1484, 1493, 1494, 1498, 1500, 1501, 1502, 1507, 1508, 1523, 1524, 1527, 1529, 1530, 1531, 1536, 1537, 1538, 1546, 1555, 1556, 1560, 1562, 1563, 1564, 1569, 1570, 1585, 1586, 1589, 1591, 1592, 1593, 1612, 1614, 1618, 1619, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1632, 1633, 1637, 1639, 1640, 1648, 1652, 1657, 1658, 1804, 1805], "concept": [12, 22, 24, 28], "mechan": [12, 15, 32], "info": [12, 13, 1225, 1259, 1293, 1355, 1472, 1534], "similarli": [12, 17, 28], "072": [12, 13, 32], "contact_angl": [12, 13, 30, 32, 589, 590, 812, 813, 827, 828, 829], "partial": [12, 29], "non": [12, 13, 19, 21, 26, 27, 32, 210, 752, 813, 832, 848, 854, 855, 864, 866, 887, 893, 894, 903, 905, 926, 931, 932, 941, 943, 964, 969, 970, 979, 981, 1002, 1007, 1008, 1019, 1021, 1042, 1048, 1049, 1058, 1060, 1081, 1087, 1088, 1097, 1099, 1120, 1125, 1126, 1135, 1137, 1158, 1163, 1164, 1173, 1175, 1618, 1624], "wet": [12, 13, 32, 210, 669, 813, 825, 832], "accomplish": [12, 29, 31, 32, 1002, 1120], "invasonpercol": 12, "drn": [12, 32], "occup": [12, 776, 831, 1658], "point": [12, 13, 15, 25, 26, 27, 28, 29, 30, 31, 33, 35, 118, 347, 381, 414, 549, 556, 651, 653, 655, 677, 702, 703, 705, 717, 725, 728, 730, 733, 739, 740, 744, 752, 756, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 832, 837, 843, 845, 846, 964, 1002, 1158, 1617, 1620, 1630, 1631, 1636, 1638, 1639, 1649, 1651], "invasion_pressur": [12, 32, 98], "10000": [12, 653, 655, 703, 705, 733, 740], "costum": [12, 13, 33], "sat_upd": 12, "nwp": [12, 13, 32, 832], "wp": [12, 13, 32, 832], "pore_mask": [12, 13], "throat_mask": [12, 13], "sat_p": [12, 13], "sat_t": [12, 13], "sat1": [12, 13], "bulk": [12, 13, 24], "sat": [12, 13], "cancel": [12, 13, 22], "out": [12, 13, 19, 22, 24, 26, 27, 28, 30, 31, 54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 377, 410, 443, 469, 492, 521, 536, 776, 875, 914, 952, 990, 1030, 1069, 1108, 1146, 1184, 1213, 1245, 1279, 1313, 1343, 1375, 1404, 1432, 1460, 1492, 1522, 1554, 1584, 1676, 1695, 1707, 1721, 1733, 1751, 1787], "remain": [12, 13, 32, 652, 1740], "fraction": [12, 13, 28, 762, 771, 773, 777, 780, 781, 782, 805, 832, 834, 835, 887, 1226, 1229, 1237, 1258, 1260, 1263, 1271, 1292, 1294, 1297, 1305, 1326, 1356, 1359, 1367, 1473, 1476, 1484, 1505, 1535, 1538, 1546, 1567, 1639], "rate_": 12, "fickian": [12, 22, 33, 129], "conduit_conduct": [12, 13], "wherea": [12, 13, 22, 834, 835, 1626], "generic_diffusive_conduct": 12, "same": [12, 13, 17, 19, 22, 24, 25, 27, 28, 29, 30, 31, 32, 59, 62, 64, 89, 119, 151, 153, 155, 184, 186, 188, 217, 218, 220, 249, 251, 253, 282, 284, 286, 315, 317, 319, 348, 351, 353, 382, 384, 386, 415, 417, 419, 448, 450, 451, 478, 542, 570, 571, 649, 700, 717, 718, 754, 762, 812, 828, 834, 835, 851, 858, 871, 890, 897, 910, 926, 928, 935, 948, 966, 973, 986, 1004, 1011, 1026, 1045, 1052, 1065, 1084, 1091, 1104, 1122, 1129, 1142, 1160, 1167, 1180, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1614, 1615, 1618, 1622, 1624, 1637, 1639, 1640, 1652, 1743, 1774, 1795], "calcuat": [12, 13, 28, 692, 693, 694, 695, 696, 699, 706, 713], "rate_calc": [12, 13], "keyword": [12, 13, 477, 541, 549, 758, 837, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1623, 1627, 1628], "val": [12, 13, 15, 30, 477, 541, 779, 781, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1235, 1237, 1261, 1269, 1271, 1295, 1303, 1305, 1328, 1357, 1365, 1367, 1389, 1417, 1445, 1474, 1482, 1484, 1507, 1536, 1544, 1546, 1569], "focus": [12, 13], "diff_in": 12, "diff_out": 12, "presenc": [12, 13, 30], "model_mp_cond": [12, 13], "conduit_diffusive_conduct": 12, "throat_conduct": [12, 13, 820, 821, 831, 845, 846], "defer": [12, 13, 15, 21, 28, 29, 30, 477, 478, 541, 542, 850, 851, 889, 890, 927, 928, 965, 966, 1003, 1004, 1044, 1045, 1083, 1084, 1121, 1122, 1159, 1160, 1198, 1199, 1227, 1228, 1261, 1262, 1295, 1296, 1328, 1329, 1357, 1358, 1389, 1390, 1417, 1418, 1445, 1446, 1474, 1475, 1507, 1508, 1536, 1537, 1569, 1570], "over": [12, 13, 22, 28, 29, 33, 647, 758, 762, 776, 1603, 1774], "snwparr": [12, 13], "reldiff_nwp": 12, "reldiff_wp": 12, "uniqu": [12, 27, 29, 848, 857, 861, 887, 896, 900, 934, 938, 964, 972, 976, 1010, 1014, 1042, 1051, 1055, 1081, 1090, 1094, 1120, 1128, 1132, 1158, 1166, 1170, 1416, 1653, 1739, 1785], "sat_point": 12, "rate_single_nwp": 12, "rate_single_wp": 12, "rate_mult_nwp": 12, "rate_mult_wp": 12, "dr_nwp": 12, "dr_wp": 12, "xlabel": [12, 13, 32], "snwp": [12, 13, 32], "ylabel": [12, 13, 32], "dr": [12, 829], "titl": [12, 13], "0x7f8b5a9950a0": 12, "sequenc": [13, 24, 32, 196], "asum": 13, "ip": [13, 32], "impplement": 13, "face": [13, 25, 129, 849, 887, 888, 1043, 1081, 1082, 1613, 1630, 1631, 1645, 1649], "By": [13, 22, 478, 542, 758, 851, 890, 928, 966, 1002, 1004, 1045, 1084, 1122, 1158, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1630], "finlets_init": 13, "finlet": 13, "satur": [13, 32, 210, 765, 789, 796, 807], "sat_occ_upd": 13, "ran": 13, "befor": [13, 27, 28, 29, 30, 32, 33, 60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 383, 416, 449, 495, 497, 510, 529, 543, 758, 827, 878, 880, 917, 919, 955, 957, 993, 995, 1033, 1035, 1072, 1074, 1111, 1113, 1149, 1151, 1187, 1189, 1216, 1218, 1248, 1251, 1282, 1285, 1316, 1319, 1346, 1348, 1378, 1381, 1407, 1409, 1435, 1437, 1463, 1465, 1495, 1498, 1525, 1527, 1557, 1560, 1587, 1589, 1653, 1732, 1750], "int": [13, 22, 27, 51, 52, 59, 83, 84, 89, 110, 111, 118, 119, 143, 144, 151, 176, 177, 184, 208, 209, 217, 241, 242, 249, 274, 275, 282, 307, 308, 315, 340, 341, 348, 374, 375, 382, 407, 408, 415, 440, 441, 448, 489, 490, 507, 508, 554, 619, 634, 646, 647, 654, 704, 737, 872, 873, 887, 911, 912, 949, 950, 964, 987, 988, 1002, 1027, 1028, 1066, 1067, 1105, 1106, 1143, 1144, 1158, 1181, 1182, 1210, 1211, 1242, 1243, 1276, 1277, 1310, 1311, 1340, 1341, 1372, 1373, 1401, 1402, 1429, 1430, 1457, 1458, 1489, 1490, 1519, 1520, 1551, 1552, 1581, 1582, 1621, 1654, 1655, 1663, 1680, 1682, 1685], "invasion_sequ": [13, 32, 98, 196], "mask": [13, 24, 27, 55, 60, 67, 68, 87, 90, 93, 94, 115, 121, 125, 126, 147, 152, 158, 159, 180, 185, 191, 192, 213, 219, 223, 224, 245, 250, 256, 257, 278, 283, 289, 290, 311, 316, 322, 323, 344, 349, 356, 357, 378, 383, 389, 390, 411, 416, 422, 423, 444, 449, 454, 455, 472, 473, 493, 497, 500, 501, 509, 510, 860, 861, 876, 880, 883, 884, 899, 900, 915, 919, 922, 923, 926, 937, 938, 953, 957, 960, 961, 975, 976, 991, 995, 998, 999, 1013, 1014, 1031, 1035, 1038, 1039, 1054, 1055, 1070, 1074, 1077, 1078, 1093, 1094, 1109, 1113, 1116, 1117, 1131, 1132, 1147, 1151, 1154, 1155, 1169, 1170, 1185, 1189, 1192, 1193, 1214, 1218, 1221, 1222, 1246, 1251, 1254, 1255, 1280, 1285, 1288, 1289, 1314, 1319, 1322, 1323, 1344, 1348, 1351, 1352, 1376, 1381, 1384, 1385, 1405, 1409, 1412, 1413, 1433, 1437, 1440, 1441, 1461, 1465, 1468, 1469, 1493, 1498, 1501, 1502, 1523, 1527, 1530, 1531, 1555, 1560, 1563, 1564, 1585, 1589, 1592, 1593, 1618, 1619, 1622, 1626, 1639], "within": [13, 24, 26, 28, 30, 31, 528, 722, 751, 789, 796, 832, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1616, 1631, 1647, 1653], "thorat": 13, "meet": [13, 31, 600, 602], "rphase": 13, "ephas": 13, "q_": 13, "stoke": [13, 636], "generic_hydraulic_conduct": 13, "st_p": 13, "relativep": 13, "flow_in": 13, "flow_out": 13, "detail": [13, 15, 22, 24, 25, 26, 28, 29, 30, 31, 33, 477, 541, 555, 812, 828, 834, 835, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1622], "plesas": 13, "conduit_hydraulic_conduct": 13, "hydraulic_conduct": [13, 31, 592, 593, 810, 818], "select": [13, 28, 30, 33, 61, 350, 595, 609, 624, 639, 648, 656, 661, 667, 672, 678, 692, 696, 699, 706, 713, 834, 835, 1611, 1647, 1667, 1680], "higher": [13, 25, 31, 32, 98, 712, 765, 789, 796, 807], "snwp_num": 13, "max_seq": 13, "max": [13, 28, 29, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 650, 698, 701, 726, 727, 827, 828, 829, 867, 906, 944, 982, 1022, 1061, 1100, 1138, 1176, 1206, 1238, 1272, 1306, 1336, 1368, 1397, 1425, 1453, 1485, 1515, 1547, 1577], "stop": [13, 1731, 1749], "relperm_nwp": 13, "relperm_wp": 13, "rate_abs_nwp": 13, "rate_abs_wp": 13, "rate_enwp": 13, "rate_ewp": 13, "06": [13, 28, 548, 586, 589, 746, 751, 828, 829, 831], "08": [13, 30, 586, 589, 1601, 1603, 1607], "kr_nwp": 13, "kr_wp": 13, "kr": 13, "0x7fe84ac91340": 13, "folder": [14, 33, 35, 553, 557], "contribut": 14, "develop": [14, 20, 25, 29, 32, 34, 35, 553], "quit": [14, 25, 27, 28, 32, 652, 849, 888, 1043, 1082], "perman": 14, "repositori": 14, "via": [14, 17, 25, 26, 30, 32, 35, 549, 1002], "github": [14, 35, 1676], "NOT": [14, 32, 477, 541, 554, 714, 716, 719, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569], "suit": [14, 28, 30, 1472, 1534], "gaurante": 14, "usual": [14, 17, 22, 26, 29], "them": [14, 15, 21, 22, 24, 25, 26, 27, 29, 30, 32, 33, 458, 477, 541, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1612, 1615, 1640, 1645, 1652, 1653, 1736, 1754], "encourag": 14, "__version__": 14, "reader": 14, "least": [14, 24, 1630, 1638], "version": [14, 24, 27, 28, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 467, 487, 762, 798, 869, 908, 946, 984, 1024, 1063, 1102, 1140, 1178, 1208, 1240, 1274, 1308, 1338, 1370, 1399, 1427, 1455, 1487, 1517, 1549, 1579, 1664, 1666, 1668, 1670, 1673, 1675, 1677, 1679, 1681, 1683, 1684, 1686, 1739], "inten": 14, "part": [15, 22, 26, 27, 31, 621, 636, 765, 789, 796, 800, 807, 860, 861, 899, 900, 937, 938, 975, 976, 1013, 1014, 1054, 1055, 1093, 1094, 1131, 1132, 1169, 1170, 1622, 1627, 1628, 1640, 1652, 1665, 1667, 1678, 1680], "design": [15, 17, 21, 22, 25, 477, 541, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569], "cover": [15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "pore_to_pore_dist": [15, 29], "those": [15, 27, 29, 33, 347, 381, 414, 557, 647, 650, 698, 701, 726, 727, 857, 860, 861, 871, 896, 899, 900, 910, 934, 937, 938, 948, 972, 975, 976, 986, 1010, 1013, 1014, 1026, 1051, 1054, 1055, 1065, 1090, 1093, 1094, 1104, 1128, 1131, 1132, 1142, 1166, 1169, 1170, 1180, 1621, 1623, 1627, 1628], "receiv": [15, 27, 43, 55, 75, 87, 102, 115, 135, 147, 168, 180, 200, 213, 233, 245, 266, 278, 299, 311, 332, 344, 366, 378, 399, 411, 432, 444, 481, 493, 505, 509, 758, 856, 876, 895, 915, 933, 953, 971, 991, 1009, 1031, 1050, 1070, 1089, 1109, 1127, 1147, 1165, 1185, 1202, 1214, 1232, 1246, 1266, 1280, 1300, 1314, 1332, 1344, 1362, 1376, 1393, 1405, 1421, 1433, 1449, 1461, 1479, 1493, 1511, 1523, 1541, 1555, 1573, 1585], "avoid": [15, 17, 26, 28, 32, 556], "long": [15, 24, 26, 28, 29, 67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 472, 500, 729, 744, 854, 859, 883, 893, 898, 922, 931, 936, 960, 969, 974, 998, 1007, 1012, 1038, 1048, 1053, 1077, 1087, 1092, 1116, 1125, 1130, 1154, 1163, 1168, 1192, 1221, 1226, 1254, 1260, 1288, 1294, 1322, 1351, 1356, 1384, 1412, 1440, 1468, 1473, 1501, 1530, 1535, 1563, 1592, 1622, 1626], "tail": [15, 28, 646, 654, 704, 737, 1120], "And": [15, 19, 21, 24, 25, 26, 28, 29, 31], "featur": [15, 17, 21, 24, 26, 27, 28, 29, 35, 458, 525, 553, 827], "rand": [15, 19, 21, 28, 30, 651, 653, 655, 702, 703, 705, 728, 729, 733, 740, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164], "5292881": 15, "62911362": 15, "56165803": 15, "52692991": 15, "45419288": 15, "58753647": 15, "46255233": 15, "7350638": 15, "77819766": 15, "wonder": [15, 24], "why": [15, 24], "write": [15, 19, 21, 22, 24, 26, 28, 560, 561, 564, 572], "pass": [15, 24, 26, 28, 29, 30, 347, 381, 414, 477, 496, 541, 544, 758, 761, 762, 763, 764, 765, 767, 768, 769, 772, 774, 783, 785, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 803, 804, 806, 807, 810, 837, 850, 879, 889, 918, 927, 956, 965, 994, 1003, 1034, 1044, 1073, 1083, 1112, 1121, 1150, 1159, 1188, 1198, 1217, 1227, 1250, 1261, 1284, 1295, 1318, 1328, 1347, 1357, 1380, 1389, 1408, 1417, 1436, 1445, 1464, 1474, 1497, 1507, 1526, 1536, 1559, 1569, 1588, 1647, 1654, 1655, 1680, 1737, 1785], "what": [15, 17, 21, 22, 24, 26, 27, 28, 29, 30, 35, 758, 827, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164, 1645], "forc": [15, 28, 61, 350], "expect": [15, 25, 28, 30, 1774], "caught": [15, 24], "written": [15, 21, 24, 26, 28, 29, 31, 572], "abil": [15, 24, 26, 30, 31, 458, 512], "variou": [15, 27, 28, 30, 61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 351, 353, 384, 386, 417, 419, 450, 451, 557, 609, 624, 639, 661, 678, 713], "placesn": 15, "throughout": [15, 19, 26, 28, 29, 1416], "script": [15, 29, 1603], "desir": [15, 26, 27, 28, 29, 30, 477, 528, 541, 558, 560, 564, 565, 569, 571, 573, 779, 850, 854, 855, 889, 893, 894, 926, 927, 931, 932, 965, 969, 970, 1003, 1007, 1008, 1044, 1048, 1049, 1083, 1087, 1088, 1121, 1125, 1126, 1159, 1163, 1164, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1648], "proudc": 15, "worri": [17, 22], "until": [17, 32, 652, 1678], "equival": [17, 30, 59, 67, 89, 93, 119, 125, 151, 158, 184, 191, 217, 223, 249, 256, 282, 289, 315, 322, 348, 356, 382, 389, 415, 422, 448, 454, 472, 496, 500, 544, 857, 860, 861, 871, 879, 883, 896, 899, 900, 910, 918, 922, 934, 937, 938, 948, 956, 960, 972, 975, 976, 986, 994, 998, 1010, 1013, 1014, 1026, 1034, 1038, 1051, 1054, 1055, 1065, 1073, 1077, 1090, 1093, 1094, 1104, 1112, 1116, 1128, 1131, 1132, 1142, 1150, 1154, 1166, 1169, 1170, 1180, 1188, 1192, 1217, 1221, 1250, 1254, 1258, 1284, 1288, 1292, 1318, 1322, 1326, 1347, 1351, 1380, 1384, 1408, 1412, 1436, 1440, 1464, 1468, 1497, 1501, 1505, 1526, 1530, 1559, 1563, 1567, 1588, 1592, 1623, 1627, 1628, 1680, 1682], "web": 17, "browser": [17, 33], "window": 17, "tab": [17, 28, 33], "insid": [17, 677, 827, 1016], "isol": [17, 27, 1615, 1626, 1645, 1794], "associ": [17, 393, 458, 525, 646, 650, 651, 653, 654, 655, 698, 701, 702, 703, 704, 705, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 736, 737, 738, 739, 740, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 823, 824, 825, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 1416, 1737, 1788], "There": [17, 24, 25, 27, 28, 29, 30, 31, 554, 712], "open": [17, 33, 34, 35, 571, 834, 835, 1622, 1737, 1774, 1783], "regist": [17, 1737], "load": [17, 552, 553, 556, 557, 1783, 1784, 1789], "verifi": [17, 22, 31], "current": [17, 21, 25, 30, 33, 37, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 553, 834, 835, 836, 838, 839, 840, 841, 842, 843, 1653, 1739, 1783, 1784, 1788, 1789], "empti": [17, 29, 30, 31, 50, 54, 59, 82, 86, 89, 109, 114, 119, 142, 146, 151, 175, 179, 184, 207, 212, 217, 240, 244, 249, 273, 277, 282, 306, 310, 315, 339, 343, 348, 373, 377, 382, 406, 410, 415, 439, 443, 448, 469, 488, 492, 506, 521, 536, 751, 870, 875, 909, 914, 947, 952, 985, 990, 1025, 1030, 1064, 1069, 1103, 1108, 1141, 1146, 1179, 1184, 1209, 1213, 1241, 1245, 1275, 1279, 1309, 1313, 1339, 1343, 1371, 1375, 1388, 1400, 1404, 1428, 1432, 1456, 1460, 1488, 1492, 1518, 1522, 1550, 1554, 1580, 1584, 1629, 1687, 1695, 1707, 1721, 1733, 1751, 1768, 1785, 1787, 1793], "automat": [17, 26, 28, 30, 31, 565, 729, 1603, 1630, 1739, 1785], "id": [17, 25, 33, 848, 864, 866, 887, 903, 905, 926, 941, 943, 964, 979, 981, 1002, 1019, 1021, 1042, 1058, 1060, 1081, 1097, 1099, 1120, 1135, 1137, 1158, 1173, 1175], "0x7f95ab0aed10": 17, "possibl": [17, 21, 24, 25, 26, 27, 28, 29, 30, 35, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 529, 717, 718, 860, 861, 899, 900, 937, 938, 964, 975, 976, 1013, 1014, 1054, 1055, 1093, 1094, 1131, 1132, 1158, 1169, 1170, 1604, 1616, 1627, 1628, 1648, 1737], "proj": [17, 1739, 1778, 1785], "new_project": 17, "pn2": 17, "demo": [17, 24, 26, 30, 31, 32, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080], "activ": [17, 34, 35, 1774], "proj_01": [17, 1785], "proj_02": [17, 1778], "0x7f95ab0aeb30": 17, "purg": [17, 29, 60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 383, 416, 449, 497, 510, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589], "close_project": 17, "again": [17, 19, 27, 28, 31, 652], "pattern": [17, 32, 647, 829], "ONE": 17, "session": [17, 1774], "enabl": [17, 32, 568, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "lookup": [17, 27, 29, 30, 31, 772, 785, 1416], "relationship": [17, 22], "belong": [17, 21, 29, 32, 98, 477, 541, 744, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1614, 1652, 1737], "scan": [17, 28, 1015, 1016], "item": [17, 24, 27, 28, 30, 38, 72, 99, 130, 163, 195, 197, 228, 261, 294, 327, 361, 394, 427, 460, 479, 514, 526, 827, 836, 838, 839, 840, 841, 842, 843, 852, 891, 929, 967, 1005, 1046, 1085, 1123, 1161, 1200, 1229, 1230, 1263, 1264, 1297, 1298, 1330, 1359, 1360, 1391, 1419, 1447, 1476, 1477, 1509, 1538, 1539, 1571, 1667, 1669, 1680, 1682, 1688, 1700, 1713, 1714, 1725, 1727, 1733, 1736, 1738, 1742, 1745, 1751, 1754, 1757, 1775, 1798, 1799], "0x7f95aac0c860": 17, "handl": [17, 25, 27, 28, 30, 32, 59, 60, 89, 90, 119, 121, 151, 152, 184, 185, 217, 218, 219, 220, 249, 250, 282, 283, 315, 316, 348, 349, 382, 383, 415, 416, 448, 449, 477, 497, 510, 541, 549, 556, 566, 569, 729, 758, 850, 880, 889, 919, 927, 957, 965, 995, 1002, 1003, 1035, 1044, 1074, 1083, 1113, 1121, 1151, 1159, 1189, 1198, 1218, 1227, 1249, 1251, 1261, 1283, 1285, 1295, 1317, 1319, 1328, 1348, 1357, 1379, 1381, 1389, 1409, 1417, 1437, 1445, 1465, 1474, 1496, 1498, 1507, 1527, 1536, 1558, 1560, 1569, 1589, 1603, 1778, 1793], "trigger": [17, 24, 30], "doe": [17, 21, 26, 27, 28, 30, 31, 32, 60, 61, 67, 69, 90, 93, 95, 121, 125, 127, 152, 158, 160, 185, 191, 193, 196, 219, 223, 225, 250, 256, 258, 283, 289, 291, 316, 322, 324, 349, 350, 356, 358, 383, 389, 391, 416, 422, 424, 449, 454, 456, 472, 474, 497, 500, 502, 510, 523, 538, 554, 572, 714, 715, 716, 717, 718, 719, 832, 880, 883, 885, 919, 922, 924, 957, 960, 962, 995, 998, 1000, 1035, 1038, 1040, 1074, 1077, 1079, 1113, 1116, 1118, 1151, 1154, 1156, 1189, 1192, 1194, 1218, 1221, 1223, 1251, 1254, 1256, 1285, 1288, 1290, 1319, 1322, 1324, 1348, 1351, 1353, 1381, 1384, 1386, 1409, 1412, 1414, 1437, 1440, 1442, 1465, 1468, 1470, 1498, 1501, 1503, 1527, 1530, 1532, 1560, 1563, 1565, 1589, 1592, 1594, 1630, 1650, 1697, 1711, 1723, 1776, 1791, 1794], "search": [17, 29, 55, 66, 87, 92, 98, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 355, 378, 388, 411, 421, 444, 453, 493, 499, 509, 511, 652, 859, 876, 882, 898, 915, 921, 936, 953, 959, 974, 991, 997, 1012, 1031, 1037, 1053, 1070, 1076, 1092, 1109, 1115, 1130, 1147, 1153, 1168, 1185, 1191, 1214, 1220, 1246, 1253, 1280, 1287, 1314, 1321, 1344, 1350, 1376, 1383, 1405, 1411, 1433, 1439, 1461, 1467, 1493, 1500, 1523, 1529, 1555, 1562, 1585, 1591], "seem": [17, 24, 29], "convolut": [17, 22, 647], "benefit": [17, 28, 30], "v1": 17, "lead": [17, 27, 28, 1616], "memori": [17, 27, 29, 556, 1604], "leak": 17, "tricki": 17, "delet": [17, 24, 25, 27, 29, 63, 154, 187, 252, 285, 318, 352, 385, 418, 887, 1648, 1665, 1667, 1669, 1783], "syntact": [17, 30], "sugar": [17, 30], "behind": [17, 21, 24, 27, 30, 1416], "scene": [17, 21, 24, 27, 30, 1416], "uphold": 17, "output": [19, 25, 26, 29, 32, 33, 35, 571, 1674, 1798, 1799], "underli": 19, "speci": [19, 21, 26, 758, 762, 767, 768, 777, 782, 785, 787, 791, 793, 802, 834, 835, 1226, 1229, 1249, 1258, 1260, 1263, 1283, 1292, 1294, 1297, 1317, 1326, 1355, 1356, 1359, 1379, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1473, 1476, 1496, 1505, 1535, 1538, 1558, 1567], "j": [19, 22, 26, 27, 31, 34, 196, 647, 756, 765, 768, 774, 789, 796, 800, 807, 812, 825, 829, 1624, 1651, 1658], "consid": [19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 122, 220, 652, 659, 717, 718, 746, 751, 818, 860, 861, 899, 900, 937, 938, 975, 976, 1013, 1014, 1054, 1055, 1093, 1094, 1120, 1131, 1132, 1169, 1170, 1614, 1618, 1622, 1626, 1627, 1628, 1630, 1639, 1658, 1687], "c_a": [19, 21, 621], "composit": [19, 758, 762, 1225, 1259, 1293, 1472, 1534, 1797], "temperatur": [19, 20, 21, 26, 30, 31, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 586, 589, 758, 761, 762, 763, 765, 767, 768, 769, 772, 774, 783, 785, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 803, 804, 806, 807, 816, 834, 835, 867, 906, 944, 982, 1022, 1061, 1100, 1138, 1176, 1206, 1238, 1272, 1306, 1336, 1368, 1397, 1425, 1453, 1485, 1515, 1547, 1577], "subject": [19, 28, 30, 31], "present": [19, 25, 26, 27, 29, 30, 43, 50, 51, 52, 55, 59, 66, 69, 75, 82, 83, 84, 87, 89, 92, 95, 102, 109, 110, 111, 115, 119, 120, 122, 124, 127, 135, 142, 143, 144, 147, 151, 157, 160, 168, 175, 176, 177, 180, 184, 190, 193, 200, 207, 208, 209, 213, 217, 218, 220, 222, 225, 233, 240, 241, 242, 245, 249, 255, 258, 266, 273, 274, 275, 278, 282, 288, 291, 299, 306, 307, 308, 311, 315, 321, 324, 332, 339, 340, 341, 344, 348, 355, 358, 366, 373, 374, 375, 378, 382, 388, 391, 399, 406, 407, 408, 411, 415, 421, 424, 432, 439, 440, 441, 444, 448, 453, 456, 474, 481, 488, 489, 490, 493, 499, 502, 505, 506, 507, 508, 509, 511, 523, 538, 714, 716, 719, 785, 856, 864, 866, 870, 872, 873, 876, 882, 885, 895, 903, 905, 909, 911, 912, 915, 921, 924, 933, 941, 943, 947, 949, 950, 953, 959, 962, 971, 979, 981, 985, 987, 988, 991, 997, 1000, 1009, 1019, 1021, 1025, 1027, 1028, 1031, 1037, 1040, 1050, 1058, 1060, 1064, 1066, 1067, 1070, 1076, 1079, 1089, 1097, 1099, 1103, 1105, 1106, 1109, 1115, 1118, 1127, 1135, 1137, 1141, 1143, 1144, 1147, 1153, 1156, 1165, 1173, 1175, 1179, 1181, 1182, 1185, 1191, 1194, 1202, 1209, 1210, 1211, 1214, 1220, 1223, 1232, 1241, 1242, 1243, 1246, 1253, 1256, 1266, 1275, 1276, 1277, 1280, 1287, 1290, 1300, 1309, 1310, 1311, 1314, 1321, 1324, 1332, 1339, 1340, 1341, 1344, 1350, 1353, 1362, 1371, 1372, 1373, 1376, 1383, 1386, 1393, 1400, 1401, 1402, 1405, 1411, 1414, 1421, 1428, 1429, 1430, 1433, 1439, 1442, 1449, 1456, 1457, 1458, 1461, 1467, 1470, 1479, 1488, 1489, 1490, 1493, 1500, 1503, 1511, 1518, 1519, 1520, 1523, 1529, 1532, 1541, 1550, 1551, 1552, 1555, 1562, 1565, 1573, 1580, 1581, 1582, 1585, 1591, 1594, 1697, 1711, 1723, 1731, 1734, 1749, 1752, 1757, 1789, 1791], "2x2": 19, "nt": [19, 21, 22, 25, 26, 27, 28, 31, 32, 37, 46, 52, 66, 67, 68, 71, 78, 84, 92, 93, 94, 97, 105, 111, 124, 125, 126, 129, 138, 144, 157, 158, 159, 162, 171, 177, 190, 191, 192, 195, 203, 209, 222, 223, 224, 227, 236, 242, 255, 256, 257, 260, 269, 275, 288, 289, 290, 293, 302, 308, 321, 322, 323, 326, 335, 341, 355, 356, 357, 360, 369, 375, 388, 389, 390, 393, 402, 408, 421, 422, 423, 426, 435, 441, 453, 454, 455, 459, 464, 472, 473, 476, 484, 490, 499, 500, 501, 508, 511, 606, 621, 636, 677, 712, 848, 854, 855, 865, 873, 882, 883, 884, 887, 893, 894, 904, 912, 921, 922, 923, 926, 931, 932, 942, 950, 959, 960, 961, 964, 969, 970, 980, 988, 997, 998, 999, 1002, 1007, 1008, 1020, 1028, 1037, 1038, 1039, 1042, 1048, 1049, 1059, 1067, 1076, 1077, 1078, 1081, 1087, 1088, 1098, 1106, 1115, 1116, 1117, 1120, 1125, 1126, 1136, 1144, 1153, 1154, 1155, 1158, 1163, 1164, 1174, 1182, 1191, 1192, 1193, 1197, 1205, 1211, 1220, 1221, 1222, 1225, 1236, 1243, 1253, 1254, 1255, 1259, 1270, 1277, 1287, 1288, 1289, 1293, 1304, 1311, 1321, 1322, 1323, 1327, 1335, 1341, 1350, 1351, 1352, 1355, 1366, 1373, 1383, 1384, 1385, 1388, 1396, 1402, 1411, 1412, 1413, 1416, 1424, 1430, 1439, 1440, 1441, 1444, 1452, 1458, 1467, 1468, 1469, 1472, 1483, 1490, 1500, 1501, 1502, 1506, 1514, 1520, 1529, 1530, 1531, 1534, 1545, 1552, 1562, 1563, 1564, 1568, 1576, 1582, 1591, 1592, 1593, 1622, 1626], "interest": [19, 28, 30, 31, 32, 769, 780, 805, 834, 835, 836, 838, 839, 840, 841, 842, 843, 1618], "awai": [19, 24], "At": [19, 28, 668, 714, 716, 719, 1638], "absenc": 19, "reaction": [19, 21, 129, 260, 360, 808, 834, 835], "thu": [19, 26, 27, 28, 32, 57, 129, 149, 182, 247, 280, 313, 346, 380, 413, 446, 621, 636, 659, 860, 861, 899, 900, 937, 938, 975, 976, 1013, 1014, 1054, 1055, 1093, 1094, 1131, 1132, 1158, 1169, 1170, 1623, 1627, 1628], "balanc": [19, 21, 22, 31], "summat": 19, "g_": [19, 21, 22], "x_j": 19, "x_i": [19, 21, 762, 780, 805, 1237, 1271, 1305, 1367, 1484, 1546], "coupl": [19, 35], "linear": [19, 21, 22, 30, 31, 426, 553, 589, 780, 805, 834, 835, 836, 837, 839, 840, 841, 842, 843, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1120, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175, 1237, 1271, 1305, 1367, 1484, 1546, 1598, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1651], "hand": [19, 22, 24, 25, 27, 28, 30, 31, 32, 37, 129, 162, 227, 260, 293, 326, 360, 393, 426, 1604], "csgraph": [19, 32, 1614, 1629, 1652], "csg": [19, 32], "am": [19, 26, 27, 32, 848, 854, 864, 887, 893, 903, 926, 931, 941, 964, 969, 979, 1002, 1007, 1019, 1042, 1048, 1058, 1081, 1087, 1097, 1120, 1125, 1135, 1158, 1163, 1173, 1617, 1619, 1624, 1641, 1642, 1643, 1644], "create_adjacency_matrix": [19, 26, 27, 32, 864, 903, 941, 979, 1019, 1058, 1097, 1135, 1173], "weight": [19, 26, 27, 32, 647, 761, 762, 763, 764, 771, 773, 776, 780, 782, 792, 794, 795, 803, 804, 805, 806, 816, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175, 1237, 1271, 1305, 1367, 1484, 1546, 1629, 1648, 1656, 1659], "fmt": [19, 27, 32, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "csr": [19, 26, 32, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "triu": [19, 26, 27, 32, 854, 864, 893, 903, 931, 941, 969, 979, 1007, 1019, 1048, 1058, 1087, 1097, 1125, 1135, 1163, 1173], "fals": [19, 25, 26, 27, 29, 32, 55, 58, 60, 61, 66, 87, 90, 92, 98, 115, 121, 124, 147, 150, 152, 157, 180, 183, 185, 190, 213, 219, 222, 245, 248, 250, 255, 278, 281, 283, 288, 311, 314, 316, 321, 344, 349, 350, 355, 378, 383, 388, 411, 416, 421, 444, 447, 449, 453, 493, 497, 499, 509, 510, 511, 528, 530, 548, 562, 564, 566, 568, 570, 854, 855, 857, 859, 860, 861, 871, 876, 880, 882, 893, 894, 896, 898, 899, 900, 910, 915, 919, 921, 931, 932, 934, 936, 937, 938, 948, 953, 957, 959, 969, 970, 972, 974, 975, 976, 986, 991, 995, 997, 1007, 1008, 1010, 1012, 1013, 1014, 1026, 1031, 1035, 1037, 1048, 1049, 1051, 1053, 1054, 1055, 1065, 1070, 1074, 1076, 1087, 1088, 1090, 1092, 1093, 1094, 1104, 1109, 1113, 1115, 1125, 1126, 1128, 1130, 1131, 1132, 1142, 1147, 1151, 1153, 1163, 1164, 1166, 1168, 1169, 1170, 1180, 1185, 1189, 1191, 1214, 1218, 1220, 1246, 1251, 1253, 1280, 1285, 1287, 1314, 1319, 1321, 1344, 1348, 1350, 1376, 1381, 1383, 1405, 1409, 1411, 1433, 1437, 1439, 1461, 1465, 1467, 1493, 1498, 1500, 1523, 1527, 1529, 1555, 1560, 1562, 1585, 1589, 1591, 1623, 1627, 1628, 1638, 1687, 1736, 1754, 1793, 1801, 1804, 1805], "laplacian": 19, "todens": [19, 21, 26, 27], "75094724": 19, "69249108": 19, "05845617": 19, "72163695": 19, "02914587": 19, "15019836": 19, "09174219": 19, "12088807": 19, "trivial": [19, 27, 29, 32, 195], "movement": [19, 32], "r_i": [19, 22], "replac": [19, 28, 29, 30, 35, 572, 647, 722], "b_i": 19, "x_0": 19, "r_3": 19, "dtype": [19, 26, 27, 32, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "n": [19, 22, 24, 27, 30, 32, 554, 619, 634, 669, 724, 768, 769, 788, 789, 812, 834, 835, 859, 860, 898, 899, 936, 937, 964, 974, 975, 1002, 1012, 1013, 1053, 1054, 1092, 1093, 1130, 1131, 1158, 1168, 1169, 1614, 1617, 1620, 1629, 1630, 1640, 1652, 1658, 1676], "linalg": [19, 1607, 1609], "68284965": 19, "79634967": 19, "85248118": 19, "convert": [19, 20, 27, 28, 32, 67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 472, 500, 561, 570, 647, 762, 777, 783, 837, 858, 883, 897, 922, 935, 960, 973, 998, 1011, 1038, 1052, 1077, 1091, 1116, 1129, 1154, 1167, 1192, 1221, 1254, 1288, 1322, 1351, 1384, 1412, 1440, 1468, 1501, 1530, 1563, 1592, 1604, 1617, 1624, 1631, 1656, 1659, 1795, 1804, 1805, 1806, 1807], "dens": 19, "form": [19, 22, 27, 28, 30, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 677, 717, 772, 780, 805, 812, 848, 964, 1081, 1158, 1237, 1271, 1305, 1367, 1484, 1546, 1612, 1647, 1651], "larger": [19, 22, 28, 32], "natur": [19, 24, 25, 780, 805, 812, 828, 1002, 1237, 1271, 1305, 1367, 1484, 1546], "particular": 19, "bc": [19, 21, 31, 32, 39, 40, 41, 59, 73, 89, 100, 119, 131, 132, 133, 151, 164, 165, 166, 184, 196, 198, 217, 229, 230, 231, 249, 262, 263, 264, 282, 295, 296, 297, 315, 328, 329, 330, 348, 362, 363, 364, 382, 395, 396, 397, 415, 428, 429, 430, 448], "coo": [19, 26, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175, 1617, 1619, 1656, 1659], "manner": [19, 566, 1615], "element": [19, 24, 26, 28, 29, 31, 32, 50, 56, 82, 88, 109, 116, 142, 148, 175, 181, 207, 214, 240, 246, 273, 279, 306, 312, 339, 345, 373, 379, 406, 412, 439, 445, 470, 488, 494, 506, 549, 565, 568, 577, 578, 579, 580, 581, 582, 583, 606, 621, 636, 646, 647, 654, 704, 724, 732, 735, 737, 739, 831, 832, 854, 858, 870, 871, 877, 893, 897, 909, 910, 916, 931, 935, 947, 948, 954, 969, 973, 985, 986, 992, 1007, 1011, 1025, 1026, 1032, 1048, 1052, 1064, 1065, 1071, 1087, 1091, 1103, 1104, 1110, 1125, 1129, 1141, 1142, 1148, 1163, 1167, 1179, 1180, 1186, 1209, 1215, 1241, 1247, 1275, 1281, 1309, 1315, 1339, 1345, 1371, 1377, 1400, 1406, 1428, 1434, 1456, 1462, 1488, 1494, 1518, 1524, 1550, 1556, 1580, 1586, 1614, 1616, 1624, 1652, 1730, 1736, 1743, 1748, 1754, 1757, 1758, 1760, 1761, 1762, 1763, 1768, 1769, 1770, 1772], "row": [19, 26, 27, 751, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175, 1653], "except": [19, 24, 26, 33, 59, 67, 89, 93, 119, 120, 122, 125, 151, 158, 184, 191, 196, 217, 218, 220, 223, 249, 256, 282, 289, 315, 322, 348, 356, 382, 389, 415, 422, 448, 454, 472, 500, 529, 883, 922, 926, 960, 998, 1038, 1077, 1116, 1154, 1192, 1221, 1254, 1288, 1322, 1351, 1384, 1412, 1440, 1468, 1501, 1530, 1563, 1592], "diagon": [19, 27, 848, 1081, 1604, 1651], "cannot": [19, 24, 26, 27, 30, 63, 98, 154, 187, 252, 285, 318, 352, 385, 418, 1120], "index": [19, 24, 26, 27, 28, 29, 30, 32, 458, 554, 712, 749, 858, 897, 935, 973, 1011, 1052, 1091, 1129, 1167, 1623, 1732, 1733, 1750, 1751], "inspect": [19, 22, 25, 26, 28, 29, 30, 529, 1120], "hit": [19, 28], "Then": [19, 28, 29, 33], "diag": 19, "setdiag": 19, "eliminate_zero": [19, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164], "proper": [19, 28, 810], "spsolv": [19, 1605, 1609], "tocsr": 19, "identi": 19, "effort": 19, "deal": [19, 30, 31, 1611], "becom": [19, 22, 27, 29, 831, 1798, 1799], "intract": 19, "si": [20, 28, 553], "relat": [20, 22, 25, 28, 30, 32, 668, 669, 758, 808], "tabl": [20, 22, 26, 1604, 1798, 1799, 1804, 1805], "pa": [20, 30, 32, 761, 767, 768, 769, 788, 792, 794, 799, 803, 804, 806, 807], "emperatur": 20, "examin": 20, "section": [20, 21, 22, 26, 28, 31, 553, 600, 602, 640, 641, 642, 643, 644, 647, 657, 659, 673, 674, 675, 692, 693, 694, 695, 700, 714, 810, 818, 820, 821, 1632, 1662, 1663, 1665, 1667, 1669, 1676, 1680, 1682], "298": 20, "101325": 20, "water_correl": [20, 30, 31, 590], "mean_vi": 20, "3f": 20, "mpa": 20, "893": 20, "report": [20, 30, 1766, 1767], "celsiu": 20, "unyt": 20, "pint": 20, "despit": [20, 570], "broad": 20, "due": [20, 28, 29, 31, 758], "overhead": 20, "pre": [20, 21, 26, 28, 30, 32, 621, 636, 651, 702, 728], "still": [21, 25, 32, 35], "progress": [21, 23, 32], "incorpor": 21, "chemic": [21, 30, 758, 762, 772, 785, 798, 1225, 1416, 1472, 1534], "0x7f0cc9d93ef0": 21, "ph": 21, "varieti": [21, 25, 26, 30, 31, 1774], "standar": 21, "a_0": 21, "a_1": 21, "a_3": 21, "rightarrow": [21, 22], "r_a": 21, "kc_a": 21, "kinet": [21, 834, 835], "strong": [21, 30], "source_term": [21, 837], "power_law": 21, "specif": [21, 22, 24, 27, 28, 29, 32, 39, 73, 100, 118, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 557, 729, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164, 1611, 1630, 1645, 1680, 1682, 1737], "isotherm": 21, "a1": [21, 30, 758, 836, 838, 839, 840, 841, 842], "a2": [21, 30, 836, 838, 839, 840, 841, 842], "a3": [21, 30, 836, 839, 840, 841, 842], "unpack": 21, "retriev": [21, 22, 24, 28, 29, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 458, 470, 494, 651, 702, 728, 877, 916, 954, 992, 1032, 1071, 1110, 1148, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586, 1737], "throw": [21, 26, 30, 1800], "scalar": [21, 29, 30, 57, 62, 64, 149, 153, 155, 182, 186, 188, 247, 251, 253, 280, 284, 286, 313, 317, 319, 346, 347, 351, 353, 380, 381, 384, 386, 413, 414, 417, 419, 446, 450, 451, 553, 572, 723, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 780, 783, 785, 787, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 803, 804, 805, 806, 807, 849, 859, 871, 888, 898, 910, 936, 948, 964, 974, 986, 1002, 1012, 1026, 1043, 1053, 1065, 1082, 1092, 1104, 1130, 1142, 1158, 1168, 1180, 1226, 1237, 1258, 1260, 1271, 1292, 1294, 1305, 1326, 1356, 1367, 1473, 1484, 1505, 1535, 1546, 1567, 1613, 1631, 1632, 1633, 1639, 1645, 1648, 1650, 1651], "string": [21, 24, 43, 51, 52, 56, 59, 75, 83, 84, 88, 89, 102, 110, 111, 116, 119, 135, 143, 144, 148, 151, 168, 176, 177, 181, 184, 200, 208, 209, 214, 217, 218, 220, 233, 241, 242, 246, 249, 266, 274, 275, 279, 282, 299, 307, 308, 312, 315, 332, 340, 341, 345, 348, 366, 374, 375, 379, 382, 399, 407, 408, 412, 415, 432, 440, 441, 445, 448, 470, 481, 489, 490, 494, 495, 505, 507, 508, 543, 565, 568, 769, 856, 872, 873, 877, 878, 895, 911, 912, 916, 917, 933, 949, 950, 954, 955, 971, 987, 988, 992, 993, 1009, 1027, 1028, 1032, 1033, 1050, 1066, 1067, 1071, 1072, 1089, 1105, 1106, 1110, 1111, 1127, 1143, 1144, 1148, 1149, 1165, 1181, 1182, 1186, 1187, 1202, 1210, 1211, 1215, 1216, 1232, 1242, 1243, 1247, 1248, 1266, 1276, 1277, 1281, 1282, 1300, 1310, 1311, 1315, 1316, 1332, 1340, 1341, 1345, 1346, 1362, 1372, 1373, 1377, 1378, 1393, 1401, 1402, 1406, 1407, 1421, 1429, 1430, 1434, 1435, 1449, 1457, 1458, 1462, 1463, 1479, 1489, 1490, 1494, 1495, 1511, 1519, 1520, 1524, 1525, 1541, 1551, 1552, 1556, 1557, 1573, 1581, 1582, 1586, 1587, 1616, 1663, 1665, 1676, 1685, 1783, 1788, 1798, 1799], "set_sourc": 21, "act": [21, 24, 26, 658, 660, 721, 1613, 1806], "seen": [21, 25, 26, 28, 29, 30, 31], "fick_02": 21, "0x7f0cc9d94720": 21, "boolean": [21, 24, 25, 32, 49, 55, 60, 66, 67, 68, 81, 87, 90, 92, 93, 94, 108, 115, 121, 124, 125, 126, 141, 147, 152, 157, 158, 159, 174, 180, 185, 190, 191, 192, 206, 213, 219, 222, 223, 224, 239, 245, 250, 255, 256, 257, 272, 278, 283, 288, 289, 290, 305, 311, 316, 321, 322, 323, 338, 344, 349, 355, 356, 357, 372, 378, 383, 388, 389, 390, 405, 411, 416, 421, 422, 423, 438, 444, 449, 453, 454, 455, 467, 472, 473, 487, 493, 497, 499, 500, 501, 504, 509, 510, 511, 568, 860, 861, 869, 876, 880, 882, 883, 884, 899, 900, 908, 915, 919, 921, 922, 923, 937, 938, 946, 953, 957, 959, 960, 961, 975, 976, 984, 991, 995, 997, 998, 999, 1013, 1014, 1024, 1031, 1035, 1037, 1038, 1039, 1054, 1055, 1063, 1070, 1074, 1076, 1077, 1078, 1093, 1094, 1102, 1109, 1113, 1115, 1116, 1117, 1131, 1132, 1140, 1147, 1151, 1153, 1154, 1155, 1169, 1170, 1178, 1185, 1189, 1191, 1192, 1193, 1208, 1214, 1218, 1220, 1221, 1222, 1240, 1246, 1251, 1253, 1254, 1255, 1274, 1280, 1285, 1287, 1288, 1289, 1308, 1314, 1319, 1321, 1322, 1323, 1338, 1344, 1348, 1350, 1351, 1352, 1370, 1376, 1381, 1383, 1384, 1385, 1399, 1405, 1409, 1411, 1412, 1413, 1427, 1433, 1437, 1439, 1440, 1441, 1455, 1461, 1465, 1467, 1468, 1469, 1487, 1493, 1498, 1500, 1501, 1502, 1517, 1523, 1527, 1529, 1530, 1531, 1549, 1555, 1560, 1562, 1563, 1564, 1579, 1585, 1589, 1591, 1592, 1593, 1614, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1638, 1639, 1640, 1648, 1652, 1798, 1799], "true": [21, 24, 25, 26, 27, 28, 29, 32, 55, 61, 66, 67, 68, 87, 92, 93, 94, 98, 115, 124, 125, 126, 147, 157, 158, 159, 180, 190, 191, 192, 196, 213, 222, 223, 224, 245, 255, 256, 257, 278, 288, 289, 290, 311, 321, 322, 323, 344, 350, 355, 356, 357, 378, 388, 389, 390, 411, 421, 422, 423, 444, 453, 454, 455, 458, 472, 473, 493, 499, 500, 501, 509, 511, 570, 596, 601, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 630, 633, 637, 638, 640, 644, 698, 701, 710, 726, 727, 854, 855, 857, 859, 860, 861, 871, 876, 882, 883, 884, 893, 894, 896, 898, 899, 900, 910, 915, 921, 922, 923, 926, 931, 932, 934, 936, 937, 938, 948, 953, 959, 960, 961, 969, 970, 972, 974, 975, 976, 986, 991, 997, 998, 999, 1007, 1008, 1010, 1012, 1013, 1014, 1026, 1031, 1037, 1038, 1039, 1048, 1049, 1051, 1053, 1054, 1055, 1065, 1070, 1076, 1077, 1078, 1087, 1088, 1090, 1092, 1093, 1094, 1104, 1109, 1115, 1116, 1117, 1125, 1126, 1128, 1130, 1131, 1132, 1142, 1147, 1153, 1154, 1155, 1163, 1164, 1166, 1168, 1169, 1170, 1180, 1185, 1191, 1192, 1193, 1214, 1220, 1221, 1222, 1229, 1246, 1253, 1254, 1255, 1263, 1280, 1287, 1288, 1289, 1297, 1314, 1321, 1322, 1323, 1344, 1350, 1351, 1352, 1359, 1376, 1383, 1384, 1385, 1405, 1411, 1412, 1413, 1433, 1439, 1440, 1441, 1461, 1467, 1468, 1469, 1476, 1493, 1500, 1501, 1502, 1523, 1529, 1530, 1531, 1538, 1555, 1562, 1563, 1564, 1585, 1591, 1592, 1593, 1614, 1617, 1618, 1619, 1623, 1626, 1627, 1628, 1631, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1648, 1652, 1765, 1793, 1801, 1804, 1805], "had": [21, 29], "another_react": 21, "printout": [21, 25, 30], "initial_guess": [21, 31], "awar": [21, 24, 572], "iter": [21, 28, 37, 44, 69, 71, 76, 95, 97, 103, 127, 129, 136, 160, 162, 169, 193, 195, 201, 225, 227, 234, 258, 260, 267, 291, 293, 300, 324, 326, 333, 358, 360, 367, 391, 393, 400, 424, 426, 433, 456, 462, 474, 482, 502, 516, 523, 531, 538, 577, 578, 579, 580, 581, 582, 583, 652, 862, 885, 901, 924, 939, 962, 977, 1000, 1017, 1040, 1056, 1079, 1095, 1118, 1133, 1156, 1171, 1194, 1203, 1223, 1233, 1256, 1267, 1290, 1301, 1324, 1333, 1353, 1363, 1386, 1394, 1414, 1422, 1442, 1450, 1470, 1480, 1503, 1512, 1532, 1542, 1565, 1574, 1594, 1601, 1604, 1690, 1697, 1702, 1711, 1716, 1723, 1725, 1730, 1743, 1748, 1755, 1756, 1779, 1791], "henc": [21, 26, 28], "guess": [21, 58, 150, 183, 248, 281, 314, 447], "phase_01": [21, 30, 31, 1798, 1799], "0x7f0cc9d93ea0": 21, "s1": [21, 834, 835, 836, 838, 839, 840, 841, 842, 843], "s2": [21, 834, 835, 836, 838, 839, 840, 841, 842, 843], "recal": [21, 28, 31], "when": [21, 24, 26, 27, 28, 29, 30, 32, 33, 50, 59, 82, 89, 109, 119, 142, 151, 175, 184, 207, 217, 240, 249, 260, 273, 282, 306, 315, 339, 348, 373, 382, 406, 415, 439, 448, 458, 477, 488, 506, 541, 569, 649, 652, 677, 700, 810, 827, 831, 850, 870, 889, 909, 927, 947, 965, 985, 1003, 1025, 1044, 1064, 1083, 1103, 1121, 1141, 1159, 1179, 1198, 1209, 1227, 1241, 1261, 1275, 1295, 1309, 1328, 1339, 1357, 1371, 1389, 1400, 1417, 1428, 1445, 1456, 1474, 1488, 1507, 1518, 1536, 1550, 1569, 1580, 1604, 1629, 1653, 1663, 1685, 1737, 1789, 1798, 1799], "self": [21, 24, 513], "explanatori": 21, "patankar": 21, "ref": [21, 834, 835], "slope": [21, 731, 834, 835, 836, 838, 839, 840, 841, 842, 843, 1651], "intercept": [21, 26, 731, 834, 835, 836, 838, 839, 840, 841, 842, 843], "outlin": [21, 27, 28, 30, 32, 196, 477, 541, 552, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569], "around": [21, 22, 24, 31, 647, 1015], "flux": [21, 129], "consumpt": 21, "further": [21, 22, 25, 30], "expresss": 21, "abl": [21, 26, 27], "proce": [21, 27, 28, 98], "s_1": 21, "s_2": 21, "system": [21, 22, 549, 834, 835, 1598, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1631, 1649], "unknown": [21, 30, 58, 150, 183, 248, 281, 314, 447], "newton": 21, "rearrang": [21, 22], "deriv": [21, 458], "lump": 21, "togeth": [21, 28, 29, 31, 32, 553], "enter": [21, 22, 25, 57, 120, 149, 182, 247, 280, 313, 346, 380, 413, 446, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164], "previou": [21, 22, 33], "revisit": 21, "hidden": 21, "_build_a": 21, "_build_b": 21, "_apply_bc": 21, "_apply_sourc": 21, "rh": [21, 37, 129, 162, 227, 260, 293, 326, 360, 393, 426, 549], "evolv": 21, "2772059": 21, "97659478": 21, "30061112": 21, "16191017": 21, "43227822": 21, "75303717": 21, "04175993": 21, "60948171": 21, "00742723": 21, "03414816": 21, "67266795": 21, "37248497": 21, "96387616": 21, "62142349": 21, "11031048": 21, "53695261": 21, "38435732": 21, "71168937": 21, "15973567": 21, "82662281": 21, "36357542": 21, "ultim": [22, 31], "come": [22, 30], "sum_k": 22, "nb": 22, "m_": 22, "ik": 22, "c_i": 22, "c_k": 22, "overal": 22, "exit": [22, 57, 122, 149, 182, 220, 247, 280, 313, 346, 380, 413, 446], "n_p": 22, "cross": [22, 28, 31, 553, 600, 602, 640, 641, 642, 643, 644, 647, 657, 659, 673, 674, 675, 692, 693, 694, 695, 700, 714, 810, 818, 1632], "subscript": [22, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "denot": 22, "diffusion": 22, "transfer": [22, 834, 835, 1002], "cdot": [22, 762, 780, 805, 825, 1237, 1271, 1305, 1367, 1484, 1546], "assembli": 22, "begin": [22, 26, 32], "seri": [22, 25, 26, 31, 32, 619, 634], "electr": [22, 820, 821], "circuit": [22, 834, 835], "analogi": 22, "resist": 22, "invers": [22, 31, 1651], "r_": [22, 834, 835], "r_k": 22, "superscript": 22, "entir": [22, 26, 29, 30, 32, 810, 1637, 1671, 1676], "rewritten": 22, "g_i": 22, "g_k": 22, "simplic": 22, "assumpt": [22, 712], "pi": [22, 31, 636], "d_i": 22, "ell_i": 22, "quad": 22, "d_k": 22, "ell_k": 22, "ell_": 22, "literatur": 22, "text": [22, 1653], "past": 22, "sake": [22, 26], "clariti": 22, "introduc": [22, 25, 26, 28, 30], "terminologi": [22, 29], "coin": 22, "mathcal": 22, "decoupl": 22, "word": [22, 26, 27, 32, 653, 703, 733], "join": [22, 24, 562, 570, 1667, 1680], "_func": 22, "__all__": 22, "circles_and_rectangl": 22, "cones_and_cylind": 22, "intersecting_con": 22, "hybrid_cones_and_cylind": 22, "trapezoids_and_rectangl": 22, "hybrid_trapezoids_and_rectangl": 22, "intersecting_trapezoid": 22, "pyramids_and_cuboid": 22, "intersecting_pyramid": 22, "hybrid_pyramids_and_cuboid": 22, "squares_and_rectangl": 22, "ncylinders_in_seri": 22, "involv": [22, 32], "molecular": [22, 26, 761, 762, 763, 764, 782, 792, 794, 795, 803, 804, 806, 816], "heat": [22, 162, 774, 1002], "choic": [22, 28, 30], "taken": [22, 28, 30, 712, 1472, 1534, 1617], "dc": 22, "dx": [22, 829], "posit": [22, 57, 149, 182, 247, 280, 313, 346, 380, 413, 446, 712, 1653], "gradient": [22, 30, 57, 61, 149, 182, 247, 280, 313, 346, 350, 380, 413, 446, 1604], "int_": 22, "bigg": [22, 31], "big": [22, 834, 835], "combin": [22, 25, 29, 30, 570, 621, 636, 887, 1002, 1604, 1646, 1647, 1674], "_i": 22, "_k": 22, "a_i": 22, "a_": [22, 834, 835, 836, 838, 839, 840, 841, 842], "a_k": 22, "declar": 22, "earlier": 22, "breviti": 22, "nitti": 22, "gritti": 22, "pointer": 22, "slightli": [22, 26, 32], "main": [22, 26, 28, 30, 32, 59, 89, 117, 119, 151, 184, 217, 227, 249, 282, 315, 348, 382, 415, 448, 476, 525, 834, 835, 1120, 1740], "satisfi": [22, 29, 55, 66, 87, 92, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 355, 378, 388, 411, 421, 444, 453, 493, 499, 509, 511, 876, 882, 915, 921, 953, 959, 991, 997, 1031, 1037, 1070, 1076, 1109, 1115, 1147, 1153, 1185, 1191, 1214, 1220, 1246, 1253, 1280, 1287, 1314, 1321, 1344, 1350, 1376, 1383, 1405, 1411, 1433, 1439, 1461, 1467, 1493, 1500, 1523, 1529, 1555, 1562, 1585, 1591, 1621], "drop": [22, 25, 1619], "along": [22, 25, 26, 29, 30, 477, 541, 827, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1612, 1645, 1651], "p_i": 22, "p_k": 22, "slip": 22, "wall": 22, "gradual": 22, "dp": [22, 658, 660], "i_p": 22, "rho": [22, 30, 764, 787], "da": 22, "volumetr": 22, "polar": 22, "moment": 22, "inertia": 22, "calculu": 22, "p_j": 22, "friction": 22, "loss": [22, 26, 31], "inerti": 22, "safe": 22, "keep": [22, 27, 28, 35, 60, 90, 121, 152, 185, 195, 219, 250, 283, 316, 349, 383, 416, 449, 497, 510, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1416, 1437, 1465, 1498, 1527, 1560, 1589, 1680, 1682, 1794], "expand": [22, 29, 652], "cylidnr": 22, "128": [22, 32], "hagen": [22, 825], "poiseuil": [22, 31, 825], "ell": 22, "individu": [22, 26, 29, 30, 31, 32, 57, 149, 182, 247, 280, 313, 346, 380, 413, 446, 512, 758, 1355, 1651], "resistor": [22, 26, 31], "eventu": [22, 30], "discuss": [22, 24, 25, 26, 758], "column": [22, 26, 27, 28, 31, 32, 46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 464, 484, 557, 570, 712, 854, 855, 865, 893, 894, 904, 931, 932, 942, 969, 970, 980, 1007, 1008, 1020, 1048, 1049, 1059, 1087, 1088, 1098, 1125, 1126, 1136, 1163, 1164, 1174, 1205, 1236, 1270, 1304, 1335, 1366, 1396, 1424, 1452, 1483, 1514, 1545, 1576, 1624, 1713], "third": [22, 27, 834, 835, 1680], "machin": 22, "voxel": [22, 553], "vector": [22, 28, 30, 37, 57, 62, 64, 129, 149, 153, 155, 162, 182, 186, 188, 227, 247, 251, 253, 260, 280, 284, 286, 293, 313, 317, 319, 326, 346, 351, 353, 360, 380, 384, 386, 393, 413, 417, 419, 426, 446, 450, 451, 549, 712, 758, 762, 858, 897, 935, 973, 1011, 1052, 1091, 1129, 1167, 1604, 1612, 1624], "input": [22, 27, 33, 857, 859, 860, 861, 871, 896, 898, 899, 900, 910, 934, 936, 937, 938, 948, 972, 974, 975, 976, 986, 1010, 1012, 1013, 1014, 1026, 1051, 1053, 1054, 1055, 1065, 1090, 1092, 1093, 1094, 1104, 1128, 1130, 1131, 1132, 1142, 1166, 1168, 1169, 1170, 1180, 1612, 1623, 1627, 1628], "type": [22, 24, 25, 26, 29, 31, 33, 35, 39, 46, 47, 49, 51, 52, 56, 58, 59, 67, 68, 73, 78, 79, 81, 83, 84, 88, 89, 93, 94, 100, 105, 106, 108, 110, 111, 116, 119, 120, 122, 125, 126, 131, 138, 139, 141, 143, 144, 148, 150, 151, 158, 159, 164, 171, 172, 174, 176, 177, 181, 183, 184, 191, 192, 198, 203, 204, 206, 208, 209, 214, 217, 218, 220, 223, 224, 229, 236, 237, 239, 241, 242, 246, 248, 249, 256, 257, 262, 269, 270, 272, 274, 275, 279, 281, 282, 289, 290, 295, 302, 303, 305, 307, 308, 312, 314, 315, 322, 323, 328, 335, 336, 338, 340, 341, 345, 347, 348, 356, 357, 362, 369, 370, 372, 374, 375, 379, 381, 382, 389, 390, 395, 402, 403, 405, 407, 408, 412, 414, 415, 422, 423, 428, 435, 436, 438, 440, 441, 445, 447, 448, 454, 455, 464, 465, 467, 470, 472, 473, 484, 485, 487, 489, 490, 494, 500, 501, 507, 508, 549, 552, 553, 554, 556, 557, 561, 568, 569, 606, 621, 636, 643, 647, 649, 650, 652, 655, 659, 665, 671, 677, 689, 694, 698, 700, 701, 705, 708, 712, 715, 723, 726, 727, 729, 731, 732, 735, 736, 738, 740, 744, 746, 751, 762, 764, 768, 776, 779, 781, 782, 783, 785, 788, 789, 795, 796, 802, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 821, 823, 824, 825, 827, 828, 831, 834, 835, 836, 838, 839, 840, 841, 842, 843, 845, 846, 848, 854, 855, 858, 865, 867, 869, 872, 873, 877, 883, 884, 887, 893, 894, 897, 904, 906, 908, 911, 912, 916, 922, 923, 931, 932, 935, 942, 944, 946, 949, 950, 954, 960, 961, 964, 969, 970, 973, 980, 982, 984, 987, 988, 992, 998, 999, 1007, 1008, 1011, 1020, 1022, 1024, 1027, 1028, 1032, 1038, 1039, 1042, 1048, 1049, 1052, 1059, 1061, 1063, 1066, 1067, 1071, 1077, 1078, 1081, 1087, 1088, 1091, 1098, 1100, 1102, 1105, 1106, 1110, 1116, 1117, 1120, 1125, 1126, 1129, 1136, 1138, 1140, 1143, 1144, 1148, 1154, 1155, 1158, 1163, 1164, 1167, 1174, 1176, 1178, 1181, 1182, 1186, 1192, 1193, 1205, 1206, 1208, 1210, 1211, 1215, 1221, 1222, 1229, 1235, 1236, 1237, 1238, 1240, 1242, 1243, 1247, 1254, 1255, 1263, 1269, 1270, 1271, 1272, 1274, 1276, 1277, 1281, 1288, 1289, 1297, 1303, 1304, 1305, 1306, 1308, 1310, 1311, 1315, 1322, 1323, 1335, 1336, 1338, 1340, 1341, 1345, 1351, 1352, 1359, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1377, 1384, 1385, 1396, 1397, 1399, 1401, 1402, 1406, 1412, 1413, 1424, 1425, 1427, 1429, 1430, 1434, 1440, 1441, 1452, 1453, 1455, 1457, 1458, 1462, 1468, 1469, 1476, 1482, 1483, 1484, 1485, 1487, 1489, 1490, 1494, 1501, 1502, 1514, 1515, 1517, 1519, 1520, 1524, 1530, 1531, 1538, 1544, 1545, 1546, 1547, 1549, 1551, 1552, 1556, 1563, 1564, 1576, 1577, 1579, 1581, 1582, 1586, 1592, 1593, 1604, 1613, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1648, 1649, 1650, 1651, 1654, 1655, 1658, 1665, 1669, 1672, 1674, 1676, 1678, 1680, 1682, 1685, 1739, 1743, 1755, 1756, 1778, 1785, 1793, 1794, 1795, 1798, 1799, 1800, 1801, 1803, 1807], "akbari": 22, "sinton": 22, "bahrami": 22, "viscou": [22, 293], "microchannel": 22, "intern": [22, 26, 657, 658, 659, 660, 1624, 1630], "journal": [22, 669], "54": [22, 25, 30, 32], "2011": 22, "3970": 22, "3978": 22, "majid": 22, "michael": 22, "yovanovich": 22, "richard": 22, "culham": 22, "novel": 22, "singli": 22, "2007": [22, 647], "2492": 22, "2502": 22, "http": [22, 35, 196, 1676], "en": 22, "wikipedia": [22, 26], "org": [22, 196, 565], "wiki": 22, "e2": 22, "80": [22, 25, 32], "93poiseuille_equ": 22, "misaghian": 22, "niloo": 22, "et": [22, 647, 765, 768, 785, 789, 795, 803, 807, 829], "al": [22, 647, 765, 768, 785, 789, 795, 803, 807, 829], "neural": 22, "geoscienc": 22, "162": [22, 32], "105086": 22, "stil": 23, "structur": [24, 29, 32, 195, 553, 568, 647, 887], "comfort": 24, "topic": [24, 30], "squar": [24, 28, 582, 607, 622, 637, 690, 692, 693, 700, 714, 825, 964, 1158, 1631, 1639, 1641], "bracket": 24, "round": 24, "tupl": [24, 32, 54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 347, 377, 381, 410, 414, 443, 469, 492, 521, 530, 536, 549, 875, 914, 952, 990, 1030, 1069, 1108, 1146, 1184, 1213, 1245, 1279, 1313, 1343, 1375, 1404, 1432, 1460, 1492, 1522, 1554, 1584, 1614, 1622, 1652, 1658, 1695, 1707, 1721, 1787], "immut": 24, "read": [24, 25, 26, 30, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 834, 835, 867, 906, 944, 982, 1022, 1061, 1100, 1138, 1176, 1206, 1238, 1272, 1306, 1336, 1368, 1397, 1425, 1453, 1485, 1515, 1547, 1577], "32": [24, 25, 32], "longer": [24, 28, 568], "ing": 24, "extend": [24, 27, 32, 798, 829, 1639, 1646, 1672], "200": [24, 25, 32, 861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170], "300": [24, 30], "Or": [24, 26, 27], "good": [24, 25, 28], "math": 24, "try": [24, 26, 33], "typeerror": 24, "multipl": [24, 26, 29, 31, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 652, 717, 718, 736, 1617, 1646, 1653], "duplic": [24, 27, 28, 32, 1794], "oper": [24, 26, 28, 29, 724, 729, 1651], "str": [24, 39, 43, 46, 47, 49, 50, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 73, 75, 78, 79, 81, 82, 83, 84, 87, 88, 89, 90, 92, 100, 102, 105, 106, 108, 109, 110, 111, 115, 116, 119, 120, 121, 122, 124, 131, 135, 138, 139, 141, 142, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 157, 164, 168, 171, 172, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 198, 200, 203, 204, 206, 207, 208, 209, 213, 214, 217, 218, 219, 220, 222, 229, 233, 236, 237, 239, 240, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 255, 262, 266, 269, 270, 272, 273, 274, 275, 278, 279, 280, 282, 283, 284, 285, 286, 288, 295, 299, 302, 303, 305, 306, 307, 308, 311, 312, 313, 315, 316, 317, 318, 319, 321, 328, 332, 335, 336, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 362, 366, 369, 370, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 388, 395, 399, 402, 403, 405, 406, 407, 408, 411, 412, 413, 415, 416, 417, 418, 419, 421, 428, 432, 435, 436, 438, 439, 440, 441, 444, 445, 446, 448, 449, 450, 451, 453, 464, 465, 467, 470, 477, 478, 481, 484, 485, 487, 488, 489, 490, 493, 494, 496, 497, 499, 505, 506, 507, 508, 509, 510, 511, 541, 542, 544, 552, 553, 556, 557, 560, 565, 567, 568, 571, 572, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653, 655, 657, 659, 662, 663, 664, 665, 666, 669, 673, 674, 675, 677, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 698, 700, 701, 702, 703, 705, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 738, 740, 744, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 780, 782, 783, 785, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 815, 816, 817, 818, 820, 821, 823, 824, 825, 827, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 849, 850, 851, 854, 855, 856, 857, 860, 861, 864, 865, 866, 867, 869, 870, 871, 872, 873, 876, 877, 879, 880, 882, 887, 888, 889, 890, 893, 894, 895, 896, 899, 900, 903, 904, 905, 906, 908, 909, 910, 911, 912, 915, 916, 918, 919, 921, 926, 927, 928, 931, 932, 933, 934, 937, 938, 941, 942, 943, 944, 946, 947, 948, 949, 950, 953, 954, 956, 957, 959, 964, 965, 966, 969, 970, 971, 972, 975, 976, 979, 980, 981, 982, 984, 985, 986, 987, 988, 991, 992, 994, 995, 997, 1003, 1004, 1007, 1008, 1009, 1010, 1013, 1014, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1034, 1035, 1037, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1070, 1071, 1073, 1074, 1076, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1093, 1094, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1112, 1113, 1115, 1120, 1121, 1122, 1125, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1147, 1148, 1150, 1151, 1153, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1169, 1170, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1185, 1186, 1188, 1189, 1191, 1198, 1199, 1202, 1205, 1206, 1208, 1209, 1210, 1211, 1214, 1215, 1217, 1218, 1220, 1227, 1228, 1232, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1246, 1247, 1249, 1250, 1251, 1253, 1258, 1261, 1262, 1266, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1280, 1281, 1283, 1284, 1285, 1287, 1292, 1295, 1296, 1300, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1314, 1315, 1317, 1318, 1319, 1321, 1326, 1328, 1329, 1332, 1335, 1336, 1338, 1339, 1340, 1341, 1344, 1345, 1347, 1348, 1350, 1357, 1358, 1362, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1377, 1379, 1380, 1381, 1383, 1389, 1390, 1393, 1396, 1397, 1399, 1400, 1401, 1402, 1405, 1406, 1408, 1409, 1411, 1416, 1417, 1418, 1421, 1424, 1425, 1427, 1428, 1429, 1430, 1433, 1434, 1436, 1437, 1439, 1445, 1446, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1464, 1465, 1467, 1474, 1475, 1479, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1493, 1494, 1496, 1497, 1498, 1500, 1505, 1507, 1508, 1511, 1514, 1515, 1517, 1518, 1519, 1520, 1523, 1524, 1526, 1527, 1529, 1536, 1537, 1541, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1555, 1556, 1558, 1559, 1560, 1562, 1567, 1569, 1570, 1573, 1576, 1577, 1579, 1580, 1581, 1582, 1585, 1586, 1588, 1589, 1591, 1604, 1612, 1615, 1620, 1623, 1627, 1628, 1630, 1645, 1647, 1653, 1663, 1665, 1667, 1669, 1672, 1674, 1676, 1678, 1680, 1682, 1685, 1739, 1778, 1783, 1784, 1785, 1788, 1789, 1798, 1799, 1803], "integ": [24, 29, 565, 652, 1619, 1682], "introduct": [24, 27], "resourc": [24, 825], "internet": 24, "offici": [24, 35], "doc": [24, 1662, 1676], "answer": [24, 26], "question": 24, "exclus": 24, "nativ": [24, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "fast": [24, 27, 32], "downsid": [24, 28], "mini": [24, 28], "languag": [24, 28, 565], "understan": 24, "guid": 24, "fun": [24, 25], "arang": [24, 1800], "30": [24, 25, 32], "45": [24, 25, 32, 1651], "60": [24, 25, 32, 34, 785], "75": [24, 32, 33], "90": [24, 25, 30, 32], "hundr": 24, "profici": 24, "dir": 24, "999": [24, 1601, 1603, 1607], "fanci": [24, 26], "111": [24, 25, 32], "222": [24, 32, 768], "333": 24, "interpret": [24, 557, 837, 1639], "sens": [24, 27, 28, 31], "assur": [24, 1648], "elementwis": 24, "behavior": [24, 25, 28, 29, 30, 669], "unlik": [24, 28, 762, 785], "matlab": 24, "444": 24, "666": 24, "211": [24, 32], "322": 24, "433": 24, "190": [24, 32], "12321": 24, "49284": 24, "110889": 24, "8100": 24, "trick": [24, 28, 29, 31, 1631], "recogn": 24, "lack": [24, 27, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 456, 474, 502, 523, 538, 885, 924, 962, 1000, 1040, 1079, 1118, 1156, 1194, 1223, 1256, 1290, 1324, 1353, 1386, 1414, 1442, 1470, 1503, 1532, 1565, 1594, 1697, 1711, 1723, 1791], "thereof": 24, "offer": [24, 26, 28, 30, 32, 758, 887], "level": [24, 26, 30, 565, 568, 1774, 1796], "arr": [24, 29, 1713], "computation": [24, 32, 195], "ident": [24, 834, 835, 855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164, 1739], "familiar": 24, "readabl": [24, 553, 566], "peopl": 24, "who": [24, 30], "prefer": [24, 28], "piec": [24, 26, 30], "puzzl": 24, "datatyp": [24, 1740], "address": [24, 33], "pair": [24, 26, 27, 28, 31, 54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 377, 410, 443, 469, 492, 521, 536, 755, 834, 835, 848, 858, 875, 887, 897, 914, 935, 952, 964, 973, 990, 1011, 1030, 1042, 1052, 1069, 1081, 1091, 1108, 1120, 1129, 1146, 1158, 1167, 1184, 1213, 1245, 1279, 1313, 1343, 1375, 1404, 1432, 1460, 1492, 1522, 1554, 1584, 1617, 1624, 1629, 1695, 1707, 1721, 1787], "dict_valu": 24, "catch": [24, 29, 1800], "overview": [24, 28], "intimid": 24, "beautifulli": 24, "onc": [24, 28, 30, 31, 35, 478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1631, 1736, 1754], "feel": [24, 28], "relev": [24, 29], "extens": [24, 26, 1669, 1682], "often": [24, 26, 27, 29, 30, 31], "augment": [24, 25], "deep": [24, 528, 530, 1739], "dive": [24, 26], "idea": [24, 25, 26], "pertain": [24, 26], "whenev": [24, 1774], "__getitem__": 24, "__setitem__": [24, 26], "doubl": [24, 28, 1665], "underscor": 24, "intrins": 24, "sometim": [24, 64, 155, 188, 253, 286, 319, 353, 386, 419, 451, 1623], "magic": [24, 1416], "plu": [24, 1649, 1651], "extra": [24, 25, 28, 512], "newdict": 24, "setitem": 24, "super": 24, "dnew": 24, "overload": [24, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 467, 487, 869, 908, 946, 984, 1024, 1063, 1102, 1140, 1178, 1208, 1240, 1274, 1308, 1338, 1370, 1399, 1427, 1455, 1487, 1517, 1549, 1579], "perform": [24, 26, 27, 28, 31, 32, 34, 50, 51, 52, 55, 66, 82, 83, 84, 87, 92, 109, 110, 111, 115, 124, 142, 143, 144, 147, 157, 175, 176, 177, 180, 190, 207, 208, 209, 213, 216, 222, 240, 241, 242, 245, 255, 260, 273, 274, 275, 278, 288, 306, 307, 308, 311, 321, 326, 339, 340, 341, 344, 355, 373, 374, 375, 378, 388, 406, 407, 408, 411, 421, 439, 440, 441, 444, 453, 488, 489, 490, 493, 499, 506, 507, 508, 509, 511, 652, 859, 870, 872, 873, 876, 882, 898, 909, 911, 912, 915, 921, 936, 947, 949, 950, 953, 959, 964, 974, 985, 987, 988, 991, 997, 1002, 1012, 1025, 1027, 1028, 1031, 1037, 1053, 1064, 1066, 1067, 1070, 1076, 1092, 1103, 1105, 1106, 1109, 1115, 1130, 1141, 1143, 1144, 1147, 1153, 1168, 1179, 1181, 1182, 1185, 1191, 1209, 1210, 1211, 1214, 1220, 1241, 1242, 1243, 1246, 1253, 1275, 1276, 1277, 1280, 1287, 1309, 1310, 1311, 1314, 1321, 1339, 1340, 1341, 1344, 1350, 1371, 1372, 1373, 1376, 1383, 1400, 1401, 1402, 1405, 1411, 1428, 1429, 1430, 1433, 1439, 1456, 1457, 1458, 1461, 1467, 1488, 1489, 1490, 1493, 1500, 1518, 1519, 1520, 1523, 1529, 1550, 1551, 1552, 1555, 1562, 1580, 1581, 1582, 1585, 1591, 1622, 1630, 1651, 1653, 1808], "enforc": [24, 26, 1740, 1743], "foo": [24, 26, 30, 1740], "bar": [24, 26, 30, 33, 1676, 1740], "statement": 24, "rais": [24, 53, 54, 59, 63, 67, 85, 86, 89, 93, 113, 114, 119, 120, 122, 125, 145, 146, 151, 154, 158, 178, 179, 184, 187, 191, 196, 211, 212, 217, 218, 220, 223, 243, 244, 249, 252, 256, 276, 277, 282, 285, 289, 309, 310, 315, 318, 322, 342, 343, 348, 352, 356, 376, 377, 382, 385, 389, 409, 410, 415, 418, 422, 442, 443, 448, 454, 468, 469, 472, 491, 492, 500, 520, 521, 529, 535, 536, 874, 875, 883, 913, 914, 922, 951, 952, 960, 989, 990, 998, 1029, 1030, 1038, 1068, 1069, 1077, 1107, 1108, 1116, 1145, 1146, 1154, 1183, 1184, 1192, 1212, 1213, 1221, 1244, 1245, 1254, 1278, 1279, 1288, 1312, 1313, 1322, 1342, 1343, 1351, 1374, 1375, 1384, 1403, 1404, 1412, 1431, 1432, 1440, 1459, 1460, 1468, 1491, 1492, 1501, 1521, 1522, 1530, 1553, 1554, 1563, 1583, 1584, 1592, 1663, 1685, 1694, 1695, 1706, 1707, 1720, 1721, 1731, 1733, 1734, 1749, 1751, 1752, 1768, 1769, 1786, 1787], "clearli": [24, 28, 29, 32], "implememnt": 24, "startswith": [24, 27], "old": [24, 1651], "ones": [24, 25, 27, 63, 154, 187, 252, 285, 318, 352, 385, 418, 758, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164], "poreprop": 24, "blah": [24, 758], "bob": 24, "summari": [24, 30, 1604, 1672, 1674, 1678], "extrem": [24, 646, 654, 704, 737], "versatil": 24, "handi": 24, "alter": [24, 25, 28, 32], "interact": [24, 25, 1002], "rest": [25, 30, 32, 926, 1804, 1805], "troubleshoot": 25, "full": [25, 28, 30, 31, 35, 458, 477, 541, 557, 596, 597, 599, 606, 647, 820, 821, 850, 889, 927, 964, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569, 1674], "dedic": [25, 32], "softwar": [25, 33, 553, 555], "draongfli": 25, "shield": 25, "rough": 25, "displai": [25, 32, 1737], "explor": [25, 26, 28, 812, 828, 871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180], "10e": 25, "26": [25, 27, 32, 860, 887, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "connreadd": 25, "descript": [25, 49, 60, 81, 90, 108, 121, 141, 152, 174, 185, 206, 219, 239, 250, 272, 283, 305, 316, 338, 349, 372, 383, 405, 416, 438, 449, 467, 477, 487, 497, 510, 541, 547, 548, 827, 831, 843, 850, 869, 880, 889, 908, 919, 927, 946, 957, 965, 984, 995, 1003, 1024, 1035, 1044, 1063, 1074, 1083, 1102, 1113, 1121, 1140, 1151, 1159, 1178, 1189, 1198, 1208, 1218, 1227, 1240, 1251, 1261, 1274, 1285, 1295, 1308, 1319, 1328, 1338, 1348, 1357, 1370, 1381, 1389, 1399, 1409, 1417, 1427, 1437, 1445, 1455, 1465, 1474, 1487, 1498, 1507, 1517, 1527, 1536, 1549, 1560, 1569, 1579, 1589, 1615, 1622, 1623, 1627, 1628, 1653, 1667, 1669, 1674, 1680, 1682], "trim": [25, 27, 32, 758, 887, 926, 964, 1002, 1631, 1646, 1648, 1794], "randint": 25, "500": [25, 28], "practic": [25, 27, 29], "prompt": 25, "0x7fbf72585590": 25, "64": [25, 32], "161": [25, 32], "56": [25, 32], "reveal": [25, 26, 30, 32], "dure": [25, 28, 29, 458, 1653, 1743], "elsewher": [25, 31, 1654, 1655], "convent": [25, 26, 1676], "AND": 25, "28": [25, 32, 586, 789], "29": [25, 32], "31": [25, 30, 32, 586], "44": [25, 30, 32], "46": [25, 32], "61": [25, 32], "62": [25, 32], "19": [25, 26, 29, 31, 32], "22": [25, 29, 32, 33, 807], "23": [25, 29, 32], "24": [25, 29, 32, 834, 835], "27": [25, 32, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "33": [25, 30, 32], "35": [25, 32], "37": [25, 28, 32], "38": [25, 32, 668], "41": [25, 32], "42": [25, 32], "43": [25, 32], "48": [25, 32], "49": [25, 32, 33, 34], "52": [25, 32], "53": [25, 32], "58": [25, 30, 32, 768], "59": [25, 32], "68": [25, 32], "69": [25, 32], "71": [25, 32], "73": [25, 32, 768], "76": [25, 32], "77": [25, 32], "83": [25, 32], "85": [25, 32], "86": [25, 32], "89": [25, 32], "91": [25, 32], "93": [25, 32], "97": [25, 32], "105": [25, 32], "109": [25, 32], "110": [25, 30, 32, 590, 785], "112": [25, 32], "113": [25, 32], "115": [25, 32], "119": [25, 32], "120": [25, 32], "121": [25, 32], "122": [25, 32], "124": [25, 32], "126": [25, 32], "130": [25, 32, 812], "131": [25, 32], "133": [25, 32], "134": [25, 32], "135": [25, 32], "136": [25, 32], "139": [25, 32], "140": [25, 32, 589], "141": [25, 32, 669], "143": [25, 32], "144": [25, 32], "146": [25, 32], "147": [25, 32], "148": [25, 30, 32], "149": [25, 32], "150": [25, 31, 32, 807], "153": [25, 32], "154": [25, 30, 32], "160": [25, 32, 765, 783, 796, 812], "arbitrari": [25, 26, 709, 729, 926, 964, 1158, 1768, 1796], "even": [25, 28, 29, 30, 749, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "wil": 25, "catalyst": 25, "pellet": 25, "helper": [25, 26, 29, 1226, 1249, 1258, 1259, 1260, 1283, 1292, 1293, 1294, 1317, 1326, 1356, 1379, 1473, 1496, 1505, 1535, 1558, 1567], "free": [25, 1604], "template_cylinder_annulu": 25, "r_outer": [25, 1654, 1655], "r_inner": [25, 1654, 1655], "templat": [25, 926, 1654, 1655], "facecenteredcub": [25, 848, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119], "bodycenteredcub": [25, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 1081], "jam": 25, "intersti": 25, "fcc": 25, "bcc": [25, 848], "4x4x4": 25, "corner": [25, 29, 32, 848, 887, 1002, 1081], "node": [25, 28, 32, 554, 1002, 1015, 1016, 1619, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1635, 1639, 1640, 1654, 1655, 1658], "place": [25, 26, 28, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 473, 496, 501, 544, 565, 572, 647, 652, 723, 729, 854, 855, 879, 884, 893, 894, 918, 923, 931, 932, 956, 961, 969, 970, 994, 999, 1007, 1008, 1034, 1039, 1048, 1049, 1073, 1078, 1087, 1088, 1112, 1117, 1125, 1126, 1150, 1155, 1163, 1164, 1188, 1193, 1217, 1222, 1250, 1255, 1284, 1289, 1318, 1323, 1347, 1352, 1380, 1385, 1408, 1413, 1436, 1441, 1464, 1469, 1497, 1502, 1526, 1531, 1559, 1564, 1588, 1593, 1650, 1651, 1735, 1736, 1753, 1754], "whether": [25, 30, 50, 56, 82, 88, 98, 109, 116, 142, 148, 175, 181, 207, 214, 240, 246, 273, 279, 306, 312, 339, 345, 373, 379, 406, 412, 439, 445, 470, 488, 494, 506, 528, 832, 859, 870, 877, 898, 909, 916, 936, 947, 954, 974, 985, 992, 1012, 1025, 1032, 1053, 1064, 1071, 1092, 1103, 1110, 1130, 1141, 1148, 1168, 1179, 1186, 1209, 1215, 1241, 1247, 1275, 1281, 1309, 1315, 1339, 1345, 1371, 1377, 1400, 1406, 1428, 1434, 1456, 1462, 1488, 1494, 1518, 1524, 1550, 1556, 1580, 1586, 1614, 1618, 1623, 1627, 1630, 1637, 1638, 1645, 1652, 1766, 1767, 1803, 1804, 1805], "indidc": 25, "portion": [25, 29, 1617], "color": [25, 32, 33], "0x7fbf7255b270": 25, "414": 25, "bodi": [25, 28, 31, 639, 640, 641, 642, 643, 644, 649, 657, 658, 659, 660, 661, 662, 663, 665, 666, 714, 715, 716, 719, 832, 848, 1798, 1799], "corner_to_bodi": [25, 848, 1081], "216": [25, 32], "corner_to_corn": 25, "body_to_bodi": 25, "orang": [25, 28], "eas": 25, "dual": [25, 26, 1002], "interpenetr": 25, "delaunayvoronoidu": [25, 964, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041], "cartesian": 25, "cyl": 25, "sph": 25, "coordin": [25, 26, 27, 28, 33, 554, 599, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 628, 629, 630, 632, 633, 670, 671, 677, 682, 684, 685, 686, 687, 848, 887, 926, 964, 1002, 1042, 1081, 1120, 1158, 1618, 1620, 1621, 1630, 1631, 1632, 1633, 1636, 1648, 1649, 1650, 1651, 1653], "dpore": 25, "dthroat": 25, "preced": [25, 554], "depth": [25, 26, 1796], "littl": [25, 26], "bit": [25, 29, 31, 32], "wide": [25, 26, 28, 34, 1798, 1799], "assort": [25, 30], "deper": 26, "scheme": [26, 27, 810], "humbl": 26, "accord": [26, 43, 50, 55, 66, 75, 82, 87, 92, 102, 109, 115, 124, 135, 142, 147, 157, 168, 175, 180, 190, 195, 200, 207, 213, 222, 233, 240, 245, 255, 266, 273, 278, 288, 299, 306, 311, 321, 332, 339, 344, 355, 366, 373, 378, 388, 399, 406, 411, 421, 432, 439, 444, 453, 481, 488, 493, 499, 505, 506, 509, 511, 856, 860, 861, 870, 876, 882, 895, 899, 900, 909, 915, 921, 933, 937, 938, 947, 953, 959, 971, 975, 976, 985, 991, 997, 1002, 1009, 1013, 1014, 1025, 1031, 1037, 1050, 1054, 1055, 1064, 1070, 1076, 1089, 1093, 1094, 1103, 1109, 1115, 1127, 1131, 1132, 1141, 1147, 1153, 1165, 1169, 1170, 1179, 1185, 1191, 1202, 1209, 1214, 1220, 1232, 1241, 1246, 1253, 1266, 1275, 1280, 1287, 1300, 1309, 1314, 1321, 1332, 1339, 1344, 1350, 1362, 1371, 1376, 1383, 1393, 1400, 1405, 1411, 1421, 1428, 1433, 1439, 1449, 1456, 1461, 1467, 1479, 1488, 1493, 1500, 1511, 1518, 1523, 1529, 1541, 1550, 1555, 1562, 1573, 1580, 1585, 1591, 1645, 1736, 1754], "imagin": 26, "panda": [26, 570], "pull": [26, 35], "pd": 26, "pore_data_sheet": 26, "datafram": [26, 570], "ndim": 26, "474407": 26, "055905": 26, "557595": 26, "090773": 26, "501382": 26, "065994": 26, "472442": 26, "055213": 26, "float64": 26, "05590507143096387": 26, "apt": 26, "colum": 26, "mathemat": 26, "serv": [26, 1671], "identifi": [26, 27, 32, 887, 926, 1622, 1626, 1630, 1639, 1645, 1667, 1669, 1676, 1680, 1682], "wrong": 26, "creation": [26, 1616], "cast": 26, "species_a": 26, "species_b": 26, "request": [26, 27, 30, 31, 46, 47, 55, 66, 78, 79, 87, 92, 105, 106, 115, 124, 138, 139, 147, 157, 171, 172, 180, 190, 203, 204, 213, 222, 236, 237, 245, 255, 269, 270, 278, 288, 302, 303, 311, 321, 335, 336, 344, 355, 369, 370, 378, 388, 402, 403, 411, 421, 435, 436, 444, 453, 464, 465, 484, 485, 493, 496, 499, 509, 511, 544, 779, 864, 865, 866, 867, 876, 879, 882, 903, 904, 905, 906, 915, 918, 921, 941, 942, 943, 944, 953, 956, 959, 979, 980, 981, 982, 991, 994, 997, 1019, 1020, 1021, 1022, 1031, 1034, 1037, 1058, 1059, 1060, 1061, 1070, 1073, 1076, 1097, 1098, 1099, 1100, 1109, 1112, 1115, 1135, 1136, 1137, 1138, 1147, 1150, 1153, 1173, 1174, 1175, 1176, 1185, 1188, 1191, 1205, 1206, 1214, 1217, 1220, 1235, 1236, 1237, 1238, 1246, 1250, 1253, 1258, 1269, 1270, 1271, 1272, 1280, 1284, 1287, 1292, 1303, 1304, 1305, 1306, 1314, 1318, 1321, 1326, 1335, 1336, 1344, 1347, 1350, 1365, 1366, 1367, 1368, 1376, 1380, 1383, 1396, 1397, 1405, 1408, 1411, 1424, 1425, 1433, 1436, 1439, 1452, 1453, 1461, 1464, 1467, 1482, 1483, 1484, 1485, 1493, 1497, 1500, 1505, 1514, 1515, 1523, 1526, 1529, 1544, 1545, 1546, 1547, 1555, 1559, 1562, 1567, 1576, 1577, 1585, 1588, 1591], "retreiv": [26, 779], "retun": 26, "subdictionari": [26, 30], "NO": 26, "ask": [26, 30, 529], "int64": [26, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "set_label": 26, "meant": [26, 27, 1002, 1645], "pend": 26, "_hidden": 26, "shorthand": 26, "impli": [26, 854, 893, 931, 969, 1007, 1048, 1087, 1125, 1163], "critic": [26, 30, 763, 774, 788, 792, 794, 795, 798, 799, 803, 804, 806], "v3": [26, 28, 29, 30, 34], "lattice_connect": 26, "dimension": 26, "dispatch": [26, 30], "particularli": [26, 29], "arg": [26, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 476, 525, 540, 848, 887, 926, 964, 1002, 1042, 1081, 1120, 1158, 1197, 1225, 1259, 1293, 1327, 1355, 1388, 1416, 1444, 1472, 1506, 1534, 1568, 1617, 1661, 1664, 1665, 1666, 1668, 1670, 1673, 1675, 1677, 1679, 1681, 1683, 1684, 1686, 1713, 1737, 1740, 1774, 1797], "dn": 26, "delaunai": [26, 812, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1015, 1016, 1630, 1656], "plot_tutori": 26, "premis": 26, "sentenc": 26, "diagram": [26, 1002], "colunm": 26, "exactli": [26, 27, 29, 30, 31, 1770], "singular": 26, "technic": [26, 27, 50, 51, 52, 55, 82, 83, 84, 87, 109, 110, 111, 115, 142, 143, 144, 147, 175, 176, 177, 180, 207, 208, 209, 213, 240, 241, 242, 245, 273, 274, 275, 278, 306, 307, 308, 311, 339, 340, 341, 344, 373, 374, 375, 378, 406, 407, 408, 411, 439, 440, 441, 444, 488, 489, 490, 493, 506, 507, 508, 509, 870, 872, 873, 876, 909, 911, 912, 915, 947, 949, 950, 953, 985, 987, 988, 991, 1025, 1027, 1028, 1031, 1064, 1066, 1067, 1070, 1103, 1105, 1106, 1109, 1141, 1143, 1144, 1147, 1179, 1181, 1182, 1185, 1209, 1210, 1211, 1214, 1241, 1242, 1243, 1246, 1275, 1276, 1277, 1280, 1309, 1310, 1311, 1314, 1339, 1340, 1341, 1344, 1371, 1372, 1373, 1376, 1400, 1401, 1402, 1405, 1428, 1429, 1430, 1433, 1456, 1457, 1458, 1461, 1488, 1489, 1490, 1493, 1518, 1519, 1520, 1523, 1550, 1551, 1552, 1555, 1580, 1581, 1582, 1585], "rigorosli": 26, "support": [26, 30, 565, 1603, 1604], "unintend": 26, "aris": 26, "merg": [26, 61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 351, 353, 384, 386, 417, 419, 450, 451, 1647], "ijv": 26, "evid": 26, "symmetr": [26, 27, 854, 887, 893, 931, 969, 1007, 1048, 1087, 1125, 1163, 1624, 1641, 1770, 1771, 1801], "highli": [26, 813], "mostli": [26, 27, 723, 1613], "nonzero": [26, 27, 647], "travers": [26, 1629], "redund": [26, 855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164], "triangular": [26, 27, 28, 669, 825, 854, 864, 893, 903, 931, 941, 969, 979, 1007, 1019, 1048, 1058, 1087, 1097, 1125, 1135, 1163, 1173, 1617, 1642, 1643, 1644, 1656, 1659], "lil": [26, 27, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "accept": [26, 29, 43, 49, 50, 51, 52, 55, 66, 75, 81, 82, 83, 84, 87, 92, 102, 108, 109, 110, 111, 115, 124, 135, 141, 142, 143, 144, 147, 157, 168, 174, 175, 176, 177, 180, 190, 200, 206, 207, 208, 209, 213, 222, 233, 239, 240, 241, 242, 245, 255, 266, 272, 273, 274, 275, 278, 288, 299, 305, 306, 307, 308, 311, 321, 332, 338, 339, 340, 341, 344, 355, 366, 372, 373, 374, 375, 378, 388, 399, 405, 406, 407, 408, 411, 421, 432, 438, 439, 440, 441, 444, 453, 467, 481, 487, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 651, 653, 702, 703, 728, 733, 837, 856, 857, 860, 861, 869, 870, 871, 872, 873, 876, 882, 895, 896, 899, 900, 908, 909, 910, 911, 912, 915, 921, 933, 934, 937, 938, 946, 947, 948, 949, 950, 953, 959, 971, 972, 975, 976, 984, 985, 986, 987, 988, 991, 997, 1009, 1010, 1013, 1014, 1024, 1025, 1026, 1027, 1028, 1031, 1037, 1050, 1051, 1054, 1055, 1063, 1064, 1065, 1066, 1067, 1070, 1076, 1089, 1090, 1093, 1094, 1102, 1103, 1104, 1105, 1106, 1109, 1115, 1127, 1128, 1131, 1132, 1140, 1141, 1142, 1143, 1144, 1147, 1153, 1165, 1166, 1169, 1170, 1178, 1179, 1180, 1181, 1182, 1185, 1191, 1202, 1208, 1209, 1210, 1211, 1214, 1220, 1232, 1240, 1241, 1242, 1243, 1246, 1253, 1266, 1274, 1275, 1276, 1277, 1280, 1287, 1300, 1308, 1309, 1310, 1311, 1314, 1321, 1332, 1338, 1339, 1340, 1341, 1344, 1350, 1362, 1370, 1371, 1372, 1373, 1376, 1383, 1393, 1399, 1400, 1401, 1402, 1405, 1411, 1421, 1427, 1428, 1429, 1430, 1433, 1439, 1449, 1455, 1456, 1457, 1458, 1461, 1467, 1479, 1487, 1488, 1489, 1490, 1493, 1500, 1511, 1517, 1518, 1519, 1520, 1523, 1529, 1541, 1549, 1550, 1551, 1552, 1555, 1562, 1573, 1579, 1580, 1581, 1582, 1585, 1591, 1623, 1627, 1628], "merit": 26, "articl": 26, "conductor": 26, "interconnect": [26, 1002], "thing": [26, 27, 28, 29, 30, 32, 35], "enough": [26, 30], "get_conduit_data": 26, "47440675": 26, "23720338": 26, "55759468": 26, "25069084": 26, "50138169": 26, "2362208": 26, "47244159": 26, "reflect": [26, 1631, 1649], "r1_r2": 26, "understand": [27, 28, 29], "occassion": 27, "invok": 27, "easier": [27, 28, 29, 848, 887, 964, 1042, 1081, 1120, 1158], "notabl": 27, "obviou": 27, "grow": [27, 652], "million": [27, 762], "meaning": 27, "suggest": [27, 1794], "especi": 27, "amount": [27, 32, 1612, 1650, 1651], "intuit": [27, 29], "lower": [27, 31, 32, 712, 734, 854, 893, 931, 969, 1007, 1048, 1087, 1125, 1163, 1642, 1643], "problemat": [27, 28, 570], "mind": 27, "basi": 27, "suitabl": [27, 653, 655, 703, 705, 710, 733, 740, 813, 1623, 1785], "luckili": 27, "locations_of_nonzero": 27, "values_of_nonzero": 27, "wish": [27, 28, 30, 1630], "dicionari": [27, 848, 887, 964, 1042, 1081, 1120, 1158], "thank": 27, "sophist": 27, "strutur": 27, "dok": [27, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175, 1624], "gotcha": 27, "remedi": [27, 652], "subtract": [27, 28, 657, 658, 659, 660, 717, 724], "slight": 27, "variat": 27, "create_incidence_matrix": [27, 866, 905, 943, 981, 1021, 1060, 1099, 1137, 1175], "background": 27, "predefin": [27, 30, 31, 1225, 1472, 1534], "cn": 27, "p_left": 27, "p_bottom": 27, "lightgrei": [27, 32], "red": 27, "marker": [27, 1630], "blue": 27, "OR": [27, 32], "find_neighbor_por": [27, 871, 910, 948, 986, 1026, 1065, 1104, 1120, 1142, 1180], "exclusve_or": 27, "neigbhor": [27, 871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180], "xnor": [27, 29, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 355, 366, 373, 374, 375, 378, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 453, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 856, 857, 860, 861, 870, 871, 872, 873, 876, 882, 895, 896, 899, 900, 909, 910, 911, 912, 915, 921, 933, 934, 937, 938, 947, 948, 949, 950, 953, 959, 971, 972, 975, 976, 985, 986, 987, 988, 991, 997, 1009, 1010, 1013, 1014, 1025, 1026, 1027, 1028, 1031, 1037, 1050, 1051, 1054, 1055, 1064, 1065, 1066, 1067, 1070, 1076, 1089, 1090, 1093, 1094, 1103, 1104, 1105, 1106, 1109, 1115, 1127, 1128, 1131, 1132, 1141, 1142, 1143, 1144, 1147, 1153, 1165, 1166, 1169, 1170, 1179, 1180, 1181, 1182, 1185, 1191, 1202, 1209, 1210, 1211, 1214, 1220, 1232, 1241, 1242, 1243, 1246, 1253, 1266, 1275, 1276, 1277, 1280, 1287, 1300, 1309, 1310, 1311, 1314, 1321, 1332, 1339, 1340, 1341, 1344, 1350, 1362, 1371, 1372, 1373, 1376, 1383, 1393, 1400, 1401, 1402, 1405, 1411, 1421, 1428, 1429, 1430, 1433, 1439, 1449, 1456, 1457, 1458, 1461, 1467, 1479, 1488, 1489, 1490, 1493, 1500, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1623, 1627, 1628], "opposit": [27, 1002], "nxor": [27, 1623, 1627, 1628], "interchang": 27, "logic": [27, 29, 55, 66, 87, 92, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 355, 378, 388, 411, 421, 444, 453, 493, 499, 509, 511, 857, 860, 861, 871, 876, 882, 896, 899, 900, 910, 915, 921, 934, 937, 938, 948, 953, 959, 972, 975, 976, 986, 991, 997, 1010, 1013, 1014, 1026, 1031, 1037, 1051, 1054, 1055, 1065, 1070, 1076, 1090, 1093, 1094, 1104, 1109, 1115, 1128, 1131, 1132, 1142, 1147, 1153, 1166, 1169, 1170, 1180, 1185, 1191, 1214, 1220, 1246, 1253, 1280, 1287, 1314, 1321, 1344, 1350, 1376, 1383, 1405, 1411, 1433, 1439, 1461, 1467, 1493, 1500, 1523, 1529, 1555, 1562, 1585, 1591, 1623, 1627, 1628], "find_connecting_throat": 27, "p1": [27, 858, 897, 935, 973, 1011, 1052, 1091, 1129, 1167, 1624, 1625], "p2": [27, 858, 897, 935, 973, 1011, 1052, 1091, 1129, 1167, 1624, 1625], "nan": [27, 29, 31, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 570, 572, 698, 701, 726, 858, 897, 935, 973, 1011, 1052, 1091, 1129, 1167, 1226, 1260, 1294, 1356, 1473, 1535, 1623, 1624, 1800], "find_connected_por": [27, 32], "flatten": [27, 32, 568, 857, 859, 860, 861, 871, 896, 898, 899, 900, 910, 934, 936, 937, 938, 948, 972, 974, 975, 976, 986, 1010, 1012, 1013, 1014, 1026, 1051, 1053, 1054, 1055, 1065, 1090, 1092, 1093, 1094, 1104, 1128, 1130, 1131, 1132, 1142, 1166, 1168, 1169, 1170, 1180, 1623, 1627, 1628], "heterogen": [27, 28, 29], "blockag": 27, "actuali": [27, 29], "simpli": [27, 29, 659, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164], "manual": [27, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 493, 509, 876, 915, 953, 991, 1031, 1070, 1109, 1120, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585, 1789], "0x7f6411f51310": 27, "easiest": 27, "bool": [27, 32, 55, 61, 66, 87, 92, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 350, 355, 378, 388, 411, 421, 444, 453, 493, 499, 509, 511, 528, 566, 570, 698, 701, 726, 854, 855, 857, 859, 860, 861, 871, 876, 882, 893, 894, 896, 898, 899, 900, 910, 915, 921, 931, 932, 934, 936, 937, 938, 948, 953, 959, 969, 970, 972, 974, 975, 976, 986, 991, 997, 1007, 1008, 1010, 1012, 1013, 1014, 1026, 1031, 1037, 1048, 1049, 1051, 1053, 1054, 1055, 1065, 1070, 1076, 1087, 1088, 1090, 1092, 1093, 1094, 1104, 1109, 1115, 1125, 1126, 1128, 1130, 1131, 1132, 1142, 1147, 1153, 1163, 1164, 1166, 1168, 1169, 1170, 1180, 1185, 1191, 1214, 1220, 1246, 1253, 1280, 1287, 1314, 1321, 1344, 1350, 1376, 1383, 1405, 1411, 1433, 1439, 1461, 1467, 1493, 1500, 1523, 1529, 1555, 1562, 1585, 1591, 1617, 1623, 1627, 1628, 1631, 1637, 1638, 1801, 1803, 1804, 1805], "inde": [27, 32], "signific": 27, "noth": [27, 98, 1762], "totrim": 27, "offset": [27, 849, 888, 1043, 1082, 1612, 1613], "cumsum": 27, "lastli": [27, 29, 30], "remap": 27, "did": 27, "0x7f6412134180": 27, "Of": 27, "decis": 27, "made": [27, 29, 30, 34, 98, 887, 1650, 1651], "new_por": 27, "vstack": 27, "0x7f64123a56d0": 27, "lucki": 27, "hstack": 27, "new_conn": [27, 1616], "obvious": 27, "enterpr": 28, "tomograph": 28, "Not": 28, "blank": 28, "0x7feaa804c310": 28, "8000": 28, "22800": 28, "2168": 28, "4332": 28, "favor": [28, 854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "thorough": 28, "psd": 28, "norm": [28, 653, 703, 733], "xlim": 28, "greater": 28, "5593961722893255": 28, "80996128980269": 28, "tsd": 28, "5130345457395142": 28, "96861960231873": 28, "nm": 28, "vice": [28, 31, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "versa": [28, 31, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "strang": 28, "constrict": [28, 738], "564": 28, "ever": 28, "tempt": 28, "loop": [28, 32, 758, 1015, 1016], "interog": 28, "ye": 28, "safer": 28, "randomli": [28, 1631, 1648], "amin": 28, "densiti": [28, 30, 586, 589, 590, 761, 762, 763, 764, 765, 787, 834, 835], "alpha": [28, 33, 827, 829], "50e": 28, "shift": [28, 29, 1612], "bia": 28, "toward": 28, "lo": 28, "hi": [28, 553], "prevent": [28, 30, 646, 654, 704, 737], "lie": [28, 677, 849, 888, 964, 1043, 1082, 1158, 1630, 1631, 1639], "overli": 28, "ppf": [28, 651, 653, 655, 702, 703, 705, 728, 733, 740], "tend": 28, "mandatori": 28, "occupi": [28, 1614, 1640, 1652], "regard": 28, "r1": 28, "r2": 28, "l_total": 28, "sqrt": 28, "squeez": 28, "lt": 28, "euclidean": 28, "root": [28, 35], "home": 28, "nest": [28, 566, 1796, 1806], "deeper": 28, "unbuff": 28, "sap": 28, "08485305e": 28, "68134509e": 28, "33947201e": 28, "57211706e": 28, "92152447e": 28, "72429278e": 28, "potenti": [28, 834, 835], "substract": 28, "fashion": [28, 1616], "adjac": [28, 650, 652, 670, 671, 698, 701, 726, 727, 848, 854, 855, 864, 887, 893, 894, 903, 926, 931, 932, 941, 964, 969, 970, 979, 1002, 1007, 1008, 1019, 1042, 1048, 1049, 1058, 1081, 1087, 1088, 1097, 1120, 1125, 1126, 1135, 1158, 1163, 1164, 1173, 1617, 1619, 1624, 1641, 1642, 1643, 1644, 1656, 1659], "lengthi": 28, "lai": 28, "bare": 28, "job": 28, "fresh": 28, "close": [28, 30, 31, 565, 569, 831], "inherit": [28, 458, 476, 525], "throat_se": 28, "docstr": [28, 29, 30, 61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 351, 353, 384, 386, 417, 419, 450, 451, 478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1662, 1667, 1671, 1672, 1674, 1676, 1678, 1680, 1682], "78": [28, 32, 1798, 1799], "charact": [28, 1676, 1798, 1799], "cursor": 28, "explicitli": [28, 554], "track": [28, 32, 458, 1416], "f1": 28, "f2": 28, "f3": 28, "f4": 28, "lens": 28, "06671058e": 28, "49724923e": 28, "03844746e": 28, "92245838e": 28, "40091924e": 28, "59556144e": 28, "05978813e": 28, "48884831e": 28, "03085190e": 28, "tediou": 28, "prone": 28, "predfin": 28, "complet": [28, 60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 383, 416, 449, 497, 510, 831, 834, 835, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589], "pprint": 28, "0x7fea677024c0": 28, "largest_spher": [28, 577, 578, 579, 580, 581, 582, 583], "0x7fea6576c430": 28, "0x7fea676fcca0": 28, "0x7fea6576c820": 28, "pore_diamet": [28, 577, 578, 579, 580, 581, 582, 583, 596, 597, 598, 599, 600, 601, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 657, 658, 659, 660, 662, 663, 664, 665, 666, 677, 679, 680, 681, 682, 683, 684, 688, 689, 690, 691, 717, 718, 816, 829], "0x7fea656f0550": 28, "throat_diamet": [28, 577, 578, 579, 580, 581, 582, 583, 596, 597, 598, 605, 606, 607, 608, 610, 611, 612, 619, 620, 621, 622, 623, 625, 626, 627, 631, 634, 635, 636, 637, 638, 664, 668, 673, 674, 675, 677, 679, 680, 681, 688, 689, 690, 691, 693, 694, 695, 707, 708, 714, 715, 717, 718, 719, 816, 827, 828, 829], "0x7fea67702550": 28, "0x7fea656be790": 28, "0x7fea656b1ee0": 28, "0x7fea656f0ee0": 28, "0x7fea657021f0": 28, "0x7fea67702700": 28, "0x7fea656fdf70": 28, "0x7fea67702160": 28, "nice": [28, 1725, 1798, 1799], "add_models_collect": 28, "0x7fea57f1db30": 28, "bound": 28, "nearest": [28, 652, 749, 1653], "dall": 28, "truncat": [28, 600, 605, 611, 613, 614, 620, 626, 628, 629, 635], "reach": [28, 32], "constrain": 28, "life": 28, "recomput": 28, "reomcomput": 28, "15319619": 28, "0328116": 28, "2287953": 28, "23887453": 28, "8411705": 28, "10988224": 28, "59011212e": 28, "75717988e": 28, "13561876e": 28, "66940036e": 28, "27284536e": 28, "36618201": 28, "35063831": 28, "40236746": 28, "58822388": 28, "42461491": 28, "9016327": 28, "11640227e": 28, "20171387e": 28, "57748463e": 28, "30989878e": 28, "79091080e": 28, "automatical": 28, "graph": [28, 30, 528, 529, 530, 554, 561, 854, 855, 864, 893, 894, 903, 931, 932, 941, 969, 970, 979, 1007, 1008, 1019, 1048, 1049, 1058, 1087, 1088, 1097, 1125, 1126, 1135, 1163, 1164, 1173], "networkx": [28, 528, 554, 561], "sort": [28, 32, 195, 832], "tree": [28, 1648], "downstream": 28, "roughli": 28, "dependency_map": [28, 525, 528, 529], "style": [28, 530], "planar": [28, 596, 601, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 630, 633, 637, 638, 640, 644], "circl": [28, 577, 583, 596, 610, 625, 679, 700, 1639, 1654], "dependency_graph": [28, 525, 529, 530], "draw_networkx": 28, "draw_planar": 28, "bookmark": 29, "certain": [29, 1604, 1647], "0x7f659e25b090": 29, "corner_por": 29, "build": [29, 58, 150, 183, 248, 281, 314, 447], "filter": [29, 33, 43, 50, 55, 66, 75, 82, 87, 92, 102, 109, 115, 124, 135, 142, 147, 157, 168, 175, 180, 190, 200, 207, 213, 222, 233, 240, 245, 255, 266, 273, 278, 288, 299, 306, 311, 321, 332, 339, 344, 355, 366, 373, 378, 388, 399, 406, 411, 421, 432, 439, 444, 453, 481, 488, 493, 499, 505, 506, 509, 511, 856, 857, 860, 861, 870, 876, 882, 895, 896, 899, 900, 909, 915, 921, 933, 934, 937, 938, 947, 953, 959, 971, 972, 975, 976, 985, 991, 997, 1009, 1010, 1013, 1014, 1025, 1031, 1037, 1050, 1051, 1054, 1055, 1064, 1070, 1076, 1089, 1090, 1093, 1094, 1103, 1109, 1115, 1127, 1128, 1131, 1132, 1141, 1147, 1153, 1165, 1166, 1169, 1170, 1179, 1185, 1191, 1202, 1209, 1214, 1220, 1232, 1241, 1246, 1253, 1266, 1275, 1280, 1287, 1300, 1309, 1314, 1321, 1332, 1339, 1344, 1350, 1362, 1371, 1376, 1383, 1393, 1400, 1405, 1411, 1421, 1428, 1433, 1439, 1449, 1456, 1461, 1467, 1479, 1488, 1493, 1500, 1511, 1518, 1523, 1529, 1541, 1550, 1555, 1562, 1573, 1580, 1585, 1591, 1621, 1623, 1627, 1628], "decrib": 29, "nd": [29, 779, 781], "wast": [29, 32], "wors": 29, "consum": 29, "8x": 29, "nonetheless": 29, "invest": 29, "great": 29, "mask1": 29, "mask2": 29, "edg": [29, 32, 554, 649, 700, 887, 1619, 1623, 1624, 1625, 1627, 1629, 1658], "theori": [29, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164, 1623, 1627, 1628], "nor": [29, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 355, 366, 373, 374, 375, 378, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 453, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 856, 870, 872, 873, 876, 882, 895, 909, 911, 912, 915, 921, 933, 947, 949, 950, 953, 959, 971, 985, 987, 988, 991, 997, 1009, 1025, 1027, 1028, 1031, 1037, 1050, 1064, 1066, 1067, 1070, 1076, 1089, 1103, 1105, 1106, 1109, 1115, 1127, 1141, 1143, 1144, 1147, 1153, 1165, 1179, 1181, 1182, 1185, 1191, 1202, 1209, 1210, 1211, 1214, 1220, 1232, 1241, 1242, 1243, 1246, 1253, 1266, 1275, 1276, 1277, 1280, 1287, 1300, 1309, 1310, 1311, 1314, 1321, 1332, 1339, 1340, 1341, 1344, 1350, 1362, 1371, 1372, 1373, 1376, 1383, 1393, 1400, 1401, 1402, 1405, 1411, 1421, 1428, 1429, 1430, 1433, 1439, 1449, 1456, 1457, 1458, 1461, 1467, 1479, 1488, 1489, 1490, 1493, 1500, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591], "confus": [29, 32], "nand": [29, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 355, 366, 373, 374, 375, 378, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 453, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 856, 870, 872, 873, 876, 882, 895, 909, 911, 912, 915, 921, 933, 947, 949, 950, 953, 959, 971, 985, 987, 988, 991, 997, 1009, 1025, 1027, 1028, 1031, 1037, 1050, 1064, 1066, 1067, 1070, 1076, 1089, 1103, 1105, 1106, 1109, 1115, 1127, 1141, 1143, 1144, 1147, 1153, 1165, 1179, 1181, 1182, 1185, 1191, 1202, 1209, 1210, 1211, 1214, 1220, 1232, 1241, 1242, 1243, 1246, 1253, 1266, 1275, 1276, 1277, 1280, 1287, 1300, 1309, 1310, 1311, 1314, 1321, 1332, 1339, 1340, 1341, 1344, 1350, 1362, 1371, 1372, 1373, 1376, 1383, 1393, 1400, 1401, 1402, 1405, 1411, 1421, 1428, 1429, 1430, 1433, 1439, 1449, 1456, 1457, 1458, 1461, 1467, 1479, 1488, 1489, 1490, 1493, 1500, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591], "retiev": 29, "annoi": [29, 1800], "shortcut": [29, 31, 35, 37, 129, 162, 227, 260, 293, 326, 360, 393, 426, 1002, 1042], "edit": [29, 35, 834, 835], "syntax": [29, 554], "certainli": 29, "infer": [29, 849, 888, 926, 1043, 1082], "suppli": [29, 30, 43, 51, 52, 59, 62, 63, 64, 75, 83, 84, 89, 102, 110, 111, 119, 120, 122, 135, 143, 144, 151, 153, 154, 155, 168, 176, 177, 184, 186, 187, 188, 200, 208, 209, 217, 218, 220, 233, 241, 242, 249, 251, 252, 253, 266, 274, 275, 282, 284, 285, 286, 299, 307, 308, 315, 317, 318, 319, 332, 340, 341, 348, 351, 352, 353, 366, 374, 375, 382, 384, 385, 386, 399, 407, 408, 415, 417, 418, 419, 432, 440, 441, 448, 450, 451, 478, 481, 489, 490, 505, 507, 508, 542, 722, 734, 851, 856, 859, 872, 873, 890, 895, 898, 911, 912, 928, 933, 936, 949, 950, 966, 971, 974, 987, 988, 1004, 1009, 1012, 1027, 1028, 1045, 1050, 1053, 1066, 1067, 1084, 1089, 1092, 1105, 1106, 1122, 1127, 1130, 1143, 1144, 1158, 1160, 1165, 1168, 1181, 1182, 1199, 1202, 1210, 1211, 1228, 1232, 1242, 1243, 1262, 1266, 1276, 1277, 1296, 1300, 1310, 1311, 1329, 1332, 1340, 1341, 1358, 1362, 1372, 1373, 1390, 1393, 1401, 1402, 1418, 1421, 1429, 1430, 1446, 1449, 1457, 1458, 1475, 1479, 1489, 1490, 1508, 1511, 1519, 1520, 1537, 1541, 1551, 1552, 1570, 1573, 1581, 1582, 1639, 1651, 1737, 1739, 1778], "bonu": 29, "new_arrai": 29, "overwrot": 29, "symbol": [29, 837], "major": [29, 458], "conceptu": 29, "gone": 29, "bimod": 29, "layer": [29, 647, 829, 1651], "v2": [29, 30], "lost": [29, 1776], "suffici": [29, 30], "sai": 29, "separ": [29, 568], "manag": [29, 458, 829], "mainten": 29, "backend": 29, "think": 29, "tidier": 29, "consequ": [29, 31, 834, 835], "mark": [29, 926, 1630], "leav": [29, 57, 60, 90, 121, 149, 152, 182, 185, 219, 247, 250, 280, 283, 313, 316, 346, 349, 380, 383, 413, 416, 446, 449, 497, 510, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589], "unspecifi": 29, "everywher": 29, "visibl": 29, "recogin": 29, "redefin": 29, "run_model": 29, "observ": [29, 32], "With": 29, "dealt": [29, 572], "uniform": 29, "uniformli": 29, "abstract": 29, "freeli": 29, "asmask": [29, 55, 66, 87, 92, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 355, 378, 388, 411, 421, 444, 453, 493, 499, 509, 511, 860, 861, 876, 882, 899, 900, 915, 921, 937, 938, 953, 959, 975, 976, 991, 997, 1013, 1014, 1031, 1037, 1054, 1055, 1070, 1076, 1093, 1094, 1109, 1115, 1131, 1132, 1147, 1153, 1169, 1170, 1185, 1191, 1214, 1220, 1246, 1253, 1280, 1287, 1314, 1321, 1344, 1350, 1376, 1383, 1405, 1411, 1433, 1439, 1461, 1467, 1493, 1500, 1523, 1529, 1555, 1562, 1585, 1591], "beed": 29, "thermodynam": [30, 31, 758], "framework": 30, "submodul": [30, 594, 651, 702, 720, 728, 741, 757, 808], "exhaust": 30, "librari": [30, 32, 33, 651, 702, 728, 1783, 1788], "polici": 30, "exact": [30, 762], "cantera": 30, "handler": 30, "ca": [30, 772], "leverag": 30, "extern": [30, 1630], "001": [30, 653, 703, 733], "three": [30, 31, 525, 836, 838, 839, 840, 841, 842, 843], "phase1": 30, "0x7f47b9e49220": 30, "nearli": 30, "broadcast": 30, "perhap": [30, 758], "polynomi": [30, 586, 589], "4th": 30, "experiment": [30, 32, 834, 835], "yield": 30, "a4": [30, 836, 839, 840, 841], "8543e": 30, "6756e": 30, "7831e": 30, "3156e": 30, "a0": [30, 735, 758], "8898e": 30, "00091476": 30, "350": 30, "rerun": [30, 35], "0007449": 30, "00075752": 30, "00055432": 30, "00082583": 30, "th": [30, 1651], "0007174": 30, "00073061": 30, "00052157": 30, "00080178": 30, "viscostii": 30, "custom_mu": 30, "reimplement": 30, "commonli": 30, "appropri": [30, 785, 810, 1630], "phase_02": 30, "0x7f47b9e49630": 30, "molar_dens": [30, 586, 589, 590], "thermal_conduct": [30, 586, 589, 590, 593, 791, 793, 845, 846], "vapor_pressur": [30, 590], "salin": [30, 765, 789, 796, 800, 807], "mass_to_molar": [30, 586, 589, 590], "mw": [30, 586, 761, 762, 763, 764, 767, 768, 777, 782, 787, 791, 792, 793, 794, 795, 802, 803, 804, 806, 1797], "param": [30, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 476, 758, 761, 762, 763, 764, 767, 768, 769, 772, 774, 777, 782, 785, 787, 788, 791, 792, 793, 794, 795, 799, 802, 803, 804, 806, 848, 887, 926, 964, 1002, 1042, 1081, 1120, 1158, 1197, 1225, 1259, 1293, 1327, 1355, 1388, 1416, 1444, 1472, 1506, 1534, 1568, 1662, 1663, 1665, 1667, 1669, 1672, 1674, 1678, 1680, 1682, 1685, 1797, 1804, 1805], "molecular_weight": [30, 761, 762, 763, 764, 767, 768, 777, 782, 787, 791, 792, 793, 794, 795, 802, 803, 804, 806, 816, 1416, 1797], "liquid_pure_antoin": [30, 590], "therebi": 30, "molar_denstii": 30, "cycl": [30, 529], "resolv": [30, 525], "upstream": 30, "unusu": 30, "reproduc": 30, "api": [30, 31], "unnecessari": 30, "On": [30, 32, 35], "beta": [30, 834, 835], "oxygen": 30, "nitrogen": 30, "o2": 30, "phase_03": 30, "0x7f47b7c67ea0": 30, "thermo": 30, "synonym": 30, "databas": 30, "BUT": 30, "host": 30, "7782": 30, "common_nam": 30, "charg": [30, 835], "formula": [30, 785, 825], "boiling_temperatur": [30, 788, 792, 794, 795], "188": [30, 32], "melting_temperatur": 30, "triple_point_temperatur": 30, "triple_point_pressur": 30, "9796864589355": 30, "dipole_mo": 30, "lj_diamet": [30, 767], "29728": 30, "lj_energi": [30, 767], "6520845934e": 30, "surface_tension_tb": [30, 769], "013145633010272155": 30, "molar_volume_tb": [30, 769], "802254619756072e": 30, "9988": [30, 586], "critical_temperatur": [30, 758, 762, 763, 767, 774, 788, 795, 799, 803, 804, 806], "critical_pressur": [30, 767, 788, 792, 794, 799, 803, 804, 806], "5042945": 30, "critical_volum": [30, 762, 763], "34e": 30, "critical_compressibilty_factor": 30, "2880002236716698": 30, "acentric_factor": [30, 762, 763, 767, 774, 792, 794, 799, 806], "021": 30, "prefix": [30, 557], "stiel": [30, 804, 806], "thodo": [30, 804], "gas_pure_l": 30, "gas_pure_st": 30, "01023694e": 30, "tcrit": 30, "becuas": [30, 129], "gase": [30, 757], "standardliquid": [30, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533], "standardga": [30, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471], "approximat": 30, "h2o": [30, 1416], "popul": 30, "phase_04": 30, "0x7f47b7c1dae0": 30, "heat_capacity_ga": [30, 774], "heat_capac": [30, 771, 772, 773], "phase_05": 30, "0x7f47b7c1df90": 30, "minim": 30, "liquid_pure_costald": 30, "vc": [30, 762, 763], "omega": [30, 762, 763, 767, 774, 792, 794, 799, 806], "gas_pure_trc": 30, "liquid_pure_rp": 30, "cpg": [30, 774], "liquid_pure_gismr": 30, "tb": [30, 788, 792, 794, 795], "liquid_pure_l": 30, "n2": 30, "standardgasmixtur": [30, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505], "79": [30, 32], "compositio": 30, "mixture_01": 30, "0x7f47b7c0ddb0": 30, "mole_fract": [30, 1226, 1249, 1258, 1260, 1283, 1292, 1294, 1317, 1326, 1356, 1379, 1473, 1496, 1505, 1535, 1558, 1567], "blend": 30, "78543425e": 30, "01881831e": 30, "sub": [30, 857, 859, 860, 896, 898, 899, 934, 936, 937, 972, 974, 975, 1010, 1012, 1013, 1051, 1053, 1054, 1090, 1092, 1093, 1128, 1130, 1131, 1166, 1168, 1169, 1623, 1627, 1628], "0x7f47b7c16e00": 30, "0x7f47b7c167c0": 30, "liquidmixtur": [30, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1534], "gasmixtur": [30, 1225, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1472], "remove_comp": 30, "liter": [30, 871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180], "add_comp": 30, "compnam": [30, 779, 1258, 1292, 1326, 1505, 1567], "09391006e": 30, "69779528e": 30, "propertei": 30, "failur": 30, "health": [30, 1229, 1263, 1297, 1359, 1476, 1538, 1687, 1793, 1794], "mole_fraction_too_low": 30, "mole_fraction_too_high": 30, "univers": 30, "symbmol": 30, "instruct": [30, 564], "mole_fraction_weight": 30, "55064928e": 30, "suffix": [30, 1798, 1799], "crucial": 30, "viscsoiti": 30, "turn": [30, 477, 541, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569], "0x7fcc402b3270": 31, "fulli": [31, 32, 35, 831, 1015, 1637], "driven": 31, "0x7fcbf5717d60": 31, "00089319": 31, "simplest": 31, "hagan": 31, "tube": [31, 33, 669, 812, 813, 825, 828], "prefactor": [31, 843], "g_h": 31, "aim": [31, 34], "protip": 31, "16735504e": 31, "04334362e": 31, "86823654e": 31, "22412847e": 31, "28542934e": 31, "73807413e": 31, "51129876e": 31, "71324172e": 31, "04773912e": 31, "00157734e": 31, "72411443e": 31, "24856311e": 31, "80945949e": 31, "72780996e": 31, "96896364e": 31, "77418086e": 31, "97154435e": 31, "94550305e": 31, "72662664e": 31, "60679097e": 31, "20410500e": 31, "18304081e": 31, "52540115e": 31, "82477871e": 31, "05793396e": 31, "36072878e": 31, "53093695e": 31, "52871278e": 31, "54078362e": 31, "82564205e": 31, "59547104e": 31, "10952565e": 31, "23079631e": 31, "16819090e": 31, "69186667e": 31, "99863339e": 31, "13234427e": 31, "91570719e": 31, "56786992e": 31, "07253490e": 31, "auotmat": 31, "disabl": 31, "stokes_01": 31, "0x7fcbf571cae0": 31, "100_000": 31, "set_rate_bc": 31, "preceed": [31, 1665], "sustain": [31, 827], "compon": [31, 758, 762, 768, 769, 780, 781, 782, 805, 837, 1225, 1226, 1235, 1249, 1258, 1259, 1260, 1269, 1283, 1292, 1293, 1294, 1303, 1317, 1326, 1355, 1356, 1365, 1379, 1472, 1473, 1482, 1496, 1505, 1534, 1535, 1544, 1558, 1567, 1651, 1798, 1799], "multiphys": 31, "quanti": 31, "214277": 31, "85622896": 31, "195512": 31, "79935858": 31, "189245": 31, "05011394": 31, "179008": 31, "73802283": 31, "147348": 31, "96011514": 31, "kpa": 31, "simplist": 31, "finish": 31, "intersect": [31, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 355, 366, 373, 374, 375, 378, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 453, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 600, 602, 603, 604, 616, 617, 618, 631, 632, 633, 659, 677, 685, 686, 687, 714, 715, 716, 717, 719, 856, 857, 860, 861, 870, 871, 872, 873, 876, 882, 895, 896, 899, 900, 909, 910, 911, 912, 915, 921, 933, 934, 937, 938, 947, 948, 949, 950, 953, 959, 971, 972, 975, 976, 985, 986, 987, 988, 991, 997, 1009, 1010, 1013, 1014, 1025, 1026, 1027, 1028, 1031, 1037, 1050, 1051, 1054, 1055, 1064, 1065, 1066, 1067, 1070, 1076, 1089, 1090, 1093, 1094, 1103, 1104, 1105, 1106, 1109, 1115, 1127, 1128, 1131, 1132, 1141, 1142, 1143, 1144, 1147, 1153, 1165, 1166, 1169, 1170, 1179, 1180, 1181, 1182, 1185, 1191, 1202, 1209, 1210, 1211, 1214, 1220, 1232, 1241, 1242, 1243, 1246, 1253, 1266, 1275, 1276, 1277, 1280, 1287, 1300, 1309, 1310, 1311, 1314, 1321, 1332, 1339, 1340, 1341, 1344, 1350, 1362, 1371, 1372, 1373, 1376, 1383, 1393, 1400, 1401, 1402, 1405, 1411, 1421, 1428, 1429, 1430, 1433, 1439, 1449, 1456, 1457, 1458, 1461, 1467, 1479, 1488, 1489, 1490, 1493, 1500, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1623, 1627, 1628, 1764, 1765], "89420738e": 31, "04267095e": 31, "77455017e": 31, "31905079e": 31, "30222176e": 31, "30214836e": 31, "24145576e": 31, "23783828e": 31, "55933521e": 31, "28171922e": 31, "42565570e": 31, "50727954e": 31, "43953833e": 31, "50062572e": 31, "55243208e": 31, "32207079e": 31, "34987837e": 31, "66727508e": 31, "39604722e": 31, "42344294e": 31, "71830607e": 31, "23808264e": 31, "72221300e": 31, "54565563e": 31, "51233452e": 31, "46736360e": 31, "22759973e": 31, "21953624e": 31, "46842422e": 31, "95621881e": 31, "36754190e": 31, "64553342e": 31, "71536668e": 31, "76172042e": 31, "18054131e": 31, "28903640e": 31, "43645517e": 31, "99765284e": 31, "25195449e": 31, "75866050e": 31, "11702923e": 31, "58468228e": 31, "64558123e": 31, "80733040e": 31, "76096556e": 31, "26465923e": 31, "50115839e": 31, "99004234e": 31, "47428316e": 31, "67900790e": 31, "32858918e": 31, "06061817e": 31, "22155304e": 31, "56570428e": 31, "25597971e": 31, "43464137e": 31, "05668134e": 31, "96216557e": 31, "72340174e": 31, "36247450e": 31, "20263961e": 31, "17469033e": 31, "69601644e": 31, "62450988e": 31, "36221703e": 31, "68134536e": 31, "08491175e": 31, "73587552e": 31, "15380092e": 31, "35415600e": 31, "93819621e": 31, "36483018e": 31, "62855062e": 31, "12260740e": 31, "63064695e": 31, "57249388e": 31, "06342178e": 31, "57058787e": 31, "77740016e": 31, "30889967e": 31, "56529086e": 31, "37910190e": 31, "40256322e": 31, "61614696e": 31, "51116000e": 31, "64513671e": 31, "69332301e": 31, "78516125e": 31, "00674937e": 31, "26373628e": 31, "59695702e": 31, "28385611e": 31, "63934065e": 31, "40040722e": 31, "04248405e": 31, "78053978e": 31, "85116941e": 31, "38291447e": 31, "poisseiul": 31, "f_h": 31, "roll": [31, 35], "invert": [31, 129], "f_": 31, "h": [31, 34, 553, 765, 785, 789, 800, 807, 825], "06628892e": 31, "54574396e": 31, "68771476e": 31, "02834541e": 31, "04221002e": 31, "56413768e": 31, "36307595e": 31, "38728916e": 31, "88048686e": 31, "84285903e": 31, "55979702e": 31, "96186713e": 31, "98911939e": 31, "40330338e": 31, "87803644e": 31, "69389385e": 31, "87475037e": 31, "24076747e": 31, "51197738e": 31, "40089302e": 31, "96505494e": 31, "08018650e": 31, "37584242e": 31, "64594752e": 31, "49740078e": 31, "15896914e": 31, "33118383e": 31, "36044131e": 31, "24270137e": 31, "63645409e": 31, "79109150e": 31, "93898435e": 31, "03452159e": 31, "89671262e": 31, "51618245e": 31, "90115247e": 31, "49812254e": 31, "97912309e": 31, "49243679e": 31, "84833708e": 31, "221874": 31, "82508271": 31, "202422": 31, "05856543": 31, "195792": 31, "90381689": 31, "185434": 31, "50271806": 31, "152584": 31, "26735282": 31, "somewhat": 31, "inclus": 31, "impact": [32, 129], "multiphas": 32, "motiv": 32, "imbibit": 32, "imbibt": 32, "menisci": 32, "plan": 32, "degre": [32, 1650, 1651], "capillary_pressur": 32, "displac": [32, 812, 832, 1613], "increasingli": 32, "p_": [32, 832], "increas": [32, 33, 652, 812, 828, 832], "decreas": 32, "suction": 32, "stem": 32, "drain": 32, "regardless": [32, 98, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "clear": [32, 39, 40, 41, 59, 60, 63, 73, 89, 90, 100, 119, 121, 131, 132, 133, 151, 152, 154, 164, 165, 166, 184, 185, 187, 198, 217, 219, 229, 230, 231, 249, 250, 252, 262, 263, 264, 282, 283, 285, 295, 296, 297, 315, 316, 318, 328, 329, 330, 348, 349, 352, 362, 363, 364, 382, 383, 385, 395, 396, 397, 415, 416, 418, 428, 429, 430, 448, 449, 497, 510, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589], "inject": 32, "withdraw": 32, "spars": [32, 848, 854, 855, 864, 866, 887, 893, 894, 903, 905, 926, 931, 932, 941, 943, 964, 969, 970, 979, 981, 1002, 1007, 1008, 1019, 1021, 1042, 1048, 1049, 1058, 1060, 1081, 1087, 1088, 1097, 1099, 1120, 1125, 1126, 1135, 1137, 1158, 1163, 1164, 1173, 1175, 1596, 1603, 1607, 1609, 1614, 1617, 1619, 1624, 1629, 1641, 1642, 1643, 1644, 1652, 1656, 1659, 1801], "connected_compon": [32, 1614, 1652], "cluster": [32, 98, 743, 744, 1614, 1622, 1626, 1637, 1640, 1647, 1652, 1658, 1794], "drop_zero": [32, 854, 855, 893, 894, 931, 932, 969, 970, 1007, 1008, 1048, 1049, 1087, 1088, 1125, 1126, 1163, 1164], "51": 32, "55": 32, "57": 32, "65": [32, 785], "66": 32, "70": 32, "72": 32, "74": [32, 34], "81": 32, "82": 32, "84": 32, "87": 32, "88": 32, "92": 32, "94": 32, "95": 32, "98": 32, "101": [32, 861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170], "102": 32, "103": 32, "104": 32, "106": 32, "107": 32, "108": 32, "114": 32, "116": 32, "117": 32, "118": 32, "123": 32, "125": 32, "127": 32, "129": 32, "132": 32, "137": 32, "138": 32, "142": 32, "145": 32, "152": 32, "155": 32, "156": 32, "157": 32, "158": 32, "159": 32, "163": [32, 829], "164": 32, "165": 32, "166": 32, "167": 32, "168": [32, 812], "169": 32, "170": 32, "171": 32, "172": 32, "173": 32, "174": 32, "175": 32, "176": 32, "177": [32, 668], "178": 32, "179": 32, "181": 32, "182": 32, "183": 32, "184": 32, "185": 32, "186": 32, "187": 32, "189": 32, "191": 32, "192": 32, "193": 32, "194": 32, "195": 32, "196": 32, "197": 32, "198": 32, "199": 32, "201": [32, 861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170], "202": 32, "203": 32, "204": 32, "205": 32, "206": 32, "207": 32, "208": 32, "209": 32, "210": 32, "212": 32, "213": 32, "214": 32, "215": 32, "217": 32, "218": 32, "219": 32, "220": 32, "221": 32, "223": 32, "224": 32, "225": 32, "226": 32, "227": 32, "228": 32, "229": 32, "230": 32, "231": 32, "232": 32, "233": 32, "234": 32, "235": 32, "236": [32, 825], "237": 32, "238": 32, "239": 32, "240": [32, 800], "241": 32, "242": 32, "243": 32, "244": 32, "245": 32, "246": 32, "247": 32, "248": 32, "249": 32, "250": 32, "251": 32, "252": 32, "253": 32, "254": 32, "255": 32, "256": 32, "257": 32, "258": 32, "259": 32, "260": 32, "261": 32, "262": [32, 669], "263": 32, "264": 32, "265": 32, "266": 32, "267": 32, "268": 32, "269": 32, "270": 32, "271": 32, "272": 32, "273": [32, 765, 789, 796, 800, 807], "274": [32, 669], "275": 32, "276": 32, "277": 32, "278": 32, "279": 32, "280": 32, "281": 32, "282": 32, "283": 32, "284": 32, "285": 32, "286": 32, "287": 32, "288": 32, "289": 32, "290": [32, 647], "291": 32, "292": 32, "293": 32, "294": 32, "295": [32, 825], "296": 32, "cmap": 32, "cm": 32, "nipy_spectr": 32, "black": 32, "thoughout": 32, "speak": 32, "uninvad": [32, 98, 1614, 1622], "yellow": 32, "invaded_por": 32, "isin": 32, "viridi": 32, "yeild": [32, 926], "repeat": [32, 750], "increaingli": 32, "subsequ": [32, 646, 654, 704, 737], "beyond": [32, 758, 812, 828, 1639], "drainage_01": 32, "0x7fe20f97b950": 32, "trap": [32, 98, 122, 196, 220], "actaulli": 32, "histori": [32, 98], "inv_pattern": 32, "9000": 32, "grei": 32, "post": 32, "escap": [32, 98], "apply_trap": 32, "inf": [32, 98, 572, 1653, 1800], "set_outlet_bc": [32, 196], "calibr": 32, "froma": 32, "namedtupl": 32, "evacu": 32, "data2": 32, "plateau": 32, "rigor": [32, 834, 835], "fictiti": 32, "invaded": 32, "percoalt": 32, "event": 32, "increment": 32, "mainli": 32, "binari": [32, 129, 195, 553, 768, 1225], "heap": [32, 195], "queue": 32, "accessb": 32, "newli": [32, 1613, 1653], "pinv": 32, "alloc": 32, "tinv": 32, "9260": 32, "551831957264": 32, "9493": 32, "684102948077": 32, "8650": 32, "998219036306": 32, "381": 32, "2nd": [32, 712], "heapq": 32, "hq": 32, "heapifi": 32, "easilii": 32, "sequenti": 32, "care": 32, "heappop": 32, "p_new": 32, "p_next": 32, "t_new": 32, "t_next": 32, "401": [32, 796], "maintain": [32, 1648, 1736, 1754, 1774], "heappush": 32, "confirm": [32, 762], "lowest": 32, "compil": 32, "numba": [32, 195], "acceler": 32, "abovec": 32, "reset": [32, 195, 723], "contigu": 32, "untrap": 32, "vari": 32, "overlai": 32, "data_ip": 32, "film": 32, "crack": 32, "jump": 32, "rise": 32, "fall": 32, "spike": 32, "vallei": 32, "never": [32, 652], "envelop": 32, "peak": 32, "current_directori": 33, "getcwd": 33, "plotli": 33, "pip": [33, 35], "instal": [33, 565], "pane": 33, "consol": [33, 35, 566], "editor": 33, "wirefram": 33, "transpar": 33, "static": [33, 1668, 1670, 1681, 1683], "scatter": 33, "plot_notebook": 33, "rotat": [33, 1650], "zoom": 33, "hover": 33, "box": 33, "node_color": 33, "node_scal": 33, "sceenshot": 33, "analysi": [33, 553, 647], "export": [33, 558, 565, 571], "vtp": [33, 571, 572], "paraveiw": 33, "project_to_vtk": 33, "file_nam": 33, "directori": [33, 35, 553, 1783, 1788], "path_to_fil": 33, "_vtk": 33, "filenam": [33, 551, 552, 553, 555, 556, 558, 559, 560, 563, 564, 565, 567, 569, 571, 572, 573, 1783, 1784, 1788, 1789], "paraview_net": 33, "parview": 33, "click": 33, "button": 33, "glyph": 33, "tool": [33, 647], "pipelin": [33, 729], "alphabet": 33, "shrink": 33, "celldatatopointdata": 33, "transpos": 33, "extractsurfac": 33, "proport": [33, 732], "ey": 33, "icon": 33, "glyph1": 33, "solid": [33, 757, 827, 834, 835, 1002, 1654, 1655], "tube1": 33, "didn": 33, "document": [34, 557, 1662, 1667, 1669, 1676, 1680, 1682], "releas": [34, 35], "mid": 34, "septemb": 34, "public": 34, "gostick": [34, 647, 812, 828], "aghighi": 34, "hinebaugh": 34, "tranter": 34, "hoeh": 34, "ma": 34, "dai": 34, "spellaci": 34, "sharqawi": [34, 765, 789, 800, 807], "mh": 34, "bazylak": 34, "burn": 34, "lehnert": 34, "scienc": [34, 669], "engin": [34, 785], "2016": [34, 196, 829], "doi": [34, 196, 792, 794], "1109": 34, "mcse": 34, "heavili": 35, "stack": [35, 1651], "environ": 35, "anaconda": 35, "Be": 35, "forg": 35, "won": 35, "publish": 35, "month": 35, "latest": 35, "branch": 35, "git": 35, "com": [35, 1676], "pmeal": 35, "contributor": 35, "insist": 35, "uninstal": 35, "command": 35, "clone": [35, 1612, 1615], "repo": 35, "local": 35, "difficult": [35, 849, 888, 1043, 1082], "sound": 35, "termin": 35, "cmd": 35, "cd": 35, "somewher": 35, "disk": [35, 560, 1631], "txt": [35, 1676], "overrid": [35, 848, 887, 964, 1042, 1081, 1120, 1158], "channel": 35, "dep": 35, "voila": 35, "date": [35, 1789], "program": 35, "menu": [35, 1774], "kwarg": [37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 476, 477, 525, 540, 541, 549, 729, 758, 837, 848, 850, 887, 889, 926, 927, 964, 965, 1002, 1003, 1042, 1044, 1081, 1083, 1120, 1121, 1158, 1159, 1197, 1198, 1225, 1227, 1248, 1259, 1261, 1282, 1293, 1295, 1316, 1327, 1328, 1355, 1357, 1378, 1388, 1389, 1416, 1417, 1444, 1445, 1472, 1474, 1495, 1506, 1507, 1534, 1536, 1557, 1568, 1569, 1606, 1608, 1610, 1617, 1620, 1623, 1624, 1627, 1628, 1639, 1650, 1651, 1658, 1661, 1664, 1665, 1666, 1668, 1670, 1673, 1675, 1677, 1679, 1681, 1683, 1684, 1686, 1687, 1713, 1737, 1774], "reactivetransport": [37, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 393], "advect": [37, 326, 810], "iterative_prop": [37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426], "bctype": [39, 59, 61, 73, 89, 100, 119, 120, 122, 131, 151, 164, 184, 198, 217, 218, 220, 229, 249, 262, 282, 295, 315, 328, 348, 350, 362, 382, 395, 415, 428, 448], "shallow": [42, 74, 101, 134, 167, 199, 232, 265, 298, 331, 365, 398, 431, 461, 480, 515, 527, 853, 892, 930, 968, 1006, 1047, 1086, 1124, 1162, 1201, 1231, 1265, 1299, 1331, 1361, 1392, 1420, 1448, 1478, 1510, 1540, 1572, 1689, 1701, 1715, 1728, 1746, 1759], "array_lik": [43, 57, 59, 60, 61, 62, 63, 64, 68, 75, 89, 90, 94, 102, 119, 121, 126, 135, 149, 151, 152, 153, 154, 155, 159, 168, 182, 184, 185, 186, 187, 188, 192, 200, 217, 219, 224, 233, 247, 249, 250, 251, 252, 253, 257, 266, 280, 282, 283, 284, 285, 286, 290, 299, 313, 315, 316, 317, 318, 319, 323, 332, 346, 347, 348, 349, 350, 351, 352, 353, 357, 366, 380, 381, 382, 383, 384, 385, 386, 390, 399, 413, 414, 415, 416, 417, 418, 419, 423, 432, 446, 448, 449, 450, 451, 455, 473, 481, 497, 501, 505, 510, 549, 647, 732, 735, 812, 848, 849, 854, 855, 856, 857, 858, 859, 860, 861, 871, 880, 884, 887, 888, 893, 894, 895, 896, 897, 898, 899, 900, 910, 919, 923, 926, 931, 932, 933, 934, 935, 936, 937, 938, 948, 957, 961, 964, 969, 970, 971, 972, 973, 974, 975, 976, 986, 995, 999, 1002, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1026, 1035, 1039, 1043, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1065, 1074, 1078, 1081, 1082, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1104, 1113, 1117, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1142, 1151, 1155, 1158, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1180, 1189, 1193, 1202, 1218, 1222, 1226, 1232, 1251, 1255, 1260, 1266, 1285, 1289, 1294, 1300, 1319, 1323, 1332, 1348, 1352, 1356, 1362, 1381, 1385, 1393, 1409, 1413, 1421, 1437, 1441, 1449, 1465, 1469, 1473, 1479, 1498, 1502, 1511, 1527, 1531, 1535, 1541, 1560, 1564, 1573, 1589, 1593, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1632, 1633, 1637, 1638, 1639, 1640, 1647, 1650, 1651, 1652, 1653, 1654, 1655], "union": [43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 355, 366, 373, 374, 375, 378, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 453, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 856, 857, 860, 861, 870, 871, 872, 873, 876, 882, 895, 896, 899, 900, 909, 910, 911, 912, 915, 921, 933, 934, 937, 938, 947, 948, 949, 950, 953, 959, 971, 972, 975, 976, 985, 986, 987, 988, 991, 997, 1009, 1010, 1013, 1014, 1025, 1026, 1027, 1028, 1031, 1037, 1050, 1051, 1054, 1055, 1064, 1065, 1066, 1067, 1070, 1076, 1089, 1090, 1093, 1094, 1103, 1104, 1105, 1106, 1109, 1115, 1127, 1128, 1131, 1132, 1141, 1142, 1143, 1144, 1147, 1153, 1165, 1166, 1169, 1170, 1179, 1180, 1181, 1182, 1185, 1191, 1202, 1209, 1210, 1211, 1214, 1220, 1232, 1241, 1242, 1243, 1246, 1253, 1266, 1275, 1276, 1277, 1280, 1287, 1300, 1309, 1310, 1311, 1314, 1321, 1332, 1339, 1340, 1341, 1344, 1350, 1362, 1371, 1372, 1373, 1376, 1383, 1393, 1400, 1401, 1402, 1405, 1411, 1421, 1428, 1429, 1430, 1433, 1439, 1449, 1456, 1457, 1458, 1461, 1467, 1479, 1488, 1489, 1490, 1493, 1500, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1623, 1627, 1628, 1773], "exclusive_or": [43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 355, 366, 373, 374, 375, 378, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 453, 481, 488, 489, 490, 493, 499, 505, 506, 507, 508, 509, 511, 856, 857, 860, 861, 870, 871, 872, 873, 876, 882, 895, 896, 899, 900, 909, 910, 911, 912, 915, 921, 933, 934, 937, 938, 947, 948, 949, 950, 953, 959, 971, 972, 975, 976, 985, 986, 987, 988, 991, 997, 1009, 1010, 1013, 1014, 1025, 1026, 1027, 1028, 1031, 1037, 1050, 1051, 1054, 1055, 1064, 1065, 1066, 1067, 1070, 1076, 1089, 1090, 1093, 1094, 1103, 1104, 1105, 1106, 1109, 1115, 1127, 1128, 1131, 1132, 1141, 1142, 1143, 1144, 1147, 1153, 1165, 1166, 1169, 1170, 1179, 1180, 1181, 1182, 1185, 1191, 1202, 1209, 1210, 1211, 1214, 1220, 1232, 1241, 1242, 1243, 1246, 1253, 1266, 1275, 1276, 1277, 1280, 1287, 1300, 1309, 1310, 1311, 1314, 1321, 1332, 1339, 1340, 1341, 1344, 1350, 1362, 1371, 1372, 1373, 1376, 1383, 1393, 1400, 1401, 1402, 1405, 1411, 1421, 1428, 1429, 1430, 1433, 1439, 1449, 1456, 1457, 1458, 1461, 1467, 1479, 1488, 1489, 1490, 1493, 1500, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1623, 1627, 1628], "criteria": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 366, 399, 432, 481, 505, 856, 859, 895, 898, 933, 936, 971, 974, 1009, 1012, 1050, 1053, 1089, 1092, 1127, 1130, 1165, 1168, 1202, 1232, 1266, 1300, 1332, 1362, 1393, 1421, 1449, 1479, 1511, 1541, 1573, 1621], "subset": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 366, 399, 432, 458, 477, 481, 505, 541, 850, 856, 889, 895, 927, 933, 965, 971, 1003, 1009, 1044, 1050, 1083, 1089, 1121, 1127, 1159, 1165, 1198, 1202, 1227, 1232, 1261, 1266, 1295, 1300, 1328, 1332, 1357, 1362, 1389, 1393, 1417, 1421, 1445, 1449, 1474, 1479, 1507, 1511, 1536, 1541, 1569, 1573], "requrest": [46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 464, 484, 865, 904, 942, 980, 1020, 1059, 1098, 1136, 1174, 1205, 1236, 1270, 1304, 1335, 1366, 1396, 1424, 1452, 1483, 1514, 1545, 1576], "pore1": [46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 464, 484, 606, 621, 636, 865, 904, 942, 980, 1020, 1059, 1098, 1136, 1174, 1205, 1236, 1270, 1304, 1335, 1366, 1396, 1424, 1452, 1483, 1514, 1545, 1576], "pore2": [46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 464, 484, 606, 621, 636, 865, 904, 942, 980, 1020, 1059, 1098, 1136, 1174, 1205, 1236, 1270, 1304, 1335, 1366, 1396, 1424, 1452, 1483, 1514, 1545, 1576], "addition": [50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 488, 506, 568, 870, 909, 947, 985, 1025, 1064, 1103, 1141, 1179, 1209, 1241, 1275, 1309, 1339, 1371, 1400, 1428, 1456, 1488, 1518, 1550, 1580], "whose": [50, 55, 66, 82, 87, 92, 109, 115, 124, 142, 147, 157, 175, 180, 190, 207, 213, 222, 240, 245, 255, 273, 278, 288, 306, 311, 321, 339, 344, 355, 373, 378, 388, 406, 411, 421, 439, 444, 453, 488, 493, 499, 506, 509, 511, 569, 573, 739, 858, 860, 861, 870, 871, 876, 882, 897, 899, 900, 909, 910, 915, 921, 935, 937, 938, 947, 948, 953, 959, 973, 975, 976, 985, 986, 991, 997, 1002, 1011, 1013, 1014, 1015, 1016, 1025, 1026, 1031, 1037, 1052, 1054, 1055, 1064, 1065, 1070, 1076, 1091, 1093, 1094, 1103, 1104, 1109, 1115, 1129, 1131, 1132, 1141, 1142, 1147, 1153, 1167, 1169, 1170, 1179, 1180, 1185, 1191, 1209, 1214, 1220, 1241, 1246, 1253, 1275, 1280, 1287, 1309, 1314, 1321, 1339, 1344, 1350, 1371, 1376, 1383, 1400, 1405, 1411, 1428, 1433, 1439, 1456, 1461, 1467, 1488, 1493, 1500, 1518, 1523, 1529, 1550, 1555, 1562, 1580, 1585, 1591, 1623, 1627, 1628, 1637, 1639, 1648, 1662], "sought": [50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 488, 506, 798, 858, 859, 860, 861, 870, 897, 898, 899, 900, 909, 935, 936, 937, 938, 947, 973, 974, 975, 976, 985, 1011, 1012, 1013, 1014, 1015, 1016, 1025, 1052, 1053, 1054, 1055, 1064, 1091, 1092, 1093, 1094, 1103, 1129, 1130, 1131, 1132, 1141, 1167, 1168, 1169, 1170, 1179, 1209, 1241, 1275, 1309, 1339, 1371, 1400, 1428, 1456, 1488, 1518, 1550, 1580, 1623, 1627, 1628, 1629], "num_throat": [51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 489, 507, 854, 855, 872, 893, 894, 911, 931, 932, 949, 969, 970, 987, 1007, 1008, 1027, 1048, 1049, 1066, 1087, 1088, 1105, 1125, 1126, 1143, 1163, 1164, 1181, 1210, 1242, 1276, 1310, 1340, 1372, 1401, 1429, 1457, 1489, 1519, 1551, 1581], "num_por": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 477, 490, 508, 541, 850, 873, 889, 912, 927, 950, 965, 988, 1003, 1028, 1044, 1067, 1083, 1106, 1121, 1144, 1159, 1182, 1198, 1211, 1227, 1243, 1261, 1277, 1295, 1311, 1328, 1341, 1357, 1373, 1389, 1402, 1417, 1430, 1445, 1458, 1474, 1490, 1507, 1520, 1536, 1552, 1569, 1582], "keyerror": [53, 54, 85, 86, 113, 114, 145, 146, 178, 179, 211, 212, 243, 244, 276, 277, 309, 310, 342, 343, 376, 377, 409, 410, 442, 443, 468, 469, 491, 492, 520, 521, 535, 536, 874, 875, 913, 914, 951, 952, 989, 990, 1029, 1030, 1068, 1069, 1107, 1108, 1145, 1146, 1183, 1184, 1212, 1213, 1244, 1245, 1278, 1279, 1312, 1313, 1342, 1343, 1374, 1375, 1403, 1404, 1431, 1432, 1459, 1460, 1491, 1492, 1521, 1522, 1553, 1554, 1583, 1584, 1694, 1695, 1706, 1707, 1720, 1721, 1768, 1769, 1786, 1787], "lifo": [54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 377, 410, 443, 469, 492, 521, 536, 875, 914, 952, 990, 1030, 1069, 1108, 1146, 1184, 1213, 1245, 1279, 1313, 1343, 1375, 1404, 1432, 1460, 1492, 1522, 1554, 1584, 1695, 1707, 1721, 1787], "indici": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 493, 509, 876, 915, 953, 991, 1016, 1031, 1070, 1109, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585], "wildcard": [55, 66, 87, 92, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 355, 378, 388, 411, 421, 444, 453, 493, 499, 509, 511, 876, 882, 915, 921, 953, 959, 991, 997, 1031, 1037, 1070, 1076, 1109, 1115, 1147, 1153, 1185, 1191, 1214, 1220, 1246, 1253, 1280, 1287, 1314, 1321, 1344, 1350, 1376, 1383, 1405, 1411, 1433, 1439, 1461, 1467, 1493, 1500, 1523, 1529, 1555, 1562, 1585, 1591], "compound": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 493, 509, 785, 876, 915, 953, 991, 1031, 1070, 1109, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585], "opt": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 493, 509, 876, 915, 953, 991, 1031, 1070, 1109, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585], "verbos": [58, 150, 183, 248, 281, 314, 447, 548, 1804, 1805], "matric": [58, 150, 183, 248, 281, 314, 447, 1120], "solutioncontain": [58, 150, 183, 248, 281, 314, 447], "bcvalu": [59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448], "wrapper": [59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 546, 758, 828, 829, 1259, 1293, 1596], "remvo": [59, 89, 119, 120, 122, 151, 184, 217, 218, 220, 249, 282, 315, 348, 382, 415, 448], "remaind": [60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 383, 416, 449, 497, 510, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589], "intact": [60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 383, 416, 449, 497, 510, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589], "outflow": [61, 350], "set_bc": [61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 351, 353, 384, 386, 417, 419, 450, 451], "conditon": [62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 351, 353, 384, 386, 417, 419, 450, 451], "dirichlet": [64, 155, 188, 253, 286, 319, 353, 386, 419, 451], "omit": [66, 92, 124, 157, 190, 222, 255, 288, 321, 355, 388, 421, 453, 499, 511, 854, 855, 882, 893, 894, 921, 931, 932, 959, 969, 970, 997, 1007, 1008, 1037, 1048, 1049, 1076, 1087, 1088, 1115, 1125, 1126, 1153, 1163, 1164, 1191, 1220, 1253, 1287, 1321, 1350, 1383, 1411, 1439, 1467, 1500, 1529, 1562, 1591], "inidic": [66, 92, 124, 157, 190, 222, 255, 288, 321, 355, 388, 421, 453, 499, 511, 882, 921, 959, 997, 1037, 1076, 1115, 1153, 1191, 1220, 1253, 1287, 1321, 1350, 1383, 1411, 1439, 1467, 1500, 1529, 1562, 1591], "foundat": 71, "themselv": [98, 758, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "pressu": 118, "defend": [122, 220], "void": [129, 1002], "confin": 129, "simualt": 129, "oppos": 129, "n_": 129, "lineartransport": [162, 227, 293], "fourierconduct": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "speed": 195, "upon": [195, 477, 478, 541, 542, 850, 851, 889, 890, 927, 928, 965, 966, 1003, 1004, 1044, 1045, 1083, 1084, 1121, 1122, 1159, 1160, 1198, 1199, 1227, 1228, 1261, 1262, 1295, 1296, 1328, 1329, 1357, 1358, 1389, 1390, 1417, 1418, 1445, 1446, 1474, 1475, 1507, 1508, 1536, 1537, 1569, 1570], "effici": 195, "masson": 196, "ninf": 196, "alg": 196, "1016": 196, "cageo": 196, "003": 196, "ionic": 227, "role": 227, "ohmicconduct": [228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "phenomena": 260, "signifi": [347, 381, 414], "instanti": [347, 381, 414, 458, 1737, 1774], "intermedi": [347, 381, 414, 549], "transientsolut": [347, 381, 414, 549], "transientfickiandiffus": [361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "transientreactivetransport": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "subdomain": 458, "descend": [458, 1736, 1754], "geomeri": 458, "boss": 458, "geom1": 458, "mixin": [458, 476, 504], "base2": [460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 504], "obj": [477, 478, 541, 542, 850, 851, 889, 890, 927, 928, 965, 966, 1003, 1004, 1044, 1045, 1083, 1084, 1121, 1122, 1159, 1160, 1198, 1199, 1227, 1228, 1258, 1261, 1262, 1292, 1295, 1296, 1326, 1328, 1329, 1357, 1358, 1389, 1390, 1417, 1418, 1445, 1446, 1474, 1475, 1505, 1507, 1508, 1536, 1537, 1567, 1569, 1570, 1737, 1739, 1740, 1793, 1804, 1805], "immedi": [477, 541, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569], "discard": [477, 541, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569], "exclud": [495, 543, 878, 917, 955, 993, 1033, 1072, 1111, 1149, 1187, 1216, 1248, 1282, 1316, 1346, 1378, 1407, 1435, 1463, 1495, 1525, 1557, 1587, 1680], "domain1": [496, 544, 879, 918, 956, 994, 1034, 1073, 1112, 1150, 1188, 1217, 1250, 1284, 1318, 1347, 1380, 1408, 1436, 1464, 1497, 1526, 1559, 1588], "labelmixin": [505, 506, 507, 508, 509, 510, 511], "hold": [512, 557, 1740], "modelwrapp": [513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524], "modelsmixin": 525, "dependency_list": [525, 528, 530], "modelsdict": [526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539], "intra": 528, "inter": 528, "unresolv": 529, "shell": [530, 1655], "decent": 530, "map": [530, 554, 758, 1676, 1699], "drawn": 530, "frame": 530, "modelsmixin2": [541, 542, 543, 544], "brief": [547, 548, 1699, 1755, 1756, 1777], "atol": [548, 1604], "rtol": [548, 1604, 1639, 1801], "linsolv": 548, "scipyrk45": 549, "od": 549, "dy": 549, "dt": [549, 668], "timespan": 549, "ex": 549, "t_i": 549, "jgf": [552, 560], "onto": 552, "voxel_s": 553, "3dma": 553, "rock": 553, "np2th": 553, "th2np": 553, "resolut": 553, "eac": 553, "dimens": [553, 964, 1002, 1158, 1613, 1618, 1631, 1639, 1650], "rocknam": 553, "th2pn": 553, "human": [553, 566], "brent": 553, "lindquist": 553, "medial": 553, "thin": 553, "skeleton": 553, "lee": [553, 799], "oh": 553, "venkatarangan": 553, "shin": 553, "prodanov": 553, "autom": 553, "microtomographi": 553, "suni": 553, "stoni": 553, "brook": 553, "2005": [553, 800], "undirect": [554, 561, 1617, 1656, 1659], "gap": 554, "pore_": 554, "prepend": [554, 568], "central": [554, 655, 705, 740, 1639], "1x3": 554, "adj": 554, "throat_": 554, "embed": 554, "pergeo": 555, "avizo": 555, "pickl": [556, 1806], "dat": 557, "_node1": 557, "statoil": [557, 825, 1613], "maxim": 557, "ball": 557, "imperi": 557, "colleg": 557, "london": 557, "dataset": 557, "download": 557, "websit": 557, "header": 557, "theses": 557, "rectangular": [558, 675, 692, 695, 710, 719], "circular": [558, 657, 692, 694, 825, 964, 1631, 1639, 1654], "comsol": 558, "mesh": [558, 565], "delim": [562, 568, 570], "explicit": 564, "salom": 564, "maxsiz": [565, 1731, 1749], "auto": [565, 1806], "fileformat": 565, "stl": 565, "logger_level": 565, "holder": [565, 572], "maximum": [565, 650, 652, 698, 701, 726, 727, 827, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1617, 1645], "finner": 565, "slower": 565, "gmsh": 565, "fluent": 565, "ngsolv": 565, "logger": 565, "netgen": 565, "triangl": [565, 669, 854, 893, 931, 969, 1007, 1048, 1087, 1125, 1163], "tessel": [565, 812, 964, 1002, 1158, 1631, 1659], "cad": 565, "slow": [565, 758, 860, 899, 937, 975, 1013, 1015, 1016, 1054, 1093, 1131, 1169, 1623, 1627, 1628], "hdf5": [566, 569], "flag": [566, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1736, 1754], "csv": 567, "categorize_bi": 568, "organ": 568, "net_01": 568, "hierarch": 568, "shorter": 570, "pvsm": 571, "fill_nan": 572, "fill_inf": 572, "vtk": 572, "issu": 572, "rectangl": [577, 582, 583, 596, 601, 607, 608, 610, 615, 622, 623, 625, 630, 637, 638, 679, 684, 690, 691, 1002], "ideal_ga": 586, "0134": 586, "vdm": [586, 768], "gas_mixture_fesg": 586, "00422791": 586, "89606e": 586, "56383e": 586, "82082e": 586, "51815e": 586, "48553e": 586, "11409e": 586, "14280": 589, "47004": 589, "56254": 589, "00028": 589, "98691": 589, "0170967": 589, "3862e": 589, "00355837": 589, "00131e": 589, "23684e": 589, "1684e": 589, "generic_diffus": [592, 593], "generic_electr": 593, "generic_therm": 593, "symmetri": [596, 601, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 630, 633, 637, 638, 640, 644, 834, 835], "cone": [597, 599, 602, 611, 613, 616, 626, 628, 631, 680, 682, 685], "throat_coord": [599, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 628, 629, 630, 631, 632, 633, 682, 683, 684, 685, 686, 687], "centroid": [599, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 628, 629, 630, 632, 633, 671, 677, 682, 684, 685, 686, 687, 1636, 1647], "pyramid": [600, 603, 605, 614, 617, 620, 629, 632, 635, 683, 686, 688], "trapezoid": [601, 604, 608, 615, 618, 623, 630, 633, 638, 684, 687, 691], "pore_coord": [602, 603, 604, 685, 686, 687], "pore_aspect": [612, 622, 627, 637], "throat_aspect": [612, 622, 627, 637], "aspect": [612, 622, 627, 637, 668, 1794], "divis": [619, 634, 827], "size_factor": [621, 636, 815, 816, 817, 818, 820, 821, 823, 824, 845, 846], "s_": [621, 636, 832, 834, 835, 836, 838, 839, 840, 841, 842, 843], "ndarri": [643, 647, 659, 1624], "spatailli": [645, 647], "sent": [646, 654, 704, 735, 737, 857, 861, 896, 900, 934, 938, 972, 976, 1010, 1014, 1051, 1055, 1090, 1094, 1128, 1132, 1166, 1170], "strel": 647, "strength": 647, "extent": 647, "achiev": 647, "geoemtri": 647, "appproach": 647, "anistrop": 647, "ga": [647, 761, 767, 768, 774, 791, 792, 802, 803, 804, 812, 1259], "fuel": 647, "electrod": [647, 834, 835], "fibrou": [647, 812], "polym": 647, "electrolyt": [647, 834, 835], "membran": 647, "v173": 647, "pp277": 647, "pore_shap": 649, "adopt": [650, 698, 701, 726, 727], "func": [651, 653, 655, 702, 703, 705, 728, 729, 733, 740, 1662], "rv_frozen": [651, 702, 728], "stat": [651, 653, 655, 702, 703, 705, 728, 733, 740], "eed": [651, 653, 655, 702, 703, 705, 728, 733, 740], "frozen": [651, 702, 728], "stats_obj": [651, 702, 728], "0001": [651, 653, 655, 702, 703, 705, 728, 733, 740, 837], "fixed_diamet": 652, "touch": [652, 827], "encompass": 652, "closer": 652, "zeno": 652, "cut": 652, "stddev": [653, 703, 733], "deviat": [653, 703, 733], "inner": [653, 655, 703, 705, 733, 740, 1654, 1655], "width": [655, 705, 740], "skew": [655, 705, 740], "ndndarrai": [655, 705, 740], "throat_cross_sectional_area": [657, 658, 659, 660], "surface_area": [659, 708], "crude": 659, "curvatur": [659, 812], "throat_perimet": [668, 669, 709], "perimet": [668, 669, 693, 694, 695, 709, 1649], "throat_area": [668, 669, 700, 716, 818, 825], "indiamet": 668, "jenkin": 668, "rao": 668, "elipt": 668, "pt": 668, "ellipt": [668, 827], "powder": 668, "technologi": 668, "pp": [668, 669], "1984": 668, "mason": [669, 812, 828], "morrow": [669, 812, 828], "mortensen": 669, "liquid": [669, 757, 762, 763, 769, 788, 793, 794, 795, 798, 799, 806, 1293], "irregular": 669, "colloid": [669, 812, 825], "interfac": [669, 812, 825, 832], "1991": 669, "throat_centroid": 677, "endpoint": 677, "ignore_nan": [698, 701, 726, 727], "throat_shap": 700, "cirlc": 700, "sqaur": 700, "unit_vec": 712, "impicit": 712, "1st": 712, "assu": [713, 714, 715, 719], "reprsent": [714, 715, 716, 719], "abnorm": [716, 1647], "hemispher": 717, "cap": [717, 1225], "placehold": 721, "xmax": [722, 734, 827], "xmin": [722, 734, 827], "useless": 723, "denomin": 725, "keyward": 729, "thermofluid": [731, 735], "corel": 731, "independ": [731, 735, 762, 837], "bin_cent": 732, "bin_height": 732, "skip": 735, "nth": 735, "thresh": [746, 751], "coincid": [746, 751], "furthest": 747, "closest": 748, "occurr": [750, 1729, 1734, 1747, 1752], "letsou_stiel": 758, "default_argmap": 758, "cvm": 758, "mixtur": [758, 762, 768, 780, 787, 791, 793, 802, 805, 806, 1225, 1226, 1229, 1235, 1237, 1249, 1258, 1259, 1260, 1263, 1269, 1271, 1283, 1292, 1293, 1294, 1297, 1303, 1305, 1317, 1326, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1416, 1444, 1472, 1473, 1476, 1482, 1484, 1496, 1505, 1506, 1534, 1535, 1538, 1544, 1546, 1558, 1567, 1798, 1799], "3e": 758, "9e": 758, "trail": 758, "iterpret": 758, "ie": 758, "mix": [758, 762, 780, 805, 825], "agre": [758, 834, 835], "corrospod": [762, 763], "costald": [762, 763], "kg": [762, 764, 765, 783, 787, 789, 796, 800, 807], "m3": [762, 764, 769, 787], "mw_": 762, "mw_i": 762, "costald_mixtur": 762, "typic": [762, 832, 1774], "accentr": [763, 774, 792, 794, 799, 806], "dimensionless": [763, 774, 792, 794, 799, 806], "ndrrai": 764, "seawat": [765, 789, 796, 800, 807], "atmospher": [765, 789, 796, 807], "eq": [765, 789, 807, 834, 835], "boil": [765, 769, 788, 789, 792, 794, 795, 796, 807], "salt": [765, 783, 789, 796, 800, 807], "ppt": [765, 789, 796, 800, 807], "thousand": [765, 789, 796, 800, 807], "453": [765, 796, 807], "accuraci": [765, 789, 796, 800, 807], "pct": 765, "lienhard": [765, 789, 800, 807], "zubair": [765, 789, 800, 807], "desalin": [765, 789, 796, 800, 807], "treatment": [765, 789, 800, 807], "2010": [765, 789, 800, 807], "chapman": 767, "enskog": 767, "molar_diffusion_volum": 768, "fuller": 768, "dij": 768, "gid": 768, "chromatogr": 768, "1965": 768, "schettler": 768, "ind": [768, 1619, 1621, 1623, 1624, 1627, 1628], "eng": 768, "chem": 768, "1966": 768, "enslei": 768, "3679": 768, "1969": 768, "vms_at_tb": 769, "sigmas_at_tb": 769, "tyn": 769, "calu": 769, "dilut": 769, "principl": 769, "kinemat": 769, "cp": [771, 773], "linearli": [771, 773], "trc_gas_data": 772, "capac": 774, "weighted_averag": 776, "logarithm": [780, 805, 1237, 1271, 1305, 1367, 1484, 1546], "rule": [780, 805, 1798, 1799], "ln": [780, 805, 841, 1237, 1271, 1305, 1367, 1484, 1546], "z_i": [780, 805, 1237, 1271, 1305, 1367, 1484, 1546], "expon": [780, 805, 832, 834, 835, 843, 1237, 1271, 1305, 1367, 1484, 1546], "guarante": 781, "conc": 783, "nacl": 783, "henri": 785, "gaseou": 785, "dissolv": 785, "kpx": 785, "atm": 785, "yaw": 785, "carl": 785, "solubl": 785, "sulfur": 785, "tradit": 785, "2003": 785, "liqiud": 787, "vapor": [787, 788, 798, 799, 800], "winterfeld": 787, "scriven": 787, "davi": 787, "brock": 788, "bird": 788, "313": 789, "percent": [789, 796, 800, 807], "wassiljew": 791, "hern": [791, 802], "zipper": [791, 802], "thermal": [792, 793, 794, 795, 796, 845, 846], "conductivti": 792, "gharagheizi": [792, 794, 803], "1002": [792, 794], "aic": [792, 794], "13938": [792, 794], "dippr9h": 793, "sato": 795, "jamieson": 796, "tudhop": 796, "393": 796, "1970": 796, "antoin": 798, "rpp": 798, "kesler": 799, "raoult": 800, "473": 800, "ashra": 800, "handbook": 800, "fundament": 800, "letsou": 806, "pore_pressur": [810, 818], "throat_hydraulic_conduct": [810, 818], "throat_diffusive_conduct": 810, "discret": [810, 1639], "diffuvs": 810, "impos": 810, "conduit_shape_factor": 810, "shape_factor": [810, 825], "r_toroid": [812, 828, 829], "toroid": [812, 827, 828, 829], "converg": [812, 828], "diverg": [812, 828], "advanc": [812, 828, 829], "meniscu": [812, 827, 828], "apex": [812, 828], "context": [812, 828], "sci": [812, 825], "1994": 812, "pemfc": 812, "voronoi": [812, 964, 1002, 1015, 1016, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1659], "electrochem": [812, 834, 835], "soc": 812, "f731": 812, "2013": 812, "pore_diffus": [815, 816, 817, 818], "throat_diffus": [815, 816, 817, 818], "pore_temperatur": 816, "throat_temperatur": 816, "knudsen": 816, "molecular_weigth": 816, "pore_area": [818, 825], "taylor": 818, "ari": 818, "pore_conduct": [820, 821, 845, 846], "dict_blurb": [821, 827], "return_arr": 821, "pore_viscos": [823, 824, 825], "throat_viscos": [823, 824, 825], "pore_shape_factor": 825, "throat_shape_factor": 825, "conduit_length": 825, "adapt": 825, "a_p": 825, "r_p": 825, "sf_p": 825, "theorat": 825, "p_p": 825, "4\u03c0": 825, "t_a": 825, "sf_t": 825, "t_p": 825, "valvatn": 825, "martin": 825, "blunt": 825, "2004": [825, 834, 835], "patzek": 825, "silin": 825, "2001": 825, "noncircular": 825, "creep": 825, "304": 825, "profile_equ": 827, "target_pc": [827, 828, 829], "num_point": [827, 828, 829, 1631], "throat_scale_a": 827, "scale_a": 827, "throat_scale_b": 827, "scale_b": 827, "touch_length": [827, 828, 829], "sinusoid": 827, "send": [827, 1630], "men": 827, "profil": [827, 828, 829], "assess": 827, "minima": 827, "maxima": 827, "perpendicular": 827, "protrud": 827, "therfor": 827, "po": 827, "xpo": 827, "rx": 827, "fa": 827, "fb": 827, "throatrad": 827, "fill_angl": 827, "alpha_min": 827, "alpha_max": 827, "c2x": 827, "gamma": [827, 834, 835], "cap_angl": 827, "rad_curv": 827, "men_data": 827, "men_max": 827, "toru": 828, "quarter": 829, "wavelength": 829, "amplitud": 829, "arctan": 829, "forner": 829, "cuenca": 829, "pefc": 829, "wettabl": 829, "ec": 829, "f1038": 829, "f1048": 829, "throat_occup": 831, "pore_occup": 831, "strict": 831, "agress": 831, "unoccupi": [831, 1652, 1658], "loos": 831, "pc_star": 832, "swp_star": 832, "eta": 832, "residu": 832, "i0_ref": [834, 835], "c_ref": [834, 835], "reaction_area": [834, 835], "solid_voltag": [834, 835], "electrolyte_voltag": [834, 835], "open_circuit_voltag": [834, 835], "butler": [834, 835], "volmer": [834, 835], "redox": [834, 835], "exchang": [834, 835], "promot": [834, 835], "cathod": [834, 835], "theoret": [834, 835], "justif": [834, 835], "voltag": [834, 835], "equilibrium": [834, 835], "butler_volmer_voltag": 834, "former": [834, 835, 1737], "shouldn": [834, 835], "faradai": [834, 835], "book": [834, 835], "cite": [834, 835], "i_": [834, 835], "0ref": [834, 835], "rxn": [834, 835], "rt": [834, 835], "eta_": [834, 835], "phi_": [834, 835], "met": [834, 835], "u_": [834, 835], "electrostat": [834, 835], "consentr": [834, 835], "john": [834, 835], "newman": [834, 835], "karen": [834, 835], "thoma": [834, 835], "alyea": [834, 835], "wilei": [834, 835], "son": [834, 835], "chapter8": [834, 835], "electrolyte_concentr": 835, "rate_info": [835, 843], "butler_volmer_conc": 835, "a5": [836, 839, 840, 841], "a6": [836, 839], "eqn": 837, "sympi": 837, "evalu": [837, 1229, 1263, 1297, 1359, 1476, 1538], "sympifi": 837, "live": 837, "IF": 837, "referenc": 837, "st": 837, "arg_map": 837, "log_": 839, "pore_thermal_conduct": 846, "throat_thermal_conduct": 846, "dataclass": [848, 887, 964, 1042, 1081, 1120, 1158], "identif": [848, 887, 964, 1042, 1081, 1120, 1158, 1653], "belon": [848, 1081], "corner_sit": [848, 1081], "body_sit": 848, "incid": [848, 855, 866, 887, 894, 905, 926, 932, 943, 964, 970, 981, 1002, 1008, 1021, 1042, 1049, 1060, 1081, 1088, 1099, 1120, 1126, 1137, 1158, 1164, 1175], "mirror": [854, 893, 931, 969, 1007, 1048, 1087, 1125, 1163], "wise": [854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "slice": [854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "algebra": [854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "routin": [854, 855, 864, 866, 893, 894, 903, 905, 931, 932, 941, 943, 969, 970, 979, 981, 1007, 1008, 1019, 1021, 1048, 1049, 1058, 1060, 1087, 1088, 1097, 1099, 1125, 1126, 1135, 1137, 1163, 1164, 1173, 1175], "sparse_arrai": [855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164], "cousin": [855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164], "1d": [857, 860, 861, 871, 896, 899, 900, 910, 934, 937, 938, 948, 972, 975, 976, 986, 1010, 1013, 1014, 1026, 1051, 1054, 1055, 1065, 1090, 1093, 1094, 1104, 1128, 1131, 1132, 1142, 1166, 1169, 1170, 1180, 1618], "arra": [857, 896, 934, 972, 1010, 1051, 1090, 1128, 1166], "minu": [857, 860, 861, 871, 896, 899, 900, 910, 934, 937, 938, 948, 972, 975, 976, 986, 1010, 1013, 1014, 1026, 1051, 1054, 1055, 1065, 1090, 1093, 1094, 1104, 1128, 1131, 1132, 1142, 1166, 1169, 1170, 1180, 1623, 1627, 1628], "isnan": [858, 897, 935, 973, 1011, 1052, 1091, 1129, 1167], "include_input": [859, 860, 898, 899, 936, 937, 974, 975, 1012, 1013, 1053, 1054, 1092, 1093, 1130, 1131, 1168, 1169, 1628], "radial": [859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "toplog": [859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "whom": [859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "nearbi": [859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "compress": [860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1623, 1627, 1628], "unflatten": [860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1623, 1627, 1628], "global": [860, 861, 899, 900, 937, 938, 975, 976, 1013, 1014, 1054, 1055, 1093, 1094, 1131, 1132, 1169, 1170, 1627, 1628], "bond": [861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170, 1614, 1622, 1623, 1626, 1640, 1652, 1658], "futur": [864, 866, 903, 905, 941, 943, 979, 981, 1019, 1021, 1058, 1060, 1097, 1099, 1120, 1135, 1137, 1173, 1175], "sp": [864, 903, 941, 979, 1019, 1058, 1097, 1135, 1173], "uncertain": [871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180], "accur": 887, "reduce_coordin": 887, "permit": 887, "disconnect": [887, 1658, 1794], "kept": 926, "cubictempl": [927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963], "height": [964, 1631, 1639, 1654], "gabriel": 964, "outsid": [964, 1630, 1639], "excess": [1002, 1631], "outer": [1002, 1649, 1654, 1655], "li": 1002, "vertic": 1002, "simultan": 1002, "tri": [1002, 1656], "delanuai": 1002, "subnetwork": 1002, "vor": [1002, 1659], "convex": [1015, 1636], "hull": [1015, 1636], "metod": 1015, "facet": 1016, "ridg": 1016, "face_sit": 1081, "head": [1120, 1798, 1799], "num_neighbor": 1120, "construct": 1120, "preset": [1197, 1327, 1568], "lennard": 1225, "jone": 1225, "binaryga": [1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258], "healthdict": [1229, 1263, 1297, 1359, 1476, 1538, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1793], "uniti": [1229, 1263, 1297, 1359, 1476, 1538], "healthi": [1229, 1263, 1297, 1359, 1476, 1538, 1687, 1793], "weigth": [1237, 1271, 1305, 1367, 1484, 1546], "getter": [1258, 1292, 1326, 1505, 1567], "multicompon": 1355, "constitut": 1355, "genericnetwork": 1416, "tabul": 1416, "contant": 1416, "gas_mix": 1472, "liq_mix": 1534, "standardliquidmixtur": [1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567], "basesolv": 1598, "directsolv": 1600, "tol": [1601, 1603, 1607, 1645], "iterativesolv": 1602, "petsc": [1603, 1604], "parallel": 1603, "partit": 1603, "mpirun": 1603, "num_cor": 1603, "petsclinearsolv": 1604, "solver_typ": 1604, "cg": [1604, 1607], "precondion": 1604, "jacobi": 1604, "vec": 1604, "destroi": 1604, "csr_matrix": 1604, "conjug": 1604, "precondition": 1604, "precondit": 1604, "factorization_typ": 1604, "lu": 1604, "pypardiso": 1605, "pardisospsolv": 1606, "scipycg": 1608, "scipyspsolv": 1610, "move_to": 1612, "apply_label": 1612, "clone_por": 1612, "translat": [1612, 1653], "cl": 1613, "reservoir": 1613, "occupied_bond": [1614, 1658], "acccord": [1614, 1652], "parent": 1615, "sibl": 1615, "pores1": 1616, "pores2": 1616, "consecut": [1616, 1647], "member": [1616, 1762, 1769], "batch": 1616, "force_triu": 1617, "drop_diag": 1617, "drop_dup": 1617, "drop_neg": 1617, "dim": 1618, "headless": [1619, 1794], "dropped_edg": 1619, "render": 1619, "invalid": [1619, 1663, 1685], "p_label": 1622, "t_label": 1622, "inds_1": 1625, "inds_2": 1625, "somtim": [1627, 1628], "gind": 1628, "pore_pair": 1629, "shortest": 1629, "node_path": 1629, "edge_path": 1629, "dijkstra": 1629, "triangul": [1630, 1656], "top_surfac": 1630, "sufac": 1630, "fail": [1630, 1740], "domain_s": [1631, 1649], "rectilinear": 1631, "smooth": 1631, "cart2sph": 1631, "cart2cyl": 1631, "enclos": [1636, 1665], "xyz": 1636, "pores_bc": 1637, "coplanar": 1638, "upward": 1639, "threshold": 1639, "toler": [1645, 1801], "find_surface_por": 1645, "donor": [1646, 1653], "stitch": 1646, "preferr": 1647, "continu": 1647, "find_nearby_por": 1647, "relect": 1649, "relfect": 1649, "across": 1649, "transform": [1650, 1651], "copi": [1650, 1651, 1776, 1778], "shear_coord": 1650, "shear": 1651, "ai": 1651, "az": 1651, "bx": 1651, "bz": 1651, "cx": 1651, "cy": 1651, "rotate_coord": 1651, "aj": 1651, "occupied_sit": [1652, 1658], "p_network": 1653, "p_donor": 1653, "len_max": 1653, "label_suffix": 1653, "label_stitch": 1653, "recipi": 1653, "defaul": 1653, "recipienet": 1653, "disc": 1654, "annulu": 1654, "demarc": [1654, 1655], "unweight": [1656, 1659], "b_label": 1658, "s_label": 1658, "bond_percol": 1658, "site_percol": 1658, "docor": [1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686], "shall": [1662, 1667, 1669, 1672, 1674, 1678, 1680, 1682], "dedent": [1662, 1680, 1682, 1685], "with_ind": 1662, "indent": [1662, 1685], "stacklevel": [1663, 1685], "safe_modul": [1663, 1685], "encount": [1663, 1685], "deprec": [1664, 1666, 1668, 1670, 1673, 1675, 1677, 1679, 1681, 1683, 1684, 1686], "base_kei": [1665, 1667, 1669, 1680, 1682], "no_arg": 1665, "no_kwarg": 1665, "no_args_kwarg": 1665, "similarili": 1665, "classmethod": 1666, "docrep": [1666, 1668, 1670, 1680, 1681, 1682, 1683], "delete_kwarg": [1666, 1676], "no_": 1667, "original_kei": [1667, 1680], "no_param1": 1667, "param2": [1667, 1680], "keep_param": [1667, 1676, 1681, 1682], "delete_typ": [1667, 1670, 1676, 1682], "delete_param": [1668, 1669, 1676, 1680], "out_kei": [1669, 1682], "keep_typ": [1669, 1676, 1680, 1683], "get_sect": [1671, 1677, 1680, 1682], "descriptor": 1671, "summary_ext": 1672, "get_extended_summari": [1673, 1674], "get_summari": [1674, 1679], "full_desc": 1674, "get_full_descript": 1675, "exctract": 1676, "guidelin": 1676, "param_like_sect": 1676, "text_sect": 1676, "split": 1676, "newlin": [1676, 1678], "napoleon": 1676, "blob": 1676, "master": 1676, "howto_docu": 1676, "rst": 1676, "save_docstr": 1676, "basicli": 1678, "param1": 1680, "reus": [1680, 1682], "docstringprocessor": [1680, 1682], "do_someth": [1680, 1682], "That": [1680, 1682], "doc_kei": [1680, 1682], "do_less": [1680, 1682], "my": [1680, 1682], "__doc__": [1680, 1682], "no_b": 1680, "int_onli": 1682, "no_float": 1682, "get_docstr": 1684, "unhealthi": 1687, "delimit": 1699, "to_dict": 1699, "unravel": 1699, "nesteddict": [1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712], "dct": 1709, "nicer": 1713, "item1": [1713, 1725], "item2": [1713, 1725], "item3": [1713, 1725], "item4": 1713, "printabledict": [1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724], "temp": 1725, "printablelist": [1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "sy": [1731, 1749], "valueerror": [1731, 1734, 1749, 1752], "indexerror": [1733, 1751], "IN": [1735, 1753], "ascend": [1736, 1754], "modifi": [1736, 1754], "stabl": [1736, 1754], "convers": 1737, "moreov": 1737, "uuid": 1739, "original_uuid": 1739, "456": 1740, "simplelist": 1742, "typedlist": [1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754], "typedset": [1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773], "null": 1765, "highest": 1774, "adminstr": 1774, "singleton": 1774, "wherev": 1774, "record": 1774, "gui": 1774, "renam": 1783, "load_workspac": 1783, "saved_fil": [1783, 1788], "networkssaved_fil": [1783, 1788], "pathlib": [1783, 1788], "save_workspac": 1788, "zip": 1789, "archiv": 1789, "load_project": 1789, "deem": 1793, "bidirect": 1794, "offend": 1794, "restor": 1794, "largest": 1794, "struct": [1795, 1807], "wtih": 1795, "input_list": 1796, "hr": [1798, 1799], "__str__": [1798, 1799], "workaround": [1798, 1799], "enhanc": [1798, 1799], "horizont": [1798, 1799], "get_printable_prop": 1798, "get_printable_label": 1799, "runtimewarn": 1800, "decor": 1800, "inevit": 1800, "temporarili": 1800, "myfun": 1800, "33333333": 1800, "input_dict": 1806, "vivifi": 1806}, "objects": {"": [[1808, 0, 0, "-", "openpnm"]], "openpnm": [[36, 0, 0, "-", "algorithms"], [458, 0, 0, "-", "core"], [546, 0, 0, "-", "integrators"], [550, 0, 0, "-", "io"], [574, 0, 0, "-", "models"], [847, 0, 0, "-", "network"], [1196, 0, 0, "-", "phase"], [1596, 0, 0, "-", "solvers"], [1611, 0, 0, "-", "topotools"], [1660, 0, 0, "-", "utils"]], "openpnm.algorithms": [[37, 1, 1, "", "AdvectionDiffusion"], [71, 1, 1, "", "Algorithm"], [97, 1, 1, "", "Drainage"], [129, 1, 1, "", "FickianDiffusion"], [162, 1, 1, "", "FourierConduction"], [195, 1, 1, "", "InvasionPercolation"], [227, 1, 1, "", "OhmicConduction"], [260, 1, 1, "", "ReactiveTransport"], [293, 1, 1, "", "StokesFlow"], [326, 1, 1, "", "TransientAdvectionDiffusion"], [360, 1, 1, "", "TransientFickianDiffusion"], [393, 1, 1, "", "TransientReactiveTransport"], [426, 1, 1, "", "Transport"]], "openpnm.algorithms.AdvectionDiffusion": [[38, 2, 1, "", "clear"], [39, 2, 1, "", "clear_BCs"], [40, 2, 1, "", "clear_rate_BCs"], [41, 2, 1, "", "clear_value_BCs"], [42, 2, 1, "", "copy"], [43, 2, 1, "", "filter_by_label"], [44, 2, 1, "", "fromkeys"], [45, 2, 1, "", "get"], [46, 2, 1, "", "get_conduit_data"], [47, 2, 1, "", "interpolate_data"], [48, 2, 1, "", "items"], [49, 2, 1, "", "keys"], [50, 2, 1, "", "labels"], [51, 2, 1, "", "num_pores"], [52, 2, 1, "", "num_throats"], [53, 2, 1, "", "pop"], [54, 2, 1, "", "popitem"], [55, 2, 1, "", "pores"], [56, 2, 1, "", "props"], [57, 2, 1, "", "rate"], [58, 2, 1, "", "run"], [59, 2, 1, "", "set_BC"], [60, 2, 1, "", "set_label"], [61, 2, 1, "", "set_outflow_BC"], [62, 2, 1, "", "set_rate_BC"], [63, 2, 1, "", "set_source"], [64, 2, 1, "", "set_value_BC"], [65, 2, 1, "", "setdefault"], [66, 2, 1, "", "throats"], [67, 2, 1, "", "to_indices"], [68, 2, 1, "", "to_mask"], [69, 2, 1, "", "update"], [70, 2, 1, "", "values"]], "openpnm.algorithms.Algorithm": [[72, 2, 1, "", "clear"], [73, 2, 1, "", "clear_BCs"], [74, 2, 1, "", "copy"], [75, 2, 1, "", "filter_by_label"], [76, 2, 1, "", "fromkeys"], [77, 2, 1, "", "get"], [78, 2, 1, "", "get_conduit_data"], [79, 2, 1, "", "interpolate_data"], [80, 2, 1, "", "items"], [81, 2, 1, "", "keys"], [82, 2, 1, "", "labels"], [83, 2, 1, "", "num_pores"], [84, 2, 1, "", "num_throats"], [85, 2, 1, "", "pop"], [86, 2, 1, "", "popitem"], [87, 2, 1, "", "pores"], [88, 2, 1, "", "props"], [89, 2, 1, "", "set_BC"], [90, 2, 1, "", "set_label"], [91, 2, 1, "", "setdefault"], [92, 2, 1, "", "throats"], [93, 2, 1, "", "to_indices"], [94, 2, 1, "", "to_mask"], [95, 2, 1, "", "update"], [96, 2, 1, "", "values"]], "openpnm.algorithms.Drainage": [[98, 2, 1, "", "apply_trapping"], [99, 2, 1, "", "clear"], [100, 2, 1, "", "clear_BCs"], [101, 2, 1, "", "copy"], [102, 2, 1, "", "filter_by_label"], [103, 2, 1, "", "fromkeys"], [104, 2, 1, "", "get"], [105, 2, 1, "", "get_conduit_data"], [106, 2, 1, "", "interpolate_data"], [107, 2, 1, "", "items"], [108, 2, 1, "", "keys"], [109, 2, 1, "", "labels"], [110, 2, 1, "", "num_pores"], [111, 2, 1, "", "num_throats"], [112, 2, 1, "", "pc_curve"], [113, 2, 1, "", "pop"], [114, 2, 1, "", "popitem"], [115, 2, 1, "", "pores"], [116, 2, 1, "", "props"], [117, 2, 1, "", "reset"], [118, 2, 1, "", "run"], [119, 2, 1, "", "set_BC"], [120, 2, 1, "", "set_inlet_BC"], [121, 2, 1, "", "set_label"], [122, 2, 1, "", "set_outlet_BC"], [123, 2, 1, "", "setdefault"], [124, 2, 1, "", "throats"], [125, 2, 1, "", "to_indices"], [126, 2, 1, "", "to_mask"], [127, 2, 1, "", "update"], [128, 2, 1, "", "values"]], "openpnm.algorithms.FickianDiffusion": [[130, 2, 1, "", "clear"], [131, 2, 1, "", "clear_BCs"], [132, 2, 1, "", "clear_rate_BCs"], [133, 2, 1, "", "clear_value_BCs"], [134, 2, 1, "", "copy"], [135, 2, 1, "", "filter_by_label"], [136, 2, 1, "", "fromkeys"], [137, 2, 1, "", "get"], [138, 2, 1, "", "get_conduit_data"], [139, 2, 1, "", "interpolate_data"], [140, 2, 1, "", "items"], [141, 2, 1, "", "keys"], [142, 2, 1, "", "labels"], [143, 2, 1, "", "num_pores"], [144, 2, 1, "", "num_throats"], [145, 2, 1, "", "pop"], [146, 2, 1, "", "popitem"], [147, 2, 1, "", "pores"], [148, 2, 1, "", "props"], [149, 2, 1, "", "rate"], [150, 2, 1, "", "run"], [151, 2, 1, "", "set_BC"], [152, 2, 1, "", "set_label"], [153, 2, 1, "", "set_rate_BC"], [154, 2, 1, "", "set_source"], [155, 2, 1, "", "set_value_BC"], [156, 2, 1, "", "setdefault"], [157, 2, 1, "", "throats"], [158, 2, 1, "", "to_indices"], [159, 2, 1, "", "to_mask"], [160, 2, 1, "", "update"], [161, 2, 1, "", "values"]], "openpnm.algorithms.FourierConduction": [[163, 2, 1, "", "clear"], [164, 2, 1, "", "clear_BCs"], [165, 2, 1, "", "clear_rate_BCs"], [166, 2, 1, "", "clear_value_BCs"], [167, 2, 1, "", "copy"], [168, 2, 1, "", "filter_by_label"], [169, 2, 1, "", "fromkeys"], [170, 2, 1, "", "get"], [171, 2, 1, "", "get_conduit_data"], [172, 2, 1, "", "interpolate_data"], [173, 2, 1, "", "items"], [174, 2, 1, "", "keys"], [175, 2, 1, "", "labels"], [176, 2, 1, "", "num_pores"], [177, 2, 1, "", "num_throats"], [178, 2, 1, "", "pop"], [179, 2, 1, "", "popitem"], [180, 2, 1, "", "pores"], [181, 2, 1, "", "props"], [182, 2, 1, "", "rate"], [183, 2, 1, "", "run"], [184, 2, 1, "", "set_BC"], [185, 2, 1, "", "set_label"], [186, 2, 1, "", "set_rate_BC"], [187, 2, 1, "", "set_source"], [188, 2, 1, "", "set_value_BC"], [189, 2, 1, "", "setdefault"], [190, 2, 1, "", "throats"], [191, 2, 1, "", "to_indices"], [192, 2, 1, "", "to_mask"], [193, 2, 1, "", "update"], [194, 2, 1, "", "values"]], "openpnm.algorithms.InvasionPercolation": [[196, 2, 1, "", "apply_trapping"], [197, 2, 1, "", "clear"], [198, 2, 1, "", "clear_BCs"], [199, 2, 1, "", "copy"], [200, 2, 1, "", "filter_by_label"], [201, 2, 1, "", "fromkeys"], [202, 2, 1, "", "get"], [203, 2, 1, "", "get_conduit_data"], [204, 2, 1, "", "interpolate_data"], [205, 2, 1, "", "items"], [206, 2, 1, "", "keys"], [207, 2, 1, "", "labels"], [208, 2, 1, "", "num_pores"], [209, 2, 1, "", "num_throats"], [210, 2, 1, "", "pc_curve"], [211, 2, 1, "", "pop"], [212, 2, 1, "", "popitem"], [213, 2, 1, "", "pores"], [214, 2, 1, "", "props"], [215, 2, 1, "", "reset"], [216, 2, 1, "", "run"], [217, 2, 1, "", "set_BC"], [218, 2, 1, "", "set_inlet_BC"], [219, 2, 1, "", "set_label"], [220, 2, 1, "", "set_outlet_BC"], [221, 2, 1, "", "setdefault"], [222, 2, 1, "", "throats"], [223, 2, 1, "", "to_indices"], [224, 2, 1, "", "to_mask"], [225, 2, 1, "", "update"], [226, 2, 1, "", "values"]], "openpnm.algorithms.OhmicConduction": [[228, 2, 1, "", "clear"], [229, 2, 1, "", "clear_BCs"], [230, 2, 1, "", "clear_rate_BCs"], [231, 2, 1, "", "clear_value_BCs"], [232, 2, 1, "", "copy"], [233, 2, 1, "", "filter_by_label"], [234, 2, 1, "", "fromkeys"], [235, 2, 1, "", "get"], [236, 2, 1, "", "get_conduit_data"], [237, 2, 1, "", "interpolate_data"], [238, 2, 1, "", "items"], [239, 2, 1, "", "keys"], [240, 2, 1, "", "labels"], [241, 2, 1, "", "num_pores"], [242, 2, 1, "", "num_throats"], [243, 2, 1, "", "pop"], [244, 2, 1, "", "popitem"], [245, 2, 1, "", "pores"], [246, 2, 1, "", "props"], [247, 2, 1, "", "rate"], [248, 2, 1, "", "run"], [249, 2, 1, "", "set_BC"], [250, 2, 1, "", "set_label"], [251, 2, 1, "", "set_rate_BC"], [252, 2, 1, "", "set_source"], [253, 2, 1, "", "set_value_BC"], [254, 2, 1, "", "setdefault"], [255, 2, 1, "", "throats"], [256, 2, 1, "", "to_indices"], [257, 2, 1, "", "to_mask"], [258, 2, 1, "", "update"], [259, 2, 1, "", "values"]], "openpnm.algorithms.ReactiveTransport": [[261, 2, 1, "", "clear"], [262, 2, 1, "", "clear_BCs"], [263, 2, 1, "", "clear_rate_BCs"], [264, 2, 1, "", "clear_value_BCs"], [265, 2, 1, "", "copy"], [266, 2, 1, "", "filter_by_label"], [267, 2, 1, "", "fromkeys"], [268, 2, 1, "", "get"], [269, 2, 1, "", "get_conduit_data"], [270, 2, 1, "", "interpolate_data"], [271, 2, 1, "", "items"], [272, 2, 1, "", "keys"], [273, 2, 1, "", "labels"], [274, 2, 1, "", "num_pores"], [275, 2, 1, "", "num_throats"], [276, 2, 1, "", "pop"], [277, 2, 1, "", "popitem"], [278, 2, 1, "", "pores"], [279, 2, 1, "", "props"], [280, 2, 1, "", "rate"], [281, 2, 1, "", "run"], [282, 2, 1, "", "set_BC"], [283, 2, 1, "", "set_label"], [284, 2, 1, "", "set_rate_BC"], [285, 2, 1, "", "set_source"], [286, 2, 1, "", "set_value_BC"], [287, 2, 1, "", "setdefault"], [288, 2, 1, "", "throats"], [289, 2, 1, "", "to_indices"], [290, 2, 1, "", "to_mask"], [291, 2, 1, "", "update"], [292, 2, 1, "", "values"]], "openpnm.algorithms.StokesFlow": [[294, 2, 1, "", "clear"], [295, 2, 1, "", "clear_BCs"], [296, 2, 1, "", "clear_rate_BCs"], [297, 2, 1, "", "clear_value_BCs"], [298, 2, 1, "", "copy"], [299, 2, 1, "", "filter_by_label"], [300, 2, 1, "", "fromkeys"], [301, 2, 1, "", "get"], [302, 2, 1, "", "get_conduit_data"], [303, 2, 1, "", "interpolate_data"], [304, 2, 1, "", "items"], [305, 2, 1, "", "keys"], [306, 2, 1, "", "labels"], [307, 2, 1, "", "num_pores"], [308, 2, 1, "", "num_throats"], [309, 2, 1, "", "pop"], [310, 2, 1, "", "popitem"], [311, 2, 1, "", "pores"], [312, 2, 1, "", "props"], [313, 2, 1, "", "rate"], [314, 2, 1, "", "run"], [315, 2, 1, "", "set_BC"], [316, 2, 1, "", "set_label"], [317, 2, 1, "", "set_rate_BC"], [318, 2, 1, "", "set_source"], [319, 2, 1, "", "set_value_BC"], [320, 2, 1, "", "setdefault"], [321, 2, 1, "", "throats"], [322, 2, 1, "", "to_indices"], [323, 2, 1, "", "to_mask"], [324, 2, 1, "", "update"], [325, 2, 1, "", "values"]], "openpnm.algorithms.TransientAdvectionDiffusion": [[327, 2, 1, "", "clear"], [328, 2, 1, "", "clear_BCs"], [329, 2, 1, "", "clear_rate_BCs"], [330, 2, 1, "", "clear_value_BCs"], [331, 2, 1, "", "copy"], [332, 2, 1, "", "filter_by_label"], [333, 2, 1, "", "fromkeys"], [334, 2, 1, "", "get"], [335, 2, 1, "", "get_conduit_data"], [336, 2, 1, "", "interpolate_data"], [337, 2, 1, "", "items"], [338, 2, 1, "", "keys"], [339, 2, 1, "", "labels"], [340, 2, 1, "", "num_pores"], [341, 2, 1, "", "num_throats"], [342, 2, 1, "", "pop"], [343, 2, 1, "", "popitem"], [344, 2, 1, "", "pores"], [345, 2, 1, "", "props"], [346, 2, 1, "", "rate"], [347, 2, 1, "", "run"], [348, 2, 1, "", "set_BC"], [349, 2, 1, "", "set_label"], [350, 2, 1, "", "set_outflow_BC"], [351, 2, 1, "", "set_rate_BC"], [352, 2, 1, "", "set_source"], [353, 2, 1, "", "set_value_BC"], [354, 2, 1, "", "setdefault"], [355, 2, 1, "", "throats"], [356, 2, 1, "", "to_indices"], [357, 2, 1, "", "to_mask"], [358, 2, 1, "", "update"], [359, 2, 1, "", "values"]], "openpnm.algorithms.TransientFickianDiffusion": [[361, 2, 1, "", "clear"], [362, 2, 1, "", "clear_BCs"], [363, 2, 1, "", "clear_rate_BCs"], [364, 2, 1, "", "clear_value_BCs"], [365, 2, 1, "", "copy"], [366, 2, 1, "", "filter_by_label"], [367, 2, 1, "", "fromkeys"], [368, 2, 1, "", "get"], [369, 2, 1, "", "get_conduit_data"], [370, 2, 1, "", "interpolate_data"], [371, 2, 1, "", "items"], [372, 2, 1, "", "keys"], [373, 2, 1, "", "labels"], [374, 2, 1, "", "num_pores"], [375, 2, 1, "", "num_throats"], [376, 2, 1, "", "pop"], [377, 2, 1, "", "popitem"], [378, 2, 1, "", "pores"], [379, 2, 1, "", "props"], [380, 2, 1, "", "rate"], [381, 2, 1, "", "run"], [382, 2, 1, "", "set_BC"], [383, 2, 1, "", "set_label"], [384, 2, 1, "", "set_rate_BC"], [385, 2, 1, "", "set_source"], [386, 2, 1, "", "set_value_BC"], [387, 2, 1, "", "setdefault"], [388, 2, 1, "", "throats"], [389, 2, 1, "", "to_indices"], [390, 2, 1, "", "to_mask"], [391, 2, 1, "", "update"], [392, 2, 1, "", "values"]], "openpnm.algorithms.TransientReactiveTransport": [[394, 2, 1, "", "clear"], [395, 2, 1, "", "clear_BCs"], [396, 2, 1, "", "clear_rate_BCs"], [397, 2, 1, "", "clear_value_BCs"], [398, 2, 1, "", "copy"], [399, 2, 1, "", "filter_by_label"], [400, 2, 1, "", "fromkeys"], [401, 2, 1, "", "get"], [402, 2, 1, "", "get_conduit_data"], [403, 2, 1, "", "interpolate_data"], [404, 2, 1, "", "items"], [405, 2, 1, "", "keys"], [406, 2, 1, "", "labels"], [407, 2, 1, "", "num_pores"], [408, 2, 1, "", "num_throats"], [409, 2, 1, "", "pop"], [410, 2, 1, "", "popitem"], [411, 2, 1, "", "pores"], [412, 2, 1, "", "props"], [413, 2, 1, "", "rate"], [414, 2, 1, "", "run"], [415, 2, 1, "", "set_BC"], [416, 2, 1, "", "set_label"], [417, 2, 1, "", "set_rate_BC"], [418, 2, 1, "", "set_source"], [419, 2, 1, "", "set_value_BC"], [420, 2, 1, "", "setdefault"], [421, 2, 1, "", "throats"], [422, 2, 1, "", "to_indices"], [423, 2, 1, "", "to_mask"], [424, 2, 1, "", "update"], [425, 2, 1, "", "values"]], "openpnm.algorithms.Transport": [[427, 2, 1, "", "clear"], [428, 2, 1, "", "clear_BCs"], [429, 2, 1, "", "clear_rate_BCs"], [430, 2, 1, "", "clear_value_BCs"], [431, 2, 1, "", "copy"], [432, 2, 1, "", "filter_by_label"], [433, 2, 1, "", "fromkeys"], [434, 2, 1, "", "get"], [435, 2, 1, "", "get_conduit_data"], [436, 2, 1, "", "interpolate_data"], [437, 2, 1, "", "items"], [438, 2, 1, "", "keys"], [439, 2, 1, "", "labels"], [440, 2, 1, "", "num_pores"], [441, 2, 1, "", "num_throats"], [442, 2, 1, "", "pop"], [443, 2, 1, "", "popitem"], [444, 2, 1, "", "pores"], [445, 2, 1, "", "props"], [446, 2, 1, "", "rate"], [447, 2, 1, "", "run"], [448, 2, 1, "", "set_BC"], [449, 2, 1, "", "set_label"], [450, 2, 1, "", "set_rate_BC"], [451, 2, 1, "", "set_value_BC"], [452, 2, 1, "", "setdefault"], [453, 2, 1, "", "throats"], [454, 2, 1, "", "to_indices"], [455, 2, 1, "", "to_mask"], [456, 2, 1, "", "update"], [457, 2, 1, "", "values"]], "openpnm.core": [[459, 1, 1, "", "Base2"], [476, 1, 1, "", "Domain"], [504, 1, 1, "", "LabelMixin"], [512, 1, 1, "", "ModelWrapper"], [525, 1, 1, "", "ModelsDict"], [540, 1, 1, "", "ModelsMixin2"], [545, 1, 1, "", "ParserMixin"]], "openpnm.core.Base2": [[460, 2, 1, "", "clear"], [461, 2, 1, "", "copy"], [462, 2, 1, "", "fromkeys"], [463, 2, 1, "", "get"], [464, 2, 1, "", "get_conduit_data"], [465, 2, 1, "", "interpolate_data"], [466, 2, 1, "", "items"], [467, 2, 1, "", "keys"], [468, 2, 1, "", "pop"], [469, 2, 1, "", "popitem"], [470, 2, 1, "", "props"], [471, 2, 1, "", "setdefault"], [472, 2, 1, "", "to_indices"], [473, 2, 1, "", "to_mask"], [474, 2, 1, "", "update"], [475, 2, 1, "", "values"]], "openpnm.core.Domain": [[477, 2, 1, "", "add_model"], [478, 2, 1, "", "add_model_collection"], [479, 2, 1, "", "clear"], [480, 2, 1, "", "copy"], [481, 2, 1, "", "filter_by_label"], [482, 2, 1, "", "fromkeys"], [483, 2, 1, "", "get"], [484, 2, 1, "", "get_conduit_data"], [485, 2, 1, "", "interpolate_data"], [486, 2, 1, "", "items"], [487, 2, 1, "", "keys"], [488, 2, 1, "", "labels"], [489, 2, 1, "", "num_pores"], [490, 2, 1, "", "num_throats"], [491, 2, 1, "", "pop"], [492, 2, 1, "", "popitem"], [493, 2, 1, "", "pores"], [494, 2, 1, "", "props"], [495, 2, 1, "", "regenerate_models"], [496, 2, 1, "", "run_model"], [497, 2, 1, "", "set_label"], [498, 2, 1, "", "setdefault"], [499, 2, 1, "", "throats"], [500, 2, 1, "", "to_indices"], [501, 2, 1, "", "to_mask"], [502, 2, 1, "", "update"], [503, 2, 1, "", "values"]], "openpnm.core.LabelMixin": [[505, 2, 1, "", "filter_by_label"], [506, 2, 1, "", "labels"], [507, 2, 1, "", "num_pores"], [508, 2, 1, "", "num_throats"], [509, 2, 1, "", "pores"], [510, 2, 1, "", "set_label"], [511, 2, 1, "", "throats"]], "openpnm.core.ModelWrapper": [[513, 2, 1, "", "__call__"], [514, 2, 1, "", "clear"], [515, 2, 1, "", "copy"], [516, 2, 1, "", "fromkeys"], [517, 2, 1, "", "get"], [518, 2, 1, "", "items"], [519, 2, 1, "", "keys"], [520, 2, 1, "", "pop"], [521, 2, 1, "", "popitem"], [522, 2, 1, "", "setdefault"], [523, 2, 1, "", "update"], [524, 2, 1, "", "values"]], "openpnm.core.ModelsDict": [[526, 2, 1, "", "clear"], [527, 2, 1, "", "copy"], [528, 2, 1, "", "dependency_graph"], [529, 2, 1, "", "dependency_list"], [530, 2, 1, "", "dependency_map"], [531, 2, 1, "", "fromkeys"], [532, 2, 1, "", "get"], [533, 2, 1, "", "items"], [534, 2, 1, "", "keys"], [535, 2, 1, "", "pop"], [536, 2, 1, "", "popitem"], [537, 2, 1, "", "setdefault"], [538, 2, 1, "", "update"], [539, 2, 1, "", "values"]], "openpnm.core.ModelsMixin2": [[541, 2, 1, "", "add_model"], [542, 2, 1, "", "add_model_collection"], [543, 2, 1, "", "regenerate_models"], [544, 2, 1, "", "run_model"]], "openpnm.integrators": [[547, 1, 1, "", "Integrator"], [548, 1, 1, "", "ScipyRK45"]], "openpnm.integrators.ScipyRK45": [[549, 2, 1, "", "solve"]], "openpnm.io": [[551, 3, 1, "", "network_from_csv"], [552, 3, 1, "", "network_from_jsongraph"], [553, 3, 1, "", "network_from_marock"], [554, 3, 1, "", "network_from_networkx"], [555, 3, 1, "", "network_from_pergeos"], [556, 3, 1, "", "network_from_porespy"], [557, 3, 1, "", "network_from_statoil"], [558, 3, 1, "", "network_to_comsol"], [559, 3, 1, "", "network_to_csv"], [560, 3, 1, "", "network_to_jsongraph"], [561, 3, 1, "", "network_to_networkx"], [562, 3, 1, "", "network_to_pandas"], [563, 3, 1, "", "network_to_pergeos"], [564, 3, 1, "", "network_to_salome"], [565, 3, 1, "", "network_to_stl"], [566, 3, 1, "", "print_hdf5"], [567, 3, 1, "", "project_to_csv"], [568, 3, 1, "", "project_to_dict"], [569, 3, 1, "", "project_to_hdf5"], [570, 3, 1, "", "project_to_pandas"], [571, 3, 1, "", "project_to_paraview"], [572, 3, 1, "", "project_to_vtk"], [573, 3, 1, "", "project_to_xdmf"]], "openpnm.models": [[575, 0, 0, "-", "collections"], [594, 0, 0, "-", "geometry"], [720, 0, 0, "-", "misc"], [741, 0, 0, "-", "network"], [757, 0, 0, "-", "phase"], [808, 0, 0, "-", "physics"]], "openpnm.models.collections": [[576, 0, 0, "-", "geometry"], [584, 0, 0, "-", "network"], [585, 0, 0, "-", "phase"], [591, 0, 0, "-", "physics"]], "openpnm.models.collections.geometry": [[577, 4, 1, "", "circles_and_rectangles"], [578, 4, 1, "", "cones_and_cylinders"], [579, 4, 1, "", "cubes_and_cuboids"], [580, 4, 1, "", "pyramids_and_cuboids"], [581, 4, 1, "", "spheres_and_cylinders"], [582, 4, 1, "", "squares_and_rectangles"], [583, 4, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.collections.phase": [[586, 4, 1, "", "air"], [587, 0, 0, "-", "gas"], [588, 0, 0, "-", "liquid"], [589, 4, 1, "", "mercury"], [590, 4, 1, "", "water"]], "openpnm.models.collections.physics": [[592, 4, 1, "", "basic"], [593, 4, 1, "", "standard"]], "openpnm.models.geometry": [[595, 0, 0, "-", "conduit_lengths"], [609, 0, 0, "-", "diffusive_size_factors"], [624, 0, 0, "-", "hydraulic_size_factors"], [639, 0, 0, "-", "pore_cross_sectional_area"], [645, 0, 0, "-", "pore_seed"], [648, 0, 0, "-", "pore_size"], [656, 0, 0, "-", "pore_surface_area"], [661, 0, 0, "-", "pore_volume"], [667, 0, 0, "-", "throat_capillary_shape_factor"], [670, 0, 0, "-", "throat_centroid"], [672, 0, 0, "-", "throat_cross_sectional_area"], [676, 0, 0, "-", "throat_endpoints"], [678, 0, 0, "-", "throat_length"], [692, 0, 0, "-", "throat_perimeter"], [696, 0, 0, "-", "throat_seed"], [699, 0, 0, "-", "throat_size"], [706, 0, 0, "-", "throat_surface_area"], [711, 0, 0, "-", "throat_vector"], [713, 0, 0, "-", "throat_volume"]], "openpnm.models.geometry.conduit_lengths": [[596, 3, 1, "", "circles_and_rectangles"], [597, 3, 1, "", "cones_and_cylinders"], [598, 3, 1, "", "cubes_and_cuboids"], [599, 3, 1, "", "hybrid_cones_and_cylinders"], [600, 3, 1, "", "hybrid_pyramids_and_cuboids"], [601, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [602, 3, 1, "", "intersecting_cones"], [603, 3, 1, "", "intersecting_pyramids"], [604, 3, 1, "", "intersecting_trapezoids"], [605, 3, 1, "", "pyramids_and_cuboids"], [606, 3, 1, "", "spheres_and_cylinders"], [607, 3, 1, "", "squares_and_rectangles"], [608, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[610, 3, 1, "", "circles_and_rectangles"], [611, 3, 1, "", "cones_and_cylinders"], [612, 3, 1, "", "cubes_and_cuboids"], [613, 3, 1, "", "hybrid_cones_and_cylinders"], [614, 3, 1, "", "hybrid_pyramids_and_cuboids"], [615, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [616, 3, 1, "", "intersecting_cones"], [617, 3, 1, "", "intersecting_pyramids"], [618, 3, 1, "", "intersecting_trapezoids"], [619, 3, 1, "", "ncylinders_in_series"], [620, 3, 1, "", "pyramids_and_cuboids"], [621, 3, 1, "", "spheres_and_cylinders"], [622, 3, 1, "", "squares_and_rectangles"], [623, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[625, 3, 1, "", "circles_and_rectangles"], [626, 3, 1, "", "cones_and_cylinders"], [627, 3, 1, "", "cubes_and_cuboids"], [628, 3, 1, "", "hybrid_cones_and_cylinders"], [629, 3, 1, "", "hybrid_pyramids_and_cuboids"], [630, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [631, 3, 1, "", "intersecting_cones"], [632, 3, 1, "", "intersecting_pyramids"], [633, 3, 1, "", "intersecting_trapezoids"], [634, 3, 1, "", "ncylinders_in_series"], [635, 3, 1, "", "pyramids_and_cuboids"], [636, 3, 1, "", "spheres_and_cylinders"], [637, 3, 1, "", "squares_and_rectangles"], [638, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[640, 3, 1, "", "circle"], [641, 3, 1, "", "cone"], [642, 3, 1, "", "cube"], [643, 3, 1, "", "sphere"], [644, 3, 1, "", "square"]], "openpnm.models.geometry.pore_seed": [[646, 3, 1, "", "random"], [647, 3, 1, "", "spatially_correlated"]], "openpnm.models.geometry.pore_size": [[649, 3, 1, "", "equivalent_diameter"], [650, 3, 1, "", "from_neighbor_throats"], [651, 3, 1, "", "generic_distribution"], [652, 3, 1, "", "largest_sphere"], [653, 3, 1, "", "normal"], [654, 3, 1, "", "random"], [655, 3, 1, "", "weibull"]], "openpnm.models.geometry.pore_surface_area": [[657, 3, 1, "", "circle"], [658, 3, 1, "", "cube"], [659, 3, 1, "", "sphere"], [660, 3, 1, "", "square"]], "openpnm.models.geometry.pore_volume": [[662, 3, 1, "", "circle"], [663, 3, 1, "", "cube"], [664, 3, 1, "", "effective"], [665, 3, 1, "", "sphere"], [666, 3, 1, "", "square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[668, 3, 1, "", "jenkins_rao"], [669, 3, 1, "", "mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[671, 3, 1, "", "pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[673, 3, 1, "", "cuboid"], [674, 3, 1, "", "cylinder"], [675, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_endpoints": [[677, 3, 1, "", "spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[679, 3, 1, "", "circles_and_rectangles"], [680, 3, 1, "", "cones_and_cylinders"], [681, 3, 1, "", "cubes_and_cuboids"], [682, 3, 1, "", "hybrid_cones_and_cylinders"], [683, 3, 1, "", "hybrid_pyramids_and_cuboids"], [684, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [685, 3, 1, "", "intersecting_cones"], [686, 3, 1, "", "intersecting_pyramids"], [687, 3, 1, "", "intersecting_trapezoids"], [688, 3, 1, "", "pyramids_and_cuboids"], [689, 3, 1, "", "spheres_and_cylinders"], [690, 3, 1, "", "squares_and_rectangles"], [691, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[693, 3, 1, "", "cuboid"], [694, 3, 1, "", "cylinder"], [695, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_seed": [[697, 3, 1, "", "from_neighbor_pores"], [698, 3, 1, "", "random"]], "openpnm.models.geometry.throat_size": [[700, 3, 1, "", "equivalent_diameter"], [701, 3, 1, "", "from_neighbor_pores"], [702, 3, 1, "", "generic_distribution"], [703, 3, 1, "", "normal"], [704, 3, 1, "", "random"], [705, 3, 1, "", "weibull"]], "openpnm.models.geometry.throat_surface_area": [[707, 3, 1, "", "cuboid"], [708, 3, 1, "", "cylinder"], [709, 3, 1, "", "extrusion"], [710, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_vector": [[712, 3, 1, "", "pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[714, 3, 1, "", "cuboid"], [715, 3, 1, "", "cylinder"], [716, 3, 1, "", "extrusion"], [717, 3, 1, "", "lens"], [718, 3, 1, "", "pendular_ring"], [719, 3, 1, "", "rectangle"]], "openpnm.models.misc": [[721, 3, 1, "", "blank"], [722, 3, 1, "", "clip"], [723, 3, 1, "", "constant"], [724, 3, 1, "", "difference"], [725, 3, 1, "", "fraction"], [726, 3, 1, "", "from_neighbor_pores"], [727, 3, 1, "", "from_neighbor_throats"], [728, 3, 1, "", "generic_distribution"], [729, 3, 1, "", "generic_function"], [730, 3, 1, "", "invert"], [731, 3, 1, "", "linear"], [732, 3, 1, "", "match_histogram"], [733, 3, 1, "", "normal"], [734, 3, 1, "", "normalize"], [735, 3, 1, "", "polynomial"], [736, 3, 1, "", "product"], [737, 3, 1, "", "random"], [738, 3, 1, "", "scaled"], [739, 3, 1, "", "summation"], [740, 3, 1, "", "weibull"]], "openpnm.models.network": [[742, 3, 1, "", "bidirectional_throats"], [743, 3, 1, "", "cluster_number"], [744, 3, 1, "", "cluster_size"], [745, 3, 1, "", "coordination_number"], [746, 3, 1, "", "count_coincident_pores"], [747, 3, 1, "", "distance_to_furthest_neighbor"], [748, 3, 1, "", "distance_to_nearest_neighbor"], [749, 3, 1, "", "distance_to_nearest_pore"], [750, 3, 1, "", "duplicate_throats"], [751, 3, 1, "", "find_coincident_pores"], [752, 3, 1, "", "headless_throats"], [753, 3, 1, "", "isolated_pores"], [754, 3, 1, "", "looped_throats"], [755, 3, 1, "", "pore_to_pore_distance"], [756, 3, 1, "", "reversed_throats"]], "openpnm.models.phase": [[758, 3, 1, "", "chemicals_wrapper"], [759, 0, 0, "-", "critical_props"], [760, 0, 0, "-", "density"], [766, 0, 0, "-", "diffusivity"], [770, 0, 0, "-", "heat_capacity"], [775, 0, 0, "-", "misc"], [778, 0, 0, "-", "mixtures"], [784, 0, 0, "-", "partition_coefficient"], [786, 0, 0, "-", "surface_tension"], [790, 0, 0, "-", "thermal_conductivity"], [797, 0, 0, "-", "vapor_pressure"], [801, 0, 0, "-", "viscosity"]], "openpnm.models.phase.density": [[761, 3, 1, "", "ideal_gas"], [762, 3, 1, "", "liquid_mixture_COSTALD"], [763, 3, 1, "", "liquid_pure_COSTALD"], [764, 3, 1, "", "mass_to_molar"], [765, 3, 1, "", "water_correlation"]], "openpnm.models.phase.diffusivity": [[767, 3, 1, "", "gas_mixture_ce"], [768, 3, 1, "", "gas_mixture_fesg"], [769, 3, 1, "", "liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[771, 3, 1, "", "gas_mixture_yweighted"], [772, 3, 1, "", "gas_pure_TRC"], [773, 3, 1, "", "liquid_mixture_xweighted"], [774, 3, 1, "", "liquid_pure_rp"]], "openpnm.models.phase.misc": [[776, 3, 1, "", "mix_and_match"], [777, 3, 1, "", "mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[779, 3, 1, "", "from_component"], [780, 3, 1, "", "mixing_rule"], [781, 3, 1, "", "mole_summation"], [782, 3, 1, "", "mole_to_mass_fraction"], [783, 3, 1, "", "salinity"]], "openpnm.models.phase.partition_coefficient": [[785, 3, 1, "", "gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[787, 3, 1, "", "liquid_mixture_wsd"], [788, 3, 1, "", "liquid_pure_bb"], [789, 3, 1, "", "water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[791, 3, 1, "", "gas_mixture_whz"], [792, 3, 1, "", "gas_pure_gismr"], [793, 3, 1, "", "liquid_mixture_DIPPR9H"], [794, 3, 1, "", "liquid_pure_gismr"], [795, 3, 1, "", "liquid_pure_sr"], [796, 3, 1, "", "water_correlation"]], "openpnm.models.phase.vapor_pressure": [[798, 3, 1, "", "liquid_pure_antoine"], [799, 3, 1, "", "liquid_pure_lk"], [800, 3, 1, "", "water_correlation"]], "openpnm.models.phase.viscosity": [[802, 3, 1, "", "gas_mixture_hz"], [803, 3, 1, "", "gas_pure_gesmr"], [804, 3, 1, "", "gas_pure_st"], [805, 3, 1, "", "liquid_mixture_xweighted"], [806, 3, 1, "", "liquid_pure_ls"], [807, 3, 1, "", "water_correlation"]], "openpnm.models.physics": [[809, 0, 0, "-", "ad_dif_conductance"], [811, 0, 0, "-", "capillary_pressure"], [814, 0, 0, "-", "diffusive_conductance"], [819, 0, 0, "-", "electrical_conductance"], [822, 0, 0, "-", "hydraulic_conductance"], [826, 0, 0, "-", "meniscus"], [830, 0, 0, "-", "multiphase"], [833, 0, 0, "-", "source_terms"], [844, 0, 0, "-", "thermal_conductance"]], "openpnm.models.physics.ad_dif_conductance": [[810, 3, 1, "", "ad_dif"]], "openpnm.models.physics.capillary_pressure": [[812, 3, 1, "", "purcell"], [813, 3, 1, "", "washburn"]], "openpnm.models.physics.diffusive_conductance": [[815, 3, 1, "", "generic_diffusive"], [816, 3, 1, "", "mixed_diffusion"], [817, 3, 1, "", "ordinary_diffusion"], [818, 3, 1, "", "taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[820, 3, 1, "", "generic_electrical"], [821, 3, 1, "", "series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[823, 3, 1, "", "generic_hydraulic"], [824, 3, 1, "", "hagen_poiseuille"], [825, 3, 1, "", "valvatne_blunt"]], "openpnm.models.physics.meniscus": [[827, 3, 1, "", "general_toroidal"], [828, 3, 1, "", "purcell"], [829, 3, 1, "", "sinusoidal"]], "openpnm.models.physics.multiphase": [[831, 3, 1, "", "conduit_conductance"], [832, 3, 1, "", "late_filling"]], "openpnm.models.physics.source_terms": [[834, 3, 1, "", "butler_volmer_conc"], [835, 3, 1, "", "butler_volmer_voltage"], [836, 3, 1, "", "exponential"], [837, 3, 1, "", "general_symbolic"], [838, 3, 1, "", "linear"], [839, 3, 1, "", "logarithm"], [840, 3, 1, "", "natural_exponential"], [841, 3, 1, "", "natural_logarithm"], [842, 3, 1, "", "power_law"], [843, 3, 1, "", "standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[845, 3, 1, "", "generic_thermal"], [846, 3, 1, "", "series_resistors"]], "openpnm.network": [[848, 1, 1, "", "BodyCenteredCubic"], [887, 1, 1, "", "Cubic"], [926, 1, 1, "", "CubicTemplate"], [964, 1, 1, "", "Delaunay"], [1002, 1, 1, "", "DelaunayVoronoiDual"], [1042, 1, 1, "", "Demo"], [1081, 1, 1, "", "FaceCenteredCubic"], [1120, 1, 1, "", "Network"], [1158, 1, 1, "", "Voronoi"]], "openpnm.network.BodyCenteredCubic": [[849, 2, 1, "", "add_boundary_pores"], [850, 2, 1, "", "add_model"], [851, 2, 1, "", "add_model_collection"], [852, 2, 1, "", "clear"], [853, 2, 1, "", "copy"], [854, 2, 1, "", "create_adjacency_matrix"], [855, 2, 1, "", "create_incidence_matrix"], [856, 2, 1, "", "filter_by_label"], [857, 2, 1, "", "find_connected_pores"], [858, 2, 1, "", "find_connecting_throat"], [859, 2, 1, "", "find_nearby_pores"], [860, 2, 1, "", "find_neighbor_pores"], [861, 2, 1, "", "find_neighbor_throats"], [862, 2, 1, "", "fromkeys"], [863, 2, 1, "", "get"], [864, 2, 1, "", "get_adjacency_matrix"], [865, 2, 1, "", "get_conduit_data"], [866, 2, 1, "", "get_incidence_matrix"], [867, 2, 1, "", "interpolate_data"], [868, 2, 1, "", "items"], [869, 2, 1, "", "keys"], [870, 2, 1, "", "labels"], [871, 2, 1, "", "num_neighbors"], [872, 2, 1, "", "num_pores"], [873, 2, 1, "", "num_throats"], [874, 2, 1, "", "pop"], [875, 2, 1, "", "popitem"], [876, 2, 1, "", "pores"], [877, 2, 1, "", "props"], [878, 2, 1, "", "regenerate_models"], [879, 2, 1, "", "run_model"], [880, 2, 1, "", "set_label"], [881, 2, 1, "", "setdefault"], [882, 2, 1, "", "throats"], [883, 2, 1, "", "to_indices"], [884, 2, 1, "", "to_mask"], [885, 2, 1, "", "update"], [886, 2, 1, "", "values"]], "openpnm.network.Cubic": [[888, 2, 1, "", "add_boundary_pores"], [889, 2, 1, "", "add_model"], [890, 2, 1, "", "add_model_collection"], [891, 2, 1, "", "clear"], [892, 2, 1, "", "copy"], [893, 2, 1, "", "create_adjacency_matrix"], [894, 2, 1, "", "create_incidence_matrix"], [895, 2, 1, "", "filter_by_label"], [896, 2, 1, "", "find_connected_pores"], [897, 2, 1, "", "find_connecting_throat"], [898, 2, 1, "", "find_nearby_pores"], [899, 2, 1, "", "find_neighbor_pores"], [900, 2, 1, "", "find_neighbor_throats"], [901, 2, 1, "", "fromkeys"], [902, 2, 1, "", "get"], [903, 2, 1, "", "get_adjacency_matrix"], [904, 2, 1, "", "get_conduit_data"], [905, 2, 1, "", "get_incidence_matrix"], [906, 2, 1, "", "interpolate_data"], [907, 2, 1, "", "items"], [908, 2, 1, "", "keys"], [909, 2, 1, "", "labels"], [910, 2, 1, "", "num_neighbors"], [911, 2, 1, "", "num_pores"], [912, 2, 1, "", "num_throats"], [913, 2, 1, "", "pop"], [914, 2, 1, "", "popitem"], [915, 2, 1, "", "pores"], [916, 2, 1, "", "props"], [917, 2, 1, "", "regenerate_models"], [918, 2, 1, "", "run_model"], [919, 2, 1, "", "set_label"], [920, 2, 1, "", "setdefault"], [921, 2, 1, "", "throats"], [922, 2, 1, "", "to_indices"], [923, 2, 1, "", "to_mask"], [924, 2, 1, "", "update"], [925, 2, 1, "", "values"]], "openpnm.network.CubicTemplate": [[927, 2, 1, "", "add_model"], [928, 2, 1, "", "add_model_collection"], [929, 2, 1, "", "clear"], [930, 2, 1, "", "copy"], [931, 2, 1, "", "create_adjacency_matrix"], [932, 2, 1, "", "create_incidence_matrix"], [933, 2, 1, "", "filter_by_label"], [934, 2, 1, "", "find_connected_pores"], [935, 2, 1, "", "find_connecting_throat"], [936, 2, 1, "", "find_nearby_pores"], [937, 2, 1, "", "find_neighbor_pores"], [938, 2, 1, "", "find_neighbor_throats"], [939, 2, 1, "", "fromkeys"], [940, 2, 1, "", "get"], [941, 2, 1, "", "get_adjacency_matrix"], [942, 2, 1, "", "get_conduit_data"], [943, 2, 1, "", "get_incidence_matrix"], [944, 2, 1, "", "interpolate_data"], [945, 2, 1, "", "items"], [946, 2, 1, "", "keys"], [947, 2, 1, "", "labels"], [948, 2, 1, "", "num_neighbors"], [949, 2, 1, "", "num_pores"], [950, 2, 1, "", "num_throats"], [951, 2, 1, "", "pop"], [952, 2, 1, "", "popitem"], [953, 2, 1, "", "pores"], [954, 2, 1, "", "props"], [955, 2, 1, "", "regenerate_models"], [956, 2, 1, "", "run_model"], [957, 2, 1, "", "set_label"], [958, 2, 1, "", "setdefault"], [959, 2, 1, "", "throats"], [960, 2, 1, "", "to_indices"], [961, 2, 1, "", "to_mask"], [962, 2, 1, "", "update"], [963, 2, 1, "", "values"]], "openpnm.network.Delaunay": [[965, 2, 1, "", "add_model"], [966, 2, 1, "", "add_model_collection"], [967, 2, 1, "", "clear"], [968, 2, 1, "", "copy"], [969, 2, 1, "", "create_adjacency_matrix"], [970, 2, 1, "", "create_incidence_matrix"], [971, 2, 1, "", "filter_by_label"], [972, 2, 1, "", "find_connected_pores"], [973, 2, 1, "", "find_connecting_throat"], [974, 2, 1, "", "find_nearby_pores"], [975, 2, 1, "", "find_neighbor_pores"], [976, 2, 1, "", "find_neighbor_throats"], [977, 2, 1, "", "fromkeys"], [978, 2, 1, "", "get"], [979, 2, 1, "", "get_adjacency_matrix"], [980, 2, 1, "", "get_conduit_data"], [981, 2, 1, "", "get_incidence_matrix"], [982, 2, 1, "", "interpolate_data"], [983, 2, 1, "", "items"], [984, 2, 1, "", "keys"], [985, 2, 1, "", "labels"], [986, 2, 1, "", "num_neighbors"], [987, 2, 1, "", "num_pores"], [988, 2, 1, "", "num_throats"], [989, 2, 1, "", "pop"], [990, 2, 1, "", "popitem"], [991, 2, 1, "", "pores"], [992, 2, 1, "", "props"], [993, 2, 1, "", "regenerate_models"], [994, 2, 1, "", "run_model"], [995, 2, 1, "", "set_label"], [996, 2, 1, "", "setdefault"], [997, 2, 1, "", "throats"], [998, 2, 1, "", "to_indices"], [999, 2, 1, "", "to_mask"], [1000, 2, 1, "", "update"], [1001, 2, 1, "", "values"]], "openpnm.network.DelaunayVoronoiDual": [[1003, 2, 1, "", "add_model"], [1004, 2, 1, "", "add_model_collection"], [1005, 2, 1, "", "clear"], [1006, 2, 1, "", "copy"], [1007, 2, 1, "", "create_adjacency_matrix"], [1008, 2, 1, "", "create_incidence_matrix"], [1009, 2, 1, "", "filter_by_label"], [1010, 2, 1, "", "find_connected_pores"], [1011, 2, 1, "", "find_connecting_throat"], [1012, 2, 1, "", "find_nearby_pores"], [1013, 2, 1, "", "find_neighbor_pores"], [1014, 2, 1, "", "find_neighbor_throats"], [1015, 2, 1, "", "find_pore_hulls"], [1016, 2, 1, "", "find_throat_facets"], [1017, 2, 1, "", "fromkeys"], [1018, 2, 1, "", "get"], [1019, 2, 1, "", "get_adjacency_matrix"], [1020, 2, 1, "", "get_conduit_data"], [1021, 2, 1, "", "get_incidence_matrix"], [1022, 2, 1, "", "interpolate_data"], [1023, 2, 1, "", "items"], [1024, 2, 1, "", "keys"], [1025, 2, 1, "", "labels"], [1026, 2, 1, "", "num_neighbors"], [1027, 2, 1, "", "num_pores"], [1028, 2, 1, "", "num_throats"], [1029, 2, 1, "", "pop"], [1030, 2, 1, "", "popitem"], [1031, 2, 1, "", "pores"], [1032, 2, 1, "", "props"], [1033, 2, 1, "", "regenerate_models"], [1034, 2, 1, "", "run_model"], [1035, 2, 1, "", "set_label"], [1036, 2, 1, "", "setdefault"], [1037, 2, 1, "", "throats"], [1038, 2, 1, "", "to_indices"], [1039, 2, 1, "", "to_mask"], [1040, 2, 1, "", "update"], [1041, 2, 1, "", "values"]], "openpnm.network.Demo": [[1043, 2, 1, "", "add_boundary_pores"], [1044, 2, 1, "", "add_model"], [1045, 2, 1, "", "add_model_collection"], [1046, 2, 1, "", "clear"], [1047, 2, 1, "", "copy"], [1048, 2, 1, "", "create_adjacency_matrix"], [1049, 2, 1, "", "create_incidence_matrix"], [1050, 2, 1, "", "filter_by_label"], [1051, 2, 1, "", "find_connected_pores"], [1052, 2, 1, "", "find_connecting_throat"], [1053, 2, 1, "", "find_nearby_pores"], [1054, 2, 1, "", "find_neighbor_pores"], [1055, 2, 1, "", "find_neighbor_throats"], [1056, 2, 1, "", "fromkeys"], [1057, 2, 1, "", "get"], [1058, 2, 1, "", "get_adjacency_matrix"], [1059, 2, 1, "", "get_conduit_data"], [1060, 2, 1, "", "get_incidence_matrix"], [1061, 2, 1, "", "interpolate_data"], [1062, 2, 1, "", "items"], [1063, 2, 1, "", "keys"], [1064, 2, 1, "", "labels"], [1065, 2, 1, "", "num_neighbors"], [1066, 2, 1, "", "num_pores"], [1067, 2, 1, "", "num_throats"], [1068, 2, 1, "", "pop"], [1069, 2, 1, "", "popitem"], [1070, 2, 1, "", "pores"], [1071, 2, 1, "", "props"], [1072, 2, 1, "", "regenerate_models"], [1073, 2, 1, "", "run_model"], [1074, 2, 1, "", "set_label"], [1075, 2, 1, "", "setdefault"], [1076, 2, 1, "", "throats"], [1077, 2, 1, "", "to_indices"], [1078, 2, 1, "", "to_mask"], [1079, 2, 1, "", "update"], [1080, 2, 1, "", "values"]], "openpnm.network.FaceCenteredCubic": [[1082, 2, 1, "", "add_boundary_pores"], [1083, 2, 1, "", "add_model"], [1084, 2, 1, "", "add_model_collection"], [1085, 2, 1, "", "clear"], [1086, 2, 1, "", "copy"], [1087, 2, 1, "", "create_adjacency_matrix"], [1088, 2, 1, "", "create_incidence_matrix"], [1089, 2, 1, "", "filter_by_label"], [1090, 2, 1, "", "find_connected_pores"], [1091, 2, 1, "", "find_connecting_throat"], [1092, 2, 1, "", "find_nearby_pores"], [1093, 2, 1, "", "find_neighbor_pores"], [1094, 2, 1, "", "find_neighbor_throats"], [1095, 2, 1, "", "fromkeys"], [1096, 2, 1, "", "get"], [1097, 2, 1, "", "get_adjacency_matrix"], [1098, 2, 1, "", "get_conduit_data"], [1099, 2, 1, "", "get_incidence_matrix"], [1100, 2, 1, "", "interpolate_data"], [1101, 2, 1, "", "items"], [1102, 2, 1, "", "keys"], [1103, 2, 1, "", "labels"], [1104, 2, 1, "", "num_neighbors"], [1105, 2, 1, "", "num_pores"], [1106, 2, 1, "", "num_throats"], [1107, 2, 1, "", "pop"], [1108, 2, 1, "", "popitem"], [1109, 2, 1, "", "pores"], [1110, 2, 1, "", "props"], [1111, 2, 1, "", "regenerate_models"], [1112, 2, 1, "", "run_model"], [1113, 2, 1, "", "set_label"], [1114, 2, 1, "", "setdefault"], [1115, 2, 1, "", "throats"], [1116, 2, 1, "", "to_indices"], [1117, 2, 1, "", "to_mask"], [1118, 2, 1, "", "update"], [1119, 2, 1, "", "values"]], "openpnm.network.Network": [[1121, 2, 1, "", "add_model"], [1122, 2, 1, "", "add_model_collection"], [1123, 2, 1, "", "clear"], [1124, 2, 1, "", "copy"], [1125, 2, 1, "", "create_adjacency_matrix"], [1126, 2, 1, "", "create_incidence_matrix"], [1127, 2, 1, "", "filter_by_label"], [1128, 2, 1, "", "find_connected_pores"], [1129, 2, 1, "", "find_connecting_throat"], [1130, 2, 1, "", "find_nearby_pores"], [1131, 2, 1, "", "find_neighbor_pores"], [1132, 2, 1, "", "find_neighbor_throats"], [1133, 2, 1, "", "fromkeys"], [1134, 2, 1, "", "get"], [1135, 2, 1, "", "get_adjacency_matrix"], [1136, 2, 1, "", "get_conduit_data"], [1137, 2, 1, "", "get_incidence_matrix"], [1138, 2, 1, "", "interpolate_data"], [1139, 2, 1, "", "items"], [1140, 2, 1, "", "keys"], [1141, 2, 1, "", "labels"], [1142, 2, 1, "", "num_neighbors"], [1143, 2, 1, "", "num_pores"], [1144, 2, 1, "", "num_throats"], [1145, 2, 1, "", "pop"], [1146, 2, 1, "", "popitem"], [1147, 2, 1, "", "pores"], [1148, 2, 1, "", "props"], [1149, 2, 1, "", "regenerate_models"], [1150, 2, 1, "", "run_model"], [1151, 2, 1, "", "set_label"], [1152, 2, 1, "", "setdefault"], [1153, 2, 1, "", "throats"], [1154, 2, 1, "", "to_indices"], [1155, 2, 1, "", "to_mask"], [1156, 2, 1, "", "update"], [1157, 2, 1, "", "values"]], "openpnm.network.Voronoi": [[1159, 2, 1, "", "add_model"], [1160, 2, 1, "", "add_model_collection"], [1161, 2, 1, "", "clear"], [1162, 2, 1, "", "copy"], [1163, 2, 1, "", "create_adjacency_matrix"], [1164, 2, 1, "", "create_incidence_matrix"], [1165, 2, 1, "", "filter_by_label"], [1166, 2, 1, "", "find_connected_pores"], [1167, 2, 1, "", "find_connecting_throat"], [1168, 2, 1, "", "find_nearby_pores"], [1169, 2, 1, "", "find_neighbor_pores"], [1170, 2, 1, "", "find_neighbor_throats"], [1171, 2, 1, "", "fromkeys"], [1172, 2, 1, "", "get"], [1173, 2, 1, "", "get_adjacency_matrix"], [1174, 2, 1, "", "get_conduit_data"], [1175, 2, 1, "", "get_incidence_matrix"], [1176, 2, 1, "", "interpolate_data"], [1177, 2, 1, "", "items"], [1178, 2, 1, "", "keys"], [1179, 2, 1, "", "labels"], [1180, 2, 1, "", "num_neighbors"], [1181, 2, 1, "", "num_pores"], [1182, 2, 1, "", "num_throats"], [1183, 2, 1, "", "pop"], [1184, 2, 1, "", "popitem"], [1185, 2, 1, "", "pores"], [1186, 2, 1, "", "props"], [1187, 2, 1, "", "regenerate_models"], [1188, 2, 1, "", "run_model"], [1189, 2, 1, "", "set_label"], [1190, 2, 1, "", "setdefault"], [1191, 2, 1, "", "throats"], [1192, 2, 1, "", "to_indices"], [1193, 2, 1, "", "to_mask"], [1194, 2, 1, "", "update"], [1195, 2, 1, "", "values"]], "openpnm.phase": [[1197, 1, 1, "", "Air"], [1225, 1, 1, "", "BinaryGas"], [1259, 1, 1, "", "GasMixture"], [1293, 1, 1, "", "LiquidMixture"], [1327, 1, 1, "", "Mercury"], [1355, 1, 1, "", "Mixture"], [1388, 1, 1, "", "Phase"], [1416, 1, 1, "", "Species"], [1444, 1, 1, "", "StandardGas"], [1472, 1, 1, "", "StandardGasMixture"], [1506, 1, 1, "", "StandardLiquid"], [1534, 1, 1, "", "StandardLiquidMixture"], [1568, 1, 1, "", "Water"]], "openpnm.phase.Air": [[1198, 2, 1, "", "add_model"], [1199, 2, 1, "", "add_model_collection"], [1200, 2, 1, "", "clear"], [1201, 2, 1, "", "copy"], [1202, 2, 1, "", "filter_by_label"], [1203, 2, 1, "", "fromkeys"], [1204, 2, 1, "", "get"], [1205, 2, 1, "", "get_conduit_data"], [1206, 2, 1, "", "interpolate_data"], [1207, 2, 1, "", "items"], [1208, 2, 1, "", "keys"], [1209, 2, 1, "", "labels"], [1210, 2, 1, "", "num_pores"], [1211, 2, 1, "", "num_throats"], [1212, 2, 1, "", "pop"], [1213, 2, 1, "", "popitem"], [1214, 2, 1, "", "pores"], [1215, 2, 1, "", "props"], [1216, 2, 1, "", "regenerate_models"], [1217, 2, 1, "", "run_model"], [1218, 2, 1, "", "set_label"], [1219, 2, 1, "", "setdefault"], [1220, 2, 1, "", "throats"], [1221, 2, 1, "", "to_indices"], [1222, 2, 1, "", "to_mask"], [1223, 2, 1, "", "update"], [1224, 2, 1, "", "values"]], "openpnm.phase.BinaryGas": [[1226, 2, 1, "", "add_comp"], [1227, 2, 1, "", "add_model"], [1228, 2, 1, "", "add_model_collection"], [1229, 2, 1, "", "check_mixture_health"], [1230, 2, 1, "", "clear"], [1231, 2, 1, "", "copy"], [1232, 2, 1, "", "filter_by_label"], [1233, 2, 1, "", "fromkeys"], [1234, 2, 1, "", "get"], [1235, 2, 1, "", "get_comp_vals"], [1236, 2, 1, "", "get_conduit_data"], [1237, 2, 1, "", "get_mix_vals"], [1238, 2, 1, "", "interpolate_data"], [1239, 2, 1, "", "items"], [1240, 2, 1, "", "keys"], [1241, 2, 1, "", "labels"], [1242, 2, 1, "", "num_pores"], [1243, 2, 1, "", "num_throats"], [1244, 2, 1, "", "pop"], [1245, 2, 1, "", "popitem"], [1246, 2, 1, "", "pores"], [1247, 2, 1, "", "props"], [1248, 2, 1, "", "regenerate_models"], [1249, 2, 1, "", "remove_comp"], [1250, 2, 1, "", "run_model"], [1251, 2, 1, "", "set_label"], [1252, 2, 1, "", "setdefault"], [1253, 2, 1, "", "throats"], [1254, 2, 1, "", "to_indices"], [1255, 2, 1, "", "to_mask"], [1256, 2, 1, "", "update"], [1257, 2, 1, "", "values"], [1258, 2, 1, "", "y"]], "openpnm.phase.GasMixture": [[1260, 2, 1, "", "add_comp"], [1261, 2, 1, "", "add_model"], [1262, 2, 1, "", "add_model_collection"], [1263, 2, 1, "", "check_mixture_health"], [1264, 2, 1, "", "clear"], [1265, 2, 1, "", "copy"], [1266, 2, 1, "", "filter_by_label"], [1267, 2, 1, "", "fromkeys"], [1268, 2, 1, "", "get"], [1269, 2, 1, "", "get_comp_vals"], [1270, 2, 1, "", "get_conduit_data"], [1271, 2, 1, "", "get_mix_vals"], [1272, 2, 1, "", "interpolate_data"], [1273, 2, 1, "", "items"], [1274, 2, 1, "", "keys"], [1275, 2, 1, "", "labels"], [1276, 2, 1, "", "num_pores"], [1277, 2, 1, "", "num_throats"], [1278, 2, 1, "", "pop"], [1279, 2, 1, "", "popitem"], [1280, 2, 1, "", "pores"], [1281, 2, 1, "", "props"], [1282, 2, 1, "", "regenerate_models"], [1283, 2, 1, "", "remove_comp"], [1284, 2, 1, "", "run_model"], [1285, 2, 1, "", "set_label"], [1286, 2, 1, "", "setdefault"], [1287, 2, 1, "", "throats"], [1288, 2, 1, "", "to_indices"], [1289, 2, 1, "", "to_mask"], [1290, 2, 1, "", "update"], [1291, 2, 1, "", "values"], [1292, 2, 1, "", "y"]], "openpnm.phase.LiquidMixture": [[1294, 2, 1, "", "add_comp"], [1295, 2, 1, "", "add_model"], [1296, 2, 1, "", "add_model_collection"], [1297, 2, 1, "", "check_mixture_health"], [1298, 2, 1, "", "clear"], [1299, 2, 1, "", "copy"], [1300, 2, 1, "", "filter_by_label"], [1301, 2, 1, "", "fromkeys"], [1302, 2, 1, "", "get"], [1303, 2, 1, "", "get_comp_vals"], [1304, 2, 1, "", "get_conduit_data"], [1305, 2, 1, "", "get_mix_vals"], [1306, 2, 1, "", "interpolate_data"], [1307, 2, 1, "", "items"], [1308, 2, 1, "", "keys"], [1309, 2, 1, "", "labels"], [1310, 2, 1, "", "num_pores"], [1311, 2, 1, "", "num_throats"], [1312, 2, 1, "", "pop"], [1313, 2, 1, "", "popitem"], [1314, 2, 1, "", "pores"], [1315, 2, 1, "", "props"], [1316, 2, 1, "", "regenerate_models"], [1317, 2, 1, "", "remove_comp"], [1318, 2, 1, "", "run_model"], [1319, 2, 1, "", "set_label"], [1320, 2, 1, "", "setdefault"], [1321, 2, 1, "", "throats"], [1322, 2, 1, "", "to_indices"], [1323, 2, 1, "", "to_mask"], [1324, 2, 1, "", "update"], [1325, 2, 1, "", "values"], [1326, 2, 1, "", "x"]], "openpnm.phase.Mercury": [[1328, 2, 1, "", "add_model"], [1329, 2, 1, "", "add_model_collection"], [1330, 2, 1, "", "clear"], [1331, 2, 1, "", "copy"], [1332, 2, 1, "", "filter_by_label"], [1333, 2, 1, "", "fromkeys"], [1334, 2, 1, "", "get"], [1335, 2, 1, "", "get_conduit_data"], [1336, 2, 1, "", "interpolate_data"], [1337, 2, 1, "", "items"], [1338, 2, 1, "", "keys"], [1339, 2, 1, "", "labels"], [1340, 2, 1, "", "num_pores"], [1341, 2, 1, "", "num_throats"], [1342, 2, 1, "", "pop"], [1343, 2, 1, "", "popitem"], [1344, 2, 1, "", "pores"], [1345, 2, 1, "", "props"], [1346, 2, 1, "", "regenerate_models"], [1347, 2, 1, "", "run_model"], [1348, 2, 1, "", "set_label"], [1349, 2, 1, "", "setdefault"], [1350, 2, 1, "", "throats"], [1351, 2, 1, "", "to_indices"], [1352, 2, 1, "", "to_mask"], [1353, 2, 1, "", "update"], [1354, 2, 1, "", "values"]], "openpnm.phase.Mixture": [[1356, 2, 1, "", "add_comp"], [1357, 2, 1, "", "add_model"], [1358, 2, 1, "", "add_model_collection"], [1359, 2, 1, "", "check_mixture_health"], [1360, 2, 1, "", "clear"], [1361, 2, 1, "", "copy"], [1362, 2, 1, "", "filter_by_label"], [1363, 2, 1, "", "fromkeys"], [1364, 2, 1, "", "get"], [1365, 2, 1, "", "get_comp_vals"], [1366, 2, 1, "", "get_conduit_data"], [1367, 2, 1, "", "get_mix_vals"], [1368, 2, 1, "", "interpolate_data"], [1369, 2, 1, "", "items"], [1370, 2, 1, "", "keys"], [1371, 2, 1, "", "labels"], [1372, 2, 1, "", "num_pores"], [1373, 2, 1, "", "num_throats"], [1374, 2, 1, "", "pop"], [1375, 2, 1, "", "popitem"], [1376, 2, 1, "", "pores"], [1377, 2, 1, "", "props"], [1378, 2, 1, "", "regenerate_models"], [1379, 2, 1, "", "remove_comp"], [1380, 2, 1, "", "run_model"], [1381, 2, 1, "", "set_label"], [1382, 2, 1, "", "setdefault"], [1383, 2, 1, "", "throats"], [1384, 2, 1, "", "to_indices"], [1385, 2, 1, "", "to_mask"], [1386, 2, 1, "", "update"], [1387, 2, 1, "", "values"]], "openpnm.phase.Phase": [[1389, 2, 1, "", "add_model"], [1390, 2, 1, "", "add_model_collection"], [1391, 2, 1, "", "clear"], [1392, 2, 1, "", "copy"], [1393, 2, 1, "", "filter_by_label"], [1394, 2, 1, "", "fromkeys"], [1395, 2, 1, "", "get"], [1396, 2, 1, "", "get_conduit_data"], [1397, 2, 1, "", "interpolate_data"], [1398, 2, 1, "", "items"], [1399, 2, 1, "", "keys"], [1400, 2, 1, "", "labels"], [1401, 2, 1, "", "num_pores"], [1402, 2, 1, "", "num_throats"], [1403, 2, 1, "", "pop"], [1404, 2, 1, "", "popitem"], [1405, 2, 1, "", "pores"], [1406, 2, 1, "", "props"], [1407, 2, 1, "", "regenerate_models"], [1408, 2, 1, "", "run_model"], [1409, 2, 1, "", "set_label"], [1410, 2, 1, "", "setdefault"], [1411, 2, 1, "", "throats"], [1412, 2, 1, "", "to_indices"], [1413, 2, 1, "", "to_mask"], [1414, 2, 1, "", "update"], [1415, 2, 1, "", "values"]], "openpnm.phase.Species": [[1417, 2, 1, "", "add_model"], [1418, 2, 1, "", "add_model_collection"], [1419, 2, 1, "", "clear"], [1420, 2, 1, "", "copy"], [1421, 2, 1, "", "filter_by_label"], [1422, 2, 1, "", "fromkeys"], [1423, 2, 1, "", "get"], [1424, 2, 1, "", "get_conduit_data"], [1425, 2, 1, "", "interpolate_data"], [1426, 2, 1, "", "items"], [1427, 2, 1, "", "keys"], [1428, 2, 1, "", "labels"], [1429, 2, 1, "", "num_pores"], [1430, 2, 1, "", "num_throats"], [1431, 2, 1, "", "pop"], [1432, 2, 1, "", "popitem"], [1433, 2, 1, "", "pores"], [1434, 2, 1, "", "props"], [1435, 2, 1, "", "regenerate_models"], [1436, 2, 1, "", "run_model"], [1437, 2, 1, "", "set_label"], [1438, 2, 1, "", "setdefault"], [1439, 2, 1, "", "throats"], [1440, 2, 1, "", "to_indices"], [1441, 2, 1, "", "to_mask"], [1442, 2, 1, "", "update"], [1443, 2, 1, "", "values"]], "openpnm.phase.StandardGas": [[1445, 2, 1, "", "add_model"], [1446, 2, 1, "", "add_model_collection"], [1447, 2, 1, "", "clear"], [1448, 2, 1, "", "copy"], [1449, 2, 1, "", "filter_by_label"], [1450, 2, 1, "", "fromkeys"], [1451, 2, 1, "", "get"], [1452, 2, 1, "", "get_conduit_data"], [1453, 2, 1, "", "interpolate_data"], [1454, 2, 1, "", "items"], [1455, 2, 1, "", "keys"], [1456, 2, 1, "", "labels"], [1457, 2, 1, "", "num_pores"], [1458, 2, 1, "", "num_throats"], [1459, 2, 1, "", "pop"], [1460, 2, 1, "", "popitem"], [1461, 2, 1, "", "pores"], [1462, 2, 1, "", "props"], [1463, 2, 1, "", "regenerate_models"], [1464, 2, 1, "", "run_model"], [1465, 2, 1, "", "set_label"], [1466, 2, 1, "", "setdefault"], [1467, 2, 1, "", "throats"], [1468, 2, 1, "", "to_indices"], [1469, 2, 1, "", "to_mask"], [1470, 2, 1, "", "update"], [1471, 2, 1, "", "values"]], "openpnm.phase.StandardGasMixture": [[1473, 2, 1, "", "add_comp"], [1474, 2, 1, "", "add_model"], [1475, 2, 1, "", "add_model_collection"], [1476, 2, 1, "", "check_mixture_health"], [1477, 2, 1, "", "clear"], [1478, 2, 1, "", "copy"], [1479, 2, 1, "", "filter_by_label"], [1480, 2, 1, "", "fromkeys"], [1481, 2, 1, "", "get"], [1482, 2, 1, "", "get_comp_vals"], [1483, 2, 1, "", "get_conduit_data"], [1484, 2, 1, "", "get_mix_vals"], [1485, 2, 1, "", "interpolate_data"], [1486, 2, 1, "", "items"], [1487, 2, 1, "", "keys"], [1488, 2, 1, "", "labels"], [1489, 2, 1, "", "num_pores"], [1490, 2, 1, "", "num_throats"], [1491, 2, 1, "", "pop"], [1492, 2, 1, "", "popitem"], [1493, 2, 1, "", "pores"], [1494, 2, 1, "", "props"], [1495, 2, 1, "", "regenerate_models"], [1496, 2, 1, "", "remove_comp"], [1497, 2, 1, "", "run_model"], [1498, 2, 1, "", "set_label"], [1499, 2, 1, "", "setdefault"], [1500, 2, 1, "", "throats"], [1501, 2, 1, "", "to_indices"], [1502, 2, 1, "", "to_mask"], [1503, 2, 1, "", "update"], [1504, 2, 1, "", "values"], [1505, 2, 1, "", "y"]], "openpnm.phase.StandardLiquid": [[1507, 2, 1, "", "add_model"], [1508, 2, 1, "", "add_model_collection"], [1509, 2, 1, "", "clear"], [1510, 2, 1, "", "copy"], [1511, 2, 1, "", "filter_by_label"], [1512, 2, 1, "", "fromkeys"], [1513, 2, 1, "", "get"], [1514, 2, 1, "", "get_conduit_data"], [1515, 2, 1, "", "interpolate_data"], [1516, 2, 1, "", "items"], [1517, 2, 1, "", "keys"], [1518, 2, 1, "", "labels"], [1519, 2, 1, "", "num_pores"], [1520, 2, 1, "", "num_throats"], [1521, 2, 1, "", "pop"], [1522, 2, 1, "", "popitem"], [1523, 2, 1, "", "pores"], [1524, 2, 1, "", "props"], [1525, 2, 1, "", "regenerate_models"], [1526, 2, 1, "", "run_model"], [1527, 2, 1, "", "set_label"], [1528, 2, 1, "", "setdefault"], [1529, 2, 1, "", "throats"], [1530, 2, 1, "", "to_indices"], [1531, 2, 1, "", "to_mask"], [1532, 2, 1, "", "update"], [1533, 2, 1, "", "values"]], "openpnm.phase.StandardLiquidMixture": [[1535, 2, 1, "", "add_comp"], [1536, 2, 1, "", "add_model"], [1537, 2, 1, "", "add_model_collection"], [1538, 2, 1, "", "check_mixture_health"], [1539, 2, 1, "", "clear"], [1540, 2, 1, "", "copy"], [1541, 2, 1, "", "filter_by_label"], [1542, 2, 1, "", "fromkeys"], [1543, 2, 1, "", "get"], [1544, 2, 1, "", "get_comp_vals"], [1545, 2, 1, "", "get_conduit_data"], [1546, 2, 1, "", "get_mix_vals"], [1547, 2, 1, "", "interpolate_data"], [1548, 2, 1, "", "items"], [1549, 2, 1, "", "keys"], [1550, 2, 1, "", "labels"], [1551, 2, 1, "", "num_pores"], [1552, 2, 1, "", "num_throats"], [1553, 2, 1, "", "pop"], [1554, 2, 1, "", "popitem"], [1555, 2, 1, "", "pores"], [1556, 2, 1, "", "props"], [1557, 2, 1, "", "regenerate_models"], [1558, 2, 1, "", "remove_comp"], [1559, 2, 1, "", "run_model"], [1560, 2, 1, "", "set_label"], [1561, 2, 1, "", "setdefault"], [1562, 2, 1, "", "throats"], [1563, 2, 1, "", "to_indices"], [1564, 2, 1, "", "to_mask"], [1565, 2, 1, "", "update"], [1566, 2, 1, "", "values"], [1567, 2, 1, "", "x"]], "openpnm.phase.Water": [[1569, 2, 1, "", "add_model"], [1570, 2, 1, "", "add_model_collection"], [1571, 2, 1, "", "clear"], [1572, 2, 1, "", "copy"], [1573, 2, 1, "", "filter_by_label"], [1574, 2, 1, "", "fromkeys"], [1575, 2, 1, "", "get"], [1576, 2, 1, "", "get_conduit_data"], [1577, 2, 1, "", "interpolate_data"], [1578, 2, 1, "", "items"], [1579, 2, 1, "", "keys"], [1580, 2, 1, "", "labels"], [1581, 2, 1, "", "num_pores"], [1582, 2, 1, "", "num_throats"], [1583, 2, 1, "", "pop"], [1584, 2, 1, "", "popitem"], [1585, 2, 1, "", "pores"], [1586, 2, 1, "", "props"], [1587, 2, 1, "", "regenerate_models"], [1588, 2, 1, "", "run_model"], [1589, 2, 1, "", "set_label"], [1590, 2, 1, "", "setdefault"], [1591, 2, 1, "", "throats"], [1592, 2, 1, "", "to_indices"], [1593, 2, 1, "", "to_mask"], [1594, 2, 1, "", "update"], [1595, 2, 1, "", "values"]], "openpnm.solvers": [[1597, 1, 1, "", "BaseSolver"], [1599, 1, 1, "", "DirectSolver"], [1601, 1, 1, "", "IterativeSolver"], [1603, 1, 1, "", "PETScLinearSolver"], [1605, 1, 1, "", "PardisoSpsolve"], [1607, 1, 1, "", "ScipyCG"], [1609, 1, 1, "", "ScipySpsolve"]], "openpnm.solvers.BaseSolver": [[1598, 2, 1, "", "solve"]], "openpnm.solvers.DirectSolver": [[1600, 2, 1, "", "solve"]], "openpnm.solvers.IterativeSolver": [[1602, 2, 1, "", "solve"]], "openpnm.solvers.PETScLinearSolver": [[1604, 2, 1, "", "solve"]], "openpnm.solvers.PardisoSpsolve": [[1606, 2, 1, "", "solve"]], "openpnm.solvers.ScipyCG": [[1608, 2, 1, "", "solve"]], "openpnm.solvers.ScipySpsolve": [[1610, 2, 1, "", "solve"]], "openpnm.topotools": [[1612, 3, 1, "", "add_boundary_pores"], [1613, 3, 1, "", "add_reservoir_pore"], [1614, 3, 1, "", "bond_percolation"], [1615, 3, 1, "", "clone_pores"], [1616, 3, 1, "", "connect_pores"], [1617, 3, 1, "", "conns_to_am"], [1618, 3, 1, "", "dimensionality"], [1619, 3, 1, "", "drop_sites"], [1620, 3, 1, "", "extend"], [1621, 3, 1, "", "filter_pores_by_z"], [1622, 3, 1, "", "find_clusters"], [1623, 3, 1, "", "find_connected_sites"], [1624, 3, 1, "", "find_connecting_bonds"], [1625, 3, 1, "", "find_interface_throats"], [1626, 3, 1, "", "find_isolated_clusters"], [1627, 3, 1, "", "find_neighbor_bonds"], [1628, 3, 1, "", "find_neighbor_sites"], [1629, 3, 1, "", "find_path"], [1630, 3, 1, "", "find_surface_pores"], [1631, 3, 1, "", "generate_base_points"], [1632, 3, 1, "", "get_domain_area"], [1633, 3, 1, "", "get_domain_length"], [1634, 3, 1, "", "get_shape"], [1635, 3, 1, "", "get_spacing"], [1636, 3, 1, "", "hull_centroid"], [1637, 3, 1, "", "is_fully_connected"], [1638, 3, 1, "", "iscoplanar"], [1639, 3, 1, "", "isoutside"], [1640, 3, 1, "", "ispercolating"], [1641, 3, 1, "", "issymmetric"], [1642, 3, 1, "", "istriangular"], [1643, 3, 1, "", "istril"], [1644, 3, 1, "", "istriu"], [1645, 3, 1, "", "label_faces"], [1646, 3, 1, "", "merge_networks"], [1647, 3, 1, "", "merge_pores"], [1648, 3, 1, "", "reduce_coordination"], [1649, 3, 1, "", "reflect_base_points"], [1650, 3, 1, "", "rotate_coords"], [1651, 3, 1, "", "shear_coords"], [1652, 3, 1, "", "site_percolation"], [1653, 3, 1, "", "stitch"], [1654, 3, 1, "", "template_cylinder_annulus"], [1655, 3, 1, "", "template_sphere_shell"], [1656, 3, 1, "", "tri_to_am"], [1657, 3, 1, "", "trim"], [1658, 3, 1, "", "trim_disconnected_clusters"], [1659, 3, 1, "", "vor_to_am"]], "openpnm.utils": [[1661, 1, 1, "", "Docorator"], [1687, 1, 1, "", "HealthDict"], [1699, 1, 1, "", "NestedDict"], [1713, 1, 1, "", "PrintableDict"], [1725, 1, 1, "", "PrintableList"], [1737, 1, 1, "", "Project"], [1740, 1, 1, "", "SettingsAttr"], [1741, 1, 1, "", "SimpleList"], [1743, 1, 1, "", "TypedList"], [1755, 1, 1, "", "TypedMixin"], [1756, 1, 1, "", "TypedSet"], [1774, 1, 1, "", "Workspace"], [1793, 3, 1, "", "check_data_health"], [1794, 3, 1, "", "check_network_health"], [1795, 3, 1, "", "dict_to_struct"], [1796, 3, 1, "", "flat_list"], [1797, 3, 1, "", "get_mixture_model_args"], [1798, 3, 1, "", "get_printable_labels"], [1799, 3, 1, "", "get_printable_props"], [1800, 3, 1, "", "ignore_warnings"], [1801, 3, 1, "", "is_symmetric"], [1802, 3, 1, "", "is_transient"], [1803, 3, 1, "", "is_valid_propname"], [1804, 3, 1, "", "methods_to_table"], [1805, 3, 1, "", "models_to_table"], [1806, 3, 1, "", "sanitize_dict"], [1807, 3, 1, "", "struct_to_dict"]], "openpnm.utils.Docorator": [[1662, 2, 1, "", "__call__"], [1663, 2, 1, "", "dedent"], [1664, 2, 1, "", "dedents"], [1665, 2, 1, "", "delete_kwargs"], [1666, 2, 1, "", "delete_kwargs_s"], [1667, 2, 1, "", "delete_params"], [1668, 2, 1, "", "delete_params_s"], [1669, 2, 1, "", "delete_types"], [1670, 2, 1, "", "delete_types_s"], [1671, 2, 1, "", "get_docstring"], [1672, 2, 1, "", "get_extended_summary"], [1673, 2, 1, "", "get_extended_summaryf"], [1674, 2, 1, "", "get_full_description"], [1675, 2, 1, "", "get_full_descriptionf"], [1676, 2, 1, "", "get_sections"], [1677, 2, 1, "", "get_sectionsf"], [1678, 2, 1, "", "get_summary"], [1679, 2, 1, "", "get_summaryf"], [1680, 2, 1, "", "keep_params"], [1681, 2, 1, "", "keep_params_s"], [1682, 2, 1, "", "keep_types"], [1683, 2, 1, "", "keep_types_s"], [1684, 2, 1, "", "save_docstring"], [1685, 2, 1, "", "with_indent"], [1686, 2, 1, "", "with_indents"]], "openpnm.utils.HealthDict": [[1688, 2, 1, "", "clear"], [1689, 2, 1, "", "copy"], [1690, 2, 1, "", "fromkeys"], [1691, 2, 1, "", "get"], [1692, 2, 1, "", "items"], [1693, 2, 1, "", "keys"], [1694, 2, 1, "", "pop"], [1695, 2, 1, "", "popitem"], [1696, 2, 1, "", "setdefault"], [1697, 2, 1, "", "update"], [1698, 2, 1, "", "values"]], "openpnm.utils.NestedDict": [[1700, 2, 1, "", "clear"], [1701, 2, 1, "", "copy"], [1702, 2, 1, "", "fromkeys"], [1703, 2, 1, "", "get"], [1704, 2, 1, "", "items"], [1705, 2, 1, "", "keys"], [1706, 2, 1, "", "pop"], [1707, 2, 1, "", "popitem"], [1708, 2, 1, "", "setdefault"], [1709, 2, 1, "", "to_dict"], [1710, 2, 1, "", "unravel"], [1711, 2, 1, "", "update"], [1712, 2, 1, "", "values"]], "openpnm.utils.PrintableDict": [[1714, 2, 1, "", "clear"], [1715, 2, 1, "", "copy"], [1716, 2, 1, "", "fromkeys"], [1717, 2, 1, "", "get"], [1718, 2, 1, "", "items"], [1719, 2, 1, "", "keys"], [1720, 2, 1, "", "pop"], [1721, 2, 1, "", "popitem"], [1722, 2, 1, "", "setdefault"], [1723, 2, 1, "", "update"], [1724, 2, 1, "", "values"]], "openpnm.utils.PrintableList": [[1726, 2, 1, "", "append"], [1727, 2, 1, "", "clear"], [1728, 2, 1, "", "copy"], [1729, 2, 1, "", "count"], [1730, 2, 1, "", "extend"], [1731, 2, 1, "", "index"], [1732, 2, 1, "", "insert"], [1733, 2, 1, "", "pop"], [1734, 2, 1, "", "remove"], [1735, 2, 1, "", "reverse"], [1736, 2, 1, "", "sort"]], "openpnm.utils.Project": [[1738, 2, 1, "", "append"], [1739, 2, 1, "", "copy"]], "openpnm.utils.SimpleList": [[1742, 2, 1, "", "append"]], "openpnm.utils.TypedList": [[1744, 2, 1, "", "append"], [1745, 2, 1, "", "clear"], [1746, 2, 1, "", "copy"], [1747, 2, 1, "", "count"], [1748, 2, 1, "", "extend"], [1749, 2, 1, "", "index"], [1750, 2, 1, "", "insert"], [1751, 2, 1, "", "pop"], [1752, 2, 1, "", "remove"], [1753, 2, 1, "", "reverse"], [1754, 2, 1, "", "sort"]], "openpnm.utils.TypedSet": [[1757, 2, 1, "", "add"], [1758, 2, 1, "", "clear"], [1759, 2, 1, "", "copy"], [1760, 2, 1, "", "difference"], [1761, 2, 1, "", "difference_update"], [1762, 2, 1, "", "discard"], [1763, 2, 1, "", "intersection"], [1764, 2, 1, "", "intersection_update"], [1765, 2, 1, "", "isdisjoint"], [1766, 2, 1, "", "issubset"], [1767, 2, 1, "", "issuperset"], [1768, 2, 1, "", "pop"], [1769, 2, 1, "", "remove"], [1770, 2, 1, "", "symmetric_difference"], [1771, 2, 1, "", "symmetric_difference_update"], [1772, 2, 1, "", "union"], [1773, 2, 1, "", "update"]], "openpnm.utils.Workspace": [[1775, 2, 1, "", "clear"], [1776, 2, 1, "", "close_project"], [1777, 2, 1, "", "copy"], [1778, 2, 1, "", "copy_project"], [1779, 2, 1, "", "fromkeys"], [1780, 2, 1, "", "get"], [1781, 2, 1, "", "items"], [1782, 2, 1, "", "keys"], [1783, 2, 1, "", "load_project"], [1784, 2, 1, "", "load_workspace"], [1785, 2, 1, "", "new_project"], [1786, 2, 1, "", "pop"], [1787, 2, 1, "", "popitem"], [1788, 2, 1, "", "save_project"], [1789, 2, 1, "", "save_workspace"], [1790, 2, 1, "", "setdefault"], [1791, 2, 1, "", "update"], [1792, 2, 1, "", "values"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"applic": 0, "exampl": [1, 14], "refer": [2, 1808], "10": 3, "step": 3, "learn": 3, "openpnm": [3, 6, 21, 22, 27, 34, 458], "basic": [4, 31, 592], "usag": [4, 17], "problem": 4, "setup": 4, "visual": [4, 8, 9, 25, 33], "calcul": [4, 5, 8, 9, 11, 12, 13, 28, 31], "permeabl": [4, 5, 13], "adjust": [4, 6], "pore": [4, 6, 7, 11, 15, 22, 26, 27, 28, 29, 31, 34, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 493, 509, 574, 639, 645, 648, 656, 661, 876, 915, 953, 991, 1031, 1070, 1109, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585], "size": [4, 6, 22, 28, 609, 624, 648, 699], "distribut": [4, 6, 28], "predict": [5, 7, 9, 11, 13], "absolut": [5, 20], "creat": [5, 9, 11, 12, 13, 19, 29, 30, 31], "random": [5, 11, 25, 646, 654, 698, 704, 737], "cubic": [5, 11, 25, 887], "network": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 22, 25, 26, 27, 34, 584, 741, 847, 1120, 1611], "phase": [5, 7, 8, 9, 10, 12, 13, 30, 31, 585, 757, 1196, 1388], "object": [5, 30, 31], "appli": [5, 7, 9, 12, 13, 19], "stoke": [5, 7], "flow": [5, 7], "geometri": [6, 8, 10, 576, 594], "throat": [6, 11, 22, 26, 27, 28, 29, 66, 92, 124, 157, 190, 222, 255, 288, 321, 355, 388, 421, 453, 499, 511, 667, 670, 672, 678, 692, 696, 699, 706, 711, 713, 882, 921, 959, 997, 1037, 1076, 1115, 1153, 1191, 1220, 1253, 1287, 1321, 1350, 1383, 1411, 1439, 1467, 1500, 1529, 1562, 1591], "us": [6, 20, 21, 27, 28, 29, 30, 32], "scipi": [6, 28], "stat": [6, 28], "class": [6, 30, 458, 1660], "directli": 6, "pre": 6, "defin": [6, 7, 12, 13, 29, 31], "model": [6, 15, 22, 28, 29, 30, 31, 34, 574, 584, 595, 609, 624, 639, 645, 648, 656, 661, 667, 670, 672, 678, 692, 696, 699, 706, 711, 713], "dispers": 7, "coeffici": [7, 19], "gener": [7, 25], "effect": [7, 8, 664], "volum": [7, 11, 661, 713], "perform": [7, 8, 10], "transient": [7, 23, 546], "advect": 7, "diffus": [7, 8, 9, 12, 22, 609, 766], "elut": 7, "curv": [7, 10, 12], "solv": [7, 19, 549, 1598, 1600, 1602, 1604, 1606, 1608, 1610], "find": [8, 27], "tortuos": 8, "physic": [8, 10, 591, 808], "fickian": [8, 9], "result": [8, 9], "format": [9, 27], "factor": [9, 22, 609, 624, 667], "simul": [10, 31, 32, 546, 1596], "mercuri": [10, 589, 1327], "intrus": 10, "porosimetri": 10, "add": [10, 1757], "poros": 11, "void": 11, "bulk": 11, "discuss": 11, "issu": 11, "domain": [11, 29, 476], "overlap": 11, "extract": 11, "obtain": 12, "rel": [12, 13], "ordinari": 12, "percol": [12, 13, 32], "satur": 12, "rate": [12, 19, 57, 149, 182, 247, 280, 313, 346, 380, 413, 446], "function": [12, 13, 21, 24, 550, 1611, 1660], "multiphas": [12, 13, 830], "conduct": [12, 13, 22, 31], "invas": [13, 32], "occup": 13, "contibut": 14, "scale": [15, 28, 31, 574, 738], "set": [16, 30], "attribut": [16, 30], "machineri": 16, "The": [17, 26, 27, 29, 30, 35, 458], "workspac": [17, 1774], "project": [17, 1737], "i": [17, 34], "singleton": 17, "One": 17, "per": 17, "avail": 18, "matrix": [18, 19, 27, 1596], "solver": [18, 1596], "steadi": [19, 1596], "state": [19, 1596], "transport": [19, 21, 22, 23, 31, 426], "valu": [19, 26, 30, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 475, 503, 524, 539, 886, 925, 963, 1001, 1041, 1080, 1119, 1157, 1195, 1224, 1257, 1291, 1325, 1354, 1387, 1415, 1443, 1471, 1504, 1533, 1566, 1595, 1698, 1712, 1724, 1792], "boundari": [19, 31], "condit": [19, 31], "system": 19, "equat": 19, "spars": [19, 26, 27], "matric": [19, 26], "explan": 20, "unit": 20, "pressur": 20, "v": [20, 22, 26], "gaug": 20, "convers": 20, "packag": 20, "challeng": 20, "reactiv": 21, "sourc": 21, "term": 21, "how": [21, 34], "work": 21, "singl": [22, 31], "conduit": [22, 26, 595], "shape": [22, 29, 667], "built": [22, 30], "deriv": 22, "arbitrari": 22, "hydraul": [22, 624], "element": 22, "numer": [24, 26], "python": [24, 34], "primer": 24, "list": 24, "flexibl": 24, "slow": 24, "numpi": [24, 26], "ndarrai": 24, "optim": 24, "vector": [24, 26, 711], "method": [24, 27, 29, 31], "versu": 24, "dictionari": [24, 26], "hold": 24, "thing": 24, "togeth": 24, "subclass": 24, "dict": 24, "quick": 25, "cubictempl": [25, 926], "other": [25, 27], "lattic": 25, "delaunai": [25, 964], "voronoi": [25, 1158], "tessel": 25, "import": [25, 550], "storag": 26, "data": [26, 29, 550], "topologi": [26, 1611], "spreadsheet": 26, "analogi": 26, "rule": 26, "maintain": 26, "integr": [26, 546, 547], "all": 26, "ar": 26, "convert": 26, "arrai": 26, "kei": [26, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 467, 487, 519, 534, 869, 908, 946, 984, 1024, 1063, 1102, 1140, 1178, 1208, 1240, 1274, 1308, 1338, 1370, 1399, 1427, 1455, 1487, 1517, 1549, 1579, 1693, 1705, 1719, 1782], "must": 26, "start": 26, "With": 26, "ani": 26, "scalar": 26, "expand": 26, "full": [26, 29], "length": [26, 28, 595, 678], "nest": 26, "name": 26, "allow": 26, "boolean": [26, 29], "treat": 26, "label": [26, 29, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 488, 506, 870, 909, 947, 985, 1025, 1064, 1103, 1141, 1179, 1209, 1241, 1275, 1309, 1339, 1371, 1400, 1428, 1456, 1488, 1518, 1550, 1580], "properti": [26, 28, 30], "lead": 26, "underscor": 26, "hidden": 26, "param": 26, "prefix": 26, "repres": 26, "adjac": [26, 27], "dens": 26, "represent": 27, "queri": 27, "manipul": [27, 1611], "coo": 27, "incid": 27, "neighor": 27, "neighbor": 27, "connect": 27, "remov": [27, 30, 1734, 1752, 1769], "ad": [27, 28, 30], "assign": [28, 30, 31], "geometr": 28, "manual": [28, 31, 32], "from": 28, "comput": 28, "surfac": [28, 656, 706], "area": [28, 639, 656, 672, 706], "librari": 28, "predefin": [28, 29], "collect": [28, 546, 550, 574, 575, 584, 1596, 1611], "custom": [28, 29, 30], "overwrit": 28, "them": 28, "Their": 28, "argument": [28, 29], "introduct": 28, "depend": 28, "handler": 28, "mode": 29, "mask": 29, "set_label": [29, 60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 383, 416, 449, 497, 510, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589], "sytax": 29, "read": 29, "write": [29, 30], "subdomain": 29, "chang": 29, "locat": 29, "mix": 29, "mani": 29, "differ": [29, 724, 1760], "part": 30, "1": 30, "direct": 30, "constant": [30, 723], "water": [30, 590, 1568], "specif": 30, "your": 30, "own": 30, "common": 30, "fluid": 30, "2": 30, "speci": [30, 1416], "mixtur": [30, 778, 1355], "pure": 30, "ga": [30, 587], "liquid": [30, 588], "get": [30, 45, 77, 104, 137, 170, 202, 235, 268, 301, 334, 368, 401, 434, 463, 483, 517, 532, 863, 902, 940, 978, 1018, 1057, 1096, 1134, 1172, 1204, 1234, 1268, 1302, 1334, 1364, 1395, 1423, 1451, 1481, 1513, 1543, 1575, 1691, 1703, 1717, 1780], "composit": 30, "explor": 30, "featur": 30, "info": 30, "compon": 30, "mole": 30, "fraction": [30, 725], "get_comp_v": [30, 1235, 1269, 1303, 1365, 1482, 1544], "check": 30, "consist": 30, "check_mixture_health": [30, 1229, 1263, 1297, 1359, 1476, 1538], "retriev": 30, "wildcard": 30, "syntax": 30, "viscos": [31, 801], "algorithm": [31, 32, 36, 71], "rigor": 31, "drainag": [32, 97], "implement": 32, "draing": 32, "process": 32, "invasionpercol": [32, 195], "option": 33, "spyder": 33, "interact": 33, "plot": 33, "jupyt": 33, "notebook": 33, "paraview": 33, "framework": 34, "what": 34, "star": 34, "To": 34, "cite": 34, "citat": 34, "instal": 35, "dev": 35, "version": 35, "easi": 35, "wai": 35, "hard": 35, "correct": 35, "where": 35, "": 35, "my": 35, "conda": 35, "prompt": 35, "window": 35, "mac": 35, "linux": 35, "advectiondiffus": 37, "clear": [38, 72, 99, 130, 163, 197, 228, 261, 294, 327, 361, 394, 427, 460, 479, 514, 526, 852, 891, 929, 967, 1005, 1046, 1085, 1123, 1161, 1200, 1230, 1264, 1298, 1330, 1360, 1391, 1419, 1447, 1477, 1509, 1539, 1571, 1688, 1700, 1714, 1727, 1745, 1758, 1775], "clear_bc": [39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428], "clear_rate_bc": [40, 132, 165, 230, 263, 296, 329, 363, 396, 429], "clear_value_bc": [41, 133, 166, 231, 264, 297, 330, 364, 397, 430], "copi": [42, 74, 101, 134, 167, 199, 232, 265, 298, 331, 365, 398, 431, 461, 480, 515, 527, 853, 892, 930, 968, 1006, 1047, 1086, 1124, 1162, 1201, 1231, 1265, 1299, 1331, 1361, 1392, 1420, 1448, 1478, 1510, 1540, 1572, 1689, 1701, 1715, 1728, 1739, 1746, 1759, 1777], "filter_by_label": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 366, 399, 432, 481, 505, 856, 895, 933, 971, 1009, 1050, 1089, 1127, 1165, 1202, 1232, 1266, 1300, 1332, 1362, 1393, 1421, 1449, 1479, 1511, 1541, 1573], "fromkei": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 462, 482, 516, 531, 862, 901, 939, 977, 1017, 1056, 1095, 1133, 1171, 1203, 1233, 1267, 1301, 1333, 1363, 1394, 1422, 1450, 1480, 1512, 1542, 1574, 1690, 1702, 1716, 1779], "get_conduit_data": [46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 464, 484, 865, 904, 942, 980, 1020, 1059, 1098, 1136, 1174, 1205, 1236, 1270, 1304, 1335, 1366, 1396, 1424, 1452, 1483, 1514, 1545, 1576], "interpolate_data": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 867, 906, 944, 982, 1022, 1061, 1100, 1138, 1176, 1206, 1238, 1272, 1306, 1336, 1368, 1397, 1425, 1453, 1485, 1515, 1547, 1577], "item": [48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 486, 518, 533, 868, 907, 945, 983, 1023, 1062, 1101, 1139, 1177, 1207, 1239, 1273, 1307, 1337, 1369, 1398, 1426, 1454, 1486, 1516, 1548, 1578, 1692, 1704, 1718, 1781], "num_por": [51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 489, 507, 872, 911, 949, 987, 1027, 1066, 1105, 1143, 1181, 1210, 1242, 1276, 1310, 1340, 1372, 1401, 1429, 1457, 1489, 1519, 1551, 1581], "num_throat": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 490, 508, 873, 912, 950, 988, 1028, 1067, 1106, 1144, 1182, 1211, 1243, 1277, 1311, 1341, 1373, 1402, 1430, 1458, 1490, 1520, 1552, 1582], "pop": [53, 85, 113, 145, 178, 211, 243, 276, 309, 342, 376, 409, 442, 468, 491, 520, 535, 874, 913, 951, 989, 1029, 1068, 1107, 1145, 1183, 1212, 1244, 1278, 1312, 1342, 1374, 1403, 1431, 1459, 1491, 1521, 1553, 1583, 1694, 1706, 1720, 1733, 1751, 1768, 1786], "popitem": [54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 377, 410, 443, 469, 492, 521, 536, 875, 914, 952, 990, 1030, 1069, 1108, 1146, 1184, 1213, 1245, 1279, 1313, 1343, 1375, 1404, 1432, 1460, 1492, 1522, 1554, 1584, 1695, 1707, 1721, 1787], "prop": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 470, 494, 877, 916, 954, 992, 1032, 1071, 1110, 1148, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586], "run": [58, 118, 150, 183, 216, 248, 281, 314, 347, 381, 414, 447], "set_bc": [59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448], "set_outflow_bc": [61, 350], "set_rate_bc": [62, 153, 186, 251, 284, 317, 351, 384, 417, 450], "set_sourc": [63, 154, 187, 252, 285, 318, 352, 385, 418], "set_value_bc": [64, 155, 188, 253, 286, 319, 353, 386, 419, 451], "setdefault": [65, 91, 123, 156, 189, 221, 254, 287, 320, 354, 387, 420, 452, 471, 498, 522, 537, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590, 1696, 1708, 1722, 1790], "to_indic": [67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 472, 500, 883, 922, 960, 998, 1038, 1077, 1116, 1154, 1192, 1221, 1254, 1288, 1322, 1351, 1384, 1412, 1440, 1468, 1501, 1530, 1563, 1592], "to_mask": [68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 473, 501, 884, 923, 961, 999, 1039, 1078, 1117, 1155, 1193, 1222, 1255, 1289, 1323, 1352, 1385, 1413, 1441, 1469, 1502, 1531, 1564, 1593], "updat": [69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 456, 474, 502, 523, 538, 885, 924, 962, 1000, 1040, 1079, 1118, 1156, 1194, 1223, 1256, 1290, 1324, 1353, 1386, 1414, 1442, 1470, 1503, 1532, 1565, 1594, 1697, 1711, 1723, 1773, 1791], "apply_trap": [98, 196], "pc_curv": [112, 210], "reset": [117, 215], "set_inlet_bc": [120, 218], "set_outlet_bc": [122, 220], "fickiandiffus": 129, "fourierconduct": 162, "ohmicconduct": 227, "reactivetransport": 260, "stokesflow": 293, "transientadvectiondiffus": 326, "transientfickiandiffus": 360, "transientreactivetransport": 393, "core": 458, "main": 458, "base": 458, "modelsmixin": 458, "base2": 459, "add_model": [477, 541, 850, 889, 927, 965, 1003, 1044, 1083, 1121, 1159, 1198, 1227, 1261, 1295, 1328, 1357, 1389, 1417, 1445, 1474, 1507, 1536, 1569], "add_model_collect": [478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "regenerate_model": [495, 543, 878, 917, 955, 993, 1033, 1072, 1111, 1149, 1187, 1216, 1248, 1282, 1316, 1346, 1378, 1407, 1435, 1463, 1495, 1525, 1557, 1587], "run_model": [496, 544, 879, 918, 956, 994, 1034, 1073, 1112, 1150, 1188, 1217, 1250, 1284, 1318, 1347, 1380, 1408, 1436, 1464, 1497, 1526, 1559, 1588], "labelmixin": 504, "modelwrapp": 512, "__call__": [513, 1662], "modelsdict": 525, "dependency_graph": 528, "dependency_list": 529, "dependency_map": 530, "modelsmixin2": 540, "parsermixin": 545, "od": 546, "scipyrk45": 548, "io": 550, "export": 550, "network_from_csv": 551, "network_from_jsongraph": 552, "network_from_marock": 553, "network_from_networkx": 554, "network_from_pergeo": 555, "network_from_porespi": 556, "network_from_statoil": 557, "network_to_comsol": 558, "network_to_csv": 559, "network_to_jsongraph": 560, "network_to_networkx": 561, "network_to_panda": 562, "network_to_pergeo": 563, "network_to_salom": 564, "network_to_stl": 565, "print_hdf5": 566, "project_to_csv": 567, "project_to_dict": 568, "project_to_hdf5": 569, "project_to_panda": 570, "project_to_paraview": 571, "project_to_vtk": 572, "project_to_xdmf": 573, "circles_and_rectangl": [577, 596, 610, 625, 679], "cones_and_cylind": [578, 597, 611, 626, 680], "cubes_and_cuboid": [579, 598, 612, 627, 681], "pyramids_and_cuboid": [580, 605, 620, 635, 688], "spheres_and_cylind": [581, 606, 621, 636, 677, 689], "squares_and_rectangl": [582, 607, 622, 637, 690], "trapezoids_and_rectangl": [583, 608, 623, 638, 691], "air": [586, 1197], "standard": 593, "conduit_length": 595, "hybrid_cones_and_cylind": [599, 613, 628, 682], "hybrid_pyramids_and_cuboid": [600, 614, 629, 683], "hybrid_trapezoids_and_rectangl": [601, 615, 630, 684], "intersecting_con": [602, 616, 631, 685], "intersecting_pyramid": [603, 617, 632, 686], "intersecting_trapezoid": [604, 618, 633, 687], "diffusive_size_factor": 609, "ncylinders_in_seri": [619, 634], "hydraulic_size_factor": 624, "pore_cross_sectional_area": 639, "cross": [639, 672], "section": [639, 672], "circl": [640, 657, 662], "cone": 641, "cube": [642, 658, 663], "sphere": [643, 659, 665], "squar": [644, 660, 666], "pore_se": 645, "seed": [645, 696], "spatially_correl": 647, "pore_s": 648, "equivalent_diamet": [649, 700], "from_neighbor_throat": [650, 727], "generic_distribut": [651, 702, 728], "largest_spher": 652, "normal": [653, 703, 733, 734], "weibul": [655, 705, 740], "pore_surface_area": 656, "pore_volum": 661, "throat_capillary_shape_factor": 667, "capillari": 667, "jenkins_rao": 668, "mason_morrow": 669, "throat_centroid": 670, "centroid": 670, "pore_coord": 671, "throat_cross_sectional_area": 672, "cuboid": [673, 693, 707, 714], "cylind": [674, 694, 708, 715], "rectangl": [675, 695, 710, 719], "throat_endpoint": 676, "throat_length": 678, "throat_perimet": 692, "perimet": 692, "throat_se": 696, "from_neighbor_por": [697, 701, 726], "throat_siz": 699, "throat_surface_area": 706, "extrus": [709, 716], "throat_vector": 711, "pore_to_por": 712, "throat_volum": 713, "len": 717, "pendular_r": 718, "misc": [720, 775], "miscellan": 720, "blank": 721, "clip": 722, "generic_funct": 729, "invert": 730, "linear": [731, 838], "match_histogram": 732, "polynomi": 735, "product": 736, "summat": 739, "bidirectional_throat": 742, "cluster_numb": 743, "cluster_s": 744, "coordination_numb": 745, "count_coincident_por": 746, "distance_to_furthest_neighbor": 747, "distance_to_nearest_neighbor": 748, "distance_to_nearest_por": 749, "duplicate_throat": 750, "find_coincident_por": 751, "headless_throat": 752, "isolated_por": 753, "looped_throat": 754, "pore_to_pore_dist": 755, "reversed_throat": 756, "chemicals_wrapp": 758, "critical_prop": 759, "densiti": 760, "ideal_ga": 761, "liquid_mixture_costald": 762, "liquid_pure_costald": 763, "mass_to_molar": 764, "water_correl": [765, 789, 796, 800, 807], "gas_mixture_c": 767, "gas_mixture_fesg": 768, "liquid_mixture_tc": 769, "heat_capac": 770, "gas_mixture_yweight": 771, "gas_pure_trc": 772, "liquid_mixture_xweight": [773, 805], "liquid_pure_rp": 774, "mix_and_match": 776, "mole_to_mass_fract": [777, 782], "from_compon": 779, "mixing_rul": 780, "mole_summ": 781, "salin": 783, "partition_coeffici": 784, "gaseous_species_in_wat": 785, "surface_tens": 786, "liquid_mixture_wsd": 787, "liquid_pure_bb": 788, "thermal_conduct": [790, 844], "gas_mixture_whz": 791, "gas_pure_gismr": 792, "liquid_mixture_dippr9h": 793, "liquid_pure_gismr": 794, "liquid_pure_sr": 795, "vapor_pressur": 797, "liquid_pure_antoin": 798, "liquid_pure_lk": 799, "gas_mixture_hz": 802, "gas_pure_gesmr": 803, "gas_pure_st": 804, "liquid_pure_l": 806, "ad_dif_conduct": 809, "ad_dif": 810, "capillary_pressur": 811, "purcel": [812, 828], "washburn": 813, "diffusive_conduct": 814, "generic_diffus": 815, "mixed_diffus": 816, "ordinary_diffus": 817, "taylor_aris_diffus": 818, "electrical_conduct": 819, "generic_electr": 820, "series_resistor": [821, 846], "hydraulic_conduct": 822, "generic_hydraul": 823, "hagen_poiseuil": 824, "valvatne_blunt": 825, "meniscu": 826, "general_toroid": 827, "sinusoid": 829, "conduit_conduct": 831, "late_fil": 832, "source_term": 833, "butler_volmer_conc": 834, "butler_volmer_voltag": 835, "exponenti": 836, "general_symbol": 837, "logarithm": 839, "natural_exponenti": 840, "natural_logarithm": 841, "power_law": 842, "standard_kinet": 843, "generic_therm": 845, "bodycenteredcub": 848, "add_boundary_por": [849, 888, 1043, 1082, 1612], "create_adjacency_matrix": [854, 893, 931, 969, 1007, 1048, 1087, 1125, 1163], "create_incidence_matrix": [855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164], "find_connected_por": [857, 896, 934, 972, 1010, 1051, 1090, 1128, 1166], "find_connecting_throat": [858, 897, 935, 973, 1011, 1052, 1091, 1129, 1167], "find_nearby_por": [859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "find_neighbor_por": [860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "find_neighbor_throat": [861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170], "get_adjacency_matrix": [864, 903, 941, 979, 1019, 1058, 1097, 1135, 1173], "get_incidence_matrix": [866, 905, 943, 981, 1021, 1060, 1099, 1137, 1175], "num_neighbor": [871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180], "delaunayvoronoidu": 1002, "find_pore_hul": 1015, "find_throat_facet": 1016, "demo": 1042, "facecenteredcub": 1081, "binaryga": 1225, "add_comp": [1226, 1260, 1294, 1356, 1473, 1535], "get_mix_v": [1237, 1271, 1305, 1367, 1484, 1546], "remove_comp": [1249, 1283, 1317, 1379, 1496, 1558], "y": [1258, 1292, 1505], "gasmixtur": 1259, "liquidmixtur": 1293, "x": [1326, 1567], "standardga": 1444, "standardgasmixtur": 1472, "standardliquid": 1506, "standardliquidmixtur": 1534, "basesolv": 1597, "directsolv": 1599, "iterativesolv": 1601, "petsclinearsolv": 1603, "pardisospsolv": 1605, "scipycg": 1607, "scipyspsolv": 1609, "topotool": 1611, "add_reservoir_por": 1613, "bond_percol": 1614, "clone_por": 1615, "connect_por": 1616, "conns_to_am": 1617, "dimension": 1618, "drop_sit": 1619, "extend": [1620, 1730, 1748], "filter_pores_by_z": 1621, "find_clust": 1622, "find_connected_sit": 1623, "find_connecting_bond": 1624, "find_interface_throat": 1625, "find_isolated_clust": 1626, "find_neighbor_bond": 1627, "find_neighbor_sit": 1628, "find_path": 1629, "find_surface_por": 1630, "generate_base_point": 1631, "get_domain_area": 1632, "get_domain_length": 1633, "get_shap": 1634, "get_spac": 1635, "hull_centroid": 1636, "is_fully_connect": 1637, "iscoplanar": 1638, "isoutsid": 1639, "ispercol": 1640, "issymmetr": 1641, "istriangular": 1642, "istril": 1643, "istriu": 1644, "label_fac": 1645, "merge_network": 1646, "merge_por": 1647, "reduce_coordin": 1648, "reflect_base_point": 1649, "rotate_coord": 1650, "shear_coord": 1651, "site_percol": 1652, "stitch": 1653, "template_cylinder_annulu": 1654, "template_sphere_shel": 1655, "tri_to_am": 1656, "trim": 1657, "trim_disconnected_clust": 1658, "vor_to_am": 1659, "util": 1660, "helper": 1660, "docor": 1661, "dedent": [1663, 1664], "delete_kwarg": 1665, "delete_kwargs_": 1666, "delete_param": 1667, "delete_params_": 1668, "delete_typ": 1669, "delete_types_": 1670, "get_docstr": 1671, "get_extended_summari": 1672, "get_extended_summaryf": 1673, "get_full_descript": 1674, "get_full_descriptionf": 1675, "get_sect": 1676, "get_sectionsf": 1677, "get_summari": 1678, "get_summaryf": 1679, "keep_param": 1680, "keep_params_": 1681, "keep_typ": 1682, "keep_types_": 1683, "save_docstr": 1684, "with_ind": [1685, 1686], "healthdict": 1687, "nesteddict": 1699, "to_dict": 1709, "unravel": 1710, "printabledict": 1713, "printablelist": 1725, "append": [1726, 1738, 1742, 1744], "count": [1729, 1747], "index": [1731, 1749], "insert": [1732, 1750], "revers": [1735, 1753], "sort": [1736, 1754], "settingsattr": 1740, "simplelist": 1741, "typedlist": 1743, "typedmixin": 1755, "typedset": 1756, "difference_upd": 1761, "discard": 1762, "intersect": 1763, "intersection_upd": 1764, "isdisjoint": 1765, "issubset": 1766, "issuperset": 1767, "symmetric_differ": 1770, "symmetric_difference_upd": 1771, "union": 1772, "close_project": 1776, "copy_project": 1778, "load_project": 1783, "load_workspac": 1784, "new_project": 1785, "save_project": 1788, "save_workspac": 1789, "check_data_health": 1793, "check_network_health": 1794, "dict_to_struct": 1795, "flat_list": 1796, "get_mixture_model_arg": 1797, "get_printable_label": 1798, "get_printable_prop": 1799, "ignore_warn": 1800, "is_symmetr": 1801, "is_transi": 1802, "is_valid_propnam": 1803, "methods_to_t": 1804, "models_to_t": 1805, "sanitize_dict": 1806, "struct_to_dict": 1807, "modul": 1808}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"popitem": [[146, "popitem"], [114, "popitem"], [179, "popitem"], [1787, "popitem"], [1721, "popitem"], [1707, "popitem"], [1695, "popitem"], [1522, "popitem"], [1554, "popitem"], [1584, "popitem"], [1432, "popitem"], [1492, "popitem"], [1460, "popitem"], [1404, "popitem"], [1375, "popitem"], [1343, "popitem"], [1245, "popitem"], [1313, "popitem"], [1279, "popitem"], [1184, "popitem"], [1146, "popitem"], [1213, "popitem"], [1108, "popitem"], [1069, "popitem"], [1030, "popitem"], [952, "popitem"], [990, "popitem"], [914, "popitem"], [875, "popitem"], [536, "popitem"], [521, "popitem"], [492, "popitem"], [469, "popitem"], [410, "popitem"], [443, "popitem"], [310, "popitem"], [377, "popitem"], [343, "popitem"], [277, "popitem"], [212, "popitem"], [244, "popitem"], [86, "popitem"], [54, "popitem"]], "update": [[95, "update"], [127, "update"], [160, "update"], [1791, "update"], [1723, "update"], [1711, "update"], [1773, "update"], [1697, "update"], [1532, "update"], [1565, "update"], [1594, "update"], [1470, "update"], [1442, "update"], [1503, "update"], [1386, "update"], [1414, "update"], [1353, "update"], [1324, "update"], [1290, "update"], [1256, "update"], [1194, "update"], [1223, "update"], [1156, "update"], [1118, "update"], [1079, "update"], [962, "update"], [1040, "update"], [1000, "update"], [885, "update"], [924, "update"], [502, "update"], [538, "update"], [523, "update"], [424, "update"], [474, "update"], [456, "update"], [391, "update"], [291, "update"], [324, "update"], [358, "update"], [258, "update"], [225, "update"], [193, "update"], [69, "update"]], "clear": [[99, "clear"], [163, "clear"], [130, "clear"], [1727, "clear"], [1714, "clear"], [1758, "clear"], [1775, "clear"], [1745, "clear"], [1700, "clear"], [1688, "clear"], [1571, "clear"], [1539, "clear"], [1447, "clear"], [1477, "clear"], [1509, "clear"], [1330, "clear"], [1391, "clear"], [1360, "clear"], [1419, "clear"], [1264, "clear"], [1298, "clear"], [1200, "clear"], [1161, "clear"], [1230, "clear"], [1123, "clear"], [1085, "clear"], [1046, "clear"], [967, "clear"], [1005, "clear"], [891, "clear"], [929, "clear"], [852, "clear"], [479, "clear"], [526, "clear"], [514, "clear"], [427, "clear"], [394, "clear"], [460, "clear"], [294, "clear"], [327, "clear"], [361, "clear"], [261, "clear"], [228, "clear"], [197, "clear"], [72, "clear"], [38, "clear"]], "num_pores": [[176, "num-pores"], [143, "num-pores"], [110, "num-pores"], [1551, "num-pores"], [1581, "num-pores"], [1489, "num-pores"], [1457, "num-pores"], [1429, "num-pores"], [1519, "num-pores"], [1372, "num-pores"], [1340, "num-pores"], [1401, "num-pores"], [1310, "num-pores"], [1276, "num-pores"], [1242, "num-pores"], [1181, "num-pores"], [1143, "num-pores"], [1210, "num-pores"], [1066, "num-pores"], [1105, "num-pores"], [1027, "num-pores"], [987, "num-pores"], [911, "num-pores"], [872, "num-pores"], [949, "num-pores"], [489, "num-pores"], [507, "num-pores"], [440, "num-pores"], [407, "num-pores"], [340, "num-pores"], [307, "num-pores"], [374, "num-pores"], [241, "num-pores"], [274, "num-pores"], [208, "num-pores"], [83, "num-pores"], [51, "num-pores"]], "props": [[181, "props"], [148, "props"], [116, "props"], [1556, "props"], [1586, "props"], [1524, "props"], [1434, "props"], [1462, "props"], [1494, "props"], [1345, "props"], [1377, "props"], [1406, "props"], [1281, "props"], [1315, "props"], [1247, "props"], [1148, "props"], [1186, "props"], [1215, "props"], [1110, "props"], [1071, "props"], [992, "props"], [1032, "props"], [954, "props"], [877, "props"], [916, "props"], [494, "props"], [412, "props"], [445, "props"], [470, "props"], [312, "props"], [345, "props"], [379, "props"], [279, "props"], [246, "props"], [214, "props"], [56, "props"], [88, "props"]], "rate": [[182, "rate"], [149, "rate"], [413, "rate"], [446, "rate"], [380, "rate"], [346, "rate"], [313, "rate"], [280, "rate"], [247, "rate"], [57, "rate"]], "FourierConduction": [[162, "fourierconduction"]], "items": [[140, "items"], [173, "items"], [107, "items"], [1781, "items"], [1718, "items"], [1692, "items"], [1704, "items"], [1578, "items"], [1548, "items"], [1426, "items"], [1486, "items"], [1516, "items"], [1454, "items"], [1369, "items"], [1398, "items"], [1337, "items"], [1307, "items"], [1239, "items"], [1273, "items"], [1177, "items"], [1207, "items"], [1101, "items"], [1062, "items"], [1139, "items"], [983, "items"], [1023, "items"], [945, "items"], [868, "items"], [907, "items"], [533, "items"], [518, "items"], [486, "items"], [404, "items"], [466, "items"], [437, "items"], [337, "items"], [371, "items"], [304, "items"], [205, "items"], [238, "items"], [271, "items"], [80, "items"], [48, "items"]], "reset": [[117, "reset"], [215, "reset"]], "interpolate_data": [[139, "interpolate-data"], [106, "interpolate-data"], [172, "interpolate-data"], [1577, "interpolate-data"], [1547, "interpolate-data"], [1453, "interpolate-data"], [1485, "interpolate-data"], [1425, "interpolate-data"], [1515, "interpolate-data"], [1336, "interpolate-data"], [1368, "interpolate-data"], [1397, "interpolate-data"], [1306, "interpolate-data"], [1272, "interpolate-data"], [1238, "interpolate-data"], [1206, "interpolate-data"], [1176, "interpolate-data"], [1138, "interpolate-data"], [1100, "interpolate-data"], [1061, "interpolate-data"], [1022, "interpolate-data"], [982, "interpolate-data"], [906, "interpolate-data"], [944, "interpolate-data"], [867, "interpolate-data"], [485, "interpolate-data"], [436, "interpolate-data"], [465, "interpolate-data"], [403, "interpolate-data"], [370, "interpolate-data"], [303, "interpolate-data"], [336, "interpolate-data"], [270, "interpolate-data"], [204, "interpolate-data"], [237, "interpolate-data"], [47, "interpolate-data"], [79, "interpolate-data"]], "get_conduit_data": [[138, "get-conduit-data"], [105, "get-conduit-data"], [171, "get-conduit-data"], [1545, "get-conduit-data"], [1576, "get-conduit-data"], [1452, "get-conduit-data"], [1483, "get-conduit-data"], [1514, "get-conduit-data"], [1335, "get-conduit-data"], [1396, "get-conduit-data"], [1424, "get-conduit-data"], [1366, "get-conduit-data"], [1304, "get-conduit-data"], [1270, "get-conduit-data"], [1236, "get-conduit-data"], [1174, "get-conduit-data"], [1205, "get-conduit-data"], [1059, "get-conduit-data"], [1098, "get-conduit-data"], [1136, "get-conduit-data"], [980, "get-conduit-data"], [1020, "get-conduit-data"], [865, "get-conduit-data"], [904, "get-conduit-data"], [942, "get-conduit-data"], [484, "get-conduit-data"], [464, "get-conduit-data"], [402, "get-conduit-data"], [435, "get-conduit-data"], [369, "get-conduit-data"], [335, "get-conduit-data"], [302, "get-conduit-data"], [236, "get-conduit-data"], [203, "get-conduit-data"], [269, "get-conduit-data"], [46, "get-conduit-data"], [78, "get-conduit-data"]], "copy": [[134, "copy"], [101, "copy"], [167, "copy"], [1728, "copy"], [1739, "copy"], [1746, "copy"], [1777, "copy"], [1715, "copy"], [1759, "copy"], [1701, "copy"], [1689, "copy"], [1540, "copy"], [1572, "copy"], [1478, "copy"], [1510, "copy"], [1448, "copy"], [1361, "copy"], [1392, "copy"], [1420, "copy"], [1331, "copy"], [1299, "copy"], [1265, "copy"], [1201, "copy"], [1162, "copy"], [1231, "copy"], [1047, "copy"], [1086, "copy"], [1124, "copy"], [1006, "copy"], [968, "copy"], [930, "copy"], [892, "copy"], [853, "copy"], [515, "copy"], [480, "copy"], [527, "copy"], [461, "copy"], [398, "copy"], [431, "copy"], [298, "copy"], [365, "copy"], [331, "copy"], [199, "copy"], [232, "copy"], [265, "copy"], [74, "copy"], [42, "copy"]], "pop": [[113, "pop"], [178, "pop"], [145, "pop"], [1768, "pop"], [1733, "pop"], [1720, "pop"], [1786, "pop"], [1751, "pop"], [1706, "pop"], [1694, "pop"], [1521, "pop"], [1553, "pop"], [1583, "pop"], [1491, "pop"], [1459, "pop"], [1431, "pop"], [1403, "pop"], [1342, "pop"], [1374, "pop"], [1244, "pop"], [1278, "pop"], [1312, "pop"], [1145, "pop"], [1183, "pop"], [1212, "pop"], [1107, "pop"], [1068, "pop"], [951, "pop"], [1029, "pop"], [989, "pop"], [874, "pop"], [913, "pop"], [491, "pop"], [520, "pop"], [535, "pop"], [468, "pop"], [442, "pop"], [409, "pop"], [342, "pop"], [309, "pop"], [376, "pop"], [243, "pop"], [276, "pop"], [211, "pop"], [53, "pop"], [85, "pop"]], "set_rate_BC": [[186, "set-rate-bc"], [153, "set-rate-bc"], [417, "set-rate-bc"], [450, "set-rate-bc"], [384, "set-rate-bc"], [317, "set-rate-bc"], [351, "set-rate-bc"], [284, "set-rate-bc"], [251, "set-rate-bc"], [62, "set-rate-bc"]], "pores": [[115, "pores"], [147, "pores"], [180, "pores"], [1555, "pores"], [1523, "pores"], [1585, "pores"], [1461, "pores"], [1433, "pores"], [1493, "pores"], [1376, "pores"], [1405, "pores"], [1344, "pores"], [1314, "pores"], [1246, "pores"], [1280, "pores"], [1214, "pores"], [1147, "pores"], [1185, "pores"], [1070, "pores"], [1109, "pores"], [1031, "pores"], [953, "pores"], [991, "pores"], [915, "pores"], [876, "pores"], [493, "pores"], [509, "pores"], [444, "pores"], [411, "pores"], [311, "pores"], [344, "pores"], [378, "pores"], [213, "pores"], [278, "pores"], [245, "pores"], [55, "pores"], [87, "pores"]], "keys": [[108, "keys"], [141, "keys"], [174, "keys"], [1719, "keys"], [1782, "keys"], [1705, "keys"], [1693, "keys"], [1579, "keys"], [1549, "keys"], [1427, "keys"], [1487, "keys"], [1517, "keys"], [1455, "keys"], [1338, "keys"], [1370, "keys"], [1399, "keys"], [1274, "keys"], [1240, "keys"], [1308, "keys"], [1208, "keys"], [1178, "keys"], [1140, "keys"], [1063, "keys"], [1102, "keys"], [1024, "keys"], [984, "keys"], [946, "keys"], [908, "keys"], [869, "keys"], [487, "keys"], [519, "keys"], [534, "keys"], [467, "keys"], [405, "keys"], [438, "keys"], [372, "keys"], [305, "keys"], [338, "keys"], [206, "keys"], [239, "keys"], [272, "keys"], [49, "keys"], [81, "keys"]], "to_indices": [[125, "to-indices"], [158, "to-indices"], [1563, "to-indices"], [1592, "to-indices"], [1530, "to-indices"], [1501, "to-indices"], [1440, "to-indices"], [1468, "to-indices"], [1384, "to-indices"], [1412, "to-indices"], [1351, "to-indices"], [1288, "to-indices"], [1254, "to-indices"], [1322, "to-indices"], [1154, "to-indices"], [1192, "to-indices"], [1221, "to-indices"], [1116, "to-indices"], [1077, "to-indices"], [1038, "to-indices"], [998, "to-indices"], [960, "to-indices"], [883, "to-indices"], [922, "to-indices"], [500, "to-indices"], [422, "to-indices"], [472, "to-indices"], [454, "to-indices"], [389, "to-indices"], [289, "to-indices"], [356, "to-indices"], [322, "to-indices"], [256, "to-indices"], [223, "to-indices"], [191, "to-indices"], [93, "to-indices"], [67, "to-indices"]], "set_label": [[121, "set-label"], [185, "set-label"], [152, "set-label"], [1589, "set-label"], [1560, "set-label"], [1527, "set-label"], [1437, "set-label"], [1465, "set-label"], [1498, "set-label"], [1409, "set-label"], [1381, "set-label"], [1348, "set-label"], [1251, "set-label"], [1285, "set-label"], [1319, "set-label"], [1189, "set-label"], [1151, "set-label"], [1218, "set-label"], [1074, "set-label"], [1113, "set-label"], [995, "set-label"], [957, "set-label"], [1035, "set-label"], [919, "set-label"], [880, "set-label"], [497, "set-label"], [510, "set-label"], [383, "set-label"], [416, "set-label"], [449, "set-label"], [349, "set-label"], [316, "set-label"], [250, "set-label"], [283, "set-label"], [219, "set-label"], [90, "set-label"], [60, "set-label"]], "labels": [[175, "labels"], [109, "labels"], [142, "labels"], [1550, "labels"], [1580, "labels"], [1518, "labels"], [1428, "labels"], [1456, "labels"], [1488, "labels"], [1371, "labels"], [1339, "labels"], [1400, "labels"], [1241, "labels"], [1309, "labels"], [1275, "labels"], [1141, "labels"], [1209, "labels"], [1179, "labels"], [1064, "labels"], [1103, "labels"], [985, "labels"], [1025, "labels"], [909, "labels"], [870, "labels"], [947, "labels"], [506, "labels"], [488, "labels"], [406, "labels"], [439, "labels"], [339, "labels"], [306, "labels"], [373, "labels"], [240, "labels"], [207, "labels"], [273, "labels"], [50, "labels"], [82, "labels"]], "setdefault": [[156, "setdefault"], [123, "setdefault"], [189, "setdefault"], [1722, "setdefault"], [1790, "setdefault"], [1708, "setdefault"], [1696, "setdefault"], [1590, "setdefault"], [1561, "setdefault"], [1528, "setdefault"], [1499, "setdefault"], [1466, "setdefault"], [1438, "setdefault"], [1382, "setdefault"], [1410, "setdefault"], [1349, "setdefault"], [1286, "setdefault"], [1252, "setdefault"], [1320, "setdefault"], [1190, "setdefault"], [1219, "setdefault"], [1152, "setdefault"], [1114, "setdefault"], [1075, "setdefault"], [958, "setdefault"], [996, "setdefault"], [1036, "setdefault"], [920, "setdefault"], [881, "setdefault"], [522, "setdefault"], [498, "setdefault"], [537, "setdefault"], [387, "setdefault"], [471, "setdefault"], [452, "setdefault"], [420, "setdefault"], [287, "setdefault"], [320, "setdefault"], [354, "setdefault"], [254, "setdefault"], [221, "setdefault"], [91, "setdefault"], [65, "setdefault"]], "clear_BCs": [[164, "clear-bcs"], [131, "clear-bcs"], [100, "clear-bcs"], [428, "clear-bcs"], [395, "clear-bcs"], [328, "clear-bcs"], [295, "clear-bcs"], [362, "clear-bcs"], [262, "clear-bcs"], [229, "clear-bcs"], [198, "clear-bcs"], [39, "clear-bcs"], [73, "clear-bcs"]], "to_mask": [[126, "to-mask"], [159, "to-mask"], [1531, "to-mask"], [1593, "to-mask"], [1564, "to-mask"], [1441, "to-mask"], [1502, "to-mask"], [1469, "to-mask"], [1413, "to-mask"], [1352, "to-mask"], [1385, "to-mask"], [1323, "to-mask"], [1255, "to-mask"], [1289, "to-mask"], [1222, "to-mask"], [1193, "to-mask"], [1155, "to-mask"], [1078, "to-mask"], [1117, "to-mask"], [999, "to-mask"], [1039, "to-mask"], [961, "to-mask"], [884, "to-mask"], [923, "to-mask"], [501, "to-mask"], [423, "to-mask"], [455, "to-mask"], [390, "to-mask"], [473, "to-mask"], [357, "to-mask"], [323, "to-mask"], [290, "to-mask"], [224, "to-mask"], [192, "to-mask"], [257, "to-mask"], [94, "to-mask"], [68, "to-mask"]], "filter_by_label": [[168, "filter-by-label"], [135, "filter-by-label"], [102, "filter-by-label"], [1541, "filter-by-label"], [1573, "filter-by-label"], [1449, "filter-by-label"], [1511, "filter-by-label"], [1479, "filter-by-label"], [1393, "filter-by-label"], [1421, "filter-by-label"], [1362, "filter-by-label"], [1332, "filter-by-label"], [1266, "filter-by-label"], [1300, "filter-by-label"], [1202, "filter-by-label"], [1165, "filter-by-label"], [1232, "filter-by-label"], [1089, "filter-by-label"], [1050, "filter-by-label"], [1127, "filter-by-label"], [971, "filter-by-label"], [1009, "filter-by-label"], [895, "filter-by-label"], [933, "filter-by-label"], [856, "filter-by-label"], [505, "filter-by-label"], [481, "filter-by-label"], [399, "filter-by-label"], [432, "filter-by-label"], [299, "filter-by-label"], [366, "filter-by-label"], [332, "filter-by-label"], [233, "filter-by-label"], [200, "filter-by-label"], [266, "filter-by-label"], [43, "filter-by-label"], [75, "filter-by-label"]], "values": [[128, "values"], [161, "values"], [96, "values"], [1712, "values"], [1724, "values"], [1792, "values"], [1698, "values"], [1566, "values"], [1533, "values"], [1595, "values"], [1443, "values"], [1471, "values"], [1504, "values"], [1354, "values"], [1387, "values"], [1415, "values"], [1291, "values"], [1325, "values"], [1257, "values"], [1195, "values"], [1224, "values"], [1157, "values"], [1119, "values"], [1080, "values"], [963, "values"], [1041, "values"], [1001, "values"], [925, "values"], [886, "values"], [503, "values"], [539, "values"], [475, "values"], [524, "values"], [457, "values"], [425, "values"], [392, "values"], [325, "values"], [292, "values"], [359, "values"], [194, "values"], [226, "values"], [259, "values"], [70, "values"]], "set_value_BC": [[188, "set-value-bc"], [155, "set-value-bc"], [386, "set-value-bc"], [419, "set-value-bc"], [451, "set-value-bc"], [353, "set-value-bc"], [319, "set-value-bc"], [286, "set-value-bc"], [253, "set-value-bc"], [64, "set-value-bc"]], "set_BC": [[119, "set-bc"], [151, "set-bc"], [184, "set-bc"], [415, "set-bc"], [382, "set-bc"], [448, "set-bc"], [348, "set-bc"], [315, "set-bc"], [282, "set-bc"], [249, "set-bc"], [217, "set-bc"], [59, "set-bc"], [89, "set-bc"]], "num_throats": [[177, "num-throats"], [111, "num-throats"], [144, "num-throats"], [1552, "num-throats"], [1582, "num-throats"], [1520, "num-throats"], [1458, "num-throats"], [1490, "num-throats"], [1430, "num-throats"], [1341, "num-throats"], [1402, "num-throats"], [1373, "num-throats"], [1311, "num-throats"], [1277, "num-throats"], [1243, "num-throats"], [1182, "num-throats"], [1211, "num-throats"], [1144, "num-throats"], [1067, "num-throats"], [1106, "num-throats"], [988, "num-throats"], [950, "num-throats"], [1028, "num-throats"], [912, "num-throats"], [873, "num-throats"], [490, "num-throats"], [508, "num-throats"], [441, "num-throats"], [408, "num-throats"], [341, "num-throats"], [308, "num-throats"], [375, "num-throats"], [275, "num-throats"], [209, "num-throats"], [242, "num-throats"], [84, "num-throats"], [52, "num-throats"]], "get": [[137, "get"], [104, "get"], [170, "get"], [1717, "get"], [1780, "get"], [1703, "get"], [1691, "get"], [1543, "get"], [1575, "get"], [1451, "get"], [1481, "get"], [1513, "get"], [1364, "get"], [1334, "get"], [1395, "get"], [1423, "get"], [1268, "get"], [1302, "get"], [1204, "get"], [1234, "get"], [1172, "get"], [1134, "get"], [1096, "get"], [1057, "get"], [978, "get"], [1018, "get"], [902, "get"], [940, "get"], [863, "get"], [483, "get"], [517, "get"], [532, "get"], [434, "get"], [401, "get"], [463, "get"], [301, "get"], [334, "get"], [368, "get"], [202, "get"], [235, "get"], [268, "get"], [45, "get"], [77, "get"]], "set_source": [[187, "set-source"], [154, "set-source"], [385, "set-source"], [418, "set-source"], [352, "set-source"], [285, "set-source"], [318, "set-source"], [252, "set-source"], [63, "set-source"]], "clear_value_BCs": [[166, "clear-value-bcs"], [133, "clear-value-bcs"], [397, "clear-value-bcs"], [430, "clear-value-bcs"], [297, "clear-value-bcs"], [330, "clear-value-bcs"], [364, "clear-value-bcs"], [264, "clear-value-bcs"], [231, "clear-value-bcs"], [41, "clear-value-bcs"]], "fromkeys": [[169, "fromkeys"], [103, "fromkeys"], [136, "fromkeys"], [1716, "fromkeys"], [1779, "fromkeys"], [1690, "fromkeys"], [1702, "fromkeys"], [1542, "fromkeys"], [1574, "fromkeys"], [1450, "fromkeys"], [1512, "fromkeys"], [1480, "fromkeys"], [1333, "fromkeys"], [1394, "fromkeys"], [1422, "fromkeys"], [1363, "fromkeys"], [1267, "fromkeys"], [1301, "fromkeys"], [1171, "fromkeys"], [1203, "fromkeys"], [1233, "fromkeys"], [1056, "fromkeys"], [1133, "fromkeys"], [1095, "fromkeys"], [977, "fromkeys"], [1017, "fromkeys"], [901, "fromkeys"], [939, "fromkeys"], [862, "fromkeys"], [482, "fromkeys"], [531, "fromkeys"], [516, "fromkeys"], [462, "fromkeys"], [433, "fromkeys"], [400, "fromkeys"], [367, "fromkeys"], [333, "fromkeys"], [300, "fromkeys"], [267, "fromkeys"], [234, "fromkeys"], [201, "fromkeys"], [44, "fromkeys"], [76, "fromkeys"]], "throats": [[124, "throats"], [157, "throats"], [1529, "throats"], [1562, "throats"], [1591, "throats"], [1439, "throats"], [1500, "throats"], [1467, "throats"], [1411, "throats"], [1350, "throats"], [1383, "throats"], [1287, "throats"], [1321, "throats"], [1253, "throats"], [1220, "throats"], [1191, "throats"], [1153, "throats"], [1115, "throats"], [1076, "throats"], [1037, "throats"], [959, "throats"], [997, "throats"], [921, "throats"], [882, "throats"], [511, "throats"], [499, "throats"], [388, "throats"], [421, "throats"], [453, "throats"], [321, "throats"], [355, "throats"], [288, "throats"], [190, "throats"], [255, "throats"], [222, "throats"], [66, "throats"], [92, "throats"]], "clear_rate_BCs": [[165, "clear-rate-bcs"], [132, "clear-rate-bcs"], [429, "clear-rate-bcs"], [396, "clear-rate-bcs"], [296, "clear-rate-bcs"], [329, "clear-rate-bcs"], [363, "clear-rate-bcs"], [230, "clear-rate-bcs"], [263, "clear-rate-bcs"], [40, "clear-rate-bcs"]], "apply_trapping": [[98, "apply-trapping"], [196, "apply-trapping"]], "pc_curve": [[112, "pc-curve"], [210, "pc-curve"]], "set_inlet_BC": [[120, "set-inlet-bc"], [218, "set-inlet-bc"]], "FickianDiffusion": [[129, "fickiandiffusion"]], "run": [[150, "run"], [118, "run"], [183, "run"], [447, "run"], [414, "run"], [381, "run"], [314, "run"], [347, "run"], [216, "run"], [248, "run"], [281, "run"], [58, "run"]], "Drainage": [[97, "drainage"], [32, "drainage"]], "set_outlet_BC": [[122, "set-outlet-bc"], [220, "set-outlet-bc"]], "struct_to_dict": [[1807, "struct-to-dict"]], "Module Reference": [[1808, "module-openpnm"]], "models_to_table": [[1805, "models-to-table"]], "sanitize_dict": [[1806, "sanitize-dict"]], "count": [[1747, "count"], [1729, "count"]], "append": [[1744, "append"], [1738, "append"], [1742, "append"], [1726, "append"]], "TypedList": [[1743, "typedlist"]], "save_project": [[1788, "save-project"]], "symmetric_difference": [[1770, "symmetric-difference"]], "ignore_warnings": [[1800, "ignore-warnings"]], "SimpleList": [[1741, "simplelist"]], "union": [[1772, "union"]], "check_data_health": [[1793, "check-data-health"]], "get_printable_labels": [[1798, "get-printable-labels"]], "extend": [[1730, "extend"], [1748, "extend"], [1620, "extend"]], "methods_to_table": [[1804, "methods-to-table"]], "save_workspace": [[1789, "save-workspace"]], "is_valid_propname": [[1803, "is-valid-propname"]], "issubset": [[1766, "issubset"]], "sort": [[1754, "sort"], [1736, "sort"]], "intersection_update": [[1764, "intersection-update"]], "close_project": [[1776, "close-project"]], "remove": [[1734, "remove"], [1769, "remove"], [1752, "remove"]], "index": [[1749, "index"], [1731, "index"]], "isdisjoint": [[1765, "isdisjoint"]], "symmetric_difference_update": [[1771, "symmetric-difference-update"]], "intersection": [[1763, "intersection"]], "check_network_health": [[1794, "check-network-health"]], "difference_update": [[1761, "difference-update"]], "difference": [[1760, "difference"], [724, "difference"]], "add": [[1757, "add"]], "is_symmetric": [[1801, "is-symmetric"]], "TypedSet": [[1756, "typedset"]], "TypedMixin": [[1755, "typedmixin"]], "flat_list": [[1796, "flat-list"]], "SettingsAttr": [[1740, "settingsattr"]], "Workspace": [[1774, "workspace"]], "reverse": [[1753, "reverse"], [1735, "reverse"]], "copy_project": [[1778, "copy-project"]], "issuperset": [[1767, "issuperset"]], "dict_to_struct": [[1795, "dict-to-struct"]], "insert": [[1750, "insert"], [1732, "insert"]], "get_printable_props": [[1799, "get-printable-props"]], "load_project": [[1783, "load-project"]], "PrintableList": [[1725, "printablelist"]], "discard": [[1762, "discard"]], "get_mixture_model_args": [[1797, "get-mixture-model-args"]], "new_project": [[1785, "new-project"]], "PrintableDict": [[1713, "printabledict"]], "load_workspace": [[1784, "load-workspace"]], "Project": [[1737, "project"]], "is_transient": [[1802, "is-transient"]], "unravel": [[1710, "unravel"]], "delete_types_s": [[1670, "delete-types-s"]], "HealthDict": [[1687, "healthdict"]], "keep_types": [[1682, "keep-types"]], "istriangular": [[1642, "istriangular"]], "get_extended_summaryf": [[1673, "get-extended-summaryf"]], "get_sectionsf": [[1677, "get-sectionsf"]], "connect_pores": [[1616, "connect-pores"]], "find_surface_pores": [[1630, "find-surface-pores"]], "shear_coords": [[1651, "shear-coords"]], "drop_sites": [[1619, "drop-sites"]], "keep_types_s": [[1683, "keep-types-s"]], "filter_pores_by_z": [[1621, "filter-pores-by-z"]], "dedents": [[1664, "dedents"]], "site_percolation": [[1652, "site-percolation"]], "get_full_descriptionf": [[1675, "get-full-descriptionf"]], "dimensionality": [[1618, "dimensionality"]], "to_dict": [[1709, "to-dict"]], "hull_centroid": [[1636, "hull-centroid"]], "reduce_coordination": [[1648, "reduce-coordination"]], "find_neighbor_sites": [[1628, "find-neighbor-sites"]], "utils": [[1660, "module-openpnm.utils"]], "Utilities and helper classes/functions": [[1660, "utilities-and-helper-classes-functions"]], "ispercolating": [[1640, "ispercolating"]], "get_full_description": [[1674, "get-full-description"]], "delete_kwargs_s": [[1666, "delete-kwargs-s"]], "find_interface_throats": [[1625, "find-interface-throats"]], "get_domain_area": [[1632, "get-domain-area"]], "reflect_base_points": [[1649, "reflect-base-points"]], "with_indent": [[1685, "with-indent"]], "rotate_coords": [[1650, "rotate-coords"]], "find_connected_sites": [[1623, "find-connected-sites"]], "get_spacing": [[1635, "get-spacing"]], "find_clusters": [[1622, "find-clusters"]], "keep_params_s": [[1681, "keep-params-s"]], "__call__": [[1662, "call"], [513, "call"]], "conns_to_am": [[1617, "conns-to-am"]], "issymmetric": [[1641, "issymmetric"]], "get_shape": [[1634, "get-shape"]], "label_faces": [[1645, "label-faces"]], "find_neighbor_bonds": [[1627, "find-neighbor-bonds"]], "merge_pores": [[1647, "merge-pores"]], "save_docstring": [[1684, "save-docstring"]], "get_domain_length": [[1633, "get-domain-length"]], "template_sphere_shell": [[1655, "template-sphere-shell"]], "istril": [[1643, "istril"]], "clone_pores": [[1615, "clone-pores"]], "find_isolated_clusters": [[1626, "find-isolated-clusters"]], "find_connecting_bonds": [[1624, "find-connecting-bonds"]], "Docorator": [[1661, "docorator"]], "delete_params": [[1667, "delete-params"]], "merge_networks": [[1646, "merge-networks"]], "get_summary": [[1678, "get-summary"]], "delete_params_s": [[1668, "delete-params-s"]], "vor_to_am": [[1659, "vor-to-am"]], "get_sections": [[1676, "get-sections"]], "iscoplanar": [[1638, "iscoplanar"]], "dedent": [[1663, "dedent"]], "isoutside": [[1639, "isoutside"]], "stitch": [[1653, "stitch"]], "get_extended_summary": [[1672, "get-extended-summary"]], "template_cylinder_annulus": [[1654, "template-cylinder-annulus"]], "get_summaryf": [[1679, "get-summaryf"]], "is_fully_connected": [[1637, "is-fully-connected"]], "tri_to_am": [[1656, "tri-to-am"]], "trim_disconnected_clusters": [[1658, "trim-disconnected-clusters"]], "get_docstring": [[1671, "get-docstring"]], "delete_types": [[1669, "delete-types"]], "istriu": [[1644, "istriu"]], "find_path": [[1629, "find-path"]], "generate_base_points": [[1631, "generate-base-points"]], "NestedDict": [[1699, "nesteddict"]], "delete_kwargs": [[1665, "delete-kwargs"]], "trim": [[1657, "trim"]], "with_indents": [[1686, "with-indents"]], "keep_params": [[1680, "keep-params"]], "add_boundary_pores": [[1612, "add-boundary-pores"], [1082, "add-boundary-pores"], [1043, "add-boundary-pores"], [888, "add-boundary-pores"], [849, "add-boundary-pores"]], "bond_percolation": [[1614, "bond-percolation"]], "add_model_collection": [[1570, "add-model-collection"], [1537, "add-model-collection"], [1508, "add-model-collection"], [1446, "add-model-collection"], [1475, "add-model-collection"], [1418, "add-model-collection"], [1390, "add-model-collection"], [1358, "add-model-collection"], [1329, "add-model-collection"], [1296, "add-model-collection"], [1262, "add-model-collection"], [1160, "add-model-collection"], [1228, "add-model-collection"], [1199, "add-model-collection"], [1045, "add-model-collection"], [1122, "add-model-collection"], [1084, "add-model-collection"], [1004, "add-model-collection"], [966, "add-model-collection"], [890, "add-model-collection"], [928, "add-model-collection"], [851, "add-model-collection"], [478, "add-model-collection"], [542, "add-model-collection"]], "run_model": [[1588, "run-model"], [1526, "run-model"], [1559, "run-model"], [1436, "run-model"], [1464, "run-model"], [1497, "run-model"], [1408, "run-model"], [1380, "run-model"], [1347, "run-model"], [1284, "run-model"], [1250, "run-model"], [1318, "run-model"], [1150, "run-model"], [1217, "run-model"], [1188, "run-model"], [1112, "run-model"], [1073, "run-model"], [1034, "run-model"], [956, "run-model"], [994, "run-model"], [879, "run-model"], [918, "run-model"], [544, "run-model"], [496, "run-model"]], "solve": [[1610, "solve"], [1602, "solve"], [1600, "solve"], [1608, "solve"], [1606, "solve"], [1598, "solve"], [1604, "solve"], [549, "solve"]], "check_mixture_health": [[1538, "check-mixture-health"], [1476, "check-mixture-health"], [1359, "check-mixture-health"], [1263, "check-mixture-health"], [1297, "check-mixture-health"], [1229, "check-mixture-health"]], "regenerate_models": [[1525, "regenerate-models"], [1587, "regenerate-models"], [1557, "regenerate-models"], [1435, "regenerate-models"], [1495, "regenerate-models"], [1463, "regenerate-models"], [1346, "regenerate-models"], [1407, "regenerate-models"], [1378, "regenerate-models"], [1282, "regenerate-models"], [1316, "regenerate-models"], [1248, "regenerate-models"], [1187, "regenerate-models"], [1149, "regenerate-models"], [1216, "regenerate-models"], [1111, "regenerate-models"], [1072, "regenerate-models"], [1033, "regenerate-models"], [993, "regenerate-models"], [955, "regenerate-models"], [917, "regenerate-models"], [878, "regenerate-models"], [495, "regenerate-models"], [543, "regenerate-models"]], "add_comp": [[1535, "add-comp"], [1473, "add-comp"], [1356, "add-comp"], [1294, "add-comp"], [1260, "add-comp"], [1226, "add-comp"]], "add_model": [[1536, "add-model"], [1569, "add-model"], [1445, "add-model"], [1507, "add-model"], [1474, "add-model"], [1389, "add-model"], [1417, "add-model"], [1357, "add-model"], [1261, "add-model"], [1328, "add-model"], [1295, "add-model"], [1198, "add-model"], [1159, "add-model"], [1227, "add-model"], [1083, "add-model"], [1121, "add-model"], [1044, "add-model"], [1003, "add-model"], [965, "add-model"], [927, "add-model"], [889, "add-model"], [850, "add-model"], [541, "add-model"], [477, "add-model"]], "remove_comp": [[1558, "remove-comp"], [1496, "remove-comp"], [1379, "remove-comp"], [1249, "remove-comp"], [1283, "remove-comp"], [1317, "remove-comp"]], "x": [[1567, "x"], [1326, "x"]], "DirectSolver": [[1599, "directsolver"]], "get_mix_vals": [[1546, "get-mix-vals"], [1484, "get-mix-vals"], [1367, "get-mix-vals"], [1271, "get-mix-vals"], [1305, "get-mix-vals"], [1237, "get-mix-vals"]], "ScipyCG": [[1607, "scipycg"]], "Water": [[1568, "water"]], "StandardLiquidMixture": [[1534, "standardliquidmixture"]], "BaseSolver": [[1597, "basesolver"]], "solvers": [[1596, "module-openpnm.solvers"]], "Collection of matrix solvers for steady state simulations": [[1596, "collection-of-matrix-solvers-for-steady-state-simulations"]], "PardisoSpsolve": [[1605, "pardisospsolve"]], "add_reservoir_pore": [[1613, "add-reservoir-pore"]], "IterativeSolver": [[1601, "iterativesolver"]], "PETScLinearSolver": [[1603, "petsclinearsolver"]], "get_comp_vals": [[1544, "get-comp-vals"], [1482, "get-comp-vals"], [1365, "get-comp-vals"], [1235, "get-comp-vals"], [1269, "get-comp-vals"], [1303, "get-comp-vals"]], "topotools": [[1611, "module-openpnm.topotools"]], "Collection of functions for manipulating network topology": [[1611, "collection-of-functions-for-manipulating-network-topology"]], "ScipySpsolve": [[1609, "scipyspsolve"]], "StandardGasMixture": [[1472, "standardgasmixture"]], "StandardGas": [[1444, "standardgas"]], "StandardLiquid": [[1506, "standardliquid"]], "y": [[1505, "y"], [1258, "y"], [1292, "y"]], "Phase": [[1388, "phase"], [757, "id1"], [10, "phase"], [8, "phase"]], "Species": [[1416, "species"]], "Mixture": [[1355, "mixture"]], "LiquidMixture": [[1293, "liquidmixture"]], "GasMixture": [[1259, "gasmixture"]], "Mercury": [[1327, "mercury"]], "BinaryGas": [[1225, "binarygas"]], "Air": [[1197, "air"]], "find_connecting_throat": [[1167, "find-connecting-throat"], [1052, "find-connecting-throat"], [1091, "find-connecting-throat"], [1129, "find-connecting-throat"], [1011, "find-connecting-throat"], [973, "find-connecting-throat"], [858, "find-connecting-throat"], [935, "find-connecting-throat"], [897, "find-connecting-throat"]], "phase": [[1196, "module-openpnm.phase"], [757, "module-openpnm.models.phase"], [585, "module-openpnm.models.collections.phase"]], "get_incidence_matrix": [[1175, "get-incidence-matrix"], [1099, "get-incidence-matrix"], [1137, "get-incidence-matrix"], [1060, "get-incidence-matrix"], [981, "get-incidence-matrix"], [1021, "get-incidence-matrix"], [905, "get-incidence-matrix"], [866, "get-incidence-matrix"], [943, "get-incidence-matrix"]], "find_connected_pores": [[1166, "find-connected-pores"], [1051, "find-connected-pores"], [1090, "find-connected-pores"], [1128, "find-connected-pores"], [972, "find-connected-pores"], [1010, "find-connected-pores"], [896, "find-connected-pores"], [934, "find-connected-pores"], [857, "find-connected-pores"]], "find_neighbor_pores": [[1169, "find-neighbor-pores"], [1054, "find-neighbor-pores"], [1093, "find-neighbor-pores"], [1131, "find-neighbor-pores"], [1013, "find-neighbor-pores"], [975, "find-neighbor-pores"], [860, "find-neighbor-pores"], [937, "find-neighbor-pores"], [899, "find-neighbor-pores"]], "get_adjacency_matrix": [[1173, "get-adjacency-matrix"], [1135, "get-adjacency-matrix"], [1058, "get-adjacency-matrix"], [1097, "get-adjacency-matrix"], [1019, "get-adjacency-matrix"], [979, "get-adjacency-matrix"], [941, "get-adjacency-matrix"], [903, "get-adjacency-matrix"], [864, "get-adjacency-matrix"]], "create_adjacency_matrix": [[1163, "create-adjacency-matrix"], [1087, "create-adjacency-matrix"], [1125, "create-adjacency-matrix"], [1048, "create-adjacency-matrix"], [969, "create-adjacency-matrix"], [1007, "create-adjacency-matrix"], [893, "create-adjacency-matrix"], [931, "create-adjacency-matrix"], [854, "create-adjacency-matrix"]], "create_incidence_matrix": [[1164, "create-incidence-matrix"], [1088, "create-incidence-matrix"], [1049, "create-incidence-matrix"], [1126, "create-incidence-matrix"], [970, "create-incidence-matrix"], [1008, "create-incidence-matrix"], [932, "create-incidence-matrix"], [894, "create-incidence-matrix"], [855, "create-incidence-matrix"]], "find_neighbor_throats": [[1170, "find-neighbor-throats"], [1094, "find-neighbor-throats"], [1055, "find-neighbor-throats"], [1132, "find-neighbor-throats"], [1014, "find-neighbor-throats"], [976, "find-neighbor-throats"], [900, "find-neighbor-throats"], [938, "find-neighbor-throats"], [861, "find-neighbor-throats"]], "Voronoi": [[1158, "voronoi"]], "find_nearby_pores": [[1168, "find-nearby-pores"], [1130, "find-nearby-pores"], [1092, "find-nearby-pores"], [1053, "find-nearby-pores"], [974, "find-nearby-pores"], [1012, "find-nearby-pores"], [898, "find-nearby-pores"], [936, "find-nearby-pores"], [859, "find-nearby-pores"]], "num_neighbors": [[1142, "num-neighbors"], [1180, "num-neighbors"], [1065, "num-neighbors"], [1104, "num-neighbors"], [1026, "num-neighbors"], [986, "num-neighbors"], [871, "num-neighbors"], [948, "num-neighbors"], [910, "num-neighbors"]], "FaceCenteredCubic": [[1081, "facecenteredcubic"]], "Network": [[1120, "network"], [741, "id1"], [10, "network"], [6, "network"], [8, "network"]], "find_pore_hulls": [[1015, "find-pore-hulls"]], "find_throat_facets": [[1016, "find-throat-facets"]], "Demo": [[1042, "demo"]], "Delaunay": [[964, "delaunay"]], "DelaunayVoronoiDual": [[1002, "delaunayvoronoidual"]], "Cubic": [[887, "cubic"], [25, "cubic"]], "CubicTemplate": [[926, "cubictemplate"]], "gas_mixture_ce": [[767, "gas-mixture-ce"]], "network": [[847, "module-openpnm.network"], [741, "module-openpnm.models.network"], [584, "module-openpnm.models.collections.network"]], "natural_logarithm": [[841, "natural-logarithm"]], "gas_mixture_yweighted": [[771, "gas-mixture-yweighted"]], "gas_pure_gismr": [[792, "gas-pure-gismr"]], "source_terms": [[833, "module-openpnm.models.physics.source_terms"]], "water_correlation": [[789, "water-correlation"], [765, "water-correlation"], [807, "water-correlation"], [796, "water-correlation"], [800, "water-correlation"]], "thermal_conductance": [[844, "module-openpnm.models.physics.thermal_conductance"]], "multiphase": [[830, "module-openpnm.models.physics.multiphase"]], "gas_mixture_fesg": [[768, "gas-mixture-fesg"]], "viscosity": [[801, "module-openpnm.models.phase.viscosity"]], "mole_to_mass_fraction": [[777, "mole-to-mass-fraction"], [782, "mole-to-mass-fraction"]], "heat_capacity": [[770, "module-openpnm.models.phase.heat_capacity"]], "electrical_conductance": [[819, "module-openpnm.models.physics.electrical_conductance"]], "diffusive_conductance": [[814, "module-openpnm.models.physics.diffusive_conductance"]], "liquid_mixture_xweighted": [[805, "liquid-mixture-xweighted"], [773, "liquid-mixture-xweighted"]], "liquid_pure_antoine": [[798, "liquid-pure-antoine"]], "meniscus": [[826, "module-openpnm.models.physics.meniscus"]], "mole_summation": [[781, "mole-summation"]], "liquid_pure_COSTALD": [[763, "liquid-pure-costald"]], "natural_exponential": [[840, "natural-exponential"]], "series_resistors": [[846, "series-resistors"], [821, "series-resistors"]], "ad_dif_conductance": [[809, "module-openpnm.models.physics.ad_dif_conductance"]], "capillary_pressure": [[811, "module-openpnm.models.physics.capillary_pressure"]], "valvatne_blunt": [[825, "valvatne-blunt"]], "ad_dif": [[810, "ad-dif"]], "butler_volmer_voltage": [[835, "butler-volmer-voltage"]], "hagen_poiseuille": [[824, "hagen-poiseuille"]], "exponential": [[836, "exponential"]], "mix_and_match": [[776, "mix-and-match"]], "sinusoidal": [[829, "sinusoidal"]], "conduit_conductance": [[831, "conduit-conductance"]], "gas_pure_gesmr": [[803, "gas-pure-gesmr"]], "washburn": [[813, "washburn"]], "ideal_gas": [[761, "ideal-gas"]], "salinity": [[783, "salinity"]], "purcell": [[812, "purcell"], [828, "purcell"]], "physics": [[808, "module-openpnm.models.physics"], [591, "module-openpnm.models.collections.physics"]], "Physics": [[808, "id1"], [8, "physics"]], "mixing_rule": [[780, "mixing-rule"]], "gas_mixture_whz": [[791, "gas-mixture-whz"]], "surface_tension": [[786, "module-openpnm.models.phase.surface_tension"]], "liquid_pure_lk": [[799, "liquid-pure-lk"]], "general_symbolic": [[837, "general-symbolic"]], "misc": [[775, "module-openpnm.models.phase.misc"], [720, "module-openpnm.models.misc"]], "butler_volmer_conc": [[834, "butler-volmer-conc"]], "standard_kinetics": [[843, "standard-kinetics"]], "BodyCenteredCubic": [[848, "bodycenteredcubic"]], "logarithm": [[839, "logarithm"]], "thermal_conductivity": [[790, "module-openpnm.models.phase.thermal_conductivity"]], "linear": [[838, "linear"], [731, "linear"]], "mixtures": [[778, "module-openpnm.models.phase.mixtures"]], "gas_mixture_hz": [[802, "gas-mixture-hz"]], "liquid_pure_gismr": [[794, "liquid-pure-gismr"]], "generic_diffusive": [[815, "generic-diffusive"]], "from_component": [[779, "from-component"]], "density": [[760, "module-openpnm.models.phase.density"]], "liquid_mixture_wsd": [[787, "liquid-mixture-wsd"]], "liquid_pure_rp": [[774, "liquid-pure-rp"]], "general_toroidal": [[827, "general-toroidal"]], "generic_thermal": [[845, "generic-thermal"]], "liquid_mixture_DIPPR9H": [[793, "liquid-mixture-dippr9h"]], "generic_hydraulic": [[823, "generic-hydraulic"]], "liquid_pure_ls": [[806, "liquid-pure-ls"]], "taylor_aris_diffusion": [[818, "taylor-aris-diffusion"]], "mass_to_molar": [[764, "mass-to-molar"]], "gas_pure_st": [[804, "gas-pure-st"]], "liquid_pure_bb": [[788, "liquid-pure-bb"]], "liquid_pure_sr": [[795, "liquid-pure-sr"]], "ordinary_diffusion": [[817, "ordinary-diffusion"]], "hydraulic_conductance": [[822, "module-openpnm.models.physics.hydraulic_conductance"]], "late_filling": [[832, "late-filling"]], "gas_pure_TRC": [[772, "gas-pure-trc"]], "diffusivity": [[766, "module-openpnm.models.phase.diffusivity"]], "power_law": [[842, "power-law"]], "generic_electrical": [[820, "generic-electrical"]], "liquid_mixture_COSTALD": [[762, "liquid-mixture-costald"]], "liquid_mixture_tc": [[769, "liquid-mixture-tc"]], "gaseous_species_in_water": [[785, "gaseous-species-in-water"]], "vapor_pressure": [[797, "module-openpnm.models.phase.vapor_pressure"]], "mixed_diffusion": [[816, "mixed-diffusion"]], "partition_coefficient": [[784, "module-openpnm.models.phase.partition_coefficient"]], "from_neighbor_pores": [[701, "from-neighbor-pores"], [726, "from-neighbor-pores"], [697, "from-neighbor-pores"]], "cuboid": [[714, "cuboid"], [707, "cuboid"], [693, "cuboid"], [673, "cuboid"]], "isolated_pores": [[753, "isolated-pores"]], "throat_perimeter": [[692, "module-openpnm.models.geometry.throat_perimeter"]], "Throat Perimeter Models": [[692, "throat-perimeter-models"]], "find_coincident_pores": [[751, "find-coincident-pores"]], "extrusion": [[709, "extrusion"], [716, "extrusion"]], "throat_size": [[699, "module-openpnm.models.geometry.throat_size"]], "Throat Size Models": [[699, "throat-size-models"]], "normal": [[733, "normal"], [703, "normal"], [653, "normal"]], "critical_props": [[759, "module-openpnm.models.phase.critical_props"]], "throat_surface_area": [[706, "module-openpnm.models.geometry.throat_surface_area"]], "Throat Surface Area Models": [[706, "throat-surface-area-models"]], "pore_to_pore": [[712, "pore-to-pore"]], "fraction": [[725, "fraction"]], "distance_to_nearest_neighbor": [[748, "distance-to-nearest-neighbor"]], "rectangle": [[675, "rectangle"], [710, "rectangle"], [695, "rectangle"], [719, "rectangle"]], "random": [[737, "random"], [704, "random"], [698, "random"], [646, "random"], [654, "random"]], "cylinder": [[694, "cylinder"], [674, "cylinder"], [715, "cylinder"], [708, "cylinder"]], "square": [[666, "square"], [644, "square"], [660, "square"]], "trapezoids_and_rectangles": [[691, "trapezoids-and-rectangles"], [583, "trapezoids-and-rectangles"], [638, "trapezoids-and-rectangles"], [608, "trapezoids-and-rectangles"], [623, "trapezoids-and-rectangles"]], "coordination_number": [[745, "coordination-number"]], "normalize": [[734, "normalize"]], "generic_distribution": [[702, "generic-distribution"], [728, "generic-distribution"], [651, "generic-distribution"]], "polynomial": [[735, "polynomial"]], "pyramids_and_cuboids": [[688, "pyramids-and-cuboids"], [635, "pyramids-and-cuboids"], [620, "pyramids-and-cuboids"], [580, "pyramids-and-cuboids"], [605, "pyramids-and-cuboids"]], "clip": [[722, "clip"]], "weibull": [[705, "weibull"], [740, "weibull"], [655, "weibull"]], "mason_morrow": [[669, "mason-morrow"]], "bidirectional_throats": [[742, "bidirectional-throats"]], "equivalent_diameter": [[700, "equivalent-diameter"], [649, "equivalent-diameter"]], "throat_volume": [[713, "module-openpnm.models.geometry.throat_volume"]], "Throat Volume Models": [[713, "throat-volume-models"]], "generic_function": [[729, "generic-function"]], "constant": [[723, "constant"]], "spheres_and_cylinders": [[677, "spheres-and-cylinders"], [689, "spheres-and-cylinders"], [621, "spheres-and-cylinders"], [636, "spheres-and-cylinders"], [581, "spheres-and-cylinders"], [606, "spheres-and-cylinders"]], "throat_seed": [[696, "module-openpnm.models.geometry.throat_seed"]], "Throat Seed Models": [[696, "throat-seed-models"]], "pendular_ring": [[718, "pendular-ring"]], "distance_to_furthest_neighbor": [[747, "distance-to-furthest-neighbor"]], "throat_endpoints": [[676, "module-openpnm.models.geometry.throat_endpoints"]], "headless_throats": [[752, "headless-throats"]], "intersecting_cones": [[685, "intersecting-cones"], [602, "intersecting-cones"], [631, "intersecting-cones"], [616, "intersecting-cones"]], "throat_length": [[678, "module-openpnm.models.geometry.throat_length"]], "Throat Length Models": [[678, "throat-length-models"]], "cluster_size": [[744, "cluster-size"]], "throat_cross_sectional_area": [[672, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "Throat Cross-sectional Area Models": [[672, "throat-cross-sectional-area-models"]], "cubes_and_cuboids": [[681, "cubes-and-cuboids"], [598, "cubes-and-cuboids"], [627, "cubes-and-cuboids"], [612, "cubes-and-cuboids"], [579, "cubes-and-cuboids"]], "hybrid_cones_and_cylinders": [[682, "hybrid-cones-and-cylinders"], [613, "hybrid-cones-and-cylinders"], [599, "hybrid-cones-and-cylinders"], [628, "hybrid-cones-and-cylinders"]], "Miscellaneous": [[720, "miscellaneous"]], "throat_capillary_shape_factor": [[667, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "Throat Capillary Shape Factor Models": [[667, "throat-capillary-shape-factor-models"]], "sphere": [[665, "sphere"], [659, "sphere"], [643, "sphere"]], "throat_vector": [[711, "module-openpnm.models.geometry.throat_vector"]], "Throat Vector Model": [[711, "throat-vector-model"]], "looped_throats": [[754, "looped-throats"]], "lens": [[717, "lens"]], "invert": [[730, "invert"]], "chemicals_wrapper": [[758, "chemicals-wrapper"]], "intersecting_trapezoids": [[687, "intersecting-trapezoids"], [633, "intersecting-trapezoids"], [604, "intersecting-trapezoids"], [618, "intersecting-trapezoids"]], "pore_to_pore_distance": [[755, "pore-to-pore-distance"]], "reversed_throats": [[756, "reversed-throats"]], "count_coincident_pores": [[746, "count-coincident-pores"]], "product": [[736, "product"]], "scaled": [[738, "scaled"]], "pore_coords": [[671, "pore-coords"]], "summation": [[739, "summation"]], "jenkins_rao": [[668, "jenkins-rao"]], "match_histogram": [[732, "match-histogram"]], "distance_to_nearest_pore": [[749, "distance-to-nearest-pore"]], "intersecting_pyramids": [[686, "intersecting-pyramids"], [632, "intersecting-pyramids"], [603, "intersecting-pyramids"], [617, "intersecting-pyramids"]], "blank": [[721, "blank"]], "from_neighbor_throats": [[727, "from-neighbor-throats"], [650, "from-neighbor-throats"]], "cones_and_cylinders": [[680, "cones-and-cylinders"], [597, "cones-and-cylinders"], [611, "cones-and-cylinders"], [626, "cones-and-cylinders"], [578, "cones-and-cylinders"]], "cluster_number": [[743, "cluster-number"]], "squares_and_rectangles": [[690, "squares-and-rectangles"], [622, "squares-and-rectangles"], [637, "squares-and-rectangles"], [607, "squares-and-rectangles"], [582, "squares-and-rectangles"]], "circles_and_rectangles": [[679, "circles-and-rectangles"], [596, "circles-and-rectangles"], [577, "circles-and-rectangles"], [625, "circles-and-rectangles"], [610, "circles-and-rectangles"]], "throat_centroid": [[670, "module-openpnm.models.geometry.throat_centroid"]], "Throat Centroid Model": [[670, "throat-centroid-model"]], "hybrid_pyramids_and_cuboids": [[683, "hybrid-pyramids-and-cuboids"], [629, "hybrid-pyramids-and-cuboids"], [600, "hybrid-pyramids-and-cuboids"], [614, "hybrid-pyramids-and-cuboids"]], "hybrid_trapezoids_and_rectangles": [[684, "hybrid-trapezoids-and-rectangles"], [601, "hybrid-trapezoids-and-rectangles"], [615, "hybrid-trapezoids-and-rectangles"], [630, "hybrid-trapezoids-and-rectangles"]], "duplicate_throats": [[750, "duplicate-throats"]], "liquid": [[588, "module-openpnm.models.collections.phase.liquid"]], "pore_size": [[648, "module-openpnm.models.geometry.pore_size"]], "Pore Size Models": [[648, "pore-size-models"]], "water": [[590, "water"]], "project_to_pandas": [[570, "project-to-pandas"]], "diffusive_size_factors": [[609, "module-openpnm.models.geometry.diffusive_size_factors"]], "Diffusive Size Factors Models": [[609, "diffusive-size-factors-models"]], "largest_sphere": [[652, "largest-sphere"]], "air": [[586, "air"]], "geometry": [[576, "module-openpnm.models.collections.geometry"], [594, "module-openpnm.models.geometry"]], "standard": [[593, "standard"]], "Network Models Collections": [[584, "network-models-collections"]], "ncylinders_in_series": [[634, "ncylinders-in-series"], [619, "ncylinders-in-series"]], "cube": [[642, "cube"], [658, "cube"], [663, "cube"]], "project_to_vtk": [[572, "project-to-vtk"]], "effective": [[664, "effective"]], "pore_cross_sectional_area": [[639, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "Pore Cross-sectional Area Models": [[639, "pore-cross-sectional-area-models"]], "collections": [[575, "module-openpnm.models.collections"]], "circle": [[657, "circle"], [662, "circle"], [640, "circle"]], "mercury": [[589, "mercury"]], "project_to_xdmf": [[573, "project-to-xdmf"]], "gas": [[587, "module-openpnm.models.collections.phase.gas"]], "conduit_lengths": [[595, "module-openpnm.models.geometry.conduit_lengths"]], "Conduit Lengths Models": [[595, "conduit-lengths-models"]], "pore_volume": [[661, "module-openpnm.models.geometry.pore_volume"]], "Pore Volume Models": [[661, "pore-volume-models"]], "Geometry": [[594, "id1"], [6, "geometry"], [8, "geometry"]], "spatially_correlated": [[647, "spatially-correlated"]], "pore_seed": [[645, "module-openpnm.models.geometry.pore_seed"]], "Pore Seed Models": [[645, "pore-seed-models"]], "cone": [[641, "cone"]], "pore_surface_area": [[656, "module-openpnm.models.geometry.pore_surface_area"]], "Pore Surface Area Models": [[656, "pore-surface-area-models"]], "project_to_paraview": [[571, "project-to-paraview"]], "basic": [[592, "basic"]], "models": [[574, "module-openpnm.models"]], "Collection of pore-scale models": [[574, "collection-of-pore-scale-models"]], "hydraulic_size_factors": [[624, "module-openpnm.models.geometry.hydraulic_size_factors"]], "Hydraulic Size Factors Models": [[624, "hydraulic-size-factors-models"]], "ModelsDict": [[525, "modelsdict"]], "dependency_graph": [[528, "dependency-graph"]], "network_from_csv": [[551, "network-from-csv"]], "network_to_pandas": [[562, "network-to-pandas"]], "integrators": [[546, "module-openpnm.integrators"]], "Collection of ODE integrators for transient simulations": [[546, "collection-of-ode-integrators-for-transient-simulations"]], "LabelMixin": [[504, "labelmixin"]], "network_to_pergeos": [[563, "network-to-pergeos"]], "dependency_list": [[529, "dependency-list"]], "print_hdf5": [[566, "print-hdf5"]], "ModelWrapper": [[512, "modelwrapper"]], "project_to_dict": [[568, "project-to-dict"]], "network_to_stl": [[565, "network-to-stl"]], "network_to_salome": [[564, "network-to-salome"]], "network_from_marock": [[553, "network-from-marock"]], "ParserMixin": [[545, "parsermixin"]], "network_from_jsongraph": [[552, "network-from-jsongraph"]], "project_to_hdf5": [[569, "project-to-hdf5"]], "project_to_csv": [[567, "project-to-csv"]], "dependency_map": [[530, "dependency-map"]], "io": [[550, "module-openpnm.io"]], "Collection of functions for import/export of  data": [[550, "collection-of-functions-for-import-export-of-data"]], "network_to_csv": [[559, "network-to-csv"]], "network_from_networkx": [[554, "network-from-networkx"]], "network_to_comsol": [[558, "network-to-comsol"]], "ModelsMixin2": [[540, "modelsmixin2"]], "network_to_jsongraph": [[560, "network-to-jsongraph"]], "ScipyRK45": [[548, "scipyrk45"]], "network_from_statoil": [[557, "network-from-statoil"]], "network_from_pergeos": [[555, "network-from-pergeos"]], "Integrator": [[547, "integrator"]], "network_to_networkx": [[561, "network-to-networkx"]], "Domain": [[476, "domain"]], "network_from_porespy": [[556, "network-from-porespy"]], "TransientReactiveTransport": [[393, "transientreactivetransport"]], "core": [[458, "module-openpnm.core"]], "Main classes of OpenPNM": [[458, "main-classes-of-openpnm"]], "The Base class": [[458, "the-base-class"]], "The ModelsMixin class": [[458, "the-modelsmixin-class"]], "Transport": [[426, "transport"]], "Base2": [[459, "base2"]], "TransientAdvectionDiffusion": [[326, "transientadvectiondiffusion"]], "TransientFickianDiffusion": [[360, "transientfickiandiffusion"]], "set_outflow_BC": [[350, "set-outflow-bc"], [61, "set-outflow-bc"]], "StokesFlow": [[293, "stokesflow"]], "ReactiveTransport": [[260, "reactivetransport"]], "OhmicConduction": [[227, "ohmicconduction"]], "InvasionPercolation": [[195, "invasionpercolation"]], "Size Factors and Transport Conductance": [[22, "size-factors-and-transport-conductance"]], "Conductance in pore network models": [[22, "conductance-in-pore-network-models"]], "Conductance of a single conduit": [[22, "conductance-of-a-single-conduit"]], "Size factors vs. shape factors": [[22, "size-factors-vs-shape-factors"]], "Built-in size factor models in OpenPNM": [[22, "built-in-size-factor-models-in-openpnm"]], "Deriving the size factor for arbitrary-shaped pores and throats": [[22, "deriving-the-size-factor-for-arbitrary-shaped-pores-and-throats"]], "Diffusive size factor": [[22, "diffusive-size-factor"]], "Hydraulic size factor": [[22, "hydraulic-size-factor"]], "Conduit vs. element size factor": [[22, "conduit-vs-element-size-factor"]], "Contibuted Examples": [[14, "contibuted-examples"]], "Using Labels and Defining Domains": [[29, "using-labels-and-defining-domains"]], "Using Predefined Labels": [[29, "using-predefined-labels"]], "The pores and throats methods": [[29, "the-pores-and-throats-methods"]], "Using the mode argument in the pores and throats methods": [[29, "using-the-mode-argument-in-the-pores-and-throats-methods"]], "Defining Custom Labels": [[29, "defining-custom-labels"]], "Creating Boolean Masks": [[29, "creating-boolean-masks"]], "Using set_label": [[29, "using-set-label"]], "Using the @ sytax to read and write data": [[29, "using-the-sytax-to-read-and-write-data"]], "Defining Subdomains": [[29, "defining-subdomains"]], "Defining and Changing Subdomain Locations": [[29, "defining-and-changing-subdomain-locations"]], "Mixing Full Domain and Subdomain Models": [[29, "mixing-full-domain-and-subdomain-models"]], "Mixing Many Subdomains of Different Shape": [[29, "mixing-many-subdomains-of-different-shape"]], "Pore-Scale Models": [[15, "pore-scale-models"]], "Basic Usage": [[4, "basic-usage"]], "Problem setup": [[4, "problem-setup"]], "Basic visualization": [[4, "basic-visualization"]], "Calculating permeability": [[4, "calculating-permeability"]], "Adjusting pore size distribution": [[4, "adjusting-pore-size-distribution"]], "Predicting dispersion coefficient": [[7, "predicting-dispersion-coefficient"]], "Generating Network and phase": [[7, "generating-network-and-phase"]], "Defining Effective Pore Volume": [[7, "defining-effective-pore-volume"]], "Perform Stokes flow": [[7, "perform-stokes-flow"]], "Apply transient advection diffusion": [[7, "apply-transient-advection-diffusion"]], "Elution curve": [[7, "elution-curve"]], "Solving for the dispersion coefficient": [[7, "solving-for-the-dispersion-coefficient"]], "Simulating Single Phase Transport": [[31, "simulating-single-phase-transport"]], "Define Phase Viscosity": [[31, "define-phase-viscosity"]], "Basic Conductance Calculation": [[31, "basic-conductance-calculation"]], "Create Algorithm Object": [[31, "create-algorithm-object"]], "Assign Boundary Conditions": [[31, "assign-boundary-conditions"]], "Rigorous Conductance Calculation": [[31, "rigorous-conductance-calculation"]], "Manual Method": [[31, "manual-method"]], "Pore-Scale Model Method": [[31, "pore-scale-model-method"]], "The Workspace and Projects": [[17, "the-workspace-and-projects"]], "Usage of Projects and Workspace": [[17, "usage-of-projects-and-workspace"]], "Workspace is a Singleton": [[17, "workspace-is-a-singleton"]], "One Network per Project": [[17, "one-network-per-project"]], "Simulating Invasion": [[32, "simulating-invasion"]], "Manual Implementation of the Drainge Process": [[32, "manual-implementation-of-the-drainge-process"]], "Using the Drainage Algorithm": [[32, "using-the-drainage-algorithm"]], "Invasion Percolation": [[32, "invasion-percolation"]], "Manual Implementation of the Invasion Percolation Process": [[32, "manual-implementation-of-the-invasion-percolation-process"]], "Using the InvasionPercolation Algorithm": [[32, "using-the-invasionpercolation-algorithm"]], "Predicting relative permeability": [[13, "predicting-relative-permeability"]], "Create network and phases": [[13, "create-network-and-phases"], [12, "create-network-and-phases"]], "Apply invasion percolation": [[13, "apply-invasion-percolation"]], "Occupancy and permeability functions": [[13, "occupancy-and-permeability-functions"]], "Define multiphase conductance": [[13, "define-multiphase-conductance"], [12, "define-multiphase-conductance"]], "Calculate relative permeabilities": [[13, "calculate-relative-permeabilities"]], "Predicting Porosity": [[11, "predicting-porosity"]], "Create a random cubic network": [[11, "create-a-random-cubic-network"], [5, "create-a-random-cubic-network"]], "Calculate void and bulk volume": [[11, "calculate-void-and-bulk-volume"]], "Discussions and Issues": [[11, "discussions-and-issues"]], "Domain volume:": [[11, "domain-volume"]], "Overlapping pores and throats:": [[11, "overlapping-pores-and-throats"]], "Extracted networks": [[11, "extracted-networks"]], "Void volume:": [[11, "void-volume"]], "Network Representation, Queries, and Manipulation": [[27, "network-representation-queries-and-manipulation"]], "The Adjacency Matrix": [[27, "the-adjacency-matrix"]], "COO Sparse Format": [[27, "coo-sparse-format"]], "Other Sparse Formats": [[27, "other-sparse-formats"]], "The Incidence Matrix": [[27, "the-incidence-matrix"]], "Using OpenPNM Methods Query Methods": [[27, "using-openpnm-methods-query-methods"]], "Find Neighoring Pores": [[27, "find-neighoring-pores"]], "Find Neighboring Throats": [[27, "find-neighboring-throats"]], "Find Connecting Throats": [[27, "find-connecting-throats"]], "Find Connected Pores": [[27, "find-connected-pores"]], "Removing Throats": [[27, "removing-throats"]], "Removing Pores": [[27, "removing-pores"]], "Adding Pores and Throats": [[27, "adding-pores-and-throats"]], "AdvectionDiffusion": [[37, "advectiondiffusion"]], "Examples": [[1, "examples"]], "Steady State Transport": [[19, "steady-state-transport"]], "Creating the Coefficient Matrix": [[19, "creating-the-coefficient-matrix"]], "Applying Value and Rate Boundary Conditions": [[19, "applying-value-and-rate-boundary-conditions"]], "Solving the System of Equations": [[19, "solving-the-system-of-equations"]], "Sparse Matrices": [[19, "sparse-matrices"]], "Installation": [[35, "installation"]], "Installing the dev version": [[35, "installing-the-dev-version"]], "The easy way": [[35, "the-easy-way"]], "The hard (but correct) way": [[35, "the-hard-but-correct-way"]], "Where\u2019s my conda prompt?": [[35, "where-s-my-conda-prompt"]], "Windows": [[35, "windows"]], "Mac and Linux": [[35, "mac-and-linux"]], "Explanation of Units": [[20, "explanation-of-units"]], "Use of absolute pressure vs gauge pressure": [[20, "use-of-absolute-pressure-vs-gauge-pressure"]], "Unit conversion packages and challenges": [[20, "unit-conversion-packages-and-challenges"]], "Generating Networks and Quick Visualization": [[25, "generating-networks-and-quick-visualization"]], "CubicTemplates": [[25, "cubictemplates"]], "Other Cubic Lattices": [[25, "other-cubic-lattices"]], "Random Network: Delaunay and Voronoi Tessellations": [[25, "random-network-delaunay-and-voronoi-tessellations"]], "Imported Networks": [[25, "imported-networks"]], "Simulating Mercury Intrusion Porosimetry Curves": [[10, "simulating-mercury-intrusion-porosimetry-curves"]], "Add Geometry": [[10, "add-geometry"]], "Add Physics": [[10, "add-physics"]], "Perform Mercury Intrusion": [[10, "perform-mercury-intrusion"]], "Reactive Transport": [[21, "reactive-transport"]], "Using the source term functionality in OpenPNM": [[21, "using-the-source-term-functionality-in-openpnm"]], "How the source-term functionality works": [[21, "how-the-source-term-functionality-works"]], "Numerical Python Primer": [[24, "numerical-python-primer"]], "Python Lists: Flexible but Slow": [[24, "python-lists-flexible-but-slow"]], "Numpy ndarray: Optimized for Numerics": [[24, "numpy-ndarray-optimized-for-numerics"]], "Vectorization": [[24, "vectorization"]], "Methods versus Functions": [[24, "methods-versus-functions"]], "Dictionaries: Holding Things Together": [[24, "dictionaries-holding-things-together"]], "Subclassing dict": [[24, "subclassing-dict"]], "Algorithm": [[71, "algorithm"]], "Transient Transport": [[23, "transient-transport"]], "10 Steps to Learn OpenPNM": [[3, "steps-to-learn-openpnm"]], "Obtaining Relative Diffusivity Curves": [[12, "obtaining-relative-diffusivity-curves"]], "Apply ordinary percolation": [[12, "apply-ordinary-percolation"]], "Saturation and rate functions": [[12, "saturation-and-rate-functions"]], "Calculate relative diffusivities": [[12, "calculate-relative-diffusivities"]], "Adjusting Pore Size Distributions": [[6, "adjusting-pore-size-distributions"]], "Adjusting Pore and Throat Sizes": [[6, "adjusting-pore-and-throat-sizes"]], "Using scipy.stats classes directly": [[6, "using-scipy-stats-classes-directly"]], "Using pre-defined models in OpenPNM": [[6, "using-pre-defined-models-in-openpnm"]], "Creating Phases": [[30, "creating-phases"]], "Part 1: The Phase class": [[30, "part-1-the-phase-class"]], "Direct assignment of a constant value": [[30, "direct-assignment-of-a-constant-value"]], "Using a built-in model": [[30, "using-a-built-in-model"]], "Using a water-specific model": [[30, "using-a-water-specific-model"]], "Writing your own custom model": [[30, "writing-your-own-custom-model"]], "Specific Classes for Common Fluids": [[30, "specific-classes-for-common-fluids"]], "Part 2: Using Species and Mixtures": [[30, "part-2-using-species-and-mixtures"]], "Pure Species": [[30, "pure-species"]], "Gas and Liquid Species": [[30, "gas-and-liquid-species"]], "Gas and Liquid Mixtures": [[30, "gas-and-liquid-mixtures"]], "Getting and Setting Compositions": [[30, "getting-and-setting-compositions"]], "Exploring Features of the Mixture Objects": [[30, "exploring-features-of-the-mixture-objects"]], "Adding and Removing Species": [[30, "adding-and-removing-species"]], "The info Attribute": [[30, "the-info-attribute"]], "Get component mole fractions": [[30, "get-component-mole-fractions"]], "The components Attribute": [[30, "the-components-attribute"]], "Using get_comp_vals": [[30, "using-get-comp-vals"]], "Checking consistency with check_mixture_health": [[30, "checking-consistency-with-check-mixture-health"]], "Retrieving Species Properties": [[30, "retrieving-species-properties"]], "Using the wildcard (*) syntax": [[30, "using-the-wildcard-syntax"]], "Assigning Geometric Properties": [[28, "assigning-geometric-properties"]], "Manually Calculating Properties": [[28, "manually-calculating-properties"]], "Adding pore and throat sizes from scipy.stats distributions": [[28, "adding-pore-and-throat-sizes-from-scipy-stats-distributions"]], "Computing throat length": [[28, "computing-throat-length"]], "Computing pore surface areas": [[28, "computing-pore-surface-areas"]], "Using Pore-scale Models from the Library": [[28, "using-pore-scale-models-from-the-library"]], "Using Predefined Collections of Models": [[28, "using-predefined-collections-of-models"]], "Customizing Models by Overwriting Them or Their Arguments": [[28, "customizing-models-by-overwriting-them-or-their-arguments"]], "Introduction to the Dependency Handler": [[28, "introduction-to-the-dependency-handler"]], "Finding Effective Diffusivity and Tortuosity of a Network": [[8, "finding-effective-diffusivity-and-tortuosity-of-a-network"]], "Performing Fickian Diffusion": [[8, "performing-fickian-diffusion"]], "Visualize the Results": [[8, "visualize-the-results"]], "Calculate the Effective Diffusivity": [[8, "calculate-the-effective-diffusivity"]], "Calculate the Tortuosity": [[8, "calculate-the-tortuosity"]], "Visualization options": [[33, "visualization-options"]], "Spyder": [[33, "spyder"]], "Interactive plots in Jupyter notebook": [[33, "interactive-plots-in-jupyter-notebook"]], "Paraview": [[33, "paraview"]], "Storage of Network Data and Topology": [[26, "storage-of-network-data-and-topology"]], "Spreadsheet Analogy": [[26, "spreadsheet-analogy"]], "Rules to Maintain Data Integrity": [[26, "rules-to-maintain-data-integrity"]], "All Values are Converted to Numpy Arrays": [[26, "all-values-are-converted-to-numpy-arrays"]], "Dictionary Keys Must Start With \u2018pore\u2019 or \u2018throat\u2019": [[26, "dictionary-keys-must-start-with-pore-or-throat"]], "Any Scalars are Expanded to a Full-Length Vector": [[26, "any-scalars-are-expanded-to-a-full-length-vector"]], "Nested Dictionary Names are Allowed": [[26, "nested-dictionary-names-are-allowed"]], "Boolean Arrays are Treated as Labels, Numerical Arrays are Treated as Properties": [[26, "boolean-arrays-are-treated-as-labels-numerical-arrays-are-treated-as-properties"]], "Dictionary Keys with a Leading Underscore are Hidden": [[26, "dictionary-keys-with-a-leading-underscore-are-hidden"]], "The param prefix": [[26, "the-param-prefix"]], "Representing Topology": [[26, "representing-topology"]], "Adjacency Matrices: Dense vs Sparse": [[26, "adjacency-matrices-dense-vs-sparse"]], "conduit data": [[26, "conduit-data"]], "Pore Network Modeling Framework in Python": [[34, "pore-network-modeling-framework-in-python"]], "What is OpenPNM? stars": [[34, "what-is-openpnm-stars"]], "How To Cite": [[34, "how-to-cite"]], "Citation": [[34, null]], "Available Matrix Solvers": [[18, "available-matrix-solvers"]], "Predicting absolute permeability": [[5, "predicting-absolute-permeability"]], "Create phase object": [[5, "create-phase-object"]], "Apply Stokes flow": [[5, "apply-stokes-flow"]], "Calculate permeability": [[5, "calculate-permeability"]], "Reference": [[2, "reference"]], "Applications": [[0, "applications"]], "Settings Attribute Machinery": [[16, "settings-attribute-machinery"]], "Predicting Formation Factor": [[9, "predicting-formation-factor"]], "Create Network": [[9, "create-network"]], "Create Phase": [[9, "create-phase"]], "Apply Fickian Diffusion": [[9, "apply-fickian-diffusion"]], "Visualize Results": [[9, "visualize-results"]], "Calculate Formation Factor": [[9, "calculate-formation-factor"]], "algorithms": [[36, "module-openpnm.algorithms"]]}, "indexentries": {"module": [[36, "module-openpnm.algorithms"], [458, "module-openpnm.core"], [546, "module-openpnm.integrators"], [550, "module-openpnm.io"], [574, "module-openpnm.models"], [575, "module-openpnm.models.collections"], [576, "module-openpnm.models.collections.geometry"], [584, "module-openpnm.models.collections.network"], [585, "module-openpnm.models.collections.phase"], [587, "module-openpnm.models.collections.phase.gas"], [588, "module-openpnm.models.collections.phase.liquid"], [591, "module-openpnm.models.collections.physics"], [594, "module-openpnm.models.geometry"], [595, "module-openpnm.models.geometry.conduit_lengths"], [609, "module-openpnm.models.geometry.diffusive_size_factors"], [624, "module-openpnm.models.geometry.hydraulic_size_factors"], [639, "module-openpnm.models.geometry.pore_cross_sectional_area"], [645, "module-openpnm.models.geometry.pore_seed"], [648, "module-openpnm.models.geometry.pore_size"], [656, "module-openpnm.models.geometry.pore_surface_area"], [661, "module-openpnm.models.geometry.pore_volume"], [667, "module-openpnm.models.geometry.throat_capillary_shape_factor"], [670, "module-openpnm.models.geometry.throat_centroid"], [672, "module-openpnm.models.geometry.throat_cross_sectional_area"], [676, "module-openpnm.models.geometry.throat_endpoints"], [678, "module-openpnm.models.geometry.throat_length"], [692, "module-openpnm.models.geometry.throat_perimeter"], [696, "module-openpnm.models.geometry.throat_seed"], [699, "module-openpnm.models.geometry.throat_size"], [706, "module-openpnm.models.geometry.throat_surface_area"], [711, "module-openpnm.models.geometry.throat_vector"], [713, "module-openpnm.models.geometry.throat_volume"], [720, "module-openpnm.models.misc"], [741, "module-openpnm.models.network"], [757, "module-openpnm.models.phase"], [759, "module-openpnm.models.phase.critical_props"], [760, "module-openpnm.models.phase.density"], [766, "module-openpnm.models.phase.diffusivity"], [770, "module-openpnm.models.phase.heat_capacity"], [775, "module-openpnm.models.phase.misc"], [778, "module-openpnm.models.phase.mixtures"], [784, "module-openpnm.models.phase.partition_coefficient"], [786, "module-openpnm.models.phase.surface_tension"], [790, "module-openpnm.models.phase.thermal_conductivity"], [797, "module-openpnm.models.phase.vapor_pressure"], [801, "module-openpnm.models.phase.viscosity"], [808, "module-openpnm.models.physics"], [809, "module-openpnm.models.physics.ad_dif_conductance"], [811, "module-openpnm.models.physics.capillary_pressure"], [814, "module-openpnm.models.physics.diffusive_conductance"], [819, "module-openpnm.models.physics.electrical_conductance"], [822, "module-openpnm.models.physics.hydraulic_conductance"], [826, "module-openpnm.models.physics.meniscus"], [830, "module-openpnm.models.physics.multiphase"], [833, "module-openpnm.models.physics.source_terms"], [844, "module-openpnm.models.physics.thermal_conductance"], [847, "module-openpnm.network"], [1196, "module-openpnm.phase"], [1596, "module-openpnm.solvers"], [1611, "module-openpnm.topotools"], [1660, "module-openpnm.utils"], [1808, "module-openpnm"]], "openpnm.algorithms": [[36, "module-openpnm.algorithms"]], "advectiondiffusion (class in openpnm.algorithms)": [[37, "openpnm.algorithms.AdvectionDiffusion"]], "clear() (advectiondiffusion method)": [[38, "openpnm.algorithms.AdvectionDiffusion.clear"]], "clear_bcs() (advectiondiffusion method)": [[39, "openpnm.algorithms.AdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (advectiondiffusion method)": [[40, "openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (advectiondiffusion method)": [[41, "openpnm.algorithms.AdvectionDiffusion.clear_value_BCs"]], "copy() (advectiondiffusion method)": [[42, "openpnm.algorithms.AdvectionDiffusion.copy"]], "filter_by_label() (advectiondiffusion method)": [[43, "openpnm.algorithms.AdvectionDiffusion.filter_by_label"]], "fromkeys() (advectiondiffusion method)": [[44, "openpnm.algorithms.AdvectionDiffusion.fromkeys"]], "get() (advectiondiffusion method)": [[45, "openpnm.algorithms.AdvectionDiffusion.get"]], "get_conduit_data() (advectiondiffusion method)": [[46, "openpnm.algorithms.AdvectionDiffusion.get_conduit_data"]], "interpolate_data() (advectiondiffusion method)": [[47, "openpnm.algorithms.AdvectionDiffusion.interpolate_data"]], "items() (advectiondiffusion method)": [[48, "openpnm.algorithms.AdvectionDiffusion.items"]], "keys() (advectiondiffusion method)": [[49, "openpnm.algorithms.AdvectionDiffusion.keys"]], "labels() (advectiondiffusion method)": [[50, "openpnm.algorithms.AdvectionDiffusion.labels"]], "num_pores() (advectiondiffusion method)": [[51, "openpnm.algorithms.AdvectionDiffusion.num_pores"]], "num_throats() (advectiondiffusion method)": [[52, "openpnm.algorithms.AdvectionDiffusion.num_throats"]], "pop() (advectiondiffusion method)": [[53, "openpnm.algorithms.AdvectionDiffusion.pop"]], "popitem() (advectiondiffusion method)": [[54, "openpnm.algorithms.AdvectionDiffusion.popitem"]], "pores() (advectiondiffusion method)": [[55, "openpnm.algorithms.AdvectionDiffusion.pores"]], "props() (advectiondiffusion method)": [[56, "openpnm.algorithms.AdvectionDiffusion.props"]], "rate() (advectiondiffusion method)": [[57, "openpnm.algorithms.AdvectionDiffusion.rate"]], "run() (advectiondiffusion method)": [[58, "openpnm.algorithms.AdvectionDiffusion.run"]], "set_bc() (advectiondiffusion method)": [[59, "openpnm.algorithms.AdvectionDiffusion.set_BC"]], "set_label() (advectiondiffusion method)": [[60, "openpnm.algorithms.AdvectionDiffusion.set_label"]], "set_outflow_bc() (advectiondiffusion method)": [[61, "openpnm.algorithms.AdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (advectiondiffusion method)": [[62, "openpnm.algorithms.AdvectionDiffusion.set_rate_BC"]], "set_source() (advectiondiffusion method)": [[63, "openpnm.algorithms.AdvectionDiffusion.set_source"]], "set_value_bc() (advectiondiffusion method)": [[64, "openpnm.algorithms.AdvectionDiffusion.set_value_BC"]], "setdefault() (advectiondiffusion method)": [[65, "openpnm.algorithms.AdvectionDiffusion.setdefault"]], "throats() (advectiondiffusion method)": [[66, "openpnm.algorithms.AdvectionDiffusion.throats"]], "to_indices() (advectiondiffusion method)": [[67, "openpnm.algorithms.AdvectionDiffusion.to_indices"]], "to_mask() (advectiondiffusion method)": [[68, "openpnm.algorithms.AdvectionDiffusion.to_mask"]], "update() (advectiondiffusion method)": [[69, "openpnm.algorithms.AdvectionDiffusion.update"]], "values() (advectiondiffusion method)": [[70, "openpnm.algorithms.AdvectionDiffusion.values"]], "algorithm (class in openpnm.algorithms)": [[71, "openpnm.algorithms.Algorithm"]], "clear() (algorithm method)": [[72, "openpnm.algorithms.Algorithm.clear"]], "clear_bcs() (algorithm method)": [[73, "openpnm.algorithms.Algorithm.clear_BCs"]], "copy() (algorithm method)": [[74, "openpnm.algorithms.Algorithm.copy"]], "filter_by_label() (algorithm method)": [[75, "openpnm.algorithms.Algorithm.filter_by_label"]], "fromkeys() (algorithm method)": [[76, "openpnm.algorithms.Algorithm.fromkeys"]], "get() (algorithm method)": [[77, "openpnm.algorithms.Algorithm.get"]], "get_conduit_data() (algorithm method)": [[78, "openpnm.algorithms.Algorithm.get_conduit_data"]], "interpolate_data() (algorithm method)": [[79, "openpnm.algorithms.Algorithm.interpolate_data"]], "items() (algorithm method)": [[80, "openpnm.algorithms.Algorithm.items"]], "keys() (algorithm method)": [[81, "openpnm.algorithms.Algorithm.keys"]], "labels() (algorithm method)": [[82, "openpnm.algorithms.Algorithm.labels"]], "num_pores() (algorithm method)": [[83, "openpnm.algorithms.Algorithm.num_pores"]], "num_throats() (algorithm method)": [[84, "openpnm.algorithms.Algorithm.num_throats"]], "pop() (algorithm method)": [[85, "openpnm.algorithms.Algorithm.pop"]], "popitem() (algorithm method)": [[86, "openpnm.algorithms.Algorithm.popitem"]], "pores() (algorithm method)": [[87, "openpnm.algorithms.Algorithm.pores"]], "props() (algorithm method)": [[88, "openpnm.algorithms.Algorithm.props"]], "set_bc() (algorithm method)": [[89, "openpnm.algorithms.Algorithm.set_BC"]], "set_label() (algorithm method)": [[90, "openpnm.algorithms.Algorithm.set_label"]], "setdefault() (algorithm method)": [[91, "openpnm.algorithms.Algorithm.setdefault"]], "throats() (algorithm method)": [[92, "openpnm.algorithms.Algorithm.throats"]], "to_indices() (algorithm method)": [[93, "openpnm.algorithms.Algorithm.to_indices"]], "to_mask() (algorithm method)": [[94, "openpnm.algorithms.Algorithm.to_mask"]], "update() (algorithm method)": [[95, "openpnm.algorithms.Algorithm.update"]], "values() (algorithm method)": [[96, "openpnm.algorithms.Algorithm.values"]], "drainage (class in openpnm.algorithms)": [[97, "openpnm.algorithms.Drainage"]], "apply_trapping() (drainage method)": [[98, "openpnm.algorithms.Drainage.apply_trapping"]], "clear() (drainage method)": [[99, "openpnm.algorithms.Drainage.clear"]], "clear_bcs() (drainage method)": [[100, "openpnm.algorithms.Drainage.clear_BCs"]], "copy() (drainage method)": [[101, "openpnm.algorithms.Drainage.copy"]], "filter_by_label() (drainage method)": [[102, "openpnm.algorithms.Drainage.filter_by_label"]], "fromkeys() (drainage method)": [[103, "openpnm.algorithms.Drainage.fromkeys"]], "get() (drainage method)": [[104, "openpnm.algorithms.Drainage.get"]], "get_conduit_data() (drainage method)": [[105, "openpnm.algorithms.Drainage.get_conduit_data"]], "interpolate_data() (drainage method)": [[106, "openpnm.algorithms.Drainage.interpolate_data"]], "items() (drainage method)": [[107, "openpnm.algorithms.Drainage.items"]], "keys() (drainage method)": [[108, "openpnm.algorithms.Drainage.keys"]], "labels() (drainage method)": [[109, "openpnm.algorithms.Drainage.labels"]], "num_pores() (drainage method)": [[110, "openpnm.algorithms.Drainage.num_pores"]], "num_throats() (drainage method)": [[111, "openpnm.algorithms.Drainage.num_throats"]], "pc_curve() (drainage method)": [[112, "openpnm.algorithms.Drainage.pc_curve"]], "pop() (drainage method)": [[113, "openpnm.algorithms.Drainage.pop"]], "popitem() (drainage method)": [[114, "openpnm.algorithms.Drainage.popitem"]], "pores() (drainage method)": [[115, "openpnm.algorithms.Drainage.pores"]], "props() (drainage method)": [[116, "openpnm.algorithms.Drainage.props"]], "reset() (drainage method)": [[117, "openpnm.algorithms.Drainage.reset"]], "run() (drainage method)": [[118, "openpnm.algorithms.Drainage.run"]], "set_bc() (drainage method)": [[119, "openpnm.algorithms.Drainage.set_BC"]], "set_inlet_bc() (drainage method)": [[120, "openpnm.algorithms.Drainage.set_inlet_BC"]], "set_label() (drainage method)": [[121, "openpnm.algorithms.Drainage.set_label"]], "set_outlet_bc() (drainage method)": [[122, "openpnm.algorithms.Drainage.set_outlet_BC"]], "setdefault() (drainage method)": [[123, "openpnm.algorithms.Drainage.setdefault"]], "throats() (drainage method)": [[124, "openpnm.algorithms.Drainage.throats"]], "to_indices() (drainage method)": [[125, "openpnm.algorithms.Drainage.to_indices"]], "to_mask() (drainage method)": [[126, "openpnm.algorithms.Drainage.to_mask"]], "update() (drainage method)": [[127, "openpnm.algorithms.Drainage.update"]], "values() (drainage method)": [[128, "openpnm.algorithms.Drainage.values"]], "fickiandiffusion (class in openpnm.algorithms)": [[129, "openpnm.algorithms.FickianDiffusion"]], "clear() (fickiandiffusion method)": [[130, "openpnm.algorithms.FickianDiffusion.clear"]], "clear_bcs() (fickiandiffusion method)": [[131, "openpnm.algorithms.FickianDiffusion.clear_BCs"]], "clear_rate_bcs() (fickiandiffusion method)": [[132, "openpnm.algorithms.FickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (fickiandiffusion method)": [[133, "openpnm.algorithms.FickianDiffusion.clear_value_BCs"]], "copy() (fickiandiffusion method)": [[134, "openpnm.algorithms.FickianDiffusion.copy"]], "filter_by_label() (fickiandiffusion method)": [[135, "openpnm.algorithms.FickianDiffusion.filter_by_label"]], "fromkeys() (fickiandiffusion method)": [[136, "openpnm.algorithms.FickianDiffusion.fromkeys"]], "get() (fickiandiffusion method)": [[137, "openpnm.algorithms.FickianDiffusion.get"]], "get_conduit_data() (fickiandiffusion method)": [[138, "openpnm.algorithms.FickianDiffusion.get_conduit_data"]], "interpolate_data() (fickiandiffusion method)": [[139, "openpnm.algorithms.FickianDiffusion.interpolate_data"]], "items() (fickiandiffusion method)": [[140, "openpnm.algorithms.FickianDiffusion.items"]], "keys() (fickiandiffusion method)": [[141, "openpnm.algorithms.FickianDiffusion.keys"]], "labels() (fickiandiffusion method)": [[142, "openpnm.algorithms.FickianDiffusion.labels"]], "num_pores() (fickiandiffusion method)": [[143, "openpnm.algorithms.FickianDiffusion.num_pores"]], "num_throats() (fickiandiffusion method)": [[144, "openpnm.algorithms.FickianDiffusion.num_throats"]], "pop() (fickiandiffusion method)": [[145, "openpnm.algorithms.FickianDiffusion.pop"]], "popitem() (fickiandiffusion method)": [[146, "openpnm.algorithms.FickianDiffusion.popitem"]], "pores() (fickiandiffusion method)": [[147, "openpnm.algorithms.FickianDiffusion.pores"]], "props() (fickiandiffusion method)": [[148, "openpnm.algorithms.FickianDiffusion.props"]], "rate() (fickiandiffusion method)": [[149, "openpnm.algorithms.FickianDiffusion.rate"]], "run() (fickiandiffusion method)": [[150, "openpnm.algorithms.FickianDiffusion.run"]], "set_bc() (fickiandiffusion method)": [[151, "openpnm.algorithms.FickianDiffusion.set_BC"]], "set_label() (fickiandiffusion method)": [[152, "openpnm.algorithms.FickianDiffusion.set_label"]], "set_rate_bc() (fickiandiffusion method)": [[153, "openpnm.algorithms.FickianDiffusion.set_rate_BC"]], "set_source() (fickiandiffusion method)": [[154, "openpnm.algorithms.FickianDiffusion.set_source"]], "set_value_bc() (fickiandiffusion method)": [[155, "openpnm.algorithms.FickianDiffusion.set_value_BC"]], "setdefault() (fickiandiffusion method)": [[156, "openpnm.algorithms.FickianDiffusion.setdefault"]], "throats() (fickiandiffusion method)": [[157, "openpnm.algorithms.FickianDiffusion.throats"]], "to_indices() (fickiandiffusion method)": [[158, "openpnm.algorithms.FickianDiffusion.to_indices"]], "to_mask() (fickiandiffusion method)": [[159, "openpnm.algorithms.FickianDiffusion.to_mask"]], "update() (fickiandiffusion method)": [[160, "openpnm.algorithms.FickianDiffusion.update"]], "values() (fickiandiffusion method)": [[161, "openpnm.algorithms.FickianDiffusion.values"]], "fourierconduction (class in openpnm.algorithms)": [[162, "openpnm.algorithms.FourierConduction"]], "clear() (fourierconduction method)": [[163, "openpnm.algorithms.FourierConduction.clear"]], "clear_bcs() (fourierconduction method)": [[164, "openpnm.algorithms.FourierConduction.clear_BCs"]], "clear_rate_bcs() (fourierconduction method)": [[165, "openpnm.algorithms.FourierConduction.clear_rate_BCs"]], "clear_value_bcs() (fourierconduction method)": [[166, "openpnm.algorithms.FourierConduction.clear_value_BCs"]], "copy() (fourierconduction method)": [[167, "openpnm.algorithms.FourierConduction.copy"]], "filter_by_label() (fourierconduction method)": [[168, "openpnm.algorithms.FourierConduction.filter_by_label"]], "fromkeys() (fourierconduction method)": [[169, "openpnm.algorithms.FourierConduction.fromkeys"]], "get() (fourierconduction method)": [[170, "openpnm.algorithms.FourierConduction.get"]], "get_conduit_data() (fourierconduction method)": [[171, "openpnm.algorithms.FourierConduction.get_conduit_data"]], "interpolate_data() (fourierconduction method)": [[172, "openpnm.algorithms.FourierConduction.interpolate_data"]], "items() (fourierconduction method)": [[173, "openpnm.algorithms.FourierConduction.items"]], "keys() (fourierconduction method)": [[174, "openpnm.algorithms.FourierConduction.keys"]], "labels() (fourierconduction method)": [[175, "openpnm.algorithms.FourierConduction.labels"]], "num_pores() (fourierconduction method)": [[176, "openpnm.algorithms.FourierConduction.num_pores"]], "num_throats() (fourierconduction method)": [[177, "openpnm.algorithms.FourierConduction.num_throats"]], "pop() (fourierconduction method)": [[178, "openpnm.algorithms.FourierConduction.pop"]], "popitem() (fourierconduction method)": [[179, "openpnm.algorithms.FourierConduction.popitem"]], "pores() (fourierconduction method)": [[180, "openpnm.algorithms.FourierConduction.pores"]], "props() (fourierconduction method)": [[181, "openpnm.algorithms.FourierConduction.props"]], "rate() (fourierconduction method)": [[182, "openpnm.algorithms.FourierConduction.rate"]], "run() (fourierconduction method)": [[183, "openpnm.algorithms.FourierConduction.run"]], "set_bc() (fourierconduction method)": [[184, "openpnm.algorithms.FourierConduction.set_BC"]], "set_label() (fourierconduction method)": [[185, "openpnm.algorithms.FourierConduction.set_label"]], "set_rate_bc() (fourierconduction method)": [[186, "openpnm.algorithms.FourierConduction.set_rate_BC"]], "set_source() (fourierconduction method)": [[187, "openpnm.algorithms.FourierConduction.set_source"]], "set_value_bc() (fourierconduction method)": [[188, "openpnm.algorithms.FourierConduction.set_value_BC"]], "setdefault() (fourierconduction method)": [[189, "openpnm.algorithms.FourierConduction.setdefault"]], "throats() (fourierconduction method)": [[190, "openpnm.algorithms.FourierConduction.throats"]], "to_indices() (fourierconduction method)": [[191, "openpnm.algorithms.FourierConduction.to_indices"]], "to_mask() (fourierconduction method)": [[192, "openpnm.algorithms.FourierConduction.to_mask"]], "update() (fourierconduction method)": [[193, "openpnm.algorithms.FourierConduction.update"]], "values() (fourierconduction method)": [[194, "openpnm.algorithms.FourierConduction.values"]], "invasionpercolation (class in openpnm.algorithms)": [[195, "openpnm.algorithms.InvasionPercolation"]], "apply_trapping() (invasionpercolation method)": [[196, "openpnm.algorithms.InvasionPercolation.apply_trapping"]], "clear() (invasionpercolation method)": [[197, "openpnm.algorithms.InvasionPercolation.clear"]], "clear_bcs() (invasionpercolation method)": [[198, "openpnm.algorithms.InvasionPercolation.clear_BCs"]], "copy() (invasionpercolation method)": [[199, "openpnm.algorithms.InvasionPercolation.copy"]], "filter_by_label() (invasionpercolation method)": [[200, "openpnm.algorithms.InvasionPercolation.filter_by_label"]], "fromkeys() (invasionpercolation method)": [[201, "openpnm.algorithms.InvasionPercolation.fromkeys"]], "get() (invasionpercolation method)": [[202, "openpnm.algorithms.InvasionPercolation.get"]], "get_conduit_data() (invasionpercolation method)": [[203, "openpnm.algorithms.InvasionPercolation.get_conduit_data"]], "interpolate_data() (invasionpercolation method)": [[204, "openpnm.algorithms.InvasionPercolation.interpolate_data"]], "items() (invasionpercolation method)": [[205, "openpnm.algorithms.InvasionPercolation.items"]], "keys() (invasionpercolation method)": [[206, "openpnm.algorithms.InvasionPercolation.keys"]], "labels() (invasionpercolation method)": [[207, "openpnm.algorithms.InvasionPercolation.labels"]], "num_pores() (invasionpercolation method)": [[208, "openpnm.algorithms.InvasionPercolation.num_pores"]], "num_throats() (invasionpercolation method)": [[209, "openpnm.algorithms.InvasionPercolation.num_throats"]], "pc_curve() (invasionpercolation method)": [[210, "openpnm.algorithms.InvasionPercolation.pc_curve"]], "pop() (invasionpercolation method)": [[211, "openpnm.algorithms.InvasionPercolation.pop"]], "popitem() (invasionpercolation method)": [[212, "openpnm.algorithms.InvasionPercolation.popitem"]], "pores() (invasionpercolation method)": [[213, "openpnm.algorithms.InvasionPercolation.pores"]], "props() (invasionpercolation method)": [[214, "openpnm.algorithms.InvasionPercolation.props"]], "reset() (invasionpercolation method)": [[215, "openpnm.algorithms.InvasionPercolation.reset"]], "run() (invasionpercolation method)": [[216, "openpnm.algorithms.InvasionPercolation.run"]], "set_bc() (invasionpercolation method)": [[217, "openpnm.algorithms.InvasionPercolation.set_BC"]], "set_inlet_bc() (invasionpercolation method)": [[218, "openpnm.algorithms.InvasionPercolation.set_inlet_BC"]], "set_label() (invasionpercolation method)": [[219, "openpnm.algorithms.InvasionPercolation.set_label"]], "set_outlet_bc() (invasionpercolation method)": [[220, "openpnm.algorithms.InvasionPercolation.set_outlet_BC"]], "setdefault() (invasionpercolation method)": [[221, "openpnm.algorithms.InvasionPercolation.setdefault"]], "throats() (invasionpercolation method)": [[222, "openpnm.algorithms.InvasionPercolation.throats"]], "to_indices() (invasionpercolation method)": [[223, "openpnm.algorithms.InvasionPercolation.to_indices"]], "to_mask() (invasionpercolation method)": [[224, "openpnm.algorithms.InvasionPercolation.to_mask"]], "update() (invasionpercolation method)": [[225, "openpnm.algorithms.InvasionPercolation.update"]], "values() (invasionpercolation method)": [[226, "openpnm.algorithms.InvasionPercolation.values"]], "ohmicconduction (class in openpnm.algorithms)": [[227, "openpnm.algorithms.OhmicConduction"]], "clear() (ohmicconduction method)": [[228, "openpnm.algorithms.OhmicConduction.clear"]], "clear_bcs() (ohmicconduction method)": [[229, "openpnm.algorithms.OhmicConduction.clear_BCs"]], "clear_rate_bcs() (ohmicconduction method)": [[230, "openpnm.algorithms.OhmicConduction.clear_rate_BCs"]], "clear_value_bcs() (ohmicconduction method)": [[231, "openpnm.algorithms.OhmicConduction.clear_value_BCs"]], "copy() (ohmicconduction method)": [[232, "openpnm.algorithms.OhmicConduction.copy"]], "filter_by_label() (ohmicconduction method)": [[233, "openpnm.algorithms.OhmicConduction.filter_by_label"]], "fromkeys() (ohmicconduction method)": [[234, "openpnm.algorithms.OhmicConduction.fromkeys"]], "get() (ohmicconduction method)": [[235, "openpnm.algorithms.OhmicConduction.get"]], "get_conduit_data() (ohmicconduction method)": [[236, "openpnm.algorithms.OhmicConduction.get_conduit_data"]], "interpolate_data() (ohmicconduction method)": [[237, "openpnm.algorithms.OhmicConduction.interpolate_data"]], "items() (ohmicconduction method)": [[238, "openpnm.algorithms.OhmicConduction.items"]], "keys() (ohmicconduction method)": [[239, "openpnm.algorithms.OhmicConduction.keys"]], "labels() (ohmicconduction method)": [[240, "openpnm.algorithms.OhmicConduction.labels"]], "num_pores() (ohmicconduction method)": [[241, "openpnm.algorithms.OhmicConduction.num_pores"]], "num_throats() (ohmicconduction method)": [[242, "openpnm.algorithms.OhmicConduction.num_throats"]], "pop() (ohmicconduction method)": [[243, "openpnm.algorithms.OhmicConduction.pop"]], "popitem() (ohmicconduction method)": [[244, "openpnm.algorithms.OhmicConduction.popitem"]], "pores() (ohmicconduction method)": [[245, "openpnm.algorithms.OhmicConduction.pores"]], "props() (ohmicconduction method)": [[246, "openpnm.algorithms.OhmicConduction.props"]], "rate() (ohmicconduction method)": [[247, "openpnm.algorithms.OhmicConduction.rate"]], "run() (ohmicconduction method)": [[248, "openpnm.algorithms.OhmicConduction.run"]], "set_bc() (ohmicconduction method)": [[249, "openpnm.algorithms.OhmicConduction.set_BC"]], "set_label() (ohmicconduction method)": [[250, "openpnm.algorithms.OhmicConduction.set_label"]], "set_rate_bc() (ohmicconduction method)": [[251, "openpnm.algorithms.OhmicConduction.set_rate_BC"]], "set_source() (ohmicconduction method)": [[252, "openpnm.algorithms.OhmicConduction.set_source"]], "set_value_bc() (ohmicconduction method)": [[253, "openpnm.algorithms.OhmicConduction.set_value_BC"]], "setdefault() (ohmicconduction method)": [[254, "openpnm.algorithms.OhmicConduction.setdefault"]], "throats() (ohmicconduction method)": [[255, "openpnm.algorithms.OhmicConduction.throats"]], "to_indices() (ohmicconduction method)": [[256, "openpnm.algorithms.OhmicConduction.to_indices"]], "to_mask() (ohmicconduction method)": [[257, "openpnm.algorithms.OhmicConduction.to_mask"]], "update() (ohmicconduction method)": [[258, "openpnm.algorithms.OhmicConduction.update"]], "values() (ohmicconduction method)": [[259, "openpnm.algorithms.OhmicConduction.values"]], "reactivetransport (class in openpnm.algorithms)": [[260, "openpnm.algorithms.ReactiveTransport"]], "clear() (reactivetransport method)": [[261, "openpnm.algorithms.ReactiveTransport.clear"]], "clear_bcs() (reactivetransport method)": [[262, "openpnm.algorithms.ReactiveTransport.clear_BCs"]], "clear_rate_bcs() (reactivetransport method)": [[263, "openpnm.algorithms.ReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (reactivetransport method)": [[264, "openpnm.algorithms.ReactiveTransport.clear_value_BCs"]], "copy() (reactivetransport method)": [[265, "openpnm.algorithms.ReactiveTransport.copy"]], "filter_by_label() (reactivetransport method)": [[266, "openpnm.algorithms.ReactiveTransport.filter_by_label"]], "fromkeys() (reactivetransport method)": [[267, "openpnm.algorithms.ReactiveTransport.fromkeys"]], "get() (reactivetransport method)": [[268, "openpnm.algorithms.ReactiveTransport.get"]], "get_conduit_data() (reactivetransport method)": [[269, "openpnm.algorithms.ReactiveTransport.get_conduit_data"]], "interpolate_data() (reactivetransport method)": [[270, "openpnm.algorithms.ReactiveTransport.interpolate_data"]], "items() (reactivetransport method)": [[271, "openpnm.algorithms.ReactiveTransport.items"]], "keys() (reactivetransport method)": [[272, "openpnm.algorithms.ReactiveTransport.keys"]], "labels() (reactivetransport method)": [[273, "openpnm.algorithms.ReactiveTransport.labels"]], "num_pores() (reactivetransport method)": [[274, "openpnm.algorithms.ReactiveTransport.num_pores"]], "num_throats() (reactivetransport method)": [[275, "openpnm.algorithms.ReactiveTransport.num_throats"]], "pop() (reactivetransport method)": [[276, "openpnm.algorithms.ReactiveTransport.pop"]], "popitem() (reactivetransport method)": [[277, "openpnm.algorithms.ReactiveTransport.popitem"]], "pores() (reactivetransport method)": [[278, "openpnm.algorithms.ReactiveTransport.pores"]], "props() (reactivetransport method)": [[279, "openpnm.algorithms.ReactiveTransport.props"]], "rate() (reactivetransport method)": [[280, "openpnm.algorithms.ReactiveTransport.rate"]], "run() (reactivetransport method)": [[281, "openpnm.algorithms.ReactiveTransport.run"]], "set_bc() (reactivetransport method)": [[282, "openpnm.algorithms.ReactiveTransport.set_BC"]], "set_label() (reactivetransport method)": [[283, "openpnm.algorithms.ReactiveTransport.set_label"]], "set_rate_bc() (reactivetransport method)": [[284, "openpnm.algorithms.ReactiveTransport.set_rate_BC"]], "set_source() (reactivetransport method)": [[285, "openpnm.algorithms.ReactiveTransport.set_source"]], "set_value_bc() (reactivetransport method)": [[286, "openpnm.algorithms.ReactiveTransport.set_value_BC"]], "setdefault() (reactivetransport method)": [[287, "openpnm.algorithms.ReactiveTransport.setdefault"]], "throats() (reactivetransport method)": [[288, "openpnm.algorithms.ReactiveTransport.throats"]], "to_indices() (reactivetransport method)": [[289, "openpnm.algorithms.ReactiveTransport.to_indices"]], "to_mask() (reactivetransport method)": [[290, "openpnm.algorithms.ReactiveTransport.to_mask"]], "update() (reactivetransport method)": [[291, "openpnm.algorithms.ReactiveTransport.update"]], "values() (reactivetransport method)": [[292, "openpnm.algorithms.ReactiveTransport.values"]], "stokesflow (class in openpnm.algorithms)": [[293, "openpnm.algorithms.StokesFlow"]], "clear() (stokesflow method)": [[294, "openpnm.algorithms.StokesFlow.clear"]], "clear_bcs() (stokesflow method)": [[295, "openpnm.algorithms.StokesFlow.clear_BCs"]], "clear_rate_bcs() (stokesflow method)": [[296, "openpnm.algorithms.StokesFlow.clear_rate_BCs"]], "clear_value_bcs() (stokesflow method)": [[297, "openpnm.algorithms.StokesFlow.clear_value_BCs"]], "copy() (stokesflow method)": [[298, "openpnm.algorithms.StokesFlow.copy"]], "filter_by_label() (stokesflow method)": [[299, "openpnm.algorithms.StokesFlow.filter_by_label"]], "fromkeys() (stokesflow method)": [[300, "openpnm.algorithms.StokesFlow.fromkeys"]], "get() (stokesflow method)": [[301, "openpnm.algorithms.StokesFlow.get"]], "get_conduit_data() (stokesflow method)": [[302, "openpnm.algorithms.StokesFlow.get_conduit_data"]], "interpolate_data() (stokesflow method)": [[303, "openpnm.algorithms.StokesFlow.interpolate_data"]], "items() (stokesflow method)": [[304, "openpnm.algorithms.StokesFlow.items"]], "keys() (stokesflow method)": [[305, "openpnm.algorithms.StokesFlow.keys"]], "labels() (stokesflow method)": [[306, "openpnm.algorithms.StokesFlow.labels"]], "num_pores() (stokesflow method)": [[307, "openpnm.algorithms.StokesFlow.num_pores"]], "num_throats() (stokesflow method)": [[308, "openpnm.algorithms.StokesFlow.num_throats"]], "pop() (stokesflow method)": [[309, "openpnm.algorithms.StokesFlow.pop"]], "popitem() (stokesflow method)": [[310, "openpnm.algorithms.StokesFlow.popitem"]], "pores() (stokesflow method)": [[311, "openpnm.algorithms.StokesFlow.pores"]], "props() (stokesflow method)": [[312, "openpnm.algorithms.StokesFlow.props"]], "rate() (stokesflow method)": [[313, "openpnm.algorithms.StokesFlow.rate"]], "run() (stokesflow method)": [[314, "openpnm.algorithms.StokesFlow.run"]], "set_bc() (stokesflow method)": [[315, "openpnm.algorithms.StokesFlow.set_BC"]], "set_label() (stokesflow method)": [[316, "openpnm.algorithms.StokesFlow.set_label"]], "set_rate_bc() (stokesflow method)": [[317, "openpnm.algorithms.StokesFlow.set_rate_BC"]], "set_source() (stokesflow method)": [[318, "openpnm.algorithms.StokesFlow.set_source"]], "set_value_bc() (stokesflow method)": [[319, "openpnm.algorithms.StokesFlow.set_value_BC"]], "setdefault() (stokesflow method)": [[320, "openpnm.algorithms.StokesFlow.setdefault"]], "throats() (stokesflow method)": [[321, "openpnm.algorithms.StokesFlow.throats"]], "to_indices() (stokesflow method)": [[322, "openpnm.algorithms.StokesFlow.to_indices"]], "to_mask() (stokesflow method)": [[323, "openpnm.algorithms.StokesFlow.to_mask"]], "update() (stokesflow method)": [[324, "openpnm.algorithms.StokesFlow.update"]], "values() (stokesflow method)": [[325, "openpnm.algorithms.StokesFlow.values"]], "transientadvectiondiffusion (class in openpnm.algorithms)": [[326, "openpnm.algorithms.TransientAdvectionDiffusion"]], "clear() (transientadvectiondiffusion method)": [[327, "openpnm.algorithms.TransientAdvectionDiffusion.clear"]], "clear_bcs() (transientadvectiondiffusion method)": [[328, "openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (transientadvectiondiffusion method)": [[329, "openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientadvectiondiffusion method)": [[330, "openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs"]], "copy() (transientadvectiondiffusion method)": [[331, "openpnm.algorithms.TransientAdvectionDiffusion.copy"]], "filter_by_label() (transientadvectiondiffusion method)": [[332, "openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label"]], "fromkeys() (transientadvectiondiffusion method)": [[333, "openpnm.algorithms.TransientAdvectionDiffusion.fromkeys"]], "get() (transientadvectiondiffusion method)": [[334, "openpnm.algorithms.TransientAdvectionDiffusion.get"]], "get_conduit_data() (transientadvectiondiffusion method)": [[335, "openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data"]], "interpolate_data() (transientadvectiondiffusion method)": [[336, "openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data"]], "items() (transientadvectiondiffusion method)": [[337, "openpnm.algorithms.TransientAdvectionDiffusion.items"]], "keys() (transientadvectiondiffusion method)": [[338, "openpnm.algorithms.TransientAdvectionDiffusion.keys"]], "labels() (transientadvectiondiffusion method)": [[339, "openpnm.algorithms.TransientAdvectionDiffusion.labels"]], "num_pores() (transientadvectiondiffusion method)": [[340, "openpnm.algorithms.TransientAdvectionDiffusion.num_pores"]], "num_throats() (transientadvectiondiffusion method)": [[341, "openpnm.algorithms.TransientAdvectionDiffusion.num_throats"]], "pop() (transientadvectiondiffusion method)": [[342, "openpnm.algorithms.TransientAdvectionDiffusion.pop"]], "popitem() (transientadvectiondiffusion method)": [[343, "openpnm.algorithms.TransientAdvectionDiffusion.popitem"]], "pores() (transientadvectiondiffusion method)": [[344, "openpnm.algorithms.TransientAdvectionDiffusion.pores"]], "props() (transientadvectiondiffusion method)": [[345, "openpnm.algorithms.TransientAdvectionDiffusion.props"]], "rate() (transientadvectiondiffusion method)": [[346, "openpnm.algorithms.TransientAdvectionDiffusion.rate"]], "run() (transientadvectiondiffusion method)": [[347, "openpnm.algorithms.TransientAdvectionDiffusion.run"]], "set_bc() (transientadvectiondiffusion method)": [[348, "openpnm.algorithms.TransientAdvectionDiffusion.set_BC"]], "set_label() (transientadvectiondiffusion method)": [[349, "openpnm.algorithms.TransientAdvectionDiffusion.set_label"]], "set_outflow_bc() (transientadvectiondiffusion method)": [[350, "openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (transientadvectiondiffusion method)": [[351, "openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC"]], "set_source() (transientadvectiondiffusion method)": [[352, "openpnm.algorithms.TransientAdvectionDiffusion.set_source"]], "set_value_bc() (transientadvectiondiffusion method)": [[353, "openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC"]], "setdefault() (transientadvectiondiffusion method)": [[354, "openpnm.algorithms.TransientAdvectionDiffusion.setdefault"]], "throats() (transientadvectiondiffusion method)": [[355, "openpnm.algorithms.TransientAdvectionDiffusion.throats"]], "to_indices() (transientadvectiondiffusion method)": [[356, "openpnm.algorithms.TransientAdvectionDiffusion.to_indices"]], "to_mask() (transientadvectiondiffusion method)": [[357, "openpnm.algorithms.TransientAdvectionDiffusion.to_mask"]], "update() (transientadvectiondiffusion method)": [[358, "openpnm.algorithms.TransientAdvectionDiffusion.update"]], "values() (transientadvectiondiffusion method)": [[359, "openpnm.algorithms.TransientAdvectionDiffusion.values"]], "transientfickiandiffusion (class in openpnm.algorithms)": [[360, "openpnm.algorithms.TransientFickianDiffusion"]], "clear() (transientfickiandiffusion method)": [[361, "openpnm.algorithms.TransientFickianDiffusion.clear"]], "clear_bcs() (transientfickiandiffusion method)": [[362, "openpnm.algorithms.TransientFickianDiffusion.clear_BCs"]], "clear_rate_bcs() (transientfickiandiffusion method)": [[363, "openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientfickiandiffusion method)": [[364, "openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs"]], "copy() (transientfickiandiffusion method)": [[365, "openpnm.algorithms.TransientFickianDiffusion.copy"]], "filter_by_label() (transientfickiandiffusion method)": [[366, "openpnm.algorithms.TransientFickianDiffusion.filter_by_label"]], "fromkeys() (transientfickiandiffusion method)": [[367, "openpnm.algorithms.TransientFickianDiffusion.fromkeys"]], "get() (transientfickiandiffusion method)": [[368, "openpnm.algorithms.TransientFickianDiffusion.get"]], "get_conduit_data() (transientfickiandiffusion method)": [[369, "openpnm.algorithms.TransientFickianDiffusion.get_conduit_data"]], "interpolate_data() (transientfickiandiffusion method)": [[370, "openpnm.algorithms.TransientFickianDiffusion.interpolate_data"]], "items() (transientfickiandiffusion method)": [[371, "openpnm.algorithms.TransientFickianDiffusion.items"]], "keys() (transientfickiandiffusion method)": [[372, "openpnm.algorithms.TransientFickianDiffusion.keys"]], "labels() (transientfickiandiffusion method)": [[373, "openpnm.algorithms.TransientFickianDiffusion.labels"]], "num_pores() (transientfickiandiffusion method)": [[374, "openpnm.algorithms.TransientFickianDiffusion.num_pores"]], "num_throats() (transientfickiandiffusion method)": [[375, "openpnm.algorithms.TransientFickianDiffusion.num_throats"]], "pop() (transientfickiandiffusion method)": [[376, "openpnm.algorithms.TransientFickianDiffusion.pop"]], "popitem() (transientfickiandiffusion method)": [[377, "openpnm.algorithms.TransientFickianDiffusion.popitem"]], "pores() (transientfickiandiffusion method)": [[378, "openpnm.algorithms.TransientFickianDiffusion.pores"]], "props() (transientfickiandiffusion method)": [[379, "openpnm.algorithms.TransientFickianDiffusion.props"]], "rate() (transientfickiandiffusion method)": [[380, "openpnm.algorithms.TransientFickianDiffusion.rate"]], "run() (transientfickiandiffusion method)": [[381, "openpnm.algorithms.TransientFickianDiffusion.run"]], "set_bc() (transientfickiandiffusion method)": [[382, "openpnm.algorithms.TransientFickianDiffusion.set_BC"]], "set_label() (transientfickiandiffusion method)": [[383, "openpnm.algorithms.TransientFickianDiffusion.set_label"]], "set_rate_bc() (transientfickiandiffusion method)": [[384, "openpnm.algorithms.TransientFickianDiffusion.set_rate_BC"]], "set_source() (transientfickiandiffusion method)": [[385, "openpnm.algorithms.TransientFickianDiffusion.set_source"]], "set_value_bc() (transientfickiandiffusion method)": [[386, "openpnm.algorithms.TransientFickianDiffusion.set_value_BC"]], "setdefault() (transientfickiandiffusion method)": [[387, "openpnm.algorithms.TransientFickianDiffusion.setdefault"]], "throats() (transientfickiandiffusion method)": [[388, "openpnm.algorithms.TransientFickianDiffusion.throats"]], "to_indices() (transientfickiandiffusion method)": [[389, "openpnm.algorithms.TransientFickianDiffusion.to_indices"]], "to_mask() (transientfickiandiffusion method)": [[390, "openpnm.algorithms.TransientFickianDiffusion.to_mask"]], "update() (transientfickiandiffusion method)": [[391, "openpnm.algorithms.TransientFickianDiffusion.update"]], "values() (transientfickiandiffusion method)": [[392, "openpnm.algorithms.TransientFickianDiffusion.values"]], "transientreactivetransport (class in openpnm.algorithms)": [[393, "openpnm.algorithms.TransientReactiveTransport"]], "clear() (transientreactivetransport method)": [[394, "openpnm.algorithms.TransientReactiveTransport.clear"]], "clear_bcs() (transientreactivetransport method)": [[395, "openpnm.algorithms.TransientReactiveTransport.clear_BCs"]], "clear_rate_bcs() (transientreactivetransport method)": [[396, "openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (transientreactivetransport method)": [[397, "openpnm.algorithms.TransientReactiveTransport.clear_value_BCs"]], "copy() (transientreactivetransport method)": [[398, "openpnm.algorithms.TransientReactiveTransport.copy"]], "filter_by_label() (transientreactivetransport method)": [[399, "openpnm.algorithms.TransientReactiveTransport.filter_by_label"]], "fromkeys() (transientreactivetransport method)": [[400, "openpnm.algorithms.TransientReactiveTransport.fromkeys"]], "get() (transientreactivetransport method)": [[401, "openpnm.algorithms.TransientReactiveTransport.get"]], "get_conduit_data() (transientreactivetransport method)": [[402, "openpnm.algorithms.TransientReactiveTransport.get_conduit_data"]], "interpolate_data() (transientreactivetransport method)": [[403, "openpnm.algorithms.TransientReactiveTransport.interpolate_data"]], "items() (transientreactivetransport method)": [[404, "openpnm.algorithms.TransientReactiveTransport.items"]], "keys() (transientreactivetransport method)": [[405, "openpnm.algorithms.TransientReactiveTransport.keys"]], "labels() (transientreactivetransport method)": [[406, "openpnm.algorithms.TransientReactiveTransport.labels"]], "num_pores() (transientreactivetransport method)": [[407, "openpnm.algorithms.TransientReactiveTransport.num_pores"]], "num_throats() (transientreactivetransport method)": [[408, "openpnm.algorithms.TransientReactiveTransport.num_throats"]], "pop() (transientreactivetransport method)": [[409, "openpnm.algorithms.TransientReactiveTransport.pop"]], "popitem() (transientreactivetransport method)": [[410, "openpnm.algorithms.TransientReactiveTransport.popitem"]], "pores() (transientreactivetransport method)": [[411, "openpnm.algorithms.TransientReactiveTransport.pores"]], "props() (transientreactivetransport method)": [[412, "openpnm.algorithms.TransientReactiveTransport.props"]], "rate() (transientreactivetransport method)": [[413, "openpnm.algorithms.TransientReactiveTransport.rate"]], "run() (transientreactivetransport method)": [[414, "openpnm.algorithms.TransientReactiveTransport.run"]], "set_bc() (transientreactivetransport method)": [[415, "openpnm.algorithms.TransientReactiveTransport.set_BC"]], "set_label() (transientreactivetransport method)": [[416, "openpnm.algorithms.TransientReactiveTransport.set_label"]], "set_rate_bc() (transientreactivetransport method)": [[417, "openpnm.algorithms.TransientReactiveTransport.set_rate_BC"]], "set_source() (transientreactivetransport method)": [[418, "openpnm.algorithms.TransientReactiveTransport.set_source"]], "set_value_bc() (transientreactivetransport method)": [[419, "openpnm.algorithms.TransientReactiveTransport.set_value_BC"]], "setdefault() (transientreactivetransport method)": [[420, "openpnm.algorithms.TransientReactiveTransport.setdefault"]], "throats() (transientreactivetransport method)": [[421, "openpnm.algorithms.TransientReactiveTransport.throats"]], "to_indices() (transientreactivetransport method)": [[422, "openpnm.algorithms.TransientReactiveTransport.to_indices"]], "to_mask() (transientreactivetransport method)": [[423, "openpnm.algorithms.TransientReactiveTransport.to_mask"]], "update() (transientreactivetransport method)": [[424, "openpnm.algorithms.TransientReactiveTransport.update"]], "values() (transientreactivetransport method)": [[425, "openpnm.algorithms.TransientReactiveTransport.values"]], "transport (class in openpnm.algorithms)": [[426, "openpnm.algorithms.Transport"]], "clear() (transport method)": [[427, "openpnm.algorithms.Transport.clear"]], "clear_bcs() (transport method)": [[428, "openpnm.algorithms.Transport.clear_BCs"]], "clear_rate_bcs() (transport method)": [[429, "openpnm.algorithms.Transport.clear_rate_BCs"]], "clear_value_bcs() (transport method)": [[430, "openpnm.algorithms.Transport.clear_value_BCs"]], "copy() (transport method)": [[431, "openpnm.algorithms.Transport.copy"]], "filter_by_label() (transport method)": [[432, "openpnm.algorithms.Transport.filter_by_label"]], "fromkeys() (transport method)": [[433, "openpnm.algorithms.Transport.fromkeys"]], "get() (transport method)": [[434, "openpnm.algorithms.Transport.get"]], "get_conduit_data() (transport method)": [[435, "openpnm.algorithms.Transport.get_conduit_data"]], "interpolate_data() (transport method)": [[436, "openpnm.algorithms.Transport.interpolate_data"]], "items() (transport method)": [[437, "openpnm.algorithms.Transport.items"]], "keys() (transport method)": [[438, "openpnm.algorithms.Transport.keys"]], "labels() (transport method)": [[439, "openpnm.algorithms.Transport.labels"]], "num_pores() (transport method)": [[440, "openpnm.algorithms.Transport.num_pores"]], "num_throats() (transport method)": [[441, "openpnm.algorithms.Transport.num_throats"]], "pop() (transport method)": [[442, "openpnm.algorithms.Transport.pop"]], "popitem() (transport method)": [[443, "openpnm.algorithms.Transport.popitem"]], "pores() (transport method)": [[444, "openpnm.algorithms.Transport.pores"]], "props() (transport method)": [[445, "openpnm.algorithms.Transport.props"]], "rate() (transport method)": [[446, "openpnm.algorithms.Transport.rate"]], "run() (transport method)": [[447, "openpnm.algorithms.Transport.run"]], "set_bc() (transport method)": [[448, "openpnm.algorithms.Transport.set_BC"]], "set_label() (transport method)": [[449, "openpnm.algorithms.Transport.set_label"]], "set_rate_bc() (transport method)": [[450, "openpnm.algorithms.Transport.set_rate_BC"]], "set_value_bc() (transport method)": [[451, "openpnm.algorithms.Transport.set_value_BC"]], "setdefault() (transport method)": [[452, "openpnm.algorithms.Transport.setdefault"]], "throats() (transport method)": [[453, "openpnm.algorithms.Transport.throats"]], "to_indices() (transport method)": [[454, "openpnm.algorithms.Transport.to_indices"]], "to_mask() (transport method)": [[455, "openpnm.algorithms.Transport.to_mask"]], "update() (transport method)": [[456, "openpnm.algorithms.Transport.update"]], "values() (transport method)": [[457, "openpnm.algorithms.Transport.values"]], "openpnm.core": [[458, "module-openpnm.core"]], "base2 (class in openpnm.core)": [[459, "openpnm.core.Base2"]], "clear() (base2 method)": [[460, "openpnm.core.Base2.clear"]], "copy() (base2 method)": [[461, "openpnm.core.Base2.copy"]], "fromkeys() (base2 method)": [[462, "openpnm.core.Base2.fromkeys"]], "get() (base2 method)": [[463, "openpnm.core.Base2.get"]], "get_conduit_data() (base2 method)": [[464, "openpnm.core.Base2.get_conduit_data"]], "interpolate_data() (base2 method)": [[465, "openpnm.core.Base2.interpolate_data"]], "items() (base2 method)": [[466, "openpnm.core.Base2.items"]], "keys() (base2 method)": [[467, "openpnm.core.Base2.keys"]], "pop() (base2 method)": [[468, "openpnm.core.Base2.pop"]], "popitem() (base2 method)": [[469, "openpnm.core.Base2.popitem"]], "props() (base2 method)": [[470, "openpnm.core.Base2.props"]], "setdefault() (base2 method)": [[471, "openpnm.core.Base2.setdefault"]], "to_indices() (base2 method)": [[472, "openpnm.core.Base2.to_indices"]], "to_mask() (base2 method)": [[473, "openpnm.core.Base2.to_mask"]], "update() (base2 method)": [[474, "openpnm.core.Base2.update"]], "values() (base2 method)": [[475, "openpnm.core.Base2.values"]], "domain (class in openpnm.core)": [[476, "openpnm.core.Domain"]], "add_model() (domain method)": [[477, "openpnm.core.Domain.add_model"]], "add_model_collection() (domain method)": [[478, "openpnm.core.Domain.add_model_collection"]], "clear() (domain method)": [[479, "openpnm.core.Domain.clear"]], "copy() (domain method)": [[480, "openpnm.core.Domain.copy"]], "filter_by_label() (domain method)": [[481, "openpnm.core.Domain.filter_by_label"]], "fromkeys() (domain method)": [[482, "openpnm.core.Domain.fromkeys"]], "get() (domain method)": [[483, "openpnm.core.Domain.get"]], "get_conduit_data() (domain method)": [[484, "openpnm.core.Domain.get_conduit_data"]], "interpolate_data() (domain method)": [[485, "openpnm.core.Domain.interpolate_data"]], "items() (domain method)": [[486, "openpnm.core.Domain.items"]], "keys() (domain method)": [[487, "openpnm.core.Domain.keys"]], "labels() (domain method)": [[488, "openpnm.core.Domain.labels"]], "num_pores() (domain method)": [[489, "openpnm.core.Domain.num_pores"]], "num_throats() (domain method)": [[490, "openpnm.core.Domain.num_throats"]], "pop() (domain method)": [[491, "openpnm.core.Domain.pop"]], "popitem() (domain method)": [[492, "openpnm.core.Domain.popitem"]], "pores() (domain method)": [[493, "openpnm.core.Domain.pores"]], "props() (domain method)": [[494, "openpnm.core.Domain.props"]], "regenerate_models() (domain method)": [[495, "openpnm.core.Domain.regenerate_models"]], "run_model() (domain method)": [[496, "openpnm.core.Domain.run_model"]], "set_label() (domain method)": [[497, "openpnm.core.Domain.set_label"]], "setdefault() (domain method)": [[498, "openpnm.core.Domain.setdefault"]], "throats() (domain method)": [[499, "openpnm.core.Domain.throats"]], "to_indices() (domain method)": [[500, "openpnm.core.Domain.to_indices"]], "to_mask() (domain method)": [[501, "openpnm.core.Domain.to_mask"]], "update() (domain method)": [[502, "openpnm.core.Domain.update"]], "values() (domain method)": [[503, "openpnm.core.Domain.values"]], "labelmixin (class in openpnm.core)": [[504, "openpnm.core.LabelMixin"]], "filter_by_label() (labelmixin method)": [[505, "openpnm.core.LabelMixin.filter_by_label"]], "labels() (labelmixin method)": [[506, "openpnm.core.LabelMixin.labels"]], "num_pores() (labelmixin method)": [[507, "openpnm.core.LabelMixin.num_pores"]], "num_throats() (labelmixin method)": [[508, "openpnm.core.LabelMixin.num_throats"]], "pores() (labelmixin method)": [[509, "openpnm.core.LabelMixin.pores"]], "set_label() (labelmixin method)": [[510, "openpnm.core.LabelMixin.set_label"]], "throats() (labelmixin method)": [[511, "openpnm.core.LabelMixin.throats"]], "modelwrapper (class in openpnm.core)": [[512, "openpnm.core.ModelWrapper"]], "__call__() (modelwrapper method)": [[513, "openpnm.core.ModelWrapper.__call__"]], "clear() (modelwrapper method)": [[514, "openpnm.core.ModelWrapper.clear"]], "copy() (modelwrapper method)": [[515, "openpnm.core.ModelWrapper.copy"]], "fromkeys() (modelwrapper method)": [[516, "openpnm.core.ModelWrapper.fromkeys"]], "get() (modelwrapper method)": [[517, "openpnm.core.ModelWrapper.get"]], "items() (modelwrapper method)": [[518, "openpnm.core.ModelWrapper.items"]], "keys() (modelwrapper method)": [[519, "openpnm.core.ModelWrapper.keys"]], "pop() (modelwrapper method)": [[520, "openpnm.core.ModelWrapper.pop"]], "popitem() (modelwrapper method)": [[521, "openpnm.core.ModelWrapper.popitem"]], "setdefault() (modelwrapper method)": [[522, "openpnm.core.ModelWrapper.setdefault"]], "update() (modelwrapper method)": [[523, "openpnm.core.ModelWrapper.update"]], "values() (modelwrapper method)": [[524, "openpnm.core.ModelWrapper.values"]], "modelsdict (class in openpnm.core)": [[525, "openpnm.core.ModelsDict"]], "clear() (modelsdict method)": [[526, "openpnm.core.ModelsDict.clear"]], "copy() (modelsdict method)": [[527, "openpnm.core.ModelsDict.copy"]], "dependency_graph() (modelsdict method)": [[528, "openpnm.core.ModelsDict.dependency_graph"]], "dependency_list() (modelsdict method)": [[529, "openpnm.core.ModelsDict.dependency_list"]], "dependency_map() (modelsdict method)": [[530, "openpnm.core.ModelsDict.dependency_map"]], "fromkeys() (modelsdict method)": [[531, "openpnm.core.ModelsDict.fromkeys"]], "get() (modelsdict method)": [[532, "openpnm.core.ModelsDict.get"]], "items() (modelsdict method)": [[533, "openpnm.core.ModelsDict.items"]], "keys() (modelsdict method)": [[534, "openpnm.core.ModelsDict.keys"]], "pop() (modelsdict method)": [[535, "openpnm.core.ModelsDict.pop"]], "popitem() (modelsdict method)": [[536, "openpnm.core.ModelsDict.popitem"]], "setdefault() (modelsdict method)": [[537, "openpnm.core.ModelsDict.setdefault"]], "update() (modelsdict method)": [[538, "openpnm.core.ModelsDict.update"]], "values() (modelsdict method)": [[539, "openpnm.core.ModelsDict.values"]], "modelsmixin2 (class in openpnm.core)": [[540, "openpnm.core.ModelsMixin2"]], "add_model() (modelsmixin2 method)": [[541, "openpnm.core.ModelsMixin2.add_model"]], "add_model_collection() (modelsmixin2 method)": [[542, "openpnm.core.ModelsMixin2.add_model_collection"]], "regenerate_models() (modelsmixin2 method)": [[543, "openpnm.core.ModelsMixin2.regenerate_models"]], "run_model() (modelsmixin2 method)": [[544, "openpnm.core.ModelsMixin2.run_model"]], "parsermixin (class in openpnm.core)": [[545, "openpnm.core.ParserMixin"]], "openpnm.integrators": [[546, "module-openpnm.integrators"]], "integrator (class in openpnm.integrators)": [[547, "openpnm.integrators.Integrator"]], "scipyrk45 (class in openpnm.integrators)": [[548, "openpnm.integrators.ScipyRK45"]], "solve() (scipyrk45 method)": [[549, "openpnm.integrators.ScipyRK45.solve"]], "openpnm.io": [[550, "module-openpnm.io"]], "network_from_csv() (in module openpnm.io)": [[551, "openpnm.io.network_from_csv"]], "network_from_jsongraph() (in module openpnm.io)": [[552, "openpnm.io.network_from_jsongraph"]], "network_from_marock() (in module openpnm.io)": [[553, "openpnm.io.network_from_marock"]], "network_from_networkx() (in module openpnm.io)": [[554, "openpnm.io.network_from_networkx"]], "network_from_pergeos() (in module openpnm.io)": [[555, "openpnm.io.network_from_pergeos"]], "network_from_porespy() (in module openpnm.io)": [[556, "openpnm.io.network_from_porespy"]], "network_from_statoil() (in module openpnm.io)": [[557, "openpnm.io.network_from_statoil"]], "network_to_comsol() (in module openpnm.io)": [[558, "openpnm.io.network_to_comsol"]], "network_to_csv() (in module openpnm.io)": [[559, "openpnm.io.network_to_csv"]], "network_to_jsongraph() (in module openpnm.io)": [[560, "openpnm.io.network_to_jsongraph"]], "network_to_networkx() (in module openpnm.io)": [[561, "openpnm.io.network_to_networkx"]], "network_to_pandas() (in module openpnm.io)": [[562, "openpnm.io.network_to_pandas"]], "network_to_pergeos() (in module openpnm.io)": [[563, "openpnm.io.network_to_pergeos"]], "network_to_salome() (in module openpnm.io)": [[564, "openpnm.io.network_to_salome"]], "network_to_stl() (in module openpnm.io)": [[565, "openpnm.io.network_to_stl"]], "print_hdf5() (in module openpnm.io)": [[566, "openpnm.io.print_hdf5"]], "project_to_csv() (in module openpnm.io)": [[567, "openpnm.io.project_to_csv"]], "project_to_dict() (in module openpnm.io)": [[568, "openpnm.io.project_to_dict"]], "project_to_hdf5() (in module openpnm.io)": [[569, "openpnm.io.project_to_hdf5"]], "project_to_pandas() (in module openpnm.io)": [[570, "openpnm.io.project_to_pandas"]], "project_to_paraview() (in module openpnm.io)": [[571, "openpnm.io.project_to_paraview"]], "project_to_vtk() (in module openpnm.io)": [[572, "openpnm.io.project_to_vtk"]], "project_to_xdmf() (in module openpnm.io)": [[573, "openpnm.io.project_to_xdmf"]], "openpnm.models": [[574, "module-openpnm.models"]], "openpnm.models.collections": [[575, "module-openpnm.models.collections"]], "openpnm.models.collections.geometry": [[576, "module-openpnm.models.collections.geometry"]], "circles_and_rectangles (in module openpnm.models.collections.geometry)": [[577, "openpnm.models.collections.geometry.circles_and_rectangles"]], "cones_and_cylinders (in module openpnm.models.collections.geometry)": [[578, "openpnm.models.collections.geometry.cones_and_cylinders"]], "cubes_and_cuboids (in module openpnm.models.collections.geometry)": [[579, "openpnm.models.collections.geometry.cubes_and_cuboids"]], "pyramids_and_cuboids (in module openpnm.models.collections.geometry)": [[580, "openpnm.models.collections.geometry.pyramids_and_cuboids"]], "spheres_and_cylinders (in module openpnm.models.collections.geometry)": [[581, "openpnm.models.collections.geometry.spheres_and_cylinders"]], "squares_and_rectangles (in module openpnm.models.collections.geometry)": [[582, "openpnm.models.collections.geometry.squares_and_rectangles"]], "trapezoids_and_rectangles (in module openpnm.models.collections.geometry)": [[583, "openpnm.models.collections.geometry.trapezoids_and_rectangles"]], "openpnm.models.collections.network": [[584, "module-openpnm.models.collections.network"]], "openpnm.models.collections.phase": [[585, "module-openpnm.models.collections.phase"]], "air (in module openpnm.models.collections.phase)": [[586, "openpnm.models.collections.phase.air"]], "openpnm.models.collections.phase.gas": [[587, "module-openpnm.models.collections.phase.gas"]], "openpnm.models.collections.phase.liquid": [[588, "module-openpnm.models.collections.phase.liquid"]], "mercury (in module openpnm.models.collections.phase)": [[589, "openpnm.models.collections.phase.mercury"]], "water (in module openpnm.models.collections.phase)": [[590, "openpnm.models.collections.phase.water"]], "openpnm.models.collections.physics": [[591, "module-openpnm.models.collections.physics"]], "basic (in module openpnm.models.collections.physics)": [[592, "openpnm.models.collections.physics.basic"]], "standard (in module openpnm.models.collections.physics)": [[593, "openpnm.models.collections.physics.standard"]], "openpnm.models.geometry": [[594, "module-openpnm.models.geometry"]], "openpnm.models.geometry.conduit_lengths": [[595, "module-openpnm.models.geometry.conduit_lengths"]], "circles_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[596, "openpnm.models.geometry.conduit_lengths.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[597, "openpnm.models.geometry.conduit_lengths.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[598, "openpnm.models.geometry.conduit_lengths.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[599, "openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[600, "openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[601, "openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.conduit_lengths)": [[602, "openpnm.models.geometry.conduit_lengths.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.conduit_lengths)": [[603, "openpnm.models.geometry.conduit_lengths.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.conduit_lengths)": [[604, "openpnm.models.geometry.conduit_lengths.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[605, "openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[606, "openpnm.models.geometry.conduit_lengths.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[607, "openpnm.models.geometry.conduit_lengths.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[608, "openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[609, "module-openpnm.models.geometry.diffusive_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[610, "openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[611, "openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[612, "openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[613, "openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[614, "openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[615, "openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.diffusive_size_factors)": [[616, "openpnm.models.geometry.diffusive_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.diffusive_size_factors)": [[617, "openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.diffusive_size_factors)": [[618, "openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.diffusive_size_factors)": [[619, "openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[620, "openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[621, "openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[622, "openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[623, "openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[624, "module-openpnm.models.geometry.hydraulic_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[625, "openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[626, "openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[627, "openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[628, "openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[629, "openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[630, "openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.hydraulic_size_factors)": [[631, "openpnm.models.geometry.hydraulic_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[632, "openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[633, "openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.hydraulic_size_factors)": [[634, "openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[635, "openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[636, "openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[637, "openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[638, "openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[639, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "circle() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[640, "openpnm.models.geometry.pore_cross_sectional_area.circle"]], "cone() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[641, "openpnm.models.geometry.pore_cross_sectional_area.cone"]], "cube() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[642, "openpnm.models.geometry.pore_cross_sectional_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[643, "openpnm.models.geometry.pore_cross_sectional_area.sphere"]], "square() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[644, "openpnm.models.geometry.pore_cross_sectional_area.square"]], "openpnm.models.geometry.pore_seed": [[645, "module-openpnm.models.geometry.pore_seed"]], "random() (in module openpnm.models.geometry.pore_seed)": [[646, "openpnm.models.geometry.pore_seed.random"]], "spatially_correlated() (in module openpnm.models.geometry.pore_seed)": [[647, "openpnm.models.geometry.pore_seed.spatially_correlated"]], "openpnm.models.geometry.pore_size": [[648, "module-openpnm.models.geometry.pore_size"]], "equivalent_diameter() (in module openpnm.models.geometry.pore_size)": [[649, "openpnm.models.geometry.pore_size.equivalent_diameter"]], "from_neighbor_throats() (in module openpnm.models.geometry.pore_size)": [[650, "openpnm.models.geometry.pore_size.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.geometry.pore_size)": [[651, "openpnm.models.geometry.pore_size.generic_distribution"]], "largest_sphere() (in module openpnm.models.geometry.pore_size)": [[652, "openpnm.models.geometry.pore_size.largest_sphere"]], "normal() (in module openpnm.models.geometry.pore_size)": [[653, "openpnm.models.geometry.pore_size.normal"]], "random() (in module openpnm.models.geometry.pore_size)": [[654, "openpnm.models.geometry.pore_size.random"]], "weibull() (in module openpnm.models.geometry.pore_size)": [[655, "openpnm.models.geometry.pore_size.weibull"]], "openpnm.models.geometry.pore_surface_area": [[656, "module-openpnm.models.geometry.pore_surface_area"]], "circle() (in module openpnm.models.geometry.pore_surface_area)": [[657, "openpnm.models.geometry.pore_surface_area.circle"]], "cube() (in module openpnm.models.geometry.pore_surface_area)": [[658, "openpnm.models.geometry.pore_surface_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_surface_area)": [[659, "openpnm.models.geometry.pore_surface_area.sphere"]], "square() (in module openpnm.models.geometry.pore_surface_area)": [[660, "openpnm.models.geometry.pore_surface_area.square"]], "openpnm.models.geometry.pore_volume": [[661, "module-openpnm.models.geometry.pore_volume"]], "circle() (in module openpnm.models.geometry.pore_volume)": [[662, "openpnm.models.geometry.pore_volume.circle"]], "cube() (in module openpnm.models.geometry.pore_volume)": [[663, "openpnm.models.geometry.pore_volume.cube"]], "effective() (in module openpnm.models.geometry.pore_volume)": [[664, "openpnm.models.geometry.pore_volume.effective"]], "sphere() (in module openpnm.models.geometry.pore_volume)": [[665, "openpnm.models.geometry.pore_volume.sphere"]], "square() (in module openpnm.models.geometry.pore_volume)": [[666, "openpnm.models.geometry.pore_volume.square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[667, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "jenkins_rao() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[668, "openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao"]], "mason_morrow() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[669, "openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[670, "module-openpnm.models.geometry.throat_centroid"]], "pore_coords() (in module openpnm.models.geometry.throat_centroid)": [[671, "openpnm.models.geometry.throat_centroid.pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[672, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "cuboid() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[673, "openpnm.models.geometry.throat_cross_sectional_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[674, "openpnm.models.geometry.throat_cross_sectional_area.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[675, "openpnm.models.geometry.throat_cross_sectional_area.rectangle"]], "openpnm.models.geometry.throat_endpoints": [[676, "module-openpnm.models.geometry.throat_endpoints"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_endpoints)": [[677, "openpnm.models.geometry.throat_endpoints.spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[678, "module-openpnm.models.geometry.throat_length"]], "circles_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[679, "openpnm.models.geometry.throat_length.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[680, "openpnm.models.geometry.throat_length.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[681, "openpnm.models.geometry.throat_length.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[682, "openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[683, "openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[684, "openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.throat_length)": [[685, "openpnm.models.geometry.throat_length.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.throat_length)": [[686, "openpnm.models.geometry.throat_length.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.throat_length)": [[687, "openpnm.models.geometry.throat_length.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[688, "openpnm.models.geometry.throat_length.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[689, "openpnm.models.geometry.throat_length.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[690, "openpnm.models.geometry.throat_length.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[691, "openpnm.models.geometry.throat_length.trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[692, "module-openpnm.models.geometry.throat_perimeter"]], "cuboid() (in module openpnm.models.geometry.throat_perimeter)": [[693, "openpnm.models.geometry.throat_perimeter.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_perimeter)": [[694, "openpnm.models.geometry.throat_perimeter.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_perimeter)": [[695, "openpnm.models.geometry.throat_perimeter.rectangle"]], "openpnm.models.geometry.throat_seed": [[696, "module-openpnm.models.geometry.throat_seed"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_seed)": [[697, "openpnm.models.geometry.throat_seed.from_neighbor_pores"]], "random() (in module openpnm.models.geometry.throat_seed)": [[698, "openpnm.models.geometry.throat_seed.random"]], "openpnm.models.geometry.throat_size": [[699, "module-openpnm.models.geometry.throat_size"]], "equivalent_diameter() (in module openpnm.models.geometry.throat_size)": [[700, "openpnm.models.geometry.throat_size.equivalent_diameter"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_size)": [[701, "openpnm.models.geometry.throat_size.from_neighbor_pores"]], "generic_distribution() (in module openpnm.models.geometry.throat_size)": [[702, "openpnm.models.geometry.throat_size.generic_distribution"]], "normal() (in module openpnm.models.geometry.throat_size)": [[703, "openpnm.models.geometry.throat_size.normal"]], "random() (in module openpnm.models.geometry.throat_size)": [[704, "openpnm.models.geometry.throat_size.random"]], "weibull() (in module openpnm.models.geometry.throat_size)": [[705, "openpnm.models.geometry.throat_size.weibull"]], "openpnm.models.geometry.throat_surface_area": [[706, "module-openpnm.models.geometry.throat_surface_area"]], "cuboid() (in module openpnm.models.geometry.throat_surface_area)": [[707, "openpnm.models.geometry.throat_surface_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_surface_area)": [[708, "openpnm.models.geometry.throat_surface_area.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_surface_area)": [[709, "openpnm.models.geometry.throat_surface_area.extrusion"]], "rectangle() (in module openpnm.models.geometry.throat_surface_area)": [[710, "openpnm.models.geometry.throat_surface_area.rectangle"]], "openpnm.models.geometry.throat_vector": [[711, "module-openpnm.models.geometry.throat_vector"]], "pore_to_pore() (in module openpnm.models.geometry.throat_vector)": [[712, "openpnm.models.geometry.throat_vector.pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[713, "module-openpnm.models.geometry.throat_volume"]], "cuboid() (in module openpnm.models.geometry.throat_volume)": [[714, "openpnm.models.geometry.throat_volume.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_volume)": [[715, "openpnm.models.geometry.throat_volume.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_volume)": [[716, "openpnm.models.geometry.throat_volume.extrusion"]], "lens() (in module openpnm.models.geometry.throat_volume)": [[717, "openpnm.models.geometry.throat_volume.lens"]], "pendular_ring() (in module openpnm.models.geometry.throat_volume)": [[718, "openpnm.models.geometry.throat_volume.pendular_ring"]], "rectangle() (in module openpnm.models.geometry.throat_volume)": [[719, "openpnm.models.geometry.throat_volume.rectangle"]], "openpnm.models.misc": [[720, "module-openpnm.models.misc"]], "blank() (in module openpnm.models.misc)": [[721, "openpnm.models.misc.blank"]], "clip() (in module openpnm.models.misc)": [[722, "openpnm.models.misc.clip"]], "constant() (in module openpnm.models.misc)": [[723, "openpnm.models.misc.constant"]], "difference() (in module openpnm.models.misc)": [[724, "openpnm.models.misc.difference"]], "fraction() (in module openpnm.models.misc)": [[725, "openpnm.models.misc.fraction"]], "from_neighbor_pores() (in module openpnm.models.misc)": [[726, "openpnm.models.misc.from_neighbor_pores"]], "from_neighbor_throats() (in module openpnm.models.misc)": [[727, "openpnm.models.misc.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.misc)": [[728, "openpnm.models.misc.generic_distribution"]], "generic_function() (in module openpnm.models.misc)": [[729, "openpnm.models.misc.generic_function"]], "invert() (in module openpnm.models.misc)": [[730, "openpnm.models.misc.invert"]], "linear() (in module openpnm.models.misc)": [[731, "openpnm.models.misc.linear"]], "match_histogram() (in module openpnm.models.misc)": [[732, "openpnm.models.misc.match_histogram"]], "normal() (in module openpnm.models.misc)": [[733, "openpnm.models.misc.normal"]], "normalize() (in module openpnm.models.misc)": [[734, "openpnm.models.misc.normalize"]], "polynomial() (in module openpnm.models.misc)": [[735, "openpnm.models.misc.polynomial"]], "product() (in module openpnm.models.misc)": [[736, "openpnm.models.misc.product"]], "random() (in module openpnm.models.misc)": [[737, "openpnm.models.misc.random"]], "scaled() (in module openpnm.models.misc)": [[738, "openpnm.models.misc.scaled"]], "summation() (in module openpnm.models.misc)": [[739, "openpnm.models.misc.summation"]], "weibull() (in module openpnm.models.misc)": [[740, "openpnm.models.misc.weibull"]], "openpnm.models.network": [[741, "module-openpnm.models.network"]], "bidirectional_throats() (in module openpnm.models.network)": [[742, "openpnm.models.network.bidirectional_throats"]], "cluster_number() (in module openpnm.models.network)": [[743, "openpnm.models.network.cluster_number"]], "cluster_size() (in module openpnm.models.network)": [[744, "openpnm.models.network.cluster_size"]], "coordination_number() (in module openpnm.models.network)": [[745, "openpnm.models.network.coordination_number"]], "count_coincident_pores() (in module openpnm.models.network)": [[746, "openpnm.models.network.count_coincident_pores"]], "distance_to_furthest_neighbor() (in module openpnm.models.network)": [[747, "openpnm.models.network.distance_to_furthest_neighbor"]], "distance_to_nearest_neighbor() (in module openpnm.models.network)": [[748, "openpnm.models.network.distance_to_nearest_neighbor"]], "distance_to_nearest_pore() (in module openpnm.models.network)": [[749, "openpnm.models.network.distance_to_nearest_pore"]], "duplicate_throats() (in module openpnm.models.network)": [[750, "openpnm.models.network.duplicate_throats"]], "find_coincident_pores() (in module openpnm.models.network)": [[751, "openpnm.models.network.find_coincident_pores"]], "headless_throats() (in module openpnm.models.network)": [[752, "openpnm.models.network.headless_throats"]], "isolated_pores() (in module openpnm.models.network)": [[753, "openpnm.models.network.isolated_pores"]], "looped_throats() (in module openpnm.models.network)": [[754, "openpnm.models.network.looped_throats"]], "pore_to_pore_distance() (in module openpnm.models.network)": [[755, "openpnm.models.network.pore_to_pore_distance"]], "reversed_throats() (in module openpnm.models.network)": [[756, "openpnm.models.network.reversed_throats"]], "openpnm.models.phase": [[757, "module-openpnm.models.phase"]], "chemicals_wrapper() (in module openpnm.models.phase)": [[758, "openpnm.models.phase.chemicals_wrapper"]], "openpnm.models.phase.critical_props": [[759, "module-openpnm.models.phase.critical_props"]], "openpnm.models.phase.density": [[760, "module-openpnm.models.phase.density"]], "ideal_gas() (in module openpnm.models.phase.density)": [[761, "openpnm.models.phase.density.ideal_gas"]], "liquid_mixture_costald() (in module openpnm.models.phase.density)": [[762, "openpnm.models.phase.density.liquid_mixture_COSTALD"]], "liquid_pure_costald() (in module openpnm.models.phase.density)": [[763, "openpnm.models.phase.density.liquid_pure_COSTALD"]], "mass_to_molar() (in module openpnm.models.phase.density)": [[764, "openpnm.models.phase.density.mass_to_molar"]], "water_correlation() (in module openpnm.models.phase.density)": [[765, "openpnm.models.phase.density.water_correlation"]], "openpnm.models.phase.diffusivity": [[766, "module-openpnm.models.phase.diffusivity"]], "gas_mixture_ce() (in module openpnm.models.phase.diffusivity)": [[767, "openpnm.models.phase.diffusivity.gas_mixture_ce"]], "gas_mixture_fesg() (in module openpnm.models.phase.diffusivity)": [[768, "openpnm.models.phase.diffusivity.gas_mixture_fesg"]], "liquid_mixture_tc() (in module openpnm.models.phase.diffusivity)": [[769, "openpnm.models.phase.diffusivity.liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[770, "module-openpnm.models.phase.heat_capacity"]], "gas_mixture_yweighted() (in module openpnm.models.phase.heat_capacity)": [[771, "openpnm.models.phase.heat_capacity.gas_mixture_yweighted"]], "gas_pure_trc() (in module openpnm.models.phase.heat_capacity)": [[772, "openpnm.models.phase.heat_capacity.gas_pure_TRC"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.heat_capacity)": [[773, "openpnm.models.phase.heat_capacity.liquid_mixture_xweighted"]], "liquid_pure_rp() (in module openpnm.models.phase.heat_capacity)": [[774, "openpnm.models.phase.heat_capacity.liquid_pure_rp"]], "openpnm.models.phase.misc": [[775, "module-openpnm.models.phase.misc"]], "mix_and_match() (in module openpnm.models.phase.misc)": [[776, "openpnm.models.phase.misc.mix_and_match"]], "mole_to_mass_fraction() (in module openpnm.models.phase.misc)": [[777, "openpnm.models.phase.misc.mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[778, "module-openpnm.models.phase.mixtures"]], "from_component() (in module openpnm.models.phase.mixtures)": [[779, "openpnm.models.phase.mixtures.from_component"]], "mixing_rule() (in module openpnm.models.phase.mixtures)": [[780, "openpnm.models.phase.mixtures.mixing_rule"]], "mole_summation() (in module openpnm.models.phase.mixtures)": [[781, "openpnm.models.phase.mixtures.mole_summation"]], "mole_to_mass_fraction() (in module openpnm.models.phase.mixtures)": [[782, "openpnm.models.phase.mixtures.mole_to_mass_fraction"]], "salinity() (in module openpnm.models.phase.mixtures)": [[783, "openpnm.models.phase.mixtures.salinity"]], "openpnm.models.phase.partition_coefficient": [[784, "module-openpnm.models.phase.partition_coefficient"]], "gaseous_species_in_water() (in module openpnm.models.phase.partition_coefficient)": [[785, "openpnm.models.phase.partition_coefficient.gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[786, "module-openpnm.models.phase.surface_tension"]], "liquid_mixture_wsd() (in module openpnm.models.phase.surface_tension)": [[787, "openpnm.models.phase.surface_tension.liquid_mixture_wsd"]], "liquid_pure_bb() (in module openpnm.models.phase.surface_tension)": [[788, "openpnm.models.phase.surface_tension.liquid_pure_bb"]], "water_correlation() (in module openpnm.models.phase.surface_tension)": [[789, "openpnm.models.phase.surface_tension.water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[790, "module-openpnm.models.phase.thermal_conductivity"]], "gas_mixture_whz() (in module openpnm.models.phase.thermal_conductivity)": [[791, "openpnm.models.phase.thermal_conductivity.gas_mixture_whz"]], "gas_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[792, "openpnm.models.phase.thermal_conductivity.gas_pure_gismr"]], "liquid_mixture_dippr9h() (in module openpnm.models.phase.thermal_conductivity)": [[793, "openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H"]], "liquid_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[794, "openpnm.models.phase.thermal_conductivity.liquid_pure_gismr"]], "liquid_pure_sr() (in module openpnm.models.phase.thermal_conductivity)": [[795, "openpnm.models.phase.thermal_conductivity.liquid_pure_sr"]], "water_correlation() (in module openpnm.models.phase.thermal_conductivity)": [[796, "openpnm.models.phase.thermal_conductivity.water_correlation"]], "openpnm.models.phase.vapor_pressure": [[797, "module-openpnm.models.phase.vapor_pressure"]], "liquid_pure_antoine() (in module openpnm.models.phase.vapor_pressure)": [[798, "openpnm.models.phase.vapor_pressure.liquid_pure_antoine"]], "liquid_pure_lk() (in module openpnm.models.phase.vapor_pressure)": [[799, "openpnm.models.phase.vapor_pressure.liquid_pure_lk"]], "water_correlation() (in module openpnm.models.phase.vapor_pressure)": [[800, "openpnm.models.phase.vapor_pressure.water_correlation"]], "openpnm.models.phase.viscosity": [[801, "module-openpnm.models.phase.viscosity"]], "gas_mixture_hz() (in module openpnm.models.phase.viscosity)": [[802, "openpnm.models.phase.viscosity.gas_mixture_hz"]], "gas_pure_gesmr() (in module openpnm.models.phase.viscosity)": [[803, "openpnm.models.phase.viscosity.gas_pure_gesmr"]], "gas_pure_st() (in module openpnm.models.phase.viscosity)": [[804, "openpnm.models.phase.viscosity.gas_pure_st"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.viscosity)": [[805, "openpnm.models.phase.viscosity.liquid_mixture_xweighted"]], "liquid_pure_ls() (in module openpnm.models.phase.viscosity)": [[806, "openpnm.models.phase.viscosity.liquid_pure_ls"]], "water_correlation() (in module openpnm.models.phase.viscosity)": [[807, "openpnm.models.phase.viscosity.water_correlation"]], "openpnm.models.physics": [[808, "module-openpnm.models.physics"]], "openpnm.models.physics.ad_dif_conductance": [[809, "module-openpnm.models.physics.ad_dif_conductance"]], "ad_dif() (in module openpnm.models.physics.ad_dif_conductance)": [[810, "openpnm.models.physics.ad_dif_conductance.ad_dif"]], "openpnm.models.physics.capillary_pressure": [[811, "module-openpnm.models.physics.capillary_pressure"]], "purcell() (in module openpnm.models.physics.capillary_pressure)": [[812, "openpnm.models.physics.capillary_pressure.purcell"]], "washburn() (in module openpnm.models.physics.capillary_pressure)": [[813, "openpnm.models.physics.capillary_pressure.washburn"]], "openpnm.models.physics.diffusive_conductance": [[814, "module-openpnm.models.physics.diffusive_conductance"]], "generic_diffusive() (in module openpnm.models.physics.diffusive_conductance)": [[815, "openpnm.models.physics.diffusive_conductance.generic_diffusive"]], "mixed_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[816, "openpnm.models.physics.diffusive_conductance.mixed_diffusion"]], "ordinary_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[817, "openpnm.models.physics.diffusive_conductance.ordinary_diffusion"]], "taylor_aris_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[818, "openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[819, "module-openpnm.models.physics.electrical_conductance"]], "generic_electrical() (in module openpnm.models.physics.electrical_conductance)": [[820, "openpnm.models.physics.electrical_conductance.generic_electrical"]], "series_resistors() (in module openpnm.models.physics.electrical_conductance)": [[821, "openpnm.models.physics.electrical_conductance.series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[822, "module-openpnm.models.physics.hydraulic_conductance"]], "generic_hydraulic() (in module openpnm.models.physics.hydraulic_conductance)": [[823, "openpnm.models.physics.hydraulic_conductance.generic_hydraulic"]], "hagen_poiseuille() (in module openpnm.models.physics.hydraulic_conductance)": [[824, "openpnm.models.physics.hydraulic_conductance.hagen_poiseuille"]], "valvatne_blunt() (in module openpnm.models.physics.hydraulic_conductance)": [[825, "openpnm.models.physics.hydraulic_conductance.valvatne_blunt"]], "openpnm.models.physics.meniscus": [[826, "module-openpnm.models.physics.meniscus"]], "general_toroidal() (in module openpnm.models.physics.meniscus)": [[827, "openpnm.models.physics.meniscus.general_toroidal"]], "purcell() (in module openpnm.models.physics.meniscus)": [[828, "openpnm.models.physics.meniscus.purcell"]], "sinusoidal() (in module openpnm.models.physics.meniscus)": [[829, "openpnm.models.physics.meniscus.sinusoidal"]], "openpnm.models.physics.multiphase": [[830, "module-openpnm.models.physics.multiphase"]], "conduit_conductance() (in module openpnm.models.physics.multiphase)": [[831, "openpnm.models.physics.multiphase.conduit_conductance"]], "late_filling() (in module openpnm.models.physics.multiphase)": [[832, "openpnm.models.physics.multiphase.late_filling"]], "openpnm.models.physics.source_terms": [[833, "module-openpnm.models.physics.source_terms"]], "butler_volmer_conc() (in module openpnm.models.physics.source_terms)": [[834, "openpnm.models.physics.source_terms.butler_volmer_conc"]], "butler_volmer_voltage() (in module openpnm.models.physics.source_terms)": [[835, "openpnm.models.physics.source_terms.butler_volmer_voltage"]], "exponential() (in module openpnm.models.physics.source_terms)": [[836, "openpnm.models.physics.source_terms.exponential"]], "general_symbolic() (in module openpnm.models.physics.source_terms)": [[837, "openpnm.models.physics.source_terms.general_symbolic"]], "linear() (in module openpnm.models.physics.source_terms)": [[838, "openpnm.models.physics.source_terms.linear"]], "logarithm() (in module openpnm.models.physics.source_terms)": [[839, "openpnm.models.physics.source_terms.logarithm"]], "natural_exponential() (in module openpnm.models.physics.source_terms)": [[840, "openpnm.models.physics.source_terms.natural_exponential"]], "natural_logarithm() (in module openpnm.models.physics.source_terms)": [[841, "openpnm.models.physics.source_terms.natural_logarithm"]], "power_law() (in module openpnm.models.physics.source_terms)": [[842, "openpnm.models.physics.source_terms.power_law"]], "standard_kinetics() (in module openpnm.models.physics.source_terms)": [[843, "openpnm.models.physics.source_terms.standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[844, "module-openpnm.models.physics.thermal_conductance"]], "generic_thermal() (in module openpnm.models.physics.thermal_conductance)": [[845, "openpnm.models.physics.thermal_conductance.generic_thermal"]], "series_resistors() (in module openpnm.models.physics.thermal_conductance)": [[846, "openpnm.models.physics.thermal_conductance.series_resistors"]], "openpnm.network": [[847, "module-openpnm.network"]], "bodycenteredcubic (class in openpnm.network)": [[848, "openpnm.network.BodyCenteredCubic"]], "add_boundary_pores() (bodycenteredcubic method)": [[849, "openpnm.network.BodyCenteredCubic.add_boundary_pores"]], "add_model() (bodycenteredcubic method)": [[850, "openpnm.network.BodyCenteredCubic.add_model"]], "add_model_collection() (bodycenteredcubic method)": [[851, "openpnm.network.BodyCenteredCubic.add_model_collection"]], "clear() (bodycenteredcubic method)": [[852, "openpnm.network.BodyCenteredCubic.clear"]], "copy() (bodycenteredcubic method)": [[853, "openpnm.network.BodyCenteredCubic.copy"]], "create_adjacency_matrix() (bodycenteredcubic method)": [[854, "openpnm.network.BodyCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (bodycenteredcubic method)": [[855, "openpnm.network.BodyCenteredCubic.create_incidence_matrix"]], "filter_by_label() (bodycenteredcubic method)": [[856, "openpnm.network.BodyCenteredCubic.filter_by_label"]], "find_connected_pores() (bodycenteredcubic method)": [[857, "openpnm.network.BodyCenteredCubic.find_connected_pores"]], "find_connecting_throat() (bodycenteredcubic method)": [[858, "openpnm.network.BodyCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (bodycenteredcubic method)": [[859, "openpnm.network.BodyCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (bodycenteredcubic method)": [[860, "openpnm.network.BodyCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (bodycenteredcubic method)": [[861, "openpnm.network.BodyCenteredCubic.find_neighbor_throats"]], "fromkeys() (bodycenteredcubic method)": [[862, "openpnm.network.BodyCenteredCubic.fromkeys"]], "get() (bodycenteredcubic method)": [[863, "openpnm.network.BodyCenteredCubic.get"]], "get_adjacency_matrix() (bodycenteredcubic method)": [[864, "openpnm.network.BodyCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (bodycenteredcubic method)": [[865, "openpnm.network.BodyCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (bodycenteredcubic method)": [[866, "openpnm.network.BodyCenteredCubic.get_incidence_matrix"]], "interpolate_data() (bodycenteredcubic method)": [[867, "openpnm.network.BodyCenteredCubic.interpolate_data"]], "items() (bodycenteredcubic method)": [[868, "openpnm.network.BodyCenteredCubic.items"]], "keys() (bodycenteredcubic method)": [[869, "openpnm.network.BodyCenteredCubic.keys"]], "labels() (bodycenteredcubic method)": [[870, "openpnm.network.BodyCenteredCubic.labels"]], "num_neighbors() (bodycenteredcubic method)": [[871, "openpnm.network.BodyCenteredCubic.num_neighbors"]], "num_pores() (bodycenteredcubic method)": [[872, "openpnm.network.BodyCenteredCubic.num_pores"]], "num_throats() (bodycenteredcubic method)": [[873, "openpnm.network.BodyCenteredCubic.num_throats"]], "pop() (bodycenteredcubic method)": [[874, "openpnm.network.BodyCenteredCubic.pop"]], "popitem() (bodycenteredcubic method)": [[875, "openpnm.network.BodyCenteredCubic.popitem"]], "pores() (bodycenteredcubic method)": [[876, "openpnm.network.BodyCenteredCubic.pores"]], "props() (bodycenteredcubic method)": [[877, "openpnm.network.BodyCenteredCubic.props"]], "regenerate_models() (bodycenteredcubic method)": [[878, "openpnm.network.BodyCenteredCubic.regenerate_models"]], "run_model() (bodycenteredcubic method)": [[879, "openpnm.network.BodyCenteredCubic.run_model"]], "set_label() (bodycenteredcubic method)": [[880, "openpnm.network.BodyCenteredCubic.set_label"]], "setdefault() (bodycenteredcubic method)": [[881, "openpnm.network.BodyCenteredCubic.setdefault"]], "throats() (bodycenteredcubic method)": [[882, "openpnm.network.BodyCenteredCubic.throats"]], "to_indices() (bodycenteredcubic method)": [[883, "openpnm.network.BodyCenteredCubic.to_indices"]], "to_mask() (bodycenteredcubic method)": [[884, "openpnm.network.BodyCenteredCubic.to_mask"]], "update() (bodycenteredcubic method)": [[885, "openpnm.network.BodyCenteredCubic.update"]], "values() (bodycenteredcubic method)": [[886, "openpnm.network.BodyCenteredCubic.values"]], "cubic (class in openpnm.network)": [[887, "openpnm.network.Cubic"]], "add_boundary_pores() (cubic method)": [[888, "openpnm.network.Cubic.add_boundary_pores"]], "add_model() (cubic method)": [[889, "openpnm.network.Cubic.add_model"]], "add_model_collection() (cubic method)": [[890, "openpnm.network.Cubic.add_model_collection"]], "clear() (cubic method)": [[891, "openpnm.network.Cubic.clear"]], "copy() (cubic method)": [[892, "openpnm.network.Cubic.copy"]], "create_adjacency_matrix() (cubic method)": [[893, "openpnm.network.Cubic.create_adjacency_matrix"]], "create_incidence_matrix() (cubic method)": [[894, "openpnm.network.Cubic.create_incidence_matrix"]], "filter_by_label() (cubic method)": [[895, "openpnm.network.Cubic.filter_by_label"]], "find_connected_pores() (cubic method)": [[896, "openpnm.network.Cubic.find_connected_pores"]], "find_connecting_throat() (cubic method)": [[897, "openpnm.network.Cubic.find_connecting_throat"]], "find_nearby_pores() (cubic method)": [[898, "openpnm.network.Cubic.find_nearby_pores"]], "find_neighbor_pores() (cubic method)": [[899, "openpnm.network.Cubic.find_neighbor_pores"]], "find_neighbor_throats() (cubic method)": [[900, "openpnm.network.Cubic.find_neighbor_throats"]], "fromkeys() (cubic method)": [[901, "openpnm.network.Cubic.fromkeys"]], "get() (cubic method)": [[902, "openpnm.network.Cubic.get"]], "get_adjacency_matrix() (cubic method)": [[903, "openpnm.network.Cubic.get_adjacency_matrix"]], "get_conduit_data() (cubic method)": [[904, "openpnm.network.Cubic.get_conduit_data"]], "get_incidence_matrix() (cubic method)": [[905, "openpnm.network.Cubic.get_incidence_matrix"]], "interpolate_data() (cubic method)": [[906, "openpnm.network.Cubic.interpolate_data"]], "items() (cubic method)": [[907, "openpnm.network.Cubic.items"]], "keys() (cubic method)": [[908, "openpnm.network.Cubic.keys"]], "labels() (cubic method)": [[909, "openpnm.network.Cubic.labels"]], "num_neighbors() (cubic method)": [[910, "openpnm.network.Cubic.num_neighbors"]], "num_pores() (cubic method)": [[911, "openpnm.network.Cubic.num_pores"]], "num_throats() (cubic method)": [[912, "openpnm.network.Cubic.num_throats"]], "pop() (cubic method)": [[913, "openpnm.network.Cubic.pop"]], "popitem() (cubic method)": [[914, "openpnm.network.Cubic.popitem"]], "pores() (cubic method)": [[915, "openpnm.network.Cubic.pores"]], "props() (cubic method)": [[916, "openpnm.network.Cubic.props"]], "regenerate_models() (cubic method)": [[917, "openpnm.network.Cubic.regenerate_models"]], "run_model() (cubic method)": [[918, "openpnm.network.Cubic.run_model"]], "set_label() (cubic method)": [[919, "openpnm.network.Cubic.set_label"]], "setdefault() (cubic method)": [[920, "openpnm.network.Cubic.setdefault"]], "throats() (cubic method)": [[921, "openpnm.network.Cubic.throats"]], "to_indices() (cubic method)": [[922, "openpnm.network.Cubic.to_indices"]], "to_mask() (cubic method)": [[923, "openpnm.network.Cubic.to_mask"]], "update() (cubic method)": [[924, "openpnm.network.Cubic.update"]], "values() (cubic method)": [[925, "openpnm.network.Cubic.values"]], "cubictemplate (class in openpnm.network)": [[926, "openpnm.network.CubicTemplate"]], "add_model() (cubictemplate method)": [[927, "openpnm.network.CubicTemplate.add_model"]], "add_model_collection() (cubictemplate method)": [[928, "openpnm.network.CubicTemplate.add_model_collection"]], "clear() (cubictemplate method)": [[929, "openpnm.network.CubicTemplate.clear"]], "copy() (cubictemplate method)": [[930, "openpnm.network.CubicTemplate.copy"]], "create_adjacency_matrix() (cubictemplate method)": [[931, "openpnm.network.CubicTemplate.create_adjacency_matrix"]], "create_incidence_matrix() (cubictemplate method)": [[932, "openpnm.network.CubicTemplate.create_incidence_matrix"]], "filter_by_label() (cubictemplate method)": [[933, "openpnm.network.CubicTemplate.filter_by_label"]], "find_connected_pores() (cubictemplate method)": [[934, "openpnm.network.CubicTemplate.find_connected_pores"]], "find_connecting_throat() (cubictemplate method)": [[935, "openpnm.network.CubicTemplate.find_connecting_throat"]], "find_nearby_pores() (cubictemplate method)": [[936, "openpnm.network.CubicTemplate.find_nearby_pores"]], "find_neighbor_pores() (cubictemplate method)": [[937, "openpnm.network.CubicTemplate.find_neighbor_pores"]], "find_neighbor_throats() (cubictemplate method)": [[938, "openpnm.network.CubicTemplate.find_neighbor_throats"]], "fromkeys() (cubictemplate method)": [[939, "openpnm.network.CubicTemplate.fromkeys"]], "get() (cubictemplate method)": [[940, "openpnm.network.CubicTemplate.get"]], "get_adjacency_matrix() (cubictemplate method)": [[941, "openpnm.network.CubicTemplate.get_adjacency_matrix"]], "get_conduit_data() (cubictemplate method)": [[942, "openpnm.network.CubicTemplate.get_conduit_data"]], "get_incidence_matrix() (cubictemplate method)": [[943, "openpnm.network.CubicTemplate.get_incidence_matrix"]], "interpolate_data() (cubictemplate method)": [[944, "openpnm.network.CubicTemplate.interpolate_data"]], "items() (cubictemplate method)": [[945, "openpnm.network.CubicTemplate.items"]], "keys() (cubictemplate method)": [[946, "openpnm.network.CubicTemplate.keys"]], "labels() (cubictemplate method)": [[947, "openpnm.network.CubicTemplate.labels"]], "num_neighbors() (cubictemplate method)": [[948, "openpnm.network.CubicTemplate.num_neighbors"]], "num_pores() (cubictemplate method)": [[949, "openpnm.network.CubicTemplate.num_pores"]], "num_throats() (cubictemplate method)": [[950, "openpnm.network.CubicTemplate.num_throats"]], "pop() (cubictemplate method)": [[951, "openpnm.network.CubicTemplate.pop"]], "popitem() (cubictemplate method)": [[952, "openpnm.network.CubicTemplate.popitem"]], "pores() (cubictemplate method)": [[953, "openpnm.network.CubicTemplate.pores"]], "props() (cubictemplate method)": [[954, "openpnm.network.CubicTemplate.props"]], "regenerate_models() (cubictemplate method)": [[955, "openpnm.network.CubicTemplate.regenerate_models"]], "run_model() (cubictemplate method)": [[956, "openpnm.network.CubicTemplate.run_model"]], "set_label() (cubictemplate method)": [[957, "openpnm.network.CubicTemplate.set_label"]], "setdefault() (cubictemplate method)": [[958, "openpnm.network.CubicTemplate.setdefault"]], "throats() (cubictemplate method)": [[959, "openpnm.network.CubicTemplate.throats"]], "to_indices() (cubictemplate method)": [[960, "openpnm.network.CubicTemplate.to_indices"]], "to_mask() (cubictemplate method)": [[961, "openpnm.network.CubicTemplate.to_mask"]], "update() (cubictemplate method)": [[962, "openpnm.network.CubicTemplate.update"]], "values() (cubictemplate method)": [[963, "openpnm.network.CubicTemplate.values"]], "delaunay (class in openpnm.network)": [[964, "openpnm.network.Delaunay"]], "add_model() (delaunay method)": [[965, "openpnm.network.Delaunay.add_model"]], "add_model_collection() (delaunay method)": [[966, "openpnm.network.Delaunay.add_model_collection"]], "clear() (delaunay method)": [[967, "openpnm.network.Delaunay.clear"]], "copy() (delaunay method)": [[968, "openpnm.network.Delaunay.copy"]], "create_adjacency_matrix() (delaunay method)": [[969, "openpnm.network.Delaunay.create_adjacency_matrix"]], "create_incidence_matrix() (delaunay method)": [[970, "openpnm.network.Delaunay.create_incidence_matrix"]], "filter_by_label() (delaunay method)": [[971, "openpnm.network.Delaunay.filter_by_label"]], "find_connected_pores() (delaunay method)": [[972, "openpnm.network.Delaunay.find_connected_pores"]], "find_connecting_throat() (delaunay method)": [[973, "openpnm.network.Delaunay.find_connecting_throat"]], "find_nearby_pores() (delaunay method)": [[974, "openpnm.network.Delaunay.find_nearby_pores"]], "find_neighbor_pores() (delaunay method)": [[975, "openpnm.network.Delaunay.find_neighbor_pores"]], "find_neighbor_throats() (delaunay method)": [[976, "openpnm.network.Delaunay.find_neighbor_throats"]], "fromkeys() (delaunay method)": [[977, "openpnm.network.Delaunay.fromkeys"]], "get() (delaunay method)": [[978, "openpnm.network.Delaunay.get"]], "get_adjacency_matrix() (delaunay method)": [[979, "openpnm.network.Delaunay.get_adjacency_matrix"]], "get_conduit_data() (delaunay method)": [[980, "openpnm.network.Delaunay.get_conduit_data"]], "get_incidence_matrix() (delaunay method)": [[981, "openpnm.network.Delaunay.get_incidence_matrix"]], "interpolate_data() (delaunay method)": [[982, "openpnm.network.Delaunay.interpolate_data"]], "items() (delaunay method)": [[983, "openpnm.network.Delaunay.items"]], "keys() (delaunay method)": [[984, "openpnm.network.Delaunay.keys"]], "labels() (delaunay method)": [[985, "openpnm.network.Delaunay.labels"]], "num_neighbors() (delaunay method)": [[986, "openpnm.network.Delaunay.num_neighbors"]], "num_pores() (delaunay method)": [[987, "openpnm.network.Delaunay.num_pores"]], "num_throats() (delaunay method)": [[988, "openpnm.network.Delaunay.num_throats"]], "pop() (delaunay method)": [[989, "openpnm.network.Delaunay.pop"]], "popitem() (delaunay method)": [[990, "openpnm.network.Delaunay.popitem"]], "pores() (delaunay method)": [[991, "openpnm.network.Delaunay.pores"]], "props() (delaunay method)": [[992, "openpnm.network.Delaunay.props"]], "regenerate_models() (delaunay method)": [[993, "openpnm.network.Delaunay.regenerate_models"]], "run_model() (delaunay method)": [[994, "openpnm.network.Delaunay.run_model"]], "set_label() (delaunay method)": [[995, "openpnm.network.Delaunay.set_label"]], "setdefault() (delaunay method)": [[996, "openpnm.network.Delaunay.setdefault"]], "throats() (delaunay method)": [[997, "openpnm.network.Delaunay.throats"]], "to_indices() (delaunay method)": [[998, "openpnm.network.Delaunay.to_indices"]], "to_mask() (delaunay method)": [[999, "openpnm.network.Delaunay.to_mask"]], "update() (delaunay method)": [[1000, "openpnm.network.Delaunay.update"]], "values() (delaunay method)": [[1001, "openpnm.network.Delaunay.values"]], "delaunayvoronoidual (class in openpnm.network)": [[1002, "openpnm.network.DelaunayVoronoiDual"]], "add_model() (delaunayvoronoidual method)": [[1003, "openpnm.network.DelaunayVoronoiDual.add_model"]], "add_model_collection() (delaunayvoronoidual method)": [[1004, "openpnm.network.DelaunayVoronoiDual.add_model_collection"]], "clear() (delaunayvoronoidual method)": [[1005, "openpnm.network.DelaunayVoronoiDual.clear"]], "copy() (delaunayvoronoidual method)": [[1006, "openpnm.network.DelaunayVoronoiDual.copy"]], "create_adjacency_matrix() (delaunayvoronoidual method)": [[1007, "openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix"]], "create_incidence_matrix() (delaunayvoronoidual method)": [[1008, "openpnm.network.DelaunayVoronoiDual.create_incidence_matrix"]], "filter_by_label() (delaunayvoronoidual method)": [[1009, "openpnm.network.DelaunayVoronoiDual.filter_by_label"]], "find_connected_pores() (delaunayvoronoidual method)": [[1010, "openpnm.network.DelaunayVoronoiDual.find_connected_pores"]], "find_connecting_throat() (delaunayvoronoidual method)": [[1011, "openpnm.network.DelaunayVoronoiDual.find_connecting_throat"]], "find_nearby_pores() (delaunayvoronoidual method)": [[1012, "openpnm.network.DelaunayVoronoiDual.find_nearby_pores"]], "find_neighbor_pores() (delaunayvoronoidual method)": [[1013, "openpnm.network.DelaunayVoronoiDual.find_neighbor_pores"]], "find_neighbor_throats() (delaunayvoronoidual method)": [[1014, "openpnm.network.DelaunayVoronoiDual.find_neighbor_throats"]], "find_pore_hulls() (delaunayvoronoidual method)": [[1015, "openpnm.network.DelaunayVoronoiDual.find_pore_hulls"]], "find_throat_facets() (delaunayvoronoidual method)": [[1016, "openpnm.network.DelaunayVoronoiDual.find_throat_facets"]], "fromkeys() (delaunayvoronoidual method)": [[1017, "openpnm.network.DelaunayVoronoiDual.fromkeys"]], "get() (delaunayvoronoidual method)": [[1018, "openpnm.network.DelaunayVoronoiDual.get"]], "get_adjacency_matrix() (delaunayvoronoidual method)": [[1019, "openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix"]], "get_conduit_data() (delaunayvoronoidual method)": [[1020, "openpnm.network.DelaunayVoronoiDual.get_conduit_data"]], "get_incidence_matrix() (delaunayvoronoidual method)": [[1021, "openpnm.network.DelaunayVoronoiDual.get_incidence_matrix"]], "interpolate_data() (delaunayvoronoidual method)": [[1022, "openpnm.network.DelaunayVoronoiDual.interpolate_data"]], "items() (delaunayvoronoidual method)": [[1023, "openpnm.network.DelaunayVoronoiDual.items"]], "keys() (delaunayvoronoidual method)": [[1024, "openpnm.network.DelaunayVoronoiDual.keys"]], "labels() (delaunayvoronoidual method)": [[1025, "openpnm.network.DelaunayVoronoiDual.labels"]], "num_neighbors() (delaunayvoronoidual method)": [[1026, "openpnm.network.DelaunayVoronoiDual.num_neighbors"]], "num_pores() (delaunayvoronoidual method)": [[1027, "openpnm.network.DelaunayVoronoiDual.num_pores"]], "num_throats() (delaunayvoronoidual method)": [[1028, "openpnm.network.DelaunayVoronoiDual.num_throats"]], "pop() (delaunayvoronoidual method)": [[1029, "openpnm.network.DelaunayVoronoiDual.pop"]], "popitem() (delaunayvoronoidual method)": [[1030, "openpnm.network.DelaunayVoronoiDual.popitem"]], "pores() (delaunayvoronoidual method)": [[1031, "openpnm.network.DelaunayVoronoiDual.pores"]], "props() (delaunayvoronoidual method)": [[1032, "openpnm.network.DelaunayVoronoiDual.props"]], "regenerate_models() (delaunayvoronoidual method)": [[1033, "openpnm.network.DelaunayVoronoiDual.regenerate_models"]], "run_model() (delaunayvoronoidual method)": [[1034, "openpnm.network.DelaunayVoronoiDual.run_model"]], "set_label() (delaunayvoronoidual method)": [[1035, "openpnm.network.DelaunayVoronoiDual.set_label"]], "setdefault() (delaunayvoronoidual method)": [[1036, "openpnm.network.DelaunayVoronoiDual.setdefault"]], "throats() (delaunayvoronoidual method)": [[1037, "openpnm.network.DelaunayVoronoiDual.throats"]], "to_indices() (delaunayvoronoidual method)": [[1038, "openpnm.network.DelaunayVoronoiDual.to_indices"]], "to_mask() (delaunayvoronoidual method)": [[1039, "openpnm.network.DelaunayVoronoiDual.to_mask"]], "update() (delaunayvoronoidual method)": [[1040, "openpnm.network.DelaunayVoronoiDual.update"]], "values() (delaunayvoronoidual method)": [[1041, "openpnm.network.DelaunayVoronoiDual.values"]], "demo (class in openpnm.network)": [[1042, "openpnm.network.Demo"]], "add_boundary_pores() (demo method)": [[1043, "openpnm.network.Demo.add_boundary_pores"]], "add_model() (demo method)": [[1044, "openpnm.network.Demo.add_model"]], "add_model_collection() (demo method)": [[1045, "openpnm.network.Demo.add_model_collection"]], "clear() (demo method)": [[1046, "openpnm.network.Demo.clear"]], "copy() (demo method)": [[1047, "openpnm.network.Demo.copy"]], "create_adjacency_matrix() (demo method)": [[1048, "openpnm.network.Demo.create_adjacency_matrix"]], "create_incidence_matrix() (demo method)": [[1049, "openpnm.network.Demo.create_incidence_matrix"]], "filter_by_label() (demo method)": [[1050, "openpnm.network.Demo.filter_by_label"]], "find_connected_pores() (demo method)": [[1051, "openpnm.network.Demo.find_connected_pores"]], "find_connecting_throat() (demo method)": [[1052, "openpnm.network.Demo.find_connecting_throat"]], "find_nearby_pores() (demo method)": [[1053, "openpnm.network.Demo.find_nearby_pores"]], "find_neighbor_pores() (demo method)": [[1054, "openpnm.network.Demo.find_neighbor_pores"]], "find_neighbor_throats() (demo method)": [[1055, "openpnm.network.Demo.find_neighbor_throats"]], "fromkeys() (demo method)": [[1056, "openpnm.network.Demo.fromkeys"]], "get() (demo method)": [[1057, "openpnm.network.Demo.get"]], "get_adjacency_matrix() (demo method)": [[1058, "openpnm.network.Demo.get_adjacency_matrix"]], "get_conduit_data() (demo method)": [[1059, "openpnm.network.Demo.get_conduit_data"]], "get_incidence_matrix() (demo method)": [[1060, "openpnm.network.Demo.get_incidence_matrix"]], "interpolate_data() (demo method)": [[1061, "openpnm.network.Demo.interpolate_data"]], "items() (demo method)": [[1062, "openpnm.network.Demo.items"]], "keys() (demo method)": [[1063, "openpnm.network.Demo.keys"]], "labels() (demo method)": [[1064, "openpnm.network.Demo.labels"]], "num_neighbors() (demo method)": [[1065, "openpnm.network.Demo.num_neighbors"]], "num_pores() (demo method)": [[1066, "openpnm.network.Demo.num_pores"]], "num_throats() (demo method)": [[1067, "openpnm.network.Demo.num_throats"]], "pop() (demo method)": [[1068, "openpnm.network.Demo.pop"]], "popitem() (demo method)": [[1069, "openpnm.network.Demo.popitem"]], "pores() (demo method)": [[1070, "openpnm.network.Demo.pores"]], "props() (demo method)": [[1071, "openpnm.network.Demo.props"]], "regenerate_models() (demo method)": [[1072, "openpnm.network.Demo.regenerate_models"]], "run_model() (demo method)": [[1073, "openpnm.network.Demo.run_model"]], "set_label() (demo method)": [[1074, "openpnm.network.Demo.set_label"]], "setdefault() (demo method)": [[1075, "openpnm.network.Demo.setdefault"]], "throats() (demo method)": [[1076, "openpnm.network.Demo.throats"]], "to_indices() (demo method)": [[1077, "openpnm.network.Demo.to_indices"]], "to_mask() (demo method)": [[1078, "openpnm.network.Demo.to_mask"]], "update() (demo method)": [[1079, "openpnm.network.Demo.update"]], "values() (demo method)": [[1080, "openpnm.network.Demo.values"]], "facecenteredcubic (class in openpnm.network)": [[1081, "openpnm.network.FaceCenteredCubic"]], "add_boundary_pores() (facecenteredcubic method)": [[1082, "openpnm.network.FaceCenteredCubic.add_boundary_pores"]], "add_model() (facecenteredcubic method)": [[1083, "openpnm.network.FaceCenteredCubic.add_model"]], "add_model_collection() (facecenteredcubic method)": [[1084, "openpnm.network.FaceCenteredCubic.add_model_collection"]], "clear() (facecenteredcubic method)": [[1085, "openpnm.network.FaceCenteredCubic.clear"]], "copy() (facecenteredcubic method)": [[1086, "openpnm.network.FaceCenteredCubic.copy"]], "create_adjacency_matrix() (facecenteredcubic method)": [[1087, "openpnm.network.FaceCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (facecenteredcubic method)": [[1088, "openpnm.network.FaceCenteredCubic.create_incidence_matrix"]], "filter_by_label() (facecenteredcubic method)": [[1089, "openpnm.network.FaceCenteredCubic.filter_by_label"]], "find_connected_pores() (facecenteredcubic method)": [[1090, "openpnm.network.FaceCenteredCubic.find_connected_pores"]], "find_connecting_throat() (facecenteredcubic method)": [[1091, "openpnm.network.FaceCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (facecenteredcubic method)": [[1092, "openpnm.network.FaceCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (facecenteredcubic method)": [[1093, "openpnm.network.FaceCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (facecenteredcubic method)": [[1094, "openpnm.network.FaceCenteredCubic.find_neighbor_throats"]], "fromkeys() (facecenteredcubic method)": [[1095, "openpnm.network.FaceCenteredCubic.fromkeys"]], "get() (facecenteredcubic method)": [[1096, "openpnm.network.FaceCenteredCubic.get"]], "get_adjacency_matrix() (facecenteredcubic method)": [[1097, "openpnm.network.FaceCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (facecenteredcubic method)": [[1098, "openpnm.network.FaceCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (facecenteredcubic method)": [[1099, "openpnm.network.FaceCenteredCubic.get_incidence_matrix"]], "interpolate_data() (facecenteredcubic method)": [[1100, "openpnm.network.FaceCenteredCubic.interpolate_data"]], "items() (facecenteredcubic method)": [[1101, "openpnm.network.FaceCenteredCubic.items"]], "keys() (facecenteredcubic method)": [[1102, "openpnm.network.FaceCenteredCubic.keys"]], "labels() (facecenteredcubic method)": [[1103, "openpnm.network.FaceCenteredCubic.labels"]], "num_neighbors() (facecenteredcubic method)": [[1104, "openpnm.network.FaceCenteredCubic.num_neighbors"]], "num_pores() (facecenteredcubic method)": [[1105, "openpnm.network.FaceCenteredCubic.num_pores"]], "num_throats() (facecenteredcubic method)": [[1106, "openpnm.network.FaceCenteredCubic.num_throats"]], "pop() (facecenteredcubic method)": [[1107, "openpnm.network.FaceCenteredCubic.pop"]], "popitem() (facecenteredcubic method)": [[1108, "openpnm.network.FaceCenteredCubic.popitem"]], "pores() (facecenteredcubic method)": [[1109, "openpnm.network.FaceCenteredCubic.pores"]], "props() (facecenteredcubic method)": [[1110, "openpnm.network.FaceCenteredCubic.props"]], "regenerate_models() (facecenteredcubic method)": [[1111, "openpnm.network.FaceCenteredCubic.regenerate_models"]], "run_model() (facecenteredcubic method)": [[1112, "openpnm.network.FaceCenteredCubic.run_model"]], "set_label() (facecenteredcubic method)": [[1113, "openpnm.network.FaceCenteredCubic.set_label"]], "setdefault() (facecenteredcubic method)": [[1114, "openpnm.network.FaceCenteredCubic.setdefault"]], "throats() (facecenteredcubic method)": [[1115, "openpnm.network.FaceCenteredCubic.throats"]], "to_indices() (facecenteredcubic method)": [[1116, "openpnm.network.FaceCenteredCubic.to_indices"]], "to_mask() (facecenteredcubic method)": [[1117, "openpnm.network.FaceCenteredCubic.to_mask"]], "update() (facecenteredcubic method)": [[1118, "openpnm.network.FaceCenteredCubic.update"]], "values() (facecenteredcubic method)": [[1119, "openpnm.network.FaceCenteredCubic.values"]], "network (class in openpnm.network)": [[1120, "openpnm.network.Network"]], "add_model() (network method)": [[1121, "openpnm.network.Network.add_model"]], "add_model_collection() (network method)": [[1122, "openpnm.network.Network.add_model_collection"]], "clear() (network method)": [[1123, "openpnm.network.Network.clear"]], "copy() (network method)": [[1124, "openpnm.network.Network.copy"]], "create_adjacency_matrix() (network method)": [[1125, "openpnm.network.Network.create_adjacency_matrix"]], "create_incidence_matrix() (network method)": [[1126, "openpnm.network.Network.create_incidence_matrix"]], "filter_by_label() (network method)": [[1127, "openpnm.network.Network.filter_by_label"]], "find_connected_pores() (network method)": [[1128, "openpnm.network.Network.find_connected_pores"]], "find_connecting_throat() (network method)": [[1129, "openpnm.network.Network.find_connecting_throat"]], "find_nearby_pores() (network method)": [[1130, "openpnm.network.Network.find_nearby_pores"]], "find_neighbor_pores() (network method)": [[1131, "openpnm.network.Network.find_neighbor_pores"]], "find_neighbor_throats() (network method)": [[1132, "openpnm.network.Network.find_neighbor_throats"]], "fromkeys() (network method)": [[1133, "openpnm.network.Network.fromkeys"]], "get() (network method)": [[1134, "openpnm.network.Network.get"]], "get_adjacency_matrix() (network method)": [[1135, "openpnm.network.Network.get_adjacency_matrix"]], "get_conduit_data() (network method)": [[1136, "openpnm.network.Network.get_conduit_data"]], "get_incidence_matrix() (network method)": [[1137, "openpnm.network.Network.get_incidence_matrix"]], "interpolate_data() (network method)": [[1138, "openpnm.network.Network.interpolate_data"]], "items() (network method)": [[1139, "openpnm.network.Network.items"]], "keys() (network method)": [[1140, "openpnm.network.Network.keys"]], "labels() (network method)": [[1141, "openpnm.network.Network.labels"]], "num_neighbors() (network method)": [[1142, "openpnm.network.Network.num_neighbors"]], "num_pores() (network method)": [[1143, "openpnm.network.Network.num_pores"]], "num_throats() (network method)": [[1144, "openpnm.network.Network.num_throats"]], "pop() (network method)": [[1145, "openpnm.network.Network.pop"]], "popitem() (network method)": [[1146, "openpnm.network.Network.popitem"]], "pores() (network method)": [[1147, "openpnm.network.Network.pores"]], "props() (network method)": [[1148, "openpnm.network.Network.props"]], "regenerate_models() (network method)": [[1149, "openpnm.network.Network.regenerate_models"]], "run_model() (network method)": [[1150, "openpnm.network.Network.run_model"]], "set_label() (network method)": [[1151, "openpnm.network.Network.set_label"]], "setdefault() (network method)": [[1152, "openpnm.network.Network.setdefault"]], "throats() (network method)": [[1153, "openpnm.network.Network.throats"]], "to_indices() (network method)": [[1154, "openpnm.network.Network.to_indices"]], "to_mask() (network method)": [[1155, "openpnm.network.Network.to_mask"]], "update() (network method)": [[1156, "openpnm.network.Network.update"]], "values() (network method)": [[1157, "openpnm.network.Network.values"]], "voronoi (class in openpnm.network)": [[1158, "openpnm.network.Voronoi"]], "add_model() (voronoi method)": [[1159, "openpnm.network.Voronoi.add_model"]], "add_model_collection() (voronoi method)": [[1160, "openpnm.network.Voronoi.add_model_collection"]], "clear() (voronoi method)": [[1161, "openpnm.network.Voronoi.clear"]], "copy() (voronoi method)": [[1162, "openpnm.network.Voronoi.copy"]], "create_adjacency_matrix() (voronoi method)": [[1163, "openpnm.network.Voronoi.create_adjacency_matrix"]], "create_incidence_matrix() (voronoi method)": [[1164, "openpnm.network.Voronoi.create_incidence_matrix"]], "filter_by_label() (voronoi method)": [[1165, "openpnm.network.Voronoi.filter_by_label"]], "find_connected_pores() (voronoi method)": [[1166, "openpnm.network.Voronoi.find_connected_pores"]], "find_connecting_throat() (voronoi method)": [[1167, "openpnm.network.Voronoi.find_connecting_throat"]], "find_nearby_pores() (voronoi method)": [[1168, "openpnm.network.Voronoi.find_nearby_pores"]], "find_neighbor_pores() (voronoi method)": [[1169, "openpnm.network.Voronoi.find_neighbor_pores"]], "find_neighbor_throats() (voronoi method)": [[1170, "openpnm.network.Voronoi.find_neighbor_throats"]], "fromkeys() (voronoi method)": [[1171, "openpnm.network.Voronoi.fromkeys"]], "get() (voronoi method)": [[1172, "openpnm.network.Voronoi.get"]], "get_adjacency_matrix() (voronoi method)": [[1173, "openpnm.network.Voronoi.get_adjacency_matrix"]], "get_conduit_data() (voronoi method)": [[1174, "openpnm.network.Voronoi.get_conduit_data"]], "get_incidence_matrix() (voronoi method)": [[1175, "openpnm.network.Voronoi.get_incidence_matrix"]], "interpolate_data() (voronoi method)": [[1176, "openpnm.network.Voronoi.interpolate_data"]], "items() (voronoi method)": [[1177, "openpnm.network.Voronoi.items"]], "keys() (voronoi method)": [[1178, "openpnm.network.Voronoi.keys"]], "labels() (voronoi method)": [[1179, "openpnm.network.Voronoi.labels"]], "num_neighbors() (voronoi method)": [[1180, "openpnm.network.Voronoi.num_neighbors"]], "num_pores() (voronoi method)": [[1181, "openpnm.network.Voronoi.num_pores"]], "num_throats() (voronoi method)": [[1182, "openpnm.network.Voronoi.num_throats"]], "pop() (voronoi method)": [[1183, "openpnm.network.Voronoi.pop"]], "popitem() (voronoi method)": [[1184, "openpnm.network.Voronoi.popitem"]], "pores() (voronoi method)": [[1185, "openpnm.network.Voronoi.pores"]], "props() (voronoi method)": [[1186, "openpnm.network.Voronoi.props"]], "regenerate_models() (voronoi method)": [[1187, "openpnm.network.Voronoi.regenerate_models"]], "run_model() (voronoi method)": [[1188, "openpnm.network.Voronoi.run_model"]], "set_label() (voronoi method)": [[1189, "openpnm.network.Voronoi.set_label"]], "setdefault() (voronoi method)": [[1190, "openpnm.network.Voronoi.setdefault"]], "throats() (voronoi method)": [[1191, "openpnm.network.Voronoi.throats"]], "to_indices() (voronoi method)": [[1192, "openpnm.network.Voronoi.to_indices"]], "to_mask() (voronoi method)": [[1193, "openpnm.network.Voronoi.to_mask"]], "update() (voronoi method)": [[1194, "openpnm.network.Voronoi.update"]], "values() (voronoi method)": [[1195, "openpnm.network.Voronoi.values"]], "openpnm.phase": [[1196, "module-openpnm.phase"]], "air (class in openpnm.phase)": [[1197, "openpnm.phase.Air"]], "add_model() (air method)": [[1198, "openpnm.phase.Air.add_model"]], "add_model_collection() (air method)": [[1199, "openpnm.phase.Air.add_model_collection"]], "clear() (air method)": [[1200, "openpnm.phase.Air.clear"]], "copy() (air method)": [[1201, "openpnm.phase.Air.copy"]], "filter_by_label() (air method)": [[1202, "openpnm.phase.Air.filter_by_label"]], "fromkeys() (air method)": [[1203, "openpnm.phase.Air.fromkeys"]], "get() (air method)": [[1204, "openpnm.phase.Air.get"]], "get_conduit_data() (air method)": [[1205, "openpnm.phase.Air.get_conduit_data"]], "interpolate_data() (air method)": [[1206, "openpnm.phase.Air.interpolate_data"]], "items() (air method)": [[1207, "openpnm.phase.Air.items"]], "keys() (air method)": [[1208, "openpnm.phase.Air.keys"]], "labels() (air method)": [[1209, "openpnm.phase.Air.labels"]], "num_pores() (air method)": [[1210, "openpnm.phase.Air.num_pores"]], "num_throats() (air method)": [[1211, "openpnm.phase.Air.num_throats"]], "pop() (air method)": [[1212, "openpnm.phase.Air.pop"]], "popitem() (air method)": [[1213, "openpnm.phase.Air.popitem"]], "pores() (air method)": [[1214, "openpnm.phase.Air.pores"]], "props() (air method)": [[1215, "openpnm.phase.Air.props"]], "regenerate_models() (air method)": [[1216, "openpnm.phase.Air.regenerate_models"]], "run_model() (air method)": [[1217, "openpnm.phase.Air.run_model"]], "set_label() (air method)": [[1218, "openpnm.phase.Air.set_label"]], "setdefault() (air method)": [[1219, "openpnm.phase.Air.setdefault"]], "throats() (air method)": [[1220, "openpnm.phase.Air.throats"]], "to_indices() (air method)": [[1221, "openpnm.phase.Air.to_indices"]], "to_mask() (air method)": [[1222, "openpnm.phase.Air.to_mask"]], "update() (air method)": [[1223, "openpnm.phase.Air.update"]], "values() (air method)": [[1224, "openpnm.phase.Air.values"]], "binarygas (class in openpnm.phase)": [[1225, "openpnm.phase.BinaryGas"]], "add_comp() (binarygas method)": [[1226, "openpnm.phase.BinaryGas.add_comp"]], "add_model() (binarygas method)": [[1227, "openpnm.phase.BinaryGas.add_model"]], "add_model_collection() (binarygas method)": [[1228, "openpnm.phase.BinaryGas.add_model_collection"]], "check_mixture_health() (binarygas method)": [[1229, "openpnm.phase.BinaryGas.check_mixture_health"]], "clear() (binarygas method)": [[1230, "openpnm.phase.BinaryGas.clear"]], "copy() (binarygas method)": [[1231, "openpnm.phase.BinaryGas.copy"]], "filter_by_label() (binarygas method)": [[1232, "openpnm.phase.BinaryGas.filter_by_label"]], "fromkeys() (binarygas method)": [[1233, "openpnm.phase.BinaryGas.fromkeys"]], "get() (binarygas method)": [[1234, "openpnm.phase.BinaryGas.get"]], "get_comp_vals() (binarygas method)": [[1235, "openpnm.phase.BinaryGas.get_comp_vals"]], "get_conduit_data() (binarygas method)": [[1236, "openpnm.phase.BinaryGas.get_conduit_data"]], "get_mix_vals() (binarygas method)": [[1237, "openpnm.phase.BinaryGas.get_mix_vals"]], "interpolate_data() (binarygas method)": [[1238, "openpnm.phase.BinaryGas.interpolate_data"]], "items() (binarygas method)": [[1239, "openpnm.phase.BinaryGas.items"]], "keys() (binarygas method)": [[1240, "openpnm.phase.BinaryGas.keys"]], "labels() (binarygas method)": [[1241, "openpnm.phase.BinaryGas.labels"]], "num_pores() (binarygas method)": [[1242, "openpnm.phase.BinaryGas.num_pores"]], "num_throats() (binarygas method)": [[1243, "openpnm.phase.BinaryGas.num_throats"]], "pop() (binarygas method)": [[1244, "openpnm.phase.BinaryGas.pop"]], "popitem() (binarygas method)": [[1245, "openpnm.phase.BinaryGas.popitem"]], "pores() (binarygas method)": [[1246, "openpnm.phase.BinaryGas.pores"]], "props() (binarygas method)": [[1247, "openpnm.phase.BinaryGas.props"]], "regenerate_models() (binarygas method)": [[1248, "openpnm.phase.BinaryGas.regenerate_models"]], "remove_comp() (binarygas method)": [[1249, "openpnm.phase.BinaryGas.remove_comp"]], "run_model() (binarygas method)": [[1250, "openpnm.phase.BinaryGas.run_model"]], "set_label() (binarygas method)": [[1251, "openpnm.phase.BinaryGas.set_label"]], "setdefault() (binarygas method)": [[1252, "openpnm.phase.BinaryGas.setdefault"]], "throats() (binarygas method)": [[1253, "openpnm.phase.BinaryGas.throats"]], "to_indices() (binarygas method)": [[1254, "openpnm.phase.BinaryGas.to_indices"]], "to_mask() (binarygas method)": [[1255, "openpnm.phase.BinaryGas.to_mask"]], "update() (binarygas method)": [[1256, "openpnm.phase.BinaryGas.update"]], "values() (binarygas method)": [[1257, "openpnm.phase.BinaryGas.values"]], "y() (binarygas method)": [[1258, "openpnm.phase.BinaryGas.y"]], "gasmixture (class in openpnm.phase)": [[1259, "openpnm.phase.GasMixture"]], "add_comp() (gasmixture method)": [[1260, "openpnm.phase.GasMixture.add_comp"]], "add_model() (gasmixture method)": [[1261, "openpnm.phase.GasMixture.add_model"]], "add_model_collection() (gasmixture method)": [[1262, "openpnm.phase.GasMixture.add_model_collection"]], "check_mixture_health() (gasmixture method)": [[1263, "openpnm.phase.GasMixture.check_mixture_health"]], "clear() (gasmixture method)": [[1264, "openpnm.phase.GasMixture.clear"]], "copy() (gasmixture method)": [[1265, "openpnm.phase.GasMixture.copy"]], "filter_by_label() (gasmixture method)": [[1266, "openpnm.phase.GasMixture.filter_by_label"]], "fromkeys() (gasmixture method)": [[1267, "openpnm.phase.GasMixture.fromkeys"]], "get() (gasmixture method)": [[1268, "openpnm.phase.GasMixture.get"]], "get_comp_vals() (gasmixture method)": [[1269, "openpnm.phase.GasMixture.get_comp_vals"]], "get_conduit_data() (gasmixture method)": [[1270, "openpnm.phase.GasMixture.get_conduit_data"]], "get_mix_vals() (gasmixture method)": [[1271, "openpnm.phase.GasMixture.get_mix_vals"]], "interpolate_data() (gasmixture method)": [[1272, "openpnm.phase.GasMixture.interpolate_data"]], "items() (gasmixture method)": [[1273, "openpnm.phase.GasMixture.items"]], "keys() (gasmixture method)": [[1274, "openpnm.phase.GasMixture.keys"]], "labels() (gasmixture method)": [[1275, "openpnm.phase.GasMixture.labels"]], "num_pores() (gasmixture method)": [[1276, "openpnm.phase.GasMixture.num_pores"]], "num_throats() (gasmixture method)": [[1277, "openpnm.phase.GasMixture.num_throats"]], "pop() (gasmixture method)": [[1278, "openpnm.phase.GasMixture.pop"]], "popitem() (gasmixture method)": [[1279, "openpnm.phase.GasMixture.popitem"]], "pores() (gasmixture method)": [[1280, "openpnm.phase.GasMixture.pores"]], "props() (gasmixture method)": [[1281, "openpnm.phase.GasMixture.props"]], "regenerate_models() (gasmixture method)": [[1282, "openpnm.phase.GasMixture.regenerate_models"]], "remove_comp() (gasmixture method)": [[1283, "openpnm.phase.GasMixture.remove_comp"]], "run_model() (gasmixture method)": [[1284, "openpnm.phase.GasMixture.run_model"]], "set_label() (gasmixture method)": [[1285, "openpnm.phase.GasMixture.set_label"]], "setdefault() (gasmixture method)": [[1286, "openpnm.phase.GasMixture.setdefault"]], "throats() (gasmixture method)": [[1287, "openpnm.phase.GasMixture.throats"]], "to_indices() (gasmixture method)": [[1288, "openpnm.phase.GasMixture.to_indices"]], "to_mask() (gasmixture method)": [[1289, "openpnm.phase.GasMixture.to_mask"]], "update() (gasmixture method)": [[1290, "openpnm.phase.GasMixture.update"]], "values() (gasmixture method)": [[1291, "openpnm.phase.GasMixture.values"]], "y() (gasmixture method)": [[1292, "openpnm.phase.GasMixture.y"]], "liquidmixture (class in openpnm.phase)": [[1293, "openpnm.phase.LiquidMixture"]], "add_comp() (liquidmixture method)": [[1294, "openpnm.phase.LiquidMixture.add_comp"]], "add_model() (liquidmixture method)": [[1295, "openpnm.phase.LiquidMixture.add_model"]], "add_model_collection() (liquidmixture method)": [[1296, "openpnm.phase.LiquidMixture.add_model_collection"]], "check_mixture_health() (liquidmixture method)": [[1297, "openpnm.phase.LiquidMixture.check_mixture_health"]], "clear() (liquidmixture method)": [[1298, "openpnm.phase.LiquidMixture.clear"]], "copy() (liquidmixture method)": [[1299, "openpnm.phase.LiquidMixture.copy"]], "filter_by_label() (liquidmixture method)": [[1300, "openpnm.phase.LiquidMixture.filter_by_label"]], "fromkeys() (liquidmixture method)": [[1301, "openpnm.phase.LiquidMixture.fromkeys"]], "get() (liquidmixture method)": [[1302, "openpnm.phase.LiquidMixture.get"]], "get_comp_vals() (liquidmixture method)": [[1303, "openpnm.phase.LiquidMixture.get_comp_vals"]], "get_conduit_data() (liquidmixture method)": [[1304, "openpnm.phase.LiquidMixture.get_conduit_data"]], "get_mix_vals() (liquidmixture method)": [[1305, "openpnm.phase.LiquidMixture.get_mix_vals"]], "interpolate_data() (liquidmixture method)": [[1306, "openpnm.phase.LiquidMixture.interpolate_data"]], "items() (liquidmixture method)": [[1307, "openpnm.phase.LiquidMixture.items"]], "keys() (liquidmixture method)": [[1308, "openpnm.phase.LiquidMixture.keys"]], "labels() (liquidmixture method)": [[1309, "openpnm.phase.LiquidMixture.labels"]], "num_pores() (liquidmixture method)": [[1310, "openpnm.phase.LiquidMixture.num_pores"]], "num_throats() (liquidmixture method)": [[1311, "openpnm.phase.LiquidMixture.num_throats"]], "pop() (liquidmixture method)": [[1312, "openpnm.phase.LiquidMixture.pop"]], "popitem() (liquidmixture method)": [[1313, "openpnm.phase.LiquidMixture.popitem"]], "pores() (liquidmixture method)": [[1314, "openpnm.phase.LiquidMixture.pores"]], "props() (liquidmixture method)": [[1315, "openpnm.phase.LiquidMixture.props"]], "regenerate_models() (liquidmixture method)": [[1316, "openpnm.phase.LiquidMixture.regenerate_models"]], "remove_comp() (liquidmixture method)": [[1317, "openpnm.phase.LiquidMixture.remove_comp"]], "run_model() (liquidmixture method)": [[1318, "openpnm.phase.LiquidMixture.run_model"]], "set_label() (liquidmixture method)": [[1319, "openpnm.phase.LiquidMixture.set_label"]], "setdefault() (liquidmixture method)": [[1320, "openpnm.phase.LiquidMixture.setdefault"]], "throats() (liquidmixture method)": [[1321, "openpnm.phase.LiquidMixture.throats"]], "to_indices() (liquidmixture method)": [[1322, "openpnm.phase.LiquidMixture.to_indices"]], "to_mask() (liquidmixture method)": [[1323, "openpnm.phase.LiquidMixture.to_mask"]], "update() (liquidmixture method)": [[1324, "openpnm.phase.LiquidMixture.update"]], "values() (liquidmixture method)": [[1325, "openpnm.phase.LiquidMixture.values"]], "x() (liquidmixture method)": [[1326, "openpnm.phase.LiquidMixture.x"]], "mercury (class in openpnm.phase)": [[1327, "openpnm.phase.Mercury"]], "add_model() (mercury method)": [[1328, "openpnm.phase.Mercury.add_model"]], "add_model_collection() (mercury method)": [[1329, "openpnm.phase.Mercury.add_model_collection"]], "clear() (mercury method)": [[1330, "openpnm.phase.Mercury.clear"]], "copy() (mercury method)": [[1331, "openpnm.phase.Mercury.copy"]], "filter_by_label() (mercury method)": [[1332, "openpnm.phase.Mercury.filter_by_label"]], "fromkeys() (mercury method)": [[1333, "openpnm.phase.Mercury.fromkeys"]], "get() (mercury method)": [[1334, "openpnm.phase.Mercury.get"]], "get_conduit_data() (mercury method)": [[1335, "openpnm.phase.Mercury.get_conduit_data"]], "interpolate_data() (mercury method)": [[1336, "openpnm.phase.Mercury.interpolate_data"]], "items() (mercury method)": [[1337, "openpnm.phase.Mercury.items"]], "keys() (mercury method)": [[1338, "openpnm.phase.Mercury.keys"]], "labels() (mercury method)": [[1339, "openpnm.phase.Mercury.labels"]], "num_pores() (mercury method)": [[1340, "openpnm.phase.Mercury.num_pores"]], "num_throats() (mercury method)": [[1341, "openpnm.phase.Mercury.num_throats"]], "pop() (mercury method)": [[1342, "openpnm.phase.Mercury.pop"]], "popitem() (mercury method)": [[1343, "openpnm.phase.Mercury.popitem"]], "pores() (mercury method)": [[1344, "openpnm.phase.Mercury.pores"]], "props() (mercury method)": [[1345, "openpnm.phase.Mercury.props"]], "regenerate_models() (mercury method)": [[1346, "openpnm.phase.Mercury.regenerate_models"]], "run_model() (mercury method)": [[1347, "openpnm.phase.Mercury.run_model"]], "set_label() (mercury method)": [[1348, "openpnm.phase.Mercury.set_label"]], "setdefault() (mercury method)": [[1349, "openpnm.phase.Mercury.setdefault"]], "throats() (mercury method)": [[1350, "openpnm.phase.Mercury.throats"]], "to_indices() (mercury method)": [[1351, "openpnm.phase.Mercury.to_indices"]], "to_mask() (mercury method)": [[1352, "openpnm.phase.Mercury.to_mask"]], "update() (mercury method)": [[1353, "openpnm.phase.Mercury.update"]], "values() (mercury method)": [[1354, "openpnm.phase.Mercury.values"]], "mixture (class in openpnm.phase)": [[1355, "openpnm.phase.Mixture"]], "add_comp() (mixture method)": [[1356, "openpnm.phase.Mixture.add_comp"]], "add_model() (mixture method)": [[1357, "openpnm.phase.Mixture.add_model"]], "add_model_collection() (mixture method)": [[1358, "openpnm.phase.Mixture.add_model_collection"]], "check_mixture_health() (mixture method)": [[1359, "openpnm.phase.Mixture.check_mixture_health"]], "clear() (mixture method)": [[1360, "openpnm.phase.Mixture.clear"]], "copy() (mixture method)": [[1361, "openpnm.phase.Mixture.copy"]], "filter_by_label() (mixture method)": [[1362, "openpnm.phase.Mixture.filter_by_label"]], "fromkeys() (mixture method)": [[1363, "openpnm.phase.Mixture.fromkeys"]], "get() (mixture method)": [[1364, "openpnm.phase.Mixture.get"]], "get_comp_vals() (mixture method)": [[1365, "openpnm.phase.Mixture.get_comp_vals"]], "get_conduit_data() (mixture method)": [[1366, "openpnm.phase.Mixture.get_conduit_data"]], "get_mix_vals() (mixture method)": [[1367, "openpnm.phase.Mixture.get_mix_vals"]], "interpolate_data() (mixture method)": [[1368, "openpnm.phase.Mixture.interpolate_data"]], "items() (mixture method)": [[1369, "openpnm.phase.Mixture.items"]], "keys() (mixture method)": [[1370, "openpnm.phase.Mixture.keys"]], "labels() (mixture method)": [[1371, "openpnm.phase.Mixture.labels"]], "num_pores() (mixture method)": [[1372, "openpnm.phase.Mixture.num_pores"]], "num_throats() (mixture method)": [[1373, "openpnm.phase.Mixture.num_throats"]], "pop() (mixture method)": [[1374, "openpnm.phase.Mixture.pop"]], "popitem() (mixture method)": [[1375, "openpnm.phase.Mixture.popitem"]], "pores() (mixture method)": [[1376, "openpnm.phase.Mixture.pores"]], "props() (mixture method)": [[1377, "openpnm.phase.Mixture.props"]], "regenerate_models() (mixture method)": [[1378, "openpnm.phase.Mixture.regenerate_models"]], "remove_comp() (mixture method)": [[1379, "openpnm.phase.Mixture.remove_comp"]], "run_model() (mixture method)": [[1380, "openpnm.phase.Mixture.run_model"]], "set_label() (mixture method)": [[1381, "openpnm.phase.Mixture.set_label"]], "setdefault() (mixture method)": [[1382, "openpnm.phase.Mixture.setdefault"]], "throats() (mixture method)": [[1383, "openpnm.phase.Mixture.throats"]], "to_indices() (mixture method)": [[1384, "openpnm.phase.Mixture.to_indices"]], "to_mask() (mixture method)": [[1385, "openpnm.phase.Mixture.to_mask"]], "update() (mixture method)": [[1386, "openpnm.phase.Mixture.update"]], "values() (mixture method)": [[1387, "openpnm.phase.Mixture.values"]], "phase (class in openpnm.phase)": [[1388, "openpnm.phase.Phase"]], "add_model() (phase method)": [[1389, "openpnm.phase.Phase.add_model"]], "add_model_collection() (phase method)": [[1390, "openpnm.phase.Phase.add_model_collection"]], "clear() (phase method)": [[1391, "openpnm.phase.Phase.clear"]], "copy() (phase method)": [[1392, "openpnm.phase.Phase.copy"]], "filter_by_label() (phase method)": [[1393, "openpnm.phase.Phase.filter_by_label"]], "fromkeys() (phase method)": [[1394, "openpnm.phase.Phase.fromkeys"]], "get() (phase method)": [[1395, "openpnm.phase.Phase.get"]], "get_conduit_data() (phase method)": [[1396, "openpnm.phase.Phase.get_conduit_data"]], "interpolate_data() (phase method)": [[1397, "openpnm.phase.Phase.interpolate_data"]], "items() (phase method)": [[1398, "openpnm.phase.Phase.items"]], "keys() (phase method)": [[1399, "openpnm.phase.Phase.keys"]], "labels() (phase method)": [[1400, "openpnm.phase.Phase.labels"]], "num_pores() (phase method)": [[1401, "openpnm.phase.Phase.num_pores"]], "num_throats() (phase method)": [[1402, "openpnm.phase.Phase.num_throats"]], "pop() (phase method)": [[1403, "openpnm.phase.Phase.pop"]], "popitem() (phase method)": [[1404, "openpnm.phase.Phase.popitem"]], "pores() (phase method)": [[1405, "openpnm.phase.Phase.pores"]], "props() (phase method)": [[1406, "openpnm.phase.Phase.props"]], "regenerate_models() (phase method)": [[1407, "openpnm.phase.Phase.regenerate_models"]], "run_model() (phase method)": [[1408, "openpnm.phase.Phase.run_model"]], "set_label() (phase method)": [[1409, "openpnm.phase.Phase.set_label"]], "setdefault() (phase method)": [[1410, "openpnm.phase.Phase.setdefault"]], "throats() (phase method)": [[1411, "openpnm.phase.Phase.throats"]], "to_indices() (phase method)": [[1412, "openpnm.phase.Phase.to_indices"]], "to_mask() (phase method)": [[1413, "openpnm.phase.Phase.to_mask"]], "update() (phase method)": [[1414, "openpnm.phase.Phase.update"]], "values() (phase method)": [[1415, "openpnm.phase.Phase.values"]], "species (class in openpnm.phase)": [[1416, "openpnm.phase.Species"]], "add_model() (species method)": [[1417, "openpnm.phase.Species.add_model"]], "add_model_collection() (species method)": [[1418, "openpnm.phase.Species.add_model_collection"]], "clear() (species method)": [[1419, "openpnm.phase.Species.clear"]], "copy() (species method)": [[1420, "openpnm.phase.Species.copy"]], "filter_by_label() (species method)": [[1421, "openpnm.phase.Species.filter_by_label"]], "fromkeys() (species method)": [[1422, "openpnm.phase.Species.fromkeys"]], "get() (species method)": [[1423, "openpnm.phase.Species.get"]], "get_conduit_data() (species method)": [[1424, "openpnm.phase.Species.get_conduit_data"]], "interpolate_data() (species method)": [[1425, "openpnm.phase.Species.interpolate_data"]], "items() (species method)": [[1426, "openpnm.phase.Species.items"]], "keys() (species method)": [[1427, "openpnm.phase.Species.keys"]], "labels() (species method)": [[1428, "openpnm.phase.Species.labels"]], "num_pores() (species method)": [[1429, "openpnm.phase.Species.num_pores"]], "num_throats() (species method)": [[1430, "openpnm.phase.Species.num_throats"]], "pop() (species method)": [[1431, "openpnm.phase.Species.pop"]], "popitem() (species method)": [[1432, "openpnm.phase.Species.popitem"]], "pores() (species method)": [[1433, "openpnm.phase.Species.pores"]], "props() (species method)": [[1434, "openpnm.phase.Species.props"]], "regenerate_models() (species method)": [[1435, "openpnm.phase.Species.regenerate_models"]], "run_model() (species method)": [[1436, "openpnm.phase.Species.run_model"]], "set_label() (species method)": [[1437, "openpnm.phase.Species.set_label"]], "setdefault() (species method)": [[1438, "openpnm.phase.Species.setdefault"]], "throats() (species method)": [[1439, "openpnm.phase.Species.throats"]], "to_indices() (species method)": [[1440, "openpnm.phase.Species.to_indices"]], "to_mask() (species method)": [[1441, "openpnm.phase.Species.to_mask"]], "update() (species method)": [[1442, "openpnm.phase.Species.update"]], "values() (species method)": [[1443, "openpnm.phase.Species.values"]], "standardgas (class in openpnm.phase)": [[1444, "openpnm.phase.StandardGas"]], "add_model() (standardgas method)": [[1445, "openpnm.phase.StandardGas.add_model"]], "add_model_collection() (standardgas method)": [[1446, "openpnm.phase.StandardGas.add_model_collection"]], "clear() (standardgas method)": [[1447, "openpnm.phase.StandardGas.clear"]], "copy() (standardgas method)": [[1448, "openpnm.phase.StandardGas.copy"]], "filter_by_label() (standardgas method)": [[1449, "openpnm.phase.StandardGas.filter_by_label"]], "fromkeys() (standardgas method)": [[1450, "openpnm.phase.StandardGas.fromkeys"]], "get() (standardgas method)": [[1451, "openpnm.phase.StandardGas.get"]], "get_conduit_data() (standardgas method)": [[1452, "openpnm.phase.StandardGas.get_conduit_data"]], "interpolate_data() (standardgas method)": [[1453, "openpnm.phase.StandardGas.interpolate_data"]], "items() (standardgas method)": [[1454, "openpnm.phase.StandardGas.items"]], "keys() (standardgas method)": [[1455, "openpnm.phase.StandardGas.keys"]], "labels() (standardgas method)": [[1456, "openpnm.phase.StandardGas.labels"]], "num_pores() (standardgas method)": [[1457, "openpnm.phase.StandardGas.num_pores"]], "num_throats() (standardgas method)": [[1458, "openpnm.phase.StandardGas.num_throats"]], "pop() (standardgas method)": [[1459, "openpnm.phase.StandardGas.pop"]], "popitem() (standardgas method)": [[1460, "openpnm.phase.StandardGas.popitem"]], "pores() (standardgas method)": [[1461, "openpnm.phase.StandardGas.pores"]], "props() (standardgas method)": [[1462, "openpnm.phase.StandardGas.props"]], "regenerate_models() (standardgas method)": [[1463, "openpnm.phase.StandardGas.regenerate_models"]], "run_model() (standardgas method)": [[1464, "openpnm.phase.StandardGas.run_model"]], "set_label() (standardgas method)": [[1465, "openpnm.phase.StandardGas.set_label"]], "setdefault() (standardgas method)": [[1466, "openpnm.phase.StandardGas.setdefault"]], "throats() (standardgas method)": [[1467, "openpnm.phase.StandardGas.throats"]], "to_indices() (standardgas method)": [[1468, "openpnm.phase.StandardGas.to_indices"]], "to_mask() (standardgas method)": [[1469, "openpnm.phase.StandardGas.to_mask"]], "update() (standardgas method)": [[1470, "openpnm.phase.StandardGas.update"]], "values() (standardgas method)": [[1471, "openpnm.phase.StandardGas.values"]], "standardgasmixture (class in openpnm.phase)": [[1472, "openpnm.phase.StandardGasMixture"]], "add_comp() (standardgasmixture method)": [[1473, "openpnm.phase.StandardGasMixture.add_comp"]], "add_model() (standardgasmixture method)": [[1474, "openpnm.phase.StandardGasMixture.add_model"]], "add_model_collection() (standardgasmixture method)": [[1475, "openpnm.phase.StandardGasMixture.add_model_collection"]], "check_mixture_health() (standardgasmixture method)": [[1476, "openpnm.phase.StandardGasMixture.check_mixture_health"]], "clear() (standardgasmixture method)": [[1477, "openpnm.phase.StandardGasMixture.clear"]], "copy() (standardgasmixture method)": [[1478, "openpnm.phase.StandardGasMixture.copy"]], "filter_by_label() (standardgasmixture method)": [[1479, "openpnm.phase.StandardGasMixture.filter_by_label"]], "fromkeys() (standardgasmixture method)": [[1480, "openpnm.phase.StandardGasMixture.fromkeys"]], "get() (standardgasmixture method)": [[1481, "openpnm.phase.StandardGasMixture.get"]], "get_comp_vals() (standardgasmixture method)": [[1482, "openpnm.phase.StandardGasMixture.get_comp_vals"]], "get_conduit_data() (standardgasmixture method)": [[1483, "openpnm.phase.StandardGasMixture.get_conduit_data"]], "get_mix_vals() (standardgasmixture method)": [[1484, "openpnm.phase.StandardGasMixture.get_mix_vals"]], "interpolate_data() (standardgasmixture method)": [[1485, "openpnm.phase.StandardGasMixture.interpolate_data"]], "items() (standardgasmixture method)": [[1486, "openpnm.phase.StandardGasMixture.items"]], "keys() (standardgasmixture method)": [[1487, "openpnm.phase.StandardGasMixture.keys"]], "labels() (standardgasmixture method)": [[1488, "openpnm.phase.StandardGasMixture.labels"]], "num_pores() (standardgasmixture method)": [[1489, "openpnm.phase.StandardGasMixture.num_pores"]], "num_throats() (standardgasmixture method)": [[1490, "openpnm.phase.StandardGasMixture.num_throats"]], "pop() (standardgasmixture method)": [[1491, "openpnm.phase.StandardGasMixture.pop"]], "popitem() (standardgasmixture method)": [[1492, "openpnm.phase.StandardGasMixture.popitem"]], "pores() (standardgasmixture method)": [[1493, "openpnm.phase.StandardGasMixture.pores"]], "props() (standardgasmixture method)": [[1494, "openpnm.phase.StandardGasMixture.props"]], "regenerate_models() (standardgasmixture method)": [[1495, "openpnm.phase.StandardGasMixture.regenerate_models"]], "remove_comp() (standardgasmixture method)": [[1496, "openpnm.phase.StandardGasMixture.remove_comp"]], "run_model() (standardgasmixture method)": [[1497, "openpnm.phase.StandardGasMixture.run_model"]], "set_label() (standardgasmixture method)": [[1498, "openpnm.phase.StandardGasMixture.set_label"]], "setdefault() (standardgasmixture method)": [[1499, "openpnm.phase.StandardGasMixture.setdefault"]], "throats() (standardgasmixture method)": [[1500, "openpnm.phase.StandardGasMixture.throats"]], "to_indices() (standardgasmixture method)": [[1501, "openpnm.phase.StandardGasMixture.to_indices"]], "to_mask() (standardgasmixture method)": [[1502, "openpnm.phase.StandardGasMixture.to_mask"]], "update() (standardgasmixture method)": [[1503, "openpnm.phase.StandardGasMixture.update"]], "values() (standardgasmixture method)": [[1504, "openpnm.phase.StandardGasMixture.values"]], "y() (standardgasmixture method)": [[1505, "openpnm.phase.StandardGasMixture.y"]], "standardliquid (class in openpnm.phase)": [[1506, "openpnm.phase.StandardLiquid"]], "add_model() (standardliquid method)": [[1507, "openpnm.phase.StandardLiquid.add_model"]], "add_model_collection() (standardliquid method)": [[1508, "openpnm.phase.StandardLiquid.add_model_collection"]], "clear() (standardliquid method)": [[1509, "openpnm.phase.StandardLiquid.clear"]], "copy() (standardliquid method)": [[1510, "openpnm.phase.StandardLiquid.copy"]], "filter_by_label() (standardliquid method)": [[1511, "openpnm.phase.StandardLiquid.filter_by_label"]], "fromkeys() (standardliquid method)": [[1512, "openpnm.phase.StandardLiquid.fromkeys"]], "get() (standardliquid method)": [[1513, "openpnm.phase.StandardLiquid.get"]], "get_conduit_data() (standardliquid method)": [[1514, "openpnm.phase.StandardLiquid.get_conduit_data"]], "interpolate_data() (standardliquid method)": [[1515, "openpnm.phase.StandardLiquid.interpolate_data"]], "items() (standardliquid method)": [[1516, "openpnm.phase.StandardLiquid.items"]], "keys() (standardliquid method)": [[1517, "openpnm.phase.StandardLiquid.keys"]], "labels() (standardliquid method)": [[1518, "openpnm.phase.StandardLiquid.labels"]], "num_pores() (standardliquid method)": [[1519, "openpnm.phase.StandardLiquid.num_pores"]], "num_throats() (standardliquid method)": [[1520, "openpnm.phase.StandardLiquid.num_throats"]], "pop() (standardliquid method)": [[1521, "openpnm.phase.StandardLiquid.pop"]], "popitem() (standardliquid method)": [[1522, "openpnm.phase.StandardLiquid.popitem"]], "pores() (standardliquid method)": [[1523, "openpnm.phase.StandardLiquid.pores"]], "props() (standardliquid method)": [[1524, "openpnm.phase.StandardLiquid.props"]], "regenerate_models() (standardliquid method)": [[1525, "openpnm.phase.StandardLiquid.regenerate_models"]], "run_model() (standardliquid method)": [[1526, "openpnm.phase.StandardLiquid.run_model"]], "set_label() (standardliquid method)": [[1527, "openpnm.phase.StandardLiquid.set_label"]], "setdefault() (standardliquid method)": [[1528, "openpnm.phase.StandardLiquid.setdefault"]], "throats() (standardliquid method)": [[1529, "openpnm.phase.StandardLiquid.throats"]], "to_indices() (standardliquid method)": [[1530, "openpnm.phase.StandardLiquid.to_indices"]], "to_mask() (standardliquid method)": [[1531, "openpnm.phase.StandardLiquid.to_mask"]], "update() (standardliquid method)": [[1532, "openpnm.phase.StandardLiquid.update"]], "values() (standardliquid method)": [[1533, "openpnm.phase.StandardLiquid.values"]], "standardliquidmixture (class in openpnm.phase)": [[1534, "openpnm.phase.StandardLiquidMixture"]], "add_comp() (standardliquidmixture method)": [[1535, "openpnm.phase.StandardLiquidMixture.add_comp"]], "add_model() (standardliquidmixture method)": [[1536, "openpnm.phase.StandardLiquidMixture.add_model"]], "add_model_collection() (standardliquidmixture method)": [[1537, "openpnm.phase.StandardLiquidMixture.add_model_collection"]], "check_mixture_health() (standardliquidmixture method)": [[1538, "openpnm.phase.StandardLiquidMixture.check_mixture_health"]], "clear() (standardliquidmixture method)": [[1539, "openpnm.phase.StandardLiquidMixture.clear"]], "copy() (standardliquidmixture method)": [[1540, "openpnm.phase.StandardLiquidMixture.copy"]], "filter_by_label() (standardliquidmixture method)": [[1541, "openpnm.phase.StandardLiquidMixture.filter_by_label"]], "fromkeys() (standardliquidmixture method)": [[1542, "openpnm.phase.StandardLiquidMixture.fromkeys"]], "get() (standardliquidmixture method)": [[1543, "openpnm.phase.StandardLiquidMixture.get"]], "get_comp_vals() (standardliquidmixture method)": [[1544, "openpnm.phase.StandardLiquidMixture.get_comp_vals"]], "get_conduit_data() (standardliquidmixture method)": [[1545, "openpnm.phase.StandardLiquidMixture.get_conduit_data"]], "get_mix_vals() (standardliquidmixture method)": [[1546, "openpnm.phase.StandardLiquidMixture.get_mix_vals"]], "interpolate_data() (standardliquidmixture method)": [[1547, "openpnm.phase.StandardLiquidMixture.interpolate_data"]], "items() (standardliquidmixture method)": [[1548, "openpnm.phase.StandardLiquidMixture.items"]], "keys() (standardliquidmixture method)": [[1549, "openpnm.phase.StandardLiquidMixture.keys"]], "labels() (standardliquidmixture method)": [[1550, "openpnm.phase.StandardLiquidMixture.labels"]], "num_pores() (standardliquidmixture method)": [[1551, "openpnm.phase.StandardLiquidMixture.num_pores"]], "num_throats() (standardliquidmixture method)": [[1552, "openpnm.phase.StandardLiquidMixture.num_throats"]], "pop() (standardliquidmixture method)": [[1553, "openpnm.phase.StandardLiquidMixture.pop"]], "popitem() (standardliquidmixture method)": [[1554, "openpnm.phase.StandardLiquidMixture.popitem"]], "pores() (standardliquidmixture method)": [[1555, "openpnm.phase.StandardLiquidMixture.pores"]], "props() (standardliquidmixture method)": [[1556, "openpnm.phase.StandardLiquidMixture.props"]], "regenerate_models() (standardliquidmixture method)": [[1557, "openpnm.phase.StandardLiquidMixture.regenerate_models"]], "remove_comp() (standardliquidmixture method)": [[1558, "openpnm.phase.StandardLiquidMixture.remove_comp"]], "run_model() (standardliquidmixture method)": [[1559, "openpnm.phase.StandardLiquidMixture.run_model"]], "set_label() (standardliquidmixture method)": [[1560, "openpnm.phase.StandardLiquidMixture.set_label"]], "setdefault() (standardliquidmixture method)": [[1561, "openpnm.phase.StandardLiquidMixture.setdefault"]], "throats() (standardliquidmixture method)": [[1562, "openpnm.phase.StandardLiquidMixture.throats"]], "to_indices() (standardliquidmixture method)": [[1563, "openpnm.phase.StandardLiquidMixture.to_indices"]], "to_mask() (standardliquidmixture method)": [[1564, "openpnm.phase.StandardLiquidMixture.to_mask"]], "update() (standardliquidmixture method)": [[1565, "openpnm.phase.StandardLiquidMixture.update"]], "values() (standardliquidmixture method)": [[1566, "openpnm.phase.StandardLiquidMixture.values"]], "x() (standardliquidmixture method)": [[1567, "openpnm.phase.StandardLiquidMixture.x"]], "water (class in openpnm.phase)": [[1568, "openpnm.phase.Water"]], "add_model() (water method)": [[1569, "openpnm.phase.Water.add_model"]], "add_model_collection() (water method)": [[1570, "openpnm.phase.Water.add_model_collection"]], "clear() (water method)": [[1571, "openpnm.phase.Water.clear"]], "copy() (water method)": [[1572, "openpnm.phase.Water.copy"]], "filter_by_label() (water method)": [[1573, "openpnm.phase.Water.filter_by_label"]], "fromkeys() (water method)": [[1574, "openpnm.phase.Water.fromkeys"]], "get() (water method)": [[1575, "openpnm.phase.Water.get"]], "get_conduit_data() (water method)": [[1576, "openpnm.phase.Water.get_conduit_data"]], "interpolate_data() (water method)": [[1577, "openpnm.phase.Water.interpolate_data"]], "items() (water method)": [[1578, "openpnm.phase.Water.items"]], "keys() (water method)": [[1579, "openpnm.phase.Water.keys"]], "labels() (water method)": [[1580, "openpnm.phase.Water.labels"]], "num_pores() (water method)": [[1581, "openpnm.phase.Water.num_pores"]], "num_throats() (water method)": [[1582, "openpnm.phase.Water.num_throats"]], "pop() (water method)": [[1583, "openpnm.phase.Water.pop"]], "popitem() (water method)": [[1584, "openpnm.phase.Water.popitem"]], "pores() (water method)": [[1585, "openpnm.phase.Water.pores"]], "props() (water method)": [[1586, "openpnm.phase.Water.props"]], "regenerate_models() (water method)": [[1587, "openpnm.phase.Water.regenerate_models"]], "run_model() (water method)": [[1588, "openpnm.phase.Water.run_model"]], "set_label() (water method)": [[1589, "openpnm.phase.Water.set_label"]], "setdefault() (water method)": [[1590, "openpnm.phase.Water.setdefault"]], "throats() (water method)": [[1591, "openpnm.phase.Water.throats"]], "to_indices() (water method)": [[1592, "openpnm.phase.Water.to_indices"]], "to_mask() (water method)": [[1593, "openpnm.phase.Water.to_mask"]], "update() (water method)": [[1594, "openpnm.phase.Water.update"]], "values() (water method)": [[1595, "openpnm.phase.Water.values"]], "openpnm.solvers": [[1596, "module-openpnm.solvers"]], "basesolver (class in openpnm.solvers)": [[1597, "openpnm.solvers.BaseSolver"]], "solve() (basesolver method)": [[1598, "openpnm.solvers.BaseSolver.solve"]], "directsolver (class in openpnm.solvers)": [[1599, "openpnm.solvers.DirectSolver"]], "solve() (directsolver method)": [[1600, "openpnm.solvers.DirectSolver.solve"]], "iterativesolver (class in openpnm.solvers)": [[1601, "openpnm.solvers.IterativeSolver"]], "solve() (iterativesolver method)": [[1602, "openpnm.solvers.IterativeSolver.solve"]], "petsclinearsolver (class in openpnm.solvers)": [[1603, "openpnm.solvers.PETScLinearSolver"]], "solve() (petsclinearsolver method)": [[1604, "openpnm.solvers.PETScLinearSolver.solve"]], "pardisospsolve (class in openpnm.solvers)": [[1605, "openpnm.solvers.PardisoSpsolve"]], "solve() (pardisospsolve method)": [[1606, "openpnm.solvers.PardisoSpsolve.solve"]], "scipycg (class in openpnm.solvers)": [[1607, "openpnm.solvers.ScipyCG"]], "solve() (scipycg method)": [[1608, "openpnm.solvers.ScipyCG.solve"]], "scipyspsolve (class in openpnm.solvers)": [[1609, "openpnm.solvers.ScipySpsolve"]], "solve() (scipyspsolve method)": [[1610, "openpnm.solvers.ScipySpsolve.solve"]], "openpnm.topotools": [[1611, "module-openpnm.topotools"]], "add_boundary_pores() (in module openpnm.topotools)": [[1612, "openpnm.topotools.add_boundary_pores"]], "add_reservoir_pore() (in module openpnm.topotools)": [[1613, "openpnm.topotools.add_reservoir_pore"]], "bond_percolation() (in module openpnm.topotools)": [[1614, "openpnm.topotools.bond_percolation"]], "clone_pores() (in module openpnm.topotools)": [[1615, "openpnm.topotools.clone_pores"]], "connect_pores() (in module openpnm.topotools)": [[1616, "openpnm.topotools.connect_pores"]], "conns_to_am() (in module openpnm.topotools)": [[1617, "openpnm.topotools.conns_to_am"]], "dimensionality() (in module openpnm.topotools)": [[1618, "openpnm.topotools.dimensionality"]], "drop_sites() (in module openpnm.topotools)": [[1619, "openpnm.topotools.drop_sites"]], "extend() (in module openpnm.topotools)": [[1620, "openpnm.topotools.extend"]], "filter_pores_by_z() (in module openpnm.topotools)": [[1621, "openpnm.topotools.filter_pores_by_z"]], "find_clusters() (in module openpnm.topotools)": [[1622, "openpnm.topotools.find_clusters"]], "find_connected_sites() (in module openpnm.topotools)": [[1623, "openpnm.topotools.find_connected_sites"]], "find_connecting_bonds() (in module openpnm.topotools)": [[1624, "openpnm.topotools.find_connecting_bonds"]], "find_interface_throats() (in module openpnm.topotools)": [[1625, "openpnm.topotools.find_interface_throats"]], "find_isolated_clusters() (in module openpnm.topotools)": [[1626, "openpnm.topotools.find_isolated_clusters"]], "find_neighbor_bonds() (in module openpnm.topotools)": [[1627, "openpnm.topotools.find_neighbor_bonds"]], "find_neighbor_sites() (in module openpnm.topotools)": [[1628, "openpnm.topotools.find_neighbor_sites"]], "find_path() (in module openpnm.topotools)": [[1629, "openpnm.topotools.find_path"]], "find_surface_pores() (in module openpnm.topotools)": [[1630, "openpnm.topotools.find_surface_pores"]], "generate_base_points() (in module openpnm.topotools)": [[1631, "openpnm.topotools.generate_base_points"]], "get_domain_area() (in module openpnm.topotools)": [[1632, "openpnm.topotools.get_domain_area"]], "get_domain_length() (in module openpnm.topotools)": [[1633, "openpnm.topotools.get_domain_length"]], "get_shape() (in module openpnm.topotools)": [[1634, "openpnm.topotools.get_shape"]], "get_spacing() (in module openpnm.topotools)": [[1635, "openpnm.topotools.get_spacing"]], "hull_centroid() (in module openpnm.topotools)": [[1636, "openpnm.topotools.hull_centroid"]], "is_fully_connected() (in module openpnm.topotools)": [[1637, "openpnm.topotools.is_fully_connected"]], "iscoplanar() (in module openpnm.topotools)": [[1638, "openpnm.topotools.iscoplanar"]], "isoutside() (in module openpnm.topotools)": [[1639, "openpnm.topotools.isoutside"]], "ispercolating() (in module openpnm.topotools)": [[1640, "openpnm.topotools.ispercolating"]], "issymmetric() (in module openpnm.topotools)": [[1641, "openpnm.topotools.issymmetric"]], "istriangular() (in module openpnm.topotools)": [[1642, "openpnm.topotools.istriangular"]], "istril() (in module openpnm.topotools)": [[1643, "openpnm.topotools.istril"]], "istriu() (in module openpnm.topotools)": [[1644, "openpnm.topotools.istriu"]], "label_faces() (in module openpnm.topotools)": [[1645, "openpnm.topotools.label_faces"]], "merge_networks() (in module openpnm.topotools)": [[1646, "openpnm.topotools.merge_networks"]], "merge_pores() (in module openpnm.topotools)": [[1647, "openpnm.topotools.merge_pores"]], "reduce_coordination() (in module openpnm.topotools)": [[1648, "openpnm.topotools.reduce_coordination"]], "reflect_base_points() (in module openpnm.topotools)": [[1649, "openpnm.topotools.reflect_base_points"]], "rotate_coords() (in module openpnm.topotools)": [[1650, "openpnm.topotools.rotate_coords"]], "shear_coords() (in module openpnm.topotools)": [[1651, "openpnm.topotools.shear_coords"]], "site_percolation() (in module openpnm.topotools)": [[1652, "openpnm.topotools.site_percolation"]], "stitch() (in module openpnm.topotools)": [[1653, "openpnm.topotools.stitch"]], "template_cylinder_annulus() (in module openpnm.topotools)": [[1654, "openpnm.topotools.template_cylinder_annulus"]], "template_sphere_shell() (in module openpnm.topotools)": [[1655, "openpnm.topotools.template_sphere_shell"]], "tri_to_am() (in module openpnm.topotools)": [[1656, "openpnm.topotools.tri_to_am"]], "trim() (in module openpnm.topotools)": [[1657, "openpnm.topotools.trim"]], "trim_disconnected_clusters() (in module openpnm.topotools)": [[1658, "openpnm.topotools.trim_disconnected_clusters"]], "vor_to_am() (in module openpnm.topotools)": [[1659, "openpnm.topotools.vor_to_am"]], "openpnm.utils": [[1660, "module-openpnm.utils"]], "docorator (class in openpnm.utils)": [[1661, "openpnm.utils.Docorator"]], "__call__() (docorator method)": [[1662, "openpnm.utils.Docorator.__call__"]], "dedent() (docorator method)": [[1663, "openpnm.utils.Docorator.dedent"]], "dedents() (docorator method)": [[1664, "openpnm.utils.Docorator.dedents"]], "delete_kwargs() (docorator method)": [[1665, "openpnm.utils.Docorator.delete_kwargs"]], "delete_kwargs_s() (docorator class method)": [[1666, "openpnm.utils.Docorator.delete_kwargs_s"]], "delete_params() (docorator method)": [[1667, "openpnm.utils.Docorator.delete_params"]], "delete_params_s() (docorator static method)": [[1668, "openpnm.utils.Docorator.delete_params_s"]], "delete_types() (docorator method)": [[1669, "openpnm.utils.Docorator.delete_types"]], "delete_types_s() (docorator static method)": [[1670, "openpnm.utils.Docorator.delete_types_s"]], "get_docstring() (docorator method)": [[1671, "openpnm.utils.Docorator.get_docstring"]], "get_extended_summary() (docorator method)": [[1672, "openpnm.utils.Docorator.get_extended_summary"]], "get_extended_summaryf() (docorator method)": [[1673, "openpnm.utils.Docorator.get_extended_summaryf"]], "get_full_description() (docorator method)": [[1674, "openpnm.utils.Docorator.get_full_description"]], "get_full_descriptionf() (docorator method)": [[1675, "openpnm.utils.Docorator.get_full_descriptionf"]], "get_sections() (docorator method)": [[1676, "openpnm.utils.Docorator.get_sections"]], "get_sectionsf() (docorator method)": [[1677, "openpnm.utils.Docorator.get_sectionsf"]], "get_summary() (docorator method)": [[1678, "openpnm.utils.Docorator.get_summary"]], "get_summaryf() (docorator method)": [[1679, "openpnm.utils.Docorator.get_summaryf"]], "keep_params() (docorator method)": [[1680, "openpnm.utils.Docorator.keep_params"]], "keep_params_s() (docorator static method)": [[1681, "openpnm.utils.Docorator.keep_params_s"]], "keep_types() (docorator method)": [[1682, "openpnm.utils.Docorator.keep_types"]], "keep_types_s() (docorator static method)": [[1683, "openpnm.utils.Docorator.keep_types_s"]], "save_docstring() (docorator method)": [[1684, "openpnm.utils.Docorator.save_docstring"]], "with_indent() (docorator method)": [[1685, "openpnm.utils.Docorator.with_indent"]], "with_indents() (docorator method)": [[1686, "openpnm.utils.Docorator.with_indents"]], "healthdict (class in openpnm.utils)": [[1687, "openpnm.utils.HealthDict"]], "clear() (healthdict method)": [[1688, "openpnm.utils.HealthDict.clear"]], "copy() (healthdict method)": [[1689, "openpnm.utils.HealthDict.copy"]], "fromkeys() (healthdict method)": [[1690, "openpnm.utils.HealthDict.fromkeys"]], "get() (healthdict method)": [[1691, "openpnm.utils.HealthDict.get"]], "items() (healthdict method)": [[1692, "openpnm.utils.HealthDict.items"]], "keys() (healthdict method)": [[1693, "openpnm.utils.HealthDict.keys"]], "pop() (healthdict method)": [[1694, "openpnm.utils.HealthDict.pop"]], "popitem() (healthdict method)": [[1695, "openpnm.utils.HealthDict.popitem"]], "setdefault() (healthdict method)": [[1696, "openpnm.utils.HealthDict.setdefault"]], "update() (healthdict method)": [[1697, "openpnm.utils.HealthDict.update"]], "values() (healthdict method)": [[1698, "openpnm.utils.HealthDict.values"]], "nesteddict (class in openpnm.utils)": [[1699, "openpnm.utils.NestedDict"]], "clear() (nesteddict method)": [[1700, "openpnm.utils.NestedDict.clear"]], "copy() (nesteddict method)": [[1701, "openpnm.utils.NestedDict.copy"]], "fromkeys() (nesteddict method)": [[1702, "openpnm.utils.NestedDict.fromkeys"]], "get() (nesteddict method)": [[1703, "openpnm.utils.NestedDict.get"]], "items() (nesteddict method)": [[1704, "openpnm.utils.NestedDict.items"]], "keys() (nesteddict method)": [[1705, "openpnm.utils.NestedDict.keys"]], "pop() (nesteddict method)": [[1706, "openpnm.utils.NestedDict.pop"]], "popitem() (nesteddict method)": [[1707, "openpnm.utils.NestedDict.popitem"]], "setdefault() (nesteddict method)": [[1708, "openpnm.utils.NestedDict.setdefault"]], "to_dict() (nesteddict method)": [[1709, "openpnm.utils.NestedDict.to_dict"]], "unravel() (nesteddict method)": [[1710, "openpnm.utils.NestedDict.unravel"]], "update() (nesteddict method)": [[1711, "openpnm.utils.NestedDict.update"]], "values() (nesteddict method)": [[1712, "openpnm.utils.NestedDict.values"]], "printabledict (class in openpnm.utils)": [[1713, "openpnm.utils.PrintableDict"]], "clear() (printabledict method)": [[1714, "openpnm.utils.PrintableDict.clear"]], "copy() (printabledict method)": [[1715, "openpnm.utils.PrintableDict.copy"]], "fromkeys() (printabledict method)": [[1716, "openpnm.utils.PrintableDict.fromkeys"]], "get() (printabledict method)": [[1717, "openpnm.utils.PrintableDict.get"]], "items() (printabledict method)": [[1718, "openpnm.utils.PrintableDict.items"]], "keys() (printabledict method)": [[1719, "openpnm.utils.PrintableDict.keys"]], "pop() (printabledict method)": [[1720, "openpnm.utils.PrintableDict.pop"]], "popitem() (printabledict method)": [[1721, "openpnm.utils.PrintableDict.popitem"]], "setdefault() (printabledict method)": [[1722, "openpnm.utils.PrintableDict.setdefault"]], "update() (printabledict method)": [[1723, "openpnm.utils.PrintableDict.update"]], "values() (printabledict method)": [[1724, "openpnm.utils.PrintableDict.values"]], "printablelist (class in openpnm.utils)": [[1725, "openpnm.utils.PrintableList"]], "append() (printablelist method)": [[1726, "openpnm.utils.PrintableList.append"]], "clear() (printablelist method)": [[1727, "openpnm.utils.PrintableList.clear"]], "copy() (printablelist method)": [[1728, "openpnm.utils.PrintableList.copy"]], "count() (printablelist method)": [[1729, "openpnm.utils.PrintableList.count"]], "extend() (printablelist method)": [[1730, "openpnm.utils.PrintableList.extend"]], "index() (printablelist method)": [[1731, "openpnm.utils.PrintableList.index"]], "insert() (printablelist method)": [[1732, "openpnm.utils.PrintableList.insert"]], "pop() (printablelist method)": [[1733, "openpnm.utils.PrintableList.pop"]], "remove() (printablelist method)": [[1734, "openpnm.utils.PrintableList.remove"]], "reverse() (printablelist method)": [[1735, "openpnm.utils.PrintableList.reverse"]], "sort() (printablelist method)": [[1736, "openpnm.utils.PrintableList.sort"]], "project (class in openpnm.utils)": [[1737, "openpnm.utils.Project"]], "append() (project method)": [[1738, "openpnm.utils.Project.append"]], "copy() (project method)": [[1739, "openpnm.utils.Project.copy"]], "settingsattr (class in openpnm.utils)": [[1740, "openpnm.utils.SettingsAttr"]], "simplelist (class in openpnm.utils)": [[1741, "openpnm.utils.SimpleList"]], "append() (simplelist method)": [[1742, "openpnm.utils.SimpleList.append"]], "typedlist (class in openpnm.utils)": [[1743, "openpnm.utils.TypedList"]], "append() (typedlist method)": [[1744, "openpnm.utils.TypedList.append"]], "clear() (typedlist method)": [[1745, "openpnm.utils.TypedList.clear"]], "copy() (typedlist method)": [[1746, "openpnm.utils.TypedList.copy"]], "count() (typedlist method)": [[1747, "openpnm.utils.TypedList.count"]], "extend() (typedlist method)": [[1748, "openpnm.utils.TypedList.extend"]], "index() (typedlist method)": [[1749, "openpnm.utils.TypedList.index"]], "insert() (typedlist method)": [[1750, "openpnm.utils.TypedList.insert"]], "pop() (typedlist method)": [[1751, "openpnm.utils.TypedList.pop"]], "remove() (typedlist method)": [[1752, "openpnm.utils.TypedList.remove"]], "reverse() (typedlist method)": [[1753, "openpnm.utils.TypedList.reverse"]], "sort() (typedlist method)": [[1754, "openpnm.utils.TypedList.sort"]], "typedmixin (class in openpnm.utils)": [[1755, "openpnm.utils.TypedMixin"]], "typedset (class in openpnm.utils)": [[1756, "openpnm.utils.TypedSet"]], "add() (typedset method)": [[1757, "openpnm.utils.TypedSet.add"]], "clear() (typedset method)": [[1758, "openpnm.utils.TypedSet.clear"]], "copy() (typedset method)": [[1759, "openpnm.utils.TypedSet.copy"]], "difference() (typedset method)": [[1760, "openpnm.utils.TypedSet.difference"]], "difference_update() (typedset method)": [[1761, "openpnm.utils.TypedSet.difference_update"]], "discard() (typedset method)": [[1762, "openpnm.utils.TypedSet.discard"]], "intersection() (typedset method)": [[1763, "openpnm.utils.TypedSet.intersection"]], "intersection_update() (typedset method)": [[1764, "openpnm.utils.TypedSet.intersection_update"]], "isdisjoint() (typedset method)": [[1765, "openpnm.utils.TypedSet.isdisjoint"]], "issubset() (typedset method)": [[1766, "openpnm.utils.TypedSet.issubset"]], "issuperset() (typedset method)": [[1767, "openpnm.utils.TypedSet.issuperset"]], "pop() (typedset method)": [[1768, "openpnm.utils.TypedSet.pop"]], "remove() (typedset method)": [[1769, "openpnm.utils.TypedSet.remove"]], "symmetric_difference() (typedset method)": [[1770, "openpnm.utils.TypedSet.symmetric_difference"]], "symmetric_difference_update() (typedset method)": [[1771, "openpnm.utils.TypedSet.symmetric_difference_update"]], "union() (typedset method)": [[1772, "openpnm.utils.TypedSet.union"]], "update() (typedset method)": [[1773, "openpnm.utils.TypedSet.update"]], "workspace (class in openpnm.utils)": [[1774, "openpnm.utils.Workspace"]], "clear() (workspace method)": [[1775, "openpnm.utils.Workspace.clear"]], "close_project() (workspace method)": [[1776, "openpnm.utils.Workspace.close_project"]], "copy() (workspace method)": [[1777, "openpnm.utils.Workspace.copy"]], "copy_project() (workspace method)": [[1778, "openpnm.utils.Workspace.copy_project"]], "fromkeys() (workspace method)": [[1779, "openpnm.utils.Workspace.fromkeys"]], "get() (workspace method)": [[1780, "openpnm.utils.Workspace.get"]], "items() (workspace method)": [[1781, "openpnm.utils.Workspace.items"]], "keys() (workspace method)": [[1782, "openpnm.utils.Workspace.keys"]], "load_project() (workspace method)": [[1783, "openpnm.utils.Workspace.load_project"]], "load_workspace() (workspace method)": [[1784, "openpnm.utils.Workspace.load_workspace"]], "new_project() (workspace method)": [[1785, "openpnm.utils.Workspace.new_project"]], "pop() (workspace method)": [[1786, "openpnm.utils.Workspace.pop"]], "popitem() (workspace method)": [[1787, "openpnm.utils.Workspace.popitem"]], "save_project() (workspace method)": [[1788, "openpnm.utils.Workspace.save_project"]], "save_workspace() (workspace method)": [[1789, "openpnm.utils.Workspace.save_workspace"]], "setdefault() (workspace method)": [[1790, "openpnm.utils.Workspace.setdefault"]], "update() (workspace method)": [[1791, "openpnm.utils.Workspace.update"]], "values() (workspace method)": [[1792, "openpnm.utils.Workspace.values"]], "check_data_health() (in module openpnm.utils)": [[1793, "openpnm.utils.check_data_health"]], "check_network_health() (in module openpnm.utils)": [[1794, "openpnm.utils.check_network_health"]], "dict_to_struct() (in module openpnm.utils)": [[1795, "openpnm.utils.dict_to_struct"]], "flat_list() (in module openpnm.utils)": [[1796, "openpnm.utils.flat_list"]], "get_mixture_model_args() (in module openpnm.utils)": [[1797, "openpnm.utils.get_mixture_model_args"]], "get_printable_labels() (in module openpnm.utils)": [[1798, "openpnm.utils.get_printable_labels"]], "get_printable_props() (in module openpnm.utils)": [[1799, "openpnm.utils.get_printable_props"]], "ignore_warnings() (in module openpnm.utils)": [[1800, "openpnm.utils.ignore_warnings"]], "is_symmetric() (in module openpnm.utils)": [[1801, "openpnm.utils.is_symmetric"]], "is_transient() (in module openpnm.utils)": [[1802, "openpnm.utils.is_transient"]], "is_valid_propname() (in module openpnm.utils)": [[1803, "openpnm.utils.is_valid_propname"]], "methods_to_table() (in module openpnm.utils)": [[1804, "openpnm.utils.methods_to_table"]], "models_to_table() (in module openpnm.utils)": [[1805, "openpnm.utils.models_to_table"]], "sanitize_dict() (in module openpnm.utils)": [[1806, "openpnm.utils.sanitize_dict"]], "struct_to_dict() (in module openpnm.utils)": [[1807, "openpnm.utils.struct_to_dict"]], "openpnm": [[1808, "module-openpnm"]]}})