Search.setIndex({"docnames": ["_examples/applications", "_examples/index", "_examples/reference", "_examples/tutorials", "examples/applications/absolute_permeability", "examples/applications/adjusting_pore_size_distributions", "examples/applications/dispersion_coefficient", "examples/applications/effective_diffusivity_and_tortuosity", "examples/applications/formation_factor", "examples/applications/mercury_intrusion", "examples/applications/porosity", "examples/applications/relative_diffusivity", "examples/applications/relative_permeability", "examples/contrib/README", "examples/getting_started", "examples/reference/architecture/pore_scale_models", "examples/reference/architecture/settings_attribute_machinery", "examples/reference/architecture/workspace_and_projects", "examples/reference/networks/managing_clustered_networks", "examples/reference/simulations/available_matrix_solvers", "examples/reference/simulations/basic_transport", "examples/reference/simulations/explanation_of_units", "examples/reference/simulations/reactive_transport", "examples/reference/simulations/size_factors_and_transport_conductance", "examples/reference/simulations/transient_transport", "examples/tutorials/01_numerical_python_primer", "examples/tutorials/02_network_generation_and_visualization", "examples/tutorials/03_data_and_topology_storage", "examples/tutorials/04_graph_queries_and_manipulation", "examples/tutorials/05_defining_geometry", "examples/tutorials/06_labels_and_domains", "examples/tutorials/07_phases_and_mixtures", "examples/tutorials/08_simulating_transport", "examples/tutorials/09_simulating_invasion", "examples/tutorials/10_visualization_options", "index", "installation", "modules/generated/openpnm.algorithms", "modules/generated/openpnm.algorithms.AdvectionDiffusion", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values", "modules/generated/openpnm.algorithms.Algorithm", "modules/generated/openpnm.algorithms.Algorithm.clear", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs", "modules/generated/openpnm.algorithms.Algorithm.copy", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label", "modules/generated/openpnm.algorithms.Algorithm.fromkeys", "modules/generated/openpnm.algorithms.Algorithm.get", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data", "modules/generated/openpnm.algorithms.Algorithm.items", "modules/generated/openpnm.algorithms.Algorithm.keys", "modules/generated/openpnm.algorithms.Algorithm.labels", "modules/generated/openpnm.algorithms.Algorithm.num_pores", "modules/generated/openpnm.algorithms.Algorithm.num_throats", "modules/generated/openpnm.algorithms.Algorithm.pop", "modules/generated/openpnm.algorithms.Algorithm.popitem", "modules/generated/openpnm.algorithms.Algorithm.pores", "modules/generated/openpnm.algorithms.Algorithm.props", "modules/generated/openpnm.algorithms.Algorithm.set_BC", "modules/generated/openpnm.algorithms.Algorithm.set_label", "modules/generated/openpnm.algorithms.Algorithm.setdefault", "modules/generated/openpnm.algorithms.Algorithm.throats", "modules/generated/openpnm.algorithms.Algorithm.to_indices", "modules/generated/openpnm.algorithms.Algorithm.to_mask", "modules/generated/openpnm.algorithms.Algorithm.update", "modules/generated/openpnm.algorithms.Algorithm.values", "modules/generated/openpnm.algorithms.Drainage", "modules/generated/openpnm.algorithms.Drainage.apply_trapping", "modules/generated/openpnm.algorithms.Drainage.clear", "modules/generated/openpnm.algorithms.Drainage.clear_BCs", "modules/generated/openpnm.algorithms.Drainage.copy", "modules/generated/openpnm.algorithms.Drainage.filter_by_label", "modules/generated/openpnm.algorithms.Drainage.fromkeys", "modules/generated/openpnm.algorithms.Drainage.get", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data", "modules/generated/openpnm.algorithms.Drainage.interpolate_data", "modules/generated/openpnm.algorithms.Drainage.items", "modules/generated/openpnm.algorithms.Drainage.keys", "modules/generated/openpnm.algorithms.Drainage.labels", "modules/generated/openpnm.algorithms.Drainage.num_pores", "modules/generated/openpnm.algorithms.Drainage.num_throats", "modules/generated/openpnm.algorithms.Drainage.pc_curve", "modules/generated/openpnm.algorithms.Drainage.pop", "modules/generated/openpnm.algorithms.Drainage.popitem", "modules/generated/openpnm.algorithms.Drainage.pores", "modules/generated/openpnm.algorithms.Drainage.props", "modules/generated/openpnm.algorithms.Drainage.reset", "modules/generated/openpnm.algorithms.Drainage.run", "modules/generated/openpnm.algorithms.Drainage.set_BC", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC", "modules/generated/openpnm.algorithms.Drainage.set_label", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC", "modules/generated/openpnm.algorithms.Drainage.setdefault", "modules/generated/openpnm.algorithms.Drainage.throats", "modules/generated/openpnm.algorithms.Drainage.to_indices", "modules/generated/openpnm.algorithms.Drainage.to_mask", "modules/generated/openpnm.algorithms.Drainage.update", "modules/generated/openpnm.algorithms.Drainage.values", "modules/generated/openpnm.algorithms.FickianDiffusion", "modules/generated/openpnm.algorithms.FickianDiffusion.clear", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.copy", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.FickianDiffusion.get", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.FickianDiffusion.items", "modules/generated/openpnm.algorithms.FickianDiffusion.keys", "modules/generated/openpnm.algorithms.FickianDiffusion.labels", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.FickianDiffusion.pop", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem", "modules/generated/openpnm.algorithms.FickianDiffusion.pores", "modules/generated/openpnm.algorithms.FickianDiffusion.props", "modules/generated/openpnm.algorithms.FickianDiffusion.rate", "modules/generated/openpnm.algorithms.FickianDiffusion.run", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.FickianDiffusion.throats", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.FickianDiffusion.update", "modules/generated/openpnm.algorithms.FickianDiffusion.values", "modules/generated/openpnm.algorithms.FourierConduction", "modules/generated/openpnm.algorithms.FourierConduction.clear", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.FourierConduction.copy", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys", "modules/generated/openpnm.algorithms.FourierConduction.get", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data", "modules/generated/openpnm.algorithms.FourierConduction.items", "modules/generated/openpnm.algorithms.FourierConduction.keys", "modules/generated/openpnm.algorithms.FourierConduction.labels", "modules/generated/openpnm.algorithms.FourierConduction.num_pores", "modules/generated/openpnm.algorithms.FourierConduction.num_throats", "modules/generated/openpnm.algorithms.FourierConduction.pop", "modules/generated/openpnm.algorithms.FourierConduction.popitem", "modules/generated/openpnm.algorithms.FourierConduction.pores", "modules/generated/openpnm.algorithms.FourierConduction.props", "modules/generated/openpnm.algorithms.FourierConduction.rate", "modules/generated/openpnm.algorithms.FourierConduction.run", "modules/generated/openpnm.algorithms.FourierConduction.set_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_label", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_source", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC", "modules/generated/openpnm.algorithms.FourierConduction.setdefault", "modules/generated/openpnm.algorithms.FourierConduction.throats", "modules/generated/openpnm.algorithms.FourierConduction.to_indices", "modules/generated/openpnm.algorithms.FourierConduction.to_mask", "modules/generated/openpnm.algorithms.FourierConduction.update", "modules/generated/openpnm.algorithms.FourierConduction.values", "modules/generated/openpnm.algorithms.InvasionPercolation", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping", "modules/generated/openpnm.algorithms.InvasionPercolation.clear", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs", "modules/generated/openpnm.algorithms.InvasionPercolation.copy", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys", "modules/generated/openpnm.algorithms.InvasionPercolation.get", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data", "modules/generated/openpnm.algorithms.InvasionPercolation.items", "modules/generated/openpnm.algorithms.InvasionPercolation.keys", "modules/generated/openpnm.algorithms.InvasionPercolation.labels", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve", "modules/generated/openpnm.algorithms.InvasionPercolation.pop", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem", "modules/generated/openpnm.algorithms.InvasionPercolation.pores", "modules/generated/openpnm.algorithms.InvasionPercolation.props", "modules/generated/openpnm.algorithms.InvasionPercolation.reset", "modules/generated/openpnm.algorithms.InvasionPercolation.run", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault", "modules/generated/openpnm.algorithms.InvasionPercolation.throats", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask", "modules/generated/openpnm.algorithms.InvasionPercolation.update", "modules/generated/openpnm.algorithms.InvasionPercolation.values", "modules/generated/openpnm.algorithms.OhmicConduction", "modules/generated/openpnm.algorithms.OhmicConduction.clear", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.copy", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys", "modules/generated/openpnm.algorithms.OhmicConduction.get", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data", "modules/generated/openpnm.algorithms.OhmicConduction.items", "modules/generated/openpnm.algorithms.OhmicConduction.keys", "modules/generated/openpnm.algorithms.OhmicConduction.labels", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats", "modules/generated/openpnm.algorithms.OhmicConduction.pop", "modules/generated/openpnm.algorithms.OhmicConduction.popitem", "modules/generated/openpnm.algorithms.OhmicConduction.pores", "modules/generated/openpnm.algorithms.OhmicConduction.props", "modules/generated/openpnm.algorithms.OhmicConduction.rate", "modules/generated/openpnm.algorithms.OhmicConduction.run", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_label", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_source", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault", "modules/generated/openpnm.algorithms.OhmicConduction.throats", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask", "modules/generated/openpnm.algorithms.OhmicConduction.update", "modules/generated/openpnm.algorithms.OhmicConduction.values", "modules/generated/openpnm.algorithms.ReactiveTransport", "modules/generated/openpnm.algorithms.ReactiveTransport.clear", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.copy", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.ReactiveTransport.get", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.ReactiveTransport.items", "modules/generated/openpnm.algorithms.ReactiveTransport.keys", "modules/generated/openpnm.algorithms.ReactiveTransport.labels", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.ReactiveTransport.pop", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem", "modules/generated/openpnm.algorithms.ReactiveTransport.pores", "modules/generated/openpnm.algorithms.ReactiveTransport.props", "modules/generated/openpnm.algorithms.ReactiveTransport.rate", "modules/generated/openpnm.algorithms.ReactiveTransport.run", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.ReactiveTransport.throats", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.ReactiveTransport.update", "modules/generated/openpnm.algorithms.ReactiveTransport.values", "modules/generated/openpnm.algorithms.StokesFlow", "modules/generated/openpnm.algorithms.StokesFlow.clear", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs", "modules/generated/openpnm.algorithms.StokesFlow.copy", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys", "modules/generated/openpnm.algorithms.StokesFlow.get", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data", "modules/generated/openpnm.algorithms.StokesFlow.items", "modules/generated/openpnm.algorithms.StokesFlow.keys", "modules/generated/openpnm.algorithms.StokesFlow.labels", "modules/generated/openpnm.algorithms.StokesFlow.num_pores", "modules/generated/openpnm.algorithms.StokesFlow.num_throats", "modules/generated/openpnm.algorithms.StokesFlow.pop", "modules/generated/openpnm.algorithms.StokesFlow.popitem", "modules/generated/openpnm.algorithms.StokesFlow.pores", "modules/generated/openpnm.algorithms.StokesFlow.props", "modules/generated/openpnm.algorithms.StokesFlow.rate", "modules/generated/openpnm.algorithms.StokesFlow.run", "modules/generated/openpnm.algorithms.StokesFlow.set_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_label", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_source", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC", "modules/generated/openpnm.algorithms.StokesFlow.setdefault", "modules/generated/openpnm.algorithms.StokesFlow.throats", "modules/generated/openpnm.algorithms.StokesFlow.to_indices", "modules/generated/openpnm.algorithms.StokesFlow.to_mask", "modules/generated/openpnm.algorithms.StokesFlow.update", "modules/generated/openpnm.algorithms.StokesFlow.values", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values", "modules/generated/openpnm.algorithms.TransientFickianDiffusion", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values", "modules/generated/openpnm.algorithms.TransientReactiveTransport", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values", "modules/generated/openpnm.algorithms.Transport", "modules/generated/openpnm.algorithms.Transport.clear", "modules/generated/openpnm.algorithms.Transport.clear_BCs", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs", "modules/generated/openpnm.algorithms.Transport.copy", "modules/generated/openpnm.algorithms.Transport.filter_by_label", "modules/generated/openpnm.algorithms.Transport.fromkeys", "modules/generated/openpnm.algorithms.Transport.get", "modules/generated/openpnm.algorithms.Transport.get_conduit_data", "modules/generated/openpnm.algorithms.Transport.interpolate_data", "modules/generated/openpnm.algorithms.Transport.items", "modules/generated/openpnm.algorithms.Transport.keys", "modules/generated/openpnm.algorithms.Transport.labels", "modules/generated/openpnm.algorithms.Transport.num_pores", "modules/generated/openpnm.algorithms.Transport.num_throats", "modules/generated/openpnm.algorithms.Transport.pop", "modules/generated/openpnm.algorithms.Transport.popitem", "modules/generated/openpnm.algorithms.Transport.pores", "modules/generated/openpnm.algorithms.Transport.props", "modules/generated/openpnm.algorithms.Transport.rate", "modules/generated/openpnm.algorithms.Transport.run", "modules/generated/openpnm.algorithms.Transport.set_BC", "modules/generated/openpnm.algorithms.Transport.set_label", "modules/generated/openpnm.algorithms.Transport.set_rate_BC", "modules/generated/openpnm.algorithms.Transport.set_value_BC", "modules/generated/openpnm.algorithms.Transport.setdefault", "modules/generated/openpnm.algorithms.Transport.throats", "modules/generated/openpnm.algorithms.Transport.to_indices", "modules/generated/openpnm.algorithms.Transport.to_mask", "modules/generated/openpnm.algorithms.Transport.update", "modules/generated/openpnm.algorithms.Transport.values", "modules/generated/openpnm.contrib", "modules/generated/openpnm.contrib.MultiPhase", "modules/generated/openpnm.contrib.MultiPhase.add_model", "modules/generated/openpnm.contrib.MultiPhase.add_model_collection", "modules/generated/openpnm.contrib.MultiPhase.add_phases", "modules/generated/openpnm.contrib.MultiPhase.clear", "modules/generated/openpnm.contrib.MultiPhase.copy", "modules/generated/openpnm.contrib.MultiPhase.filter_by_label", "modules/generated/openpnm.contrib.MultiPhase.fromkeys", "modules/generated/openpnm.contrib.MultiPhase.get", "modules/generated/openpnm.contrib.MultiPhase.get_conduit_data", "modules/generated/openpnm.contrib.MultiPhase.interpolate_data", "modules/generated/openpnm.contrib.MultiPhase.items", "modules/generated/openpnm.contrib.MultiPhase.keys", "modules/generated/openpnm.contrib.MultiPhase.labels", "modules/generated/openpnm.contrib.MultiPhase.num_pores", "modules/generated/openpnm.contrib.MultiPhase.num_throats", "modules/generated/openpnm.contrib.MultiPhase.pop", "modules/generated/openpnm.contrib.MultiPhase.popitem", "modules/generated/openpnm.contrib.MultiPhase.pores", "modules/generated/openpnm.contrib.MultiPhase.props", "modules/generated/openpnm.contrib.MultiPhase.regenerate_models", "modules/generated/openpnm.contrib.MultiPhase.run_model", "modules/generated/openpnm.contrib.MultiPhase.set_binary_partition_coef", "modules/generated/openpnm.contrib.MultiPhase.set_label", "modules/generated/openpnm.contrib.MultiPhase.set_occupancy", "modules/generated/openpnm.contrib.MultiPhase.setdefault", "modules/generated/openpnm.contrib.MultiPhase.throats", "modules/generated/openpnm.contrib.MultiPhase.to_indices", "modules/generated/openpnm.contrib.MultiPhase.to_mask", "modules/generated/openpnm.contrib.MultiPhase.update", "modules/generated/openpnm.contrib.MultiPhase.values", "modules/generated/openpnm.contrib.TransientMultiPhysics", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear_BCs", "modules/generated/openpnm.contrib.TransientMultiPhysics.copy", "modules/generated/openpnm.contrib.TransientMultiPhysics.filter_by_label", "modules/generated/openpnm.contrib.TransientMultiPhysics.fromkeys", "modules/generated/openpnm.contrib.TransientMultiPhysics.get", "modules/generated/openpnm.contrib.TransientMultiPhysics.get_conduit_data", "modules/generated/openpnm.contrib.TransientMultiPhysics.interpolate_data", "modules/generated/openpnm.contrib.TransientMultiPhysics.items", "modules/generated/openpnm.contrib.TransientMultiPhysics.keys", "modules/generated/openpnm.contrib.TransientMultiPhysics.labels", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_pores", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_throats", "modules/generated/openpnm.contrib.TransientMultiPhysics.pop", "modules/generated/openpnm.contrib.TransientMultiPhysics.popitem", "modules/generated/openpnm.contrib.TransientMultiPhysics.pores", "modules/generated/openpnm.contrib.TransientMultiPhysics.props", "modules/generated/openpnm.contrib.TransientMultiPhysics.run", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_BC", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_label", "modules/generated/openpnm.contrib.TransientMultiPhysics.setdefault", "modules/generated/openpnm.contrib.TransientMultiPhysics.throats", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_indices", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_mask", "modules/generated/openpnm.contrib.TransientMultiPhysics.update", "modules/generated/openpnm.contrib.TransientMultiPhysics.values", "modules/generated/openpnm.contrib.multiphase_diffusion", "modules/generated/openpnm.core", "modules/generated/openpnm.core.Base2", "modules/generated/openpnm.core.Base2.clear", "modules/generated/openpnm.core.Base2.copy", "modules/generated/openpnm.core.Base2.fromkeys", "modules/generated/openpnm.core.Base2.get", "modules/generated/openpnm.core.Base2.get_conduit_data", "modules/generated/openpnm.core.Base2.interpolate_data", "modules/generated/openpnm.core.Base2.items", "modules/generated/openpnm.core.Base2.keys", "modules/generated/openpnm.core.Base2.pop", "modules/generated/openpnm.core.Base2.popitem", "modules/generated/openpnm.core.Base2.props", "modules/generated/openpnm.core.Base2.setdefault", "modules/generated/openpnm.core.Base2.to_indices", "modules/generated/openpnm.core.Base2.to_mask", "modules/generated/openpnm.core.Base2.update", "modules/generated/openpnm.core.Base2.values", "modules/generated/openpnm.core.Domain", "modules/generated/openpnm.core.Domain.add_model", "modules/generated/openpnm.core.Domain.add_model_collection", "modules/generated/openpnm.core.Domain.clear", "modules/generated/openpnm.core.Domain.copy", "modules/generated/openpnm.core.Domain.filter_by_label", "modules/generated/openpnm.core.Domain.fromkeys", "modules/generated/openpnm.core.Domain.get", "modules/generated/openpnm.core.Domain.get_conduit_data", "modules/generated/openpnm.core.Domain.interpolate_data", "modules/generated/openpnm.core.Domain.items", "modules/generated/openpnm.core.Domain.keys", "modules/generated/openpnm.core.Domain.labels", "modules/generated/openpnm.core.Domain.num_pores", "modules/generated/openpnm.core.Domain.num_throats", "modules/generated/openpnm.core.Domain.pop", "modules/generated/openpnm.core.Domain.popitem", "modules/generated/openpnm.core.Domain.pores", "modules/generated/openpnm.core.Domain.props", "modules/generated/openpnm.core.Domain.regenerate_models", "modules/generated/openpnm.core.Domain.run_model", "modules/generated/openpnm.core.Domain.set_label", "modules/generated/openpnm.core.Domain.setdefault", "modules/generated/openpnm.core.Domain.throats", "modules/generated/openpnm.core.Domain.to_indices", "modules/generated/openpnm.core.Domain.to_mask", "modules/generated/openpnm.core.Domain.update", "modules/generated/openpnm.core.Domain.values", "modules/generated/openpnm.core.LabelMixin", "modules/generated/openpnm.core.LabelMixin.filter_by_label", "modules/generated/openpnm.core.LabelMixin.labels", "modules/generated/openpnm.core.LabelMixin.num_pores", "modules/generated/openpnm.core.LabelMixin.num_throats", "modules/generated/openpnm.core.LabelMixin.pores", "modules/generated/openpnm.core.LabelMixin.set_label", "modules/generated/openpnm.core.LabelMixin.throats", "modules/generated/openpnm.core.ModelWrapper", "modules/generated/openpnm.core.ModelWrapper.__call__", "modules/generated/openpnm.core.ModelWrapper.clear", "modules/generated/openpnm.core.ModelWrapper.copy", "modules/generated/openpnm.core.ModelWrapper.fromkeys", "modules/generated/openpnm.core.ModelWrapper.get", "modules/generated/openpnm.core.ModelWrapper.items", "modules/generated/openpnm.core.ModelWrapper.keys", "modules/generated/openpnm.core.ModelWrapper.pop", "modules/generated/openpnm.core.ModelWrapper.popitem", "modules/generated/openpnm.core.ModelWrapper.setdefault", "modules/generated/openpnm.core.ModelWrapper.update", "modules/generated/openpnm.core.ModelWrapper.values", "modules/generated/openpnm.core.ModelsDict", "modules/generated/openpnm.core.ModelsDict.clear", "modules/generated/openpnm.core.ModelsDict.copy", "modules/generated/openpnm.core.ModelsDict.dependency_graph", "modules/generated/openpnm.core.ModelsDict.dependency_list", "modules/generated/openpnm.core.ModelsDict.dependency_map", "modules/generated/openpnm.core.ModelsDict.fromkeys", "modules/generated/openpnm.core.ModelsDict.get", "modules/generated/openpnm.core.ModelsDict.items", "modules/generated/openpnm.core.ModelsDict.keys", "modules/generated/openpnm.core.ModelsDict.pop", "modules/generated/openpnm.core.ModelsDict.popitem", "modules/generated/openpnm.core.ModelsDict.setdefault", "modules/generated/openpnm.core.ModelsDict.update", "modules/generated/openpnm.core.ModelsDict.values", "modules/generated/openpnm.core.ModelsMixin2", "modules/generated/openpnm.core.ModelsMixin2.add_model", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models", "modules/generated/openpnm.core.ModelsMixin2.run_model", "modules/generated/openpnm.core.ParserMixin", "modules/generated/openpnm.integrators", "modules/generated/openpnm.integrators.Integrator", "modules/generated/openpnm.integrators.ScipyRK45", "modules/generated/openpnm.integrators.ScipyRK45.solve", "modules/generated/openpnm.io", "modules/generated/openpnm.io.network_from_csv", "modules/generated/openpnm.io.network_from_jsongraph", "modules/generated/openpnm.io.network_from_marock", "modules/generated/openpnm.io.network_from_networkx", "modules/generated/openpnm.io.network_from_pergeos", "modules/generated/openpnm.io.network_from_porespy", "modules/generated/openpnm.io.network_from_statoil", "modules/generated/openpnm.io.network_to_comsol", "modules/generated/openpnm.io.network_to_csv", "modules/generated/openpnm.io.network_to_jsongraph", "modules/generated/openpnm.io.network_to_networkx", "modules/generated/openpnm.io.network_to_pandas", "modules/generated/openpnm.io.network_to_pergeos", "modules/generated/openpnm.io.network_to_salome", "modules/generated/openpnm.io.network_to_stl", "modules/generated/openpnm.io.print_hdf5", "modules/generated/openpnm.io.project_to_csv", "modules/generated/openpnm.io.project_to_dict", "modules/generated/openpnm.io.project_to_hdf5", "modules/generated/openpnm.io.project_to_pandas", "modules/generated/openpnm.io.project_to_paraview", "modules/generated/openpnm.io.project_to_vtk", "modules/generated/openpnm.io.project_to_xdmf", "modules/generated/openpnm.models", "modules/generated/openpnm.models.collections", "modules/generated/openpnm.models.collections.geometry", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles", "modules/generated/openpnm.models.collections.network", "modules/generated/openpnm.models.collections.phase", "modules/generated/openpnm.models.collections.phase.air", "modules/generated/openpnm.models.collections.phase.gas", "modules/generated/openpnm.models.collections.phase.liquid", "modules/generated/openpnm.models.collections.phase.mercury", "modules/generated/openpnm.models.collections.phase.water", "modules/generated/openpnm.models.collections.physics", "modules/generated/openpnm.models.collections.physics.basic", "modules/generated/openpnm.models.collections.physics.standard", "modules/generated/openpnm.models.geometry", "modules/generated/openpnm.models.geometry.conduit_lengths", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square", "modules/generated/openpnm.models.geometry.pore_seed", "modules/generated/openpnm.models.geometry.pore_seed.random", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated", "modules/generated/openpnm.models.geometry.pore_size", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere", "modules/generated/openpnm.models.geometry.pore_size.normal", "modules/generated/openpnm.models.geometry.pore_size.random", "modules/generated/openpnm.models.geometry.pore_size.weibull", "modules/generated/openpnm.models.geometry.pore_surface_area", "modules/generated/openpnm.models.geometry.pore_surface_area.circle", "modules/generated/openpnm.models.geometry.pore_surface_area.cube", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere", "modules/generated/openpnm.models.geometry.pore_surface_area.square", "modules/generated/openpnm.models.geometry.pore_volume", "modules/generated/openpnm.models.geometry.pore_volume.circle", "modules/generated/openpnm.models.geometry.pore_volume.cube", "modules/generated/openpnm.models.geometry.pore_volume.effective", "modules/generated/openpnm.models.geometry.pore_volume.sphere", "modules/generated/openpnm.models.geometry.pore_volume.square", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow", "modules/generated/openpnm.models.geometry.throat_centroid", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle", "modules/generated/openpnm.models.geometry.throat_endpoints", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_perimeter", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle", "modules/generated/openpnm.models.geometry.throat_seed", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_seed.random", "modules/generated/openpnm.models.geometry.throat_size", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution", "modules/generated/openpnm.models.geometry.throat_size.normal", "modules/generated/openpnm.models.geometry.throat_size.random", "modules/generated/openpnm.models.geometry.throat_size.weibull", "modules/generated/openpnm.models.geometry.throat_surface_area", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle", "modules/generated/openpnm.models.geometry.throat_vector", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore", "modules/generated/openpnm.models.geometry.throat_volume", "modules/generated/openpnm.models.geometry.throat_volume.cuboid", "modules/generated/openpnm.models.geometry.throat_volume.cylinder", "modules/generated/openpnm.models.geometry.throat_volume.extrusion", "modules/generated/openpnm.models.geometry.throat_volume.lens", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring", "modules/generated/openpnm.models.geometry.throat_volume.rectangle", "modules/generated/openpnm.models.misc", "modules/generated/openpnm.models.misc.blank", "modules/generated/openpnm.models.misc.clip", "modules/generated/openpnm.models.misc.constant", "modules/generated/openpnm.models.misc.difference", "modules/generated/openpnm.models.misc.fraction", "modules/generated/openpnm.models.misc.from_neighbor_pores", "modules/generated/openpnm.models.misc.from_neighbor_throats", "modules/generated/openpnm.models.misc.generic_distribution", "modules/generated/openpnm.models.misc.generic_function", "modules/generated/openpnm.models.misc.invert", "modules/generated/openpnm.models.misc.linear", "modules/generated/openpnm.models.misc.match_histogram", "modules/generated/openpnm.models.misc.normal", "modules/generated/openpnm.models.misc.normalize", "modules/generated/openpnm.models.misc.polynomial", "modules/generated/openpnm.models.misc.product", "modules/generated/openpnm.models.misc.random", "modules/generated/openpnm.models.misc.scaled", "modules/generated/openpnm.models.misc.summation", "modules/generated/openpnm.models.misc.weibull", "modules/generated/openpnm.models.network", "modules/generated/openpnm.models.network.bidirectional_throats", "modules/generated/openpnm.models.network.cluster_number", "modules/generated/openpnm.models.network.cluster_size", "modules/generated/openpnm.models.network.coordination_number", "modules/generated/openpnm.models.network.count_coincident_pores", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_pore", "modules/generated/openpnm.models.network.duplicate_throats", "modules/generated/openpnm.models.network.find_coincident_pores", "modules/generated/openpnm.models.network.gabriel_edges", "modules/generated/openpnm.models.network.headless_throats", "modules/generated/openpnm.models.network.isolated_pores", "modules/generated/openpnm.models.network.looped_throats", "modules/generated/openpnm.models.network.pore_to_pore_distance", "modules/generated/openpnm.models.network.reversed_throats", "modules/generated/openpnm.models.phase", "modules/generated/openpnm.models.phase.chemicals_wrapper", "modules/generated/openpnm.models.phase.critical_props", "modules/generated/openpnm.models.phase.density", "modules/generated/openpnm.models.phase.density.ideal_gas", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD", "modules/generated/openpnm.models.phase.density.mass_to_molar", "modules/generated/openpnm.models.phase.density.water_correlation", "modules/generated/openpnm.models.phase.diffusivity", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc", "modules/generated/openpnm.models.phase.heat_capacity", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp", "modules/generated/openpnm.models.phase.misc", "modules/generated/openpnm.models.phase.misc.mix_and_match", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures", "modules/generated/openpnm.models.phase.mixtures.from_component", "modules/generated/openpnm.models.phase.mixtures.mixing_rule", "modules/generated/openpnm.models.phase.mixtures.mole_summation", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures.salinity", "modules/generated/openpnm.models.phase.partition_coefficient", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water", "modules/generated/openpnm.models.phase.surface_tension", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb", "modules/generated/openpnm.models.phase.surface_tension.water_correlation", "modules/generated/openpnm.models.phase.thermal_conductivity", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation", "modules/generated/openpnm.models.phase.vapor_pressure", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation", "modules/generated/openpnm.models.phase.viscosity", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls", "modules/generated/openpnm.models.phase.viscosity.water_correlation", "modules/generated/openpnm.models.physics", "modules/generated/openpnm.models.physics.ad_dif_conductance", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif", "modules/generated/openpnm.models.physics.capillary_pressure", "modules/generated/openpnm.models.physics.capillary_pressure.purcell", "modules/generated/openpnm.models.physics.capillary_pressure.washburn", "modules/generated/openpnm.models.physics.diffusive_conductance", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion", "modules/generated/openpnm.models.physics.electrical_conductance", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors", "modules/generated/openpnm.models.physics.hydraulic_conductance", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt", "modules/generated/openpnm.models.physics.meniscus", "modules/generated/openpnm.models.physics.meniscus.general_toroidal", "modules/generated/openpnm.models.physics.meniscus.purcell", "modules/generated/openpnm.models.physics.meniscus.sinusoidal", "modules/generated/openpnm.models.physics.multiphase", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance", "modules/generated/openpnm.models.physics.multiphase.late_filling", "modules/generated/openpnm.models.physics.source_terms", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage", "modules/generated/openpnm.models.physics.source_terms.exponential", "modules/generated/openpnm.models.physics.source_terms.general_symbolic", "modules/generated/openpnm.models.physics.source_terms.linear", "modules/generated/openpnm.models.physics.source_terms.logarithm", "modules/generated/openpnm.models.physics.source_terms.natural_exponential", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm", "modules/generated/openpnm.models.physics.source_terms.power_law", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics", "modules/generated/openpnm.models.physics.thermal_conductance", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors", "modules/generated/openpnm.network", "modules/generated/openpnm.network.BodyCenteredCubic", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.BodyCenteredCubic.add_model", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection", "modules/generated/openpnm.network.BodyCenteredCubic.clear", "modules/generated/openpnm.network.BodyCenteredCubic.copy", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys", "modules/generated/openpnm.network.BodyCenteredCubic.get", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data", "modules/generated/openpnm.network.BodyCenteredCubic.items", "modules/generated/openpnm.network.BodyCenteredCubic.keys", "modules/generated/openpnm.network.BodyCenteredCubic.labels", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats", "modules/generated/openpnm.network.BodyCenteredCubic.pop", "modules/generated/openpnm.network.BodyCenteredCubic.popitem", "modules/generated/openpnm.network.BodyCenteredCubic.pores", "modules/generated/openpnm.network.BodyCenteredCubic.props", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models", "modules/generated/openpnm.network.BodyCenteredCubic.run_model", "modules/generated/openpnm.network.BodyCenteredCubic.set_label", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault", "modules/generated/openpnm.network.BodyCenteredCubic.throats", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask", "modules/generated/openpnm.network.BodyCenteredCubic.update", "modules/generated/openpnm.network.BodyCenteredCubic.values", "modules/generated/openpnm.network.Cubic", "modules/generated/openpnm.network.Cubic.add_boundary_pores", "modules/generated/openpnm.network.Cubic.add_model", "modules/generated/openpnm.network.Cubic.add_model_collection", "modules/generated/openpnm.network.Cubic.clear", "modules/generated/openpnm.network.Cubic.copy", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix", "modules/generated/openpnm.network.Cubic.create_incidence_matrix", "modules/generated/openpnm.network.Cubic.filter_by_label", "modules/generated/openpnm.network.Cubic.find_connected_pores", "modules/generated/openpnm.network.Cubic.find_connecting_throat", "modules/generated/openpnm.network.Cubic.find_nearby_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_throats", "modules/generated/openpnm.network.Cubic.fromkeys", "modules/generated/openpnm.network.Cubic.get", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix", "modules/generated/openpnm.network.Cubic.get_conduit_data", "modules/generated/openpnm.network.Cubic.get_incidence_matrix", "modules/generated/openpnm.network.Cubic.interpolate_data", "modules/generated/openpnm.network.Cubic.items", "modules/generated/openpnm.network.Cubic.keys", "modules/generated/openpnm.network.Cubic.labels", "modules/generated/openpnm.network.Cubic.num_neighbors", "modules/generated/openpnm.network.Cubic.num_pores", "modules/generated/openpnm.network.Cubic.num_throats", "modules/generated/openpnm.network.Cubic.pop", "modules/generated/openpnm.network.Cubic.popitem", "modules/generated/openpnm.network.Cubic.pores", "modules/generated/openpnm.network.Cubic.props", "modules/generated/openpnm.network.Cubic.regenerate_models", "modules/generated/openpnm.network.Cubic.run_model", "modules/generated/openpnm.network.Cubic.set_label", "modules/generated/openpnm.network.Cubic.setdefault", "modules/generated/openpnm.network.Cubic.throats", "modules/generated/openpnm.network.Cubic.to_indices", "modules/generated/openpnm.network.Cubic.to_mask", "modules/generated/openpnm.network.Cubic.update", "modules/generated/openpnm.network.Cubic.values", "modules/generated/openpnm.network.CubicTemplate", "modules/generated/openpnm.network.CubicTemplate.add_model", "modules/generated/openpnm.network.CubicTemplate.add_model_collection", "modules/generated/openpnm.network.CubicTemplate.clear", "modules/generated/openpnm.network.CubicTemplate.copy", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.filter_by_label", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats", "modules/generated/openpnm.network.CubicTemplate.fromkeys", "modules/generated/openpnm.network.CubicTemplate.get", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.interpolate_data", "modules/generated/openpnm.network.CubicTemplate.items", "modules/generated/openpnm.network.CubicTemplate.keys", "modules/generated/openpnm.network.CubicTemplate.labels", "modules/generated/openpnm.network.CubicTemplate.num_neighbors", "modules/generated/openpnm.network.CubicTemplate.num_pores", "modules/generated/openpnm.network.CubicTemplate.num_throats", "modules/generated/openpnm.network.CubicTemplate.pop", "modules/generated/openpnm.network.CubicTemplate.popitem", "modules/generated/openpnm.network.CubicTemplate.pores", "modules/generated/openpnm.network.CubicTemplate.props", "modules/generated/openpnm.network.CubicTemplate.regenerate_models", "modules/generated/openpnm.network.CubicTemplate.run_model", "modules/generated/openpnm.network.CubicTemplate.set_label", "modules/generated/openpnm.network.CubicTemplate.setdefault", "modules/generated/openpnm.network.CubicTemplate.throats", "modules/generated/openpnm.network.CubicTemplate.to_indices", "modules/generated/openpnm.network.CubicTemplate.to_mask", "modules/generated/openpnm.network.CubicTemplate.update", "modules/generated/openpnm.network.CubicTemplate.values", "modules/generated/openpnm.network.Delaunay", "modules/generated/openpnm.network.Delaunay.add_model", "modules/generated/openpnm.network.Delaunay.add_model_collection", "modules/generated/openpnm.network.Delaunay.clear", "modules/generated/openpnm.network.Delaunay.copy", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix", "modules/generated/openpnm.network.Delaunay.filter_by_label", "modules/generated/openpnm.network.Delaunay.find_connected_pores", "modules/generated/openpnm.network.Delaunay.find_connecting_throat", "modules/generated/openpnm.network.Delaunay.find_nearby_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats", "modules/generated/openpnm.network.Delaunay.fromkeys", "modules/generated/openpnm.network.Delaunay.get", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.get_conduit_data", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix", "modules/generated/openpnm.network.Delaunay.interpolate_data", "modules/generated/openpnm.network.Delaunay.items", "modules/generated/openpnm.network.Delaunay.keys", "modules/generated/openpnm.network.Delaunay.labels", "modules/generated/openpnm.network.Delaunay.num_neighbors", "modules/generated/openpnm.network.Delaunay.num_pores", "modules/generated/openpnm.network.Delaunay.num_throats", "modules/generated/openpnm.network.Delaunay.pop", "modules/generated/openpnm.network.Delaunay.popitem", "modules/generated/openpnm.network.Delaunay.pores", "modules/generated/openpnm.network.Delaunay.props", "modules/generated/openpnm.network.Delaunay.regenerate_models", "modules/generated/openpnm.network.Delaunay.run_model", "modules/generated/openpnm.network.Delaunay.set_label", "modules/generated/openpnm.network.Delaunay.setdefault", "modules/generated/openpnm.network.Delaunay.throats", "modules/generated/openpnm.network.Delaunay.to_indices", "modules/generated/openpnm.network.Delaunay.to_mask", "modules/generated/openpnm.network.Delaunay.update", "modules/generated/openpnm.network.Delaunay.values", "modules/generated/openpnm.network.DelaunayVoronoiDual", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys", "modules/generated/openpnm.network.DelaunayVoronoiDual.get", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.items", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.props", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask", "modules/generated/openpnm.network.DelaunayVoronoiDual.update", "modules/generated/openpnm.network.DelaunayVoronoiDual.values", "modules/generated/openpnm.network.Demo", "modules/generated/openpnm.network.Demo.add_boundary_pores", "modules/generated/openpnm.network.Demo.add_model", "modules/generated/openpnm.network.Demo.add_model_collection", "modules/generated/openpnm.network.Demo.clear", "modules/generated/openpnm.network.Demo.copy", "modules/generated/openpnm.network.Demo.create_adjacency_matrix", "modules/generated/openpnm.network.Demo.create_incidence_matrix", "modules/generated/openpnm.network.Demo.filter_by_label", "modules/generated/openpnm.network.Demo.find_connected_pores", "modules/generated/openpnm.network.Demo.find_connecting_throat", "modules/generated/openpnm.network.Demo.find_nearby_pores", "modules/generated/openpnm.network.Demo.find_neighbor_pores", "modules/generated/openpnm.network.Demo.find_neighbor_throats", "modules/generated/openpnm.network.Demo.fromkeys", "modules/generated/openpnm.network.Demo.get", "modules/generated/openpnm.network.Demo.get_adjacency_matrix", "modules/generated/openpnm.network.Demo.get_conduit_data", "modules/generated/openpnm.network.Demo.get_incidence_matrix", "modules/generated/openpnm.network.Demo.interpolate_data", "modules/generated/openpnm.network.Demo.items", "modules/generated/openpnm.network.Demo.keys", "modules/generated/openpnm.network.Demo.labels", "modules/generated/openpnm.network.Demo.num_neighbors", "modules/generated/openpnm.network.Demo.num_pores", "modules/generated/openpnm.network.Demo.num_throats", "modules/generated/openpnm.network.Demo.pop", "modules/generated/openpnm.network.Demo.popitem", "modules/generated/openpnm.network.Demo.pores", "modules/generated/openpnm.network.Demo.props", "modules/generated/openpnm.network.Demo.regenerate_models", "modules/generated/openpnm.network.Demo.run_model", "modules/generated/openpnm.network.Demo.set_label", "modules/generated/openpnm.network.Demo.setdefault", "modules/generated/openpnm.network.Demo.throats", "modules/generated/openpnm.network.Demo.to_indices", "modules/generated/openpnm.network.Demo.to_mask", "modules/generated/openpnm.network.Demo.update", "modules/generated/openpnm.network.Demo.values", "modules/generated/openpnm.network.FaceCenteredCubic", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.FaceCenteredCubic.add_model", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection", "modules/generated/openpnm.network.FaceCenteredCubic.clear", "modules/generated/openpnm.network.FaceCenteredCubic.copy", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys", "modules/generated/openpnm.network.FaceCenteredCubic.get", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data", "modules/generated/openpnm.network.FaceCenteredCubic.items", "modules/generated/openpnm.network.FaceCenteredCubic.keys", "modules/generated/openpnm.network.FaceCenteredCubic.labels", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats", "modules/generated/openpnm.network.FaceCenteredCubic.pop", "modules/generated/openpnm.network.FaceCenteredCubic.popitem", "modules/generated/openpnm.network.FaceCenteredCubic.pores", "modules/generated/openpnm.network.FaceCenteredCubic.props", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models", "modules/generated/openpnm.network.FaceCenteredCubic.run_model", "modules/generated/openpnm.network.FaceCenteredCubic.set_label", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault", "modules/generated/openpnm.network.FaceCenteredCubic.throats", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask", "modules/generated/openpnm.network.FaceCenteredCubic.update", "modules/generated/openpnm.network.FaceCenteredCubic.values", "modules/generated/openpnm.network.Network", "modules/generated/openpnm.network.Network.add_model", "modules/generated/openpnm.network.Network.add_model_collection", "modules/generated/openpnm.network.Network.clear", "modules/generated/openpnm.network.Network.copy", "modules/generated/openpnm.network.Network.create_adjacency_matrix", "modules/generated/openpnm.network.Network.create_incidence_matrix", "modules/generated/openpnm.network.Network.filter_by_label", "modules/generated/openpnm.network.Network.find_connected_pores", "modules/generated/openpnm.network.Network.find_connecting_throat", "modules/generated/openpnm.network.Network.find_nearby_pores", "modules/generated/openpnm.network.Network.find_neighbor_pores", "modules/generated/openpnm.network.Network.find_neighbor_throats", "modules/generated/openpnm.network.Network.fromkeys", "modules/generated/openpnm.network.Network.get", "modules/generated/openpnm.network.Network.get_adjacency_matrix", "modules/generated/openpnm.network.Network.get_conduit_data", "modules/generated/openpnm.network.Network.get_incidence_matrix", "modules/generated/openpnm.network.Network.interpolate_data", "modules/generated/openpnm.network.Network.items", "modules/generated/openpnm.network.Network.keys", "modules/generated/openpnm.network.Network.labels", "modules/generated/openpnm.network.Network.num_neighbors", "modules/generated/openpnm.network.Network.num_pores", "modules/generated/openpnm.network.Network.num_throats", "modules/generated/openpnm.network.Network.pop", "modules/generated/openpnm.network.Network.popitem", "modules/generated/openpnm.network.Network.pores", "modules/generated/openpnm.network.Network.props", "modules/generated/openpnm.network.Network.regenerate_models", "modules/generated/openpnm.network.Network.run_model", "modules/generated/openpnm.network.Network.set_label", "modules/generated/openpnm.network.Network.setdefault", "modules/generated/openpnm.network.Network.throats", "modules/generated/openpnm.network.Network.to_indices", "modules/generated/openpnm.network.Network.to_mask", "modules/generated/openpnm.network.Network.update", "modules/generated/openpnm.network.Network.values", "modules/generated/openpnm.network.Voronoi", "modules/generated/openpnm.network.Voronoi.add_model", "modules/generated/openpnm.network.Voronoi.add_model_collection", "modules/generated/openpnm.network.Voronoi.clear", "modules/generated/openpnm.network.Voronoi.copy", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix", "modules/generated/openpnm.network.Voronoi.filter_by_label", "modules/generated/openpnm.network.Voronoi.find_connected_pores", "modules/generated/openpnm.network.Voronoi.find_connecting_throat", "modules/generated/openpnm.network.Voronoi.find_nearby_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats", "modules/generated/openpnm.network.Voronoi.fromkeys", "modules/generated/openpnm.network.Voronoi.get", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.get_conduit_data", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix", "modules/generated/openpnm.network.Voronoi.interpolate_data", "modules/generated/openpnm.network.Voronoi.items", "modules/generated/openpnm.network.Voronoi.keys", "modules/generated/openpnm.network.Voronoi.labels", "modules/generated/openpnm.network.Voronoi.num_neighbors", "modules/generated/openpnm.network.Voronoi.num_pores", "modules/generated/openpnm.network.Voronoi.num_throats", "modules/generated/openpnm.network.Voronoi.pop", "modules/generated/openpnm.network.Voronoi.popitem", "modules/generated/openpnm.network.Voronoi.pores", "modules/generated/openpnm.network.Voronoi.props", "modules/generated/openpnm.network.Voronoi.regenerate_models", "modules/generated/openpnm.network.Voronoi.run_model", "modules/generated/openpnm.network.Voronoi.set_label", "modules/generated/openpnm.network.Voronoi.setdefault", "modules/generated/openpnm.network.Voronoi.throats", "modules/generated/openpnm.network.Voronoi.to_indices", "modules/generated/openpnm.network.Voronoi.to_mask", "modules/generated/openpnm.network.Voronoi.update", "modules/generated/openpnm.network.Voronoi.values", "modules/generated/openpnm.phase", "modules/generated/openpnm.phase.Air", "modules/generated/openpnm.phase.Air.add_model", "modules/generated/openpnm.phase.Air.add_model_collection", "modules/generated/openpnm.phase.Air.clear", "modules/generated/openpnm.phase.Air.copy", "modules/generated/openpnm.phase.Air.filter_by_label", "modules/generated/openpnm.phase.Air.fromkeys", "modules/generated/openpnm.phase.Air.get", "modules/generated/openpnm.phase.Air.get_conduit_data", "modules/generated/openpnm.phase.Air.interpolate_data", "modules/generated/openpnm.phase.Air.items", "modules/generated/openpnm.phase.Air.keys", "modules/generated/openpnm.phase.Air.labels", "modules/generated/openpnm.phase.Air.num_pores", "modules/generated/openpnm.phase.Air.num_throats", "modules/generated/openpnm.phase.Air.pop", "modules/generated/openpnm.phase.Air.popitem", "modules/generated/openpnm.phase.Air.pores", "modules/generated/openpnm.phase.Air.props", "modules/generated/openpnm.phase.Air.regenerate_models", "modules/generated/openpnm.phase.Air.run_model", "modules/generated/openpnm.phase.Air.set_label", "modules/generated/openpnm.phase.Air.setdefault", "modules/generated/openpnm.phase.Air.throats", "modules/generated/openpnm.phase.Air.to_indices", "modules/generated/openpnm.phase.Air.to_mask", "modules/generated/openpnm.phase.Air.update", "modules/generated/openpnm.phase.Air.values", "modules/generated/openpnm.phase.BinaryGas", "modules/generated/openpnm.phase.BinaryGas.add_comp", "modules/generated/openpnm.phase.BinaryGas.add_model", "modules/generated/openpnm.phase.BinaryGas.add_model_collection", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health", "modules/generated/openpnm.phase.BinaryGas.clear", "modules/generated/openpnm.phase.BinaryGas.copy", "modules/generated/openpnm.phase.BinaryGas.filter_by_label", "modules/generated/openpnm.phase.BinaryGas.fromkeys", "modules/generated/openpnm.phase.BinaryGas.get", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals", "modules/generated/openpnm.phase.BinaryGas.interpolate_data", "modules/generated/openpnm.phase.BinaryGas.items", "modules/generated/openpnm.phase.BinaryGas.keys", "modules/generated/openpnm.phase.BinaryGas.labels", "modules/generated/openpnm.phase.BinaryGas.num_pores", "modules/generated/openpnm.phase.BinaryGas.num_throats", "modules/generated/openpnm.phase.BinaryGas.pop", "modules/generated/openpnm.phase.BinaryGas.popitem", "modules/generated/openpnm.phase.BinaryGas.pores", "modules/generated/openpnm.phase.BinaryGas.props", "modules/generated/openpnm.phase.BinaryGas.regenerate_models", "modules/generated/openpnm.phase.BinaryGas.remove_comp", "modules/generated/openpnm.phase.BinaryGas.run_model", "modules/generated/openpnm.phase.BinaryGas.set_label", "modules/generated/openpnm.phase.BinaryGas.setdefault", "modules/generated/openpnm.phase.BinaryGas.throats", "modules/generated/openpnm.phase.BinaryGas.to_indices", "modules/generated/openpnm.phase.BinaryGas.to_mask", "modules/generated/openpnm.phase.BinaryGas.update", "modules/generated/openpnm.phase.BinaryGas.values", "modules/generated/openpnm.phase.BinaryGas.y", "modules/generated/openpnm.phase.GasMixture", "modules/generated/openpnm.phase.GasMixture.add_comp", "modules/generated/openpnm.phase.GasMixture.add_model", "modules/generated/openpnm.phase.GasMixture.add_model_collection", "modules/generated/openpnm.phase.GasMixture.check_mixture_health", "modules/generated/openpnm.phase.GasMixture.clear", "modules/generated/openpnm.phase.GasMixture.copy", "modules/generated/openpnm.phase.GasMixture.filter_by_label", "modules/generated/openpnm.phase.GasMixture.fromkeys", "modules/generated/openpnm.phase.GasMixture.get", "modules/generated/openpnm.phase.GasMixture.get_comp_vals", "modules/generated/openpnm.phase.GasMixture.get_conduit_data", "modules/generated/openpnm.phase.GasMixture.get_mix_vals", "modules/generated/openpnm.phase.GasMixture.interpolate_data", "modules/generated/openpnm.phase.GasMixture.items", "modules/generated/openpnm.phase.GasMixture.keys", "modules/generated/openpnm.phase.GasMixture.labels", "modules/generated/openpnm.phase.GasMixture.num_pores", "modules/generated/openpnm.phase.GasMixture.num_throats", "modules/generated/openpnm.phase.GasMixture.pop", "modules/generated/openpnm.phase.GasMixture.popitem", "modules/generated/openpnm.phase.GasMixture.pores", "modules/generated/openpnm.phase.GasMixture.props", "modules/generated/openpnm.phase.GasMixture.regenerate_models", "modules/generated/openpnm.phase.GasMixture.remove_comp", "modules/generated/openpnm.phase.GasMixture.run_model", "modules/generated/openpnm.phase.GasMixture.set_label", "modules/generated/openpnm.phase.GasMixture.setdefault", "modules/generated/openpnm.phase.GasMixture.throats", "modules/generated/openpnm.phase.GasMixture.to_indices", "modules/generated/openpnm.phase.GasMixture.to_mask", "modules/generated/openpnm.phase.GasMixture.update", "modules/generated/openpnm.phase.GasMixture.values", "modules/generated/openpnm.phase.GasMixture.y", "modules/generated/openpnm.phase.LiquidMixture", "modules/generated/openpnm.phase.LiquidMixture.add_comp", "modules/generated/openpnm.phase.LiquidMixture.add_model", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.LiquidMixture.clear", "modules/generated/openpnm.phase.LiquidMixture.copy", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label", "modules/generated/openpnm.phase.LiquidMixture.fromkeys", "modules/generated/openpnm.phase.LiquidMixture.get", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data", "modules/generated/openpnm.phase.LiquidMixture.items", "modules/generated/openpnm.phase.LiquidMixture.keys", "modules/generated/openpnm.phase.LiquidMixture.labels", "modules/generated/openpnm.phase.LiquidMixture.num_pores", "modules/generated/openpnm.phase.LiquidMixture.num_throats", "modules/generated/openpnm.phase.LiquidMixture.pop", "modules/generated/openpnm.phase.LiquidMixture.popitem", "modules/generated/openpnm.phase.LiquidMixture.pores", "modules/generated/openpnm.phase.LiquidMixture.props", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models", "modules/generated/openpnm.phase.LiquidMixture.remove_comp", "modules/generated/openpnm.phase.LiquidMixture.run_model", "modules/generated/openpnm.phase.LiquidMixture.set_label", "modules/generated/openpnm.phase.LiquidMixture.setdefault", "modules/generated/openpnm.phase.LiquidMixture.throats", "modules/generated/openpnm.phase.LiquidMixture.to_indices", "modules/generated/openpnm.phase.LiquidMixture.to_mask", "modules/generated/openpnm.phase.LiquidMixture.update", "modules/generated/openpnm.phase.LiquidMixture.values", "modules/generated/openpnm.phase.LiquidMixture.x", "modules/generated/openpnm.phase.Mercury", "modules/generated/openpnm.phase.Mercury.add_model", "modules/generated/openpnm.phase.Mercury.add_model_collection", "modules/generated/openpnm.phase.Mercury.clear", "modules/generated/openpnm.phase.Mercury.copy", "modules/generated/openpnm.phase.Mercury.filter_by_label", "modules/generated/openpnm.phase.Mercury.fromkeys", "modules/generated/openpnm.phase.Mercury.get", "modules/generated/openpnm.phase.Mercury.get_conduit_data", "modules/generated/openpnm.phase.Mercury.interpolate_data", "modules/generated/openpnm.phase.Mercury.items", "modules/generated/openpnm.phase.Mercury.keys", "modules/generated/openpnm.phase.Mercury.labels", "modules/generated/openpnm.phase.Mercury.num_pores", "modules/generated/openpnm.phase.Mercury.num_throats", "modules/generated/openpnm.phase.Mercury.pop", "modules/generated/openpnm.phase.Mercury.popitem", "modules/generated/openpnm.phase.Mercury.pores", "modules/generated/openpnm.phase.Mercury.props", "modules/generated/openpnm.phase.Mercury.regenerate_models", "modules/generated/openpnm.phase.Mercury.run_model", "modules/generated/openpnm.phase.Mercury.set_label", "modules/generated/openpnm.phase.Mercury.setdefault", "modules/generated/openpnm.phase.Mercury.throats", "modules/generated/openpnm.phase.Mercury.to_indices", "modules/generated/openpnm.phase.Mercury.to_mask", "modules/generated/openpnm.phase.Mercury.update", "modules/generated/openpnm.phase.Mercury.values", "modules/generated/openpnm.phase.Mixture", "modules/generated/openpnm.phase.Mixture.add_comp", "modules/generated/openpnm.phase.Mixture.add_model", "modules/generated/openpnm.phase.Mixture.add_model_collection", "modules/generated/openpnm.phase.Mixture.check_mixture_health", "modules/generated/openpnm.phase.Mixture.clear", "modules/generated/openpnm.phase.Mixture.copy", "modules/generated/openpnm.phase.Mixture.filter_by_label", "modules/generated/openpnm.phase.Mixture.fromkeys", "modules/generated/openpnm.phase.Mixture.get", "modules/generated/openpnm.phase.Mixture.get_comp_vals", "modules/generated/openpnm.phase.Mixture.get_conduit_data", "modules/generated/openpnm.phase.Mixture.get_mix_vals", "modules/generated/openpnm.phase.Mixture.interpolate_data", "modules/generated/openpnm.phase.Mixture.items", "modules/generated/openpnm.phase.Mixture.keys", "modules/generated/openpnm.phase.Mixture.labels", "modules/generated/openpnm.phase.Mixture.num_pores", "modules/generated/openpnm.phase.Mixture.num_throats", "modules/generated/openpnm.phase.Mixture.pop", "modules/generated/openpnm.phase.Mixture.popitem", "modules/generated/openpnm.phase.Mixture.pores", "modules/generated/openpnm.phase.Mixture.props", "modules/generated/openpnm.phase.Mixture.regenerate_models", "modules/generated/openpnm.phase.Mixture.remove_comp", "modules/generated/openpnm.phase.Mixture.run_model", "modules/generated/openpnm.phase.Mixture.set_label", "modules/generated/openpnm.phase.Mixture.setdefault", "modules/generated/openpnm.phase.Mixture.throats", "modules/generated/openpnm.phase.Mixture.to_indices", "modules/generated/openpnm.phase.Mixture.to_mask", "modules/generated/openpnm.phase.Mixture.update", "modules/generated/openpnm.phase.Mixture.values", "modules/generated/openpnm.phase.Phase", "modules/generated/openpnm.phase.Phase.add_model", "modules/generated/openpnm.phase.Phase.add_model_collection", "modules/generated/openpnm.phase.Phase.clear", "modules/generated/openpnm.phase.Phase.copy", "modules/generated/openpnm.phase.Phase.filter_by_label", "modules/generated/openpnm.phase.Phase.fromkeys", "modules/generated/openpnm.phase.Phase.get", "modules/generated/openpnm.phase.Phase.get_conduit_data", "modules/generated/openpnm.phase.Phase.interpolate_data", "modules/generated/openpnm.phase.Phase.items", "modules/generated/openpnm.phase.Phase.keys", "modules/generated/openpnm.phase.Phase.labels", "modules/generated/openpnm.phase.Phase.num_pores", "modules/generated/openpnm.phase.Phase.num_throats", "modules/generated/openpnm.phase.Phase.pop", "modules/generated/openpnm.phase.Phase.popitem", "modules/generated/openpnm.phase.Phase.pores", "modules/generated/openpnm.phase.Phase.props", "modules/generated/openpnm.phase.Phase.regenerate_models", "modules/generated/openpnm.phase.Phase.run_model", "modules/generated/openpnm.phase.Phase.set_label", "modules/generated/openpnm.phase.Phase.setdefault", "modules/generated/openpnm.phase.Phase.throats", "modules/generated/openpnm.phase.Phase.to_indices", "modules/generated/openpnm.phase.Phase.to_mask", "modules/generated/openpnm.phase.Phase.update", "modules/generated/openpnm.phase.Phase.values", "modules/generated/openpnm.phase.Species", "modules/generated/openpnm.phase.Species.add_model", "modules/generated/openpnm.phase.Species.add_model_collection", "modules/generated/openpnm.phase.Species.clear", "modules/generated/openpnm.phase.Species.copy", "modules/generated/openpnm.phase.Species.filter_by_label", "modules/generated/openpnm.phase.Species.fromkeys", "modules/generated/openpnm.phase.Species.get", "modules/generated/openpnm.phase.Species.get_conduit_data", "modules/generated/openpnm.phase.Species.interpolate_data", "modules/generated/openpnm.phase.Species.items", "modules/generated/openpnm.phase.Species.keys", "modules/generated/openpnm.phase.Species.labels", "modules/generated/openpnm.phase.Species.num_pores", "modules/generated/openpnm.phase.Species.num_throats", "modules/generated/openpnm.phase.Species.pop", "modules/generated/openpnm.phase.Species.popitem", "modules/generated/openpnm.phase.Species.pores", "modules/generated/openpnm.phase.Species.props", "modules/generated/openpnm.phase.Species.regenerate_models", "modules/generated/openpnm.phase.Species.run_model", "modules/generated/openpnm.phase.Species.set_label", "modules/generated/openpnm.phase.Species.setdefault", "modules/generated/openpnm.phase.Species.throats", "modules/generated/openpnm.phase.Species.to_indices", "modules/generated/openpnm.phase.Species.to_mask", "modules/generated/openpnm.phase.Species.update", "modules/generated/openpnm.phase.Species.values", "modules/generated/openpnm.phase.StandardGas", "modules/generated/openpnm.phase.StandardGas.add_model", "modules/generated/openpnm.phase.StandardGas.add_model_collection", "modules/generated/openpnm.phase.StandardGas.clear", "modules/generated/openpnm.phase.StandardGas.copy", "modules/generated/openpnm.phase.StandardGas.filter_by_label", "modules/generated/openpnm.phase.StandardGas.fromkeys", "modules/generated/openpnm.phase.StandardGas.get", "modules/generated/openpnm.phase.StandardGas.get_conduit_data", "modules/generated/openpnm.phase.StandardGas.interpolate_data", "modules/generated/openpnm.phase.StandardGas.items", "modules/generated/openpnm.phase.StandardGas.keys", "modules/generated/openpnm.phase.StandardGas.labels", "modules/generated/openpnm.phase.StandardGas.num_pores", "modules/generated/openpnm.phase.StandardGas.num_throats", "modules/generated/openpnm.phase.StandardGas.pop", "modules/generated/openpnm.phase.StandardGas.popitem", "modules/generated/openpnm.phase.StandardGas.pores", "modules/generated/openpnm.phase.StandardGas.props", "modules/generated/openpnm.phase.StandardGas.regenerate_models", "modules/generated/openpnm.phase.StandardGas.run_model", "modules/generated/openpnm.phase.StandardGas.set_label", "modules/generated/openpnm.phase.StandardGas.setdefault", "modules/generated/openpnm.phase.StandardGas.throats", "modules/generated/openpnm.phase.StandardGas.to_indices", "modules/generated/openpnm.phase.StandardGas.to_mask", "modules/generated/openpnm.phase.StandardGas.update", "modules/generated/openpnm.phase.StandardGas.values", "modules/generated/openpnm.phase.StandardGasMixture", "modules/generated/openpnm.phase.StandardGasMixture.add_comp", "modules/generated/openpnm.phase.StandardGasMixture.add_model", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardGasMixture.clear", "modules/generated/openpnm.phase.StandardGasMixture.copy", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys", "modules/generated/openpnm.phase.StandardGasMixture.get", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data", "modules/generated/openpnm.phase.StandardGasMixture.items", "modules/generated/openpnm.phase.StandardGasMixture.keys", "modules/generated/openpnm.phase.StandardGasMixture.labels", "modules/generated/openpnm.phase.StandardGasMixture.num_pores", "modules/generated/openpnm.phase.StandardGasMixture.num_throats", "modules/generated/openpnm.phase.StandardGasMixture.pop", "modules/generated/openpnm.phase.StandardGasMixture.popitem", "modules/generated/openpnm.phase.StandardGasMixture.pores", "modules/generated/openpnm.phase.StandardGasMixture.props", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp", "modules/generated/openpnm.phase.StandardGasMixture.run_model", "modules/generated/openpnm.phase.StandardGasMixture.set_label", "modules/generated/openpnm.phase.StandardGasMixture.setdefault", "modules/generated/openpnm.phase.StandardGasMixture.throats", "modules/generated/openpnm.phase.StandardGasMixture.to_indices", "modules/generated/openpnm.phase.StandardGasMixture.to_mask", "modules/generated/openpnm.phase.StandardGasMixture.update", "modules/generated/openpnm.phase.StandardGasMixture.values", "modules/generated/openpnm.phase.StandardGasMixture.y", "modules/generated/openpnm.phase.StandardLiquid", "modules/generated/openpnm.phase.StandardLiquid.add_model", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection", "modules/generated/openpnm.phase.StandardLiquid.clear", "modules/generated/openpnm.phase.StandardLiquid.copy", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label", "modules/generated/openpnm.phase.StandardLiquid.fromkeys", "modules/generated/openpnm.phase.StandardLiquid.get", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data", "modules/generated/openpnm.phase.StandardLiquid.items", "modules/generated/openpnm.phase.StandardLiquid.keys", "modules/generated/openpnm.phase.StandardLiquid.labels", "modules/generated/openpnm.phase.StandardLiquid.num_pores", "modules/generated/openpnm.phase.StandardLiquid.num_throats", "modules/generated/openpnm.phase.StandardLiquid.pop", "modules/generated/openpnm.phase.StandardLiquid.popitem", "modules/generated/openpnm.phase.StandardLiquid.pores", "modules/generated/openpnm.phase.StandardLiquid.props", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models", "modules/generated/openpnm.phase.StandardLiquid.run_model", "modules/generated/openpnm.phase.StandardLiquid.set_label", "modules/generated/openpnm.phase.StandardLiquid.setdefault", "modules/generated/openpnm.phase.StandardLiquid.throats", "modules/generated/openpnm.phase.StandardLiquid.to_indices", "modules/generated/openpnm.phase.StandardLiquid.to_mask", "modules/generated/openpnm.phase.StandardLiquid.update", "modules/generated/openpnm.phase.StandardLiquid.values", "modules/generated/openpnm.phase.StandardLiquidMixture", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardLiquidMixture.clear", "modules/generated/openpnm.phase.StandardLiquidMixture.copy", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys", "modules/generated/openpnm.phase.StandardLiquidMixture.get", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data", "modules/generated/openpnm.phase.StandardLiquidMixture.items", "modules/generated/openpnm.phase.StandardLiquidMixture.keys", "modules/generated/openpnm.phase.StandardLiquidMixture.labels", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats", "modules/generated/openpnm.phase.StandardLiquidMixture.pop", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem", "modules/generated/openpnm.phase.StandardLiquidMixture.pores", "modules/generated/openpnm.phase.StandardLiquidMixture.props", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault", "modules/generated/openpnm.phase.StandardLiquidMixture.throats", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask", "modules/generated/openpnm.phase.StandardLiquidMixture.update", "modules/generated/openpnm.phase.StandardLiquidMixture.values", "modules/generated/openpnm.phase.StandardLiquidMixture.x", "modules/generated/openpnm.phase.Water", "modules/generated/openpnm.phase.Water.add_model", "modules/generated/openpnm.phase.Water.add_model_collection", "modules/generated/openpnm.phase.Water.clear", "modules/generated/openpnm.phase.Water.copy", "modules/generated/openpnm.phase.Water.filter_by_label", "modules/generated/openpnm.phase.Water.fromkeys", "modules/generated/openpnm.phase.Water.get", "modules/generated/openpnm.phase.Water.get_conduit_data", "modules/generated/openpnm.phase.Water.interpolate_data", "modules/generated/openpnm.phase.Water.items", "modules/generated/openpnm.phase.Water.keys", "modules/generated/openpnm.phase.Water.labels", "modules/generated/openpnm.phase.Water.num_pores", "modules/generated/openpnm.phase.Water.num_throats", "modules/generated/openpnm.phase.Water.pop", "modules/generated/openpnm.phase.Water.popitem", "modules/generated/openpnm.phase.Water.pores", "modules/generated/openpnm.phase.Water.props", "modules/generated/openpnm.phase.Water.regenerate_models", "modules/generated/openpnm.phase.Water.run_model", "modules/generated/openpnm.phase.Water.set_label", "modules/generated/openpnm.phase.Water.setdefault", "modules/generated/openpnm.phase.Water.throats", "modules/generated/openpnm.phase.Water.to_indices", "modules/generated/openpnm.phase.Water.to_mask", "modules/generated/openpnm.phase.Water.update", "modules/generated/openpnm.phase.Water.values", "modules/generated/openpnm.solvers", "modules/generated/openpnm.solvers.BaseSolver", "modules/generated/openpnm.solvers.BaseSolver.solve", "modules/generated/openpnm.solvers.DirectSolver", "modules/generated/openpnm.solvers.DirectSolver.solve", "modules/generated/openpnm.solvers.IterativeSolver", "modules/generated/openpnm.solvers.IterativeSolver.solve", "modules/generated/openpnm.solvers.PETScLinearSolver", "modules/generated/openpnm.solvers.PETScLinearSolver.solve", "modules/generated/openpnm.solvers.PardisoSpsolve", "modules/generated/openpnm.solvers.PardisoSpsolve.solve", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.solve", "modules/generated/openpnm.solvers.ScipyCG", "modules/generated/openpnm.solvers.ScipyCG.solve", "modules/generated/openpnm.solvers.ScipySpsolve", "modules/generated/openpnm.solvers.ScipySpsolve.solve", "modules/generated/openpnm.topotools", "modules/generated/openpnm.topotools.add_boundary_pores", "modules/generated/openpnm.topotools.add_reservoir_pore", "modules/generated/openpnm.topotools.bond_percolation", "modules/generated/openpnm.topotools.clone_pores", "modules/generated/openpnm.topotools.connect_pores", "modules/generated/openpnm.topotools.conns_to_am", "modules/generated/openpnm.topotools.dimensionality", "modules/generated/openpnm.topotools.drop_sites", "modules/generated/openpnm.topotools.extend", "modules/generated/openpnm.topotools.filter_pores_by_z", "modules/generated/openpnm.topotools.find_clusters", "modules/generated/openpnm.topotools.find_connected_sites", "modules/generated/openpnm.topotools.find_connecting_bonds", "modules/generated/openpnm.topotools.find_interface_throats", "modules/generated/openpnm.topotools.find_isolated_clusters", "modules/generated/openpnm.topotools.find_neighbor_bonds", "modules/generated/openpnm.topotools.find_neighbor_sites", "modules/generated/openpnm.topotools.find_path", "modules/generated/openpnm.topotools.find_surface_pores", "modules/generated/openpnm.topotools.generate_base_points", "modules/generated/openpnm.topotools.get_domain_area", "modules/generated/openpnm.topotools.get_domain_length", "modules/generated/openpnm.topotools.get_shape", "modules/generated/openpnm.topotools.get_spacing", "modules/generated/openpnm.topotools.hull_centroid", "modules/generated/openpnm.topotools.is_fully_connected", "modules/generated/openpnm.topotools.iscoplanar", "modules/generated/openpnm.topotools.isoutside", "modules/generated/openpnm.topotools.ispercolating", "modules/generated/openpnm.topotools.issymmetric", "modules/generated/openpnm.topotools.istriangular", "modules/generated/openpnm.topotools.istril", "modules/generated/openpnm.topotools.istriu", "modules/generated/openpnm.topotools.label_faces", "modules/generated/openpnm.topotools.merge_networks", "modules/generated/openpnm.topotools.merge_pores", "modules/generated/openpnm.topotools.reduce_coordination", "modules/generated/openpnm.topotools.reflect_base_points", "modules/generated/openpnm.topotools.rotate_coords", "modules/generated/openpnm.topotools.shear_coords", "modules/generated/openpnm.topotools.site_percolation", "modules/generated/openpnm.topotools.stitch", "modules/generated/openpnm.topotools.template_cylinder_annulus", "modules/generated/openpnm.topotools.template_sphere_shell", "modules/generated/openpnm.topotools.tri_to_am", "modules/generated/openpnm.topotools.trim", "modules/generated/openpnm.topotools.trim_disconnected_clusters", "modules/generated/openpnm.topotools.vor_to_am", "modules/generated/openpnm.utils", "modules/generated/openpnm.utils.Docorator", "modules/generated/openpnm.utils.Docorator.__call__", "modules/generated/openpnm.utils.Docorator.dedent", "modules/generated/openpnm.utils.Docorator.dedents", "modules/generated/openpnm.utils.Docorator.delete_kwargs", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s", "modules/generated/openpnm.utils.Docorator.delete_params", "modules/generated/openpnm.utils.Docorator.delete_params_s", "modules/generated/openpnm.utils.Docorator.delete_types", "modules/generated/openpnm.utils.Docorator.delete_types_s", "modules/generated/openpnm.utils.Docorator.get_docstring", "modules/generated/openpnm.utils.Docorator.get_extended_summary", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf", "modules/generated/openpnm.utils.Docorator.get_full_description", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf", "modules/generated/openpnm.utils.Docorator.get_sections", "modules/generated/openpnm.utils.Docorator.get_sectionsf", "modules/generated/openpnm.utils.Docorator.get_summary", "modules/generated/openpnm.utils.Docorator.get_summaryf", "modules/generated/openpnm.utils.Docorator.keep_params", "modules/generated/openpnm.utils.Docorator.keep_params_s", "modules/generated/openpnm.utils.Docorator.keep_types", "modules/generated/openpnm.utils.Docorator.keep_types_s", "modules/generated/openpnm.utils.Docorator.save_docstring", "modules/generated/openpnm.utils.Docorator.with_indent", "modules/generated/openpnm.utils.Docorator.with_indents", "modules/generated/openpnm.utils.HealthDict", "modules/generated/openpnm.utils.HealthDict.clear", "modules/generated/openpnm.utils.HealthDict.copy", "modules/generated/openpnm.utils.HealthDict.fromkeys", "modules/generated/openpnm.utils.HealthDict.get", "modules/generated/openpnm.utils.HealthDict.items", "modules/generated/openpnm.utils.HealthDict.keys", "modules/generated/openpnm.utils.HealthDict.pop", "modules/generated/openpnm.utils.HealthDict.popitem", "modules/generated/openpnm.utils.HealthDict.setdefault", "modules/generated/openpnm.utils.HealthDict.update", "modules/generated/openpnm.utils.HealthDict.values", "modules/generated/openpnm.utils.NestedDict", "modules/generated/openpnm.utils.NestedDict.clear", "modules/generated/openpnm.utils.NestedDict.copy", "modules/generated/openpnm.utils.NestedDict.fromkeys", "modules/generated/openpnm.utils.NestedDict.get", "modules/generated/openpnm.utils.NestedDict.items", "modules/generated/openpnm.utils.NestedDict.keys", "modules/generated/openpnm.utils.NestedDict.pop", "modules/generated/openpnm.utils.NestedDict.popitem", "modules/generated/openpnm.utils.NestedDict.setdefault", "modules/generated/openpnm.utils.NestedDict.to_dict", "modules/generated/openpnm.utils.NestedDict.unravel", "modules/generated/openpnm.utils.NestedDict.update", "modules/generated/openpnm.utils.NestedDict.values", "modules/generated/openpnm.utils.PrintableDict", "modules/generated/openpnm.utils.PrintableDict.clear", "modules/generated/openpnm.utils.PrintableDict.copy", "modules/generated/openpnm.utils.PrintableDict.fromkeys", "modules/generated/openpnm.utils.PrintableDict.get", "modules/generated/openpnm.utils.PrintableDict.items", "modules/generated/openpnm.utils.PrintableDict.keys", "modules/generated/openpnm.utils.PrintableDict.pop", "modules/generated/openpnm.utils.PrintableDict.popitem", "modules/generated/openpnm.utils.PrintableDict.setdefault", "modules/generated/openpnm.utils.PrintableDict.update", "modules/generated/openpnm.utils.PrintableDict.values", "modules/generated/openpnm.utils.PrintableList", "modules/generated/openpnm.utils.PrintableList.append", "modules/generated/openpnm.utils.PrintableList.clear", "modules/generated/openpnm.utils.PrintableList.copy", "modules/generated/openpnm.utils.PrintableList.count", "modules/generated/openpnm.utils.PrintableList.extend", "modules/generated/openpnm.utils.PrintableList.index", "modules/generated/openpnm.utils.PrintableList.insert", "modules/generated/openpnm.utils.PrintableList.pop", "modules/generated/openpnm.utils.PrintableList.remove", "modules/generated/openpnm.utils.PrintableList.reverse", "modules/generated/openpnm.utils.PrintableList.sort", "modules/generated/openpnm.utils.Project", "modules/generated/openpnm.utils.Project.append", "modules/generated/openpnm.utils.Project.copy", "modules/generated/openpnm.utils.SettingsAttr", "modules/generated/openpnm.utils.SimpleList", "modules/generated/openpnm.utils.SimpleList.append", "modules/generated/openpnm.utils.TypedList", "modules/generated/openpnm.utils.TypedList.append", "modules/generated/openpnm.utils.TypedList.clear", "modules/generated/openpnm.utils.TypedList.copy", "modules/generated/openpnm.utils.TypedList.count", "modules/generated/openpnm.utils.TypedList.extend", "modules/generated/openpnm.utils.TypedList.index", "modules/generated/openpnm.utils.TypedList.insert", "modules/generated/openpnm.utils.TypedList.pop", "modules/generated/openpnm.utils.TypedList.remove", "modules/generated/openpnm.utils.TypedList.reverse", "modules/generated/openpnm.utils.TypedList.sort", "modules/generated/openpnm.utils.TypedMixin", "modules/generated/openpnm.utils.TypedSet", "modules/generated/openpnm.utils.TypedSet.add", "modules/generated/openpnm.utils.TypedSet.clear", "modules/generated/openpnm.utils.TypedSet.copy", "modules/generated/openpnm.utils.TypedSet.difference", "modules/generated/openpnm.utils.TypedSet.difference_update", "modules/generated/openpnm.utils.TypedSet.discard", "modules/generated/openpnm.utils.TypedSet.intersection", "modules/generated/openpnm.utils.TypedSet.intersection_update", "modules/generated/openpnm.utils.TypedSet.isdisjoint", "modules/generated/openpnm.utils.TypedSet.issubset", "modules/generated/openpnm.utils.TypedSet.issuperset", "modules/generated/openpnm.utils.TypedSet.pop", "modules/generated/openpnm.utils.TypedSet.remove", "modules/generated/openpnm.utils.TypedSet.symmetric_difference", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update", "modules/generated/openpnm.utils.TypedSet.union", "modules/generated/openpnm.utils.TypedSet.update", "modules/generated/openpnm.utils.Workspace", "modules/generated/openpnm.utils.Workspace.clear", "modules/generated/openpnm.utils.Workspace.close_project", "modules/generated/openpnm.utils.Workspace.copy", "modules/generated/openpnm.utils.Workspace.copy_project", "modules/generated/openpnm.utils.Workspace.fromkeys", "modules/generated/openpnm.utils.Workspace.get", "modules/generated/openpnm.utils.Workspace.items", "modules/generated/openpnm.utils.Workspace.keys", "modules/generated/openpnm.utils.Workspace.load_project", "modules/generated/openpnm.utils.Workspace.load_workspace", "modules/generated/openpnm.utils.Workspace.new_project", "modules/generated/openpnm.utils.Workspace.pop", "modules/generated/openpnm.utils.Workspace.popitem", "modules/generated/openpnm.utils.Workspace.save_project", "modules/generated/openpnm.utils.Workspace.save_workspace", "modules/generated/openpnm.utils.Workspace.setdefault", "modules/generated/openpnm.utils.Workspace.update", "modules/generated/openpnm.utils.Workspace.values", "modules/generated/openpnm.utils.check_data_health", "modules/generated/openpnm.utils.check_network_health", "modules/generated/openpnm.utils.dict_to_struct", "modules/generated/openpnm.utils.flat_list", "modules/generated/openpnm.utils.get_mixture_model_args", "modules/generated/openpnm.utils.get_printable_labels", "modules/generated/openpnm.utils.get_printable_props", "modules/generated/openpnm.utils.ignore_warnings", "modules/generated/openpnm.utils.is_symmetric", "modules/generated/openpnm.utils.is_transient", "modules/generated/openpnm.utils.is_valid_propname", "modules/generated/openpnm.utils.methods_to_table", "modules/generated/openpnm.utils.models_to_table", "modules/generated/openpnm.utils.sanitize_dict", "modules/generated/openpnm.utils.struct_to_dict", "modules/generated/openpnm.visualization", "modules/generated/openpnm.visualization.draw_conduit", "modules/generated/openpnm.visualization.generate_voxel_image", "modules/generated/openpnm.visualization.plot_connections", "modules/generated/openpnm.visualization.plot_coordinates", "modules/generated/openpnm.visualization.plot_networkx", "modules/generated/openpnm.visualization.plot_notebook", "modules/generated/openpnm.visualization.plot_tutorial", "modules/generated/openpnm.visualization.plot_vispy", "modules/generated/openpnm.visualization.set_mpl_style", "modules/index"], "filenames": ["_examples/applications.rst", "_examples/index.rst", "_examples/reference.rst", "_examples/tutorials.rst", "examples/applications/absolute_permeability.ipynb", "examples/applications/adjusting_pore_size_distributions.ipynb", "examples/applications/dispersion_coefficient.ipynb", "examples/applications/effective_diffusivity_and_tortuosity.ipynb", "examples/applications/formation_factor.ipynb", "examples/applications/mercury_intrusion.ipynb", "examples/applications/porosity.ipynb", "examples/applications/relative_diffusivity.ipynb", "examples/applications/relative_permeability.ipynb", "examples/contrib/README.rst", "examples/getting_started.ipynb", "examples/reference/architecture/pore_scale_models.ipynb", "examples/reference/architecture/settings_attribute_machinery.ipynb", "examples/reference/architecture/workspace_and_projects.ipynb", "examples/reference/networks/managing_clustered_networks.ipynb", "examples/reference/simulations/available_matrix_solvers.ipynb", "examples/reference/simulations/basic_transport.ipynb", "examples/reference/simulations/explanation_of_units.ipynb", "examples/reference/simulations/reactive_transport.ipynb", "examples/reference/simulations/size_factors_and_transport_conductance.ipynb", "examples/reference/simulations/transient_transport.ipynb", "examples/tutorials/01_numerical_python_primer.ipynb", "examples/tutorials/02_network_generation_and_visualization.ipynb", "examples/tutorials/03_data_and_topology_storage.ipynb", "examples/tutorials/04_graph_queries_and_manipulation.ipynb", "examples/tutorials/05_defining_geometry.ipynb", "examples/tutorials/06_labels_and_domains.ipynb", "examples/tutorials/07_phases_and_mixtures.ipynb", "examples/tutorials/08_simulating_transport.ipynb", "examples/tutorials/09_simulating_invasion.ipynb", "examples/tutorials/10_visualization_options.ipynb", "index.rst", "installation.rst", "modules/generated/openpnm.algorithms.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.Algorithm.rst", "modules/generated/openpnm.algorithms.Algorithm.clear.rst", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs.rst", "modules/generated/openpnm.algorithms.Algorithm.copy.rst", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label.rst", "modules/generated/openpnm.algorithms.Algorithm.fromkeys.rst", "modules/generated/openpnm.algorithms.Algorithm.get.rst", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data.rst", "modules/generated/openpnm.algorithms.Algorithm.items.rst", "modules/generated/openpnm.algorithms.Algorithm.keys.rst", "modules/generated/openpnm.algorithms.Algorithm.labels.rst", "modules/generated/openpnm.algorithms.Algorithm.num_pores.rst", "modules/generated/openpnm.algorithms.Algorithm.num_throats.rst", "modules/generated/openpnm.algorithms.Algorithm.pop.rst", "modules/generated/openpnm.algorithms.Algorithm.popitem.rst", "modules/generated/openpnm.algorithms.Algorithm.pores.rst", "modules/generated/openpnm.algorithms.Algorithm.props.rst", "modules/generated/openpnm.algorithms.Algorithm.set_BC.rst", "modules/generated/openpnm.algorithms.Algorithm.set_label.rst", "modules/generated/openpnm.algorithms.Algorithm.setdefault.rst", "modules/generated/openpnm.algorithms.Algorithm.throats.rst", "modules/generated/openpnm.algorithms.Algorithm.to_indices.rst", "modules/generated/openpnm.algorithms.Algorithm.to_mask.rst", "modules/generated/openpnm.algorithms.Algorithm.update.rst", "modules/generated/openpnm.algorithms.Algorithm.values.rst", "modules/generated/openpnm.algorithms.Drainage.rst", "modules/generated/openpnm.algorithms.Drainage.apply_trapping.rst", "modules/generated/openpnm.algorithms.Drainage.clear.rst", "modules/generated/openpnm.algorithms.Drainage.clear_BCs.rst", "modules/generated/openpnm.algorithms.Drainage.copy.rst", "modules/generated/openpnm.algorithms.Drainage.filter_by_label.rst", "modules/generated/openpnm.algorithms.Drainage.fromkeys.rst", "modules/generated/openpnm.algorithms.Drainage.get.rst", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Drainage.interpolate_data.rst", "modules/generated/openpnm.algorithms.Drainage.items.rst", "modules/generated/openpnm.algorithms.Drainage.keys.rst", "modules/generated/openpnm.algorithms.Drainage.labels.rst", "modules/generated/openpnm.algorithms.Drainage.num_pores.rst", "modules/generated/openpnm.algorithms.Drainage.num_throats.rst", "modules/generated/openpnm.algorithms.Drainage.pc_curve.rst", "modules/generated/openpnm.algorithms.Drainage.pop.rst", "modules/generated/openpnm.algorithms.Drainage.popitem.rst", "modules/generated/openpnm.algorithms.Drainage.pores.rst", "modules/generated/openpnm.algorithms.Drainage.props.rst", "modules/generated/openpnm.algorithms.Drainage.reset.rst", "modules/generated/openpnm.algorithms.Drainage.run.rst", "modules/generated/openpnm.algorithms.Drainage.set_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_label.rst", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.setdefault.rst", "modules/generated/openpnm.algorithms.Drainage.throats.rst", "modules/generated/openpnm.algorithms.Drainage.to_indices.rst", "modules/generated/openpnm.algorithms.Drainage.to_mask.rst", "modules/generated/openpnm.algorithms.Drainage.update.rst", "modules/generated/openpnm.algorithms.Drainage.values.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.FourierConduction.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.copy.rst", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.FourierConduction.get.rst", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.items.rst", "modules/generated/openpnm.algorithms.FourierConduction.keys.rst", "modules/generated/openpnm.algorithms.FourierConduction.labels.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.pop.rst", "modules/generated/openpnm.algorithms.FourierConduction.popitem.rst", "modules/generated/openpnm.algorithms.FourierConduction.pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.props.rst", "modules/generated/openpnm.algorithms.FourierConduction.rate.rst", "modules/generated/openpnm.algorithms.FourierConduction.run.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_source.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.setdefault.rst", "modules/generated/openpnm.algorithms.FourierConduction.throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_indices.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_mask.rst", "modules/generated/openpnm.algorithms.FourierConduction.update.rst", "modules/generated/openpnm.algorithms.FourierConduction.values.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.copy.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.items.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.keys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.labels.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pop.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.props.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.reset.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.run.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.update.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.values.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.copy.rst", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.items.rst", "modules/generated/openpnm.algorithms.OhmicConduction.keys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.labels.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pop.rst", "modules/generated/openpnm.algorithms.OhmicConduction.popitem.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.props.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rate.rst", "modules/generated/openpnm.algorithms.OhmicConduction.run.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_source.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault.rst", "modules/generated/openpnm.algorithms.OhmicConduction.throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask.rst", "modules/generated/openpnm.algorithms.OhmicConduction.update.rst", "modules/generated/openpnm.algorithms.OhmicConduction.values.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.StokesFlow.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.copy.rst", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys.rst", "modules/generated/openpnm.algorithms.StokesFlow.get.rst", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.items.rst", "modules/generated/openpnm.algorithms.StokesFlow.keys.rst", "modules/generated/openpnm.algorithms.StokesFlow.labels.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.pop.rst", "modules/generated/openpnm.algorithms.StokesFlow.popitem.rst", "modules/generated/openpnm.algorithms.StokesFlow.pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.props.rst", "modules/generated/openpnm.algorithms.StokesFlow.rate.rst", "modules/generated/openpnm.algorithms.StokesFlow.run.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_source.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.setdefault.rst", "modules/generated/openpnm.algorithms.StokesFlow.throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_indices.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_mask.rst", "modules/generated/openpnm.algorithms.StokesFlow.update.rst", "modules/generated/openpnm.algorithms.StokesFlow.values.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.Transport.rst", "modules/generated/openpnm.algorithms.Transport.clear.rst", "modules/generated/openpnm.algorithms.Transport.clear_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.Transport.copy.rst", "modules/generated/openpnm.algorithms.Transport.filter_by_label.rst", "modules/generated/openpnm.algorithms.Transport.fromkeys.rst", "modules/generated/openpnm.algorithms.Transport.get.rst", "modules/generated/openpnm.algorithms.Transport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Transport.interpolate_data.rst", "modules/generated/openpnm.algorithms.Transport.items.rst", "modules/generated/openpnm.algorithms.Transport.keys.rst", "modules/generated/openpnm.algorithms.Transport.labels.rst", "modules/generated/openpnm.algorithms.Transport.num_pores.rst", "modules/generated/openpnm.algorithms.Transport.num_throats.rst", "modules/generated/openpnm.algorithms.Transport.pop.rst", "modules/generated/openpnm.algorithms.Transport.popitem.rst", "modules/generated/openpnm.algorithms.Transport.pores.rst", "modules/generated/openpnm.algorithms.Transport.props.rst", "modules/generated/openpnm.algorithms.Transport.rate.rst", "modules/generated/openpnm.algorithms.Transport.run.rst", "modules/generated/openpnm.algorithms.Transport.set_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_label.rst", "modules/generated/openpnm.algorithms.Transport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_value_BC.rst", "modules/generated/openpnm.algorithms.Transport.setdefault.rst", "modules/generated/openpnm.algorithms.Transport.throats.rst", "modules/generated/openpnm.algorithms.Transport.to_indices.rst", "modules/generated/openpnm.algorithms.Transport.to_mask.rst", "modules/generated/openpnm.algorithms.Transport.update.rst", "modules/generated/openpnm.algorithms.Transport.values.rst", "modules/generated/openpnm.contrib.rst", "modules/generated/openpnm.contrib.MultiPhase.rst", "modules/generated/openpnm.contrib.MultiPhase.add_model.rst", "modules/generated/openpnm.contrib.MultiPhase.add_model_collection.rst", "modules/generated/openpnm.contrib.MultiPhase.add_phases.rst", "modules/generated/openpnm.contrib.MultiPhase.clear.rst", "modules/generated/openpnm.contrib.MultiPhase.copy.rst", "modules/generated/openpnm.contrib.MultiPhase.filter_by_label.rst", "modules/generated/openpnm.contrib.MultiPhase.fromkeys.rst", "modules/generated/openpnm.contrib.MultiPhase.get.rst", "modules/generated/openpnm.contrib.MultiPhase.get_conduit_data.rst", "modules/generated/openpnm.contrib.MultiPhase.interpolate_data.rst", "modules/generated/openpnm.contrib.MultiPhase.items.rst", "modules/generated/openpnm.contrib.MultiPhase.keys.rst", "modules/generated/openpnm.contrib.MultiPhase.labels.rst", "modules/generated/openpnm.contrib.MultiPhase.num_pores.rst", "modules/generated/openpnm.contrib.MultiPhase.num_throats.rst", "modules/generated/openpnm.contrib.MultiPhase.pop.rst", "modules/generated/openpnm.contrib.MultiPhase.popitem.rst", "modules/generated/openpnm.contrib.MultiPhase.pores.rst", "modules/generated/openpnm.contrib.MultiPhase.props.rst", "modules/generated/openpnm.contrib.MultiPhase.regenerate_models.rst", "modules/generated/openpnm.contrib.MultiPhase.run_model.rst", "modules/generated/openpnm.contrib.MultiPhase.set_binary_partition_coef.rst", "modules/generated/openpnm.contrib.MultiPhase.set_label.rst", "modules/generated/openpnm.contrib.MultiPhase.set_occupancy.rst", "modules/generated/openpnm.contrib.MultiPhase.setdefault.rst", "modules/generated/openpnm.contrib.MultiPhase.throats.rst", "modules/generated/openpnm.contrib.MultiPhase.to_indices.rst", "modules/generated/openpnm.contrib.MultiPhase.to_mask.rst", "modules/generated/openpnm.contrib.MultiPhase.update.rst", "modules/generated/openpnm.contrib.MultiPhase.values.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear_BCs.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.copy.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.filter_by_label.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.fromkeys.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.get.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.get_conduit_data.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.interpolate_data.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.items.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.keys.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.labels.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_pores.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_throats.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.pop.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.popitem.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.pores.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.props.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.run.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_BC.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_label.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.setdefault.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.throats.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_indices.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_mask.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.update.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.values.rst", "modules/generated/openpnm.contrib.multiphase_diffusion.rst", "modules/generated/openpnm.core.rst", "modules/generated/openpnm.core.Base2.rst", "modules/generated/openpnm.core.Base2.clear.rst", "modules/generated/openpnm.core.Base2.copy.rst", "modules/generated/openpnm.core.Base2.fromkeys.rst", "modules/generated/openpnm.core.Base2.get.rst", "modules/generated/openpnm.core.Base2.get_conduit_data.rst", "modules/generated/openpnm.core.Base2.interpolate_data.rst", "modules/generated/openpnm.core.Base2.items.rst", "modules/generated/openpnm.core.Base2.keys.rst", "modules/generated/openpnm.core.Base2.pop.rst", "modules/generated/openpnm.core.Base2.popitem.rst", "modules/generated/openpnm.core.Base2.props.rst", "modules/generated/openpnm.core.Base2.setdefault.rst", "modules/generated/openpnm.core.Base2.to_indices.rst", "modules/generated/openpnm.core.Base2.to_mask.rst", "modules/generated/openpnm.core.Base2.update.rst", "modules/generated/openpnm.core.Base2.values.rst", "modules/generated/openpnm.core.Domain.rst", "modules/generated/openpnm.core.Domain.add_model.rst", "modules/generated/openpnm.core.Domain.add_model_collection.rst", "modules/generated/openpnm.core.Domain.clear.rst", "modules/generated/openpnm.core.Domain.copy.rst", "modules/generated/openpnm.core.Domain.filter_by_label.rst", "modules/generated/openpnm.core.Domain.fromkeys.rst", "modules/generated/openpnm.core.Domain.get.rst", "modules/generated/openpnm.core.Domain.get_conduit_data.rst", "modules/generated/openpnm.core.Domain.interpolate_data.rst", "modules/generated/openpnm.core.Domain.items.rst", "modules/generated/openpnm.core.Domain.keys.rst", "modules/generated/openpnm.core.Domain.labels.rst", "modules/generated/openpnm.core.Domain.num_pores.rst", "modules/generated/openpnm.core.Domain.num_throats.rst", "modules/generated/openpnm.core.Domain.pop.rst", "modules/generated/openpnm.core.Domain.popitem.rst", "modules/generated/openpnm.core.Domain.pores.rst", "modules/generated/openpnm.core.Domain.props.rst", "modules/generated/openpnm.core.Domain.regenerate_models.rst", "modules/generated/openpnm.core.Domain.run_model.rst", "modules/generated/openpnm.core.Domain.set_label.rst", "modules/generated/openpnm.core.Domain.setdefault.rst", "modules/generated/openpnm.core.Domain.throats.rst", "modules/generated/openpnm.core.Domain.to_indices.rst", "modules/generated/openpnm.core.Domain.to_mask.rst", "modules/generated/openpnm.core.Domain.update.rst", "modules/generated/openpnm.core.Domain.values.rst", "modules/generated/openpnm.core.LabelMixin.rst", "modules/generated/openpnm.core.LabelMixin.filter_by_label.rst", "modules/generated/openpnm.core.LabelMixin.labels.rst", "modules/generated/openpnm.core.LabelMixin.num_pores.rst", "modules/generated/openpnm.core.LabelMixin.num_throats.rst", "modules/generated/openpnm.core.LabelMixin.pores.rst", "modules/generated/openpnm.core.LabelMixin.set_label.rst", "modules/generated/openpnm.core.LabelMixin.throats.rst", "modules/generated/openpnm.core.ModelWrapper.rst", "modules/generated/openpnm.core.ModelWrapper.__call__.rst", "modules/generated/openpnm.core.ModelWrapper.clear.rst", "modules/generated/openpnm.core.ModelWrapper.copy.rst", "modules/generated/openpnm.core.ModelWrapper.fromkeys.rst", "modules/generated/openpnm.core.ModelWrapper.get.rst", "modules/generated/openpnm.core.ModelWrapper.items.rst", "modules/generated/openpnm.core.ModelWrapper.keys.rst", "modules/generated/openpnm.core.ModelWrapper.pop.rst", "modules/generated/openpnm.core.ModelWrapper.popitem.rst", "modules/generated/openpnm.core.ModelWrapper.setdefault.rst", "modules/generated/openpnm.core.ModelWrapper.update.rst", "modules/generated/openpnm.core.ModelWrapper.values.rst", "modules/generated/openpnm.core.ModelsDict.rst", "modules/generated/openpnm.core.ModelsDict.clear.rst", "modules/generated/openpnm.core.ModelsDict.copy.rst", "modules/generated/openpnm.core.ModelsDict.dependency_graph.rst", "modules/generated/openpnm.core.ModelsDict.dependency_list.rst", "modules/generated/openpnm.core.ModelsDict.dependency_map.rst", "modules/generated/openpnm.core.ModelsDict.fromkeys.rst", "modules/generated/openpnm.core.ModelsDict.get.rst", "modules/generated/openpnm.core.ModelsDict.items.rst", "modules/generated/openpnm.core.ModelsDict.keys.rst", "modules/generated/openpnm.core.ModelsDict.pop.rst", "modules/generated/openpnm.core.ModelsDict.popitem.rst", "modules/generated/openpnm.core.ModelsDict.setdefault.rst", "modules/generated/openpnm.core.ModelsDict.update.rst", "modules/generated/openpnm.core.ModelsDict.values.rst", "modules/generated/openpnm.core.ModelsMixin2.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection.rst", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models.rst", "modules/generated/openpnm.core.ModelsMixin2.run_model.rst", "modules/generated/openpnm.core.ParserMixin.rst", "modules/generated/openpnm.integrators.rst", "modules/generated/openpnm.integrators.Integrator.rst", "modules/generated/openpnm.integrators.ScipyRK45.rst", "modules/generated/openpnm.integrators.ScipyRK45.solve.rst", "modules/generated/openpnm.io.rst", "modules/generated/openpnm.io.network_from_csv.rst", "modules/generated/openpnm.io.network_from_jsongraph.rst", "modules/generated/openpnm.io.network_from_marock.rst", "modules/generated/openpnm.io.network_from_networkx.rst", "modules/generated/openpnm.io.network_from_pergeos.rst", "modules/generated/openpnm.io.network_from_porespy.rst", "modules/generated/openpnm.io.network_from_statoil.rst", "modules/generated/openpnm.io.network_to_comsol.rst", "modules/generated/openpnm.io.network_to_csv.rst", "modules/generated/openpnm.io.network_to_jsongraph.rst", "modules/generated/openpnm.io.network_to_networkx.rst", "modules/generated/openpnm.io.network_to_pandas.rst", "modules/generated/openpnm.io.network_to_pergeos.rst", "modules/generated/openpnm.io.network_to_salome.rst", "modules/generated/openpnm.io.network_to_stl.rst", "modules/generated/openpnm.io.print_hdf5.rst", "modules/generated/openpnm.io.project_to_csv.rst", "modules/generated/openpnm.io.project_to_dict.rst", "modules/generated/openpnm.io.project_to_hdf5.rst", "modules/generated/openpnm.io.project_to_pandas.rst", "modules/generated/openpnm.io.project_to_paraview.rst", "modules/generated/openpnm.io.project_to_vtk.rst", "modules/generated/openpnm.io.project_to_xdmf.rst", "modules/generated/openpnm.models.rst", "modules/generated/openpnm.models.collections.rst", "modules/generated/openpnm.models.collections.geometry.rst", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.collections.network.rst", "modules/generated/openpnm.models.collections.phase.rst", "modules/generated/openpnm.models.collections.phase.air.rst", "modules/generated/openpnm.models.collections.phase.gas.rst", "modules/generated/openpnm.models.collections.phase.liquid.rst", "modules/generated/openpnm.models.collections.phase.mercury.rst", "modules/generated/openpnm.models.collections.phase.water.rst", "modules/generated/openpnm.models.collections.physics.rst", "modules/generated/openpnm.models.collections.physics.basic.rst", "modules/generated/openpnm.models.collections.physics.standard.rst", "modules/generated/openpnm.models.geometry.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square.rst", "modules/generated/openpnm.models.geometry.pore_seed.rst", "modules/generated/openpnm.models.geometry.pore_seed.random.rst", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated.rst", "modules/generated/openpnm.models.geometry.pore_size.rst", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats.rst", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere.rst", "modules/generated/openpnm.models.geometry.pore_size.normal.rst", "modules/generated/openpnm.models.geometry.pore_size.random.rst", "modules/generated/openpnm.models.geometry.pore_size.weibull.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.square.rst", "modules/generated/openpnm.models.geometry.pore_volume.rst", "modules/generated/openpnm.models.geometry.pore_volume.circle.rst", "modules/generated/openpnm.models.geometry.pore_volume.cube.rst", "modules/generated/openpnm.models.geometry.pore_volume.effective.rst", "modules/generated/openpnm.models.geometry.pore_volume.sphere.rst", "modules/generated/openpnm.models.geometry.pore_volume.square.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow.rst", "modules/generated/openpnm.models.geometry.throat_centroid.rst", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.rst", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_seed.rst", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_seed.random.rst", "modules/generated/openpnm.models.geometry.throat_size.rst", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.throat_size.normal.rst", "modules/generated/openpnm.models.geometry.throat_size.random.rst", "modules/generated/openpnm.models.geometry.throat_size.weibull.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_vector.rst", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore.rst", "modules/generated/openpnm.models.geometry.throat_volume.rst", "modules/generated/openpnm.models.geometry.throat_volume.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_volume.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_volume.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_volume.lens.rst", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring.rst", "modules/generated/openpnm.models.geometry.throat_volume.rectangle.rst", "modules/generated/openpnm.models.misc.rst", "modules/generated/openpnm.models.misc.blank.rst", "modules/generated/openpnm.models.misc.clip.rst", "modules/generated/openpnm.models.misc.constant.rst", "modules/generated/openpnm.models.misc.difference.rst", "modules/generated/openpnm.models.misc.fraction.rst", "modules/generated/openpnm.models.misc.from_neighbor_pores.rst", "modules/generated/openpnm.models.misc.from_neighbor_throats.rst", "modules/generated/openpnm.models.misc.generic_distribution.rst", "modules/generated/openpnm.models.misc.generic_function.rst", "modules/generated/openpnm.models.misc.invert.rst", "modules/generated/openpnm.models.misc.linear.rst", "modules/generated/openpnm.models.misc.match_histogram.rst", "modules/generated/openpnm.models.misc.normal.rst", "modules/generated/openpnm.models.misc.normalize.rst", "modules/generated/openpnm.models.misc.polynomial.rst", "modules/generated/openpnm.models.misc.product.rst", "modules/generated/openpnm.models.misc.random.rst", "modules/generated/openpnm.models.misc.scaled.rst", "modules/generated/openpnm.models.misc.summation.rst", "modules/generated/openpnm.models.misc.weibull.rst", "modules/generated/openpnm.models.network.rst", "modules/generated/openpnm.models.network.bidirectional_throats.rst", "modules/generated/openpnm.models.network.cluster_number.rst", "modules/generated/openpnm.models.network.cluster_size.rst", "modules/generated/openpnm.models.network.coordination_number.rst", "modules/generated/openpnm.models.network.count_coincident_pores.rst", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_pore.rst", "modules/generated/openpnm.models.network.duplicate_throats.rst", "modules/generated/openpnm.models.network.find_coincident_pores.rst", "modules/generated/openpnm.models.network.gabriel_edges.rst", "modules/generated/openpnm.models.network.headless_throats.rst", "modules/generated/openpnm.models.network.isolated_pores.rst", "modules/generated/openpnm.models.network.looped_throats.rst", "modules/generated/openpnm.models.network.pore_to_pore_distance.rst", "modules/generated/openpnm.models.network.reversed_throats.rst", "modules/generated/openpnm.models.phase.rst", "modules/generated/openpnm.models.phase.chemicals_wrapper.rst", "modules/generated/openpnm.models.phase.critical_props.rst", "modules/generated/openpnm.models.phase.density.rst", "modules/generated/openpnm.models.phase.density.ideal_gas.rst", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD.rst", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD.rst", "modules/generated/openpnm.models.phase.density.mass_to_molar.rst", "modules/generated/openpnm.models.phase.density.water_correlation.rst", "modules/generated/openpnm.models.phase.diffusivity.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg.rst", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc.rst", "modules/generated/openpnm.models.phase.heat_capacity.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp.rst", "modules/generated/openpnm.models.phase.misc.rst", "modules/generated/openpnm.models.phase.misc.mix_and_match.rst", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.rst", "modules/generated/openpnm.models.phase.mixtures.from_component.rst", "modules/generated/openpnm.models.phase.mixtures.mixing_rule.rst", "modules/generated/openpnm.models.phase.mixtures.mole_summation.rst", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.salinity.rst", "modules/generated/openpnm.models.phase.partition_coefficient.rst", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water.rst", "modules/generated/openpnm.models.phase.surface_tension.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb.rst", "modules/generated/openpnm.models.phase.surface_tension.water_correlation.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation.rst", "modules/generated/openpnm.models.phase.vapor_pressure.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk.rst", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation.rst", "modules/generated/openpnm.models.phase.viscosity.rst", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls.rst", "modules/generated/openpnm.models.phase.viscosity.water_correlation.rst", "modules/generated/openpnm.models.physics.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif.rst", "modules/generated/openpnm.models.physics.capillary_pressure.rst", "modules/generated/openpnm.models.physics.capillary_pressure.purcell.rst", "modules/generated/openpnm.models.physics.capillary_pressure.washburn.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion.rst", "modules/generated/openpnm.models.physics.electrical_conductance.rst", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical.rst", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt.rst", "modules/generated/openpnm.models.physics.meniscus.rst", "modules/generated/openpnm.models.physics.meniscus.general_toroidal.rst", "modules/generated/openpnm.models.physics.meniscus.purcell.rst", "modules/generated/openpnm.models.physics.meniscus.sinusoidal.rst", "modules/generated/openpnm.models.physics.multiphase.rst", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance.rst", "modules/generated/openpnm.models.physics.multiphase.late_filling.rst", "modules/generated/openpnm.models.physics.source_terms.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage.rst", "modules/generated/openpnm.models.physics.source_terms.exponential.rst", "modules/generated/openpnm.models.physics.source_terms.general_symbolic.rst", "modules/generated/openpnm.models.physics.source_terms.linear.rst", "modules/generated/openpnm.models.physics.source_terms.logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.natural_exponential.rst", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.power_law.rst", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics.rst", "modules/generated/openpnm.models.physics.thermal_conductance.rst", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal.rst", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors.rst", "modules/generated/openpnm.network.rst", "modules/generated/openpnm.network.BodyCenteredCubic.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.BodyCenteredCubic.clear.rst", "modules/generated/openpnm.network.BodyCenteredCubic.copy.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.items.rst", "modules/generated/openpnm.network.BodyCenteredCubic.keys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.labels.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pop.rst", "modules/generated/openpnm.network.BodyCenteredCubic.popitem.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.props.rst", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.BodyCenteredCubic.run_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.set_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.BodyCenteredCubic.throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.BodyCenteredCubic.update.rst", "modules/generated/openpnm.network.BodyCenteredCubic.values.rst", "modules/generated/openpnm.network.Cubic.rst", "modules/generated/openpnm.network.Cubic.add_boundary_pores.rst", "modules/generated/openpnm.network.Cubic.add_model.rst", "modules/generated/openpnm.network.Cubic.add_model_collection.rst", "modules/generated/openpnm.network.Cubic.clear.rst", "modules/generated/openpnm.network.Cubic.copy.rst", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.filter_by_label.rst", "modules/generated/openpnm.network.Cubic.find_connected_pores.rst", "modules/generated/openpnm.network.Cubic.find_connecting_throat.rst", "modules/generated/openpnm.network.Cubic.find_nearby_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.Cubic.fromkeys.rst", "modules/generated/openpnm.network.Cubic.get.rst", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.get_conduit_data.rst", "modules/generated/openpnm.network.Cubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.interpolate_data.rst", "modules/generated/openpnm.network.Cubic.items.rst", "modules/generated/openpnm.network.Cubic.keys.rst", "modules/generated/openpnm.network.Cubic.labels.rst", "modules/generated/openpnm.network.Cubic.num_neighbors.rst", "modules/generated/openpnm.network.Cubic.num_pores.rst", "modules/generated/openpnm.network.Cubic.num_throats.rst", "modules/generated/openpnm.network.Cubic.pop.rst", "modules/generated/openpnm.network.Cubic.popitem.rst", "modules/generated/openpnm.network.Cubic.pores.rst", "modules/generated/openpnm.network.Cubic.props.rst", "modules/generated/openpnm.network.Cubic.regenerate_models.rst", "modules/generated/openpnm.network.Cubic.run_model.rst", "modules/generated/openpnm.network.Cubic.set_label.rst", "modules/generated/openpnm.network.Cubic.setdefault.rst", "modules/generated/openpnm.network.Cubic.throats.rst", "modules/generated/openpnm.network.Cubic.to_indices.rst", "modules/generated/openpnm.network.Cubic.to_mask.rst", "modules/generated/openpnm.network.Cubic.update.rst", "modules/generated/openpnm.network.Cubic.values.rst", "modules/generated/openpnm.network.CubicTemplate.rst", "modules/generated/openpnm.network.CubicTemplate.add_model.rst", "modules/generated/openpnm.network.CubicTemplate.add_model_collection.rst", "modules/generated/openpnm.network.CubicTemplate.clear.rst", "modules/generated/openpnm.network.CubicTemplate.copy.rst", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.filter_by_label.rst", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat.rst", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats.rst", "modules/generated/openpnm.network.CubicTemplate.fromkeys.rst", "modules/generated/openpnm.network.CubicTemplate.get.rst", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data.rst", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.interpolate_data.rst", "modules/generated/openpnm.network.CubicTemplate.items.rst", "modules/generated/openpnm.network.CubicTemplate.keys.rst", "modules/generated/openpnm.network.CubicTemplate.labels.rst", "modules/generated/openpnm.network.CubicTemplate.num_neighbors.rst", "modules/generated/openpnm.network.CubicTemplate.num_pores.rst", "modules/generated/openpnm.network.CubicTemplate.num_throats.rst", "modules/generated/openpnm.network.CubicTemplate.pop.rst", "modules/generated/openpnm.network.CubicTemplate.popitem.rst", "modules/generated/openpnm.network.CubicTemplate.pores.rst", "modules/generated/openpnm.network.CubicTemplate.props.rst", "modules/generated/openpnm.network.CubicTemplate.regenerate_models.rst", "modules/generated/openpnm.network.CubicTemplate.run_model.rst", "modules/generated/openpnm.network.CubicTemplate.set_label.rst", "modules/generated/openpnm.network.CubicTemplate.setdefault.rst", "modules/generated/openpnm.network.CubicTemplate.throats.rst", "modules/generated/openpnm.network.CubicTemplate.to_indices.rst", "modules/generated/openpnm.network.CubicTemplate.to_mask.rst", "modules/generated/openpnm.network.CubicTemplate.update.rst", "modules/generated/openpnm.network.CubicTemplate.values.rst", "modules/generated/openpnm.network.Delaunay.rst", "modules/generated/openpnm.network.Delaunay.add_model.rst", "modules/generated/openpnm.network.Delaunay.add_model_collection.rst", "modules/generated/openpnm.network.Delaunay.clear.rst", "modules/generated/openpnm.network.Delaunay.copy.rst", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.filter_by_label.rst", "modules/generated/openpnm.network.Delaunay.find_connected_pores.rst", "modules/generated/openpnm.network.Delaunay.find_connecting_throat.rst", "modules/generated/openpnm.network.Delaunay.find_nearby_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats.rst", "modules/generated/openpnm.network.Delaunay.fromkeys.rst", "modules/generated/openpnm.network.Delaunay.get.rst", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.get_conduit_data.rst", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.interpolate_data.rst", "modules/generated/openpnm.network.Delaunay.items.rst", "modules/generated/openpnm.network.Delaunay.keys.rst", "modules/generated/openpnm.network.Delaunay.labels.rst", "modules/generated/openpnm.network.Delaunay.num_neighbors.rst", "modules/generated/openpnm.network.Delaunay.num_pores.rst", "modules/generated/openpnm.network.Delaunay.num_throats.rst", "modules/generated/openpnm.network.Delaunay.pop.rst", "modules/generated/openpnm.network.Delaunay.popitem.rst", "modules/generated/openpnm.network.Delaunay.pores.rst", "modules/generated/openpnm.network.Delaunay.props.rst", "modules/generated/openpnm.network.Delaunay.regenerate_models.rst", "modules/generated/openpnm.network.Delaunay.run_model.rst", "modules/generated/openpnm.network.Delaunay.set_label.rst", "modules/generated/openpnm.network.Delaunay.setdefault.rst", "modules/generated/openpnm.network.Delaunay.throats.rst", "modules/generated/openpnm.network.Delaunay.to_indices.rst", "modules/generated/openpnm.network.Delaunay.to_mask.rst", "modules/generated/openpnm.network.Delaunay.update.rst", "modules/generated/openpnm.network.Delaunay.values.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.items.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.props.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.update.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.values.rst", "modules/generated/openpnm.network.Demo.rst", "modules/generated/openpnm.network.Demo.add_boundary_pores.rst", "modules/generated/openpnm.network.Demo.add_model.rst", "modules/generated/openpnm.network.Demo.add_model_collection.rst", "modules/generated/openpnm.network.Demo.clear.rst", "modules/generated/openpnm.network.Demo.copy.rst", "modules/generated/openpnm.network.Demo.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.create_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.filter_by_label.rst", "modules/generated/openpnm.network.Demo.find_connected_pores.rst", "modules/generated/openpnm.network.Demo.find_connecting_throat.rst", "modules/generated/openpnm.network.Demo.find_nearby_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_throats.rst", "modules/generated/openpnm.network.Demo.fromkeys.rst", "modules/generated/openpnm.network.Demo.get.rst", "modules/generated/openpnm.network.Demo.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.get_conduit_data.rst", "modules/generated/openpnm.network.Demo.get_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.interpolate_data.rst", "modules/generated/openpnm.network.Demo.items.rst", "modules/generated/openpnm.network.Demo.keys.rst", "modules/generated/openpnm.network.Demo.labels.rst", "modules/generated/openpnm.network.Demo.num_neighbors.rst", "modules/generated/openpnm.network.Demo.num_pores.rst", "modules/generated/openpnm.network.Demo.num_throats.rst", "modules/generated/openpnm.network.Demo.pop.rst", "modules/generated/openpnm.network.Demo.popitem.rst", "modules/generated/openpnm.network.Demo.pores.rst", "modules/generated/openpnm.network.Demo.props.rst", "modules/generated/openpnm.network.Demo.regenerate_models.rst", "modules/generated/openpnm.network.Demo.run_model.rst", "modules/generated/openpnm.network.Demo.set_label.rst", "modules/generated/openpnm.network.Demo.setdefault.rst", "modules/generated/openpnm.network.Demo.throats.rst", "modules/generated/openpnm.network.Demo.to_indices.rst", "modules/generated/openpnm.network.Demo.to_mask.rst", "modules/generated/openpnm.network.Demo.update.rst", "modules/generated/openpnm.network.Demo.values.rst", "modules/generated/openpnm.network.FaceCenteredCubic.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.FaceCenteredCubic.clear.rst", "modules/generated/openpnm.network.FaceCenteredCubic.copy.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.items.rst", "modules/generated/openpnm.network.FaceCenteredCubic.keys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.labels.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pop.rst", "modules/generated/openpnm.network.FaceCenteredCubic.popitem.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.props.rst", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.FaceCenteredCubic.run_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.set_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.FaceCenteredCubic.throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.FaceCenteredCubic.update.rst", "modules/generated/openpnm.network.FaceCenteredCubic.values.rst", "modules/generated/openpnm.network.Network.rst", "modules/generated/openpnm.network.Network.add_model.rst", "modules/generated/openpnm.network.Network.add_model_collection.rst", "modules/generated/openpnm.network.Network.clear.rst", "modules/generated/openpnm.network.Network.copy.rst", "modules/generated/openpnm.network.Network.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.create_incidence_matrix.rst", "modules/generated/openpnm.network.Network.filter_by_label.rst", "modules/generated/openpnm.network.Network.find_connected_pores.rst", "modules/generated/openpnm.network.Network.find_connecting_throat.rst", "modules/generated/openpnm.network.Network.find_nearby_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_throats.rst", "modules/generated/openpnm.network.Network.fromkeys.rst", "modules/generated/openpnm.network.Network.get.rst", "modules/generated/openpnm.network.Network.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.get_conduit_data.rst", "modules/generated/openpnm.network.Network.get_incidence_matrix.rst", "modules/generated/openpnm.network.Network.interpolate_data.rst", "modules/generated/openpnm.network.Network.items.rst", "modules/generated/openpnm.network.Network.keys.rst", "modules/generated/openpnm.network.Network.labels.rst", "modules/generated/openpnm.network.Network.num_neighbors.rst", "modules/generated/openpnm.network.Network.num_pores.rst", "modules/generated/openpnm.network.Network.num_throats.rst", "modules/generated/openpnm.network.Network.pop.rst", "modules/generated/openpnm.network.Network.popitem.rst", "modules/generated/openpnm.network.Network.pores.rst", "modules/generated/openpnm.network.Network.props.rst", "modules/generated/openpnm.network.Network.regenerate_models.rst", "modules/generated/openpnm.network.Network.run_model.rst", "modules/generated/openpnm.network.Network.set_label.rst", "modules/generated/openpnm.network.Network.setdefault.rst", "modules/generated/openpnm.network.Network.throats.rst", "modules/generated/openpnm.network.Network.to_indices.rst", "modules/generated/openpnm.network.Network.to_mask.rst", "modules/generated/openpnm.network.Network.update.rst", "modules/generated/openpnm.network.Network.values.rst", "modules/generated/openpnm.network.Voronoi.rst", "modules/generated/openpnm.network.Voronoi.add_model.rst", "modules/generated/openpnm.network.Voronoi.add_model_collection.rst", "modules/generated/openpnm.network.Voronoi.clear.rst", "modules/generated/openpnm.network.Voronoi.copy.rst", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.filter_by_label.rst", "modules/generated/openpnm.network.Voronoi.find_connected_pores.rst", "modules/generated/openpnm.network.Voronoi.find_connecting_throat.rst", "modules/generated/openpnm.network.Voronoi.find_nearby_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats.rst", "modules/generated/openpnm.network.Voronoi.fromkeys.rst", "modules/generated/openpnm.network.Voronoi.get.rst", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.get_conduit_data.rst", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.interpolate_data.rst", "modules/generated/openpnm.network.Voronoi.items.rst", "modules/generated/openpnm.network.Voronoi.keys.rst", "modules/generated/openpnm.network.Voronoi.labels.rst", "modules/generated/openpnm.network.Voronoi.num_neighbors.rst", "modules/generated/openpnm.network.Voronoi.num_pores.rst", "modules/generated/openpnm.network.Voronoi.num_throats.rst", "modules/generated/openpnm.network.Voronoi.pop.rst", "modules/generated/openpnm.network.Voronoi.popitem.rst", "modules/generated/openpnm.network.Voronoi.pores.rst", "modules/generated/openpnm.network.Voronoi.props.rst", "modules/generated/openpnm.network.Voronoi.regenerate_models.rst", "modules/generated/openpnm.network.Voronoi.run_model.rst", "modules/generated/openpnm.network.Voronoi.set_label.rst", "modules/generated/openpnm.network.Voronoi.setdefault.rst", "modules/generated/openpnm.network.Voronoi.throats.rst", "modules/generated/openpnm.network.Voronoi.to_indices.rst", "modules/generated/openpnm.network.Voronoi.to_mask.rst", "modules/generated/openpnm.network.Voronoi.update.rst", "modules/generated/openpnm.network.Voronoi.values.rst", "modules/generated/openpnm.phase.rst", "modules/generated/openpnm.phase.Air.rst", "modules/generated/openpnm.phase.Air.add_model.rst", "modules/generated/openpnm.phase.Air.add_model_collection.rst", "modules/generated/openpnm.phase.Air.clear.rst", "modules/generated/openpnm.phase.Air.copy.rst", "modules/generated/openpnm.phase.Air.filter_by_label.rst", "modules/generated/openpnm.phase.Air.fromkeys.rst", "modules/generated/openpnm.phase.Air.get.rst", "modules/generated/openpnm.phase.Air.get_conduit_data.rst", "modules/generated/openpnm.phase.Air.interpolate_data.rst", "modules/generated/openpnm.phase.Air.items.rst", "modules/generated/openpnm.phase.Air.keys.rst", "modules/generated/openpnm.phase.Air.labels.rst", "modules/generated/openpnm.phase.Air.num_pores.rst", "modules/generated/openpnm.phase.Air.num_throats.rst", "modules/generated/openpnm.phase.Air.pop.rst", "modules/generated/openpnm.phase.Air.popitem.rst", "modules/generated/openpnm.phase.Air.pores.rst", "modules/generated/openpnm.phase.Air.props.rst", "modules/generated/openpnm.phase.Air.regenerate_models.rst", "modules/generated/openpnm.phase.Air.run_model.rst", "modules/generated/openpnm.phase.Air.set_label.rst", "modules/generated/openpnm.phase.Air.setdefault.rst", "modules/generated/openpnm.phase.Air.throats.rst", "modules/generated/openpnm.phase.Air.to_indices.rst", "modules/generated/openpnm.phase.Air.to_mask.rst", "modules/generated/openpnm.phase.Air.update.rst", "modules/generated/openpnm.phase.Air.values.rst", "modules/generated/openpnm.phase.BinaryGas.rst", "modules/generated/openpnm.phase.BinaryGas.add_comp.rst", "modules/generated/openpnm.phase.BinaryGas.add_model.rst", "modules/generated/openpnm.phase.BinaryGas.add_model_collection.rst", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health.rst", "modules/generated/openpnm.phase.BinaryGas.clear.rst", "modules/generated/openpnm.phase.BinaryGas.copy.rst", "modules/generated/openpnm.phase.BinaryGas.filter_by_label.rst", "modules/generated/openpnm.phase.BinaryGas.fromkeys.rst", "modules/generated/openpnm.phase.BinaryGas.get.rst", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals.rst", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data.rst", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals.rst", "modules/generated/openpnm.phase.BinaryGas.interpolate_data.rst", "modules/generated/openpnm.phase.BinaryGas.items.rst", "modules/generated/openpnm.phase.BinaryGas.keys.rst", "modules/generated/openpnm.phase.BinaryGas.labels.rst", "modules/generated/openpnm.phase.BinaryGas.num_pores.rst", "modules/generated/openpnm.phase.BinaryGas.num_throats.rst", "modules/generated/openpnm.phase.BinaryGas.pop.rst", "modules/generated/openpnm.phase.BinaryGas.popitem.rst", "modules/generated/openpnm.phase.BinaryGas.pores.rst", "modules/generated/openpnm.phase.BinaryGas.props.rst", "modules/generated/openpnm.phase.BinaryGas.regenerate_models.rst", "modules/generated/openpnm.phase.BinaryGas.remove_comp.rst", "modules/generated/openpnm.phase.BinaryGas.run_model.rst", "modules/generated/openpnm.phase.BinaryGas.set_label.rst", "modules/generated/openpnm.phase.BinaryGas.setdefault.rst", "modules/generated/openpnm.phase.BinaryGas.throats.rst", "modules/generated/openpnm.phase.BinaryGas.to_indices.rst", "modules/generated/openpnm.phase.BinaryGas.to_mask.rst", "modules/generated/openpnm.phase.BinaryGas.update.rst", "modules/generated/openpnm.phase.BinaryGas.values.rst", "modules/generated/openpnm.phase.BinaryGas.y.rst", "modules/generated/openpnm.phase.GasMixture.rst", "modules/generated/openpnm.phase.GasMixture.add_comp.rst", "modules/generated/openpnm.phase.GasMixture.add_model.rst", "modules/generated/openpnm.phase.GasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.GasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.GasMixture.clear.rst", "modules/generated/openpnm.phase.GasMixture.copy.rst", "modules/generated/openpnm.phase.GasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.GasMixture.fromkeys.rst", "modules/generated/openpnm.phase.GasMixture.get.rst", "modules/generated/openpnm.phase.GasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.GasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.GasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.GasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.GasMixture.items.rst", "modules/generated/openpnm.phase.GasMixture.keys.rst", "modules/generated/openpnm.phase.GasMixture.labels.rst", "modules/generated/openpnm.phase.GasMixture.num_pores.rst", "modules/generated/openpnm.phase.GasMixture.num_throats.rst", "modules/generated/openpnm.phase.GasMixture.pop.rst", "modules/generated/openpnm.phase.GasMixture.popitem.rst", "modules/generated/openpnm.phase.GasMixture.pores.rst", "modules/generated/openpnm.phase.GasMixture.props.rst", "modules/generated/openpnm.phase.GasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.GasMixture.remove_comp.rst", "modules/generated/openpnm.phase.GasMixture.run_model.rst", "modules/generated/openpnm.phase.GasMixture.set_label.rst", "modules/generated/openpnm.phase.GasMixture.setdefault.rst", "modules/generated/openpnm.phase.GasMixture.throats.rst", "modules/generated/openpnm.phase.GasMixture.to_indices.rst", "modules/generated/openpnm.phase.GasMixture.to_mask.rst", "modules/generated/openpnm.phase.GasMixture.update.rst", "modules/generated/openpnm.phase.GasMixture.values.rst", "modules/generated/openpnm.phase.GasMixture.y.rst", "modules/generated/openpnm.phase.LiquidMixture.rst", "modules/generated/openpnm.phase.LiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.LiquidMixture.clear.rst", "modules/generated/openpnm.phase.LiquidMixture.copy.rst", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.LiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.LiquidMixture.get.rst", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.LiquidMixture.items.rst", "modules/generated/openpnm.phase.LiquidMixture.keys.rst", "modules/generated/openpnm.phase.LiquidMixture.labels.rst", "modules/generated/openpnm.phase.LiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.LiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.LiquidMixture.pop.rst", "modules/generated/openpnm.phase.LiquidMixture.popitem.rst", "modules/generated/openpnm.phase.LiquidMixture.pores.rst", "modules/generated/openpnm.phase.LiquidMixture.props.rst", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.LiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.run_model.rst", "modules/generated/openpnm.phase.LiquidMixture.set_label.rst", "modules/generated/openpnm.phase.LiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.LiquidMixture.throats.rst", "modules/generated/openpnm.phase.LiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.LiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.LiquidMixture.update.rst", "modules/generated/openpnm.phase.LiquidMixture.values.rst", "modules/generated/openpnm.phase.LiquidMixture.x.rst", "modules/generated/openpnm.phase.Mercury.rst", "modules/generated/openpnm.phase.Mercury.add_model.rst", "modules/generated/openpnm.phase.Mercury.add_model_collection.rst", "modules/generated/openpnm.phase.Mercury.clear.rst", "modules/generated/openpnm.phase.Mercury.copy.rst", "modules/generated/openpnm.phase.Mercury.filter_by_label.rst", "modules/generated/openpnm.phase.Mercury.fromkeys.rst", "modules/generated/openpnm.phase.Mercury.get.rst", "modules/generated/openpnm.phase.Mercury.get_conduit_data.rst", "modules/generated/openpnm.phase.Mercury.interpolate_data.rst", "modules/generated/openpnm.phase.Mercury.items.rst", "modules/generated/openpnm.phase.Mercury.keys.rst", "modules/generated/openpnm.phase.Mercury.labels.rst", "modules/generated/openpnm.phase.Mercury.num_pores.rst", "modules/generated/openpnm.phase.Mercury.num_throats.rst", "modules/generated/openpnm.phase.Mercury.pop.rst", "modules/generated/openpnm.phase.Mercury.popitem.rst", "modules/generated/openpnm.phase.Mercury.pores.rst", "modules/generated/openpnm.phase.Mercury.props.rst", "modules/generated/openpnm.phase.Mercury.regenerate_models.rst", "modules/generated/openpnm.phase.Mercury.run_model.rst", "modules/generated/openpnm.phase.Mercury.set_label.rst", "modules/generated/openpnm.phase.Mercury.setdefault.rst", "modules/generated/openpnm.phase.Mercury.throats.rst", "modules/generated/openpnm.phase.Mercury.to_indices.rst", "modules/generated/openpnm.phase.Mercury.to_mask.rst", "modules/generated/openpnm.phase.Mercury.update.rst", "modules/generated/openpnm.phase.Mercury.values.rst", "modules/generated/openpnm.phase.Mixture.rst", "modules/generated/openpnm.phase.Mixture.add_comp.rst", "modules/generated/openpnm.phase.Mixture.add_model.rst", "modules/generated/openpnm.phase.Mixture.add_model_collection.rst", "modules/generated/openpnm.phase.Mixture.check_mixture_health.rst", "modules/generated/openpnm.phase.Mixture.clear.rst", "modules/generated/openpnm.phase.Mixture.copy.rst", "modules/generated/openpnm.phase.Mixture.filter_by_label.rst", "modules/generated/openpnm.phase.Mixture.fromkeys.rst", "modules/generated/openpnm.phase.Mixture.get.rst", "modules/generated/openpnm.phase.Mixture.get_comp_vals.rst", "modules/generated/openpnm.phase.Mixture.get_conduit_data.rst", "modules/generated/openpnm.phase.Mixture.get_mix_vals.rst", "modules/generated/openpnm.phase.Mixture.interpolate_data.rst", "modules/generated/openpnm.phase.Mixture.items.rst", "modules/generated/openpnm.phase.Mixture.keys.rst", "modules/generated/openpnm.phase.Mixture.labels.rst", "modules/generated/openpnm.phase.Mixture.num_pores.rst", "modules/generated/openpnm.phase.Mixture.num_throats.rst", "modules/generated/openpnm.phase.Mixture.pop.rst", "modules/generated/openpnm.phase.Mixture.popitem.rst", "modules/generated/openpnm.phase.Mixture.pores.rst", "modules/generated/openpnm.phase.Mixture.props.rst", "modules/generated/openpnm.phase.Mixture.regenerate_models.rst", "modules/generated/openpnm.phase.Mixture.remove_comp.rst", "modules/generated/openpnm.phase.Mixture.run_model.rst", "modules/generated/openpnm.phase.Mixture.set_label.rst", "modules/generated/openpnm.phase.Mixture.setdefault.rst", "modules/generated/openpnm.phase.Mixture.throats.rst", "modules/generated/openpnm.phase.Mixture.to_indices.rst", "modules/generated/openpnm.phase.Mixture.to_mask.rst", "modules/generated/openpnm.phase.Mixture.update.rst", "modules/generated/openpnm.phase.Mixture.values.rst", "modules/generated/openpnm.phase.Phase.rst", "modules/generated/openpnm.phase.Phase.add_model.rst", "modules/generated/openpnm.phase.Phase.add_model_collection.rst", "modules/generated/openpnm.phase.Phase.clear.rst", "modules/generated/openpnm.phase.Phase.copy.rst", "modules/generated/openpnm.phase.Phase.filter_by_label.rst", "modules/generated/openpnm.phase.Phase.fromkeys.rst", "modules/generated/openpnm.phase.Phase.get.rst", "modules/generated/openpnm.phase.Phase.get_conduit_data.rst", "modules/generated/openpnm.phase.Phase.interpolate_data.rst", "modules/generated/openpnm.phase.Phase.items.rst", "modules/generated/openpnm.phase.Phase.keys.rst", "modules/generated/openpnm.phase.Phase.labels.rst", "modules/generated/openpnm.phase.Phase.num_pores.rst", "modules/generated/openpnm.phase.Phase.num_throats.rst", "modules/generated/openpnm.phase.Phase.pop.rst", "modules/generated/openpnm.phase.Phase.popitem.rst", "modules/generated/openpnm.phase.Phase.pores.rst", "modules/generated/openpnm.phase.Phase.props.rst", "modules/generated/openpnm.phase.Phase.regenerate_models.rst", "modules/generated/openpnm.phase.Phase.run_model.rst", "modules/generated/openpnm.phase.Phase.set_label.rst", "modules/generated/openpnm.phase.Phase.setdefault.rst", "modules/generated/openpnm.phase.Phase.throats.rst", "modules/generated/openpnm.phase.Phase.to_indices.rst", "modules/generated/openpnm.phase.Phase.to_mask.rst", "modules/generated/openpnm.phase.Phase.update.rst", "modules/generated/openpnm.phase.Phase.values.rst", "modules/generated/openpnm.phase.Species.rst", "modules/generated/openpnm.phase.Species.add_model.rst", "modules/generated/openpnm.phase.Species.add_model_collection.rst", "modules/generated/openpnm.phase.Species.clear.rst", "modules/generated/openpnm.phase.Species.copy.rst", "modules/generated/openpnm.phase.Species.filter_by_label.rst", "modules/generated/openpnm.phase.Species.fromkeys.rst", "modules/generated/openpnm.phase.Species.get.rst", "modules/generated/openpnm.phase.Species.get_conduit_data.rst", "modules/generated/openpnm.phase.Species.interpolate_data.rst", "modules/generated/openpnm.phase.Species.items.rst", "modules/generated/openpnm.phase.Species.keys.rst", "modules/generated/openpnm.phase.Species.labels.rst", "modules/generated/openpnm.phase.Species.num_pores.rst", "modules/generated/openpnm.phase.Species.num_throats.rst", "modules/generated/openpnm.phase.Species.pop.rst", "modules/generated/openpnm.phase.Species.popitem.rst", "modules/generated/openpnm.phase.Species.pores.rst", "modules/generated/openpnm.phase.Species.props.rst", "modules/generated/openpnm.phase.Species.regenerate_models.rst", "modules/generated/openpnm.phase.Species.run_model.rst", "modules/generated/openpnm.phase.Species.set_label.rst", "modules/generated/openpnm.phase.Species.setdefault.rst", "modules/generated/openpnm.phase.Species.throats.rst", "modules/generated/openpnm.phase.Species.to_indices.rst", "modules/generated/openpnm.phase.Species.to_mask.rst", "modules/generated/openpnm.phase.Species.update.rst", "modules/generated/openpnm.phase.Species.values.rst", "modules/generated/openpnm.phase.StandardGas.rst", "modules/generated/openpnm.phase.StandardGas.add_model.rst", "modules/generated/openpnm.phase.StandardGas.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGas.clear.rst", "modules/generated/openpnm.phase.StandardGas.copy.rst", "modules/generated/openpnm.phase.StandardGas.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGas.fromkeys.rst", "modules/generated/openpnm.phase.StandardGas.get.rst", "modules/generated/openpnm.phase.StandardGas.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGas.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGas.items.rst", "modules/generated/openpnm.phase.StandardGas.keys.rst", "modules/generated/openpnm.phase.StandardGas.labels.rst", "modules/generated/openpnm.phase.StandardGas.num_pores.rst", "modules/generated/openpnm.phase.StandardGas.num_throats.rst", "modules/generated/openpnm.phase.StandardGas.pop.rst", "modules/generated/openpnm.phase.StandardGas.popitem.rst", "modules/generated/openpnm.phase.StandardGas.pores.rst", "modules/generated/openpnm.phase.StandardGas.props.rst", "modules/generated/openpnm.phase.StandardGas.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGas.run_model.rst", "modules/generated/openpnm.phase.StandardGas.set_label.rst", "modules/generated/openpnm.phase.StandardGas.setdefault.rst", "modules/generated/openpnm.phase.StandardGas.throats.rst", "modules/generated/openpnm.phase.StandardGas.to_indices.rst", "modules/generated/openpnm.phase.StandardGas.to_mask.rst", "modules/generated/openpnm.phase.StandardGas.update.rst", "modules/generated/openpnm.phase.StandardGas.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardGasMixture.clear.rst", "modules/generated/openpnm.phase.StandardGasMixture.copy.rst", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardGasMixture.get.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.items.rst", "modules/generated/openpnm.phase.StandardGasMixture.keys.rst", "modules/generated/openpnm.phase.StandardGasMixture.labels.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.pop.rst", "modules/generated/openpnm.phase.StandardGasMixture.popitem.rst", "modules/generated/openpnm.phase.StandardGasMixture.pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.props.rst", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.run_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.set_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardGasMixture.throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardGasMixture.update.rst", "modules/generated/openpnm.phase.StandardGasMixture.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.y.rst", "modules/generated/openpnm.phase.StandardLiquid.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquid.clear.rst", "modules/generated/openpnm.phase.StandardLiquid.copy.rst", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquid.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquid.get.rst", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquid.items.rst", "modules/generated/openpnm.phase.StandardLiquid.keys.rst", "modules/generated/openpnm.phase.StandardLiquid.labels.rst", "modules/generated/openpnm.phase.StandardLiquid.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquid.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquid.pop.rst", "modules/generated/openpnm.phase.StandardLiquid.popitem.rst", "modules/generated/openpnm.phase.StandardLiquid.pores.rst", "modules/generated/openpnm.phase.StandardLiquid.props.rst", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquid.run_model.rst", "modules/generated/openpnm.phase.StandardLiquid.set_label.rst", "modules/generated/openpnm.phase.StandardLiquid.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquid.throats.rst", "modules/generated/openpnm.phase.StandardLiquid.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquid.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquid.update.rst", "modules/generated/openpnm.phase.StandardLiquid.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.clear.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.copy.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.items.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.keys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.labels.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pop.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.props.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.update.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.x.rst", "modules/generated/openpnm.phase.Water.rst", "modules/generated/openpnm.phase.Water.add_model.rst", "modules/generated/openpnm.phase.Water.add_model_collection.rst", "modules/generated/openpnm.phase.Water.clear.rst", "modules/generated/openpnm.phase.Water.copy.rst", "modules/generated/openpnm.phase.Water.filter_by_label.rst", "modules/generated/openpnm.phase.Water.fromkeys.rst", "modules/generated/openpnm.phase.Water.get.rst", "modules/generated/openpnm.phase.Water.get_conduit_data.rst", "modules/generated/openpnm.phase.Water.interpolate_data.rst", "modules/generated/openpnm.phase.Water.items.rst", "modules/generated/openpnm.phase.Water.keys.rst", "modules/generated/openpnm.phase.Water.labels.rst", "modules/generated/openpnm.phase.Water.num_pores.rst", "modules/generated/openpnm.phase.Water.num_throats.rst", "modules/generated/openpnm.phase.Water.pop.rst", "modules/generated/openpnm.phase.Water.popitem.rst", "modules/generated/openpnm.phase.Water.pores.rst", "modules/generated/openpnm.phase.Water.props.rst", "modules/generated/openpnm.phase.Water.regenerate_models.rst", "modules/generated/openpnm.phase.Water.run_model.rst", "modules/generated/openpnm.phase.Water.set_label.rst", "modules/generated/openpnm.phase.Water.setdefault.rst", "modules/generated/openpnm.phase.Water.throats.rst", "modules/generated/openpnm.phase.Water.to_indices.rst", "modules/generated/openpnm.phase.Water.to_mask.rst", "modules/generated/openpnm.phase.Water.update.rst", "modules/generated/openpnm.phase.Water.values.rst", "modules/generated/openpnm.solvers.rst", "modules/generated/openpnm.solvers.BaseSolver.rst", "modules/generated/openpnm.solvers.BaseSolver.solve.rst", "modules/generated/openpnm.solvers.DirectSolver.rst", "modules/generated/openpnm.solvers.DirectSolver.solve.rst", "modules/generated/openpnm.solvers.IterativeSolver.rst", "modules/generated/openpnm.solvers.IterativeSolver.solve.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.solve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.solve.rst", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.rst", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.solve.rst", "modules/generated/openpnm.solvers.ScipyCG.rst", "modules/generated/openpnm.solvers.ScipyCG.solve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.solve.rst", "modules/generated/openpnm.topotools.rst", "modules/generated/openpnm.topotools.add_boundary_pores.rst", "modules/generated/openpnm.topotools.add_reservoir_pore.rst", "modules/generated/openpnm.topotools.bond_percolation.rst", "modules/generated/openpnm.topotools.clone_pores.rst", "modules/generated/openpnm.topotools.connect_pores.rst", "modules/generated/openpnm.topotools.conns_to_am.rst", "modules/generated/openpnm.topotools.dimensionality.rst", "modules/generated/openpnm.topotools.drop_sites.rst", "modules/generated/openpnm.topotools.extend.rst", "modules/generated/openpnm.topotools.filter_pores_by_z.rst", "modules/generated/openpnm.topotools.find_clusters.rst", "modules/generated/openpnm.topotools.find_connected_sites.rst", "modules/generated/openpnm.topotools.find_connecting_bonds.rst", "modules/generated/openpnm.topotools.find_interface_throats.rst", "modules/generated/openpnm.topotools.find_isolated_clusters.rst", "modules/generated/openpnm.topotools.find_neighbor_bonds.rst", "modules/generated/openpnm.topotools.find_neighbor_sites.rst", "modules/generated/openpnm.topotools.find_path.rst", "modules/generated/openpnm.topotools.find_surface_pores.rst", "modules/generated/openpnm.topotools.generate_base_points.rst", "modules/generated/openpnm.topotools.get_domain_area.rst", "modules/generated/openpnm.topotools.get_domain_length.rst", "modules/generated/openpnm.topotools.get_shape.rst", "modules/generated/openpnm.topotools.get_spacing.rst", "modules/generated/openpnm.topotools.hull_centroid.rst", "modules/generated/openpnm.topotools.is_fully_connected.rst", "modules/generated/openpnm.topotools.iscoplanar.rst", "modules/generated/openpnm.topotools.isoutside.rst", "modules/generated/openpnm.topotools.ispercolating.rst", "modules/generated/openpnm.topotools.issymmetric.rst", "modules/generated/openpnm.topotools.istriangular.rst", "modules/generated/openpnm.topotools.istril.rst", "modules/generated/openpnm.topotools.istriu.rst", "modules/generated/openpnm.topotools.label_faces.rst", "modules/generated/openpnm.topotools.merge_networks.rst", "modules/generated/openpnm.topotools.merge_pores.rst", "modules/generated/openpnm.topotools.reduce_coordination.rst", "modules/generated/openpnm.topotools.reflect_base_points.rst", "modules/generated/openpnm.topotools.rotate_coords.rst", "modules/generated/openpnm.topotools.shear_coords.rst", "modules/generated/openpnm.topotools.site_percolation.rst", "modules/generated/openpnm.topotools.stitch.rst", "modules/generated/openpnm.topotools.template_cylinder_annulus.rst", "modules/generated/openpnm.topotools.template_sphere_shell.rst", "modules/generated/openpnm.topotools.tri_to_am.rst", "modules/generated/openpnm.topotools.trim.rst", "modules/generated/openpnm.topotools.trim_disconnected_clusters.rst", "modules/generated/openpnm.topotools.vor_to_am.rst", "modules/generated/openpnm.utils.rst", "modules/generated/openpnm.utils.Docorator.rst", "modules/generated/openpnm.utils.Docorator.__call__.rst", "modules/generated/openpnm.utils.Docorator.dedent.rst", "modules/generated/openpnm.utils.Docorator.dedents.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s.rst", "modules/generated/openpnm.utils.Docorator.delete_params.rst", "modules/generated/openpnm.utils.Docorator.delete_params_s.rst", "modules/generated/openpnm.utils.Docorator.delete_types.rst", "modules/generated/openpnm.utils.Docorator.delete_types_s.rst", "modules/generated/openpnm.utils.Docorator.get_docstring.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summary.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf.rst", "modules/generated/openpnm.utils.Docorator.get_full_description.rst", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf.rst", "modules/generated/openpnm.utils.Docorator.get_sections.rst", "modules/generated/openpnm.utils.Docorator.get_sectionsf.rst", "modules/generated/openpnm.utils.Docorator.get_summary.rst", "modules/generated/openpnm.utils.Docorator.get_summaryf.rst", "modules/generated/openpnm.utils.Docorator.keep_params.rst", "modules/generated/openpnm.utils.Docorator.keep_params_s.rst", "modules/generated/openpnm.utils.Docorator.keep_types.rst", "modules/generated/openpnm.utils.Docorator.keep_types_s.rst", "modules/generated/openpnm.utils.Docorator.save_docstring.rst", "modules/generated/openpnm.utils.Docorator.with_indent.rst", "modules/generated/openpnm.utils.Docorator.with_indents.rst", "modules/generated/openpnm.utils.HealthDict.rst", "modules/generated/openpnm.utils.HealthDict.clear.rst", "modules/generated/openpnm.utils.HealthDict.copy.rst", "modules/generated/openpnm.utils.HealthDict.fromkeys.rst", "modules/generated/openpnm.utils.HealthDict.get.rst", "modules/generated/openpnm.utils.HealthDict.items.rst", "modules/generated/openpnm.utils.HealthDict.keys.rst", "modules/generated/openpnm.utils.HealthDict.pop.rst", "modules/generated/openpnm.utils.HealthDict.popitem.rst", "modules/generated/openpnm.utils.HealthDict.setdefault.rst", "modules/generated/openpnm.utils.HealthDict.update.rst", "modules/generated/openpnm.utils.HealthDict.values.rst", "modules/generated/openpnm.utils.NestedDict.rst", "modules/generated/openpnm.utils.NestedDict.clear.rst", "modules/generated/openpnm.utils.NestedDict.copy.rst", "modules/generated/openpnm.utils.NestedDict.fromkeys.rst", "modules/generated/openpnm.utils.NestedDict.get.rst", "modules/generated/openpnm.utils.NestedDict.items.rst", "modules/generated/openpnm.utils.NestedDict.keys.rst", "modules/generated/openpnm.utils.NestedDict.pop.rst", "modules/generated/openpnm.utils.NestedDict.popitem.rst", "modules/generated/openpnm.utils.NestedDict.setdefault.rst", "modules/generated/openpnm.utils.NestedDict.to_dict.rst", "modules/generated/openpnm.utils.NestedDict.unravel.rst", "modules/generated/openpnm.utils.NestedDict.update.rst", "modules/generated/openpnm.utils.NestedDict.values.rst", "modules/generated/openpnm.utils.PrintableDict.rst", "modules/generated/openpnm.utils.PrintableDict.clear.rst", "modules/generated/openpnm.utils.PrintableDict.copy.rst", "modules/generated/openpnm.utils.PrintableDict.fromkeys.rst", "modules/generated/openpnm.utils.PrintableDict.get.rst", "modules/generated/openpnm.utils.PrintableDict.items.rst", "modules/generated/openpnm.utils.PrintableDict.keys.rst", "modules/generated/openpnm.utils.PrintableDict.pop.rst", "modules/generated/openpnm.utils.PrintableDict.popitem.rst", "modules/generated/openpnm.utils.PrintableDict.setdefault.rst", "modules/generated/openpnm.utils.PrintableDict.update.rst", "modules/generated/openpnm.utils.PrintableDict.values.rst", "modules/generated/openpnm.utils.PrintableList.rst", "modules/generated/openpnm.utils.PrintableList.append.rst", "modules/generated/openpnm.utils.PrintableList.clear.rst", "modules/generated/openpnm.utils.PrintableList.copy.rst", "modules/generated/openpnm.utils.PrintableList.count.rst", "modules/generated/openpnm.utils.PrintableList.extend.rst", "modules/generated/openpnm.utils.PrintableList.index.rst", "modules/generated/openpnm.utils.PrintableList.insert.rst", "modules/generated/openpnm.utils.PrintableList.pop.rst", "modules/generated/openpnm.utils.PrintableList.remove.rst", "modules/generated/openpnm.utils.PrintableList.reverse.rst", "modules/generated/openpnm.utils.PrintableList.sort.rst", "modules/generated/openpnm.utils.Project.rst", "modules/generated/openpnm.utils.Project.append.rst", "modules/generated/openpnm.utils.Project.copy.rst", "modules/generated/openpnm.utils.SettingsAttr.rst", "modules/generated/openpnm.utils.SimpleList.rst", "modules/generated/openpnm.utils.SimpleList.append.rst", "modules/generated/openpnm.utils.TypedList.rst", "modules/generated/openpnm.utils.TypedList.append.rst", "modules/generated/openpnm.utils.TypedList.clear.rst", "modules/generated/openpnm.utils.TypedList.copy.rst", "modules/generated/openpnm.utils.TypedList.count.rst", "modules/generated/openpnm.utils.TypedList.extend.rst", "modules/generated/openpnm.utils.TypedList.index.rst", "modules/generated/openpnm.utils.TypedList.insert.rst", "modules/generated/openpnm.utils.TypedList.pop.rst", "modules/generated/openpnm.utils.TypedList.remove.rst", "modules/generated/openpnm.utils.TypedList.reverse.rst", "modules/generated/openpnm.utils.TypedList.sort.rst", "modules/generated/openpnm.utils.TypedMixin.rst", "modules/generated/openpnm.utils.TypedSet.rst", "modules/generated/openpnm.utils.TypedSet.add.rst", "modules/generated/openpnm.utils.TypedSet.clear.rst", "modules/generated/openpnm.utils.TypedSet.copy.rst", "modules/generated/openpnm.utils.TypedSet.difference.rst", "modules/generated/openpnm.utils.TypedSet.difference_update.rst", "modules/generated/openpnm.utils.TypedSet.discard.rst", "modules/generated/openpnm.utils.TypedSet.intersection.rst", "modules/generated/openpnm.utils.TypedSet.intersection_update.rst", "modules/generated/openpnm.utils.TypedSet.isdisjoint.rst", "modules/generated/openpnm.utils.TypedSet.issubset.rst", "modules/generated/openpnm.utils.TypedSet.issuperset.rst", "modules/generated/openpnm.utils.TypedSet.pop.rst", "modules/generated/openpnm.utils.TypedSet.remove.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update.rst", "modules/generated/openpnm.utils.TypedSet.union.rst", "modules/generated/openpnm.utils.TypedSet.update.rst", "modules/generated/openpnm.utils.Workspace.rst", "modules/generated/openpnm.utils.Workspace.clear.rst", "modules/generated/openpnm.utils.Workspace.close_project.rst", "modules/generated/openpnm.utils.Workspace.copy.rst", "modules/generated/openpnm.utils.Workspace.copy_project.rst", "modules/generated/openpnm.utils.Workspace.fromkeys.rst", "modules/generated/openpnm.utils.Workspace.get.rst", "modules/generated/openpnm.utils.Workspace.items.rst", "modules/generated/openpnm.utils.Workspace.keys.rst", "modules/generated/openpnm.utils.Workspace.load_project.rst", "modules/generated/openpnm.utils.Workspace.load_workspace.rst", "modules/generated/openpnm.utils.Workspace.new_project.rst", "modules/generated/openpnm.utils.Workspace.pop.rst", "modules/generated/openpnm.utils.Workspace.popitem.rst", "modules/generated/openpnm.utils.Workspace.save_project.rst", "modules/generated/openpnm.utils.Workspace.save_workspace.rst", "modules/generated/openpnm.utils.Workspace.setdefault.rst", "modules/generated/openpnm.utils.Workspace.update.rst", "modules/generated/openpnm.utils.Workspace.values.rst", "modules/generated/openpnm.utils.check_data_health.rst", "modules/generated/openpnm.utils.check_network_health.rst", "modules/generated/openpnm.utils.dict_to_struct.rst", "modules/generated/openpnm.utils.flat_list.rst", "modules/generated/openpnm.utils.get_mixture_model_args.rst", "modules/generated/openpnm.utils.get_printable_labels.rst", "modules/generated/openpnm.utils.get_printable_props.rst", "modules/generated/openpnm.utils.ignore_warnings.rst", "modules/generated/openpnm.utils.is_symmetric.rst", "modules/generated/openpnm.utils.is_transient.rst", "modules/generated/openpnm.utils.is_valid_propname.rst", "modules/generated/openpnm.utils.methods_to_table.rst", "modules/generated/openpnm.utils.models_to_table.rst", "modules/generated/openpnm.utils.sanitize_dict.rst", "modules/generated/openpnm.utils.struct_to_dict.rst", "modules/generated/openpnm.visualization.rst", "modules/generated/openpnm.visualization.draw_conduit.rst", "modules/generated/openpnm.visualization.generate_voxel_image.rst", "modules/generated/openpnm.visualization.plot_connections.rst", "modules/generated/openpnm.visualization.plot_coordinates.rst", "modules/generated/openpnm.visualization.plot_networkx.rst", "modules/generated/openpnm.visualization.plot_notebook.rst", "modules/generated/openpnm.visualization.plot_tutorial.rst", "modules/generated/openpnm.visualization.plot_vispy.rst", "modules/generated/openpnm.visualization.set_mpl_style.rst", "modules/index.rst"], "titles": ["Applications", "Examples", "Reference", "10 Steps to Learn OpenPNM", "Predicting absolute permeability", "Adjusting Pore Size Distributions", "Predicting dispersion coefficient", "Finding Effective Diffusivity and Tortuosity of a Network", "Predicting Formation Factor", "Calibrating a Network Using Mercury Intrusion Data", "Predicting Porosity", "Obtaining Relative Diffusivity Curves", "Predicting relative permeability", "Contibuted Examples", "Getting Started", "Pore-Scale Models", "Settings Attribute Machinery", "The Workspace and Projects", "Managing Clustered Networks", "Available Matrix Solvers", "Steady State Transport", "Explanation of Units", "Reactive Transport", "Size Factors and Transport Conductance", "Transient Transport", "Numerical Python Primer", "Generating Networks and Quick Visualization", "Storage of Network Data and Topology", "Network Representation, Queries, and Manipulation", "Assigning Geometric Properties", "Using Labels and Defining Domains", "Creating Phases", "Simulating Single Phase Transport", "Simulating Invasion", "Visualization options", "Pore Network Modeling Framework in Python", "Installation", "algorithms", "AdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Algorithm", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "set_BC", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Drainage", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FourierConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "InvasionPercolation", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "OhmicConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "ReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StokesFlow", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientAdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientFickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Transport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "contrib", "MultiPhase", "add_model", "add_model_collection", "add_phases", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_binary_partition_coef", "set_label", "set_occupancy", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientMultiPhysics", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "run", "set_BC", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "multiphase_diffusion", "core", "Base2", "clear", "copy", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "pop", "popitem", "props", "setdefault", "to_indices", "to_mask", "update", "values", "Domain", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "LabelMixin", "filter_by_label", "labels", "num_pores", "num_throats", "pores", "set_label", "throats", "ModelWrapper", "__call__", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsDict", "clear", "copy", "dependency_graph", "dependency_list", "dependency_map", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsMixin2", "add_model", "add_model_collection", "regenerate_models", "run_model", "ParserMixin", "integrators", "Integrator", "ScipyRK45", "solve", "io", "network_from_csv", "network_from_jsongraph", "network_from_marock", "network_from_networkx", "network_from_pergeos", "network_from_porespy", "network_from_statoil", "network_to_comsol", "network_to_csv", "network_to_jsongraph", "network_to_networkx", "network_to_pandas", "network_to_pergeos", "network_to_salome", "network_to_stl", "print_hdf5", "project_to_csv", "project_to_dict", "project_to_hdf5", "project_to_pandas", "project_to_paraview", "project_to_vtk", "project_to_xdmf", "models", "collections", "geometry", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "network", "phase", "air", "gas", "liquid", "mercury", "water", "physics", "basic", "standard", "geometry", "conduit_lengths", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "diffusive_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "hydraulic_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "pore_cross_sectional_area", "circle", "cone", "cube", "sphere", "square", "pore_seed", "random", "spatially_correlated", "pore_size", "equivalent_diameter", "from_neighbor_throats", "generic_distribution", "largest_sphere", "normal", "random", "weibull", "pore_surface_area", "circle", "cube", "sphere", "square", "pore_volume", "circle", "cube", "effective", "sphere", "square", "throat_capillary_shape_factor", "jenkins_rao", "mason_morrow", "throat_centroid", "pore_coords", "throat_cross_sectional_area", "cuboid", "cylinder", "rectangle", "throat_endpoints", "spheres_and_cylinders", "throat_length", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "throat_perimeter", "cuboid", "cylinder", "rectangle", "throat_seed", "from_neighbor_pores", "random", "throat_size", "equivalent_diameter", "from_neighbor_pores", "generic_distribution", "normal", "random", "weibull", "throat_surface_area", "cuboid", "cylinder", "extrusion", "rectangle", "throat_vector", "pore_to_pore", "throat_volume", "cuboid", "cylinder", "extrusion", "lens", "pendular_ring", "rectangle", "misc", "blank", "clip", "constant", "difference", "fraction", "from_neighbor_pores", "from_neighbor_throats", "generic_distribution", "generic_function", "invert", "linear", "match_histogram", "normal", "normalize", "polynomial", "product", "random", "scaled", "summation", "weibull", "network", "bidirectional_throats", "cluster_number", "cluster_size", "coordination_number", "count_coincident_pores", "distance_to_furthest_neighbor", "distance_to_nearest_neighbor", "distance_to_nearest_pore", "duplicate_throats", "find_coincident_pores", "gabriel_edges", "headless_throats", "isolated_pores", "looped_throats", "pore_to_pore_distance", "reversed_throats", "phase", "chemicals_wrapper", "critical_props", "density", "ideal_gas", "liquid_mixture_COSTALD", "liquid_pure_COSTALD", "mass_to_molar", "water_correlation", "diffusivity", "gas_mixture_ce", "gas_mixture_fesg", "liquid_mixture_tc", "heat_capacity", "gas_mixture_yweighted", "gas_pure_TRC", "liquid_mixture_xweighted", "liquid_pure_rp", "misc", "mix_and_match", "mole_to_mass_fraction", "mixtures", "from_component", "mixing_rule", "mole_summation", "mole_to_mass_fraction", "salinity", "partition_coefficient", "gaseous_species_in_water", "surface_tension", "liquid_mixture_wsd", "liquid_pure_bb", "water_correlation", "thermal_conductivity", "gas_mixture_whz", "gas_pure_gismr", "liquid_mixture_DIPPR9H", "liquid_pure_gismr", "liquid_pure_sr", "water_correlation", "vapor_pressure", "liquid_pure_antoine", "liquid_pure_lk", "water_correlation", "viscosity", "gas_mixture_hz", "gas_pure_gesmr", "gas_pure_st", "liquid_mixture_xweighted", "liquid_pure_ls", "water_correlation", "physics", "ad_dif_conductance", "ad_dif", "capillary_pressure", "purcell", "washburn", "diffusive_conductance", "generic_diffusive", "mixed_diffusion", "ordinary_diffusion", "taylor_aris_diffusion", "electrical_conductance", "generic_electrical", "series_resistors", "hydraulic_conductance", "generic_hydraulic", "hagen_poiseuille", "valvatne_blunt", "meniscus", "general_toroidal", "purcell", "sinusoidal", "multiphase", "conduit_conductance", "late_filling", "source_terms", "butler_volmer_conc", "butler_volmer_voltage", "exponential", "general_symbolic", "linear", "logarithm", "natural_exponential", "natural_logarithm", "power_law", "standard_kinetics", "thermal_conductance", "generic_thermal", "series_resistors", "network", "BodyCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Cubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "CubicTemplate", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Delaunay", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "DelaunayVoronoiDual", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "find_pore_hulls", "find_throat_facets", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Demo", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FaceCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Network", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Voronoi", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "phase", "Air", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "BinaryGas", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "GasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "LiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Mercury", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Mixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Phase", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Species", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGas", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "StandardLiquid", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardLiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Water", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "solvers", "BaseSolver", "solve", "DirectSolver", "solve", "IterativeSolver", "solve", "PETScLinearSolver", "solve", "PardisoSpsolve", "solve", "PyamgRugeStubenSolver", "solve", "ScipyCG", "solve", "ScipySpsolve", "solve", "topotools", "add_boundary_pores", "add_reservoir_pore", "bond_percolation", "clone_pores", "connect_pores", "conns_to_am", "dimensionality", "drop_sites", "extend", "filter_pores_by_z", "find_clusters", "find_connected_sites", "find_connecting_bonds", "find_interface_throats", "find_isolated_clusters", "find_neighbor_bonds", "find_neighbor_sites", "find_path", "find_surface_pores", "generate_base_points", "get_domain_area", "get_domain_length", "get_shape", "get_spacing", "hull_centroid", "is_fully_connected", "iscoplanar", "isoutside", "ispercolating", "issymmetric", "istriangular", "istril", "istriu", "label_faces", "merge_networks", "merge_pores", "reduce_coordination", "reflect_base_points", "rotate_coords", "shear_coords", "site_percolation", "stitch", "template_cylinder_annulus", "template_sphere_shell", "tri_to_am", "trim", "trim_disconnected_clusters", "vor_to_am", "utils", "Docorator", "__call__", "dedent", "dedents", "delete_kwargs", "delete_kwargs_s", "delete_params", "delete_params_s", "delete_types", "delete_types_s", "get_docstring", "get_extended_summary", "get_extended_summaryf", "get_full_description", "get_full_descriptionf", "get_sections", "get_sectionsf", "get_summary", "get_summaryf", "keep_params", "keep_params_s", "keep_types", "keep_types_s", "save_docstring", "with_indent", "with_indents", "HealthDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "NestedDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "to_dict", "unravel", "update", "values", "PrintableDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "PrintableList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "Project", "append", "copy", "SettingsAttr", "SimpleList", "append", "TypedList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "TypedMixin", "TypedSet", "add", "clear", "copy", "difference", "difference_update", "discard", "intersection", "intersection_update", "isdisjoint", "issubset", "issuperset", "pop", "remove", "symmetric_difference", "symmetric_difference_update", "union", "update", "Workspace", "clear", "close_project", "copy", "copy_project", "fromkeys", "get", "items", "keys", "load_project", "load_workspace", "new_project", "pop", "popitem", "save_project", "save_workspace", "setdefault", "update", "values", "check_data_health", "check_network_health", "dict_to_struct", "flat_list", "get_mixture_model_args", "get_printable_labels", "get_printable_props", "ignore_warnings", "is_symmetric", "is_transient", "is_valid_propname", "methods_to_table", "models_to_table", "sanitize_dict", "struct_to_dict", "visualization", "draw_conduit", "generate_voxel_image", "plot_connections", "plot_coordinates", "plot_networkx", "plot_notebook", "plot_tutorial", "plot_vispy", "set_mpl_style", "Module Reference"], "terms": {"predict": [0, 1, 23, 31, 887, 1874], "absolut": [0, 1, 2, 12, 29, 614, 1847, 1852], "permeabl": [0, 1, 9, 11, 31], "adjust": [0, 1, 9, 28, 29, 34, 60, 90, 99, 120, 152, 185, 197, 218, 250, 283, 316, 349, 383, 416, 449, 510, 889, 893, 1678, 1716, 1881], "pore": [0, 1, 2, 4, 7, 8, 11, 12, 16, 18, 20, 21, 22, 25, 26, 31, 33, 34, 38, 39, 44, 48, 50, 51, 52, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 76, 80, 82, 83, 84, 89, 90, 91, 93, 94, 95, 98, 99, 100, 103, 107, 109, 110, 111, 117, 120, 121, 122, 123, 125, 126, 127, 130, 131, 136, 140, 142, 143, 144, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 169, 173, 175, 176, 177, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 201, 205, 207, 208, 209, 215, 218, 219, 220, 221, 223, 224, 225, 228, 229, 234, 238, 240, 241, 242, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 261, 262, 267, 271, 273, 274, 275, 280, 281, 283, 284, 285, 286, 287, 289, 290, 291, 294, 295, 300, 304, 306, 307, 308, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 327, 328, 333, 337, 339, 340, 341, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 361, 362, 367, 371, 373, 374, 375, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 400, 404, 406, 407, 408, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 433, 437, 439, 440, 441, 446, 447, 449, 450, 451, 452, 454, 455, 456, 460, 461, 464, 466, 470, 472, 473, 474, 479, 481, 483, 484, 486, 487, 488, 491, 492, 495, 499, 501, 502, 503, 508, 510, 511, 513, 514, 515, 518, 519, 520, 521, 526, 528, 531, 533, 534, 537, 538, 540, 542, 546, 548, 549, 550, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 571, 572, 601, 602, 604, 605, 614, 615, 619, 622, 625, 626, 628, 629, 631, 634, 638, 639, 640, 641, 642, 643, 644, 647, 650, 651, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 708, 710, 711, 712, 713, 714, 716, 718, 719, 720, 721, 723, 724, 725, 726, 727, 729, 731, 732, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 758, 759, 762, 763, 772, 773, 775, 776, 777, 778, 779, 780, 781, 787, 788, 789, 790, 793, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 843, 844, 845, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 896, 897, 899, 907, 908, 910, 911, 912, 914, 916, 917, 918, 919, 920, 921, 922, 923, 928, 929, 931, 932, 933, 934, 939, 940, 941, 942, 944, 945, 946, 949, 950, 951, 953, 955, 956, 957, 958, 959, 960, 961, 962, 967, 968, 970, 971, 972, 973, 978, 979, 980, 981, 983, 984, 985, 988, 989, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1005, 1006, 1008, 1009, 1010, 1011, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1026, 1027, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1043, 1044, 1046, 1047, 1048, 1049, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1064, 1065, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1083, 1084, 1086, 1087, 1088, 1089, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1104, 1105, 1106, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1123, 1125, 1126, 1127, 1128, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1143, 1144, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1161, 1162, 1164, 1165, 1166, 1167, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1182, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1199, 1200, 1202, 1203, 1204, 1205, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1220, 1221, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1237, 1238, 1240, 1241, 1242, 1243, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1259, 1260, 1262, 1264, 1268, 1270, 1271, 1272, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1287, 1288, 1289, 1291, 1292, 1294, 1297, 1299, 1300, 1302, 1303, 1304, 1309, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1321, 1322, 1323, 1325, 1326, 1328, 1331, 1333, 1334, 1336, 1337, 1338, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1354, 1355, 1356, 1357, 1359, 1360, 1362, 1365, 1367, 1368, 1370, 1371, 1372, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1388, 1389, 1390, 1392, 1394, 1398, 1400, 1401, 1402, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1417, 1418, 1419, 1421, 1422, 1424, 1427, 1429, 1430, 1432, 1433, 1434, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1450, 1451, 1453, 1455, 1459, 1461, 1462, 1463, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1478, 1479, 1481, 1483, 1487, 1489, 1490, 1491, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1506, 1507, 1509, 1511, 1515, 1517, 1518, 1519, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1534, 1535, 1536, 1538, 1539, 1541, 1544, 1546, 1547, 1549, 1550, 1551, 1556, 1557, 1558, 1559, 1560, 1562, 1563, 1564, 1567, 1568, 1569, 1571, 1573, 1577, 1579, 1580, 1581, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1596, 1597, 1598, 1600, 1601, 1603, 1606, 1608, 1609, 1611, 1612, 1613, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1629, 1630, 1631, 1633, 1635, 1639, 1641, 1642, 1643, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1676, 1677, 1679, 1680, 1682, 1684, 1685, 1686, 1690, 1694, 1696, 1697, 1701, 1702, 1709, 1711, 1712, 1715, 1717, 1721, 1857, 1858, 1861, 1862, 1863, 1864, 1867, 1874, 1875, 1876, 1877, 1878, 1879, 1882], "size": [0, 1, 2, 4, 8, 10, 15, 18, 26, 30, 32, 33, 34, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 352, 354, 385, 387, 418, 420, 451, 452, 518, 591, 626, 675, 678, 680, 681, 682, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 707, 712, 715, 763, 765, 789, 793, 798, 805, 877, 878, 879, 880, 882, 883, 885, 886, 907, 908, 949, 1026, 1064, 1220, 1695, 1703, 1713, 1859, 1876, 1877, 1878, 1879], "distribut": [0, 1, 6, 15, 30, 34, 36, 707, 708, 712, 714, 715, 716, 763, 764, 765, 766, 789, 794, 798, 801, 949, 1695, 1712], "dispers": [0, 1], "coeffici": [0, 1, 2, 7, 8, 9, 22, 31, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 482, 670, 671, 672, 673, 674, 676, 677, 679, 682, 684, 796, 829, 830, 831, 834, 860, 898, 900, 901, 902, 903, 904, 1287, 1666], "find": [0, 1, 4, 6, 8, 10, 11, 12, 15, 17, 18, 20, 22, 25, 29, 30, 31, 33, 34, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 461, 491, 538, 573, 602, 614, 709, 713, 714, 716, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 764, 766, 794, 801, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 845, 889, 912, 916, 917, 919, 921, 922, 923, 933, 951, 955, 956, 958, 960, 961, 962, 972, 989, 993, 994, 996, 998, 999, 1000, 1010, 1027, 1031, 1032, 1034, 1036, 1037, 1038, 1048, 1065, 1069, 1070, 1072, 1074, 1075, 1076, 1077, 1078, 1088, 1106, 1110, 1111, 1113, 1115, 1116, 1117, 1127, 1145, 1149, 1150, 1152, 1154, 1155, 1156, 1166, 1183, 1187, 1188, 1190, 1192, 1193, 1194, 1204, 1221, 1225, 1226, 1228, 1230, 1231, 1232, 1242, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1478, 1479, 1507, 1536, 1569, 1598, 1631, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1709, 1711, 1712, 1858, 1874, 1875, 1876], "effect": [0, 1, 8, 9, 12, 27, 28, 29, 30, 130, 228, 461, 538, 602, 682, 697, 716, 729, 766, 801, 870, 874, 880, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1821], "diffus": [0, 1, 4, 20, 21, 22, 27, 34, 38, 130, 327, 361, 518, 647, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 708, 829, 830, 831, 872, 874, 877, 878, 879, 880, 882, 883, 891, 907, 908, 1287], "tortuos": [0, 1, 9, 130], "network": [0, 1, 2, 3, 15, 16, 20, 21, 22, 25, 29, 30, 31, 32, 33, 34, 38, 39, 72, 73, 98, 100, 123, 130, 131, 163, 164, 196, 198, 228, 229, 261, 262, 294, 295, 327, 328, 361, 362, 394, 395, 427, 428, 460, 464, 491, 492, 519, 520, 521, 537, 540, 601, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 707, 708, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 727, 729, 730, 732, 734, 735, 736, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 758, 759, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 780, 789, 790, 793, 794, 798, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 872, 874, 877, 878, 879, 880, 882, 883, 885, 886, 887, 890, 899, 907, 908, 910, 911, 914, 916, 917, 919, 920, 921, 922, 923, 933, 949, 950, 953, 955, 956, 958, 959, 960, 961, 962, 972, 988, 991, 993, 994, 996, 997, 998, 999, 1000, 1010, 1026, 1029, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1048, 1064, 1067, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1088, 1104, 1105, 1108, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1127, 1143, 1144, 1147, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1166, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1223, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1242, 1259, 1262, 1287, 1292, 1321, 1326, 1355, 1360, 1389, 1392, 1417, 1422, 1450, 1453, 1478, 1481, 1506, 1509, 1534, 1539, 1568, 1571, 1596, 1601, 1630, 1633, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1701, 1703, 1704, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1801, 1849, 1858, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1882], "format": [0, 1, 6, 7, 9, 20, 26, 27, 30, 32, 34, 462, 539, 591, 603, 611, 613, 614, 616, 618, 626, 629, 633, 667, 682, 697, 782, 910, 913, 916, 917, 926, 928, 949, 952, 955, 956, 965, 967, 988, 990, 993, 994, 1003, 1005, 1026, 1028, 1031, 1032, 1041, 1043, 1064, 1066, 1069, 1070, 1081, 1083, 1104, 1107, 1110, 1111, 1120, 1122, 1143, 1146, 1149, 1150, 1159, 1161, 1182, 1184, 1187, 1188, 1197, 1199, 1220, 1222, 1225, 1226, 1235, 1237, 1261, 1290, 1324, 1358, 1391, 1420, 1452, 1480, 1508, 1537, 1570, 1599, 1632, 1677, 1681, 1683, 1688, 1720, 1723, 1862, 1863, 1875, 1876], "factor": [0, 1, 2, 4, 7, 9, 29, 32, 34, 518, 638, 639, 640, 641, 642, 643, 644, 675, 678, 680, 681, 682, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 730, 799, 825, 836, 854, 856, 861, 868, 872, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 893, 896, 897, 907, 908, 1666, 1715, 1877], "calibr": [0, 1, 33], "us": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 20, 23, 25, 26, 27, 32, 34, 35, 36, 38, 51, 52, 53, 56, 60, 72, 83, 84, 85, 88, 90, 98, 110, 111, 112, 116, 120, 130, 143, 144, 145, 148, 152, 163, 176, 177, 178, 181, 185, 196, 197, 208, 209, 210, 214, 218, 228, 241, 242, 243, 246, 250, 261, 274, 275, 276, 279, 283, 294, 307, 308, 309, 312, 316, 327, 340, 341, 342, 345, 348, 349, 361, 374, 375, 376, 379, 382, 383, 394, 407, 408, 409, 412, 415, 416, 427, 440, 441, 442, 445, 449, 460, 461, 473, 474, 475, 478, 480, 491, 502, 503, 504, 507, 509, 510, 519, 520, 537, 538, 549, 550, 551, 554, 567, 568, 569, 570, 573, 590, 602, 610, 614, 615, 616, 617, 618, 625, 626, 633, 657, 662, 665, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 691, 694, 698, 699, 701, 705, 707, 708, 711, 714, 715, 716, 725, 759, 762, 764, 765, 766, 776, 777, 778, 781, 782, 784, 787, 788, 790, 792, 794, 796, 797, 798, 799, 801, 813, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 842, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 887, 889, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 910, 912, 916, 917, 919, 920, 922, 923, 926, 928, 932, 933, 934, 935, 938, 949, 950, 951, 955, 956, 958, 959, 961, 962, 965, 967, 971, 972, 973, 974, 977, 988, 989, 993, 994, 996, 997, 999, 1000, 1003, 1005, 1009, 1010, 1011, 1012, 1015, 1026, 1027, 1031, 1032, 1034, 1035, 1037, 1038, 1041, 1043, 1047, 1048, 1049, 1050, 1053, 1064, 1065, 1069, 1070, 1072, 1073, 1075, 1076, 1081, 1083, 1087, 1088, 1089, 1090, 1093, 1104, 1105, 1106, 1110, 1111, 1113, 1114, 1116, 1117, 1120, 1122, 1126, 1127, 1128, 1129, 1132, 1143, 1145, 1149, 1150, 1152, 1153, 1155, 1156, 1159, 1161, 1165, 1166, 1167, 1168, 1171, 1182, 1183, 1187, 1188, 1190, 1191, 1193, 1194, 1197, 1199, 1203, 1204, 1205, 1206, 1209, 1220, 1221, 1225, 1226, 1228, 1229, 1231, 1232, 1235, 1237, 1241, 1242, 1243, 1244, 1247, 1259, 1260, 1271, 1272, 1273, 1276, 1287, 1289, 1299, 1303, 1304, 1305, 1308, 1321, 1323, 1333, 1337, 1338, 1339, 1342, 1355, 1357, 1367, 1371, 1372, 1373, 1376, 1389, 1390, 1401, 1402, 1403, 1406, 1417, 1419, 1429, 1433, 1434, 1435, 1438, 1450, 1451, 1462, 1463, 1464, 1467, 1478, 1479, 1490, 1491, 1492, 1495, 1506, 1507, 1518, 1519, 1520, 1523, 1534, 1536, 1546, 1550, 1551, 1552, 1555, 1568, 1569, 1580, 1581, 1582, 1585, 1596, 1598, 1608, 1612, 1613, 1614, 1617, 1630, 1631, 1642, 1643, 1644, 1647, 1665, 1666, 1667, 1671, 1673, 1676, 1680, 1683, 1687, 1690, 1691, 1692, 1693, 1694, 1695, 1709, 1711, 1712, 1717, 1718, 1719, 1728, 1729, 1730, 1732, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1801, 1852, 1853, 1861, 1862, 1863, 1864, 1865, 1871, 1875, 1876, 1878, 1879, 1880], "mercuri": [0, 1, 14, 31, 33, 729, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416], "intrus": [0, 1, 14, 33], "data": [0, 1, 3, 6, 7, 14, 15, 16, 20, 25, 28, 31, 32, 33, 34, 38, 39, 47, 48, 57, 72, 73, 79, 80, 89, 98, 99, 100, 106, 107, 117, 130, 131, 139, 140, 149, 163, 164, 172, 173, 182, 196, 198, 204, 205, 211, 215, 228, 229, 237, 238, 247, 261, 262, 270, 271, 280, 294, 295, 303, 304, 313, 327, 328, 336, 337, 346, 361, 362, 370, 371, 380, 394, 395, 403, 404, 413, 427, 428, 436, 437, 446, 460, 461, 464, 469, 470, 479, 491, 492, 498, 499, 508, 519, 520, 521, 525, 526, 531, 537, 538, 540, 545, 546, 555, 590, 602, 613, 614, 615, 618, 619, 623, 625, 626, 628, 629, 630, 631, 632, 633, 634, 790, 795, 841, 847, 889, 896, 897, 910, 912, 914, 916, 917, 926, 927, 928, 929, 939, 949, 951, 953, 955, 956, 965, 966, 967, 968, 978, 988, 989, 991, 993, 994, 1003, 1004, 1005, 1006, 1016, 1026, 1027, 1029, 1031, 1032, 1041, 1042, 1043, 1044, 1054, 1064, 1065, 1067, 1069, 1070, 1081, 1082, 1083, 1084, 1094, 1104, 1106, 1108, 1110, 1111, 1120, 1121, 1122, 1123, 1133, 1143, 1145, 1147, 1149, 1150, 1159, 1160, 1161, 1162, 1172, 1182, 1183, 1185, 1187, 1188, 1197, 1198, 1199, 1200, 1210, 1220, 1221, 1223, 1225, 1226, 1235, 1236, 1237, 1238, 1248, 1259, 1260, 1262, 1267, 1268, 1277, 1287, 1289, 1292, 1298, 1300, 1309, 1321, 1323, 1326, 1332, 1334, 1343, 1355, 1357, 1360, 1366, 1368, 1377, 1389, 1390, 1392, 1397, 1398, 1407, 1417, 1419, 1422, 1428, 1430, 1439, 1450, 1451, 1453, 1458, 1459, 1468, 1478, 1479, 1481, 1486, 1487, 1496, 1506, 1507, 1509, 1514, 1515, 1524, 1534, 1536, 1539, 1545, 1547, 1556, 1568, 1569, 1571, 1576, 1577, 1586, 1596, 1598, 1601, 1607, 1609, 1618, 1630, 1631, 1633, 1638, 1639, 1648, 1803, 1804, 1805, 1857, 1875], "poros": [0, 1, 7, 9, 26, 130, 1874], "obtain": [0, 1, 9, 12, 20, 23, 26, 27, 33, 712, 763, 789, 813, 922, 923, 926, 928, 961, 962, 965, 967, 999, 1000, 1003, 1005, 1037, 1038, 1041, 1043, 1075, 1076, 1081, 1083, 1116, 1117, 1120, 1122, 1155, 1156, 1159, 1161, 1193, 1194, 1197, 1199, 1231, 1232, 1235, 1237, 1299, 1333, 1367, 1429, 1546, 1608, 1691, 1692, 1712, 1838], "rel": [0, 1, 9, 14, 614, 1696, 1697, 1717, 1847, 1852, 1865, 1878], "curv": [0, 1, 5, 9, 12, 14, 33, 1695], "The": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 29, 32, 33, 34, 38, 40, 44, 47, 48, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 74, 76, 79, 80, 83, 84, 85, 88, 89, 90, 91, 93, 95, 101, 103, 106, 107, 110, 111, 112, 116, 117, 119, 120, 122, 123, 125, 127, 130, 132, 136, 139, 140, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 163, 165, 169, 172, 173, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 196, 199, 201, 204, 205, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 225, 228, 230, 234, 237, 238, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 261, 263, 267, 270, 271, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 294, 296, 300, 303, 304, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 327, 329, 333, 336, 337, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 361, 363, 367, 370, 371, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 394, 396, 400, 403, 404, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 427, 429, 433, 436, 437, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 461, 462, 466, 469, 470, 473, 474, 475, 478, 479, 480, 481, 483, 484, 486, 488, 493, 495, 498, 499, 502, 503, 504, 507, 508, 509, 510, 511, 513, 515, 525, 526, 531, 534, 537, 538, 539, 542, 545, 546, 549, 550, 551, 554, 555, 557, 558, 560, 562, 566, 567, 568, 569, 570, 571, 572, 586, 602, 603, 605, 607, 613, 614, 615, 617, 618, 619, 622, 625, 626, 627, 628, 629, 630, 632, 633, 634, 667, 682, 697, 707, 708, 710, 711, 712, 713, 714, 715, 716, 725, 729, 738, 759, 761, 762, 763, 764, 765, 766, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 807, 812, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 889, 890, 891, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 911, 912, 913, 916, 917, 918, 920, 921, 922, 923, 926, 927, 928, 929, 932, 933, 934, 935, 938, 939, 941, 942, 944, 946, 949, 950, 951, 952, 955, 956, 957, 959, 960, 961, 962, 965, 966, 967, 968, 971, 972, 973, 974, 977, 978, 980, 981, 983, 985, 988, 989, 990, 993, 994, 995, 997, 998, 999, 1000, 1003, 1004, 1005, 1006, 1009, 1010, 1011, 1012, 1015, 1016, 1018, 1019, 1021, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1041, 1042, 1043, 1044, 1047, 1048, 1049, 1050, 1053, 1054, 1056, 1057, 1059, 1061, 1064, 1065, 1066, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1093, 1094, 1096, 1097, 1099, 1101, 1105, 1106, 1107, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1132, 1133, 1135, 1136, 1138, 1140, 1143, 1144, 1145, 1146, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1168, 1171, 1172, 1174, 1175, 1177, 1179, 1182, 1183, 1184, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1197, 1198, 1199, 1200, 1203, 1204, 1205, 1206, 1209, 1210, 1212, 1213, 1215, 1217, 1220, 1221, 1222, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1247, 1248, 1250, 1251, 1253, 1255, 1260, 1261, 1264, 1267, 1268, 1271, 1272, 1273, 1276, 1277, 1279, 1280, 1282, 1284, 1287, 1288, 1289, 1290, 1294, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1308, 1309, 1311, 1312, 1313, 1315, 1317, 1320, 1322, 1323, 1324, 1328, 1331, 1332, 1333, 1334, 1337, 1338, 1339, 1342, 1343, 1345, 1346, 1347, 1349, 1351, 1354, 1356, 1357, 1358, 1362, 1365, 1366, 1367, 1368, 1371, 1372, 1373, 1376, 1377, 1379, 1380, 1381, 1383, 1385, 1388, 1390, 1391, 1394, 1397, 1398, 1401, 1402, 1403, 1406, 1407, 1409, 1410, 1412, 1414, 1418, 1419, 1420, 1424, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1438, 1439, 1441, 1442, 1443, 1445, 1447, 1451, 1452, 1455, 1458, 1459, 1462, 1463, 1464, 1467, 1468, 1470, 1471, 1473, 1475, 1478, 1479, 1480, 1483, 1486, 1487, 1490, 1491, 1492, 1495, 1496, 1498, 1499, 1501, 1503, 1507, 1508, 1511, 1514, 1515, 1518, 1519, 1520, 1523, 1524, 1526, 1527, 1529, 1531, 1534, 1535, 1536, 1537, 1541, 1544, 1545, 1546, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1559, 1560, 1562, 1564, 1567, 1569, 1570, 1573, 1576, 1577, 1580, 1581, 1582, 1585, 1586, 1588, 1589, 1591, 1593, 1596, 1597, 1598, 1599, 1603, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1617, 1618, 1620, 1621, 1622, 1624, 1626, 1629, 1631, 1632, 1635, 1638, 1639, 1642, 1643, 1644, 1647, 1648, 1650, 1651, 1653, 1655, 1658, 1666, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1727, 1729, 1731, 1733, 1736, 1738, 1742, 1744, 1746, 1749, 1800, 1801, 1803, 1804, 1818, 1838, 1840, 1842, 1847, 1848, 1849, 1852, 1853, 1858, 1859, 1862, 1863, 1871, 1874, 1875, 1876, 1878, 1879], "best": [1, 25, 26, 27, 29, 33, 36, 1026, 1064, 1220], "wai": [1, 6, 9, 11, 12, 18, 25, 26, 28, 29, 30, 31, 32, 33, 713, 720, 730, 820], "learn": [1, 23, 25, 29], "openpnm": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 72, 130, 261, 348, 382, 415, 427, 459, 460, 462, 482, 509, 520, 539, 603, 611, 613, 614, 615, 617, 618, 622, 625, 628, 629, 631, 632, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 707, 708, 710, 712, 713, 714, 715, 716, 718, 720, 723, 724, 725, 726, 727, 730, 732, 734, 735, 736, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 761, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 780, 785, 789, 790, 793, 794, 798, 801, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 913, 916, 917, 919, 920, 921, 922, 923, 926, 928, 933, 949, 952, 955, 956, 958, 959, 960, 961, 962, 965, 967, 972, 990, 993, 994, 996, 997, 998, 999, 1000, 1003, 1005, 1010, 1028, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1041, 1043, 1048, 1066, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1081, 1083, 1088, 1107, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1120, 1122, 1127, 1146, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1159, 1161, 1166, 1182, 1184, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1197, 1199, 1204, 1222, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1235, 1237, 1242, 1259, 1261, 1290, 1324, 1358, 1391, 1417, 1420, 1450, 1452, 1480, 1508, 1537, 1570, 1599, 1630, 1632, 1677, 1682, 1690, 1725, 1777, 1789, 1801, 1838, 1853, 1862, 1863, 1864, 1867, 1874, 1875, 1876, 1877, 1882], "like": [1, 5, 9, 15, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 49, 60, 81, 90, 108, 120, 141, 152, 174, 185, 206, 218, 239, 250, 272, 283, 305, 316, 338, 349, 372, 383, 405, 416, 438, 449, 471, 500, 510, 527, 547, 579, 580, 594, 595, 615, 820, 872, 910, 930, 949, 969, 1007, 1026, 1045, 1064, 1085, 1104, 1124, 1143, 1163, 1182, 1201, 1220, 1239, 1269, 1301, 1335, 1369, 1399, 1431, 1460, 1478, 1488, 1516, 1548, 1578, 1610, 1640, 1729, 1733, 1735, 1744, 1746, 1756, 1757, 1768, 1769, 1782, 1783, 1845, 1846], "anyth": [1, 25, 29, 31, 33, 60, 90, 120, 152, 185, 197, 218, 250, 283, 316, 349, 383, 416, 449, 510], "i": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 48, 51, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 76, 78, 80, 83, 87, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100, 103, 105, 107, 110, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 136, 138, 140, 143, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 164, 169, 171, 173, 176, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 203, 205, 208, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 229, 234, 236, 238, 241, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 261, 262, 267, 269, 271, 274, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 295, 300, 302, 304, 307, 311, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 328, 333, 335, 337, 340, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 362, 367, 369, 371, 374, 378, 379, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 394, 395, 400, 402, 404, 407, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 427, 428, 433, 435, 437, 440, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 464, 466, 468, 470, 473, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 492, 495, 497, 499, 502, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 519, 520, 521, 524, 526, 530, 531, 532, 533, 534, 535, 538, 540, 542, 544, 546, 549, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 566, 567, 570, 572, 573, 578, 581, 582, 583, 584, 586, 589, 590, 591, 593, 596, 597, 598, 599, 601, 602, 604, 605, 607, 610, 611, 613, 614, 615, 616, 618, 626, 627, 629, 630, 633, 634, 635, 636, 637, 645, 646, 648, 649, 652, 655, 656, 657, 658, 660, 661, 662, 663, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 691, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 722, 725, 728, 731, 733, 737, 739, 753, 757, 759, 760, 762, 763, 764, 765, 766, 767, 772, 773, 774, 777, 778, 779, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 914, 916, 917, 918, 919, 921, 922, 923, 925, 926, 928, 929, 932, 933, 937, 938, 939, 940, 941, 943, 944, 945, 946, 947, 949, 951, 953, 955, 956, 957, 958, 960, 961, 962, 964, 965, 967, 968, 971, 972, 976, 977, 978, 979, 980, 982, 983, 984, 985, 986, 988, 989, 991, 993, 994, 995, 996, 998, 999, 1000, 1002, 1003, 1005, 1006, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1047, 1048, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1083, 1084, 1087, 1088, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1122, 1123, 1126, 1127, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1143, 1145, 1147, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1161, 1162, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1183, 1185, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1196, 1197, 1199, 1200, 1203, 1204, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1218, 1220, 1221, 1223, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1234, 1235, 1237, 1238, 1241, 1242, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1262, 1264, 1266, 1268, 1271, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1292, 1294, 1296, 1299, 1300, 1303, 1307, 1308, 1309, 1310, 1312, 1314, 1315, 1316, 1317, 1318, 1320, 1322, 1323, 1326, 1328, 1330, 1333, 1334, 1337, 1341, 1342, 1343, 1344, 1346, 1348, 1349, 1350, 1351, 1352, 1354, 1356, 1357, 1360, 1362, 1364, 1367, 1368, 1371, 1375, 1376, 1377, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1388, 1390, 1392, 1394, 1396, 1398, 1401, 1405, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1422, 1424, 1426, 1429, 1430, 1433, 1437, 1438, 1439, 1440, 1442, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1453, 1455, 1457, 1459, 1462, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1481, 1483, 1485, 1487, 1490, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1507, 1509, 1511, 1513, 1515, 1518, 1522, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1539, 1541, 1543, 1546, 1547, 1550, 1554, 1555, 1556, 1557, 1559, 1561, 1562, 1563, 1564, 1565, 1567, 1569, 1571, 1573, 1575, 1577, 1580, 1584, 1585, 1586, 1587, 1588, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1601, 1603, 1605, 1608, 1609, 1612, 1616, 1617, 1618, 1619, 1621, 1623, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1633, 1635, 1637, 1639, 1642, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1658, 1665, 1666, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1711, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1729, 1736, 1738, 1742, 1751, 1755, 1758, 1759, 1760, 1761, 1767, 1770, 1771, 1772, 1775, 1777, 1781, 1784, 1785, 1786, 1787, 1795, 1797, 1798, 1800, 1801, 1803, 1804, 1813, 1815, 1816, 1818, 1821, 1824, 1826, 1827, 1832, 1833, 1834, 1836, 1838, 1844, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1858, 1861, 1862, 1863, 1865, 1867, 1870, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1882], "experi": [1, 9, 33], "In": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 70, 96, 128, 161, 194, 196, 226, 259, 292, 325, 359, 392, 425, 457, 489, 509, 516, 519, 535, 563, 584, 590, 599, 712, 763, 789, 947, 986, 1024, 1062, 1102, 1141, 1180, 1218, 1256, 1285, 1318, 1352, 1386, 1415, 1448, 1476, 1504, 1532, 1565, 1594, 1627, 1656, 1687, 1761, 1775, 1787, 1801, 1855], "thi": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 51, 56, 59, 60, 61, 67, 68, 70, 72, 83, 88, 90, 91, 93, 94, 96, 98, 99, 110, 116, 120, 122, 123, 125, 126, 128, 130, 143, 148, 151, 152, 153, 158, 159, 161, 163, 176, 181, 184, 185, 186, 191, 192, 194, 196, 197, 208, 214, 218, 220, 221, 223, 224, 226, 228, 241, 246, 249, 250, 251, 256, 257, 259, 261, 274, 279, 282, 283, 284, 289, 290, 292, 294, 307, 312, 315, 316, 317, 322, 323, 325, 327, 340, 345, 349, 350, 356, 357, 359, 361, 374, 379, 383, 384, 389, 390, 392, 394, 407, 412, 416, 417, 422, 423, 425, 427, 440, 445, 448, 449, 450, 454, 455, 457, 459, 460, 461, 473, 478, 480, 483, 484, 486, 487, 489, 491, 502, 507, 510, 511, 513, 514, 516, 518, 519, 520, 533, 535, 537, 538, 549, 554, 556, 558, 560, 561, 563, 565, 567, 570, 571, 572, 573, 584, 586, 590, 599, 601, 602, 604, 607, 611, 613, 614, 615, 618, 619, 625, 626, 629, 630, 631, 634, 635, 636, 637, 645, 646, 648, 649, 652, 655, 656, 657, 662, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 685, 691, 694, 698, 699, 700, 701, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 720, 722, 728, 731, 733, 737, 739, 753, 757, 759, 760, 762, 763, 764, 765, 766, 767, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 813, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 916, 917, 919, 921, 922, 923, 926, 928, 932, 933, 938, 940, 942, 944, 945, 947, 949, 950, 951, 955, 956, 958, 960, 961, 962, 965, 967, 971, 972, 977, 979, 981, 983, 984, 986, 988, 989, 993, 994, 996, 998, 999, 1000, 1003, 1005, 1009, 1010, 1015, 1017, 1019, 1021, 1022, 1024, 1026, 1027, 1031, 1032, 1034, 1036, 1037, 1038, 1041, 1043, 1047, 1048, 1053, 1055, 1057, 1059, 1060, 1062, 1064, 1065, 1069, 1070, 1072, 1074, 1075, 1076, 1077, 1081, 1083, 1087, 1088, 1093, 1095, 1097, 1099, 1100, 1102, 1104, 1105, 1106, 1110, 1111, 1113, 1115, 1116, 1117, 1120, 1122, 1126, 1127, 1132, 1134, 1136, 1138, 1139, 1141, 1143, 1144, 1145, 1149, 1150, 1152, 1154, 1155, 1156, 1159, 1161, 1165, 1166, 1171, 1173, 1175, 1177, 1178, 1180, 1182, 1183, 1187, 1188, 1190, 1192, 1193, 1194, 1197, 1199, 1203, 1204, 1209, 1211, 1213, 1215, 1216, 1218, 1220, 1221, 1225, 1226, 1228, 1230, 1231, 1232, 1235, 1237, 1241, 1242, 1247, 1249, 1251, 1253, 1254, 1256, 1258, 1259, 1260, 1271, 1276, 1278, 1280, 1282, 1283, 1285, 1287, 1288, 1289, 1291, 1299, 1303, 1308, 1310, 1311, 1313, 1315, 1316, 1318, 1320, 1321, 1322, 1323, 1325, 1333, 1337, 1342, 1344, 1345, 1347, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1359, 1367, 1371, 1376, 1378, 1379, 1381, 1383, 1384, 1386, 1388, 1389, 1390, 1401, 1406, 1408, 1410, 1412, 1413, 1415, 1417, 1418, 1419, 1421, 1429, 1433, 1438, 1440, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1462, 1467, 1469, 1471, 1473, 1474, 1476, 1478, 1479, 1490, 1495, 1497, 1499, 1501, 1502, 1504, 1506, 1507, 1518, 1523, 1525, 1527, 1529, 1530, 1532, 1534, 1535, 1536, 1538, 1546, 1550, 1555, 1557, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1580, 1585, 1587, 1589, 1591, 1592, 1594, 1596, 1597, 1598, 1600, 1608, 1612, 1617, 1619, 1620, 1622, 1624, 1625, 1627, 1629, 1630, 1631, 1642, 1647, 1649, 1651, 1653, 1654, 1656, 1658, 1666, 1675, 1676, 1677, 1678, 1682, 1683, 1687, 1688, 1690, 1691, 1692, 1694, 1695, 1704, 1709, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1731, 1733, 1735, 1736, 1738, 1740, 1742, 1744, 1746, 1751, 1761, 1775, 1787, 1801, 1804, 1821, 1822, 1824, 1825, 1830, 1831, 1838, 1840, 1847, 1852, 1853, 1855, 1858, 1861, 1862, 1863, 1870, 1872, 1875, 1876, 1878], "page": [1, 14, 36], "you": [1, 5, 7, 14, 15, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 507, 554, 570, 610, 938, 949, 977, 1015, 1053, 1093, 1132, 1171, 1209, 1247, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647, 1680, 1744, 1746, 1864, 1876], "can": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 51, 56, 60, 72, 83, 88, 90, 98, 110, 116, 118, 120, 130, 143, 148, 152, 163, 176, 181, 185, 196, 208, 214, 218, 228, 241, 246, 250, 261, 274, 279, 283, 294, 307, 312, 316, 327, 340, 345, 348, 349, 361, 374, 379, 382, 383, 394, 407, 412, 415, 416, 427, 440, 445, 449, 460, 473, 478, 480, 491, 502, 507, 509, 510, 520, 537, 549, 554, 567, 570, 590, 610, 614, 615, 617, 618, 629, 631, 632, 712, 713, 714, 716, 763, 764, 766, 789, 790, 793, 794, 796, 801, 813, 820, 831, 845, 872, 889, 896, 897, 910, 911, 920, 932, 938, 949, 950, 959, 971, 977, 988, 997, 1009, 1015, 1026, 1035, 1047, 1053, 1064, 1073, 1087, 1093, 1104, 1105, 1114, 1126, 1132, 1143, 1144, 1153, 1165, 1171, 1182, 1191, 1203, 1209, 1220, 1229, 1241, 1247, 1259, 1271, 1276, 1287, 1288, 1303, 1308, 1311, 1321, 1322, 1337, 1342, 1345, 1355, 1356, 1371, 1376, 1379, 1389, 1401, 1406, 1417, 1418, 1433, 1438, 1441, 1450, 1462, 1467, 1478, 1490, 1495, 1506, 1518, 1523, 1534, 1535, 1550, 1555, 1558, 1568, 1580, 1585, 1596, 1597, 1612, 1617, 1620, 1630, 1642, 1647, 1666, 1683, 1686, 1695, 1703, 1709, 1711, 1714, 1715, 1744, 1746, 1800, 1801, 1818, 1847, 1852, 1853, 1875, 1878], "lot": [1, 23, 29, 30, 33, 1864], "help": [1, 9, 17, 25, 26, 28, 29, 30, 586, 988, 1717], "get": [1, 5, 9, 13, 15, 17, 18, 22, 23, 25, 27, 28, 29, 30, 32, 36, 211, 610, 713, 823, 824, 825, 826, 827, 829, 830, 831, 834, 836, 845, 847, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 865, 866, 868, 869, 1297, 1299, 1320, 1321, 1331, 1333, 1354, 1355, 1365, 1367, 1388, 1427, 1429, 1544, 1546, 1567, 1606, 1608, 1629, 1735, 1736, 1738, 1742, 1862, 1863, 1864], "start": [1, 5, 9, 12, 15, 16, 22, 23, 25, 26, 28, 29, 31, 32, 33, 36, 219, 481, 557, 605, 707, 713, 715, 765, 798, 941, 980, 1018, 1056, 1096, 1135, 1174, 1212, 1250, 1279, 1312, 1346, 1380, 1409, 1442, 1470, 1498, 1526, 1559, 1588, 1621, 1650, 1703, 1795, 1813, 1867], "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 48, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 73, 76, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 99, 100, 103, 107, 109, 110, 111, 112, 115, 116, 117, 120, 121, 122, 123, 125, 131, 136, 140, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 164, 169, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 197, 198, 201, 205, 207, 208, 209, 210, 213, 214, 215, 218, 219, 220, 221, 223, 228, 229, 234, 238, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254, 256, 261, 262, 267, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 295, 300, 304, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 328, 333, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 362, 367, 371, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 395, 400, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 428, 433, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 459, 461, 462, 464, 466, 470, 472, 473, 474, 475, 477, 478, 479, 480, 483, 486, 492, 495, 499, 501, 502, 503, 504, 506, 507, 508, 510, 511, 513, 519, 521, 526, 528, 530, 531, 538, 539, 540, 542, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 560, 565, 566, 567, 568, 569, 570, 571, 572, 582, 586, 590, 597, 602, 603, 604, 614, 615, 618, 626, 629, 630, 631, 633, 634, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 682, 683, 684, 686, 687, 688, 689, 690, 691, 696, 697, 698, 699, 706, 707, 708, 710, 711, 713, 715, 718, 719, 720, 721, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 759, 761, 762, 765, 778, 779, 781, 785, 787, 788, 792, 796, 798, 807, 812, 813, 815, 816, 818, 820, 827, 831, 842, 845, 847, 851, 858, 860, 867, 869, 874, 889, 890, 893, 899, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 921, 922, 923, 926, 928, 929, 931, 932, 933, 934, 935, 937, 938, 939, 940, 942, 944, 949, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 962, 965, 967, 968, 970, 971, 972, 973, 974, 976, 977, 978, 979, 981, 983, 988, 989, 990, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1003, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1021, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1041, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1057, 1059, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1099, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1136, 1138, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1177, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1197, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1213, 1215, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1235, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1251, 1253, 1260, 1261, 1262, 1264, 1268, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1282, 1289, 1290, 1291, 1292, 1294, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1313, 1315, 1323, 1324, 1325, 1326, 1328, 1333, 1334, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1347, 1349, 1357, 1358, 1359, 1360, 1362, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1381, 1383, 1390, 1391, 1392, 1394, 1398, 1400, 1401, 1402, 1403, 1405, 1406, 1407, 1408, 1410, 1412, 1419, 1420, 1421, 1422, 1424, 1429, 1430, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1443, 1445, 1451, 1452, 1453, 1455, 1459, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1471, 1473, 1478, 1479, 1480, 1481, 1483, 1487, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1499, 1501, 1507, 1508, 1509, 1511, 1515, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1525, 1527, 1529, 1534, 1536, 1537, 1538, 1539, 1541, 1546, 1547, 1549, 1550, 1551, 1552, 1554, 1555, 1556, 1557, 1560, 1562, 1569, 1570, 1571, 1573, 1577, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1591, 1596, 1598, 1599, 1600, 1601, 1603, 1608, 1609, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1622, 1624, 1631, 1632, 1633, 1635, 1639, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1653, 1666, 1676, 1678, 1679, 1680, 1681, 1686, 1687, 1688, 1690, 1691, 1692, 1694, 1695, 1701, 1702, 1703, 1704, 1709, 1711, 1712, 1714, 1715, 1716, 1717, 1720, 1722, 1723, 1759, 1771, 1785, 1801, 1803, 1804, 1824, 1827, 1834, 1836, 1851, 1853, 1857, 1858, 1862, 1863, 1864, 1870, 1874, 1875, 1876, 1878], "categor": [1, 629], "follow": [1, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 70, 96, 99, 128, 130, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 461, 489, 516, 535, 538, 563, 584, 599, 602, 629, 708, 712, 714, 716, 763, 764, 766, 789, 790, 794, 801, 887, 889, 896, 897, 898, 900, 901, 902, 903, 904, 905, 912, 947, 951, 986, 989, 1024, 1027, 1062, 1065, 1102, 1106, 1141, 1145, 1180, 1183, 1218, 1221, 1256, 1260, 1285, 1289, 1318, 1323, 1352, 1357, 1386, 1390, 1415, 1419, 1448, 1451, 1476, 1479, 1504, 1507, 1532, 1536, 1565, 1569, 1594, 1598, 1627, 1631, 1656, 1680, 1695, 1703, 1713, 1740, 1761, 1775, 1787, 1855, 1858], "categori": 1, "creat": [1, 2, 3, 5, 6, 9, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 33, 34, 45, 61, 77, 91, 104, 122, 137, 153, 170, 186, 202, 220, 235, 251, 268, 284, 301, 317, 334, 350, 368, 384, 401, 417, 434, 450, 460, 467, 483, 496, 511, 523, 543, 558, 571, 577, 591, 592, 615, 618, 630, 707, 708, 715, 765, 798, 894, 916, 917, 924, 926, 928, 942, 949, 955, 956, 963, 965, 967, 981, 988, 993, 994, 1001, 1003, 1005, 1019, 1031, 1032, 1039, 1041, 1043, 1057, 1064, 1069, 1070, 1079, 1081, 1083, 1097, 1110, 1111, 1118, 1120, 1122, 1136, 1149, 1150, 1157, 1159, 1161, 1175, 1182, 1187, 1188, 1195, 1197, 1199, 1213, 1225, 1226, 1233, 1235, 1237, 1251, 1259, 1265, 1280, 1295, 1313, 1321, 1329, 1347, 1355, 1363, 1381, 1389, 1395, 1410, 1417, 1425, 1443, 1456, 1471, 1484, 1499, 1512, 1527, 1542, 1560, 1574, 1589, 1604, 1622, 1630, 1636, 1651, 1695, 1717, 1731, 1733, 1744, 1746, 1754, 1766, 1780, 1801, 1803, 1843, 1849, 1875, 1876, 1877, 1880], "cubic": [1, 5, 6, 7, 8, 9, 11, 12, 15, 17, 20, 21, 22, 28, 29, 30, 31, 34, 708, 712, 724, 727, 763, 789, 790, 899, 910, 916, 917, 919, 920, 921, 922, 923, 933, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 993, 994, 996, 997, 998, 999, 1000, 1010, 1026, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1048, 1064, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1088, 1104, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1127, 1143, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1166, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1204, 1220, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1242, 1695, 1698, 1699, 1703, 1709, 1718, 1719, 1875, 1876], "defin": [1, 3, 4, 7, 9, 16, 21, 22, 23, 25, 28, 29, 31, 34, 72, 482, 589, 610, 657, 658, 660, 663, 667, 713, 738, 896, 897, 910, 911, 949, 950, 1026, 1064, 1077, 1078, 1104, 1105, 1143, 1144, 1182, 1220, 1689, 1690, 1709, 1801], "phase": [1, 3, 16, 17, 18, 20, 21, 22, 28, 29, 30, 33, 34, 211, 219, 221, 460, 463, 480, 482, 484, 518, 519, 537, 601, 626, 628, 630, 631, 633, 634, 792, 796, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 1259, 1389, 1417, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1506, 1568, 1630, 1801, 1861, 1874], "perform": [1, 25, 27, 28, 29, 32, 33, 35, 51, 52, 53, 56, 67, 83, 84, 85, 88, 93, 110, 111, 112, 116, 125, 143, 144, 145, 148, 158, 176, 177, 178, 181, 191, 208, 209, 210, 214, 217, 223, 241, 242, 243, 246, 256, 261, 274, 275, 276, 279, 289, 307, 308, 309, 312, 322, 327, 340, 341, 342, 345, 356, 374, 375, 376, 379, 389, 407, 408, 409, 412, 422, 440, 441, 442, 445, 454, 473, 474, 475, 478, 486, 502, 503, 504, 507, 513, 549, 550, 551, 554, 560, 567, 568, 569, 570, 572, 713, 921, 932, 934, 935, 938, 944, 960, 971, 973, 974, 977, 983, 998, 1009, 1011, 1012, 1015, 1021, 1026, 1036, 1047, 1049, 1050, 1053, 1059, 1064, 1074, 1087, 1089, 1090, 1093, 1099, 1115, 1126, 1128, 1129, 1132, 1138, 1154, 1165, 1167, 1168, 1171, 1177, 1192, 1203, 1205, 1206, 1209, 1215, 1220, 1230, 1241, 1243, 1244, 1247, 1253, 1271, 1272, 1273, 1276, 1282, 1303, 1304, 1305, 1308, 1315, 1337, 1338, 1339, 1342, 1349, 1371, 1372, 1373, 1376, 1383, 1401, 1402, 1403, 1406, 1412, 1433, 1434, 1435, 1438, 1445, 1462, 1463, 1464, 1467, 1473, 1490, 1491, 1492, 1495, 1501, 1518, 1519, 1520, 1523, 1529, 1550, 1551, 1552, 1555, 1562, 1580, 1581, 1582, 1585, 1591, 1612, 1613, 1614, 1617, 1624, 1642, 1643, 1644, 1647, 1653, 1686, 1694, 1715, 1717, 1882], "drainag": [1, 9, 11, 12, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "simul": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 17, 18, 20, 22, 23, 26, 31, 34, 35, 38, 98, 119, 130, 163, 228, 261, 294, 327, 361, 394, 491, 725, 771, 824, 1478, 1801, 1882], "calcul": [1, 5, 6, 9, 21, 23, 30, 34, 58, 130, 150, 183, 228, 248, 281, 314, 347, 381, 414, 427, 447, 482, 518, 590, 626, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 700, 701, 702, 703, 704, 705, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 731, 732, 733, 734, 735, 736, 759, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 805, 819, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 872, 874, 875, 877, 878, 879, 880, 882, 883, 885, 886, 887, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 949, 1287, 1291, 1325, 1359, 1421, 1450, 1538, 1600, 1874], "10": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 197, 638, 639, 640, 641, 642, 643, 644, 713, 854, 856, 896, 897, 901, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230, 1865, 1875, 1876], "step": [1, 4, 6, 8, 11, 12, 16, 20, 27, 28, 29, 31, 33, 36, 99, 119, 217, 348, 382, 415, 461, 509, 538, 602, 617, 713, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1694, 1717], "numer": [1, 3, 18, 20, 22, 28, 29, 30, 31, 39, 50, 57, 68, 73, 82, 89, 94, 100, 109, 117, 126, 131, 142, 149, 159, 164, 175, 182, 192, 198, 207, 215, 224, 229, 240, 247, 257, 262, 273, 280, 290, 295, 306, 313, 323, 328, 339, 346, 357, 362, 373, 380, 390, 395, 406, 413, 423, 428, 439, 446, 455, 464, 472, 479, 487, 492, 501, 508, 514, 521, 528, 531, 533, 540, 548, 555, 561, 615, 618, 629, 784, 786, 823, 824, 825, 826, 827, 829, 830, 831, 834, 836, 839, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 868, 869, 899, 914, 931, 939, 945, 953, 970, 978, 984, 991, 1008, 1016, 1022, 1029, 1046, 1054, 1060, 1067, 1086, 1094, 1100, 1108, 1125, 1133, 1139, 1147, 1164, 1172, 1178, 1185, 1202, 1210, 1216, 1223, 1240, 1248, 1254, 1262, 1270, 1277, 1283, 1292, 1302, 1309, 1316, 1326, 1336, 1343, 1350, 1360, 1370, 1377, 1384, 1392, 1400, 1407, 1413, 1422, 1432, 1439, 1446, 1453, 1461, 1468, 1474, 1481, 1489, 1496, 1502, 1509, 1517, 1524, 1530, 1539, 1549, 1556, 1563, 1571, 1579, 1586, 1592, 1601, 1611, 1618, 1625, 1633, 1641, 1648, 1654, 1862, 1863], "python": [1, 3, 5, 16, 17, 27, 28, 29, 31, 33, 34, 36, 519, 820, 910, 922, 949, 961, 999, 1026, 1037, 1064, 1075, 1104, 1116, 1143, 1155, 1182, 1193, 1220, 1231, 1478, 1665, 1687, 1691, 1692, 1847, 1852, 1864, 1870], "primer": [1, 3, 26], "gener": [1, 3, 4, 5, 7, 9, 10, 13, 14, 15, 16, 21, 22, 27, 28, 29, 30, 31, 34, 48, 50, 69, 72, 80, 82, 95, 107, 109, 127, 140, 142, 160, 173, 175, 193, 205, 207, 225, 238, 240, 258, 271, 273, 291, 304, 306, 324, 337, 339, 358, 371, 373, 391, 404, 406, 424, 437, 439, 456, 461, 470, 472, 488, 499, 501, 515, 526, 528, 534, 538, 546, 548, 562, 586, 602, 629, 706, 707, 708, 715, 765, 781, 793, 798, 889, 890, 896, 897, 899, 910, 912, 916, 922, 929, 931, 946, 949, 951, 955, 961, 968, 970, 985, 988, 989, 993, 999, 1006, 1008, 1023, 1026, 1027, 1031, 1037, 1044, 1046, 1061, 1064, 1065, 1069, 1075, 1084, 1086, 1101, 1104, 1106, 1110, 1116, 1123, 1125, 1140, 1143, 1145, 1149, 1155, 1162, 1164, 1179, 1182, 1183, 1187, 1193, 1200, 1202, 1217, 1220, 1221, 1225, 1231, 1238, 1240, 1255, 1260, 1268, 1270, 1284, 1289, 1300, 1302, 1317, 1323, 1334, 1336, 1351, 1357, 1368, 1370, 1385, 1390, 1398, 1400, 1414, 1419, 1430, 1432, 1447, 1451, 1459, 1461, 1475, 1478, 1479, 1487, 1489, 1503, 1507, 1515, 1517, 1531, 1536, 1547, 1549, 1564, 1569, 1577, 1579, 1593, 1598, 1609, 1611, 1626, 1631, 1639, 1641, 1655, 1687, 1691, 1692, 1694, 1695, 1712, 1718, 1719, 1803, 1842, 1849, 1861, 1874, 1878, 1879], "quick": [1, 3, 5, 14, 25, 1875], "visual": [1, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 590, 633, 949, 1875, 1876, 1878], "storag": [1, 3, 28, 30, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "topologi": [1, 3, 5, 26, 28, 949, 1182, 1875], "represent": [1, 3, 20, 615, 899, 1720, 1723], "queri": [1, 3, 30, 31, 33, 51, 56, 67, 83, 88, 93, 110, 116, 125, 143, 148, 158, 176, 181, 191, 208, 214, 223, 241, 246, 256, 274, 279, 289, 307, 312, 322, 340, 345, 356, 374, 379, 389, 407, 412, 422, 440, 445, 454, 473, 478, 486, 502, 507, 513, 549, 554, 560, 567, 570, 572, 932, 938, 944, 971, 977, 983, 1009, 1015, 1021, 1047, 1053, 1059, 1087, 1093, 1099, 1126, 1132, 1138, 1165, 1171, 1177, 1182, 1203, 1209, 1215, 1241, 1247, 1253, 1271, 1276, 1282, 1303, 1308, 1315, 1337, 1342, 1349, 1371, 1376, 1383, 1401, 1406, 1412, 1433, 1438, 1445, 1462, 1467, 1473, 1490, 1495, 1501, 1518, 1523, 1529, 1550, 1555, 1562, 1580, 1585, 1591, 1612, 1617, 1624, 1642, 1647, 1653], "manipul": [1, 3, 26, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 507, 554, 570, 938, 977, 1015, 1053, 1093, 1132, 1171, 1209, 1247, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647], "assign": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 21, 22, 26, 27, 28, 30, 33, 34, 44, 51, 52, 53, 56, 63, 65, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 154, 156, 158, 169, 176, 177, 178, 181, 187, 189, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 252, 254, 256, 267, 274, 275, 276, 279, 285, 287, 289, 300, 307, 308, 309, 312, 318, 320, 322, 333, 340, 341, 342, 345, 352, 354, 356, 367, 374, 375, 376, 379, 385, 387, 389, 400, 407, 408, 409, 412, 418, 420, 422, 433, 440, 441, 442, 445, 451, 452, 454, 466, 473, 474, 475, 478, 486, 495, 502, 503, 504, 507, 513, 519, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 573, 586, 615, 713, 804, 896, 897, 910, 918, 932, 934, 935, 938, 944, 949, 957, 971, 973, 974, 977, 983, 995, 1009, 1011, 1012, 1015, 1021, 1026, 1033, 1047, 1049, 1050, 1053, 1059, 1064, 1071, 1087, 1089, 1090, 1093, 1099, 1104, 1112, 1126, 1128, 1129, 1132, 1138, 1143, 1151, 1165, 1167, 1168, 1171, 1177, 1182, 1189, 1203, 1205, 1206, 1209, 1215, 1220, 1227, 1241, 1243, 1244, 1247, 1253, 1264, 1271, 1272, 1273, 1276, 1282, 1288, 1294, 1303, 1304, 1305, 1308, 1315, 1322, 1328, 1337, 1338, 1339, 1342, 1349, 1356, 1362, 1371, 1372, 1373, 1376, 1383, 1394, 1401, 1402, 1403, 1406, 1412, 1418, 1424, 1433, 1434, 1435, 1438, 1445, 1455, 1462, 1463, 1464, 1467, 1473, 1483, 1490, 1491, 1492, 1495, 1501, 1511, 1518, 1519, 1520, 1523, 1529, 1535, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1597, 1603, 1612, 1613, 1614, 1617, 1624, 1635, 1642, 1643, 1644, 1647, 1653, 1678, 1716, 1722, 1804, 1878], "geometr": [1, 3, 4, 5, 10, 11, 12, 14, 15, 23, 27, 31, 32, 33, 614, 655, 682, 697, 887, 1104], "properti": [1, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 18, 20, 21, 22, 23, 25, 26, 28, 30, 32, 33, 34, 38, 39, 47, 57, 64, 72, 73, 79, 89, 98, 100, 106, 117, 130, 131, 139, 149, 155, 163, 164, 172, 182, 188, 196, 198, 204, 215, 228, 229, 237, 247, 253, 261, 262, 270, 280, 286, 294, 295, 303, 313, 319, 327, 328, 336, 346, 353, 361, 362, 370, 380, 386, 394, 395, 403, 413, 419, 427, 428, 436, 446, 461, 464, 469, 479, 480, 491, 492, 498, 508, 521, 525, 531, 538, 540, 545, 555, 602, 615, 618, 622, 629, 631, 633, 655, 707, 711, 712, 714, 715, 716, 759, 762, 763, 764, 765, 766, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 819, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 889, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 912, 914, 927, 939, 951, 953, 966, 978, 989, 991, 1004, 1016, 1027, 1029, 1042, 1054, 1065, 1067, 1082, 1094, 1104, 1106, 1108, 1121, 1133, 1145, 1147, 1160, 1172, 1182, 1183, 1185, 1198, 1210, 1221, 1223, 1236, 1248, 1260, 1262, 1267, 1277, 1287, 1289, 1292, 1297, 1298, 1299, 1309, 1323, 1326, 1331, 1332, 1333, 1343, 1357, 1360, 1365, 1366, 1367, 1377, 1390, 1392, 1397, 1407, 1419, 1422, 1427, 1428, 1429, 1439, 1450, 1451, 1453, 1458, 1468, 1479, 1481, 1486, 1496, 1507, 1509, 1514, 1524, 1534, 1536, 1539, 1544, 1545, 1546, 1556, 1569, 1571, 1576, 1586, 1596, 1598, 1601, 1606, 1607, 1608, 1618, 1631, 1633, 1638, 1648, 1803, 1863, 1867, 1875, 1876, 1878], "label": [1, 3, 5, 6, 7, 9, 11, 12, 14, 18, 22, 26, 28, 29, 31, 32, 33, 39, 44, 50, 52, 53, 56, 61, 67, 73, 76, 82, 84, 85, 88, 91, 93, 100, 103, 109, 111, 112, 116, 122, 125, 131, 136, 142, 144, 145, 148, 153, 158, 164, 169, 175, 177, 178, 181, 186, 191, 198, 201, 207, 209, 210, 214, 220, 223, 229, 234, 240, 242, 243, 246, 251, 256, 262, 267, 273, 275, 276, 279, 284, 289, 295, 300, 306, 308, 309, 312, 317, 322, 328, 333, 339, 341, 342, 345, 350, 356, 362, 367, 373, 375, 376, 379, 384, 389, 395, 400, 406, 408, 409, 412, 417, 422, 428, 433, 439, 441, 442, 445, 450, 454, 461, 462, 464, 466, 472, 474, 475, 478, 481, 483, 486, 492, 495, 501, 503, 504, 507, 511, 513, 519, 521, 528, 538, 539, 540, 542, 548, 550, 551, 554, 557, 558, 560, 565, 566, 568, 569, 570, 571, 572, 602, 603, 605, 629, 631, 910, 911, 912, 913, 914, 918, 922, 923, 931, 934, 935, 938, 941, 942, 944, 950, 951, 952, 953, 957, 961, 962, 970, 973, 974, 977, 980, 981, 983, 989, 990, 991, 995, 999, 1000, 1008, 1011, 1012, 1015, 1018, 1019, 1021, 1027, 1028, 1029, 1033, 1037, 1038, 1046, 1049, 1050, 1053, 1056, 1057, 1059, 1064, 1065, 1066, 1067, 1071, 1075, 1076, 1086, 1089, 1090, 1093, 1096, 1097, 1099, 1105, 1106, 1107, 1108, 1112, 1116, 1117, 1125, 1128, 1129, 1132, 1135, 1136, 1138, 1143, 1144, 1145, 1146, 1147, 1151, 1155, 1156, 1164, 1167, 1168, 1171, 1174, 1175, 1177, 1183, 1184, 1185, 1189, 1193, 1194, 1202, 1205, 1206, 1209, 1212, 1213, 1215, 1221, 1222, 1223, 1227, 1231, 1232, 1240, 1243, 1244, 1247, 1250, 1251, 1253, 1260, 1261, 1262, 1264, 1270, 1272, 1273, 1276, 1279, 1280, 1282, 1289, 1290, 1292, 1294, 1302, 1304, 1305, 1308, 1312, 1313, 1315, 1323, 1324, 1326, 1328, 1336, 1338, 1339, 1342, 1346, 1347, 1349, 1357, 1358, 1360, 1362, 1370, 1372, 1373, 1376, 1380, 1381, 1383, 1390, 1391, 1392, 1394, 1400, 1402, 1403, 1406, 1409, 1410, 1412, 1419, 1420, 1422, 1424, 1432, 1434, 1435, 1438, 1442, 1443, 1445, 1451, 1452, 1453, 1455, 1461, 1463, 1464, 1467, 1470, 1471, 1473, 1479, 1480, 1481, 1483, 1489, 1491, 1492, 1495, 1498, 1499, 1501, 1507, 1508, 1509, 1511, 1517, 1519, 1520, 1523, 1526, 1527, 1529, 1536, 1537, 1539, 1541, 1549, 1551, 1552, 1555, 1559, 1560, 1562, 1569, 1570, 1571, 1573, 1579, 1581, 1582, 1585, 1588, 1589, 1591, 1598, 1599, 1601, 1603, 1611, 1613, 1614, 1617, 1621, 1622, 1624, 1631, 1632, 1633, 1635, 1641, 1643, 1644, 1647, 1650, 1651, 1653, 1676, 1678, 1679, 1680, 1684, 1686, 1694, 1709, 1711, 1716, 1717, 1722, 1862, 1871, 1874, 1877, 1879], "domain": [1, 3, 4, 7, 8, 14, 23, 29, 31, 33, 38, 72, 98, 121, 130, 163, 196, 221, 228, 261, 294, 327, 361, 394, 427, 460, 461, 462, 481, 491, 519, 520, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 573, 602, 603, 605, 910, 912, 913, 941, 949, 951, 952, 980, 988, 989, 990, 1018, 1026, 1027, 1028, 1056, 1064, 1065, 1066, 1096, 1104, 1106, 1107, 1135, 1143, 1145, 1146, 1174, 1182, 1183, 1184, 1212, 1220, 1221, 1222, 1250, 1259, 1260, 1261, 1279, 1287, 1289, 1290, 1312, 1321, 1323, 1324, 1346, 1355, 1357, 1358, 1380, 1389, 1390, 1391, 1409, 1417, 1419, 1420, 1442, 1450, 1451, 1452, 1470, 1478, 1479, 1480, 1498, 1506, 1507, 1508, 1526, 1534, 1536, 1537, 1559, 1568, 1569, 1570, 1588, 1596, 1598, 1599, 1621, 1630, 1631, 1632, 1650, 1694, 1695, 1697, 1703, 1713], "singl": [1, 2, 3, 6, 11, 12, 17, 18, 25, 27, 28, 30, 31, 33, 34, 58, 60, 90, 120, 150, 152, 183, 185, 218, 248, 250, 281, 283, 314, 316, 347, 349, 381, 383, 414, 416, 447, 449, 460, 510, 618, 629, 631, 633, 887, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230, 1478, 1677, 1681, 1694, 1711, 1853, 1860, 1875, 1876], "transport": [1, 2, 3, 4, 6, 7, 8, 11, 15, 18, 26, 27, 29, 33, 261, 327, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 845, 870, 893, 949, 1882], "invas": [1, 3, 11, 99, 196, 197, 219], "option": [1, 3, 20, 25, 26, 27, 29, 31, 33, 36, 39, 44, 48, 50, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 67, 73, 76, 80, 82, 83, 84, 85, 88, 90, 91, 93, 100, 103, 107, 109, 110, 111, 112, 116, 120, 121, 122, 123, 125, 131, 136, 140, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 164, 169, 173, 175, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 198, 201, 205, 207, 208, 209, 210, 214, 218, 219, 220, 221, 223, 229, 234, 238, 240, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 256, 261, 262, 267, 271, 273, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 295, 300, 304, 306, 307, 308, 309, 312, 314, 316, 317, 318, 319, 320, 322, 328, 333, 337, 339, 340, 341, 342, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 362, 367, 371, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 389, 395, 400, 404, 406, 407, 408, 409, 412, 414, 415, 416, 417, 418, 419, 420, 422, 428, 433, 437, 439, 440, 441, 442, 445, 447, 449, 450, 451, 452, 454, 461, 464, 466, 470, 472, 473, 474, 475, 478, 483, 486, 492, 495, 499, 501, 502, 503, 504, 507, 509, 510, 511, 513, 521, 526, 528, 538, 540, 542, 546, 548, 549, 550, 551, 554, 558, 560, 566, 567, 568, 569, 570, 571, 572, 589, 591, 602, 617, 626, 629, 630, 633, 634, 708, 710, 711, 725, 759, 761, 762, 787, 788, 805, 820, 842, 867, 889, 893, 910, 912, 914, 916, 917, 918, 919, 922, 923, 926, 928, 929, 931, 932, 933, 934, 935, 938, 942, 944, 949, 951, 953, 955, 956, 957, 958, 961, 962, 965, 967, 968, 970, 971, 972, 973, 974, 977, 981, 983, 988, 989, 991, 993, 994, 995, 996, 999, 1000, 1003, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1015, 1019, 1021, 1026, 1027, 1029, 1031, 1032, 1033, 1034, 1037, 1038, 1041, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1053, 1057, 1059, 1064, 1065, 1067, 1069, 1070, 1071, 1072, 1075, 1076, 1081, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1093, 1097, 1099, 1104, 1106, 1108, 1110, 1111, 1112, 1113, 1116, 1117, 1120, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1132, 1136, 1138, 1143, 1145, 1147, 1149, 1150, 1151, 1152, 1155, 1156, 1159, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1171, 1175, 1177, 1182, 1183, 1185, 1187, 1188, 1189, 1190, 1193, 1194, 1197, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1209, 1213, 1215, 1220, 1221, 1223, 1225, 1226, 1227, 1228, 1231, 1232, 1235, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1247, 1251, 1253, 1260, 1262, 1264, 1268, 1270, 1271, 1272, 1273, 1276, 1280, 1282, 1289, 1292, 1294, 1299, 1300, 1302, 1303, 1304, 1305, 1308, 1313, 1315, 1320, 1323, 1326, 1328, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1347, 1349, 1354, 1357, 1360, 1362, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1381, 1383, 1388, 1390, 1392, 1394, 1398, 1400, 1401, 1402, 1403, 1406, 1410, 1412, 1419, 1422, 1424, 1429, 1430, 1432, 1433, 1434, 1435, 1438, 1443, 1445, 1451, 1453, 1455, 1459, 1461, 1462, 1463, 1464, 1467, 1471, 1473, 1478, 1479, 1481, 1483, 1487, 1489, 1490, 1491, 1492, 1495, 1499, 1501, 1507, 1509, 1511, 1515, 1517, 1518, 1519, 1520, 1523, 1527, 1529, 1536, 1539, 1541, 1546, 1547, 1549, 1550, 1551, 1552, 1555, 1560, 1562, 1567, 1569, 1571, 1573, 1577, 1579, 1580, 1581, 1582, 1585, 1589, 1591, 1598, 1601, 1603, 1608, 1609, 1611, 1612, 1613, 1614, 1617, 1622, 1624, 1629, 1631, 1633, 1635, 1639, 1641, 1642, 1643, 1644, 1647, 1651, 1653, 1666, 1679, 1681, 1684, 1687, 1688, 1691, 1692, 1693, 1701, 1703, 1714, 1717, 1718, 1719, 1744, 1842, 1849, 1852, 1862, 1863, 1875, 1876, 1877], "applic": [1, 20, 21, 23, 25, 29, 33, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 502, 549, 567, 932, 971, 1009, 1026, 1047, 1087, 1126, 1165, 1203, 1220, 1241, 1271, 1303, 1337, 1371, 1401, 1433, 1462, 1490, 1518, 1550, 1580, 1612, 1642], "refer": [1, 7, 17, 18, 25, 26, 27, 29, 31, 32, 33, 65, 156, 189, 197, 254, 287, 320, 348, 354, 382, 387, 415, 420, 452, 509, 519, 614, 618, 708, 714, 716, 729, 730, 764, 766, 794, 801, 813, 820, 827, 830, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 868, 869, 874, 887, 890, 891, 896, 897, 1740, 1803], "scale": [1, 2, 4, 5, 6, 9, 10, 11, 12, 14, 18, 21, 27, 30, 31, 34, 38, 39, 50, 72, 73, 82, 98, 100, 109, 130, 131, 142, 163, 164, 175, 196, 198, 207, 228, 229, 240, 261, 262, 273, 294, 295, 306, 327, 328, 339, 361, 362, 373, 394, 395, 406, 427, 428, 439, 460, 461, 464, 472, 491, 492, 501, 519, 520, 521, 528, 537, 538, 540, 548, 601, 602, 614, 625, 634, 638, 639, 640, 641, 642, 643, 644, 655, 712, 714, 716, 763, 764, 766, 781, 789, 794, 795, 801, 850, 887, 889, 910, 912, 914, 931, 949, 951, 953, 970, 988, 989, 991, 1008, 1026, 1027, 1029, 1046, 1064, 1065, 1067, 1086, 1104, 1106, 1108, 1125, 1143, 1145, 1147, 1164, 1182, 1183, 1185, 1202, 1220, 1221, 1223, 1240, 1259, 1260, 1262, 1270, 1287, 1289, 1292, 1302, 1321, 1323, 1326, 1336, 1355, 1357, 1360, 1370, 1389, 1390, 1392, 1400, 1417, 1419, 1422, 1432, 1450, 1451, 1453, 1461, 1478, 1479, 1481, 1489, 1506, 1507, 1509, 1517, 1534, 1536, 1539, 1549, 1568, 1569, 1571, 1579, 1596, 1598, 1601, 1611, 1630, 1631, 1633, 1641, 1666, 1864, 1875, 1876, 1877, 1878], "model": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 21, 22, 26, 27, 33, 34, 38, 39, 50, 64, 72, 73, 82, 98, 100, 109, 130, 131, 142, 155, 163, 164, 175, 188, 196, 198, 207, 228, 229, 240, 253, 261, 262, 273, 286, 294, 295, 306, 319, 327, 328, 339, 353, 361, 362, 373, 386, 394, 395, 406, 419, 427, 428, 439, 460, 461, 462, 464, 472, 480, 481, 482, 491, 492, 501, 519, 520, 521, 528, 537, 538, 539, 540, 548, 556, 557, 573, 586, 590, 601, 602, 603, 604, 605, 625, 634, 638, 639, 640, 641, 642, 643, 644, 647, 650, 651, 653, 654, 655, 657, 662, 665, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 691, 694, 698, 699, 701, 705, 707, 708, 711, 712, 713, 714, 715, 716, 759, 762, 763, 764, 765, 766, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 797, 798, 799, 800, 801, 802, 819, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 889, 890, 891, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 912, 913, 914, 931, 940, 941, 949, 951, 952, 953, 970, 979, 980, 988, 989, 990, 991, 1008, 1017, 1018, 1026, 1027, 1028, 1029, 1046, 1055, 1056, 1064, 1065, 1066, 1067, 1086, 1095, 1096, 1104, 1106, 1107, 1108, 1125, 1134, 1135, 1143, 1145, 1146, 1147, 1164, 1173, 1174, 1182, 1183, 1184, 1185, 1202, 1211, 1212, 1220, 1221, 1222, 1223, 1240, 1249, 1250, 1259, 1260, 1261, 1262, 1270, 1278, 1279, 1287, 1289, 1290, 1292, 1302, 1310, 1312, 1321, 1323, 1324, 1326, 1336, 1344, 1346, 1355, 1357, 1358, 1360, 1370, 1378, 1380, 1389, 1390, 1391, 1392, 1400, 1408, 1409, 1417, 1419, 1420, 1422, 1432, 1440, 1442, 1450, 1451, 1452, 1453, 1461, 1469, 1470, 1478, 1479, 1480, 1481, 1489, 1497, 1498, 1506, 1507, 1508, 1509, 1517, 1525, 1526, 1534, 1536, 1537, 1539, 1549, 1557, 1559, 1568, 1569, 1570, 1571, 1579, 1587, 1588, 1596, 1598, 1599, 1601, 1611, 1619, 1621, 1630, 1631, 1632, 1633, 1641, 1649, 1650, 1861, 1864, 1868, 1869, 1874], "set": [1, 2, 6, 7, 9, 10, 11, 12, 14, 15, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 45, 49, 51, 58, 59, 60, 61, 64, 72, 77, 81, 83, 90, 91, 98, 99, 104, 108, 110, 120, 122, 130, 137, 141, 143, 150, 151, 152, 153, 155, 163, 170, 174, 176, 183, 184, 185, 186, 188, 196, 197, 202, 206, 208, 218, 220, 228, 235, 239, 241, 248, 249, 250, 251, 253, 261, 268, 272, 274, 281, 282, 283, 284, 286, 294, 301, 305, 307, 314, 315, 316, 317, 319, 327, 334, 338, 340, 347, 349, 350, 353, 361, 368, 372, 374, 381, 383, 384, 386, 394, 401, 405, 407, 414, 416, 417, 419, 427, 434, 438, 440, 447, 448, 449, 450, 460, 463, 467, 471, 473, 482, 483, 484, 491, 496, 500, 502, 510, 511, 520, 523, 527, 537, 543, 547, 549, 558, 567, 571, 577, 579, 580, 592, 594, 595, 618, 626, 714, 716, 764, 766, 794, 801, 893, 910, 916, 917, 922, 923, 924, 930, 932, 942, 949, 955, 956, 961, 962, 963, 969, 971, 981, 988, 993, 994, 999, 1000, 1001, 1007, 1009, 1019, 1026, 1031, 1032, 1037, 1038, 1039, 1045, 1047, 1057, 1064, 1069, 1070, 1075, 1076, 1079, 1085, 1087, 1097, 1104, 1110, 1111, 1116, 1117, 1118, 1124, 1126, 1136, 1143, 1149, 1150, 1155, 1156, 1157, 1163, 1165, 1175, 1182, 1187, 1188, 1193, 1194, 1195, 1201, 1203, 1213, 1220, 1225, 1226, 1231, 1232, 1233, 1239, 1241, 1251, 1259, 1265, 1269, 1271, 1280, 1287, 1295, 1301, 1303, 1313, 1320, 1321, 1329, 1335, 1337, 1347, 1354, 1355, 1363, 1369, 1371, 1381, 1388, 1389, 1395, 1399, 1401, 1410, 1417, 1425, 1431, 1433, 1443, 1450, 1456, 1460, 1462, 1471, 1478, 1484, 1488, 1490, 1499, 1506, 1512, 1516, 1518, 1527, 1534, 1542, 1548, 1550, 1560, 1567, 1568, 1574, 1578, 1580, 1589, 1596, 1604, 1610, 1612, 1622, 1629, 1630, 1636, 1640, 1642, 1651, 1686, 1687, 1689, 1691, 1692, 1693, 1695, 1703, 1713, 1717, 1720, 1722, 1723, 1754, 1756, 1757, 1766, 1768, 1769, 1780, 1782, 1783, 1800, 1803, 1804, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1843, 1845, 1846, 1868, 1869, 1876], "attribut": [1, 2, 4, 15, 17, 20, 25, 27, 29, 30, 33, 38, 59, 72, 98, 130, 151, 163, 184, 196, 228, 249, 261, 282, 294, 315, 327, 361, 394, 427, 448, 460, 491, 519, 520, 537, 556, 573, 586, 601, 604, 625, 634, 820, 910, 940, 949, 979, 988, 1017, 1026, 1055, 1064, 1095, 1104, 1134, 1143, 1173, 1182, 1211, 1220, 1249, 1259, 1278, 1287, 1310, 1321, 1344, 1355, 1378, 1389, 1408, 1417, 1440, 1450, 1469, 1478, 1497, 1506, 1525, 1534, 1557, 1568, 1587, 1596, 1619, 1630, 1649, 1726, 1727, 1729, 1736, 1738, 1740, 1742, 1751, 1801, 1807, 1819, 1820, 1857, 1869], "machineri": [1, 2], "workspac": [1, 2, 9, 10, 12, 23, 625, 1724, 1801, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856], "project": [1, 2, 5, 34, 35, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 491, 520, 537, 613, 618, 625, 628, 629, 630, 631, 632, 633, 634, 910, 949, 988, 1026, 1064, 1104, 1143, 1182, 1220, 1259, 1287, 1321, 1355, 1389, 1417, 1450, 1478, 1506, 1534, 1568, 1596, 1630, 1677, 1724, 1802, 1803, 1838, 1840, 1842, 1847, 1848, 1849, 1852, 1853], "manag": [1, 2, 30, 519, 891], "cluster": [1, 2, 33, 99, 804, 805, 1678, 1686, 1690, 1701, 1704, 1711, 1716, 1722, 1858], "avail": [1, 2, 7, 10, 21, 23, 25, 31, 32, 33, 34, 36, 462, 509, 539, 603, 618, 845, 913, 952, 990, 1028, 1066, 1107, 1146, 1184, 1222, 1261, 1290, 1324, 1358, 1391, 1420, 1452, 1480, 1508, 1537, 1570, 1599, 1632, 1665, 1688], "matrix": [1, 2, 18, 22, 25, 27, 29, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 910, 916, 917, 926, 928, 949, 955, 956, 965, 967, 988, 993, 994, 1003, 1005, 1026, 1031, 1032, 1041, 1043, 1064, 1069, 1070, 1081, 1083, 1104, 1110, 1111, 1120, 1122, 1143, 1149, 1150, 1159, 1161, 1182, 1187, 1188, 1197, 1199, 1220, 1225, 1226, 1235, 1237, 1665, 1666, 1681, 1683, 1688, 1705, 1706, 1707, 1708, 1714, 1715, 1720, 1723, 1865], "solver": [1, 2, 16, 18, 20, 22, 23, 59, 151, 184, 249, 282, 315, 448, 607, 1659, 1661, 1663, 1665, 1666, 1669], "steadi": [1, 2, 23, 34, 261, 327, 427, 626, 634], "state": [1, 2, 9, 23, 27, 32, 33, 34, 261, 427, 626, 632, 634, 824, 825, 893, 1291, 1325, 1359, 1421, 1538, 1600], "explan": [1, 2, 1763, 1841, 1879], "unit": [1, 2, 7, 614, 773, 820, 823, 824, 825, 826, 827, 829, 830, 831, 834, 836, 845, 847, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 865, 866, 868, 869, 896, 897, 910, 1143], "reactiv": [1, 2], "conduct": [1, 2, 4, 6, 8, 16, 18, 20, 22, 27, 163, 228, 518, 855, 856, 857, 858, 870, 872, 877, 878, 879, 880, 882, 883, 885, 886, 887, 893, 897, 907, 908, 1026, 1220], "transient": [1, 2, 327, 348, 361, 382, 394, 415, 491, 509, 626, 634, 725], "softwar": [2, 26, 34, 614, 616], "illustr": [2, 5, 22, 25, 26, 27, 28, 29, 31, 32, 33, 712, 714, 716, 763, 764, 766, 789, 794, 801, 1717], "problem": [2, 9, 10, 11, 22, 25, 27, 28, 29, 327, 872, 1858], "fix": [2, 9, 13, 29, 31, 33, 820, 1858], "appli": [2, 10, 22, 23, 27, 29, 30, 32, 33, 34, 44, 51, 60, 61, 62, 63, 64, 65, 76, 83, 90, 91, 99, 103, 110, 119, 120, 121, 122, 123, 130, 136, 143, 152, 153, 154, 155, 156, 169, 176, 185, 186, 187, 188, 189, 201, 208, 218, 219, 220, 221, 234, 241, 250, 251, 252, 253, 254, 267, 274, 283, 284, 285, 286, 287, 300, 307, 316, 317, 318, 319, 320, 333, 340, 349, 350, 351, 352, 353, 354, 367, 374, 383, 384, 385, 386, 387, 400, 407, 416, 417, 418, 419, 420, 433, 440, 449, 450, 451, 452, 461, 462, 466, 473, 483, 495, 502, 510, 511, 519, 538, 539, 542, 549, 558, 566, 567, 571, 602, 603, 784, 790, 820, 842, 867, 887, 896, 897, 912, 913, 916, 917, 918, 922, 923, 932, 933, 942, 951, 952, 955, 956, 957, 961, 962, 971, 972, 981, 989, 990, 993, 994, 995, 999, 1000, 1009, 1010, 1019, 1027, 1028, 1031, 1032, 1033, 1037, 1038, 1047, 1048, 1057, 1065, 1066, 1069, 1070, 1071, 1075, 1076, 1087, 1088, 1097, 1106, 1107, 1110, 1111, 1112, 1116, 1117, 1126, 1127, 1136, 1145, 1146, 1149, 1150, 1151, 1155, 1156, 1165, 1166, 1175, 1183, 1184, 1187, 1188, 1189, 1193, 1194, 1203, 1204, 1213, 1221, 1222, 1225, 1226, 1227, 1231, 1232, 1241, 1242, 1251, 1260, 1261, 1264, 1271, 1280, 1288, 1289, 1290, 1294, 1299, 1303, 1313, 1322, 1323, 1324, 1328, 1333, 1337, 1347, 1356, 1357, 1358, 1362, 1367, 1371, 1381, 1390, 1391, 1394, 1401, 1410, 1418, 1419, 1420, 1424, 1429, 1433, 1443, 1451, 1452, 1455, 1462, 1471, 1479, 1480, 1483, 1490, 1499, 1507, 1508, 1511, 1518, 1527, 1535, 1536, 1537, 1541, 1546, 1550, 1560, 1569, 1570, 1573, 1580, 1589, 1597, 1598, 1599, 1603, 1608, 1612, 1622, 1631, 1632, 1635, 1642, 1651, 1676, 1679, 1680, 1684, 1691, 1692, 1694, 1703, 1709, 1711, 1717, 1800, 1818], "valu": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 28, 29, 30, 32, 33, 34, 42, 44, 45, 46, 48, 55, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 76, 77, 78, 80, 87, 88, 90, 92, 93, 94, 95, 103, 104, 105, 107, 115, 116, 120, 121, 123, 124, 125, 126, 127, 134, 136, 137, 138, 140, 147, 148, 150, 152, 154, 156, 157, 158, 159, 160, 167, 169, 170, 171, 173, 180, 181, 183, 185, 187, 189, 190, 191, 192, 193, 197, 201, 202, 203, 205, 213, 214, 218, 219, 221, 222, 223, 224, 225, 232, 234, 235, 236, 238, 245, 246, 248, 250, 252, 254, 255, 256, 257, 258, 265, 267, 268, 269, 271, 278, 279, 281, 283, 285, 287, 288, 289, 290, 291, 298, 300, 301, 302, 304, 311, 312, 314, 316, 318, 320, 321, 322, 323, 324, 331, 333, 334, 335, 337, 344, 345, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 365, 367, 368, 369, 371, 378, 379, 381, 382, 383, 385, 387, 388, 389, 390, 391, 398, 400, 401, 402, 404, 411, 412, 414, 415, 416, 418, 420, 421, 422, 423, 424, 431, 433, 434, 435, 437, 444, 445, 447, 449, 451, 452, 453, 454, 455, 456, 461, 466, 467, 468, 470, 477, 478, 484, 485, 486, 487, 488, 495, 496, 497, 499, 506, 507, 509, 510, 512, 513, 514, 515, 519, 523, 524, 526, 530, 532, 533, 534, 538, 542, 543, 544, 546, 553, 554, 559, 560, 561, 562, 566, 570, 572, 577, 578, 582, 583, 586, 592, 593, 597, 598, 602, 610, 614, 626, 633, 650, 651, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 707, 708, 710, 711, 712, 713, 714, 715, 716, 718, 720, 723, 724, 725, 726, 727, 730, 731, 732, 734, 735, 736, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 759, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 775, 776, 777, 778, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 813, 820, 823, 824, 825, 826, 827, 829, 830, 831, 834, 836, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 889, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 912, 916, 917, 918, 920, 924, 925, 926, 928, 929, 933, 937, 938, 943, 944, 945, 946, 949, 951, 955, 956, 957, 959, 963, 964, 965, 967, 968, 972, 976, 977, 982, 983, 984, 985, 988, 989, 993, 994, 995, 997, 1001, 1002, 1003, 1005, 1006, 1010, 1014, 1015, 1020, 1021, 1022, 1023, 1026, 1027, 1031, 1032, 1033, 1035, 1039, 1040, 1041, 1043, 1044, 1048, 1052, 1053, 1058, 1059, 1060, 1061, 1064, 1065, 1069, 1070, 1071, 1073, 1079, 1080, 1081, 1083, 1084, 1088, 1092, 1093, 1098, 1099, 1100, 1101, 1104, 1106, 1110, 1111, 1112, 1114, 1118, 1119, 1120, 1122, 1123, 1127, 1131, 1132, 1137, 1138, 1139, 1140, 1143, 1145, 1149, 1150, 1151, 1153, 1157, 1158, 1159, 1161, 1162, 1166, 1170, 1171, 1176, 1177, 1178, 1179, 1182, 1183, 1187, 1188, 1189, 1191, 1195, 1196, 1197, 1199, 1200, 1204, 1208, 1209, 1214, 1215, 1216, 1217, 1220, 1221, 1225, 1226, 1227, 1229, 1233, 1234, 1235, 1237, 1238, 1242, 1246, 1247, 1252, 1253, 1254, 1255, 1259, 1260, 1264, 1265, 1266, 1268, 1275, 1276, 1281, 1282, 1283, 1284, 1288, 1289, 1291, 1294, 1295, 1296, 1297, 1299, 1300, 1307, 1308, 1314, 1315, 1316, 1317, 1322, 1323, 1325, 1328, 1329, 1330, 1331, 1333, 1334, 1341, 1342, 1348, 1349, 1350, 1351, 1356, 1357, 1359, 1362, 1363, 1364, 1365, 1367, 1368, 1375, 1376, 1382, 1383, 1384, 1385, 1389, 1390, 1394, 1395, 1396, 1398, 1405, 1406, 1411, 1412, 1413, 1414, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1429, 1430, 1437, 1438, 1444, 1445, 1446, 1447, 1451, 1455, 1456, 1457, 1459, 1466, 1467, 1472, 1473, 1474, 1475, 1479, 1483, 1484, 1485, 1487, 1494, 1495, 1500, 1501, 1502, 1503, 1507, 1511, 1512, 1513, 1515, 1522, 1523, 1528, 1529, 1530, 1531, 1535, 1536, 1538, 1541, 1542, 1543, 1544, 1546, 1547, 1554, 1555, 1561, 1562, 1563, 1564, 1569, 1573, 1574, 1575, 1577, 1584, 1585, 1590, 1591, 1592, 1593, 1597, 1598, 1600, 1603, 1604, 1605, 1606, 1608, 1609, 1616, 1617, 1623, 1624, 1625, 1626, 1630, 1631, 1635, 1636, 1637, 1639, 1646, 1647, 1652, 1653, 1654, 1655, 1676, 1678, 1681, 1682, 1683, 1688, 1690, 1702, 1703, 1704, 1712, 1715, 1716, 1718, 1719, 1751, 1754, 1755, 1759, 1760, 1766, 1767, 1771, 1772, 1777, 1780, 1781, 1785, 1786, 1793, 1795, 1798, 1800, 1804, 1808, 1811, 1813, 1814, 1816, 1818, 1843, 1844, 1851, 1854, 1868, 1869, 1875, 1876, 1877, 1878, 1879], "rate": [2, 4, 6, 7, 8, 12, 14, 18, 22, 23, 32, 41, 60, 63, 90, 120, 130, 133, 152, 154, 166, 185, 187, 218, 231, 250, 252, 264, 283, 285, 297, 316, 318, 330, 349, 352, 364, 383, 385, 397, 416, 418, 430, 449, 451, 510, 870, 894, 896, 897, 898, 900, 901, 902, 903, 904, 905, 1875], "boundari": [2, 4, 7, 8, 9, 10, 12, 14, 18, 23, 30, 33, 40, 60, 62, 63, 64, 65, 74, 90, 101, 120, 121, 123, 130, 132, 152, 154, 155, 156, 165, 185, 187, 188, 189, 199, 218, 219, 221, 230, 250, 252, 253, 254, 263, 283, 285, 286, 287, 296, 316, 318, 319, 320, 329, 349, 351, 352, 353, 354, 363, 383, 385, 386, 387, 396, 416, 418, 419, 420, 429, 449, 451, 452, 493, 510, 911, 950, 1105, 1144, 1676, 1695, 1701, 1703, 1875, 1876], "condit": [2, 4, 8, 9, 12, 14, 18, 22, 23, 30, 33, 40, 60, 62, 63, 64, 65, 74, 90, 101, 120, 121, 123, 130, 132, 152, 154, 155, 156, 165, 185, 187, 188, 189, 199, 218, 219, 221, 230, 250, 252, 253, 254, 263, 283, 285, 286, 287, 296, 316, 318, 319, 320, 329, 348, 349, 351, 352, 353, 354, 363, 382, 383, 385, 386, 387, 396, 415, 416, 418, 419, 420, 429, 449, 451, 452, 493, 509, 510, 813, 820, 824, 831, 1701], "solv": [2, 4, 7, 18, 22, 23, 29, 32, 62, 351, 896, 897, 1665, 1667, 1671, 1673], "system": [2, 18, 22, 23, 460, 518, 610, 896, 897, 1660, 1662, 1664, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1695, 1713], "equat": [2, 4, 6, 9, 18, 21, 22, 23, 32, 33, 829, 834, 860, 874, 875, 890, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 1660, 1662, 1664, 1668, 1670, 1672, 1674], "spars": [2, 33, 910, 916, 917, 926, 928, 949, 955, 956, 965, 967, 988, 993, 994, 1003, 1005, 1026, 1031, 1032, 1041, 1043, 1064, 1069, 1070, 1081, 1083, 1104, 1110, 1111, 1120, 1122, 1143, 1149, 1150, 1159, 1161, 1182, 1187, 1188, 1197, 1199, 1220, 1225, 1226, 1235, 1237, 1658, 1665, 1671, 1673, 1678, 1681, 1683, 1688, 1693, 1705, 1706, 1707, 1708, 1716, 1720, 1723, 1865], "matric": [2, 18, 59, 151, 184, 249, 282, 315, 448, 1182], "pressur": [2, 4, 6, 9, 11, 12, 14, 16, 20, 22, 23, 31, 32, 33, 99, 113, 119, 196, 211, 729, 730, 820, 823, 827, 829, 830, 850, 851, 854, 856, 858, 860, 861, 862, 865, 866, 868, 869, 872, 874, 875, 880, 889, 890, 891, 894], "v": [2, 6, 28, 29, 31, 70, 96, 128, 161, 194, 211, 226, 259, 292, 325, 359, 392, 425, 457, 489, 516, 535, 563, 584, 599, 896, 897, 947, 986, 1024, 1062, 1102, 1141, 1180, 1218, 1256, 1285, 1318, 1352, 1386, 1415, 1448, 1476, 1504, 1532, 1565, 1594, 1627, 1656, 1761, 1775, 1787, 1855], "gaug": 2, "convers": [2, 1801], "packag": [2, 12, 16, 25, 31, 33, 35, 614, 617, 626, 820, 860, 1287, 1478, 1534, 1596, 1882], "challeng": [2, 10, 33], "sourc": [2, 10, 34, 35, 36, 38, 62, 64, 72, 74, 90, 98, 99, 113, 118, 119, 121, 123, 130, 155, 163, 188, 196, 197, 211, 216, 217, 219, 221, 228, 253, 261, 283, 286, 294, 319, 327, 353, 361, 386, 394, 415, 419, 427, 430, 431, 447, 448, 451, 452, 460, 463, 480, 482, 484, 491, 509, 518, 520, 521, 525, 526, 528, 529, 531, 533, 534, 537, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 586, 589, 590, 591, 599, 601, 602, 603, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 707, 708, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 727, 729, 730, 732, 734, 735, 736, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 758, 759, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 911, 949, 950, 988, 1026, 1064, 1077, 1078, 1104, 1143, 1144, 1182, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1197, 1199, 1204, 1220, 1259, 1287, 1321, 1354, 1355, 1388, 1389, 1417, 1418, 1421, 1427, 1429, 1440, 1441, 1450, 1478, 1506, 1534, 1568, 1596, 1630, 1659, 1660, 1661, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1751, 1763, 1769, 1773, 1774, 1777, 1789, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1812, 1814, 1819, 1820, 1821, 1838, 1840, 1841, 1842, 1847, 1848, 1849, 1852, 1853, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881], "term": [2, 11, 23, 30, 32, 33, 64, 155, 188, 253, 261, 286, 319, 353, 386, 419, 614, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 949], "function": [2, 5, 6, 9, 10, 15, 17, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 51, 60, 68, 83, 90, 94, 99, 110, 120, 126, 143, 152, 159, 176, 185, 192, 197, 208, 218, 224, 241, 250, 257, 274, 283, 290, 307, 316, 323, 340, 348, 349, 357, 374, 382, 383, 390, 407, 415, 416, 423, 440, 449, 455, 459, 461, 473, 487, 502, 509, 510, 514, 519, 533, 537, 538, 549, 556, 561, 565, 567, 573, 574, 601, 602, 604, 610, 629, 638, 639, 640, 641, 642, 643, 644, 647, 650, 651, 653, 654, 656, 670, 685, 700, 706, 709, 713, 714, 716, 717, 720, 722, 728, 731, 733, 737, 739, 753, 757, 760, 764, 766, 767, 772, 774, 781, 790, 792, 794, 796, 801, 802, 819, 820, 822, 824, 828, 832, 837, 840, 845, 846, 848, 852, 859, 863, 871, 872, 873, 876, 881, 884, 887, 888, 892, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 912, 932, 940, 945, 951, 971, 979, 984, 989, 1009, 1017, 1022, 1027, 1047, 1055, 1060, 1065, 1087, 1095, 1100, 1106, 1126, 1134, 1139, 1145, 1165, 1173, 1178, 1182, 1183, 1203, 1211, 1216, 1221, 1241, 1249, 1254, 1260, 1271, 1278, 1283, 1287, 1289, 1303, 1310, 1316, 1323, 1337, 1344, 1350, 1357, 1371, 1378, 1384, 1390, 1401, 1408, 1413, 1419, 1433, 1440, 1446, 1451, 1462, 1469, 1474, 1479, 1490, 1497, 1502, 1507, 1518, 1525, 1530, 1534, 1536, 1550, 1557, 1563, 1569, 1580, 1587, 1592, 1596, 1598, 1612, 1619, 1625, 1631, 1642, 1649, 1654, 1677, 1678, 1680, 1682, 1694, 1695, 1709, 1715, 1716, 1722, 1726, 1732, 1734, 1735, 1744, 1745, 1746, 1747, 1800, 1804, 1818, 1838, 1862, 1863, 1872, 1876], "how": [2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 44, 48, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 67, 76, 80, 83, 84, 85, 88, 90, 91, 93, 103, 107, 110, 111, 112, 116, 120, 121, 122, 123, 125, 136, 140, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 169, 173, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 201, 205, 208, 209, 210, 214, 218, 219, 220, 221, 223, 234, 238, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 256, 267, 271, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 300, 304, 307, 308, 309, 312, 314, 316, 317, 318, 319, 320, 322, 333, 337, 340, 341, 342, 345, 347, 349, 350, 351, 352, 353, 354, 356, 367, 371, 374, 375, 376, 379, 381, 383, 384, 385, 386, 387, 389, 400, 404, 407, 408, 409, 412, 414, 416, 417, 418, 419, 420, 422, 433, 437, 440, 441, 442, 445, 447, 449, 450, 451, 452, 454, 461, 466, 470, 473, 474, 475, 478, 483, 486, 495, 499, 502, 503, 504, 507, 510, 511, 513, 526, 538, 542, 546, 549, 550, 551, 554, 558, 560, 566, 567, 568, 569, 570, 571, 572, 602, 629, 711, 759, 762, 787, 788, 790, 793, 893, 912, 918, 929, 932, 934, 935, 938, 942, 944, 951, 957, 968, 971, 973, 974, 977, 981, 983, 989, 995, 1006, 1009, 1011, 1012, 1015, 1019, 1021, 1027, 1033, 1044, 1047, 1049, 1050, 1053, 1057, 1059, 1065, 1071, 1084, 1087, 1089, 1090, 1093, 1097, 1099, 1106, 1112, 1123, 1126, 1128, 1129, 1132, 1136, 1138, 1145, 1151, 1162, 1165, 1167, 1168, 1171, 1175, 1177, 1183, 1189, 1200, 1203, 1205, 1206, 1209, 1213, 1215, 1221, 1227, 1238, 1241, 1243, 1244, 1247, 1251, 1253, 1260, 1264, 1268, 1271, 1272, 1273, 1276, 1280, 1282, 1289, 1294, 1300, 1303, 1304, 1305, 1308, 1313, 1315, 1323, 1328, 1334, 1337, 1338, 1339, 1342, 1347, 1349, 1357, 1362, 1368, 1371, 1372, 1373, 1376, 1381, 1383, 1390, 1394, 1398, 1401, 1402, 1403, 1406, 1410, 1412, 1419, 1424, 1430, 1433, 1434, 1435, 1438, 1443, 1445, 1451, 1455, 1459, 1462, 1463, 1464, 1467, 1471, 1473, 1479, 1483, 1487, 1490, 1491, 1492, 1495, 1499, 1501, 1507, 1511, 1515, 1518, 1519, 1520, 1523, 1527, 1529, 1536, 1541, 1547, 1550, 1551, 1552, 1555, 1560, 1562, 1569, 1573, 1577, 1580, 1581, 1582, 1585, 1589, 1591, 1598, 1603, 1609, 1612, 1613, 1614, 1617, 1622, 1624, 1631, 1635, 1639, 1642, 1643, 1644, 1647, 1651, 1653, 1703, 1875], "work": [2, 4, 5, 6, 7, 9, 13, 15, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 480, 590, 614, 618, 633, 708, 714, 716, 764, 766, 794, 801, 813, 820, 1026, 1220, 1287, 1320, 1354, 1388, 1478, 1567, 1629, 1680, 1711, 1731, 1733, 1744, 1746, 1789, 1847, 1852, 1878], "conduit": [2, 4, 6, 11, 12, 20, 32, 518, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 697, 698, 699, 872, 877, 878, 879, 880, 882, 883, 885, 886, 887, 893, 907, 908], "shape": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 26, 27, 28, 29, 31, 32, 33, 34, 619, 656, 670, 671, 672, 673, 674, 676, 677, 679, 682, 684, 685, 700, 710, 712, 716, 722, 730, 739, 761, 763, 766, 770, 774, 776, 777, 780, 789, 790, 801, 872, 887, 899, 910, 916, 917, 919, 920, 921, 922, 923, 933, 949, 955, 956, 958, 959, 960, 961, 962, 972, 988, 993, 994, 996, 997, 998, 999, 1000, 1010, 1026, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1048, 1064, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1088, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1127, 1143, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1166, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1204, 1220, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1242, 1681, 1684, 1695, 1698, 1703, 1704, 1709, 1713, 1718, 1719, 1777, 1874, 1875, 1876], "built": [2, 5, 7, 20, 25, 626, 1506, 1568], "deriv": [2, 22, 519], "arbitrari": [2, 26, 27, 770, 790, 988, 1026, 1220, 1832, 1860], "throat": [2, 4, 6, 7, 11, 12, 14, 15, 16, 18, 20, 22, 25, 26, 31, 32, 33, 34, 38, 39, 44, 47, 48, 51, 53, 56, 57, 58, 61, 68, 69, 72, 73, 76, 79, 80, 83, 85, 88, 89, 91, 94, 95, 98, 99, 100, 103, 106, 107, 110, 112, 116, 117, 122, 126, 127, 130, 131, 136, 139, 140, 143, 145, 148, 149, 150, 153, 159, 160, 163, 164, 169, 172, 173, 176, 178, 181, 182, 183, 186, 192, 193, 196, 197, 198, 201, 204, 205, 208, 210, 214, 215, 220, 224, 225, 228, 229, 234, 237, 238, 241, 243, 246, 247, 248, 251, 257, 258, 261, 262, 267, 270, 271, 274, 276, 279, 280, 281, 284, 290, 291, 294, 295, 300, 303, 304, 307, 309, 312, 313, 314, 317, 323, 324, 327, 328, 333, 336, 337, 340, 342, 345, 346, 347, 350, 357, 358, 361, 362, 367, 370, 371, 374, 376, 379, 380, 381, 384, 390, 391, 394, 395, 400, 403, 404, 407, 409, 412, 413, 414, 417, 423, 424, 427, 428, 433, 436, 437, 440, 442, 445, 446, 447, 450, 455, 456, 460, 464, 466, 469, 470, 473, 475, 478, 479, 483, 484, 487, 488, 491, 492, 495, 498, 499, 502, 504, 507, 508, 511, 514, 515, 518, 519, 520, 521, 525, 526, 531, 533, 534, 537, 540, 542, 545, 546, 549, 551, 554, 555, 558, 561, 562, 566, 567, 569, 570, 571, 614, 615, 619, 622, 626, 628, 629, 631, 638, 639, 640, 641, 642, 643, 644, 650, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 711, 718, 719, 720, 721, 725, 729, 730, 732, 734, 735, 736, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 761, 763, 764, 766, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 780, 788, 793, 799, 811, 813, 814, 815, 816, 818, 838, 847, 872, 874, 875, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 907, 908, 910, 914, 916, 917, 918, 919, 920, 923, 926, 927, 929, 932, 935, 938, 939, 942, 945, 946, 949, 953, 955, 956, 957, 958, 959, 962, 965, 966, 968, 971, 974, 977, 978, 981, 984, 985, 988, 991, 993, 994, 995, 996, 997, 1000, 1003, 1004, 1006, 1009, 1012, 1015, 1016, 1019, 1022, 1023, 1026, 1029, 1031, 1032, 1033, 1034, 1035, 1038, 1041, 1042, 1044, 1047, 1050, 1053, 1054, 1057, 1060, 1061, 1064, 1067, 1069, 1070, 1071, 1072, 1073, 1076, 1078, 1081, 1082, 1084, 1087, 1090, 1093, 1094, 1097, 1100, 1101, 1104, 1108, 1110, 1111, 1112, 1113, 1114, 1117, 1120, 1121, 1123, 1126, 1129, 1132, 1133, 1136, 1139, 1140, 1143, 1147, 1149, 1150, 1151, 1152, 1153, 1156, 1159, 1160, 1162, 1165, 1168, 1171, 1172, 1175, 1178, 1179, 1182, 1185, 1187, 1188, 1189, 1190, 1191, 1194, 1197, 1198, 1200, 1203, 1206, 1209, 1210, 1213, 1216, 1217, 1220, 1223, 1225, 1226, 1227, 1228, 1229, 1232, 1235, 1236, 1238, 1241, 1244, 1247, 1248, 1251, 1254, 1255, 1259, 1262, 1264, 1267, 1268, 1271, 1273, 1276, 1277, 1280, 1283, 1284, 1287, 1292, 1294, 1298, 1300, 1303, 1305, 1308, 1309, 1313, 1316, 1317, 1321, 1326, 1328, 1332, 1334, 1337, 1339, 1342, 1343, 1347, 1350, 1351, 1355, 1360, 1362, 1366, 1368, 1371, 1373, 1376, 1377, 1381, 1384, 1385, 1389, 1392, 1394, 1397, 1398, 1401, 1403, 1406, 1407, 1410, 1413, 1414, 1417, 1422, 1424, 1428, 1430, 1433, 1435, 1438, 1439, 1443, 1446, 1447, 1450, 1453, 1455, 1458, 1459, 1462, 1464, 1467, 1468, 1471, 1474, 1475, 1478, 1481, 1483, 1486, 1487, 1490, 1492, 1495, 1496, 1499, 1502, 1503, 1506, 1509, 1511, 1514, 1515, 1518, 1520, 1523, 1524, 1527, 1530, 1531, 1534, 1539, 1541, 1545, 1547, 1550, 1552, 1555, 1556, 1560, 1563, 1564, 1568, 1571, 1573, 1576, 1577, 1580, 1582, 1585, 1586, 1589, 1592, 1593, 1596, 1601, 1603, 1607, 1609, 1612, 1614, 1617, 1618, 1622, 1625, 1626, 1630, 1633, 1635, 1638, 1639, 1642, 1644, 1647, 1648, 1651, 1654, 1655, 1677, 1680, 1684, 1686, 1690, 1711, 1712, 1717, 1721, 1857, 1858, 1867, 1873, 1874, 1875, 1876, 1877, 1878, 1879], "element": [2, 16, 20, 25, 27, 29, 30, 32, 33, 51, 57, 83, 89, 110, 117, 143, 149, 176, 182, 208, 215, 241, 247, 274, 280, 307, 313, 340, 346, 374, 380, 407, 413, 440, 446, 473, 479, 502, 508, 531, 549, 555, 567, 610, 626, 629, 638, 639, 640, 641, 642, 643, 644, 667, 682, 697, 707, 708, 715, 765, 785, 793, 796, 798, 800, 893, 894, 916, 920, 932, 933, 939, 955, 959, 971, 972, 978, 993, 997, 1009, 1010, 1016, 1031, 1035, 1047, 1048, 1054, 1069, 1073, 1087, 1088, 1094, 1110, 1114, 1126, 1127, 1133, 1149, 1153, 1165, 1166, 1172, 1187, 1191, 1203, 1204, 1210, 1225, 1229, 1241, 1242, 1248, 1271, 1277, 1303, 1309, 1337, 1343, 1371, 1377, 1401, 1407, 1433, 1439, 1462, 1468, 1490, 1496, 1518, 1524, 1550, 1556, 1580, 1586, 1612, 1618, 1642, 1648, 1678, 1680, 1688, 1716, 1794, 1800, 1807, 1812, 1818, 1820, 1821, 1822, 1824, 1825, 1826, 1827, 1832, 1833, 1834, 1836], "tutori": [3, 9, 18, 25, 26, 27, 29, 30, 31, 1879], "exampl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 25, 26, 29, 31, 34, 712, 714, 716, 763, 764, 766, 789, 790, 794, 801, 899, 916, 917, 919, 920, 921, 922, 923, 933, 955, 956, 958, 959, 960, 961, 962, 972, 993, 994, 996, 997, 998, 999, 1000, 1010, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1048, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1088, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1127, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1166, 1182, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1204, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1242, 1680, 1717, 1731, 1733, 1744, 1746, 1777, 1789, 1864, 1875, 1876], "explain": [4, 10, 14, 18, 20, 22, 27, 29, 31, 1876], "permeabilti": 4, "note": [4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 51, 52, 53, 56, 60, 62, 64, 68, 83, 84, 85, 88, 90, 94, 99, 110, 111, 112, 116, 120, 126, 130, 143, 144, 145, 148, 152, 155, 159, 176, 177, 178, 181, 185, 188, 192, 196, 197, 208, 209, 210, 214, 218, 224, 241, 242, 243, 246, 250, 253, 257, 261, 274, 275, 276, 279, 283, 286, 290, 307, 308, 309, 312, 316, 319, 323, 340, 341, 342, 345, 349, 351, 353, 357, 374, 375, 376, 379, 383, 386, 390, 394, 407, 408, 409, 412, 416, 419, 423, 440, 441, 442, 445, 449, 455, 460, 461, 462, 473, 474, 475, 478, 487, 502, 503, 504, 507, 510, 514, 518, 533, 538, 539, 549, 550, 551, 554, 556, 561, 567, 568, 569, 570, 590, 602, 603, 604, 614, 615, 616, 618, 619, 625, 626, 632, 634, 657, 662, 665, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 705, 708, 713, 716, 718, 720, 766, 773, 775, 776, 777, 778, 779, 780, 784, 796, 801, 813, 820, 824, 827, 834, 843, 845, 847, 851, 858, 860, 862, 869, 872, 874, 875, 882, 883, 890, 891, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 910, 912, 913, 916, 917, 920, 922, 923, 926, 928, 932, 933, 934, 935, 938, 940, 945, 949, 951, 952, 955, 956, 959, 961, 962, 965, 967, 971, 972, 973, 974, 977, 979, 984, 988, 989, 990, 993, 994, 997, 999, 1000, 1003, 1005, 1009, 1010, 1011, 1012, 1015, 1017, 1022, 1026, 1027, 1028, 1031, 1032, 1035, 1037, 1038, 1041, 1043, 1047, 1048, 1049, 1050, 1053, 1055, 1060, 1064, 1065, 1066, 1069, 1070, 1073, 1075, 1076, 1077, 1078, 1081, 1083, 1087, 1088, 1089, 1090, 1093, 1095, 1100, 1106, 1107, 1110, 1111, 1114, 1116, 1117, 1120, 1122, 1126, 1127, 1128, 1129, 1132, 1134, 1139, 1143, 1145, 1146, 1149, 1150, 1153, 1155, 1156, 1159, 1161, 1165, 1166, 1167, 1168, 1171, 1173, 1178, 1183, 1184, 1187, 1188, 1191, 1193, 1194, 1197, 1199, 1203, 1204, 1205, 1206, 1209, 1211, 1216, 1220, 1221, 1222, 1225, 1226, 1229, 1231, 1232, 1235, 1237, 1241, 1242, 1243, 1244, 1247, 1249, 1254, 1260, 1261, 1271, 1272, 1273, 1276, 1278, 1283, 1288, 1289, 1290, 1303, 1304, 1305, 1308, 1310, 1311, 1316, 1320, 1322, 1323, 1324, 1337, 1338, 1339, 1342, 1344, 1345, 1350, 1354, 1356, 1357, 1358, 1371, 1372, 1373, 1376, 1378, 1379, 1384, 1388, 1390, 1391, 1401, 1402, 1403, 1406, 1408, 1413, 1418, 1419, 1420, 1433, 1434, 1435, 1438, 1440, 1441, 1446, 1451, 1452, 1462, 1463, 1464, 1467, 1469, 1474, 1479, 1480, 1490, 1491, 1492, 1495, 1497, 1502, 1507, 1508, 1518, 1519, 1520, 1523, 1525, 1530, 1535, 1536, 1537, 1550, 1551, 1552, 1555, 1557, 1558, 1563, 1567, 1569, 1570, 1580, 1581, 1582, 1585, 1587, 1592, 1597, 1598, 1599, 1612, 1613, 1614, 1617, 1619, 1620, 1625, 1629, 1631, 1632, 1642, 1643, 1644, 1647, 1649, 1654, 1665, 1666, 1678, 1680, 1682, 1684, 1687, 1688, 1691, 1692, 1693, 1694, 1695, 1703, 1711, 1712, 1715, 1716, 1717, 1722, 1729, 1740, 1803, 1838, 1847, 1852, 1853, 1858, 1862, 1863, 1874, 1875, 1876, 1878], "calcualt": [4, 820], "an": [4, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 50, 60, 64, 68, 71, 72, 79, 80, 82, 90, 94, 97, 106, 107, 109, 119, 120, 121, 123, 126, 129, 130, 139, 140, 142, 152, 155, 159, 162, 172, 173, 175, 185, 188, 192, 195, 197, 204, 205, 207, 218, 219, 221, 224, 227, 237, 238, 240, 250, 253, 257, 260, 261, 270, 271, 273, 283, 286, 290, 293, 303, 304, 306, 316, 319, 323, 326, 336, 337, 339, 348, 349, 353, 357, 360, 370, 371, 373, 382, 383, 386, 390, 393, 403, 404, 406, 415, 416, 419, 423, 426, 427, 436, 437, 439, 449, 455, 458, 460, 469, 470, 472, 487, 490, 498, 499, 501, 509, 510, 514, 517, 519, 520, 525, 526, 528, 533, 536, 545, 546, 548, 561, 564, 585, 586, 590, 600, 613, 614, 615, 617, 618, 625, 626, 627, 628, 629, 630, 631, 632, 707, 708, 712, 715, 729, 738, 763, 765, 770, 773, 781, 784, 789, 790, 798, 799, 805, 812, 813, 820, 823, 824, 841, 842, 843, 844, 864, 867, 868, 874, 890, 893, 894, 916, 917, 920, 921, 922, 927, 929, 931, 933, 945, 948, 955, 956, 959, 960, 961, 966, 968, 970, 972, 984, 987, 988, 993, 994, 997, 998, 999, 1004, 1006, 1008, 1010, 1022, 1025, 1026, 1031, 1032, 1035, 1036, 1037, 1042, 1044, 1046, 1048, 1060, 1063, 1064, 1069, 1070, 1073, 1074, 1075, 1082, 1084, 1086, 1088, 1100, 1103, 1110, 1111, 1114, 1115, 1116, 1121, 1123, 1125, 1127, 1139, 1142, 1149, 1150, 1153, 1154, 1155, 1160, 1162, 1164, 1166, 1178, 1181, 1182, 1187, 1188, 1191, 1192, 1193, 1198, 1200, 1202, 1204, 1216, 1219, 1220, 1225, 1226, 1229, 1230, 1231, 1236, 1238, 1240, 1242, 1254, 1257, 1259, 1267, 1268, 1270, 1283, 1286, 1288, 1291, 1298, 1299, 1300, 1302, 1316, 1319, 1322, 1325, 1332, 1333, 1334, 1336, 1350, 1353, 1356, 1359, 1366, 1367, 1368, 1370, 1384, 1387, 1397, 1398, 1400, 1413, 1416, 1417, 1418, 1421, 1428, 1429, 1430, 1432, 1446, 1449, 1450, 1458, 1459, 1461, 1474, 1477, 1486, 1487, 1489, 1502, 1505, 1514, 1515, 1517, 1530, 1533, 1534, 1535, 1538, 1545, 1546, 1547, 1549, 1563, 1566, 1576, 1577, 1579, 1592, 1595, 1596, 1597, 1600, 1607, 1608, 1609, 1611, 1625, 1628, 1630, 1638, 1639, 1641, 1654, 1657, 1666, 1677, 1678, 1683, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1698, 1699, 1703, 1704, 1709, 1716, 1718, 1719, 1722, 1727, 1731, 1733, 1740, 1746, 1749, 1762, 1776, 1788, 1801, 1821, 1826, 1832, 1833, 1842, 1849, 1856, 1857, 1868, 1869, 1870, 1875, 1876, 1878], "extract": [4, 7, 8, 9, 11, 18, 23, 26, 27, 29, 30, 34, 461, 538, 602, 614, 615, 617, 618, 872, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1736, 1738, 1740, 1742, 1744, 1746, 1853], "from": [4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 22, 23, 26, 27, 28, 30, 31, 33, 34, 39, 45, 60, 61, 64, 70, 73, 77, 90, 91, 96, 100, 104, 120, 121, 122, 123, 128, 131, 137, 152, 153, 155, 161, 164, 170, 185, 186, 188, 194, 198, 202, 218, 219, 220, 221, 226, 229, 235, 250, 251, 253, 259, 262, 268, 283, 284, 286, 292, 295, 301, 316, 317, 319, 325, 328, 334, 349, 350, 353, 359, 362, 368, 383, 384, 386, 392, 395, 401, 416, 417, 419, 425, 428, 434, 449, 450, 457, 459, 464, 467, 483, 489, 492, 496, 510, 511, 516, 519, 521, 523, 535, 537, 540, 543, 558, 563, 571, 575, 577, 584, 586, 587, 592, 599, 612, 614, 615, 616, 618, 619, 626, 629, 630, 634, 710, 711, 712, 714, 716, 722, 723, 724, 726, 727, 761, 763, 764, 766, 773, 777, 778, 785, 788, 789, 794, 801, 818, 826, 831, 834, 838, 841, 844, 845, 860, 891, 894, 899, 911, 914, 924, 942, 947, 949, 950, 953, 963, 981, 986, 988, 991, 1001, 1019, 1024, 1029, 1039, 1057, 1062, 1067, 1077, 1078, 1079, 1097, 1102, 1105, 1108, 1118, 1136, 1141, 1144, 1147, 1157, 1175, 1180, 1185, 1195, 1213, 1218, 1223, 1233, 1251, 1256, 1262, 1265, 1280, 1285, 1292, 1295, 1297, 1311, 1313, 1318, 1326, 1329, 1331, 1345, 1347, 1352, 1360, 1363, 1365, 1379, 1381, 1386, 1392, 1395, 1410, 1415, 1422, 1425, 1427, 1441, 1443, 1448, 1453, 1456, 1471, 1476, 1478, 1481, 1484, 1499, 1504, 1509, 1512, 1527, 1532, 1534, 1539, 1542, 1544, 1558, 1560, 1565, 1571, 1574, 1589, 1594, 1596, 1601, 1604, 1606, 1620, 1622, 1627, 1633, 1636, 1651, 1656, 1666, 1677, 1681, 1683, 1684, 1692, 1703, 1712, 1720, 1721, 1722, 1723, 1726, 1729, 1731, 1733, 1736, 1738, 1740, 1742, 1744, 1746, 1752, 1754, 1761, 1764, 1766, 1775, 1777, 1778, 1780, 1787, 1789, 1791, 1794, 1809, 1812, 1822, 1825, 1826, 1833, 1838, 1839, 1840, 1843, 1847, 1848, 1855, 1858, 1859, 1864, 1874, 1876, 1878], "porespi": [4, 7, 8, 9, 10, 617], "similar": [4, 6, 7, 8, 10, 11, 12, 23, 29, 31, 33, 730], "algorithm": [4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 22, 23, 34, 38, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 118, 120, 130, 151, 152, 163, 184, 185, 196, 217, 218, 228, 249, 250, 261, 282, 283, 294, 315, 316, 327, 348, 349, 361, 382, 383, 394, 415, 416, 427, 448, 449, 491, 509, 510, 519, 537, 614, 845, 894, 896, 897, 1693, 1801, 1852, 1866], "import": [4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 613, 712, 714, 716, 763, 764, 766, 773, 789, 790, 794, 801, 887, 899, 916, 917, 919, 920, 921, 922, 923, 933, 955, 956, 958, 959, 960, 961, 962, 972, 993, 994, 996, 997, 998, 999, 1000, 1010, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1048, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1088, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1127, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1166, 1182, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1204, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1242, 1724, 1744, 1746, 1777, 1789, 1864, 1875, 1876, 1878], "numpi": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 56, 59, 67, 88, 93, 116, 125, 148, 151, 158, 181, 184, 191, 214, 223, 246, 249, 256, 279, 282, 289, 312, 315, 322, 345, 348, 356, 379, 382, 389, 412, 415, 422, 445, 448, 454, 478, 486, 507, 509, 513, 554, 560, 570, 572, 610, 704, 707, 708, 712, 713, 714, 715, 716, 720, 726, 732, 750, 755, 761, 763, 764, 765, 766, 769, 773, 776, 789, 790, 794, 798, 801, 807, 826, 847, 849, 850, 851, 857, 858, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 894, 899, 907, 908, 920, 922, 938, 944, 959, 961, 977, 983, 997, 999, 1015, 1021, 1035, 1037, 1053, 1059, 1073, 1075, 1093, 1099, 1114, 1116, 1132, 1138, 1153, 1155, 1171, 1177, 1182, 1191, 1193, 1209, 1215, 1229, 1231, 1247, 1253, 1276, 1282, 1308, 1315, 1342, 1349, 1376, 1383, 1406, 1412, 1438, 1445, 1467, 1473, 1495, 1501, 1523, 1529, 1555, 1562, 1585, 1591, 1617, 1624, 1647, 1653, 1666, 1687, 1691, 1692, 1700, 1718, 1719, 1740, 1777, 1859, 1862, 1863, 1864, 1871], "np": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 52, 56, 60, 68, 69, 72, 84, 88, 90, 94, 95, 98, 99, 111, 116, 120, 126, 127, 130, 144, 148, 152, 159, 160, 163, 177, 181, 185, 192, 193, 196, 209, 214, 218, 224, 225, 228, 242, 246, 250, 257, 258, 261, 275, 279, 283, 290, 291, 294, 308, 312, 316, 323, 324, 327, 341, 345, 349, 357, 358, 361, 375, 379, 383, 390, 391, 394, 408, 412, 416, 423, 424, 427, 441, 445, 449, 455, 456, 460, 461, 474, 478, 487, 488, 491, 503, 507, 510, 514, 515, 520, 533, 534, 537, 538, 550, 554, 561, 562, 568, 570, 602, 708, 712, 763, 789, 790, 805, 807, 864, 868, 899, 910, 912, 916, 917, 933, 934, 938, 945, 946, 949, 951, 955, 956, 972, 973, 977, 984, 985, 988, 989, 993, 994, 1010, 1011, 1015, 1022, 1023, 1026, 1027, 1031, 1032, 1048, 1049, 1053, 1060, 1061, 1064, 1065, 1069, 1070, 1088, 1089, 1093, 1100, 1101, 1104, 1106, 1110, 1111, 1127, 1128, 1132, 1139, 1140, 1143, 1145, 1149, 1150, 1166, 1167, 1171, 1178, 1179, 1182, 1183, 1187, 1188, 1204, 1205, 1209, 1216, 1217, 1220, 1221, 1225, 1226, 1242, 1243, 1247, 1254, 1255, 1259, 1260, 1272, 1276, 1283, 1284, 1287, 1288, 1289, 1304, 1308, 1316, 1317, 1321, 1322, 1323, 1338, 1342, 1350, 1351, 1355, 1356, 1357, 1372, 1376, 1384, 1385, 1389, 1390, 1402, 1406, 1413, 1414, 1417, 1418, 1419, 1434, 1438, 1446, 1447, 1450, 1451, 1463, 1467, 1474, 1475, 1478, 1479, 1491, 1495, 1502, 1503, 1506, 1507, 1519, 1523, 1530, 1531, 1534, 1535, 1536, 1551, 1555, 1563, 1564, 1568, 1569, 1581, 1585, 1592, 1593, 1596, 1597, 1598, 1613, 1617, 1625, 1626, 1630, 1631, 1643, 1647, 1654, 1655, 1665, 1686, 1690, 1700, 1864], "op": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 712, 763, 789, 790, 899, 916, 917, 919, 920, 921, 922, 923, 933, 955, 956, 958, 959, 960, 961, 962, 972, 993, 994, 996, 997, 998, 999, 1000, 1010, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1048, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1088, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1127, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1166, 1182, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1204, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1242, 1712, 1875, 1876], "set_mpl_styl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34], "seed": [4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 18, 21, 26, 27, 29, 30, 32, 33, 34, 638, 639, 640, 641, 642, 643, 644, 707, 708, 712, 714, 715, 716, 758, 759, 763, 764, 765, 766, 789, 794, 798, 801], "matplotlib": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 21, 26, 28, 29, 30, 33, 34, 591, 712, 714, 716, 763, 764, 766, 789, 794, 801, 1875, 1876, 1877, 1881], "inlin": [4, 6, 7, 8, 10, 11, 12, 21, 34], "set_printopt": [4, 6, 7, 8, 9, 10, 11, 12, 21], "precis": [4, 6, 7, 8, 9, 10, 11, 12, 21], "5": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 615, 638, 639, 640, 641, 642, 643, 644, 650, 680, 695, 713, 716, 766, 790, 801, 820, 830, 862, 869, 896, 897, 898, 899, 901, 902, 903, 916, 917, 919, 920, 921, 922, 923, 933, 955, 956, 958, 959, 960, 961, 962, 972, 993, 994, 996, 997, 998, 999, 1000, 1010, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1048, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1088, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1127, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1166, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1204, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1242, 1680, 1864, 1878], "pn": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 712, 763, 789, 790, 796, 899, 916, 917, 919, 920, 921, 922, 923, 933, 955, 956, 958, 959, 960, 961, 962, 972, 993, 994, 996, 997, 998, 999, 1000, 1010, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1048, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1088, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1127, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1166, 1182, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1204, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1242, 1875, 1876], "15": [4, 5, 7, 8, 9, 10, 11, 12, 14, 18, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34], "space": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 21, 26, 27, 29, 30, 32, 33, 34, 130, 614, 872, 899, 910, 911, 949, 950, 988, 1105, 1143, 1144, 1699, 1749], "1e": [4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 21, 22, 26, 29, 32, 33, 34, 609, 807, 812, 893, 1663, 1665, 1669, 1671, 1865], "6": [4, 5, 7, 8, 9, 10, 11, 12, 14, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 647, 650, 893, 896, 897, 898, 901, 922, 933, 949, 961, 972, 999, 1010, 1037, 1048, 1075, 1088, 1116, 1127, 1155, 1166, 1193, 1204, 1231, 1242, 1694, 1713], "add_model_collect": [4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 21, 29, 34], "collect": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 21, 34, 462, 539, 603, 913, 952, 990, 1028, 1066, 1107, 1146, 1184, 1222, 1261, 1290, 1324, 1358, 1391, 1420, 1452, 1480, 1508, 1537, 1570, 1599, 1632], "geometri": [4, 6, 8, 9, 10, 11, 12, 14, 20, 21, 23, 29, 30, 34, 519, 619, 712, 713, 763, 789, 1064, 1677], "spheres_and_cylind": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 21, 23, 29, 34], "regenerate_model": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 21, 29, 31, 34, 461, 519, 538, 602, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631], "It": [4, 5, 7, 9, 11, 13, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 60, 90, 120, 152, 185, 197, 218, 250, 283, 316, 349, 383, 416, 449, 480, 510, 601, 614, 708, 820, 1026, 1220, 1703, 1712, 1718, 1719, 1728, 1730, 1732, 1734, 1737, 1739, 1741, 1743, 1745, 1747, 1748, 1750, 1838, 1858, 1878], "assum": [4, 6, 7, 9, 10, 11, 12, 23, 25, 26, 28, 29, 30, 32, 33, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 460, 510, 518, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 708, 710, 713, 718, 719, 720, 721, 722, 723, 724, 726, 727, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 761, 820, 845, 872, 874, 875, 896, 897, 899, 916, 949, 955, 988, 993, 1031, 1069, 1078, 1110, 1149, 1187, 1225, 1676, 1681, 1704, 1709], "flowsthrough": 4, "porou": [4, 6, 7, 8, 9, 11, 12, 23, 26, 33, 35, 130, 1882], "medium": [4, 6, 8, 11, 12, 23, 893], "As": [4, 11, 12, 14, 15, 16, 18, 21, 22, 23, 27, 29, 30, 31, 32, 34, 820], "fluid": [4, 6, 7, 9, 11, 12, 20, 23, 32, 33, 99, 121, 123, 196, 219, 221, 872, 894], "ani": [4, 5, 7, 8, 9, 17, 18, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 36, 44, 51, 52, 53, 56, 60, 67, 76, 83, 84, 85, 88, 90, 93, 103, 110, 111, 112, 116, 120, 121, 123, 125, 136, 143, 144, 145, 148, 152, 158, 169, 176, 177, 178, 181, 185, 191, 201, 208, 209, 210, 214, 218, 219, 221, 223, 234, 241, 242, 243, 246, 250, 256, 267, 274, 275, 276, 279, 283, 289, 300, 307, 308, 309, 312, 316, 322, 333, 340, 341, 342, 345, 349, 356, 367, 374, 375, 376, 379, 383, 389, 400, 407, 408, 409, 412, 416, 422, 433, 440, 441, 442, 445, 449, 454, 466, 473, 474, 475, 478, 484, 486, 495, 502, 503, 504, 507, 510, 513, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 615, 625, 626, 629, 634, 713, 790, 812, 813, 814, 815, 816, 818, 820, 893, 918, 919, 922, 923, 932, 933, 934, 935, 938, 944, 949, 957, 958, 961, 962, 971, 972, 973, 974, 977, 983, 995, 996, 999, 1000, 1009, 1010, 1011, 1012, 1015, 1021, 1033, 1034, 1037, 1038, 1047, 1048, 1049, 1050, 1053, 1059, 1071, 1072, 1075, 1076, 1087, 1088, 1089, 1090, 1093, 1099, 1112, 1113, 1116, 1117, 1126, 1127, 1128, 1129, 1132, 1138, 1151, 1152, 1155, 1156, 1165, 1166, 1167, 1168, 1171, 1177, 1189, 1190, 1193, 1194, 1203, 1204, 1205, 1206, 1209, 1215, 1227, 1228, 1231, 1232, 1241, 1242, 1243, 1244, 1247, 1253, 1264, 1271, 1272, 1273, 1276, 1282, 1294, 1303, 1304, 1305, 1308, 1315, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1394, 1401, 1402, 1403, 1406, 1412, 1424, 1433, 1434, 1435, 1438, 1445, 1450, 1455, 1462, 1463, 1464, 1467, 1473, 1483, 1490, 1491, 1492, 1495, 1501, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1603, 1612, 1613, 1614, 1617, 1624, 1635, 1642, 1643, 1644, 1647, 1653, 1678, 1682, 1687, 1690, 1691, 1692, 1694, 1710, 1711, 1715, 1722, 1801, 1840, 1847, 1862, 1863, 1868, 1869], "other": [4, 5, 6, 7, 9, 10, 11, 12, 17, 18, 23, 25, 27, 29, 31, 32, 33, 34, 60, 62, 90, 120, 121, 123, 152, 185, 218, 219, 221, 250, 283, 316, 349, 351, 383, 416, 449, 461, 510, 519, 538, 602, 610, 611, 625, 626, 631, 633, 634, 707, 711, 712, 714, 715, 716, 759, 762, 763, 764, 765, 766, 781, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 807, 813, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 911, 912, 921, 926, 928, 950, 951, 960, 965, 967, 988, 989, 998, 1003, 1005, 1027, 1036, 1041, 1043, 1065, 1074, 1081, 1083, 1105, 1106, 1115, 1120, 1122, 1143, 1144, 1145, 1154, 1159, 1161, 1183, 1192, 1197, 1199, 1221, 1230, 1235, 1237, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1679, 1683, 1702, 1710, 1715, 1717, 1740, 1801, 1824, 1837, 1858, 1875, 1876], "viscos": [4, 6, 12, 14, 21, 23, 31, 647, 650, 651, 820, 831, 853, 864, 865, 866, 867, 868, 869, 885, 886, 887, 1297, 1299, 1331, 1333, 1365, 1367, 1427, 1429, 1544, 1546, 1606, 1608, 1861, 1862, 1863], "found": [4, 5, 6, 9, 10, 11, 12, 14, 17, 23, 25, 26, 27, 28, 29, 30, 32, 33, 581, 596, 711, 778, 779, 788, 812, 860, 919, 920, 921, 922, 923, 933, 958, 959, 960, 961, 962, 972, 996, 997, 998, 999, 1000, 1010, 1034, 1035, 1036, 1037, 1038, 1048, 1072, 1073, 1074, 1075, 1076, 1077, 1088, 1113, 1114, 1115, 1116, 1117, 1127, 1152, 1153, 1154, 1155, 1156, 1166, 1190, 1191, 1192, 1193, 1194, 1204, 1228, 1229, 1230, 1231, 1232, 1242, 1666, 1677, 1687, 1691, 1692, 1693, 1694, 1709, 1722, 1758, 1770, 1784, 1850], "To": [4, 5, 6, 7, 8, 9, 11, 12, 21, 23, 25, 28, 29, 31, 32, 33, 34, 36, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 507, 554, 570, 625, 926, 928, 938, 965, 967, 977, 1003, 1005, 1015, 1041, 1043, 1053, 1081, 1083, 1093, 1120, 1122, 1132, 1159, 1161, 1171, 1197, 1199, 1209, 1235, 1237, 1247, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647, 1695, 1717, 1744, 1746, 1875, 1876], "hydraul": [4, 12, 32, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 872, 880, 885, 886, 887], "must": [4, 6, 7, 9, 11, 12, 16, 20, 23, 25, 28, 29, 30, 31, 33, 63, 65, 68, 94, 126, 154, 156, 159, 187, 189, 192, 197, 221, 224, 252, 254, 257, 285, 287, 290, 318, 320, 323, 352, 354, 357, 385, 387, 390, 394, 418, 420, 423, 451, 452, 455, 487, 514, 533, 561, 618, 630, 633, 796, 820, 827, 851, 858, 862, 869, 896, 897, 899, 911, 920, 945, 959, 984, 997, 1022, 1035, 1060, 1073, 1100, 1114, 1139, 1144, 1153, 1178, 1191, 1216, 1229, 1254, 1283, 1316, 1350, 1384, 1413, 1446, 1450, 1474, 1478, 1502, 1530, 1563, 1592, 1625, 1654, 1665, 1676, 1684, 1688, 1703, 1714, 1715, 1722, 1729, 1740, 1833, 1859], "here": [4, 5, 6, 7, 9, 11, 12, 16, 17, 25, 26, 27, 28, 29, 30, 31, 34, 616, 773, 847, 896, 897, 933, 972, 1010, 1048, 1088, 1127, 1166, 1204, 1242, 1666, 1736, 1738, 1876], "basic": [4, 7, 8, 9, 11, 12, 16, 17, 25, 26, 27, 28, 31, 34, 348, 382, 415, 509, 708, 842, 867, 875, 1299, 1333, 1367, 1429, 1546, 1608, 1857], "includ": [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 51, 52, 53, 56, 60, 76, 83, 84, 85, 88, 90, 103, 110, 111, 112, 116, 120, 121, 123, 136, 143, 144, 145, 148, 152, 169, 176, 177, 178, 181, 185, 201, 208, 209, 210, 214, 218, 219, 221, 234, 241, 242, 243, 246, 250, 267, 274, 275, 276, 279, 283, 300, 307, 308, 309, 312, 316, 333, 340, 341, 342, 345, 349, 367, 374, 375, 376, 379, 383, 400, 407, 408, 409, 412, 416, 433, 440, 441, 442, 445, 449, 459, 466, 473, 474, 475, 478, 480, 495, 502, 503, 504, 507, 510, 542, 549, 550, 551, 554, 566, 567, 568, 569, 570, 630, 634, 820, 870, 918, 921, 922, 932, 934, 935, 938, 957, 960, 961, 971, 973, 974, 977, 995, 998, 999, 1009, 1011, 1012, 1015, 1033, 1036, 1037, 1047, 1049, 1050, 1053, 1071, 1074, 1075, 1087, 1089, 1090, 1093, 1112, 1115, 1116, 1126, 1128, 1129, 1132, 1151, 1154, 1155, 1165, 1167, 1168, 1171, 1189, 1192, 1193, 1203, 1205, 1206, 1209, 1227, 1230, 1231, 1241, 1243, 1244, 1247, 1264, 1271, 1272, 1273, 1276, 1294, 1303, 1304, 1305, 1308, 1328, 1337, 1338, 1339, 1342, 1362, 1371, 1372, 1373, 1376, 1394, 1401, 1402, 1403, 1406, 1424, 1433, 1434, 1435, 1438, 1455, 1462, 1463, 1464, 1467, 1483, 1490, 1491, 1492, 1495, 1511, 1518, 1519, 1520, 1523, 1541, 1550, 1551, 1552, 1555, 1573, 1580, 1581, 1582, 1585, 1603, 1612, 1613, 1614, 1617, 1635, 1642, 1643, 1644, 1647, 1693, 1847, 1852, 1868, 1869], "generic_hydraul": [4, 14, 18, 32, 653, 654], "1": [4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 99, 197, 482, 484, 614, 615, 633, 647, 650, 657, 658, 660, 663, 667, 673, 682, 683, 688, 697, 698, 707, 708, 715, 716, 730, 759, 765, 766, 785, 795, 797, 798, 801, 813, 820, 827, 830, 842, 843, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 874, 882, 883, 887, 890, 891, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 911, 916, 917, 919, 920, 921, 922, 923, 926, 933, 949, 950, 955, 956, 958, 959, 960, 961, 962, 965, 972, 988, 993, 994, 996, 997, 998, 999, 1000, 1003, 1010, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1041, 1048, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1081, 1088, 1105, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1120, 1127, 1144, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1159, 1166, 1182, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1197, 1204, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1235, 1242, 1299, 1333, 1367, 1429, 1546, 1608, 1676, 1677, 1678, 1680, 1681, 1682, 1686, 1693, 1700, 1703, 1711, 1715, 1716, 1718, 1719, 1720, 1722, 1723, 1740, 1744, 1746, 1777, 1789, 1797, 1815, 1864, 1874, 1875, 1876, 1877, 1878], "0": [4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 62, 68, 94, 99, 126, 159, 192, 196, 224, 257, 290, 323, 351, 357, 390, 423, 455, 463, 487, 514, 533, 561, 615, 626, 633, 638, 639, 640, 641, 642, 643, 644, 647, 650, 651, 707, 708, 712, 713, 714, 715, 716, 759, 763, 764, 765, 766, 783, 785, 789, 794, 795, 796, 797, 798, 801, 827, 843, 845, 851, 858, 862, 869, 890, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 916, 917, 919, 920, 921, 922, 923, 933, 945, 955, 956, 958, 959, 960, 961, 962, 972, 984, 993, 994, 996, 997, 998, 999, 1000, 1010, 1022, 1026, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1048, 1060, 1064, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1088, 1100, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1127, 1139, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1166, 1178, 1182, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1204, 1216, 1220, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1242, 1254, 1283, 1316, 1350, 1384, 1413, 1446, 1474, 1502, 1530, 1563, 1592, 1625, 1654, 1676, 1677, 1680, 1695, 1703, 1704, 1709, 1713, 1714, 1715, 1718, 1719, 1728, 1730, 1732, 1734, 1737, 1739, 1741, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1795, 1813, 1864, 1874, 1875, 1876, 1877, 1878], "physic": [4, 6, 8, 11, 12, 14, 16, 18, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 509, 519, 845, 872, 899], "03": [4, 6, 8, 31, 34], "41": [4, 6, 8, 9, 26, 33], "24": [4, 9, 26, 30, 33, 896, 897], "warn": [4, 5, 6, 8, 34, 633, 1727, 1749, 1864], "entry_pressur": [4, 7, 9, 14, 33, 34, 653, 654], "wa": [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 22, 27, 28, 29, 30, 31, 32, 33, 34, 68, 69, 94, 95, 126, 127, 159, 160, 192, 193, 224, 225, 257, 258, 290, 291, 323, 324, 357, 358, 390, 391, 423, 424, 455, 456, 461, 487, 488, 514, 515, 519, 533, 534, 538, 561, 562, 602, 614, 631, 779, 912, 945, 946, 951, 984, 985, 989, 1022, 1023, 1027, 1060, 1061, 1065, 1100, 1101, 1106, 1139, 1140, 1145, 1178, 1179, 1183, 1216, 1217, 1221, 1254, 1255, 1260, 1283, 1284, 1289, 1316, 1317, 1323, 1350, 1351, 1357, 1384, 1385, 1390, 1413, 1414, 1419, 1446, 1447, 1451, 1474, 1475, 1479, 1502, 1503, 1507, 1530, 1531, 1536, 1563, 1564, 1569, 1592, 1593, 1598, 1625, 1626, 1631, 1654, 1655, 1693], "run": [4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 22, 29, 31, 32, 33, 34, 38, 72, 98, 118, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 461, 480, 481, 491, 519, 538, 556, 557, 573, 601, 602, 604, 605, 614, 707, 713, 715, 765, 790, 798, 912, 940, 941, 951, 979, 980, 989, 1017, 1018, 1027, 1055, 1056, 1065, 1095, 1096, 1106, 1134, 1135, 1145, 1173, 1174, 1183, 1211, 1212, 1221, 1249, 1250, 1260, 1278, 1279, 1289, 1310, 1312, 1323, 1344, 1346, 1357, 1378, 1380, 1390, 1408, 1409, 1419, 1440, 1442, 1451, 1469, 1470, 1479, 1497, 1498, 1507, 1525, 1526, 1536, 1557, 1559, 1569, 1587, 1588, 1598, 1619, 1621, 1631, 1649, 1650, 1665, 1861], "sinc": [4, 5, 6, 7, 8, 9, 10, 15, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 99, 480, 556, 604, 615, 626, 824, 911, 922, 940, 949, 950, 961, 979, 999, 1017, 1026, 1037, 1055, 1075, 1095, 1105, 1116, 1134, 1144, 1155, 1173, 1193, 1211, 1220, 1231, 1249, 1278, 1287, 1310, 1344, 1378, 1408, 1440, 1469, 1497, 1525, 1557, 1587, 1619, 1649, 1687, 1691, 1692, 1714, 1715, 1728, 1730, 1732, 1734, 1737, 1739, 1741, 1743, 1745, 1747, 1748, 1750, 1801, 1879], "miss": [4, 6, 28, 34, 890, 1714], "_model": [4, 6, 34], "py": [4, 6, 7, 8, 18, 26, 28, 33, 34, 625, 1665], "480": [4, 6, 9, 34], "surface_tens": [4, 11, 12, 14, 31, 33, 34, 650, 651, 849, 874, 875, 889, 890, 891], "diffusive_conduct": [4, 7, 11, 20, 22, 653, 654, 872], "x": [4, 5, 6, 8, 9, 10, 11, 12, 18, 20, 22, 23, 26, 27, 31, 38, 59, 130, 151, 163, 184, 228, 249, 261, 282, 294, 315, 327, 361, 394, 427, 448, 615, 708, 793, 889, 891, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 1026, 1064, 1182, 1220, 1355, 1676, 1678, 1681, 1682, 1693, 1694, 1695, 1703, 1704, 1713, 1714, 1715, 1716, 1861, 1864], "direct": [4, 7, 8, 10, 11, 12, 15, 20, 27, 30, 33, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 519, 708, 773, 910, 922, 926, 949, 961, 965, 988, 999, 1003, 1037, 1041, 1075, 1081, 1116, 1120, 1143, 1155, 1159, 1193, 1197, 1231, 1235, 1661, 1666, 1676, 1698, 1699, 1715], "constant": [4, 8, 22, 27, 50, 63, 65, 82, 109, 142, 154, 156, 175, 187, 189, 207, 240, 252, 254, 273, 285, 287, 306, 318, 320, 339, 352, 354, 373, 385, 387, 406, 418, 420, 439, 451, 452, 461, 472, 480, 501, 528, 538, 548, 602, 650, 651, 820, 847, 872, 896, 897, 912, 931, 951, 970, 989, 1008, 1027, 1046, 1065, 1086, 1106, 1125, 1145, 1164, 1183, 1202, 1221, 1240, 1260, 1270, 1289, 1302, 1323, 1336, 1357, 1370, 1390, 1400, 1419, 1432, 1451, 1461, 1478, 1479, 1489, 1507, 1517, 1536, 1549, 1569, 1579, 1598, 1611, 1631, 1641], "left": [4, 5, 7, 8, 9, 10, 11, 12, 14, 18, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 461, 473, 502, 538, 549, 567, 602, 911, 912, 932, 950, 951, 971, 989, 1009, 1027, 1047, 1065, 1087, 1105, 1106, 1126, 1144, 1145, 1165, 1183, 1203, 1221, 1241, 1260, 1271, 1289, 1303, 1323, 1337, 1357, 1371, 1390, 1401, 1419, 1433, 1451, 1462, 1479, 1490, 1507, 1518, 1536, 1550, 1569, 1580, 1598, 1612, 1631, 1642], "right": [4, 5, 7, 8, 9, 10, 11, 12, 14, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 911, 950, 1105, 1144, 1666], "side": [4, 8, 9, 10, 20, 23, 30, 32, 33, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 1220, 1666], "procedur": [4, 7, 8, 11, 12, 197], "y": [4, 8, 9, 11, 12, 22, 26, 27, 31, 197, 610, 615, 793, 889, 899, 1026, 1064, 1182, 1220, 1321, 1695, 1703, 1713, 1714, 1715], "z": [4, 8, 11, 12, 26, 31, 615, 842, 867, 1026, 1064, 1182, 1220, 1299, 1333, 1367, 1429, 1546, 1608, 1676, 1685, 1695, 1703, 1712, 1713, 1714, 1715, 1718, 1879], "inlet": [4, 6, 7, 8, 9, 10, 11, 12, 33, 34, 219, 1677, 1690, 1696, 1697, 1701, 1704, 1722], "outlet": [4, 6, 7, 8, 10, 11, 12, 33, 34, 99, 123, 197, 221, 1677, 1696, 1697, 1701, 1704], "stokesflow": [4, 6, 12, 14, 16, 18, 23, 32, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326], "set_value_bc": [4, 6, 7, 8, 11, 12, 14, 18, 22, 32, 34, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 510], "updat": [4, 5, 6, 11, 12, 22, 28, 29, 34, 36, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 511, 558, 571, 942, 981, 1019, 1057, 1097, 1136, 1175, 1213, 1251, 1280, 1313, 1347, 1381, 1410, 1443, 1471, 1499, 1527, 1560, 1589, 1622, 1651, 1683, 1828, 1835], "soln": [4, 6, 32, 34, 59, 151, 184, 249, 282, 315, 448, 610, 896, 897], "solut": [4, 6, 22, 23, 33, 38, 59, 130, 151, 163, 184, 228, 249, 261, 282, 294, 315, 327, 348, 361, 382, 394, 415, 427, 448, 509, 610, 831, 845, 896, 897, 1666], "dict": [4, 22, 27, 30, 31, 32, 39, 55, 70, 72, 73, 87, 96, 100, 115, 128, 130, 131, 147, 161, 164, 180, 194, 198, 213, 226, 229, 245, 259, 261, 262, 278, 292, 295, 311, 325, 328, 344, 359, 362, 378, 392, 395, 411, 425, 427, 428, 444, 457, 460, 462, 464, 477, 482, 489, 492, 506, 516, 519, 520, 521, 530, 535, 539, 540, 553, 563, 582, 584, 597, 599, 603, 613, 614, 615, 617, 622, 631, 712, 714, 716, 763, 764, 766, 785, 789, 794, 801, 805, 807, 812, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 839, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 868, 869, 889, 896, 897, 898, 900, 901, 902, 903, 904, 905, 910, 913, 914, 937, 947, 949, 952, 953, 976, 986, 990, 991, 1014, 1024, 1026, 1028, 1029, 1052, 1062, 1064, 1066, 1067, 1092, 1102, 1104, 1107, 1108, 1131, 1141, 1143, 1146, 1147, 1170, 1180, 1182, 1184, 1185, 1208, 1218, 1220, 1222, 1223, 1246, 1256, 1259, 1261, 1262, 1275, 1285, 1290, 1291, 1292, 1297, 1307, 1318, 1324, 1325, 1326, 1331, 1341, 1352, 1358, 1359, 1360, 1365, 1375, 1386, 1391, 1392, 1405, 1415, 1417, 1420, 1421, 1422, 1427, 1437, 1448, 1450, 1452, 1453, 1466, 1476, 1480, 1481, 1494, 1504, 1508, 1509, 1522, 1532, 1537, 1538, 1539, 1544, 1554, 1565, 1570, 1571, 1584, 1594, 1599, 1600, 1601, 1606, 1616, 1627, 1630, 1632, 1633, 1646, 1656, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1698, 1699, 1703, 1740, 1751, 1759, 1761, 1771, 1775, 1777, 1785, 1787, 1851, 1855, 1857, 1858, 1859, 1862, 1863, 1870, 1871, 1875], "quantiti": [4, 7, 16, 20, 22, 32, 34, 62, 351, 896, 897, 898, 900, 901, 902, 903, 904, 905], "kei": [4, 5, 15, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 45, 46, 47, 51, 55, 57, 66, 70, 77, 78, 79, 83, 87, 89, 92, 96, 104, 105, 106, 110, 115, 117, 124, 128, 137, 138, 139, 143, 147, 149, 157, 161, 170, 171, 172, 176, 180, 182, 190, 194, 202, 203, 204, 208, 213, 215, 222, 226, 235, 236, 237, 241, 245, 247, 255, 259, 268, 269, 270, 274, 278, 280, 288, 292, 301, 302, 303, 307, 311, 313, 321, 325, 334, 335, 336, 340, 344, 346, 355, 359, 368, 369, 370, 374, 378, 380, 388, 392, 401, 402, 403, 407, 411, 413, 421, 425, 434, 435, 436, 440, 444, 446, 453, 457, 467, 468, 469, 473, 477, 479, 485, 489, 496, 497, 498, 502, 506, 508, 512, 516, 523, 524, 525, 530, 531, 532, 535, 543, 544, 545, 549, 553, 555, 559, 563, 567, 577, 578, 581, 582, 583, 584, 586, 592, 593, 596, 597, 598, 599, 629, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 710, 711, 712, 713, 714, 716, 718, 720, 723, 724, 725, 726, 727, 730, 734, 735, 736, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 759, 761, 762, 763, 764, 766, 768, 769, 770, 771, 775, 776, 777, 778, 779, 780, 785, 786, 787, 788, 789, 790, 791, 792, 794, 796, 799, 800, 801, 805, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 842, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 924, 925, 927, 932, 937, 939, 943, 947, 949, 963, 964, 966, 971, 976, 978, 982, 986, 1001, 1002, 1004, 1009, 1014, 1016, 1020, 1024, 1026, 1039, 1040, 1042, 1047, 1052, 1054, 1058, 1062, 1064, 1079, 1080, 1082, 1087, 1092, 1094, 1098, 1102, 1104, 1118, 1119, 1121, 1126, 1131, 1133, 1137, 1141, 1143, 1157, 1158, 1160, 1165, 1170, 1172, 1176, 1180, 1182, 1195, 1196, 1198, 1203, 1208, 1210, 1214, 1218, 1220, 1233, 1234, 1236, 1241, 1246, 1248, 1252, 1256, 1265, 1266, 1267, 1271, 1275, 1277, 1281, 1285, 1295, 1296, 1297, 1298, 1303, 1307, 1309, 1314, 1318, 1320, 1329, 1330, 1331, 1332, 1337, 1341, 1343, 1348, 1352, 1354, 1363, 1364, 1365, 1366, 1371, 1375, 1377, 1382, 1386, 1388, 1395, 1396, 1397, 1401, 1405, 1407, 1411, 1415, 1425, 1426, 1427, 1428, 1433, 1437, 1439, 1444, 1448, 1456, 1457, 1458, 1462, 1466, 1468, 1472, 1476, 1484, 1485, 1486, 1490, 1494, 1496, 1500, 1504, 1512, 1513, 1514, 1518, 1522, 1524, 1528, 1532, 1542, 1543, 1544, 1545, 1550, 1554, 1556, 1561, 1565, 1567, 1574, 1575, 1576, 1580, 1584, 1586, 1590, 1594, 1604, 1605, 1606, 1607, 1612, 1616, 1618, 1623, 1627, 1629, 1636, 1637, 1638, 1642, 1646, 1648, 1652, 1656, 1727, 1729, 1731, 1733, 1736, 1738, 1742, 1744, 1746, 1749, 1754, 1755, 1758, 1759, 1760, 1761, 1766, 1767, 1770, 1771, 1772, 1775, 1777, 1780, 1781, 1784, 1785, 1786, 1787, 1800, 1818, 1843, 1844, 1850, 1851, 1854, 1855, 1858, 1859, 1862, 1863, 1871], "e": [4, 7, 9, 12, 16, 17, 18, 25, 27, 28, 29, 30, 31, 33, 36, 39, 48, 57, 62, 70, 73, 80, 89, 96, 100, 107, 117, 128, 131, 140, 149, 161, 164, 173, 182, 194, 198, 205, 215, 226, 229, 238, 247, 259, 262, 271, 280, 292, 295, 304, 313, 325, 328, 337, 346, 348, 351, 359, 362, 371, 380, 382, 392, 395, 404, 413, 415, 425, 428, 437, 446, 457, 461, 464, 470, 479, 489, 492, 499, 508, 509, 516, 521, 526, 531, 535, 538, 540, 546, 555, 563, 584, 589, 590, 599, 602, 615, 629, 630, 657, 662, 665, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 691, 694, 698, 699, 701, 705, 707, 712, 714, 715, 716, 763, 764, 765, 766, 789, 793, 794, 798, 801, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 911, 912, 914, 929, 939, 947, 949, 950, 951, 953, 968, 978, 986, 989, 991, 1006, 1016, 1024, 1027, 1029, 1044, 1054, 1062, 1064, 1065, 1067, 1084, 1094, 1102, 1105, 1106, 1108, 1123, 1133, 1141, 1143, 1144, 1145, 1147, 1162, 1172, 1180, 1183, 1185, 1200, 1210, 1218, 1221, 1223, 1238, 1248, 1256, 1260, 1262, 1268, 1277, 1285, 1287, 1289, 1292, 1300, 1309, 1318, 1320, 1323, 1326, 1334, 1343, 1352, 1354, 1357, 1360, 1368, 1377, 1386, 1388, 1390, 1392, 1398, 1407, 1415, 1419, 1422, 1430, 1439, 1448, 1451, 1453, 1459, 1468, 1476, 1479, 1481, 1487, 1496, 1504, 1507, 1509, 1515, 1524, 1532, 1536, 1539, 1547, 1556, 1565, 1567, 1569, 1571, 1577, 1586, 1594, 1598, 1601, 1609, 1618, 1627, 1629, 1631, 1633, 1639, 1648, 1656, 1666, 1683, 1701, 1704, 1729, 1731, 1738, 1744, 1761, 1775, 1787, 1800, 1818, 1824, 1827, 1834, 1836, 1842, 1849, 1855, 1867, 1875, 1876], "ndarrai": [4, 27, 31, 47, 48, 59, 68, 69, 79, 80, 94, 95, 106, 107, 119, 121, 123, 126, 127, 139, 140, 151, 159, 160, 172, 173, 184, 192, 193, 204, 205, 219, 221, 224, 225, 237, 238, 249, 257, 258, 270, 271, 282, 290, 291, 303, 304, 315, 323, 324, 336, 337, 348, 357, 358, 370, 371, 382, 390, 391, 403, 404, 415, 423, 424, 436, 437, 448, 455, 456, 469, 470, 484, 487, 488, 498, 499, 509, 514, 515, 525, 526, 533, 534, 545, 546, 561, 562, 610, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 708, 710, 711, 712, 713, 716, 718, 720, 723, 724, 725, 726, 727, 730, 732, 734, 735, 736, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 759, 761, 762, 763, 766, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 780, 784, 787, 788, 789, 790, 792, 793, 796, 797, 799, 801, 805, 807, 813, 823, 824, 825, 826, 827, 829, 830, 831, 834, 836, 838, 844, 845, 847, 849, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 864, 865, 866, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 894, 907, 908, 919, 920, 927, 929, 945, 946, 958, 959, 966, 968, 984, 985, 996, 997, 1004, 1006, 1022, 1023, 1034, 1035, 1042, 1044, 1060, 1061, 1072, 1073, 1082, 1084, 1100, 1101, 1113, 1114, 1121, 1123, 1139, 1140, 1152, 1153, 1160, 1162, 1178, 1179, 1190, 1191, 1198, 1200, 1216, 1217, 1228, 1229, 1236, 1238, 1254, 1255, 1267, 1268, 1283, 1284, 1288, 1298, 1299, 1300, 1316, 1317, 1320, 1322, 1332, 1333, 1334, 1350, 1351, 1354, 1356, 1366, 1367, 1368, 1384, 1385, 1388, 1397, 1398, 1413, 1414, 1418, 1428, 1429, 1430, 1446, 1447, 1458, 1459, 1474, 1475, 1486, 1487, 1502, 1503, 1514, 1515, 1530, 1531, 1535, 1545, 1546, 1547, 1563, 1564, 1567, 1576, 1577, 1592, 1593, 1597, 1607, 1608, 1609, 1625, 1626, 1629, 1638, 1639, 1654, 1655, 1666, 1678, 1680, 1681, 1683, 1686, 1688, 1689, 1690, 1692, 1693, 1698, 1699, 1700, 1703, 1712, 1713, 1714, 1715, 1716, 1722, 1865, 1874, 1875, 1876, 1878], "last": [4, 10, 25, 27, 36, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 506, 530, 553, 582, 597, 916, 937, 955, 976, 993, 1014, 1031, 1052, 1069, 1092, 1110, 1131, 1149, 1170, 1187, 1208, 1225, 1246, 1275, 1307, 1341, 1375, 1405, 1437, 1466, 1494, 1522, 1554, 1584, 1616, 1646, 1759, 1771, 1785, 1797, 1815, 1851], "line": [4, 9, 10, 14, 15, 28, 29, 30, 31, 1738, 1789, 1875, 1876, 1878, 1879], "cell": [4, 5, 10, 25, 29, 33, 34, 708, 910, 1143, 1220], "abov": [4, 5, 6, 9, 10, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 783, 1694, 1713, 1738, 1847, 1852], "new": [4, 5, 7, 9, 14, 16, 17, 18, 20, 22, 25, 27, 28, 29, 30, 31, 33, 36, 45, 77, 104, 137, 170, 196, 202, 235, 268, 301, 334, 368, 401, 434, 467, 496, 523, 543, 577, 592, 708, 820, 847, 924, 963, 1001, 1039, 1079, 1118, 1157, 1195, 1233, 1265, 1295, 1329, 1363, 1395, 1425, 1456, 1484, 1512, 1542, 1574, 1604, 1636, 1677, 1679, 1680, 1684, 1711, 1713, 1715, 1717, 1731, 1733, 1744, 1746, 1754, 1766, 1780, 1803, 1824, 1827, 1834, 1836, 1842, 1843, 1849, 1875, 1876], "comput": [4, 9, 15, 22, 23, 27, 28, 30, 31, 32, 33, 34, 35, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 461, 470, 499, 526, 538, 546, 556, 602, 604, 614, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 738, 820, 824, 825, 842, 843, 844, 849, 850, 864, 867, 868, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 894, 907, 908, 912, 929, 940, 951, 968, 979, 989, 1006, 1017, 1027, 1044, 1055, 1065, 1084, 1095, 1106, 1123, 1134, 1145, 1162, 1173, 1183, 1200, 1211, 1221, 1238, 1249, 1260, 1268, 1278, 1287, 1289, 1300, 1310, 1323, 1334, 1344, 1357, 1368, 1378, 1390, 1398, 1408, 1419, 1430, 1440, 1451, 1459, 1469, 1479, 1487, 1497, 1507, 1515, 1525, 1534, 1536, 1547, 1557, 1569, 1577, 1587, 1596, 1598, 1609, 1619, 1631, 1639, 1649, 1665, 1700, 1722], "we": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 820, 896, 897], "visul": 4, "ax": [4, 5, 6, 7, 8, 9, 14, 18, 26, 28, 29, 30, 33, 34, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 591, 1660, 1662, 1664, 1665, 1666, 1668, 1670, 1672, 1674, 1682, 1875, 1876, 1877], "plot_connect": [4, 5, 7, 18, 26, 28, 33, 34, 1876], "plot_coordin": [4, 7, 8, 18, 26, 28, 33, 34, 1875], "color_bi": [4, 7, 8, 18, 26, 33, 34, 1875, 1876], "home": [4, 7, 18, 26, 28, 29, 33, 34], "runner": [4, 7, 18, 26, 28, 33, 34], "_plottool": [4, 7, 18, 26, 28, 33, 34], "344": [4, 18, 26, 28, 33], "userwarn": [4, 7, 18, 26, 28, 33, 34], "figur": [4, 7, 9, 10, 11, 12, 18, 23, 26, 28, 30, 33, 34, 1875, 1876, 1878], "layout": [4, 7, 18, 26, 28, 33, 34], "ha": [4, 5, 6, 7, 9, 13, 15, 16, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 70, 76, 96, 103, 128, 136, 161, 169, 194, 201, 226, 234, 259, 267, 292, 300, 325, 333, 359, 367, 392, 400, 425, 433, 457, 466, 489, 495, 516, 519, 535, 537, 542, 563, 566, 584, 590, 599, 661, 663, 700, 824, 887, 896, 897, 916, 917, 918, 947, 955, 956, 957, 986, 993, 994, 995, 1024, 1031, 1032, 1033, 1062, 1069, 1070, 1071, 1102, 1110, 1111, 1112, 1141, 1149, 1150, 1151, 1180, 1182, 1187, 1188, 1189, 1218, 1225, 1226, 1227, 1256, 1264, 1285, 1287, 1294, 1318, 1321, 1328, 1352, 1355, 1362, 1386, 1394, 1415, 1424, 1448, 1455, 1476, 1483, 1504, 1511, 1532, 1534, 1541, 1565, 1573, 1594, 1596, 1603, 1627, 1635, 1656, 1722, 1729, 1761, 1775, 1777, 1787, 1789, 1821, 1855, 1868, 1869, 1878], "chang": [4, 5, 7, 9, 14, 18, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 62, 351, 459, 1840, 1874], "tight": [4, 7, 18, 26, 28, 33, 34], "fig": [4, 5, 6, 7, 8, 9, 14, 18, 26, 28, 29, 30, 33, 34, 714, 764, 794, 1875, 1876, 1878], "tight_layout": [4, 7, 18, 26, 28, 33, 34], "darci": [4, 14], "": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 40, 44, 49, 56, 59, 60, 67, 71, 73, 74, 76, 81, 88, 90, 93, 97, 100, 101, 103, 108, 116, 118, 120, 125, 129, 130, 131, 132, 136, 141, 148, 151, 152, 158, 162, 164, 165, 169, 174, 181, 184, 185, 191, 195, 198, 199, 201, 206, 214, 218, 223, 227, 229, 230, 234, 239, 246, 249, 250, 256, 260, 262, 263, 267, 272, 279, 282, 283, 289, 293, 295, 296, 300, 305, 312, 315, 316, 322, 326, 328, 329, 333, 338, 345, 349, 356, 360, 362, 363, 367, 372, 379, 383, 389, 393, 395, 396, 400, 405, 412, 416, 422, 426, 428, 429, 433, 438, 445, 448, 449, 454, 458, 464, 466, 471, 478, 486, 490, 492, 493, 495, 500, 507, 510, 513, 517, 518, 519, 521, 527, 536, 540, 542, 547, 554, 556, 560, 564, 566, 570, 572, 579, 580, 585, 586, 590, 594, 595, 600, 604, 609, 610, 614, 615, 618, 630, 631, 633, 682, 697, 707, 712, 713, 714, 715, 716, 719, 721, 729, 763, 764, 765, 766, 789, 793, 794, 798, 801, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 914, 916, 917, 918, 921, 922, 923, 926, 928, 930, 938, 940, 944, 948, 953, 955, 956, 957, 960, 961, 962, 965, 967, 969, 977, 979, 983, 987, 991, 993, 994, 995, 998, 999, 1000, 1003, 1005, 1007, 1015, 1017, 1021, 1025, 1029, 1031, 1032, 1033, 1036, 1037, 1038, 1041, 1043, 1045, 1053, 1055, 1059, 1063, 1067, 1069, 1070, 1071, 1074, 1075, 1076, 1081, 1083, 1085, 1093, 1095, 1099, 1103, 1108, 1110, 1111, 1112, 1115, 1116, 1117, 1120, 1122, 1124, 1132, 1134, 1138, 1142, 1147, 1149, 1150, 1151, 1154, 1155, 1156, 1159, 1161, 1163, 1171, 1173, 1177, 1181, 1185, 1187, 1188, 1189, 1192, 1193, 1194, 1197, 1199, 1201, 1209, 1211, 1215, 1219, 1223, 1225, 1226, 1227, 1230, 1231, 1232, 1235, 1237, 1239, 1247, 1249, 1253, 1257, 1262, 1264, 1269, 1276, 1278, 1282, 1286, 1292, 1294, 1301, 1308, 1310, 1311, 1315, 1319, 1326, 1328, 1335, 1342, 1344, 1345, 1349, 1353, 1360, 1362, 1369, 1376, 1378, 1379, 1383, 1387, 1389, 1392, 1394, 1399, 1406, 1408, 1412, 1416, 1422, 1424, 1431, 1438, 1440, 1441, 1445, 1449, 1453, 1455, 1460, 1467, 1469, 1473, 1477, 1481, 1483, 1488, 1495, 1497, 1501, 1505, 1509, 1511, 1516, 1523, 1525, 1529, 1533, 1539, 1541, 1548, 1555, 1557, 1558, 1562, 1566, 1571, 1573, 1578, 1585, 1587, 1591, 1595, 1601, 1603, 1610, 1617, 1619, 1620, 1624, 1628, 1633, 1635, 1640, 1647, 1649, 1653, 1657, 1669, 1693, 1710, 1714, 1715, 1717, 1718, 1719, 1720, 1723, 1725, 1726, 1727, 1729, 1733, 1735, 1736, 1738, 1740, 1742, 1744, 1746, 1749, 1756, 1757, 1762, 1768, 1769, 1776, 1782, 1783, 1788, 1801, 1845, 1846, 1848, 1856, 1859, 1867, 1871, 1876, 1881], "law": [4, 7, 14, 20, 22, 23, 130, 682, 823, 847, 862], "k_": [4, 12], "ab": [4, 7, 8, 11, 12, 20, 682], "frac": [4, 6, 7, 8, 9, 11, 12, 20, 22, 23, 32, 682, 697, 847, 875, 887, 891, 896, 897], "q": [4, 14, 23, 29, 32, 33, 697, 712, 714, 716, 763, 764, 766, 789, 794, 801], "A": [4, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 20, 22, 23, 27, 28, 29, 30, 31, 33, 34, 35, 38, 44, 51, 56, 59, 61, 67, 68, 69, 76, 83, 88, 91, 93, 94, 95, 98, 99, 103, 110, 116, 122, 125, 126, 127, 130, 136, 143, 148, 151, 153, 158, 159, 160, 163, 169, 176, 181, 184, 186, 191, 192, 193, 196, 201, 208, 214, 220, 223, 224, 225, 228, 234, 241, 246, 249, 251, 256, 257, 258, 261, 267, 274, 279, 282, 284, 289, 290, 291, 294, 300, 307, 312, 315, 317, 322, 323, 324, 327, 333, 340, 345, 350, 356, 357, 358, 361, 367, 374, 379, 384, 389, 390, 391, 394, 400, 407, 412, 417, 422, 423, 424, 427, 433, 440, 445, 448, 450, 454, 455, 456, 460, 466, 473, 478, 483, 486, 487, 488, 491, 495, 502, 507, 511, 513, 514, 515, 520, 533, 534, 542, 549, 554, 558, 560, 561, 562, 566, 567, 570, 571, 572, 614, 622, 629, 630, 633, 634, 657, 658, 660, 663, 667, 682, 697, 704, 707, 708, 710, 713, 715, 716, 732, 750, 755, 761, 765, 766, 769, 773, 776, 785, 790, 796, 798, 801, 807, 826, 831, 847, 849, 850, 851, 857, 858, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 889, 891, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 918, 921, 932, 938, 942, 944, 945, 946, 949, 957, 960, 971, 977, 981, 983, 984, 985, 995, 998, 1009, 1015, 1019, 1021, 1022, 1023, 1026, 1033, 1036, 1047, 1053, 1057, 1059, 1060, 1061, 1064, 1071, 1074, 1087, 1093, 1097, 1099, 1100, 1101, 1104, 1112, 1115, 1126, 1132, 1136, 1138, 1139, 1140, 1143, 1151, 1154, 1165, 1171, 1175, 1177, 1178, 1179, 1182, 1189, 1192, 1203, 1209, 1213, 1215, 1216, 1217, 1220, 1227, 1230, 1241, 1247, 1251, 1253, 1254, 1255, 1264, 1271, 1276, 1280, 1282, 1283, 1284, 1287, 1291, 1294, 1297, 1303, 1308, 1313, 1315, 1316, 1317, 1325, 1328, 1331, 1337, 1342, 1347, 1349, 1350, 1351, 1359, 1362, 1365, 1371, 1376, 1381, 1383, 1384, 1385, 1394, 1401, 1406, 1410, 1412, 1413, 1414, 1417, 1421, 1424, 1427, 1433, 1438, 1443, 1445, 1446, 1447, 1455, 1462, 1467, 1471, 1473, 1474, 1475, 1478, 1483, 1490, 1495, 1499, 1501, 1502, 1503, 1506, 1511, 1518, 1523, 1527, 1529, 1530, 1531, 1534, 1538, 1541, 1544, 1550, 1555, 1560, 1562, 1563, 1564, 1568, 1573, 1580, 1585, 1589, 1591, 1592, 1593, 1596, 1600, 1603, 1606, 1612, 1617, 1622, 1624, 1625, 1626, 1635, 1642, 1647, 1651, 1653, 1654, 1655, 1666, 1668, 1670, 1672, 1674, 1676, 1678, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1700, 1702, 1703, 1704, 1705, 1712, 1714, 1715, 1716, 1718, 1719, 1720, 1723, 1736, 1738, 1740, 1742, 1744, 1746, 1801, 1803, 1804, 1805, 1807, 1820, 1842, 1857, 1858, 1859, 1862, 1863, 1871, 1875, 1876, 1878, 1879], "mu": [4, 14, 23, 31, 32, 697, 820, 831, 864, 868, 869, 1861], "l": [4, 6, 7, 8, 10, 14, 20, 23, 25, 32, 130, 682, 697, 845, 847], "delta": [4, 7, 20, 23, 32, 130, 682, 697], "p": [4, 10, 18, 23, 26, 28, 30, 32, 33, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 461, 491, 520, 537, 538, 602, 697, 823, 829, 830, 894, 910, 912, 919, 921, 922, 949, 951, 958, 960, 961, 988, 989, 996, 998, 999, 1026, 1027, 1034, 1036, 1037, 1064, 1065, 1072, 1074, 1075, 1104, 1106, 1113, 1115, 1116, 1143, 1145, 1152, 1154, 1155, 1182, 1183, 1190, 1192, 1193, 1220, 1221, 1228, 1230, 1231, 1259, 1260, 1287, 1289, 1321, 1323, 1355, 1357, 1389, 1390, 1417, 1419, 1450, 1451, 1478, 1479, 1506, 1507, 1534, 1536, 1568, 1569, 1596, 1598, 1630, 1631, 1876], "where": [4, 6, 11, 12, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 56, 60, 61, 62, 63, 64, 65, 67, 68, 69, 88, 90, 91, 93, 94, 95, 116, 120, 122, 125, 126, 127, 148, 152, 153, 154, 155, 156, 158, 159, 160, 181, 185, 186, 187, 188, 189, 191, 192, 193, 214, 218, 220, 223, 224, 225, 246, 250, 251, 252, 253, 254, 256, 257, 258, 279, 283, 284, 285, 286, 287, 289, 290, 291, 312, 316, 317, 318, 319, 320, 322, 323, 324, 345, 349, 350, 351, 352, 353, 354, 356, 357, 358, 379, 383, 384, 385, 386, 387, 389, 390, 391, 412, 416, 417, 418, 419, 420, 422, 423, 424, 445, 449, 450, 451, 452, 454, 455, 456, 461, 478, 483, 486, 487, 488, 507, 510, 511, 513, 514, 515, 519, 533, 534, 538, 554, 558, 560, 561, 562, 570, 571, 572, 602, 615, 619, 661, 663, 712, 713, 763, 789, 796, 818, 882, 883, 887, 891, 896, 897, 911, 912, 921, 922, 923, 938, 942, 944, 945, 946, 950, 951, 960, 961, 962, 977, 981, 983, 984, 985, 989, 998, 999, 1000, 1015, 1019, 1021, 1022, 1023, 1027, 1036, 1037, 1038, 1053, 1057, 1059, 1060, 1061, 1065, 1074, 1075, 1076, 1093, 1097, 1099, 1100, 1101, 1105, 1106, 1115, 1116, 1117, 1132, 1136, 1138, 1139, 1140, 1144, 1145, 1154, 1155, 1156, 1171, 1175, 1177, 1178, 1179, 1183, 1192, 1193, 1194, 1209, 1213, 1215, 1216, 1217, 1221, 1230, 1231, 1232, 1247, 1251, 1253, 1254, 1255, 1260, 1276, 1280, 1282, 1283, 1284, 1289, 1291, 1308, 1313, 1315, 1316, 1317, 1323, 1325, 1342, 1347, 1349, 1350, 1351, 1357, 1359, 1376, 1381, 1383, 1384, 1385, 1390, 1406, 1410, 1412, 1413, 1414, 1419, 1421, 1438, 1443, 1445, 1446, 1447, 1451, 1467, 1471, 1473, 1474, 1475, 1479, 1495, 1499, 1501, 1502, 1503, 1507, 1523, 1527, 1529, 1530, 1531, 1534, 1536, 1538, 1555, 1560, 1562, 1563, 1564, 1569, 1585, 1589, 1591, 1592, 1593, 1596, 1598, 1600, 1617, 1622, 1624, 1625, 1626, 1631, 1647, 1651, 1653, 1654, 1655, 1665, 1684, 1715, 1864], "area": [4, 8, 23, 32, 614, 682, 697, 701, 702, 703, 704, 705, 708, 718, 719, 720, 721, 734, 735, 736, 761, 768, 769, 770, 771, 777, 872, 880, 887, 896, 897, 949, 1696, 1697, 1876], "distanc": [4, 10, 29, 708, 713, 779, 807, 808, 809, 810, 812, 817, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230, 1676, 1677, 1711], "between": [4, 5, 6, 10, 18, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 519, 611, 626, 738, 772, 773, 778, 779, 786, 795, 808, 809, 813, 817, 896, 897, 910, 949, 988, 1026, 1064, 1078, 1143, 1182, 1679, 1680, 1689, 1693, 1694, 1695, 1699, 1862, 1863], "differ": [4, 7, 9, 10, 11, 20, 21, 23, 25, 26, 27, 29, 31, 32, 34, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 510, 618, 629, 631, 642, 656, 707, 713, 715, 765, 798, 820, 872, 887, 896, 897, 1064, 1666, 1834, 1835, 1875, 1876], "were": [4, 5, 8, 9, 17, 21, 25, 26, 28, 29, 30, 31, 39, 50, 73, 82, 99, 100, 109, 131, 142, 164, 175, 198, 207, 229, 240, 262, 273, 295, 306, 328, 339, 362, 373, 395, 406, 428, 439, 464, 472, 492, 501, 521, 528, 540, 548, 712, 763, 778, 789, 812, 914, 919, 921, 923, 931, 953, 958, 960, 962, 970, 991, 996, 998, 1000, 1008, 1029, 1034, 1036, 1038, 1046, 1067, 1072, 1074, 1076, 1086, 1108, 1113, 1115, 1117, 1125, 1147, 1152, 1154, 1156, 1164, 1185, 1190, 1192, 1194, 1202, 1223, 1228, 1230, 1232, 1240, 1262, 1270, 1292, 1302, 1326, 1336, 1360, 1370, 1392, 1400, 1422, 1432, 1453, 1461, 1481, 1489, 1509, 1517, 1539, 1549, 1571, 1579, 1601, 1611, 1633, 1641, 1679, 1683], "have": [4, 5, 7, 9, 11, 12, 15, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 44, 60, 64, 76, 90, 103, 120, 136, 152, 155, 169, 185, 188, 201, 218, 234, 250, 253, 267, 283, 286, 300, 316, 319, 333, 349, 353, 367, 383, 386, 400, 416, 419, 433, 449, 466, 495, 510, 542, 566, 619, 656, 670, 685, 713, 739, 820, 911, 918, 919, 922, 923, 933, 950, 957, 958, 961, 962, 972, 995, 996, 999, 1000, 1010, 1026, 1033, 1034, 1037, 1038, 1048, 1071, 1072, 1075, 1076, 1088, 1105, 1112, 1113, 1116, 1117, 1127, 1144, 1151, 1152, 1155, 1156, 1166, 1182, 1189, 1190, 1193, 1194, 1204, 1220, 1227, 1228, 1231, 1232, 1242, 1264, 1294, 1328, 1362, 1394, 1424, 1455, 1483, 1511, 1541, 1573, 1603, 1635, 1682, 1687, 1691, 1692, 1807, 1820, 1829, 1875], "simplifi": [4, 9, 23], "nbval_ignore_output": [4, 8], "mode": [4, 5, 6, 8, 9, 11, 12, 15, 18, 28, 29, 31, 33, 36, 39, 44, 48, 50, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 67, 73, 76, 80, 82, 83, 84, 85, 88, 90, 91, 93, 100, 103, 107, 109, 110, 111, 112, 116, 120, 121, 122, 123, 125, 131, 136, 140, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 164, 169, 173, 175, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 198, 201, 205, 207, 208, 209, 210, 214, 218, 219, 220, 221, 223, 229, 234, 238, 240, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 256, 262, 267, 271, 273, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 295, 300, 304, 306, 307, 308, 309, 312, 314, 316, 317, 318, 319, 320, 322, 328, 333, 337, 339, 340, 341, 342, 345, 347, 349, 350, 351, 352, 353, 354, 356, 362, 367, 371, 373, 374, 375, 376, 379, 381, 383, 384, 385, 386, 387, 389, 395, 400, 404, 406, 407, 408, 409, 412, 414, 416, 417, 418, 419, 420, 422, 428, 433, 437, 439, 440, 441, 442, 445, 447, 449, 450, 451, 452, 454, 464, 466, 470, 472, 473, 474, 475, 478, 483, 486, 492, 495, 499, 501, 502, 503, 504, 507, 510, 511, 513, 521, 526, 528, 540, 542, 546, 548, 549, 550, 551, 554, 558, 560, 566, 567, 568, 569, 570, 571, 572, 638, 639, 640, 641, 642, 643, 644, 711, 758, 759, 762, 787, 788, 842, 867, 889, 890, 891, 893, 914, 918, 919, 922, 923, 929, 931, 932, 933, 934, 935, 938, 942, 944, 953, 957, 958, 961, 962, 968, 970, 971, 972, 973, 974, 977, 981, 983, 991, 995, 996, 999, 1000, 1006, 1008, 1009, 1010, 1011, 1012, 1015, 1019, 1021, 1029, 1033, 1034, 1037, 1038, 1044, 1046, 1047, 1048, 1049, 1050, 1053, 1057, 1059, 1067, 1071, 1072, 1075, 1076, 1084, 1086, 1087, 1088, 1089, 1090, 1093, 1097, 1099, 1108, 1112, 1113, 1116, 1117, 1123, 1125, 1126, 1127, 1128, 1129, 1132, 1136, 1138, 1147, 1151, 1152, 1155, 1156, 1162, 1164, 1165, 1166, 1167, 1168, 1171, 1175, 1177, 1185, 1189, 1190, 1193, 1194, 1200, 1202, 1203, 1204, 1205, 1206, 1209, 1213, 1215, 1223, 1227, 1228, 1231, 1232, 1238, 1240, 1241, 1242, 1243, 1244, 1247, 1251, 1253, 1262, 1264, 1268, 1270, 1271, 1272, 1273, 1276, 1280, 1282, 1292, 1294, 1299, 1300, 1302, 1303, 1304, 1305, 1308, 1313, 1315, 1326, 1328, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1347, 1349, 1360, 1362, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1381, 1383, 1392, 1394, 1398, 1400, 1401, 1402, 1403, 1406, 1410, 1412, 1422, 1424, 1429, 1430, 1432, 1433, 1434, 1435, 1438, 1443, 1445, 1453, 1455, 1459, 1461, 1462, 1463, 1464, 1467, 1471, 1473, 1481, 1483, 1487, 1489, 1490, 1491, 1492, 1495, 1499, 1501, 1509, 1511, 1515, 1517, 1518, 1519, 1520, 1523, 1527, 1529, 1539, 1541, 1546, 1547, 1549, 1550, 1551, 1552, 1555, 1560, 1562, 1571, 1573, 1577, 1579, 1580, 1581, 1582, 1585, 1589, 1591, 1601, 1603, 1608, 1609, 1611, 1612, 1613, 1614, 1617, 1622, 1624, 1633, 1635, 1639, 1641, 1642, 1643, 1644, 1647, 1651, 1653, 1679, 1717, 1875], "group": [4, 8, 11, 12, 22, 36, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 614, 618, 1680], "topotool": [4, 8, 10, 18, 26, 28, 949, 1712], "get_domain_area": [4, 8, 10], "get_domain_length": [4, 8, 10], "k": [4, 5, 9, 14, 18, 21, 22, 23, 27, 28, 29, 31, 32, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 460, 489, 516, 535, 563, 584, 599, 823, 824, 825, 827, 829, 830, 831, 834, 836, 845, 847, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 865, 866, 868, 869, 896, 897, 926, 947, 965, 986, 1003, 1024, 1041, 1062, 1081, 1102, 1120, 1141, 1159, 1180, 1197, 1218, 1235, 1256, 1285, 1318, 1352, 1386, 1415, 1448, 1476, 1504, 1532, 1565, 1594, 1627, 1656, 1761, 1775, 1787, 1855], "delta_p": 4, "print": [4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 573, 626, 627, 919, 920, 921, 922, 923, 933, 958, 959, 960, 961, 962, 972, 996, 997, 998, 999, 1000, 1010, 1034, 1035, 1036, 1037, 1038, 1048, 1072, 1073, 1074, 1075, 1076, 1088, 1113, 1114, 1115, 1116, 1117, 1127, 1152, 1153, 1154, 1155, 1156, 1166, 1182, 1190, 1191, 1192, 1193, 1194, 1204, 1228, 1229, 1230, 1231, 1232, 1242, 1534, 1596, 1744, 1746, 1777, 1789, 1801, 1862, 1863], "f": [4, 5, 7, 8, 9, 10, 21, 22, 29, 31, 33, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 489, 516, 535, 563, 584, 599, 627, 630, 820, 896, 897, 947, 986, 1024, 1062, 1102, 1141, 1180, 1218, 1256, 1285, 1318, 1352, 1386, 1415, 1448, 1476, 1504, 1532, 1565, 1594, 1627, 1656, 1761, 1775, 1787, 1855], "98e": 4, "12": [4, 5, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 33, 650, 1879], "1000": [4, 14, 21, 712, 763, 789, 889, 890, 891, 1663, 1665, 1669, 1671], "2f": [4, 8, 10], "md": 4, "26": [4, 9, 26, 28, 33, 34, 922, 949, 961, 999, 1037, 1075, 1116, 1155, 1193, 1231], "attempt": [4, 7, 8, 9, 18, 27, 31, 32, 64, 155, 188, 253, 286, 319, 353, 386, 419, 1478], "estim": [4, 8, 9, 10, 21, 31, 830, 831], "low": [4, 8, 9, 29, 707, 715, 765, 798, 847, 1291, 1325, 1359, 1421, 1538, 1600], "_topotool": [4, 8], "1042": [4, 8], "length": [4, 5, 6, 7, 8, 9, 10, 14, 18, 20, 23, 25, 26, 28, 32, 56, 60, 67, 68, 69, 88, 90, 93, 94, 95, 116, 120, 125, 126, 127, 148, 152, 158, 159, 160, 181, 185, 191, 192, 193, 214, 218, 223, 224, 225, 246, 250, 256, 257, 258, 279, 283, 289, 290, 291, 312, 316, 322, 323, 324, 345, 349, 356, 357, 358, 379, 383, 389, 390, 391, 412, 416, 422, 423, 424, 445, 449, 454, 455, 456, 461, 478, 486, 487, 488, 507, 510, 513, 514, 515, 533, 534, 538, 554, 560, 561, 562, 570, 572, 602, 614, 615, 631, 638, 639, 640, 641, 642, 643, 644, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 682, 697, 707, 710, 711, 712, 714, 715, 716, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 759, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 775, 776, 777, 778, 779, 780, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 807, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 889, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 912, 920, 933, 938, 944, 945, 946, 949, 951, 959, 972, 977, 983, 984, 985, 989, 997, 1010, 1015, 1021, 1022, 1023, 1027, 1035, 1048, 1053, 1059, 1060, 1061, 1065, 1073, 1088, 1093, 1099, 1100, 1101, 1106, 1114, 1127, 1132, 1138, 1139, 1140, 1145, 1153, 1166, 1171, 1177, 1178, 1179, 1183, 1191, 1204, 1209, 1215, 1216, 1217, 1221, 1229, 1242, 1247, 1253, 1254, 1255, 1260, 1276, 1282, 1283, 1284, 1289, 1308, 1315, 1316, 1317, 1323, 1342, 1349, 1350, 1351, 1357, 1376, 1383, 1384, 1385, 1390, 1406, 1412, 1413, 1414, 1419, 1438, 1445, 1446, 1447, 1451, 1467, 1473, 1474, 1475, 1479, 1495, 1501, 1502, 1503, 1507, 1523, 1529, 1530, 1531, 1536, 1555, 1562, 1563, 1564, 1569, 1585, 1591, 1592, 1593, 1598, 1617, 1624, 1625, 1626, 1631, 1647, 1653, 1654, 1655, 1688, 1690, 1697, 1704, 1717], "could": [4, 7, 8, 9, 10, 18, 20, 22, 27, 29, 31, 33, 778, 779, 1077, 1078], "1086": [4, 8], "ad": [4, 5, 6, 7, 8, 10, 11, 12, 17, 18, 22, 25, 26, 27, 30, 33, 36, 61, 91, 122, 153, 186, 196, 220, 251, 261, 284, 317, 348, 350, 382, 384, 415, 417, 450, 461, 482, 483, 509, 511, 519, 537, 538, 558, 571, 601, 602, 610, 655, 712, 725, 763, 779, 789, 911, 912, 942, 950, 951, 981, 989, 1019, 1026, 1027, 1057, 1065, 1097, 1104, 1105, 1106, 1136, 1144, 1145, 1175, 1183, 1213, 1220, 1221, 1251, 1260, 1280, 1289, 1313, 1323, 1347, 1357, 1381, 1390, 1410, 1419, 1443, 1451, 1471, 1479, 1499, 1507, 1527, 1536, 1560, 1569, 1589, 1598, 1622, 1631, 1651, 1677, 1679, 1680, 1684, 1694, 1710, 1847, 1857], "07": [4, 7], "method": [4, 5, 7, 9, 10, 16, 22, 23, 26, 27, 29, 31, 33, 34, 38, 59, 60, 70, 72, 90, 96, 98, 120, 128, 130, 151, 152, 161, 163, 184, 185, 194, 196, 197, 218, 226, 228, 249, 250, 259, 261, 282, 283, 292, 294, 315, 316, 325, 327, 349, 359, 361, 383, 392, 394, 416, 425, 427, 448, 449, 457, 460, 480, 484, 489, 491, 510, 516, 518, 519, 520, 535, 537, 563, 565, 584, 586, 599, 601, 609, 625, 634, 714, 716, 764, 766, 777, 794, 801, 824, 825, 847, 854, 856, 893, 910, 916, 917, 926, 928, 933, 947, 949, 955, 956, 965, 967, 972, 986, 988, 993, 994, 1003, 1005, 1010, 1024, 1026, 1031, 1032, 1041, 1043, 1048, 1062, 1064, 1069, 1070, 1078, 1081, 1083, 1088, 1102, 1104, 1110, 1111, 1120, 1122, 1127, 1141, 1143, 1149, 1150, 1159, 1161, 1166, 1180, 1182, 1187, 1188, 1197, 1199, 1204, 1218, 1220, 1225, 1226, 1235, 1237, 1242, 1256, 1259, 1285, 1287, 1288, 1311, 1318, 1320, 1321, 1322, 1345, 1352, 1354, 1355, 1356, 1379, 1386, 1388, 1389, 1415, 1417, 1418, 1441, 1448, 1450, 1476, 1478, 1504, 1506, 1532, 1534, 1535, 1558, 1565, 1567, 1568, 1594, 1596, 1597, 1620, 1627, 1629, 1630, 1656, 1659, 1661, 1663, 1665, 1666, 1667, 1669, 1671, 1673, 1676, 1680, 1686, 1694, 1705, 1711, 1712, 1717, 1718, 1719, 1725, 1728, 1730, 1731, 1733, 1735, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1748, 1750, 1751, 1761, 1763, 1775, 1787, 1820, 1838, 1855, 1858, 1862, 1863, 1868, 1874, 1875, 1876, 1878], "base": [4, 5, 6, 11, 18, 21, 23, 26, 29, 31, 33, 34, 36, 608, 609, 615, 626, 711, 759, 762, 783, 784, 786, 787, 788, 790, 791, 792, 795, 796, 797, 799, 800, 838, 862, 893, 894, 896, 897, 1026, 1064, 1220, 1659, 1661, 1663, 1666, 1669, 1695, 1722, 1729, 1733, 1735, 1736, 1738, 1740, 1742, 1744, 1746, 1819, 1857, 1858, 1868, 1869], "scipi": [4, 6, 9, 20, 27, 28, 33, 36, 609, 712, 714, 716, 763, 764, 766, 789, 794, 801, 916, 955, 993, 1026, 1031, 1069, 1110, 1149, 1187, 1220, 1225, 1671, 1673, 1678, 1681, 1683, 1688, 1693, 1716, 1720, 1723], "convexhul": 4, "approxim": [4, 9, 10, 12, 23, 31, 680, 695], "both": [4, 9, 11, 15, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 51, 57, 83, 89, 110, 117, 143, 149, 176, 182, 208, 215, 241, 247, 274, 280, 307, 313, 340, 346, 374, 380, 407, 413, 440, 446, 459, 473, 479, 502, 508, 531, 549, 555, 567, 816, 820, 830, 893, 896, 897, 932, 939, 971, 978, 1009, 1016, 1047, 1054, 1087, 1094, 1126, 1133, 1165, 1172, 1203, 1210, 1241, 1248, 1271, 1277, 1303, 1309, 1337, 1343, 1371, 1377, 1401, 1407, 1433, 1439, 1462, 1468, 1490, 1496, 1518, 1524, 1550, 1556, 1580, 1586, 1612, 1618, 1642, 1648, 1681, 1687, 1691, 1692, 1704, 1716, 1722, 1827, 1875, 1876], "without": [4, 16, 18, 29, 30, 31, 32, 33, 713, 1182, 1710, 1711, 1731, 1733, 1875], "necessarili": [4, 9, 15], "locat": [4, 5, 7, 9, 10, 14, 18, 20, 22, 25, 26, 27, 28, 29, 31, 32, 33, 44, 51, 52, 53, 56, 60, 61, 63, 64, 65, 67, 69, 76, 83, 84, 85, 88, 90, 91, 93, 95, 103, 110, 111, 112, 116, 120, 121, 122, 123, 125, 127, 136, 143, 144, 145, 148, 152, 153, 154, 155, 156, 158, 160, 169, 176, 177, 178, 181, 185, 186, 187, 188, 189, 191, 193, 201, 208, 209, 210, 214, 218, 219, 220, 221, 223, 225, 234, 241, 242, 243, 246, 250, 251, 252, 253, 254, 256, 258, 267, 274, 275, 276, 279, 283, 284, 285, 286, 287, 289, 291, 300, 307, 308, 309, 312, 316, 317, 318, 319, 320, 322, 324, 333, 340, 341, 342, 345, 349, 350, 352, 353, 354, 356, 358, 367, 374, 375, 376, 379, 383, 384, 385, 386, 387, 389, 391, 400, 407, 408, 409, 412, 416, 417, 418, 419, 420, 422, 424, 433, 440, 441, 442, 445, 449, 450, 451, 452, 454, 456, 461, 462, 466, 473, 474, 475, 478, 481, 483, 484, 486, 488, 495, 502, 503, 504, 507, 510, 511, 513, 515, 519, 534, 538, 539, 542, 549, 550, 551, 554, 557, 558, 560, 562, 566, 567, 568, 569, 570, 571, 572, 602, 603, 605, 614, 618, 713, 778, 779, 830, 910, 912, 913, 916, 917, 918, 919, 926, 928, 932, 934, 935, 938, 941, 942, 944, 946, 951, 952, 955, 956, 957, 958, 965, 967, 971, 973, 974, 977, 980, 981, 983, 985, 988, 989, 990, 993, 994, 995, 996, 1003, 1005, 1009, 1011, 1012, 1015, 1018, 1019, 1021, 1023, 1027, 1028, 1031, 1032, 1033, 1034, 1041, 1043, 1047, 1049, 1050, 1053, 1056, 1057, 1059, 1061, 1065, 1066, 1069, 1070, 1071, 1072, 1081, 1083, 1087, 1089, 1090, 1093, 1096, 1097, 1099, 1101, 1106, 1107, 1110, 1111, 1112, 1113, 1120, 1122, 1126, 1128, 1129, 1132, 1135, 1136, 1138, 1140, 1143, 1145, 1146, 1149, 1150, 1151, 1152, 1159, 1161, 1165, 1167, 1168, 1171, 1174, 1175, 1177, 1179, 1182, 1183, 1184, 1187, 1188, 1189, 1190, 1197, 1199, 1203, 1205, 1206, 1209, 1212, 1213, 1215, 1217, 1221, 1222, 1225, 1226, 1227, 1228, 1235, 1237, 1241, 1243, 1244, 1247, 1250, 1251, 1253, 1255, 1260, 1261, 1264, 1271, 1272, 1273, 1276, 1279, 1280, 1282, 1284, 1289, 1290, 1291, 1294, 1303, 1304, 1305, 1308, 1312, 1313, 1315, 1317, 1323, 1324, 1325, 1328, 1337, 1338, 1339, 1342, 1346, 1347, 1349, 1351, 1357, 1358, 1359, 1362, 1371, 1372, 1373, 1376, 1380, 1381, 1383, 1385, 1390, 1391, 1394, 1401, 1402, 1403, 1406, 1409, 1410, 1412, 1414, 1419, 1420, 1421, 1424, 1433, 1434, 1435, 1438, 1442, 1443, 1445, 1447, 1451, 1452, 1455, 1462, 1463, 1464, 1467, 1470, 1471, 1473, 1475, 1479, 1480, 1483, 1490, 1491, 1492, 1495, 1498, 1499, 1501, 1503, 1507, 1508, 1511, 1518, 1519, 1520, 1523, 1526, 1527, 1529, 1531, 1536, 1537, 1538, 1541, 1550, 1551, 1552, 1555, 1559, 1560, 1562, 1564, 1569, 1570, 1573, 1580, 1581, 1582, 1585, 1588, 1589, 1591, 1593, 1598, 1599, 1600, 1603, 1612, 1613, 1614, 1617, 1621, 1622, 1624, 1626, 1631, 1632, 1635, 1642, 1643, 1644, 1647, 1650, 1651, 1653, 1655, 1676, 1683, 1686, 1688, 1711], "almost": [4, 23, 25, 28, 29], "flat": [4, 627, 1220, 1789, 1860], "plane": [4, 10, 661, 663], "2": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 55, 87, 99, 115, 147, 180, 213, 228, 245, 278, 311, 344, 378, 411, 444, 477, 480, 482, 506, 530, 553, 582, 597, 610, 615, 638, 639, 640, 641, 642, 643, 644, 650, 657, 658, 660, 663, 667, 682, 697, 712, 729, 738, 763, 789, 830, 851, 862, 874, 875, 882, 883, 887, 890, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 911, 916, 919, 920, 921, 922, 933, 937, 950, 955, 958, 959, 960, 961, 972, 976, 993, 996, 997, 998, 999, 1010, 1014, 1031, 1034, 1035, 1036, 1037, 1048, 1052, 1069, 1072, 1073, 1074, 1075, 1088, 1092, 1105, 1110, 1113, 1114, 1115, 1116, 1127, 1131, 1144, 1149, 1152, 1153, 1154, 1155, 1166, 1170, 1182, 1187, 1190, 1191, 1192, 1193, 1204, 1208, 1225, 1228, 1229, 1230, 1231, 1242, 1246, 1275, 1287, 1307, 1341, 1375, 1405, 1437, 1466, 1494, 1522, 1554, 1584, 1616, 1646, 1678, 1680, 1681, 1684, 1688, 1693, 1704, 1711, 1716, 1744, 1759, 1771, 1777, 1785, 1789, 1847, 1851, 1852, 1874, 1876, 1879], "spheric": [4, 9, 10, 23, 26, 29, 32, 34, 723, 726, 738, 775, 776, 777, 778, 779, 780, 1026, 1220, 1695, 1703, 1719], "cylindr": [4, 9, 10, 23, 26, 32, 680, 695, 735, 769, 776, 778, 779, 872, 875, 890, 1026, 1220, 1695, 1703], "each": [4, 5, 6, 9, 10, 11, 12, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 48, 58, 60, 63, 65, 79, 80, 90, 106, 107, 120, 139, 140, 150, 152, 154, 156, 172, 173, 183, 185, 187, 189, 204, 205, 218, 219, 221, 237, 238, 248, 250, 252, 254, 270, 271, 281, 283, 285, 287, 303, 304, 314, 316, 318, 320, 336, 337, 347, 349, 352, 354, 370, 371, 381, 383, 385, 387, 403, 404, 414, 416, 418, 420, 436, 437, 447, 449, 451, 452, 460, 461, 469, 470, 484, 498, 499, 509, 510, 519, 525, 526, 538, 545, 546, 586, 602, 615, 618, 631, 667, 680, 682, 695, 697, 707, 708, 713, 715, 738, 765, 793, 798, 804, 805, 806, 808, 809, 812, 817, 820, 824, 829, 830, 831, 838, 839, 842, 843, 844, 849, 853, 855, 864, 867, 868, 893, 894, 910, 911, 912, 916, 917, 919, 920, 921, 922, 923, 926, 927, 928, 929, 933, 949, 950, 951, 955, 956, 958, 959, 960, 961, 962, 965, 966, 967, 968, 972, 988, 989, 993, 994, 996, 997, 998, 999, 1000, 1003, 1004, 1005, 1006, 1010, 1027, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1041, 1042, 1043, 1044, 1048, 1064, 1065, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1088, 1105, 1106, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1123, 1127, 1143, 1144, 1145, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1162, 1166, 1182, 1183, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1197, 1198, 1199, 1200, 1204, 1220, 1221, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1235, 1236, 1237, 1238, 1242, 1260, 1267, 1268, 1288, 1289, 1291, 1297, 1298, 1300, 1322, 1323, 1325, 1331, 1332, 1334, 1356, 1357, 1359, 1365, 1366, 1368, 1390, 1397, 1398, 1418, 1419, 1421, 1427, 1428, 1430, 1451, 1458, 1459, 1479, 1486, 1487, 1507, 1514, 1515, 1535, 1536, 1538, 1544, 1545, 1547, 1569, 1576, 1577, 1597, 1598, 1600, 1606, 1607, 1609, 1631, 1638, 1639, 1678, 1679, 1680, 1682, 1687, 1688, 1691, 1692, 1693, 1694, 1695, 1698, 1699, 1702, 1703, 1709, 1712, 1714, 1715, 1716, 1717, 1722, 1740, 1789, 1800, 1818, 1853, 1858, 1859, 1862, 1863, 1874, 1875, 1876], "necessari": [4, 6, 9, 17, 22, 23, 27, 29, 33, 707, 711, 712, 714, 715, 716, 759, 762, 763, 764, 765, 766, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 1717, 1847, 1870], "accordingli": [4, 1683], "These": [4, 7, 11, 15, 18, 25, 26, 27, 28, 29, 31, 33, 34, 65, 156, 189, 254, 287, 320, 354, 387, 420, 452, 459, 614, 655, 899, 910, 920, 959, 997, 1035, 1073, 1114, 1143, 1153, 1182, 1191, 1220, 1229, 1684, 1875, 1876], "altern": [4, 9, 25, 31, 896, 897], "add_model": [4, 5, 6, 9, 10, 11, 12, 14, 18, 21, 22, 29, 30, 31, 32, 33, 462, 539, 603, 712, 763, 789, 790, 899, 913, 952, 990, 1028, 1066, 1107, 1146, 1184, 1222, 1261, 1290, 1324, 1358, 1391, 1420, 1452, 1480, 1508, 1537, 1570, 1599, 1632], "choos": [4, 7, 11], "hydraulic_size_factor": [4, 5, 7, 14, 18, 23, 27, 29, 32, 638, 639, 640, 641, 642, 643, 644, 885, 886], "For": [4, 5, 7, 9, 10, 11, 12, 15, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452, 461, 519, 538, 602, 716, 766, 801, 820, 896, 897, 912, 949, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1478, 1479, 1507, 1536, 1569, 1598, 1631, 1676, 1694, 1703, 1711, 1804, 1878], "more": [4, 7, 9, 12, 14, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 51, 52, 53, 56, 60, 67, 76, 83, 84, 85, 88, 90, 93, 103, 110, 111, 112, 116, 120, 125, 136, 143, 144, 145, 148, 152, 158, 169, 176, 177, 178, 181, 185, 191, 196, 201, 208, 209, 210, 214, 218, 223, 234, 241, 242, 243, 246, 250, 256, 267, 274, 275, 276, 279, 283, 289, 300, 307, 308, 309, 312, 316, 322, 333, 340, 341, 342, 345, 349, 356, 367, 374, 375, 376, 379, 383, 389, 400, 407, 408, 409, 412, 416, 422, 433, 440, 441, 442, 445, 449, 454, 461, 462, 466, 473, 474, 475, 478, 480, 486, 495, 502, 503, 504, 507, 510, 513, 518, 538, 539, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 602, 603, 616, 716, 766, 801, 896, 897, 912, 913, 918, 919, 922, 923, 932, 933, 934, 935, 938, 944, 949, 951, 952, 957, 958, 961, 962, 971, 972, 973, 974, 977, 983, 989, 990, 995, 996, 999, 1000, 1009, 1010, 1011, 1012, 1015, 1021, 1027, 1028, 1033, 1034, 1037, 1038, 1047, 1048, 1049, 1050, 1053, 1059, 1065, 1066, 1071, 1072, 1075, 1076, 1087, 1088, 1089, 1090, 1093, 1099, 1106, 1107, 1112, 1113, 1116, 1117, 1126, 1127, 1128, 1129, 1132, 1138, 1145, 1146, 1151, 1152, 1155, 1156, 1165, 1166, 1167, 1168, 1171, 1177, 1183, 1184, 1189, 1190, 1193, 1194, 1203, 1204, 1205, 1206, 1209, 1215, 1220, 1221, 1222, 1227, 1228, 1231, 1232, 1241, 1242, 1243, 1244, 1247, 1253, 1260, 1261, 1264, 1271, 1272, 1273, 1276, 1282, 1289, 1290, 1294, 1303, 1304, 1305, 1308, 1315, 1323, 1324, 1328, 1337, 1338, 1339, 1342, 1349, 1357, 1358, 1362, 1371, 1372, 1373, 1376, 1383, 1390, 1391, 1394, 1401, 1402, 1403, 1406, 1412, 1419, 1420, 1424, 1433, 1434, 1435, 1438, 1445, 1451, 1452, 1455, 1462, 1463, 1464, 1467, 1473, 1479, 1480, 1483, 1490, 1491, 1492, 1495, 1501, 1507, 1508, 1511, 1518, 1519, 1520, 1523, 1529, 1536, 1537, 1541, 1550, 1551, 1552, 1555, 1562, 1569, 1570, 1573, 1580, 1581, 1582, 1585, 1591, 1598, 1599, 1603, 1612, 1613, 1614, 1617, 1624, 1631, 1632, 1635, 1642, 1643, 1644, 1647, 1653, 1687, 1691, 1692, 1694, 1751, 1805, 1824, 1847, 1852, 1868, 1869], "inform": [4, 5, 7, 9, 11, 15, 25, 27, 28, 31, 32, 33, 462, 518, 539, 603, 716, 766, 801, 889, 913, 952, 990, 1028, 1066, 1107, 1146, 1184, 1222, 1261, 1290, 1324, 1358, 1391, 1420, 1452, 1480, 1508, 1537, 1570, 1599, 1632, 1847, 1852, 1862, 1863], "see": [4, 9, 12, 15, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 61, 62, 63, 65, 91, 122, 153, 154, 156, 186, 187, 189, 220, 251, 252, 254, 284, 285, 287, 317, 318, 320, 350, 351, 352, 354, 384, 385, 387, 417, 418, 420, 450, 451, 452, 461, 462, 483, 511, 518, 538, 539, 558, 571, 602, 603, 616, 626, 834, 882, 883, 912, 913, 942, 951, 952, 981, 989, 990, 1019, 1027, 1028, 1057, 1065, 1066, 1097, 1106, 1107, 1136, 1145, 1146, 1175, 1183, 1184, 1213, 1220, 1221, 1222, 1251, 1260, 1261, 1280, 1289, 1290, 1313, 1323, 1324, 1347, 1357, 1358, 1381, 1390, 1391, 1410, 1419, 1420, 1443, 1451, 1452, 1471, 1479, 1480, 1499, 1507, 1508, 1527, 1536, 1537, 1560, 1569, 1570, 1589, 1598, 1599, 1622, 1631, 1632, 1651, 1686, 1695, 1731, 1733, 1847, 1852], "notebook": [4, 7, 15, 16, 20, 21, 22, 23, 24, 26, 31, 32, 33, 1878], "show": [5, 6, 7, 8, 9, 26, 27, 28, 29, 31, 33, 34, 712, 714, 716, 763, 764, 766, 789, 790, 794, 801, 1875, 1876], "your": [5, 17, 18, 29, 30, 36], "veri": [5, 17, 20, 25, 26, 27, 28, 29, 30, 32, 36, 196, 820, 847, 922, 923, 961, 962, 999, 1000, 1037, 1038, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1691, 1692, 1724], "own": [5, 15, 18, 26, 29, 30, 849, 850], "custom": [5, 6, 9, 15, 16, 25, 711, 759, 762, 787, 788, 790, 1725, 1804], "describ": [5, 20, 22, 23, 27, 28, 29, 30, 874, 890, 988], "next": [5, 7, 9, 11, 12, 15, 26, 27, 29, 33, 34, 196, 785], "add": [5, 6, 7, 10, 15, 16, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 35, 60, 61, 62, 63, 64, 65, 90, 91, 120, 121, 122, 123, 152, 153, 154, 155, 156, 185, 186, 187, 188, 189, 218, 219, 220, 221, 250, 251, 252, 253, 254, 283, 284, 285, 286, 287, 316, 317, 318, 319, 320, 349, 350, 351, 352, 353, 354, 383, 384, 385, 386, 387, 416, 417, 418, 419, 420, 449, 450, 451, 452, 461, 462, 463, 483, 510, 511, 519, 538, 539, 558, 565, 571, 602, 603, 712, 763, 789, 911, 912, 913, 942, 950, 951, 952, 981, 989, 990, 1019, 1027, 1028, 1057, 1065, 1066, 1097, 1105, 1106, 1107, 1136, 1144, 1145, 1146, 1175, 1183, 1184, 1213, 1221, 1222, 1251, 1260, 1261, 1280, 1288, 1289, 1290, 1313, 1322, 1323, 1324, 1347, 1356, 1357, 1358, 1381, 1390, 1391, 1410, 1418, 1419, 1420, 1443, 1450, 1451, 1452, 1471, 1479, 1480, 1499, 1507, 1508, 1527, 1535, 1536, 1537, 1560, 1569, 1570, 1589, 1597, 1598, 1599, 1622, 1631, 1632, 1651, 1677, 1679, 1684, 1710, 1751], "weibul": [5, 9, 14, 714, 764, 794], "might": [5, 9, 15, 26, 27, 28, 31, 32, 610, 633, 778, 779, 784, 922, 923, 961, 962, 999, 1000, 1037, 1038, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1687, 1691, 1692, 1694, 1717, 1838], "our": [5, 7, 9, 15, 18, 20, 22, 23, 25, 26, 29, 31, 33, 36], "histogram": [5, 14, 34, 793], "pyplot": [5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 26, 28, 29, 30, 33, 34, 712, 714, 716, 763, 764, 766, 789, 794, 801, 1875, 1876], "plt": [5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 26, 28, 29, 30, 33, 34, 712, 714, 716, 763, 764, 766, 789, 794, 801, 1875, 1876], "spst": [5, 9, 29], "standard": [5, 6, 22, 26, 28, 30, 31, 33, 626, 714, 764, 794, 916, 917, 955, 956, 988, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226, 1506, 1568, 1751, 1847, 1852], "lattic": [5, 9, 910, 949, 950, 988, 1105, 1143], "given": [5, 6, 11, 12, 16, 17, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 50, 51, 52, 53, 56, 58, 60, 61, 63, 64, 65, 67, 69, 74, 76, 82, 83, 84, 85, 88, 90, 91, 93, 95, 101, 103, 109, 110, 111, 112, 116, 120, 121, 122, 123, 125, 127, 132, 136, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 160, 165, 169, 175, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 193, 199, 201, 207, 208, 209, 210, 214, 217, 218, 219, 220, 221, 223, 225, 230, 234, 240, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 256, 258, 263, 267, 273, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 291, 296, 300, 306, 307, 308, 309, 312, 314, 316, 317, 318, 319, 320, 322, 324, 329, 333, 339, 340, 341, 342, 345, 347, 349, 350, 352, 353, 354, 356, 358, 363, 367, 373, 374, 375, 376, 379, 381, 383, 384, 385, 386, 387, 389, 391, 396, 400, 406, 407, 408, 409, 412, 414, 416, 417, 418, 419, 420, 422, 424, 429, 433, 439, 440, 441, 442, 445, 447, 449, 450, 451, 452, 454, 456, 460, 461, 466, 472, 473, 474, 475, 478, 480, 483, 486, 488, 493, 495, 501, 502, 503, 504, 507, 510, 511, 513, 515, 519, 528, 534, 538, 542, 548, 549, 550, 551, 554, 556, 558, 560, 562, 566, 567, 568, 569, 570, 571, 572, 581, 596, 602, 604, 613, 618, 619, 621, 626, 627, 629, 633, 634, 712, 713, 714, 716, 763, 764, 766, 783, 784, 789, 790, 791, 792, 793, 794, 795, 796, 800, 801, 827, 834, 838, 841, 843, 851, 858, 862, 869, 875, 889, 893, 894, 896, 897, 898, 900, 901, 902, 903, 904, 905, 910, 911, 912, 918, 919, 921, 922, 923, 931, 932, 933, 934, 935, 938, 940, 942, 944, 946, 949, 950, 951, 957, 958, 960, 961, 962, 970, 971, 972, 973, 974, 977, 979, 981, 983, 985, 988, 989, 995, 996, 998, 999, 1000, 1008, 1009, 1010, 1011, 1012, 1015, 1017, 1019, 1021, 1023, 1026, 1027, 1033, 1034, 1036, 1037, 1038, 1046, 1047, 1048, 1049, 1050, 1053, 1055, 1057, 1059, 1061, 1064, 1065, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1086, 1087, 1088, 1089, 1090, 1093, 1095, 1097, 1099, 1101, 1104, 1105, 1106, 1112, 1113, 1115, 1116, 1117, 1125, 1126, 1127, 1128, 1129, 1132, 1134, 1136, 1138, 1140, 1143, 1144, 1145, 1151, 1152, 1154, 1155, 1156, 1164, 1165, 1166, 1167, 1168, 1171, 1173, 1175, 1177, 1179, 1182, 1183, 1189, 1190, 1192, 1193, 1194, 1202, 1203, 1204, 1205, 1206, 1209, 1211, 1213, 1215, 1217, 1220, 1221, 1227, 1228, 1230, 1231, 1232, 1240, 1241, 1242, 1243, 1244, 1247, 1249, 1251, 1253, 1255, 1260, 1264, 1270, 1271, 1272, 1273, 1276, 1278, 1280, 1282, 1284, 1288, 1289, 1294, 1299, 1302, 1303, 1304, 1305, 1308, 1310, 1311, 1313, 1315, 1317, 1320, 1322, 1323, 1328, 1333, 1336, 1337, 1338, 1339, 1342, 1344, 1345, 1347, 1349, 1351, 1354, 1356, 1357, 1362, 1367, 1370, 1371, 1372, 1373, 1376, 1378, 1379, 1381, 1383, 1385, 1388, 1390, 1394, 1400, 1401, 1402, 1403, 1406, 1408, 1410, 1412, 1414, 1417, 1418, 1419, 1424, 1429, 1432, 1433, 1434, 1435, 1438, 1440, 1441, 1443, 1445, 1447, 1451, 1455, 1461, 1462, 1463, 1464, 1467, 1469, 1471, 1473, 1475, 1478, 1479, 1483, 1489, 1490, 1491, 1492, 1495, 1497, 1499, 1501, 1503, 1507, 1511, 1517, 1518, 1519, 1520, 1523, 1525, 1527, 1529, 1531, 1535, 1536, 1541, 1546, 1549, 1550, 1551, 1552, 1555, 1557, 1558, 1560, 1562, 1564, 1567, 1569, 1573, 1579, 1580, 1581, 1582, 1585, 1587, 1589, 1591, 1593, 1597, 1598, 1603, 1608, 1611, 1612, 1613, 1614, 1617, 1619, 1620, 1622, 1624, 1626, 1629, 1631, 1635, 1641, 1642, 1643, 1644, 1647, 1649, 1651, 1653, 1655, 1660, 1662, 1664, 1668, 1670, 1672, 1674, 1676, 1677, 1678, 1681, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1700, 1701, 1702, 1703, 1704, 1710, 1711, 1713, 1714, 1715, 1716, 1720, 1722, 1723, 1731, 1733, 1740, 1742, 1744, 1746, 1758, 1770, 1784, 1800, 1801, 1803, 1818, 1849, 1850, 1852, 1860, 1870, 1873, 1874, 1875, 1876, 1877, 1878], "yet": [5, 9, 22, 27, 36, 461, 538, 602, 912, 951, 989, 1026, 1027, 1065, 1106, 1145, 1183, 1220, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1858], "onli": [5, 6, 9, 11, 12, 13, 16, 17, 18, 23, 26, 27, 28, 29, 30, 31, 32, 33, 44, 50, 51, 52, 53, 56, 67, 76, 82, 83, 84, 85, 88, 93, 103, 109, 110, 111, 112, 116, 123, 125, 136, 142, 143, 144, 145, 148, 158, 169, 175, 176, 177, 178, 181, 191, 201, 207, 208, 209, 210, 214, 223, 234, 240, 241, 242, 243, 246, 256, 267, 273, 274, 275, 276, 279, 289, 300, 306, 307, 308, 309, 312, 322, 333, 339, 340, 341, 342, 345, 356, 367, 373, 374, 375, 376, 379, 389, 400, 406, 407, 408, 409, 412, 422, 433, 439, 440, 441, 442, 445, 454, 460, 461, 466, 472, 473, 474, 475, 478, 486, 495, 501, 502, 503, 504, 507, 513, 528, 538, 542, 548, 549, 550, 551, 554, 556, 560, 566, 567, 568, 569, 570, 572, 589, 602, 604, 619, 625, 633, 634, 657, 662, 665, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 691, 694, 698, 699, 701, 705, 708, 771, 813, 820, 824, 845, 893, 896, 897, 912, 916, 917, 918, 919, 922, 923, 926, 928, 931, 932, 933, 934, 935, 938, 940, 944, 949, 951, 955, 956, 957, 958, 961, 962, 965, 967, 970, 971, 972, 973, 974, 977, 979, 983, 989, 993, 994, 995, 996, 999, 1000, 1003, 1005, 1008, 1009, 1010, 1011, 1012, 1015, 1017, 1021, 1026, 1027, 1031, 1032, 1033, 1034, 1037, 1038, 1041, 1043, 1046, 1047, 1048, 1049, 1050, 1053, 1055, 1059, 1064, 1065, 1069, 1070, 1071, 1072, 1075, 1076, 1081, 1083, 1086, 1087, 1088, 1089, 1090, 1093, 1095, 1099, 1106, 1110, 1111, 1112, 1113, 1116, 1117, 1120, 1122, 1125, 1126, 1127, 1128, 1129, 1132, 1134, 1138, 1145, 1149, 1150, 1151, 1152, 1155, 1156, 1159, 1161, 1164, 1165, 1166, 1167, 1168, 1171, 1173, 1177, 1183, 1187, 1188, 1189, 1190, 1193, 1194, 1197, 1199, 1202, 1203, 1204, 1205, 1206, 1209, 1211, 1215, 1221, 1225, 1226, 1227, 1228, 1231, 1232, 1235, 1237, 1240, 1241, 1242, 1243, 1244, 1247, 1249, 1253, 1260, 1264, 1270, 1271, 1272, 1273, 1276, 1278, 1282, 1287, 1289, 1294, 1302, 1303, 1304, 1305, 1308, 1310, 1315, 1323, 1328, 1336, 1337, 1338, 1339, 1342, 1344, 1349, 1357, 1362, 1370, 1371, 1372, 1373, 1376, 1378, 1383, 1390, 1394, 1400, 1401, 1402, 1403, 1406, 1408, 1412, 1419, 1424, 1432, 1433, 1434, 1435, 1438, 1440, 1445, 1451, 1455, 1461, 1462, 1463, 1464, 1467, 1469, 1473, 1479, 1483, 1489, 1490, 1491, 1492, 1495, 1497, 1501, 1507, 1511, 1517, 1518, 1519, 1520, 1523, 1525, 1529, 1536, 1541, 1549, 1550, 1551, 1552, 1555, 1557, 1562, 1569, 1573, 1579, 1580, 1581, 1582, 1585, 1587, 1591, 1598, 1603, 1611, 1612, 1613, 1614, 1617, 1619, 1624, 1631, 1635, 1641, 1642, 1643, 1644, 1647, 1649, 1653, 1679, 1687, 1691, 1692, 1701, 1712, 1740, 1744, 1746, 1789, 1801, 1858, 1862, 1863, 1875, 1876, 1878], "dictat": [5, 20, 33, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 461, 470, 499, 526, 538, 546, 602, 912, 929, 951, 968, 989, 1006, 1027, 1044, 1065, 1084, 1106, 1123, 1145, 1162, 1183, 1200, 1221, 1238, 1260, 1268, 1289, 1300, 1323, 1334, 1357, 1368, 1390, 1398, 1419, 1430, 1451, 1459, 1479, 1487, 1507, 1515, 1536, 1547, 1569, 1577, 1598, 1609, 1631, 1639], "upper": [5, 27, 28, 29, 795, 916, 926, 955, 965, 993, 1003, 1031, 1041, 1069, 1081, 1110, 1120, 1149, 1159, 1187, 1197, 1225, 1235, 1681, 1706, 1708, 1720, 1723], "limit": [5, 9, 12, 15, 23, 25, 26, 29, 33, 713, 783, 795, 893, 1717], "don": [5, 7, 10, 15, 17, 18, 23, 29, 36], "t": [5, 6, 7, 9, 10, 15, 17, 18, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 484, 491, 520, 537, 610, 820, 823, 824, 825, 827, 829, 830, 831, 834, 836, 845, 847, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 865, 866, 868, 869, 887, 896, 897, 910, 920, 923, 949, 959, 962, 988, 997, 1000, 1026, 1035, 1038, 1064, 1073, 1076, 1104, 1114, 1117, 1143, 1153, 1156, 1182, 1191, 1194, 1220, 1229, 1232, 1259, 1287, 1321, 1355, 1389, 1417, 1450, 1478, 1506, 1534, 1568, 1596, 1630, 1874, 1875], "want": [5, 7, 9, 15, 16, 20, 25, 28, 29, 30, 32, 36, 1680, 1864, 1876], "exce": [5, 33], "overlap": [5, 9, 28, 29, 30, 713, 778, 779], "neighbor": [5, 6, 9, 20, 23, 29, 33, 48, 80, 99, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 499, 526, 546, 706, 708, 711, 713, 718, 719, 720, 721, 759, 762, 787, 788, 806, 808, 809, 910, 919, 921, 922, 923, 929, 933, 949, 958, 960, 961, 962, 968, 972, 996, 998, 999, 1000, 1006, 1010, 1034, 1036, 1037, 1038, 1044, 1048, 1064, 1072, 1074, 1075, 1076, 1084, 1088, 1113, 1115, 1116, 1117, 1123, 1127, 1143, 1152, 1154, 1155, 1156, 1162, 1166, 1190, 1192, 1193, 1194, 1200, 1204, 1228, 1230, 1231, 1232, 1238, 1242, 1268, 1300, 1334, 1368, 1398, 1430, 1459, 1487, 1515, 1547, 1577, 1609, 1639, 1685, 1687, 1691, 1692, 1711, 1715], "caus": [5, 18, 29, 33, 1711], "paradox": [5, 713], "neg": [5, 9, 29, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 1681], "ll": [5, 9, 15, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36], "larg": [5, 9, 17, 18, 20, 28, 29, 33, 778, 779, 922, 923, 961, 962, 999, 1000, 1037, 1038, 1075, 1076, 1077, 1078, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1691, 1692], "so": [5, 9, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 57, 60, 64, 89, 90, 117, 118, 120, 149, 152, 155, 182, 185, 188, 196, 215, 218, 219, 221, 247, 250, 253, 280, 283, 286, 313, 316, 319, 346, 349, 353, 380, 383, 386, 413, 416, 419, 446, 449, 479, 508, 510, 519, 531, 555, 565, 615, 618, 633, 713, 796, 820, 824, 916, 921, 939, 955, 960, 978, 993, 998, 1016, 1026, 1031, 1036, 1054, 1064, 1069, 1074, 1077, 1078, 1094, 1110, 1115, 1133, 1149, 1154, 1172, 1187, 1192, 1210, 1220, 1225, 1230, 1248, 1277, 1309, 1343, 1377, 1407, 1439, 1468, 1496, 1524, 1556, 1586, 1618, 1648, 1678, 1684, 1688, 1694, 1711, 1715, 1716, 1717, 1720, 1723, 1838, 1840, 1862, 1863, 1875, 1876], "do": [5, 6, 7, 9, 11, 12, 18, 23, 25, 27, 28, 29, 30, 31, 32, 33, 64, 155, 188, 253, 286, 319, 353, 386, 419, 820, 1026, 1220, 1826, 1876], "need": [5, 7, 9, 10, 11, 12, 15, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 491, 519, 615, 820, 872, 1677, 1688], "express": [5, 23, 27, 32], "scientif": [5, 25], "notat": [5, 20, 23, 29, 30], "below": [5, 7, 9, 10, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 613, 783, 807, 812, 820, 1713, 1717], "25": [5, 9, 18, 29, 30, 32, 33, 35, 119, 922, 961, 999, 1037, 1075, 1116, 1155, 1193, 1231, 1864, 1874], "under": [5, 7, 22, 23, 29, 601, 629, 1736, 1738, 1742, 1858], "readi": [5, 7, 13, 20, 22, 35, 459], "object": [5, 7, 9, 14, 15, 16, 17, 22, 25, 26, 27, 29, 30, 33, 34, 38, 39, 49, 51, 57, 59, 61, 71, 72, 73, 81, 83, 89, 91, 97, 98, 99, 100, 108, 110, 117, 122, 129, 130, 131, 141, 143, 149, 151, 153, 162, 163, 164, 174, 176, 182, 184, 186, 195, 196, 197, 198, 206, 208, 215, 220, 227, 228, 229, 239, 241, 247, 249, 251, 260, 261, 262, 272, 274, 280, 282, 284, 293, 294, 295, 305, 307, 313, 315, 317, 326, 327, 328, 338, 340, 346, 348, 350, 360, 361, 362, 372, 374, 380, 382, 384, 393, 394, 395, 405, 407, 413, 415, 417, 426, 427, 428, 438, 440, 446, 448, 450, 458, 460, 461, 463, 464, 471, 473, 479, 480, 483, 490, 491, 492, 500, 502, 508, 509, 511, 517, 519, 520, 521, 527, 531, 536, 537, 538, 540, 547, 549, 555, 556, 558, 564, 567, 571, 573, 579, 580, 585, 586, 589, 591, 594, 595, 600, 601, 602, 604, 615, 619, 622, 625, 626, 628, 629, 630, 631, 634, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 707, 708, 710, 711, 712, 713, 714, 715, 716, 718, 720, 723, 724, 725, 726, 727, 730, 732, 734, 735, 736, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 759, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 912, 914, 926, 928, 930, 932, 939, 940, 942, 948, 949, 951, 953, 965, 967, 969, 971, 978, 979, 981, 987, 988, 989, 991, 1003, 1005, 1007, 1009, 1016, 1017, 1019, 1025, 1026, 1027, 1029, 1041, 1043, 1045, 1047, 1054, 1055, 1057, 1063, 1064, 1065, 1067, 1081, 1083, 1085, 1087, 1094, 1095, 1097, 1103, 1104, 1106, 1108, 1120, 1122, 1124, 1126, 1133, 1134, 1136, 1142, 1143, 1145, 1147, 1159, 1161, 1163, 1165, 1172, 1173, 1175, 1181, 1182, 1183, 1185, 1197, 1199, 1201, 1203, 1210, 1211, 1213, 1219, 1220, 1221, 1223, 1235, 1237, 1239, 1241, 1248, 1249, 1251, 1257, 1259, 1260, 1262, 1269, 1271, 1277, 1278, 1280, 1286, 1287, 1288, 1289, 1291, 1292, 1301, 1303, 1309, 1310, 1311, 1313, 1319, 1321, 1322, 1323, 1325, 1326, 1335, 1337, 1343, 1344, 1345, 1347, 1353, 1355, 1356, 1357, 1359, 1360, 1369, 1371, 1377, 1378, 1379, 1381, 1387, 1389, 1390, 1392, 1399, 1401, 1407, 1408, 1410, 1416, 1417, 1418, 1419, 1421, 1422, 1431, 1433, 1439, 1440, 1441, 1443, 1449, 1450, 1451, 1453, 1460, 1462, 1468, 1469, 1471, 1477, 1478, 1479, 1481, 1488, 1490, 1496, 1497, 1499, 1505, 1506, 1507, 1509, 1516, 1518, 1524, 1525, 1527, 1533, 1534, 1535, 1536, 1538, 1539, 1548, 1550, 1556, 1557, 1558, 1560, 1566, 1568, 1569, 1571, 1578, 1580, 1586, 1587, 1589, 1595, 1596, 1597, 1598, 1600, 1601, 1610, 1612, 1618, 1619, 1620, 1622, 1628, 1630, 1631, 1633, 1640, 1642, 1648, 1649, 1651, 1657, 1666, 1677, 1679, 1696, 1697, 1710, 1720, 1723, 1756, 1757, 1762, 1768, 1769, 1776, 1782, 1783, 1788, 1790, 1796, 1801, 1803, 1804, 1808, 1814, 1838, 1840, 1842, 1845, 1846, 1847, 1849, 1852, 1856, 1857, 1862, 1863, 1865, 1868, 1869, 1875, 1876, 1877, 1878, 1879], "dictionari": [5, 15, 22, 28, 29, 30, 31, 32, 33, 39, 45, 46, 47, 57, 66, 73, 77, 78, 79, 89, 92, 100, 104, 105, 106, 117, 124, 131, 137, 138, 139, 149, 157, 164, 170, 171, 172, 182, 190, 198, 202, 203, 204, 215, 222, 229, 235, 236, 237, 247, 255, 262, 268, 269, 270, 280, 288, 295, 301, 302, 303, 313, 321, 328, 334, 335, 336, 346, 355, 362, 368, 369, 370, 380, 388, 395, 401, 402, 403, 413, 421, 428, 434, 435, 436, 446, 453, 462, 464, 467, 468, 469, 479, 485, 492, 496, 497, 498, 508, 512, 519, 520, 521, 523, 524, 525, 531, 532, 539, 540, 543, 544, 545, 555, 559, 577, 578, 583, 586, 592, 593, 598, 603, 613, 614, 615, 617, 629, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 710, 711, 712, 713, 714, 716, 718, 720, 723, 724, 725, 726, 727, 730, 734, 735, 736, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 759, 761, 762, 763, 764, 766, 768, 769, 770, 771, 775, 776, 777, 778, 779, 780, 786, 787, 788, 789, 790, 791, 792, 794, 796, 799, 800, 801, 823, 824, 825, 826, 827, 829, 830, 831, 834, 836, 838, 842, 845, 847, 849, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 889, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 913, 914, 924, 925, 927, 939, 943, 952, 953, 963, 964, 966, 978, 982, 990, 991, 1001, 1002, 1004, 1016, 1020, 1028, 1029, 1039, 1040, 1042, 1054, 1058, 1066, 1067, 1079, 1080, 1082, 1094, 1098, 1107, 1108, 1118, 1119, 1121, 1133, 1137, 1146, 1147, 1157, 1158, 1160, 1172, 1176, 1184, 1185, 1195, 1196, 1198, 1210, 1214, 1222, 1223, 1233, 1234, 1236, 1248, 1252, 1261, 1262, 1265, 1266, 1267, 1277, 1281, 1288, 1290, 1292, 1295, 1296, 1297, 1298, 1309, 1314, 1320, 1322, 1324, 1326, 1329, 1330, 1331, 1332, 1343, 1348, 1354, 1356, 1358, 1360, 1363, 1364, 1365, 1366, 1377, 1382, 1388, 1391, 1392, 1395, 1396, 1397, 1407, 1411, 1418, 1420, 1422, 1425, 1426, 1427, 1428, 1439, 1444, 1452, 1453, 1456, 1457, 1458, 1468, 1472, 1480, 1481, 1484, 1485, 1486, 1496, 1500, 1508, 1509, 1512, 1513, 1514, 1524, 1528, 1535, 1537, 1539, 1542, 1543, 1544, 1545, 1556, 1561, 1567, 1570, 1571, 1574, 1575, 1576, 1586, 1590, 1597, 1599, 1601, 1604, 1605, 1606, 1607, 1618, 1623, 1629, 1632, 1633, 1636, 1637, 1638, 1648, 1652, 1685, 1687, 1688, 1689, 1691, 1692, 1693, 1698, 1699, 1703, 1731, 1733, 1744, 1746, 1751, 1754, 1755, 1760, 1766, 1767, 1772, 1780, 1781, 1786, 1838, 1843, 1844, 1854, 1857, 1858, 1859, 1862, 1863, 1870, 1871], "contain": [5, 7, 9, 13, 16, 17, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 47, 48, 50, 51, 56, 57, 67, 68, 79, 80, 82, 83, 88, 89, 93, 94, 99, 106, 107, 109, 110, 116, 117, 125, 126, 139, 140, 142, 143, 148, 149, 158, 159, 172, 173, 175, 176, 181, 182, 191, 192, 204, 205, 207, 208, 214, 215, 223, 224, 237, 238, 240, 241, 246, 247, 256, 257, 270, 271, 273, 274, 279, 280, 289, 290, 303, 304, 306, 307, 312, 313, 322, 323, 336, 337, 339, 340, 345, 346, 348, 356, 357, 370, 371, 373, 374, 379, 380, 382, 389, 390, 403, 404, 406, 407, 412, 413, 415, 422, 423, 436, 437, 439, 440, 445, 446, 454, 455, 459, 460, 469, 470, 472, 473, 478, 479, 486, 487, 498, 499, 501, 502, 507, 508, 509, 513, 514, 518, 519, 525, 526, 528, 531, 533, 545, 546, 548, 549, 554, 555, 560, 561, 567, 570, 572, 586, 591, 607, 611, 613, 615, 618, 619, 625, 626, 629, 630, 631, 632, 633, 634, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 720, 722, 723, 724, 725, 726, 727, 728, 730, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 784, 785, 787, 788, 789, 790, 792, 794, 796, 797, 799, 801, 802, 805, 807, 813, 819, 823, 824, 825, 826, 827, 829, 830, 831, 834, 836, 838, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 889, 893, 894, 896, 897, 898, 900, 901, 902, 903, 904, 905, 907, 908, 916, 917, 919, 920, 921, 922, 923, 927, 929, 931, 932, 938, 939, 944, 945, 955, 956, 958, 959, 960, 961, 962, 966, 968, 970, 971, 977, 978, 983, 984, 993, 994, 996, 997, 998, 999, 1000, 1004, 1006, 1008, 1009, 1015, 1016, 1021, 1022, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1042, 1044, 1046, 1047, 1053, 1054, 1059, 1060, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1082, 1084, 1086, 1087, 1093, 1094, 1099, 1100, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1121, 1123, 1125, 1126, 1132, 1133, 1138, 1139, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1162, 1164, 1165, 1171, 1172, 1177, 1178, 1182, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1198, 1200, 1202, 1203, 1209, 1210, 1215, 1216, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1236, 1238, 1240, 1241, 1247, 1248, 1253, 1254, 1267, 1268, 1270, 1271, 1276, 1277, 1282, 1283, 1291, 1298, 1300, 1302, 1303, 1308, 1309, 1315, 1316, 1325, 1332, 1334, 1336, 1337, 1342, 1343, 1349, 1350, 1359, 1366, 1368, 1370, 1371, 1376, 1377, 1383, 1384, 1397, 1398, 1400, 1401, 1406, 1407, 1412, 1413, 1421, 1428, 1430, 1432, 1433, 1438, 1439, 1445, 1446, 1458, 1459, 1461, 1462, 1467, 1468, 1473, 1474, 1486, 1487, 1489, 1490, 1495, 1496, 1501, 1502, 1514, 1515, 1517, 1518, 1523, 1524, 1529, 1530, 1538, 1545, 1547, 1549, 1550, 1555, 1556, 1562, 1563, 1576, 1577, 1579, 1580, 1585, 1586, 1591, 1592, 1600, 1607, 1609, 1611, 1612, 1617, 1618, 1624, 1625, 1638, 1639, 1641, 1642, 1647, 1648, 1653, 1654, 1658, 1675, 1678, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1696, 1697, 1698, 1699, 1700, 1716, 1718, 1719, 1722, 1724, 1777, 1789, 1801, 1803, 1830, 1831, 1838, 1848, 1853, 1858, 1862, 1863, 1875, 1876, 1878], "everyth": [5, 7], "pro": 5, "tip": 5, "store": [5, 9, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 59, 72, 98, 130, 151, 163, 184, 196, 228, 249, 261, 282, 294, 315, 327, 348, 361, 382, 394, 415, 427, 448, 460, 461, 491, 509, 519, 520, 537, 538, 556, 601, 602, 604, 610, 614, 618, 628, 629, 713, 773, 796, 847, 899, 910, 912, 926, 928, 940, 949, 951, 965, 967, 979, 988, 989, 1003, 1005, 1017, 1026, 1027, 1041, 1043, 1055, 1064, 1065, 1081, 1083, 1095, 1104, 1106, 1120, 1122, 1134, 1143, 1145, 1159, 1161, 1173, 1182, 1183, 1197, 1199, 1211, 1220, 1221, 1235, 1237, 1249, 1259, 1260, 1278, 1287, 1289, 1310, 1321, 1323, 1344, 1355, 1357, 1378, 1389, 1390, 1408, 1417, 1419, 1440, 1450, 1451, 1469, 1478, 1479, 1497, 1506, 1507, 1525, 1534, 1536, 1557, 1568, 1569, 1587, 1596, 1598, 1619, 1630, 1631, 1649, 1729, 1736, 1738, 1742, 1801, 1803, 1838], "geo": [5, 7, 14, 712, 763, 789], "rememb": [5, 9], "just": [5, 6, 9, 14, 15, 16, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 487, 514, 533, 561, 933, 945, 972, 984, 1010, 1022, 1048, 1060, 1088, 1100, 1127, 1139, 1166, 1178, 1204, 1216, 1242, 1254, 1283, 1288, 1311, 1316, 1322, 1345, 1350, 1356, 1379, 1384, 1413, 1418, 1441, 1446, 1474, 1502, 1530, 1535, 1558, 1563, 1592, 1597, 1620, 1625, 1654, 1703, 1744, 1746, 1858, 1868, 1869, 1870], "mean": [5, 7, 9, 14, 16, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 44, 48, 51, 52, 53, 56, 58, 60, 62, 64, 67, 76, 80, 83, 84, 85, 88, 90, 93, 103, 107, 110, 111, 112, 116, 120, 121, 123, 125, 136, 140, 143, 144, 145, 148, 150, 152, 155, 158, 169, 173, 176, 177, 178, 181, 183, 185, 188, 191, 196, 201, 205, 208, 209, 210, 214, 218, 219, 221, 223, 234, 238, 241, 242, 243, 246, 248, 250, 253, 256, 267, 271, 274, 275, 276, 279, 281, 283, 286, 289, 300, 304, 307, 308, 309, 312, 314, 316, 319, 322, 333, 337, 340, 341, 342, 345, 347, 349, 351, 353, 356, 367, 371, 374, 375, 376, 379, 381, 383, 386, 389, 400, 404, 407, 408, 409, 412, 414, 416, 419, 422, 433, 437, 440, 441, 442, 445, 447, 449, 454, 466, 470, 473, 474, 475, 478, 486, 495, 499, 502, 503, 504, 507, 510, 513, 526, 542, 546, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 590, 618, 629, 633, 707, 711, 713, 714, 715, 759, 762, 764, 765, 787, 788, 794, 798, 812, 813, 820, 893, 918, 919, 922, 923, 929, 932, 933, 934, 935, 938, 944, 957, 958, 961, 962, 968, 971, 972, 973, 974, 977, 983, 995, 996, 999, 1000, 1006, 1009, 1010, 1011, 1012, 1015, 1021, 1033, 1034, 1037, 1038, 1044, 1047, 1048, 1049, 1050, 1053, 1059, 1071, 1072, 1075, 1076, 1084, 1087, 1088, 1089, 1090, 1093, 1099, 1112, 1113, 1116, 1117, 1123, 1126, 1127, 1128, 1129, 1132, 1138, 1151, 1152, 1155, 1156, 1162, 1165, 1166, 1167, 1168, 1171, 1177, 1189, 1190, 1193, 1194, 1200, 1203, 1204, 1205, 1206, 1209, 1215, 1220, 1227, 1228, 1231, 1232, 1238, 1241, 1242, 1243, 1244, 1247, 1253, 1264, 1268, 1271, 1272, 1273, 1276, 1282, 1294, 1300, 1303, 1304, 1305, 1308, 1315, 1328, 1334, 1337, 1338, 1339, 1342, 1349, 1362, 1368, 1371, 1372, 1373, 1376, 1383, 1394, 1398, 1401, 1402, 1403, 1406, 1412, 1424, 1430, 1433, 1434, 1435, 1438, 1445, 1455, 1459, 1462, 1463, 1464, 1467, 1473, 1483, 1487, 1490, 1491, 1492, 1495, 1501, 1511, 1515, 1518, 1519, 1520, 1523, 1529, 1541, 1547, 1550, 1551, 1552, 1555, 1562, 1573, 1577, 1580, 1581, 1582, 1585, 1591, 1603, 1609, 1612, 1613, 1614, 1617, 1624, 1635, 1639, 1642, 1643, 1644, 1647, 1653, 1712, 1715, 1803], "treat": [5, 22, 219, 221, 565, 1687, 1691, 1692, 1703, 1722], "list": [5, 16, 18, 22, 27, 28, 29, 30, 31, 33, 40, 44, 51, 52, 53, 56, 57, 60, 61, 67, 74, 76, 83, 84, 85, 88, 89, 90, 91, 93, 101, 103, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 132, 136, 143, 144, 145, 148, 149, 152, 153, 158, 165, 169, 176, 177, 178, 181, 182, 185, 186, 191, 196, 199, 201, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 230, 234, 241, 242, 243, 246, 247, 250, 251, 256, 263, 267, 274, 275, 276, 279, 280, 283, 284, 289, 296, 300, 307, 308, 309, 312, 313, 316, 317, 322, 329, 333, 340, 341, 342, 345, 346, 349, 350, 356, 363, 367, 374, 375, 376, 379, 380, 383, 384, 389, 396, 400, 407, 408, 409, 412, 413, 416, 417, 422, 429, 433, 440, 441, 442, 445, 446, 449, 450, 454, 460, 463, 466, 473, 474, 475, 478, 479, 480, 482, 483, 486, 493, 495, 502, 503, 504, 507, 508, 510, 511, 513, 531, 542, 549, 550, 551, 554, 555, 556, 558, 560, 566, 567, 568, 569, 570, 571, 572, 590, 604, 615, 626, 628, 629, 630, 631, 633, 634, 673, 683, 688, 698, 707, 708, 715, 765, 785, 796, 797, 798, 800, 812, 820, 831, 834, 838, 875, 889, 910, 911, 918, 919, 920, 921, 922, 923, 932, 934, 935, 938, 939, 940, 942, 944, 949, 950, 957, 958, 959, 960, 961, 962, 971, 973, 974, 977, 978, 979, 981, 983, 988, 995, 996, 997, 998, 999, 1000, 1009, 1011, 1012, 1015, 1016, 1017, 1019, 1021, 1026, 1033, 1034, 1035, 1036, 1037, 1038, 1047, 1049, 1050, 1053, 1054, 1055, 1057, 1059, 1064, 1071, 1072, 1073, 1074, 1075, 1076, 1087, 1089, 1090, 1093, 1094, 1095, 1097, 1099, 1104, 1105, 1112, 1113, 1114, 1115, 1116, 1117, 1126, 1128, 1129, 1132, 1133, 1134, 1136, 1138, 1143, 1144, 1151, 1152, 1153, 1154, 1155, 1156, 1165, 1167, 1168, 1171, 1172, 1173, 1175, 1177, 1182, 1189, 1190, 1191, 1192, 1193, 1194, 1203, 1205, 1206, 1209, 1210, 1211, 1213, 1215, 1220, 1227, 1228, 1229, 1230, 1231, 1232, 1241, 1243, 1244, 1247, 1248, 1249, 1251, 1253, 1264, 1271, 1272, 1273, 1276, 1277, 1278, 1280, 1282, 1291, 1294, 1303, 1304, 1305, 1308, 1309, 1310, 1313, 1315, 1325, 1328, 1337, 1338, 1339, 1342, 1343, 1344, 1347, 1349, 1359, 1362, 1371, 1372, 1373, 1376, 1377, 1378, 1381, 1383, 1394, 1401, 1402, 1403, 1406, 1407, 1408, 1410, 1412, 1417, 1421, 1424, 1433, 1434, 1435, 1438, 1439, 1440, 1443, 1445, 1455, 1462, 1463, 1464, 1467, 1468, 1469, 1471, 1473, 1483, 1490, 1491, 1492, 1495, 1496, 1497, 1499, 1501, 1511, 1518, 1519, 1520, 1523, 1524, 1525, 1527, 1529, 1538, 1541, 1550, 1551, 1552, 1555, 1556, 1557, 1560, 1562, 1573, 1580, 1581, 1582, 1585, 1586, 1587, 1589, 1591, 1600, 1603, 1612, 1613, 1614, 1617, 1618, 1619, 1622, 1624, 1635, 1642, 1643, 1644, 1647, 1648, 1649, 1651, 1653, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1689, 1691, 1692, 1693, 1695, 1702, 1703, 1710, 1711, 1712, 1713, 1716, 1717, 1740, 1751, 1789, 1790, 1791, 1792, 1794, 1797, 1800, 1801, 1803, 1805, 1807, 1808, 1809, 1810, 1812, 1815, 1818, 1819, 1838, 1842, 1849, 1857, 1858, 1860, 1862, 1863, 1868, 1869, 1875, 1876, 1877, 1879], "quickli": [5, 9, 20, 25, 26], "view": [5, 7, 16, 17, 27, 31, 49, 71, 81, 97, 108, 129, 141, 162, 174, 195, 206, 227, 239, 260, 272, 293, 305, 326, 338, 360, 372, 393, 405, 426, 438, 458, 471, 490, 500, 517, 527, 536, 547, 564, 579, 580, 585, 594, 595, 600, 627, 930, 948, 969, 987, 1007, 1025, 1045, 1063, 1085, 1103, 1124, 1142, 1163, 1181, 1201, 1219, 1239, 1257, 1269, 1286, 1301, 1319, 1335, 1353, 1369, 1387, 1399, 1416, 1431, 1449, 1460, 1477, 1488, 1505, 1516, 1533, 1534, 1548, 1566, 1578, 1595, 1596, 1610, 1628, 1640, 1657, 1756, 1757, 1762, 1768, 1769, 1776, 1782, 1783, 1788, 1801, 1845, 1846, 1856], "alreadi": [5, 9, 12, 15, 28, 30, 31, 32, 33, 60, 64, 90, 120, 121, 123, 152, 155, 185, 188, 218, 219, 221, 250, 253, 283, 286, 316, 319, 349, 353, 383, 386, 416, 419, 449, 510, 713, 911, 926, 928, 950, 965, 967, 1003, 1005, 1041, 1043, 1081, 1083, 1104, 1105, 1120, 1122, 1144, 1159, 1161, 1197, 1199, 1235, 1237, 1688, 1821], "dict_kei": [5, 25, 31, 32], "max_siz": [5, 7, 14, 18, 27, 29, 32, 638, 639, 640, 641, 642, 643, 644], "diamet": [5, 7, 8, 9, 10, 14, 15, 18, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 461, 481, 538, 556, 557, 602, 604, 605, 615, 638, 639, 640, 641, 642, 643, 644, 657, 658, 659, 660, 661, 662, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 710, 713, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 734, 735, 736, 738, 740, 741, 742, 743, 744, 745, 749, 750, 751, 752, 754, 755, 756, 761, 762, 768, 769, 775, 776, 778, 779, 780, 874, 875, 878, 889, 890, 891, 912, 940, 941, 951, 979, 980, 989, 1017, 1018, 1027, 1055, 1056, 1065, 1095, 1096, 1106, 1134, 1135, 1145, 1173, 1174, 1183, 1211, 1212, 1221, 1249, 1250, 1260, 1278, 1279, 1289, 1310, 1312, 1323, 1344, 1346, 1357, 1378, 1380, 1390, 1408, 1409, 1419, 1440, 1442, 1451, 1469, 1470, 1479, 1497, 1498, 1507, 1525, 1526, 1536, 1557, 1559, 1569, 1587, 1588, 1598, 1619, 1621, 1631, 1649, 1650, 1876], "volum": [5, 7, 9, 11, 12, 14, 18, 21, 27, 29, 30, 32, 33, 556, 604, 614, 638, 639, 640, 641, 642, 643, 644, 661, 663, 710, 723, 724, 725, 726, 727, 775, 776, 777, 778, 779, 780, 824, 825, 831, 894, 940, 979, 1017, 1055, 1095, 1134, 1173, 1211, 1249, 1278, 1310, 1344, 1378, 1408, 1440, 1469, 1497, 1525, 1557, 1587, 1619, 1649], "cross_sectional_area": [5, 6, 7, 14, 18, 27, 29, 32, 638, 639, 640, 641, 642, 643, 644, 718, 719, 720, 721, 729, 730, 761, 777, 880, 887], "total_volum": [5, 7, 9, 10, 14, 18, 27, 29, 32, 642], "lens_volum": [5, 7, 9, 14, 18, 27, 29, 32, 642], "diffusive_size_factor": [5, 7, 14, 18, 23, 27, 29, 32, 518, 638, 639, 640, 641, 642, 643, 644, 877, 878, 879, 880, 882, 883, 907, 908], "return": [5, 6, 9, 11, 12, 15, 17, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 38, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 66, 67, 68, 69, 72, 76, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 124, 125, 126, 127, 130, 136, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 157, 158, 159, 160, 163, 169, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 196, 197, 201, 203, 204, 205, 207, 208, 209, 210, 213, 214, 215, 222, 223, 224, 225, 228, 234, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 255, 256, 257, 258, 261, 267, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 282, 288, 289, 290, 291, 294, 300, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 321, 322, 323, 324, 327, 333, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 355, 356, 357, 358, 361, 367, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 388, 389, 390, 391, 394, 400, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 415, 421, 422, 423, 424, 427, 433, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 453, 454, 455, 456, 461, 466, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 484, 485, 486, 487, 488, 491, 495, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 512, 513, 514, 515, 518, 524, 525, 526, 528, 530, 531, 532, 533, 534, 538, 542, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 559, 560, 561, 562, 566, 567, 568, 569, 570, 572, 573, 578, 581, 582, 583, 589, 590, 593, 596, 597, 598, 602, 610, 613, 614, 615, 617, 618, 622, 629, 630, 631, 667, 682, 697, 704, 707, 708, 710, 711, 712, 713, 715, 716, 720, 726, 732, 738, 750, 755, 759, 761, 762, 763, 765, 766, 769, 773, 776, 784, 787, 788, 789, 790, 792, 793, 796, 797, 798, 799, 801, 805, 807, 812, 813, 824, 826, 830, 838, 841, 843, 844, 845, 847, 849, 850, 851, 857, 858, 864, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 893, 894, 896, 897, 898, 900, 901, 902, 903, 904, 905, 907, 908, 910, 912, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 937, 938, 939, 943, 944, 945, 946, 949, 951, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 970, 971, 972, 973, 974, 976, 977, 978, 982, 983, 984, 985, 988, 989, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1026, 1027, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1058, 1059, 1060, 1061, 1064, 1065, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1098, 1099, 1100, 1101, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1137, 1138, 1139, 1140, 1143, 1145, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1176, 1177, 1178, 1179, 1182, 1183, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1214, 1215, 1216, 1217, 1220, 1221, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1252, 1253, 1254, 1255, 1260, 1264, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1281, 1282, 1283, 1284, 1289, 1291, 1294, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1314, 1315, 1316, 1317, 1320, 1323, 1325, 1328, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1348, 1349, 1350, 1351, 1354, 1357, 1359, 1362, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1382, 1383, 1384, 1385, 1388, 1390, 1394, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1405, 1406, 1407, 1411, 1412, 1413, 1414, 1419, 1421, 1424, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1444, 1445, 1446, 1447, 1451, 1455, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1472, 1473, 1474, 1475, 1479, 1483, 1485, 1486, 1487, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1500, 1501, 1502, 1503, 1507, 1511, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1528, 1529, 1530, 1531, 1536, 1538, 1541, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1554, 1555, 1556, 1561, 1562, 1563, 1564, 1567, 1569, 1573, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1590, 1591, 1592, 1593, 1598, 1600, 1603, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1623, 1624, 1625, 1626, 1629, 1631, 1635, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1652, 1653, 1654, 1655, 1666, 1677, 1678, 1680, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1712, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1722, 1723, 1736, 1738, 1740, 1742, 1746, 1749, 1751, 1755, 1758, 1759, 1760, 1767, 1770, 1771, 1772, 1781, 1784, 1785, 1786, 1792, 1793, 1795, 1797, 1800, 1803, 1810, 1811, 1813, 1815, 1818, 1823, 1824, 1827, 1829, 1832, 1834, 1836, 1842, 1844, 1849, 1850, 1851, 1854, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1867, 1871, 1874, 1875, 1876, 1878, 1879], "argument": [5, 15, 25, 26, 27, 28, 31, 39, 56, 61, 64, 67, 73, 88, 91, 93, 100, 116, 122, 125, 131, 148, 153, 155, 158, 164, 181, 186, 188, 191, 198, 214, 220, 223, 229, 246, 251, 253, 256, 262, 279, 284, 286, 289, 295, 312, 317, 319, 322, 328, 345, 350, 353, 356, 362, 379, 384, 386, 389, 395, 412, 417, 419, 422, 428, 445, 450, 454, 461, 464, 478, 482, 483, 486, 492, 507, 511, 513, 521, 538, 540, 554, 558, 560, 570, 571, 572, 602, 610, 614, 629, 712, 763, 789, 790, 797, 820, 872, 899, 912, 914, 916, 917, 921, 933, 938, 942, 944, 951, 953, 955, 956, 960, 972, 977, 981, 983, 988, 989, 991, 993, 994, 998, 1010, 1015, 1019, 1021, 1027, 1029, 1031, 1032, 1036, 1048, 1053, 1057, 1059, 1065, 1067, 1069, 1070, 1074, 1088, 1093, 1097, 1099, 1106, 1108, 1110, 1111, 1115, 1127, 1132, 1136, 1138, 1145, 1147, 1149, 1150, 1154, 1166, 1171, 1175, 1177, 1183, 1185, 1187, 1188, 1192, 1204, 1209, 1213, 1215, 1221, 1223, 1225, 1226, 1230, 1242, 1247, 1251, 1253, 1260, 1262, 1276, 1280, 1282, 1289, 1292, 1308, 1313, 1315, 1323, 1326, 1342, 1347, 1349, 1357, 1360, 1376, 1381, 1383, 1390, 1392, 1406, 1410, 1412, 1419, 1422, 1438, 1443, 1445, 1451, 1453, 1467, 1471, 1473, 1479, 1481, 1495, 1499, 1501, 1507, 1509, 1523, 1527, 1529, 1536, 1539, 1555, 1560, 1562, 1569, 1571, 1585, 1589, 1591, 1598, 1601, 1617, 1622, 1624, 1631, 1633, 1647, 1651, 1653, 1686, 1703, 1715, 1729, 1746, 1801, 1875, 1876], "misc": [5, 9, 29, 31, 790], "_basic_math": 5, "product": [5, 29, 638, 639, 640, 641, 642, 643, 644], "target": [5, 6, 573, 586, 711, 712, 714, 716, 759, 762, 763, 764, 766, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 799, 800, 801, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 889, 893, 894, 905, 907, 908, 1712], "prop": [5, 9, 27, 29, 31, 39, 50, 51, 73, 82, 83, 100, 109, 110, 131, 142, 143, 164, 175, 176, 198, 207, 208, 229, 240, 241, 262, 273, 274, 295, 306, 307, 328, 339, 340, 362, 373, 374, 395, 406, 407, 428, 439, 440, 464, 472, 473, 492, 501, 502, 521, 528, 540, 548, 549, 567, 638, 639, 640, 641, 642, 643, 644, 647, 650, 711, 758, 759, 762, 783, 785, 787, 788, 790, 791, 792, 795, 796, 797, 799, 800, 838, 841, 842, 867, 914, 931, 932, 953, 970, 971, 991, 1008, 1009, 1029, 1046, 1047, 1067, 1086, 1087, 1108, 1125, 1126, 1147, 1164, 1165, 1182, 1185, 1202, 1203, 1223, 1240, 1241, 1262, 1270, 1271, 1292, 1302, 1303, 1326, 1336, 1337, 1360, 1370, 1371, 1392, 1400, 1401, 1422, 1432, 1433, 1453, 1461, 1462, 1481, 1489, 1490, 1509, 1517, 1518, 1539, 1549, 1550, 1571, 1579, 1580, 1601, 1611, 1612, 1633, 1641, 1642], "final": [5, 15, 20, 23, 25, 32, 33, 34, 1064, 1666, 1733, 1746, 1878], "forget": [5, 20], "els": [5, 29, 46, 66, 78, 92, 105, 124, 138, 157, 171, 190, 197, 203, 222, 236, 255, 269, 288, 302, 321, 335, 355, 369, 388, 402, 421, 435, 453, 468, 485, 497, 512, 524, 532, 544, 559, 578, 583, 593, 598, 925, 943, 964, 982, 1002, 1020, 1040, 1058, 1080, 1098, 1119, 1137, 1158, 1176, 1196, 1214, 1234, 1252, 1266, 1281, 1296, 1314, 1330, 1348, 1364, 1382, 1396, 1411, 1426, 1444, 1457, 1472, 1485, 1500, 1513, 1528, 1543, 1561, 1575, 1590, 1605, 1623, 1637, 1652, 1751, 1755, 1760, 1767, 1772, 1781, 1786, 1844, 1854], "appear": [5, 17, 22, 27, 29, 31, 1740, 1742], "been": [5, 6, 7, 9, 12, 13, 18, 20, 25, 27, 28, 29, 30, 31, 32, 33, 44, 64, 76, 103, 136, 155, 169, 188, 201, 234, 253, 267, 286, 300, 319, 333, 353, 367, 386, 400, 419, 433, 466, 495, 542, 566, 713, 887, 918, 957, 995, 1033, 1071, 1112, 1151, 1189, 1227, 1264, 1294, 1328, 1362, 1394, 1424, 1455, 1483, 1511, 1541, 1573, 1603, 1635, 1687], "net": [5, 7, 9, 14, 17, 18, 20, 22, 23, 26, 28, 29, 30, 32, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 896, 897, 1876], "0x7f288884efc0": 5, "valid": [5, 7, 9, 14, 18, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 487, 514, 533, 561, 827, 845, 851, 858, 862, 869, 945, 984, 1022, 1060, 1100, 1139, 1178, 1216, 1254, 1283, 1316, 1350, 1384, 1413, 1446, 1474, 1502, 1530, 1563, 1592, 1625, 1654, 1867, 1874], "coord": [5, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 464, 492, 521, 540, 615, 660, 661, 662, 663, 664, 665, 674, 675, 676, 677, 678, 679, 689, 690, 691, 692, 693, 694, 743, 744, 745, 746, 747, 748, 910, 914, 949, 953, 988, 991, 1026, 1029, 1064, 1067, 1104, 1108, 1143, 1147, 1182, 1185, 1220, 1223, 1262, 1292, 1326, 1360, 1392, 1422, 1453, 1481, 1509, 1539, 1571, 1601, 1633, 1684, 1702, 1714, 1715], "625": [5, 33], "3": [5, 6, 7, 9, 10, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 47, 79, 99, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 461, 469, 498, 525, 538, 545, 602, 614, 615, 647, 650, 667, 682, 697, 712, 738, 763, 773, 789, 825, 826, 830, 858, 860, 894, 896, 897, 898, 899, 901, 902, 903, 904, 912, 921, 922, 927, 933, 951, 960, 961, 966, 972, 989, 998, 999, 1004, 1010, 1027, 1036, 1037, 1042, 1048, 1064, 1065, 1074, 1075, 1082, 1088, 1106, 1115, 1116, 1121, 1127, 1145, 1154, 1155, 1160, 1166, 1182, 1183, 1192, 1193, 1198, 1204, 1221, 1230, 1231, 1236, 1242, 1260, 1267, 1289, 1298, 1323, 1332, 1357, 1366, 1390, 1397, 1419, 1428, 1451, 1458, 1479, 1486, 1507, 1514, 1536, 1545, 1569, 1576, 1598, 1607, 1631, 1638, 1676, 1680, 1682, 1684, 1694, 1700, 1702, 1714, 1715, 1727, 1728, 1730, 1732, 1734, 1737, 1739, 1741, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1789, 1875, 1876], "conn": [5, 6, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 33, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 464, 492, 521, 540, 615, 773, 910, 914, 949, 953, 988, 991, 1026, 1029, 1064, 1067, 1104, 1108, 1143, 1147, 1182, 1185, 1220, 1223, 1262, 1292, 1326, 1360, 1392, 1422, 1453, 1481, 1509, 1539, 1571, 1601, 1633, 1678, 1681, 1684, 1704, 1716], "1200": [5, 33], "4": [5, 6, 7, 9, 10, 14, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 615, 618, 887, 898, 901, 902, 903, 921, 933, 960, 972, 998, 1010, 1036, 1048, 1074, 1088, 1115, 1127, 1154, 1166, 1182, 1192, 1204, 1230, 1242, 1728, 1730, 1732, 1734, 1737, 1739, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1750], "coordination_numb": [5, 7, 14, 15, 18, 27, 29, 30, 32], "7": [5, 6, 7, 9, 14, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 626, 638, 639, 640, 641, 642, 643, 644, 647, 887, 922, 961, 999, 1037, 1075, 1116, 1155, 1193, 1231, 1680], "8": [5, 7, 9, 14, 15, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 480, 697, 827, 847, 858, 896, 897], "9": [5, 6, 7, 8, 9, 11, 14, 15, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 647, 650, 707, 715, 765, 798, 891, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230, 1680], "11": [5, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 647], "13": [5, 7, 9, 14, 18, 23, 26, 27, 28, 29, 30, 32, 33], "14": [5, 7, 9, 14, 18, 23, 26, 27, 28, 29, 30, 32, 33, 647, 949], "16": [5, 7, 9, 14, 18, 23, 26, 27, 29, 30, 32, 33, 647], "17": [5, 7, 9, 14, 18, 23, 26, 27, 29, 30, 32, 33, 647], "18": [5, 7, 9, 14, 18, 23, 26, 27, 29, 30, 32, 33, 35, 830, 949], "xmin": [5, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 783, 795, 889], "xmax": [5, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 783, 795, 889], "ymin": [5, 7, 9, 14, 18, 22, 26, 28, 29, 30, 32], "ymax": [5, 7, 9, 14, 18, 22, 26, 28, 29, 30, 32], "surfac": [5, 7, 9, 11, 12, 14, 18, 22, 26, 27, 28, 30, 32, 33, 34, 626, 718, 719, 720, 721, 730, 761, 768, 769, 770, 771, 777, 831, 849, 850, 851, 874, 875, 889, 1026, 1220, 1676, 1694, 1695, 1709, 1713], "96": [5, 26, 33], "front": [5, 6, 7, 9, 14, 18, 22, 26, 28, 29, 30, 32, 950, 1105], "back": [5, 6, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 708, 710, 761, 784, 889, 950, 1105], "hist": [5, 9, 14, 29, 712, 714, 716, 763, 764, 766, 789, 794, 801], "ax1": 5, "ax2": 5, "subplot": [5, 6, 7, 8, 9, 14, 18, 28, 29, 30, 1875, 1876], "figsiz": [5, 7, 8, 11, 12, 18, 28, 29, 30, 591], "bin": [5, 9, 712, 714, 716, 763, 764, 766, 789, 794, 801], "edgecolor": [5, 9, 14, 18, 29], "set_titl": 5, "two": [5, 9, 10, 11, 14, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 36, 99, 482, 614, 615, 631, 661, 663, 707, 715, 765, 786, 798, 807, 812, 813, 887, 896, 897, 919, 922, 923, 933, 958, 961, 962, 972, 996, 999, 1000, 1010, 1034, 1037, 1038, 1048, 1064, 1072, 1075, 1076, 1088, 1113, 1116, 1117, 1127, 1152, 1155, 1156, 1166, 1182, 1190, 1193, 1194, 1204, 1228, 1231, 1232, 1242, 1680, 1687, 1689, 1691, 1692, 1704, 1716, 1724, 1742, 1744, 1746, 1800, 1818, 1824, 1827, 1829, 1834], "approach": [5, 9, 17, 28, 29, 30, 33, 36, 708, 824, 874, 875, 890], "first": [5, 6, 7, 9, 11, 12, 14, 16, 17, 18, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 36, 55, 87, 115, 130, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 480, 506, 530, 553, 582, 597, 785, 831, 916, 937, 955, 976, 993, 1014, 1031, 1052, 1069, 1092, 1110, 1131, 1149, 1170, 1187, 1208, 1225, 1246, 1275, 1307, 1341, 1375, 1405, 1437, 1466, 1494, 1522, 1554, 1584, 1616, 1646, 1680, 1689, 1712, 1759, 1771, 1785, 1795, 1798, 1813, 1816, 1851], "most": [5, 7, 10, 15, 18, 25, 28, 31, 32, 33, 196, 820, 875, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "simpl": [5, 7, 9, 23, 25, 26, 27, 28, 30, 31, 32, 910, 949, 988, 1143, 1777, 1789, 1805], "straight": [5, 772, 773], "forward": 5, "modul": [5, 10, 22, 26, 27, 29, 32, 37, 348, 382, 415, 459, 509, 519, 607, 611, 635, 636, 637, 645, 646, 648, 649, 652, 655, 656, 670, 685, 700, 706, 709, 714, 716, 717, 722, 728, 731, 733, 737, 739, 753, 757, 760, 764, 766, 767, 772, 774, 781, 794, 801, 802, 819, 821, 822, 828, 832, 837, 840, 846, 848, 852, 859, 863, 870, 871, 873, 876, 881, 884, 888, 892, 895, 906, 909, 1258, 1658, 1675, 1693, 1720, 1723, 1724, 1872], "second": [5, 7, 9, 18, 22, 23, 25, 31, 617, 1680, 1689, 1717, 1744, 1746], "latter": [5, 712, 763, 789, 896, 897, 1687], "recommend": [5, 29, 30, 36, 614, 1711], "let": [5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 617], "fetch": [5, 9, 16, 27, 29, 31, 32, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 498, 525, 545, 820, 841, 927, 966, 1004, 1042, 1082, 1121, 1160, 1198, 1236, 1267, 1297, 1298, 1299, 1331, 1332, 1333, 1365, 1366, 1367, 1397, 1427, 1428, 1429, 1458, 1486, 1514, 1544, 1545, 1546, 1576, 1606, 1607, 1608, 1638], "statist": [5, 9, 15, 29], "case": [5, 9, 10, 17, 20, 23, 28, 30, 31, 32, 33, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 489, 509, 516, 535, 563, 584, 590, 599, 712, 713, 763, 789, 820, 896, 897, 947, 986, 1024, 1062, 1102, 1141, 1180, 1218, 1256, 1285, 1318, 1352, 1386, 1415, 1448, 1476, 1504, 1532, 1565, 1594, 1627, 1656, 1680, 1687, 1711, 1761, 1775, 1787, 1801, 1855], "weibull_min": [5, 9, 29, 712, 716, 763, 766, 789, 801], "genert": 5, "number": [5, 9, 13, 15, 18, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 52, 53, 72, 84, 85, 98, 111, 112, 119, 130, 144, 145, 163, 177, 178, 196, 209, 210, 217, 228, 242, 243, 261, 275, 276, 294, 308, 309, 327, 341, 342, 361, 375, 376, 394, 408, 409, 427, 441, 442, 460, 474, 475, 491, 503, 504, 520, 537, 550, 551, 568, 569, 615, 680, 695, 707, 708, 710, 713, 714, 715, 716, 764, 765, 766, 781, 793, 794, 798, 801, 804, 805, 806, 807, 889, 896, 897, 910, 919, 933, 934, 935, 949, 958, 972, 973, 974, 988, 996, 1010, 1011, 1012, 1026, 1034, 1048, 1049, 1050, 1064, 1072, 1088, 1089, 1090, 1104, 1113, 1127, 1128, 1129, 1143, 1152, 1166, 1167, 1168, 1182, 1190, 1204, 1205, 1206, 1220, 1228, 1242, 1243, 1244, 1259, 1272, 1273, 1287, 1304, 1305, 1321, 1338, 1339, 1355, 1372, 1373, 1389, 1402, 1403, 1417, 1434, 1435, 1450, 1463, 1464, 1478, 1491, 1492, 1506, 1519, 1520, 1534, 1551, 1552, 1568, 1581, 1582, 1596, 1613, 1614, 1630, 1643, 1644, 1665, 1678, 1681, 1684, 1685, 1686, 1688, 1695, 1704, 1712, 1716, 1718, 1719, 1722, 1724, 1746, 1749, 1793, 1811, 1858, 1873, 1874], "rv": [5, 9, 29], "arrai": [5, 18, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 47, 48, 50, 56, 59, 60, 61, 67, 68, 69, 79, 80, 82, 88, 90, 91, 93, 94, 95, 106, 107, 109, 116, 119, 120, 122, 125, 126, 127, 139, 140, 142, 148, 151, 152, 153, 158, 159, 160, 172, 173, 175, 181, 184, 185, 186, 191, 192, 193, 197, 204, 205, 207, 214, 218, 220, 223, 224, 225, 237, 238, 240, 246, 249, 250, 251, 256, 257, 258, 270, 271, 273, 279, 282, 283, 284, 289, 290, 291, 303, 304, 306, 312, 315, 316, 317, 322, 323, 324, 336, 337, 339, 345, 348, 349, 350, 356, 357, 358, 370, 371, 373, 379, 382, 383, 384, 389, 390, 391, 403, 404, 406, 412, 415, 416, 417, 422, 423, 424, 436, 437, 439, 445, 448, 449, 450, 454, 455, 456, 461, 469, 470, 472, 478, 483, 486, 487, 488, 498, 499, 501, 507, 509, 510, 511, 513, 514, 515, 525, 526, 528, 533, 534, 538, 545, 546, 548, 554, 558, 560, 561, 562, 565, 570, 571, 572, 602, 610, 629, 633, 667, 682, 697, 707, 708, 711, 712, 713, 714, 715, 716, 738, 759, 762, 763, 764, 765, 766, 773, 781, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 807, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 912, 916, 917, 919, 921, 922, 923, 927, 929, 931, 933, 938, 942, 944, 945, 946, 951, 955, 956, 958, 960, 961, 962, 966, 968, 970, 972, 977, 981, 983, 984, 985, 988, 989, 993, 994, 996, 998, 999, 1000, 1004, 1006, 1008, 1010, 1015, 1019, 1021, 1022, 1023, 1026, 1027, 1031, 1032, 1034, 1036, 1037, 1038, 1042, 1044, 1046, 1048, 1053, 1057, 1059, 1060, 1061, 1064, 1065, 1069, 1070, 1072, 1074, 1075, 1076, 1082, 1084, 1086, 1088, 1093, 1097, 1099, 1100, 1101, 1106, 1110, 1111, 1113, 1115, 1116, 1117, 1121, 1123, 1125, 1127, 1132, 1136, 1138, 1139, 1140, 1145, 1149, 1150, 1152, 1154, 1155, 1156, 1160, 1162, 1164, 1166, 1171, 1175, 1177, 1178, 1179, 1182, 1183, 1187, 1188, 1190, 1192, 1193, 1194, 1198, 1200, 1202, 1204, 1209, 1213, 1215, 1216, 1217, 1220, 1221, 1225, 1226, 1228, 1230, 1231, 1232, 1236, 1238, 1240, 1242, 1247, 1251, 1253, 1254, 1255, 1260, 1267, 1268, 1270, 1276, 1280, 1282, 1283, 1284, 1289, 1298, 1300, 1302, 1308, 1313, 1315, 1316, 1317, 1323, 1332, 1334, 1336, 1342, 1347, 1349, 1350, 1351, 1357, 1366, 1368, 1370, 1376, 1381, 1383, 1384, 1385, 1390, 1397, 1398, 1400, 1406, 1410, 1412, 1413, 1414, 1419, 1428, 1430, 1432, 1438, 1443, 1445, 1446, 1447, 1451, 1458, 1459, 1461, 1467, 1471, 1473, 1474, 1475, 1479, 1486, 1487, 1489, 1495, 1499, 1501, 1502, 1503, 1507, 1514, 1515, 1517, 1523, 1527, 1529, 1530, 1531, 1536, 1545, 1547, 1549, 1555, 1560, 1562, 1563, 1564, 1569, 1576, 1577, 1579, 1585, 1589, 1591, 1592, 1593, 1598, 1607, 1609, 1611, 1617, 1622, 1624, 1625, 1626, 1631, 1638, 1639, 1641, 1647, 1651, 1653, 1654, 1655, 1666, 1676, 1678, 1681, 1682, 1683, 1684, 1686, 1687, 1690, 1691, 1692, 1693, 1694, 1695, 1698, 1699, 1700, 1703, 1704, 1712, 1713, 1716, 1718, 1719, 1722, 1777, 1857, 1859, 1862, 1863, 1864, 1871, 1878], "put": [5, 15, 28, 29, 197, 519, 631, 1714], "one": [5, 8, 9, 15, 17, 18, 23, 25, 27, 28, 29, 30, 31, 32, 33, 44, 51, 52, 53, 56, 60, 67, 76, 83, 84, 85, 88, 90, 93, 103, 110, 111, 112, 116, 120, 125, 136, 143, 144, 145, 148, 152, 158, 169, 176, 177, 178, 181, 185, 191, 201, 208, 209, 210, 214, 218, 223, 234, 241, 242, 243, 246, 250, 256, 267, 274, 275, 276, 279, 283, 289, 300, 307, 308, 309, 312, 316, 322, 333, 340, 341, 342, 345, 349, 356, 367, 374, 375, 376, 379, 383, 389, 400, 407, 408, 409, 412, 416, 422, 433, 440, 441, 442, 445, 449, 454, 466, 473, 474, 475, 478, 486, 495, 502, 503, 504, 507, 510, 513, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 590, 618, 631, 776, 813, 830, 910, 918, 919, 922, 923, 926, 928, 932, 933, 934, 935, 938, 944, 949, 957, 958, 961, 962, 965, 967, 971, 972, 973, 974, 977, 983, 988, 995, 996, 999, 1000, 1003, 1005, 1009, 1010, 1011, 1012, 1015, 1021, 1026, 1033, 1034, 1037, 1038, 1041, 1043, 1047, 1048, 1049, 1050, 1053, 1059, 1064, 1071, 1072, 1075, 1076, 1081, 1083, 1087, 1088, 1089, 1090, 1093, 1099, 1104, 1112, 1113, 1116, 1117, 1120, 1122, 1126, 1127, 1128, 1129, 1132, 1138, 1143, 1151, 1152, 1155, 1156, 1159, 1161, 1165, 1166, 1167, 1168, 1171, 1177, 1182, 1189, 1190, 1193, 1194, 1197, 1199, 1203, 1204, 1205, 1206, 1209, 1215, 1220, 1227, 1228, 1231, 1232, 1235, 1237, 1241, 1242, 1243, 1244, 1247, 1253, 1264, 1271, 1272, 1273, 1276, 1282, 1294, 1303, 1304, 1305, 1308, 1315, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1394, 1401, 1402, 1403, 1406, 1412, 1424, 1433, 1434, 1435, 1438, 1445, 1455, 1462, 1463, 1464, 1467, 1473, 1478, 1483, 1490, 1491, 1492, 1495, 1501, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1603, 1612, 1613, 1614, 1617, 1624, 1635, 1642, 1643, 1644, 1647, 1653, 1678, 1681, 1687, 1691, 1692, 1694, 1710, 1715, 1716, 1717, 1751, 1801, 1834, 1838, 1842, 1849, 1853, 1875], "c": [5, 6, 7, 9, 25, 26, 28, 29, 33, 36, 712, 716, 763, 766, 785, 789, 801, 830, 894, 896, 897, 899, 1714, 1715, 1744, 1746, 1847, 1852], "loc": [5, 9, 14, 29, 30, 712, 714, 716, 763, 764, 766, 789, 794, 801], "random_st": 5, "none": [5, 15, 27, 29, 30, 32, 39, 44, 45, 46, 50, 51, 52, 53, 56, 59, 60, 61, 63, 65, 66, 67, 69, 70, 73, 76, 77, 78, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 100, 103, 104, 105, 109, 110, 111, 112, 113, 116, 120, 122, 124, 125, 127, 128, 131, 136, 137, 138, 142, 143, 144, 145, 148, 151, 152, 153, 154, 156, 157, 158, 160, 161, 164, 169, 170, 171, 175, 176, 177, 178, 181, 184, 185, 186, 187, 189, 190, 191, 193, 194, 198, 201, 202, 203, 207, 208, 209, 210, 214, 218, 219, 220, 221, 222, 223, 225, 226, 229, 234, 235, 236, 240, 241, 242, 243, 246, 249, 250, 251, 252, 254, 255, 256, 258, 259, 262, 267, 268, 269, 273, 274, 275, 276, 279, 282, 283, 284, 285, 287, 288, 289, 291, 292, 295, 300, 301, 302, 306, 307, 308, 309, 312, 315, 316, 317, 318, 320, 321, 322, 324, 325, 328, 333, 334, 335, 339, 340, 341, 342, 345, 348, 349, 350, 352, 354, 355, 356, 358, 359, 362, 367, 368, 369, 373, 374, 375, 376, 379, 382, 383, 384, 385, 387, 388, 389, 391, 392, 395, 400, 401, 402, 406, 407, 408, 409, 412, 415, 416, 417, 418, 420, 421, 422, 424, 425, 428, 433, 434, 435, 439, 440, 441, 442, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 464, 466, 467, 468, 472, 473, 474, 475, 478, 480, 481, 483, 485, 486, 488, 489, 492, 495, 496, 497, 501, 502, 503, 504, 507, 509, 510, 511, 512, 513, 515, 516, 521, 523, 524, 528, 532, 534, 535, 540, 542, 543, 544, 548, 549, 550, 551, 554, 556, 557, 558, 559, 560, 562, 563, 566, 567, 568, 569, 570, 571, 572, 575, 577, 578, 583, 584, 587, 591, 592, 593, 598, 599, 604, 605, 609, 619, 625, 626, 629, 630, 633, 634, 638, 639, 640, 641, 642, 643, 644, 707, 708, 715, 759, 765, 794, 798, 805, 889, 890, 891, 914, 916, 917, 918, 920, 924, 925, 931, 932, 934, 935, 938, 940, 941, 942, 943, 944, 946, 947, 950, 953, 955, 956, 957, 959, 963, 964, 970, 971, 973, 974, 977, 979, 980, 981, 982, 983, 985, 986, 991, 993, 994, 995, 997, 1001, 1002, 1008, 1009, 1011, 1012, 1015, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1029, 1031, 1032, 1033, 1035, 1039, 1040, 1046, 1047, 1049, 1050, 1053, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1067, 1069, 1070, 1071, 1073, 1077, 1078, 1079, 1080, 1086, 1087, 1089, 1090, 1093, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1105, 1108, 1110, 1111, 1112, 1114, 1118, 1119, 1125, 1126, 1128, 1129, 1132, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1147, 1149, 1150, 1151, 1153, 1157, 1158, 1164, 1165, 1167, 1168, 1171, 1173, 1174, 1175, 1176, 1177, 1179, 1180, 1185, 1187, 1188, 1189, 1191, 1195, 1196, 1202, 1203, 1205, 1206, 1209, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1223, 1225, 1226, 1227, 1229, 1233, 1234, 1240, 1241, 1243, 1244, 1247, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1262, 1264, 1265, 1266, 1270, 1271, 1272, 1273, 1276, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1292, 1294, 1295, 1296, 1302, 1303, 1304, 1305, 1308, 1312, 1313, 1314, 1315, 1317, 1318, 1320, 1326, 1328, 1329, 1330, 1336, 1337, 1338, 1339, 1342, 1346, 1347, 1348, 1349, 1351, 1352, 1354, 1360, 1362, 1363, 1364, 1370, 1371, 1372, 1373, 1376, 1380, 1381, 1382, 1383, 1385, 1386, 1388, 1392, 1394, 1395, 1396, 1400, 1401, 1402, 1403, 1406, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1422, 1424, 1425, 1426, 1432, 1433, 1434, 1435, 1438, 1442, 1443, 1444, 1445, 1447, 1448, 1453, 1455, 1456, 1457, 1461, 1462, 1463, 1464, 1467, 1469, 1470, 1471, 1472, 1473, 1475, 1476, 1481, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1495, 1497, 1498, 1499, 1500, 1501, 1503, 1504, 1509, 1511, 1512, 1513, 1517, 1518, 1519, 1520, 1523, 1525, 1526, 1527, 1528, 1529, 1531, 1532, 1539, 1541, 1542, 1543, 1549, 1550, 1551, 1552, 1555, 1559, 1560, 1561, 1562, 1564, 1565, 1567, 1571, 1573, 1574, 1575, 1579, 1580, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1593, 1594, 1601, 1603, 1604, 1605, 1611, 1612, 1613, 1614, 1617, 1621, 1622, 1623, 1624, 1626, 1627, 1629, 1633, 1635, 1636, 1637, 1641, 1642, 1643, 1644, 1647, 1649, 1650, 1651, 1652, 1653, 1655, 1656, 1666, 1670, 1676, 1681, 1693, 1694, 1696, 1697, 1701, 1717, 1729, 1735, 1736, 1738, 1740, 1742, 1752, 1754, 1755, 1760, 1761, 1764, 1766, 1767, 1772, 1773, 1775, 1778, 1780, 1781, 1786, 1787, 1800, 1803, 1805, 1818, 1839, 1842, 1843, 1844, 1849, 1852, 1853, 1854, 1855, 1874, 1875, 1876, 1877, 1879, 1880], "would": [5, 6, 9, 10, 17, 18, 20, 22, 25, 26, 28, 30, 31, 708, 813, 894, 1717, 1874], "overwrit": [5, 25, 30, 31, 33, 60, 61, 90, 91, 120, 121, 122, 123, 152, 153, 185, 186, 218, 219, 220, 221, 250, 251, 283, 284, 316, 317, 349, 350, 383, 384, 416, 417, 449, 450, 483, 510, 511, 558, 571, 820, 942, 981, 1019, 1057, 1097, 1136, 1175, 1213, 1251, 1280, 1313, 1347, 1381, 1410, 1443, 1471, 1499, 1527, 1560, 1589, 1622, 1651], "exist": [5, 10, 11, 12, 14, 22, 28, 29, 30, 31, 32, 34, 56, 60, 61, 64, 67, 88, 90, 91, 93, 116, 120, 121, 122, 123, 125, 148, 152, 153, 155, 158, 181, 185, 186, 188, 191, 214, 218, 219, 220, 221, 223, 246, 250, 251, 253, 256, 279, 283, 284, 286, 289, 312, 316, 317, 319, 322, 345, 349, 350, 353, 356, 379, 383, 384, 386, 389, 412, 416, 417, 419, 422, 445, 449, 450, 454, 460, 461, 478, 483, 486, 507, 510, 511, 513, 538, 554, 558, 560, 570, 571, 572, 602, 799, 814, 820, 912, 938, 942, 944, 951, 977, 981, 983, 989, 1015, 1019, 1021, 1027, 1053, 1057, 1059, 1065, 1093, 1097, 1099, 1106, 1132, 1136, 1138, 1145, 1171, 1175, 1177, 1183, 1209, 1213, 1215, 1221, 1247, 1251, 1253, 1260, 1276, 1280, 1282, 1289, 1308, 1313, 1315, 1323, 1342, 1347, 1349, 1357, 1376, 1381, 1383, 1390, 1406, 1410, 1412, 1419, 1438, 1443, 1445, 1451, 1467, 1471, 1473, 1479, 1495, 1499, 1501, 1507, 1523, 1527, 1529, 1536, 1555, 1560, 1562, 1569, 1585, 1589, 1591, 1598, 1617, 1622, 1624, 1631, 1647, 1651, 1653, 1682, 1684, 1704, 1842, 1847], "now": [5, 6, 7, 9, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 712, 763, 789], "advantag": [5, 9, 30, 949], "regener": [5, 9, 15, 21, 22, 29, 30, 31, 461, 462, 480, 481, 538, 539, 557, 602, 603, 605, 790, 912, 913, 941, 951, 952, 980, 989, 990, 1018, 1027, 1028, 1056, 1065, 1066, 1096, 1106, 1107, 1135, 1145, 1146, 1174, 1183, 1184, 1212, 1221, 1222, 1250, 1260, 1261, 1279, 1289, 1290, 1312, 1323, 1324, 1346, 1357, 1358, 1380, 1390, 1391, 1409, 1419, 1420, 1442, 1451, 1452, 1470, 1479, 1480, 1498, 1507, 1508, 1526, 1536, 1537, 1559, 1569, 1570, 1588, 1598, 1599, 1621, 1631, 1632, 1650], "programmat": [5, 16], "b": [5, 9, 18, 20, 22, 25, 33, 35, 38, 59, 130, 151, 163, 184, 228, 249, 261, 282, 294, 315, 327, 361, 394, 427, 448, 614, 650, 729, 785, 792, 831, 887, 899, 905, 922, 923, 961, 962, 999, 1000, 1037, 1038, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1660, 1662, 1664, 1665, 1666, 1668, 1670, 1672, 1674, 1691, 1714, 1715, 1744, 1875, 1876, 1878, 1879], "save": [5, 6, 16, 17, 30, 34, 617, 619, 625, 626, 628, 632, 633, 634, 926, 928, 965, 967, 1003, 1005, 1041, 1043, 1081, 1083, 1120, 1122, 1159, 1161, 1182, 1197, 1199, 1235, 1237, 1688, 1735, 1740, 1840, 1848, 1852, 1853], "file": [5, 13, 26, 34, 36, 612, 613, 614, 616, 617, 618, 619, 620, 621, 625, 626, 627, 628, 630, 631, 632, 633, 634, 1677, 1838, 1847, 1852, 1853], "retain": [5, 33], "paramet": [5, 7, 9, 11, 12, 15, 21, 23, 27, 29, 30, 31, 34, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 100, 101, 103, 106, 107, 109, 110, 111, 112, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 136, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 164, 165, 169, 172, 173, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 198, 199, 201, 204, 205, 207, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 224, 225, 229, 230, 234, 237, 238, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 261, 262, 263, 267, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 295, 296, 300, 303, 304, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 328, 329, 333, 336, 337, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 362, 363, 367, 370, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 400, 403, 404, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 429, 433, 436, 437, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 460, 461, 462, 463, 464, 466, 469, 470, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 492, 493, 495, 498, 499, 501, 502, 503, 504, 507, 508, 509, 510, 511, 513, 514, 515, 518, 519, 520, 521, 525, 526, 528, 531, 533, 534, 538, 539, 540, 542, 545, 546, 548, 549, 550, 551, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572, 586, 589, 591, 602, 603, 604, 605, 610, 613, 614, 615, 617, 618, 619, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 707, 708, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 727, 729, 730, 732, 734, 735, 736, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 759, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 807, 812, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 931, 932, 933, 934, 935, 938, 939, 940, 941, 942, 944, 945, 946, 949, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 962, 965, 966, 967, 968, 970, 971, 972, 973, 974, 977, 978, 979, 980, 981, 983, 984, 985, 988, 989, 990, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1259, 1260, 1261, 1262, 1264, 1267, 1268, 1270, 1271, 1272, 1273, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1288, 1289, 1290, 1292, 1294, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1322, 1323, 1324, 1326, 1328, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1354, 1356, 1357, 1358, 1360, 1362, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1388, 1389, 1390, 1391, 1392, 1394, 1397, 1398, 1400, 1401, 1402, 1403, 1406, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1422, 1424, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1450, 1451, 1452, 1453, 1455, 1458, 1459, 1461, 1462, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1478, 1479, 1480, 1481, 1483, 1486, 1487, 1489, 1490, 1491, 1492, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1507, 1508, 1509, 1511, 1514, 1515, 1517, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1535, 1536, 1537, 1539, 1541, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1555, 1556, 1557, 1558, 1559, 1560, 1562, 1563, 1564, 1567, 1569, 1570, 1571, 1573, 1576, 1577, 1579, 1580, 1581, 1582, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1597, 1598, 1599, 1601, 1603, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1629, 1630, 1631, 1632, 1633, 1635, 1638, 1639, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1666, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1726, 1727, 1729, 1731, 1733, 1736, 1738, 1740, 1742, 1744, 1746, 1749, 1803, 1840, 1842, 1847, 1848, 1849, 1852, 1853, 1857, 1859, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1871, 1874, 1875, 1876, 1877, 1878, 1879, 1880], "parametr": 5, "studi": [5, 9, 28, 33], "easili": [5, 7, 16, 29, 33, 36, 196], "hard": [5, 9, 17], "code": [5, 12, 13, 14, 16, 17, 22, 25, 27, 29, 33, 34, 618, 712, 714, 716, 763, 764, 766, 789, 794, 801, 820], "previous": [5, 30, 36], "pore_s": [5, 9, 14, 29, 30, 712, 763, 789, 1880], "propnam": [5, 6, 7, 9, 10, 11, 12, 14, 18, 21, 22, 27, 29, 30, 31, 32, 33, 47, 48, 64, 79, 80, 106, 107, 139, 140, 155, 172, 173, 188, 204, 205, 237, 238, 253, 270, 271, 286, 303, 304, 319, 336, 337, 353, 370, 371, 386, 403, 404, 419, 436, 437, 461, 469, 470, 480, 481, 498, 499, 525, 526, 538, 545, 546, 556, 557, 573, 602, 604, 605, 629, 712, 763, 789, 790, 899, 912, 927, 929, 940, 941, 951, 966, 968, 979, 980, 989, 1004, 1006, 1017, 1018, 1027, 1042, 1044, 1055, 1056, 1065, 1082, 1084, 1095, 1096, 1106, 1121, 1123, 1134, 1135, 1145, 1160, 1162, 1173, 1174, 1183, 1198, 1200, 1211, 1212, 1221, 1236, 1238, 1249, 1250, 1260, 1267, 1268, 1278, 1279, 1289, 1297, 1298, 1299, 1300, 1310, 1312, 1323, 1331, 1332, 1333, 1334, 1344, 1346, 1357, 1365, 1366, 1367, 1368, 1378, 1380, 1390, 1397, 1398, 1408, 1409, 1419, 1427, 1428, 1429, 1430, 1440, 1442, 1451, 1458, 1459, 1469, 1470, 1479, 1486, 1487, 1497, 1498, 1507, 1514, 1515, 1525, 1526, 1536, 1544, 1545, 1546, 1547, 1557, 1559, 1569, 1576, 1577, 1587, 1588, 1598, 1606, 1607, 1608, 1609, 1619, 1621, 1631, 1638, 1639, 1649, 1650, 1867], "revers": [5, 9, 197, 1800, 1818], "look": [5, 7, 9, 17, 18, 22, 23, 25, 28, 29, 30, 31, 32, 36, 196, 713, 820, 838, 860, 949, 1682, 1740, 1751, 1847, 1852], "up": [5, 7, 9, 10, 17, 23, 27, 28, 29, 31, 33, 36, 196, 460, 820, 838, 845, 860], "random": [5, 6, 7, 8, 11, 12, 15, 20, 21, 22, 27, 29, 30, 31, 33, 34, 638, 639, 640, 641, 642, 643, 644, 708, 712, 714, 716, 763, 764, 766, 778, 779, 781, 789, 790, 794, 801, 874, 899, 916, 917, 949, 955, 956, 993, 994, 1026, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1220, 1225, 1226, 1709, 1712, 1746], "correspond": [5, 8, 18, 21, 27, 28, 29, 30, 31, 32, 33, 461, 538, 586, 602, 618, 626, 629, 716, 766, 773, 793, 796, 801, 812, 820, 824, 845, 912, 916, 917, 920, 922, 923, 951, 955, 956, 959, 961, 962, 989, 993, 994, 997, 999, 1000, 1027, 1031, 1032, 1035, 1037, 1038, 1064, 1065, 1069, 1070, 1073, 1075, 1076, 1106, 1110, 1111, 1114, 1116, 1117, 1145, 1149, 1150, 1153, 1155, 1156, 1183, 1187, 1188, 1191, 1193, 1194, 1221, 1225, 1226, 1229, 1231, 1232, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1680, 1686, 1688, 1713, 1722, 1874, 1877], "determin": [5, 7, 8, 9, 20, 22, 28, 32, 33, 626, 820, 889, 893, 896, 897, 949, 1682, 1696, 1697, 1698, 1699, 1702, 1704, 1865], "cumul": [5, 9, 28, 29, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447], "probabl": [5, 9, 17, 28, 29, 31, 33], "allow": [5, 25, 26, 29, 31, 519, 615, 626, 708, 790, 820, 1321, 1355, 1478, 1694, 1838], "user": [5, 6, 11, 12, 13, 15, 16, 25, 26, 27, 30, 31, 34, 459, 617, 633, 790, 910, 949, 1026, 1064, 1104, 1143, 1182, 1220, 1450, 1694], "instanc": [5, 9, 16, 17, 25, 26, 27, 28, 29, 30, 31, 461, 538, 602, 820, 911, 912, 950, 951, 989, 1027, 1065, 1105, 1106, 1144, 1145, 1182, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1478, 1479, 1507, 1534, 1536, 1569, 1596, 1598, 1631, 1666, 1676, 1694, 1711, 1801, 1804, 1838, 1875], "spatial": [5, 9, 708, 807, 812, 921, 960, 998, 1036, 1074, 1115, 1154, 1182, 1192, 1230, 1695, 1720, 1723], "correl": [5, 9, 706, 708, 792, 830, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 861, 864, 865, 866, 868, 869], "origin": [5, 6, 10, 22, 33, 34, 893, 1703, 1713, 1731, 1733, 1744, 1746, 1803], "make": [5, 6, 7, 9, 15, 16, 17, 18, 22, 25, 26, 28, 29, 30, 31, 32, 51, 52, 53, 56, 83, 84, 85, 88, 110, 111, 112, 116, 143, 144, 145, 148, 176, 177, 178, 181, 208, 209, 210, 214, 241, 242, 243, 246, 274, 275, 276, 279, 307, 308, 309, 312, 340, 341, 342, 345, 374, 375, 376, 379, 407, 408, 409, 412, 440, 441, 442, 445, 460, 473, 474, 475, 478, 502, 503, 504, 507, 549, 550, 551, 554, 567, 568, 569, 570, 813, 887, 889, 899, 932, 934, 935, 938, 971, 973, 974, 977, 1009, 1011, 1012, 1015, 1047, 1049, 1050, 1053, 1087, 1089, 1090, 1093, 1126, 1128, 1129, 1132, 1165, 1167, 1168, 1171, 1203, 1205, 1206, 1209, 1220, 1241, 1243, 1244, 1247, 1271, 1272, 1273, 1276, 1303, 1304, 1305, 1308, 1337, 1338, 1339, 1342, 1371, 1372, 1373, 1376, 1401, 1402, 1403, 1406, 1433, 1434, 1435, 1438, 1462, 1463, 1464, 1467, 1490, 1491, 1492, 1495, 1518, 1519, 1520, 1523, 1550, 1551, 1552, 1555, 1580, 1581, 1582, 1585, 1612, 1613, 1614, 1617, 1642, 1643, 1644, 1647, 1677, 1680, 1710, 1717, 1718, 1719, 1842, 1875], "sure": [5, 7, 20, 29, 36, 1680], "afterward": 5, "pore_se": [5, 9, 15, 29, 30, 712, 763, 789], "num_rang": [5, 9, 15, 29, 30, 638, 639, 640, 641, 642, 643, 644, 707, 715, 759, 765, 798], "99": [5, 26, 29, 33], "ve": [5, 18, 36], "settl": 5, "should": [5, 7, 9, 10, 15, 18, 22, 25, 27, 28, 29, 32, 33, 36, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 85, 88, 89, 90, 91, 93, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 189, 191, 208, 209, 210, 214, 215, 218, 219, 220, 223, 241, 242, 243, 246, 247, 248, 250, 251, 252, 253, 254, 256, 274, 275, 276, 279, 280, 281, 283, 284, 285, 286, 287, 289, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 322, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 374, 375, 376, 379, 380, 381, 383, 384, 385, 386, 387, 389, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 422, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 454, 461, 462, 473, 474, 475, 478, 479, 481, 483, 486, 502, 503, 504, 507, 508, 510, 511, 513, 531, 538, 539, 549, 550, 551, 554, 555, 557, 558, 560, 567, 568, 569, 570, 571, 572, 586, 590, 602, 603, 605, 614, 615, 627, 629, 657, 662, 665, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 691, 694, 698, 699, 701, 705, 708, 712, 763, 778, 779, 789, 799, 800, 813, 820, 893, 896, 897, 912, 913, 921, 932, 934, 935, 938, 939, 941, 942, 944, 950, 951, 952, 960, 971, 973, 974, 977, 978, 980, 981, 983, 989, 990, 998, 1009, 1011, 1012, 1015, 1016, 1018, 1019, 1021, 1027, 1028, 1036, 1047, 1049, 1050, 1053, 1054, 1056, 1057, 1059, 1065, 1066, 1074, 1077, 1078, 1087, 1089, 1090, 1093, 1094, 1096, 1097, 1099, 1105, 1106, 1107, 1115, 1126, 1128, 1129, 1132, 1133, 1135, 1136, 1138, 1145, 1146, 1154, 1165, 1167, 1168, 1171, 1172, 1174, 1175, 1177, 1183, 1184, 1192, 1203, 1205, 1206, 1209, 1210, 1212, 1213, 1215, 1221, 1222, 1230, 1241, 1243, 1244, 1247, 1248, 1250, 1251, 1253, 1260, 1261, 1271, 1272, 1273, 1276, 1277, 1279, 1280, 1282, 1289, 1290, 1303, 1304, 1305, 1308, 1309, 1312, 1313, 1315, 1323, 1324, 1337, 1338, 1339, 1342, 1343, 1346, 1347, 1349, 1357, 1358, 1371, 1372, 1373, 1376, 1377, 1380, 1381, 1383, 1390, 1391, 1401, 1402, 1403, 1406, 1407, 1409, 1410, 1412, 1419, 1420, 1433, 1434, 1435, 1438, 1439, 1442, 1443, 1445, 1451, 1452, 1462, 1463, 1464, 1467, 1468, 1470, 1471, 1473, 1479, 1480, 1490, 1491, 1492, 1495, 1496, 1498, 1499, 1501, 1507, 1508, 1518, 1519, 1520, 1523, 1524, 1526, 1527, 1529, 1536, 1537, 1550, 1551, 1552, 1555, 1556, 1559, 1560, 1562, 1569, 1570, 1580, 1581, 1582, 1585, 1586, 1588, 1589, 1591, 1598, 1599, 1612, 1613, 1614, 1617, 1618, 1621, 1622, 1624, 1631, 1632, 1642, 1643, 1644, 1647, 1648, 1650, 1651, 1653, 1676, 1677, 1680, 1684, 1688, 1703, 1710, 1711, 1713, 1715, 1721, 1749, 1858, 1876, 1878, 1879], "alwai": [5, 27, 29, 33, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 1714, 1715], "less": [5, 10, 27, 29, 779, 1874], "than": [5, 6, 9, 18, 23, 26, 27, 29, 30, 31, 33, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 99, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 466, 473, 474, 475, 478, 480, 486, 495, 502, 503, 504, 507, 513, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 631, 824, 827, 851, 869, 918, 922, 926, 928, 932, 934, 935, 938, 944, 957, 961, 965, 967, 971, 973, 974, 977, 983, 995, 999, 1003, 1005, 1009, 1011, 1012, 1015, 1021, 1033, 1037, 1041, 1043, 1047, 1049, 1050, 1053, 1059, 1071, 1075, 1081, 1083, 1087, 1089, 1090, 1093, 1099, 1112, 1116, 1120, 1122, 1126, 1128, 1129, 1132, 1138, 1151, 1155, 1159, 1161, 1165, 1167, 1168, 1171, 1177, 1189, 1193, 1197, 1199, 1203, 1205, 1206, 1209, 1215, 1227, 1231, 1235, 1237, 1241, 1243, 1244, 1247, 1253, 1264, 1271, 1272, 1273, 1276, 1282, 1294, 1303, 1304, 1305, 1308, 1315, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1394, 1401, 1402, 1403, 1406, 1412, 1424, 1433, 1434, 1435, 1438, 1445, 1455, 1462, 1463, 1464, 1467, 1473, 1483, 1490, 1491, 1492, 1495, 1501, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1603, 1612, 1613, 1614, 1617, 1624, 1635, 1642, 1643, 1644, 1647, 1653, 1687, 1691, 1692], "equal": [5, 6, 22, 25, 27, 784, 891, 896, 897, 949, 1704, 1800, 1818], "thei": [5, 9, 10, 11, 12, 13, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 99, 590, 614, 633, 708, 713, 718, 719, 720, 721, 820, 896, 897, 899, 910, 911, 919, 921, 923, 949, 950, 958, 960, 962, 996, 998, 1000, 1034, 1036, 1038, 1064, 1072, 1074, 1076, 1105, 1113, 1115, 1117, 1143, 1144, 1152, 1154, 1156, 1182, 1190, 1192, 1194, 1220, 1228, 1230, 1232, 1291, 1325, 1359, 1421, 1450, 1478, 1538, 1600, 1678, 1704, 1709, 1711, 1715, 1716, 1803, 1804, 1875], "connect": [5, 9, 18, 22, 23, 26, 27, 29, 32, 33, 34, 99, 615, 772, 773, 778, 779, 810, 811, 813, 815, 816, 818, 889, 891, 910, 916, 917, 919, 920, 921, 949, 955, 956, 958, 959, 960, 988, 993, 994, 996, 997, 998, 1026, 1031, 1032, 1034, 1035, 1036, 1064, 1069, 1070, 1072, 1073, 1074, 1078, 1104, 1110, 1111, 1113, 1114, 1115, 1143, 1149, 1150, 1152, 1153, 1154, 1182, 1187, 1188, 1190, 1191, 1192, 1220, 1225, 1226, 1228, 1229, 1230, 1677, 1678, 1679, 1680, 1681, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1701, 1704, 1710, 1711, 1712, 1716, 1717, 1722, 1875, 1876], "otherwis": [5, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 487, 514, 533, 561, 581, 596, 631, 842, 867, 921, 933, 945, 960, 972, 984, 998, 1010, 1022, 1036, 1048, 1060, 1074, 1088, 1100, 1115, 1127, 1139, 1154, 1166, 1178, 1192, 1204, 1216, 1230, 1242, 1254, 1283, 1299, 1316, 1333, 1350, 1367, 1384, 1413, 1429, 1446, 1474, 1502, 1530, 1546, 1563, 1592, 1608, 1625, 1654, 1704, 1736, 1738, 1742, 1758, 1770, 1777, 1784, 1850, 1857, 1865, 1875, 1876], "re": [5, 9, 15, 17, 18, 27, 29, 31, 36, 118, 480, 707, 715, 765, 795, 798, 820], "realli": [5, 9, 25, 27, 28, 29, 30, 33], "break": [5, 17, 27, 33], "happen": [5, 9, 15, 29, 30, 31, 32, 778, 779], "d": [5, 7, 20, 23, 25, 27, 28, 31, 43, 49, 70, 71, 75, 81, 96, 97, 102, 108, 128, 129, 135, 141, 161, 162, 168, 174, 194, 195, 200, 206, 226, 227, 233, 239, 259, 260, 266, 272, 292, 293, 299, 305, 325, 326, 332, 338, 359, 360, 366, 372, 392, 393, 399, 405, 425, 426, 432, 438, 457, 458, 465, 471, 489, 490, 494, 500, 516, 517, 522, 527, 535, 536, 541, 547, 563, 564, 575, 576, 579, 580, 584, 585, 587, 588, 594, 595, 599, 600, 614, 830, 858, 887, 915, 930, 947, 948, 954, 969, 986, 987, 992, 1007, 1024, 1025, 1026, 1030, 1045, 1062, 1063, 1068, 1085, 1102, 1103, 1109, 1124, 1141, 1142, 1148, 1163, 1180, 1181, 1186, 1201, 1218, 1219, 1220, 1224, 1239, 1256, 1257, 1263, 1269, 1285, 1286, 1293, 1301, 1318, 1319, 1327, 1335, 1352, 1353, 1361, 1369, 1386, 1387, 1393, 1399, 1415, 1416, 1423, 1431, 1448, 1449, 1454, 1460, 1476, 1477, 1482, 1488, 1504, 1505, 1510, 1516, 1532, 1533, 1540, 1548, 1565, 1566, 1572, 1578, 1594, 1595, 1602, 1610, 1627, 1628, 1634, 1640, 1656, 1657, 1703, 1744, 1746, 1752, 1753, 1756, 1757, 1761, 1762, 1764, 1765, 1768, 1769, 1775, 1776, 1777, 1778, 1779, 1782, 1783, 1787, 1788, 1839, 1845, 1846, 1855, 1856, 1859, 1871], "check": [5, 25, 27, 32, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 487, 514, 533, 561, 820, 945, 984, 1022, 1060, 1100, 1139, 1178, 1216, 1254, 1283, 1291, 1316, 1325, 1350, 1359, 1384, 1413, 1421, 1446, 1474, 1502, 1530, 1538, 1563, 1592, 1600, 1625, 1654, 1694, 1701, 1702, 1705, 1751, 1857, 1858, 1865, 1867, 1875, 1876], "consist": [5, 10, 23, 27, 32, 460, 614, 618, 682, 697, 1417, 1804], "result": [5, 6, 9, 10, 11, 18, 20, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 36, 51, 56, 60, 64, 83, 88, 90, 110, 116, 118, 120, 143, 148, 152, 155, 176, 181, 185, 188, 208, 214, 218, 219, 221, 241, 246, 250, 253, 274, 279, 283, 286, 307, 312, 316, 319, 340, 345, 349, 353, 374, 379, 383, 386, 407, 412, 416, 419, 440, 445, 449, 461, 473, 478, 481, 502, 507, 510, 538, 549, 554, 557, 567, 570, 602, 605, 626, 627, 729, 759, 762, 785, 787, 790, 912, 919, 922, 923, 932, 938, 941, 949, 951, 958, 961, 962, 971, 977, 980, 989, 996, 999, 1000, 1009, 1015, 1018, 1026, 1027, 1034, 1037, 1038, 1047, 1053, 1056, 1064, 1065, 1072, 1075, 1076, 1087, 1093, 1096, 1106, 1113, 1116, 1117, 1126, 1132, 1135, 1145, 1152, 1155, 1156, 1165, 1171, 1174, 1183, 1190, 1193, 1194, 1203, 1209, 1212, 1220, 1221, 1228, 1231, 1232, 1241, 1247, 1250, 1260, 1271, 1276, 1279, 1289, 1303, 1308, 1312, 1323, 1337, 1342, 1346, 1357, 1371, 1376, 1380, 1390, 1401, 1406, 1409, 1419, 1433, 1438, 1442, 1451, 1462, 1467, 1470, 1479, 1490, 1495, 1498, 1507, 1518, 1523, 1526, 1536, 1550, 1555, 1559, 1569, 1580, 1585, 1588, 1598, 1612, 1617, 1621, 1631, 1642, 1647, 1650, 1687, 1691, 1692, 1695, 1702, 1713, 1718, 1719, 1729, 1733, 1746, 1777, 1789, 1801], "carefulli": [5, 32, 33, 1711], "ensur": [5, 6, 8, 9, 10, 16, 27, 29, 31, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 487, 514, 533, 556, 561, 590, 604, 820, 940, 945, 979, 984, 1017, 1022, 1055, 1060, 1095, 1100, 1134, 1139, 1173, 1178, 1211, 1216, 1249, 1254, 1278, 1283, 1310, 1316, 1344, 1350, 1378, 1384, 1408, 1413, 1440, 1446, 1469, 1474, 1497, 1502, 1525, 1530, 1557, 1563, 1587, 1592, 1619, 1625, 1649, 1654, 1804, 1870], "thoat": 5, "smaller": [5, 9, 29], "provid": [5, 9, 10, 21, 28, 29, 30, 31, 32, 33, 35, 39, 40, 49, 60, 71, 73, 74, 81, 90, 97, 100, 101, 108, 120, 129, 131, 132, 141, 152, 162, 164, 165, 174, 185, 195, 198, 199, 206, 218, 219, 221, 227, 229, 230, 239, 250, 260, 262, 263, 272, 283, 293, 295, 296, 305, 316, 326, 328, 329, 338, 349, 360, 362, 363, 372, 383, 393, 395, 396, 405, 416, 426, 428, 429, 438, 449, 458, 464, 471, 490, 492, 493, 500, 510, 517, 521, 527, 536, 540, 547, 564, 573, 579, 580, 585, 594, 595, 600, 601, 618, 707, 711, 712, 713, 714, 715, 716, 759, 762, 763, 764, 765, 766, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 914, 930, 948, 953, 969, 987, 988, 991, 1007, 1025, 1029, 1045, 1063, 1067, 1085, 1103, 1108, 1124, 1142, 1147, 1163, 1181, 1185, 1201, 1219, 1223, 1239, 1257, 1262, 1269, 1286, 1292, 1301, 1319, 1320, 1326, 1335, 1353, 1354, 1360, 1369, 1387, 1388, 1392, 1399, 1416, 1422, 1431, 1449, 1453, 1460, 1477, 1478, 1481, 1488, 1505, 1509, 1516, 1533, 1539, 1548, 1566, 1567, 1571, 1578, 1595, 1601, 1610, 1628, 1629, 1633, 1640, 1657, 1688, 1693, 1694, 1756, 1757, 1762, 1768, 1769, 1776, 1782, 1783, 1788, 1801, 1838, 1845, 1846, 1853, 1856, 1862, 1863, 1874, 1875, 1879], "call": [5, 7, 9, 10, 12, 15, 17, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 59, 60, 68, 90, 94, 120, 126, 151, 152, 159, 184, 185, 192, 218, 224, 249, 250, 257, 282, 283, 290, 315, 316, 323, 348, 349, 357, 382, 383, 390, 415, 416, 423, 448, 449, 455, 461, 487, 509, 510, 514, 519, 533, 538, 556, 561, 574, 586, 590, 602, 604, 716, 766, 801, 820, 912, 940, 945, 951, 979, 984, 989, 1017, 1022, 1027, 1055, 1060, 1065, 1095, 1100, 1106, 1134, 1139, 1145, 1173, 1178, 1183, 1211, 1216, 1221, 1249, 1254, 1260, 1278, 1283, 1289, 1310, 1311, 1316, 1323, 1344, 1345, 1350, 1357, 1378, 1379, 1384, 1390, 1408, 1413, 1419, 1440, 1441, 1446, 1451, 1469, 1474, 1479, 1497, 1502, 1507, 1525, 1530, 1536, 1557, 1558, 1563, 1569, 1587, 1592, 1598, 1619, 1620, 1625, 1631, 1649, 1654, 1875, 1876, 1878], "from_neighbor_por": [5, 9, 29, 30, 638, 639, 640, 641, 642, 643, 644], "either": [5, 12, 18, 20, 22, 25, 27, 28, 29, 31, 32, 33, 36, 68, 70, 94, 96, 99, 126, 128, 159, 161, 192, 194, 224, 226, 257, 259, 290, 292, 323, 325, 357, 359, 390, 392, 394, 423, 425, 455, 457, 487, 489, 514, 516, 533, 535, 561, 563, 584, 599, 617, 712, 763, 789, 793, 831, 893, 945, 947, 984, 986, 1022, 1024, 1026, 1060, 1062, 1064, 1100, 1102, 1139, 1141, 1178, 1180, 1216, 1218, 1220, 1254, 1256, 1283, 1285, 1288, 1311, 1316, 1318, 1322, 1345, 1350, 1352, 1356, 1379, 1384, 1386, 1413, 1415, 1418, 1441, 1446, 1448, 1474, 1476, 1502, 1504, 1530, 1532, 1535, 1558, 1563, 1565, 1592, 1594, 1597, 1620, 1625, 1627, 1654, 1656, 1676, 1683, 1686, 1688, 1690, 1703, 1706, 1729, 1740, 1761, 1775, 1787, 1801, 1836, 1855, 1875, 1876], "minimum": [5, 9, 29, 711, 759, 762, 787, 788, 894, 1709, 1712], "mayb": 5, "also": [5, 6, 9, 10, 14, 15, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 197, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 461, 466, 473, 474, 475, 478, 486, 495, 502, 503, 504, 507, 513, 519, 537, 538, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 602, 707, 711, 712, 713, 714, 715, 716, 759, 762, 763, 764, 765, 766, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 912, 918, 919, 922, 923, 932, 933, 934, 935, 938, 944, 949, 951, 957, 958, 961, 962, 971, 972, 973, 974, 977, 983, 989, 995, 996, 999, 1000, 1009, 1010, 1011, 1012, 1015, 1021, 1026, 1027, 1033, 1034, 1037, 1038, 1047, 1048, 1049, 1050, 1053, 1059, 1065, 1071, 1072, 1075, 1076, 1087, 1088, 1089, 1090, 1093, 1099, 1106, 1112, 1113, 1116, 1117, 1126, 1127, 1128, 1129, 1132, 1138, 1145, 1151, 1152, 1155, 1156, 1165, 1166, 1167, 1168, 1171, 1177, 1183, 1189, 1190, 1193, 1194, 1203, 1204, 1205, 1206, 1209, 1215, 1220, 1221, 1227, 1228, 1231, 1232, 1241, 1242, 1243, 1244, 1247, 1253, 1260, 1264, 1271, 1272, 1273, 1276, 1282, 1289, 1294, 1303, 1304, 1305, 1308, 1315, 1320, 1323, 1328, 1337, 1338, 1339, 1342, 1349, 1354, 1357, 1362, 1371, 1372, 1373, 1376, 1383, 1390, 1394, 1401, 1402, 1403, 1406, 1412, 1419, 1424, 1433, 1434, 1435, 1438, 1445, 1451, 1455, 1462, 1463, 1464, 1467, 1473, 1478, 1479, 1483, 1490, 1491, 1492, 1495, 1501, 1507, 1511, 1518, 1519, 1520, 1523, 1529, 1534, 1536, 1541, 1550, 1551, 1552, 1555, 1562, 1567, 1569, 1573, 1580, 1581, 1582, 1585, 1591, 1596, 1598, 1603, 1612, 1613, 1614, 1617, 1624, 1631, 1635, 1642, 1643, 1644, 1647, 1653, 1678, 1680, 1687, 1691, 1692, 1703, 1711, 1722, 1726, 1803, 1847, 1852, 1858], "down": [5, 17, 23, 27, 33], "distinct": 5, "demonstr": [5, 11, 16, 21, 28, 29, 30, 31, 32, 33, 34], "min": [5, 9, 29, 30, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 499, 526, 546, 638, 639, 640, 641, 642, 643, 644, 711, 758, 759, 762, 787, 788, 929, 968, 1006, 1044, 1084, 1123, 1162, 1200, 1238, 1268, 1300, 1334, 1368, 1398, 1430, 1459, 1487, 1515, 1547, 1577, 1609, 1639], "throat_siz": [5, 9, 29, 30, 1880], "diameter_2": [5, 9], "carefuli": 5, "chosen": [5, 9, 31, 1711], "reason": [5, 9, 10, 15, 16, 17, 21, 23, 25, 28, 29, 31, 32], "mention": [5, 22], "If": [5, 9, 17, 20, 22, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 50, 51, 52, 53, 56, 58, 60, 62, 63, 65, 67, 69, 70, 73, 74, 82, 83, 84, 85, 88, 90, 93, 95, 96, 100, 101, 109, 110, 111, 112, 116, 120, 121, 123, 125, 127, 128, 131, 132, 142, 143, 144, 145, 148, 150, 152, 154, 156, 158, 160, 161, 164, 165, 175, 176, 177, 178, 181, 183, 185, 187, 189, 191, 193, 194, 198, 199, 207, 208, 209, 210, 214, 218, 219, 221, 223, 225, 226, 229, 230, 240, 241, 242, 243, 246, 248, 250, 252, 254, 256, 258, 259, 262, 263, 273, 274, 275, 276, 279, 281, 283, 285, 287, 289, 291, 292, 295, 296, 306, 307, 308, 309, 312, 314, 316, 318, 320, 322, 324, 325, 328, 329, 339, 340, 341, 342, 345, 347, 348, 349, 351, 352, 354, 356, 358, 359, 362, 363, 373, 374, 375, 376, 379, 381, 382, 383, 385, 387, 389, 391, 392, 395, 396, 406, 407, 408, 409, 412, 414, 415, 416, 418, 420, 422, 424, 425, 428, 429, 439, 440, 441, 442, 445, 447, 449, 451, 452, 454, 456, 457, 461, 464, 472, 473, 474, 475, 478, 480, 486, 488, 489, 492, 493, 501, 502, 503, 504, 507, 509, 510, 513, 515, 516, 521, 528, 534, 535, 538, 540, 548, 549, 550, 551, 554, 556, 560, 562, 563, 567, 568, 569, 570, 572, 581, 584, 596, 599, 602, 604, 610, 618, 629, 631, 633, 713, 759, 762, 785, 787, 805, 823, 824, 825, 826, 827, 829, 830, 831, 834, 836, 842, 845, 847, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 865, 866, 867, 868, 869, 875, 889, 893, 899, 910, 912, 914, 916, 917, 919, 921, 922, 923, 926, 928, 931, 932, 933, 934, 935, 938, 940, 944, 946, 947, 949, 951, 953, 955, 956, 958, 960, 961, 962, 965, 967, 970, 971, 972, 973, 974, 977, 979, 983, 985, 986, 988, 989, 991, 993, 994, 996, 998, 999, 1000, 1003, 1005, 1008, 1009, 1010, 1011, 1012, 1015, 1017, 1021, 1023, 1024, 1026, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1038, 1041, 1043, 1046, 1047, 1048, 1049, 1050, 1053, 1055, 1059, 1061, 1062, 1064, 1065, 1067, 1069, 1070, 1072, 1074, 1075, 1076, 1077, 1078, 1081, 1083, 1086, 1087, 1088, 1089, 1090, 1093, 1095, 1099, 1101, 1102, 1104, 1106, 1108, 1110, 1111, 1113, 1115, 1116, 1117, 1120, 1122, 1125, 1126, 1127, 1128, 1129, 1132, 1134, 1138, 1140, 1141, 1143, 1145, 1147, 1149, 1150, 1152, 1154, 1155, 1156, 1159, 1161, 1164, 1165, 1166, 1167, 1168, 1171, 1173, 1177, 1179, 1180, 1182, 1183, 1185, 1187, 1188, 1190, 1192, 1193, 1194, 1197, 1199, 1202, 1203, 1204, 1205, 1206, 1209, 1211, 1215, 1217, 1218, 1220, 1221, 1223, 1225, 1226, 1228, 1230, 1231, 1232, 1235, 1237, 1240, 1241, 1242, 1243, 1244, 1247, 1249, 1253, 1255, 1256, 1260, 1262, 1270, 1271, 1272, 1273, 1276, 1278, 1282, 1284, 1285, 1289, 1292, 1299, 1302, 1303, 1304, 1305, 1308, 1310, 1315, 1317, 1318, 1320, 1323, 1326, 1333, 1336, 1337, 1338, 1339, 1342, 1344, 1349, 1351, 1352, 1354, 1357, 1360, 1367, 1370, 1371, 1372, 1373, 1376, 1378, 1383, 1385, 1386, 1388, 1390, 1392, 1400, 1401, 1402, 1403, 1406, 1408, 1412, 1414, 1415, 1419, 1422, 1429, 1432, 1433, 1434, 1435, 1438, 1440, 1445, 1447, 1448, 1451, 1453, 1461, 1462, 1463, 1464, 1467, 1469, 1473, 1475, 1476, 1478, 1479, 1481, 1489, 1490, 1491, 1492, 1495, 1497, 1501, 1503, 1504, 1507, 1509, 1517, 1518, 1519, 1520, 1523, 1525, 1529, 1531, 1532, 1536, 1539, 1546, 1549, 1550, 1551, 1552, 1555, 1557, 1562, 1564, 1565, 1567, 1569, 1571, 1579, 1580, 1581, 1582, 1585, 1587, 1591, 1593, 1594, 1598, 1601, 1608, 1611, 1612, 1613, 1614, 1617, 1619, 1624, 1626, 1627, 1629, 1631, 1633, 1641, 1642, 1643, 1644, 1647, 1649, 1653, 1655, 1656, 1676, 1680, 1681, 1686, 1687, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1703, 1704, 1714, 1715, 1716, 1717, 1736, 1738, 1742, 1751, 1758, 1761, 1770, 1775, 1777, 1784, 1787, 1800, 1803, 1818, 1826, 1833, 1842, 1849, 1850, 1852, 1853, 1855, 1862, 1863, 1874, 1875, 1876, 1878, 1879], "some": [5, 9, 10, 11, 18, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 519, 573, 610, 799, 820, 894, 896, 897, 1182, 1478, 1694, 1715, 1717], "unhappi": 5, "reduc": [5, 10, 30, 33, 130, 1681], "small": [5, 9, 13, 18, 20, 26, 28, 29, 33, 626, 1875, 1876, 1878], "after": [5, 6, 7, 23, 29, 31, 33, 34, 633, 713, 1683, 1722], "power": [5, 22, 29, 30, 33, 708, 842, 867, 1299, 1333, 1367, 1429, 1546, 1608], "util": [5, 29, 31, 1777, 1789, 1864], "properli": [5, 6, 9, 36], "instead": [5, 9, 15, 18, 20, 23, 25, 28, 29, 30, 31, 32, 1728, 1730, 1732, 1734, 1737, 1739, 1741, 1743, 1745, 1747, 1748, 1750], "essenti": [5, 27, 28, 29, 30, 519, 615, 1678, 1695, 1715, 1716], "done": [5, 7, 9, 16, 17, 20, 25, 26, 27, 28, 29, 32, 33, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 499, 526, 546, 630, 820, 929, 968, 1006, 1044, 1084, 1123, 1162, 1200, 1238, 1268, 1300, 1334, 1368, 1398, 1430, 1459, 1487, 1515, 1547, 1577, 1609, 1639], "plot": [5, 6, 9, 11, 12, 26, 28, 29, 30, 33, 1875, 1876, 1877, 1878, 1879, 1880], "itself": [5, 17, 28, 29, 59, 151, 184, 249, 282, 315, 448, 573, 1681, 1800, 1818, 1828, 1835, 1837], "ahould": 5, "ideal": [5, 25, 820, 823], "paraview": [5, 26, 36, 632, 633, 1875, 1878], "plot_networkx": 5, "ig": 5, "fri": 6, "combarn": 6, "1971": 6, "longitudin": 6, "c_": [6, 22, 130, 896, 897], "erfc": 6, "bigl": 6, "ut": 6, "d_": [6, 7, 8, 11, 20, 23, 130, 682], "bigr": 6, "exp": [6, 896, 897, 902], "ux": 6, "time": [6, 7, 9, 17, 23, 25, 27, 28, 29, 30, 33, 34, 196, 348, 382, 415, 461, 509, 538, 602, 610, 707, 715, 765, 798, 912, 951, 989, 1027, 1064, 1065, 1106, 1145, 1182, 1183, 1220, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1688, 1853], "u": [6, 9, 25, 26, 28], "averag": [6, 7, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 499, 526, 546, 708, 731, 732, 833, 835, 838, 891, 929, 968, 1006, 1044, 1084, 1123, 1162, 1200, 1238, 1268, 1300, 1334, 1368, 1398, 1430, 1459, 1487, 1515, 1547, 1577, 1609, 1639, 1712], "veloc": 6, "concentr": [6, 7, 8, 20, 22, 23, 27, 34, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 510, 845, 847, 896, 897, 1876], "complementari": [6, 26], "error": [6, 10, 22, 25, 27, 29, 31, 64, 155, 188, 253, 286, 319, 353, 386, 419], "implement": [6, 11, 16, 22, 27, 31, 228, 427, 609, 820, 890, 891], "fit": [6, 7, 9, 31], "special": [6, 10, 29, 32, 33, 1478], "optim": [6, 196, 1077, 1078], "curve_fit": 6, "2d": [6, 30, 619, 657, 662, 665, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 691, 694, 698, 699, 701, 705, 756, 771, 949, 1026, 1064, 1220, 1682, 1695, 1703, 1714, 1718, 1877, 1879], "3d": [6, 30, 626, 708, 1026, 1064, 1220, 1682, 1695, 1703, 1714, 1715, 1875, 1876, 1878], "well": [6, 7, 9, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 62, 351, 459, 614, 898, 900, 901, 902, 903, 904, 905, 926, 928, 965, 967, 1003, 1005, 1041, 1043, 1078, 1081, 1083, 1120, 1122, 1159, 1161, 1197, 1199, 1235, 1237, 1695, 1724, 1876, 1877], "etc": [6, 7, 11, 12, 16, 23, 27, 30, 32, 34, 36, 797, 820, 1709, 1881], "entri": [6, 11, 12, 16, 18, 20, 22, 28, 29, 33, 196, 586, 796, 820, 874, 875, 889, 926, 965, 1003, 1041, 1081, 1120, 1159, 1197, 1235, 1751, 1857, 1865], "water": [6, 8, 9, 11, 12, 14, 16, 18, 21, 32, 33, 827, 845, 847, 851, 858, 862, 869, 887, 891, 899, 1478, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657], "40": [6, 9, 10, 12, 30, 32, 33, 851, 887], "electrical_conduct": [6, 654, 882, 883], "accumul": 6, "mass": [6, 18, 20, 22, 23, 32, 823, 826, 839, 844, 896], "occur": [6, 9, 17, 18, 27, 29, 31, 32, 33, 130, 196, 1714], "order": [6, 22, 27, 28, 29, 31, 33, 55, 60, 87, 90, 115, 120, 147, 152, 180, 185, 196, 213, 218, 219, 221, 245, 250, 278, 283, 311, 316, 344, 349, 378, 383, 411, 416, 444, 449, 477, 506, 510, 530, 553, 556, 582, 586, 590, 597, 604, 796, 889, 919, 923, 937, 940, 958, 962, 976, 979, 996, 1000, 1014, 1017, 1034, 1038, 1052, 1055, 1072, 1076, 1092, 1095, 1113, 1117, 1131, 1134, 1152, 1156, 1170, 1173, 1190, 1194, 1208, 1211, 1228, 1232, 1246, 1249, 1275, 1278, 1307, 1310, 1341, 1344, 1375, 1378, 1405, 1408, 1437, 1440, 1466, 1469, 1494, 1497, 1522, 1525, 1554, 1557, 1584, 1587, 1616, 1619, 1646, 1649, 1694, 1712, 1759, 1771, 1785, 1800, 1818, 1851], "surround": [6, 9, 874], "its": [6, 10, 11, 16, 23, 26, 29, 30, 31, 33, 34, 99, 808, 809, 813, 820, 831, 849, 850, 1064, 1679], "def": [6, 11, 12, 15, 25, 31, 1744, 1746, 1864], "effective_pore_volum": 6, "throat_volum": [6, 9, 10, 29, 725], "pore_volum": [6, 9, 10, 29, 30, 710, 725], "pvol": 6, "tvol": 6, "vtot": 6, "sum": [6, 7, 9, 10, 11, 12, 25, 28, 29, 32, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 800, 843, 933, 972, 1010, 1048, 1088, 1127, 1166, 1204, 1242], "assert": 6, "isclos": 6, "total": [6, 10, 14, 18, 23, 26, 29, 32, 130, 843, 933, 972, 1010, 1048, 1088, 1127, 1166, 1204, 1242, 1677], "effective_volum": 6, "field": [6, 1859, 1871], "therefor": [6, 8, 10, 11, 12, 21, 23, 27, 33, 614, 661, 663, 896, 897], "netwok": 6, "prior": [6, 16, 33, 1026, 1064, 1220], "advectiondiffus": [6, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "algorthim": 6, "sf": [6, 14, 23, 32], "50": [6, 9, 10, 23, 28, 29, 31, 33, 712, 714, 716, 763, 764, 766, 789, 794, 801], "rang": [6, 9, 11, 12, 15, 25, 29, 33, 35, 1695, 1797, 1815], "timestep": 6, "tell": [6, 17, 18, 22, 25, 28, 29, 33], "rather": [6, 16, 22, 29, 33, 824, 922, 961, 999, 1037, 1075, 1116, 1155, 1193, 1231, 1687, 1691, 1692], "default": [6, 21, 25, 30, 31, 32, 34, 36, 39, 44, 46, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 78, 83, 89, 90, 91, 92, 100, 103, 105, 110, 117, 120, 121, 122, 123, 124, 131, 136, 138, 143, 149, 150, 152, 153, 154, 155, 156, 157, 164, 169, 171, 176, 182, 183, 185, 186, 187, 188, 189, 190, 198, 201, 203, 208, 215, 218, 219, 220, 221, 222, 228, 229, 234, 236, 241, 247, 248, 250, 251, 252, 253, 254, 255, 262, 267, 269, 274, 280, 281, 283, 284, 285, 286, 287, 288, 295, 300, 302, 307, 313, 314, 316, 317, 318, 319, 320, 321, 328, 333, 335, 340, 346, 347, 349, 350, 351, 352, 353, 354, 355, 362, 367, 369, 374, 380, 381, 383, 384, 385, 386, 387, 388, 395, 400, 402, 407, 413, 414, 416, 417, 418, 419, 420, 421, 428, 433, 435, 440, 446, 447, 449, 450, 451, 452, 453, 461, 462, 464, 466, 468, 473, 479, 480, 483, 485, 492, 495, 497, 502, 508, 510, 511, 512, 521, 524, 531, 532, 538, 539, 540, 542, 544, 549, 555, 558, 559, 566, 567, 571, 578, 581, 583, 589, 593, 596, 598, 602, 603, 614, 621, 626, 627, 629, 630, 631, 633, 634, 707, 710, 711, 713, 715, 759, 761, 762, 765, 784, 787, 788, 798, 820, 842, 867, 889, 893, 910, 912, 913, 914, 916, 917, 918, 919, 921, 922, 923, 925, 926, 928, 932, 933, 939, 942, 943, 949, 951, 952, 953, 955, 956, 957, 958, 960, 961, 962, 964, 965, 967, 971, 972, 978, 981, 982, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1002, 1003, 1005, 1009, 1010, 1016, 1019, 1020, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1040, 1041, 1043, 1047, 1048, 1054, 1057, 1058, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1080, 1081, 1083, 1087, 1088, 1094, 1097, 1098, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1122, 1126, 1127, 1133, 1136, 1137, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1161, 1165, 1166, 1172, 1175, 1176, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1196, 1197, 1199, 1203, 1204, 1210, 1213, 1214, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1234, 1235, 1237, 1241, 1242, 1248, 1251, 1252, 1260, 1261, 1262, 1264, 1266, 1271, 1277, 1280, 1281, 1289, 1290, 1292, 1294, 1296, 1299, 1303, 1309, 1313, 1314, 1323, 1324, 1326, 1328, 1330, 1333, 1337, 1343, 1347, 1348, 1357, 1358, 1360, 1362, 1364, 1367, 1371, 1377, 1381, 1382, 1390, 1391, 1392, 1394, 1396, 1401, 1407, 1410, 1411, 1419, 1420, 1422, 1424, 1426, 1429, 1433, 1439, 1443, 1444, 1451, 1452, 1453, 1455, 1457, 1462, 1468, 1471, 1472, 1479, 1480, 1481, 1483, 1485, 1490, 1496, 1499, 1500, 1507, 1508, 1509, 1511, 1513, 1518, 1524, 1527, 1528, 1536, 1537, 1539, 1541, 1543, 1546, 1550, 1556, 1560, 1561, 1569, 1570, 1571, 1573, 1575, 1580, 1586, 1589, 1590, 1598, 1599, 1601, 1603, 1605, 1608, 1612, 1618, 1622, 1623, 1631, 1632, 1633, 1635, 1637, 1642, 1648, 1651, 1652, 1666, 1676, 1679, 1680, 1681, 1687, 1691, 1692, 1694, 1709, 1717, 1755, 1758, 1760, 1767, 1770, 1772, 1781, 1784, 1786, 1797, 1815, 1844, 1850, 1854, 1875, 1876], "which": [6, 7, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 50, 58, 72, 73, 76, 82, 99, 100, 103, 109, 121, 123, 130, 131, 136, 142, 150, 164, 169, 175, 183, 196, 198, 201, 207, 219, 221, 229, 234, 240, 248, 261, 262, 267, 273, 281, 295, 300, 306, 314, 328, 333, 339, 347, 348, 362, 367, 373, 381, 382, 394, 395, 400, 406, 414, 415, 427, 428, 433, 439, 447, 460, 461, 462, 464, 466, 472, 481, 482, 492, 495, 501, 509, 519, 520, 521, 528, 538, 539, 540, 542, 548, 557, 566, 573, 586, 590, 591, 602, 603, 605, 610, 614, 626, 629, 631, 633, 682, 697, 707, 711, 712, 713, 714, 715, 716, 759, 762, 763, 764, 765, 766, 778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 807, 812, 813, 815, 820, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 912, 913, 914, 916, 917, 918, 920, 921, 931, 941, 949, 951, 952, 953, 955, 956, 957, 959, 960, 970, 980, 989, 990, 991, 993, 994, 995, 997, 998, 1008, 1018, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1046, 1056, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1074, 1086, 1096, 1106, 1107, 1108, 1110, 1111, 1112, 1114, 1115, 1125, 1135, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1164, 1174, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1191, 1192, 1202, 1212, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1229, 1230, 1240, 1250, 1259, 1260, 1261, 1262, 1264, 1270, 1279, 1288, 1289, 1290, 1292, 1294, 1302, 1312, 1321, 1322, 1323, 1324, 1326, 1328, 1336, 1346, 1355, 1356, 1357, 1358, 1360, 1362, 1370, 1380, 1390, 1391, 1392, 1394, 1400, 1409, 1417, 1418, 1419, 1420, 1422, 1424, 1432, 1442, 1450, 1451, 1452, 1453, 1455, 1461, 1470, 1478, 1479, 1480, 1481, 1483, 1489, 1498, 1507, 1508, 1509, 1511, 1517, 1526, 1535, 1536, 1537, 1539, 1541, 1549, 1559, 1569, 1570, 1571, 1573, 1579, 1588, 1597, 1598, 1599, 1601, 1603, 1611, 1621, 1630, 1631, 1632, 1633, 1635, 1641, 1650, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1687, 1690, 1693, 1694, 1703, 1704, 1709, 1710, 1711, 1712, 1715, 1716, 1717, 1721, 1731, 1733, 1736, 1738, 1742, 1744, 1746, 1749, 1801, 1847, 1852, 1857, 1858, 1874], "interv": [6, 348, 382, 415, 509, 610], "through": [6, 7, 8, 12, 14, 17, 20, 29, 32, 33, 36, 58, 130, 150, 183, 248, 281, 314, 347, 381, 414, 447, 1077, 1078], "integr": [6, 23, 32, 348, 382, 415, 509, 609, 610], "span": [6, 348, 382, 415, 509, 1704, 1712], "tspan": [6, 348, 382, 415, 509, 610], "mod": [6, 29], "ad_dif_conduct": [6, 654], "ad_dif": [6, 654], "s_scheme": [6, 872], "powerlaw": [6, 872], "transientadvectiondiffus": [6, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360], "_updat": [6, 11, 12], "set_outflow_bc": 6, "100": [6, 7, 8, 9, 10, 14, 18, 25, 26, 33, 923, 962, 1000, 1038, 1076, 1117, 1156, 1194, 1232], "saveat": [6, 348, 382, 415, 509, 610], "x0": [6, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 509, 610, 1666, 1670], "ps_front": 6, "ts_front": 6, "find_neighbor_throat": [6, 28, 30, 33, 933, 972, 1010, 1048, 1088, 1127, 1166, 1182, 1204, 1242], "xor": [6, 28, 30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 466, 473, 474, 475, 478, 486, 495, 502, 503, 504, 507, 513, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 918, 919, 922, 923, 932, 933, 934, 935, 938, 944, 957, 958, 961, 962, 971, 972, 973, 974, 977, 983, 995, 996, 999, 1000, 1009, 1010, 1011, 1012, 1015, 1021, 1033, 1034, 1037, 1038, 1047, 1048, 1049, 1050, 1053, 1059, 1071, 1072, 1075, 1076, 1087, 1088, 1089, 1090, 1093, 1099, 1112, 1113, 1116, 1117, 1126, 1127, 1128, 1129, 1132, 1138, 1151, 1152, 1155, 1156, 1165, 1166, 1167, 1168, 1171, 1177, 1189, 1190, 1193, 1194, 1203, 1204, 1205, 1206, 1209, 1215, 1227, 1228, 1231, 1232, 1241, 1242, 1243, 1244, 1247, 1253, 1264, 1271, 1272, 1273, 1276, 1282, 1294, 1303, 1304, 1305, 1308, 1315, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1394, 1401, 1402, 1403, 1406, 1412, 1424, 1433, 1434, 1435, 1438, 1445, 1455, 1462, 1463, 1464, 1467, 1473, 1483, 1490, 1491, 1492, 1495, 1501, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1603, 1612, 1613, 1614, 1617, 1624, 1635, 1642, 1643, 1644, 1647, 1653, 1687, 1691, 1692], "count": [6, 9, 29, 52, 53, 84, 85, 111, 112, 144, 145, 177, 178, 209, 210, 242, 243, 275, 276, 308, 309, 341, 342, 375, 376, 408, 409, 441, 442, 474, 475, 503, 504, 550, 551, 568, 569, 614, 807, 919, 922, 923, 933, 934, 935, 958, 961, 962, 972, 973, 974, 996, 999, 1000, 1010, 1011, 1012, 1034, 1037, 1038, 1048, 1049, 1050, 1072, 1075, 1076, 1088, 1089, 1090, 1113, 1116, 1117, 1127, 1128, 1129, 1152, 1155, 1156, 1166, 1167, 1168, 1190, 1193, 1194, 1204, 1205, 1206, 1228, 1231, 1232, 1242, 1243, 1244, 1272, 1273, 1304, 1305, 1338, 1339, 1372, 1373, 1402, 1403, 1434, 1435, 1463, 1464, 1491, 1492, 1519, 1520, 1551, 1552, 1581, 1582, 1613, 1614, 1643, 1644, 1709], "c_avg": 6, "ti": 6, "c_front": 6, "q_front": 6, "append": [6, 11, 12, 25, 30, 31, 1684, 1717, 1794, 1812], "o": [6, 11, 12, 14, 30, 33, 34, 1847, 1852, 1876], "legend": [6, 9, 11, 12, 14, 30, 33], "set_xlabel": [6, 9, 14, 30], "set_ylabel": [6, 14, 30], "being": [6, 9, 12, 18, 22, 25, 30, 31, 33, 64, 155, 188, 253, 286, 319, 353, 386, 419, 459, 461, 482, 484, 538, 602, 631, 792, 796, 912, 916, 917, 951, 955, 956, 989, 993, 994, 1027, 1031, 1032, 1065, 1069, 1070, 1106, 1110, 1111, 1145, 1149, 1150, 1183, 1187, 1188, 1221, 1225, 1226, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1847, 1865, 1875, 1876], "effictivli": 6, "known": [6, 7, 8, 9, 10, 14, 22, 27, 29, 31, 845, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226, 1687, 1691, 1692], "fittiong": 6, "dl": 6, "el1": 6, "el2": 6, "el3": 6, "v_pred": 6, "compar": [6, 9, 14, 23, 32], "q_throat": 6, "a_throat": 6, "v_throat": 6, "g": [6, 20, 23, 26, 29, 30, 31, 33, 36, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 461, 470, 499, 526, 538, 546, 602, 615, 622, 629, 729, 730, 823, 825, 826, 827, 845, 851, 854, 856, 857, 858, 862, 865, 866, 868, 869, 874, 896, 897, 910, 911, 912, 929, 950, 951, 968, 989, 1006, 1027, 1044, 1065, 1084, 1105, 1106, 1123, 1143, 1144, 1145, 1162, 1183, 1200, 1221, 1238, 1260, 1268, 1289, 1300, 1323, 1334, 1357, 1368, 1390, 1398, 1419, 1430, 1451, 1459, 1479, 1487, 1507, 1515, 1536, 1547, 1569, 1577, 1598, 1609, 1631, 1639, 1688, 1731, 1744, 1842, 1849, 1875, 1876, 1879], "xdata": 6, "float": [6, 16, 20, 28, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 348, 352, 354, 382, 385, 387, 415, 418, 420, 451, 452, 484, 509, 610, 626, 714, 716, 764, 766, 783, 792, 794, 795, 801, 807, 812, 831, 874, 889, 893, 894, 896, 897, 1288, 1322, 1356, 1418, 1535, 1597, 1687, 1717, 1744, 1746, 1865, 1874, 1875, 1876, 1877], "ydata": 6, "popt": 6, "pcov": 6, "p0": 6, "disp_coeff": 6, "v_fit": 6, "4e": [6, 26], "m": [6, 21, 23, 29, 35, 614, 650, 729, 792, 825, 826, 827, 831, 850, 851, 857, 858, 862, 869, 896, 897], "6581e": 6, "09": [6, 8, 29], "3610e": 6, "04": 6, "0669e": 6, "05": [6, 9, 29, 31, 647, 650, 845], "el": 6, "zero": [6, 20, 27, 28, 33, 615, 661, 663, 893, 896, 897, 910, 916, 917, 926, 928, 949, 955, 956, 965, 967, 988, 993, 994, 1003, 1005, 1026, 1031, 1032, 1041, 1043, 1064, 1069, 1070, 1081, 1083, 1104, 1110, 1111, 1120, 1122, 1143, 1149, 1150, 1159, 1161, 1182, 1187, 1188, 1197, 1199, 1220, 1225, 1226, 1235, 1237, 1688], "len": [6, 9, 10, 12, 29, 32, 461, 538, 602, 642, 738, 776, 779, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631], "torutous": 7, "complic": [7, 17, 20, 28, 29, 30, 31, 33], "multipli": [7, 9, 25, 30, 891, 893, 1677], "divid": [7, 12], "eff": [7, 8, 11, 130], "epsilon": [7, 829], "tau": 7, "correct": [7, 8, 10, 21, 23, 28, 29, 30, 32, 33, 461, 481, 538, 556, 557, 602, 604, 605, 872, 878, 912, 940, 941, 951, 979, 980, 989, 1017, 1018, 1027, 1055, 1056, 1065, 1095, 1096, 1106, 1134, 1135, 1145, 1173, 1174, 1183, 1211, 1212, 1221, 1249, 1250, 1260, 1278, 1279, 1289, 1310, 1312, 1323, 1344, 1346, 1357, 1378, 1380, 1390, 1408, 1409, 1419, 1440, 1442, 1451, 1469, 1470, 1479, 1497, 1498, 1507, 1525, 1526, 1536, 1557, 1559, 1569, 1587, 1588, 1598, 1619, 1621, 1631, 1649, 1650], "windi": 7, "path": [7, 614, 618, 628, 632, 772, 773, 1693, 1847, 1848, 1852], "matter": 7, "move": [7, 9, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 459, 1064, 1220, 1676, 1681], "substanc": 7, "classic": [7, 196], "definit": [7, 15, 22, 23, 31, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452, 1838], "actual": [7, 15, 16, 17, 18, 22, 23, 25, 27, 28, 29, 30, 31, 33, 614, 625, 629, 716, 720, 766, 801, 894, 1694, 1722, 1853], "realiti": [7, 23, 31], "mani": [7, 9, 15, 16, 18, 20, 25, 29, 31, 626, 793, 820, 874, 890, 949], "pathwai": 7, "thought": [7, 27, 33], "l_": 7, "repres": [7, 9, 18, 28, 30, 33, 460, 610, 682, 697, 716, 766, 801, 824, 896, 897, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226, 1417, 1478, 1677, 1678, 1714, 1716, 1875, 1876], "microstructur": 7, "materi": [7, 9, 11, 12, 26, 33, 58, 130, 150, 183, 248, 281, 314, 347, 381, 414, 447, 875, 1882], "toray090": 7, "carbon": 7, "paper": [7, 9], "sand": [7, 33], "stone": 7, "electrospun": 7, "fiber": 7, "sphere": [7, 9, 10, 23, 26, 29, 30, 34, 639, 641, 642, 667, 680, 682, 695, 697, 710, 738, 750, 813, 874, 1719, 1874], "cylind": [7, 9, 10, 23, 26, 29, 639, 642, 658, 660, 667, 672, 674, 680, 682, 687, 689, 695, 697, 738, 741, 743, 750, 874, 890, 1718, 1874], "all": [7, 9, 14, 15, 16, 17, 20, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 42, 44, 51, 52, 53, 56, 57, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 76, 83, 84, 85, 88, 89, 90, 91, 93, 98, 99, 100, 101, 103, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 130, 131, 132, 133, 134, 136, 143, 144, 145, 148, 149, 152, 153, 154, 155, 156, 158, 163, 164, 165, 166, 167, 169, 176, 177, 178, 181, 182, 185, 186, 187, 188, 189, 191, 196, 198, 199, 201, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 228, 229, 230, 231, 232, 234, 241, 242, 243, 246, 247, 250, 251, 252, 253, 254, 256, 261, 262, 263, 264, 265, 267, 274, 275, 276, 279, 280, 283, 284, 285, 286, 287, 289, 294, 295, 296, 297, 298, 300, 307, 308, 309, 312, 313, 316, 317, 318, 319, 320, 322, 327, 328, 329, 330, 331, 333, 340, 341, 342, 345, 346, 349, 350, 351, 352, 353, 354, 356, 361, 362, 363, 364, 365, 367, 374, 375, 376, 379, 380, 383, 384, 385, 386, 387, 389, 394, 395, 396, 397, 398, 400, 407, 408, 409, 412, 413, 416, 417, 418, 419, 420, 422, 427, 428, 429, 430, 431, 433, 440, 441, 442, 445, 446, 449, 450, 451, 452, 454, 460, 461, 462, 464, 466, 473, 474, 475, 478, 479, 480, 481, 483, 486, 491, 492, 493, 495, 502, 503, 504, 507, 508, 509, 510, 511, 513, 519, 520, 521, 531, 537, 538, 539, 540, 542, 549, 550, 551, 554, 555, 556, 557, 558, 560, 566, 567, 568, 569, 570, 571, 572, 575, 586, 587, 602, 603, 604, 605, 618, 622, 628, 629, 631, 712, 713, 725, 763, 781, 789, 790, 813, 820, 899, 910, 912, 913, 914, 916, 917, 918, 919, 921, 922, 923, 932, 933, 934, 935, 938, 939, 940, 941, 942, 944, 949, 951, 952, 953, 955, 956, 957, 958, 960, 961, 962, 971, 972, 973, 974, 977, 978, 979, 980, 981, 983, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1009, 1010, 1011, 1012, 1015, 1016, 1017, 1018, 1019, 1021, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1047, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1059, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1138, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1165, 1166, 1167, 1168, 1171, 1172, 1173, 1174, 1175, 1177, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1203, 1204, 1205, 1206, 1209, 1210, 1211, 1212, 1213, 1215, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1241, 1242, 1243, 1244, 1247, 1248, 1249, 1250, 1251, 1253, 1259, 1260, 1261, 1262, 1264, 1271, 1272, 1273, 1276, 1277, 1278, 1279, 1280, 1282, 1287, 1289, 1290, 1291, 1292, 1294, 1303, 1304, 1305, 1308, 1309, 1310, 1312, 1313, 1315, 1320, 1321, 1323, 1324, 1325, 1326, 1328, 1337, 1338, 1339, 1342, 1343, 1344, 1346, 1347, 1349, 1354, 1355, 1357, 1358, 1359, 1360, 1362, 1371, 1372, 1373, 1376, 1377, 1378, 1380, 1381, 1383, 1388, 1389, 1390, 1391, 1392, 1394, 1401, 1402, 1403, 1406, 1407, 1408, 1409, 1410, 1412, 1417, 1419, 1420, 1421, 1422, 1424, 1433, 1434, 1435, 1438, 1439, 1440, 1442, 1443, 1445, 1450, 1451, 1452, 1453, 1455, 1462, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1473, 1478, 1479, 1480, 1481, 1483, 1490, 1491, 1492, 1495, 1496, 1497, 1498, 1499, 1501, 1506, 1507, 1508, 1509, 1511, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1527, 1529, 1534, 1536, 1537, 1538, 1539, 1541, 1550, 1551, 1552, 1555, 1556, 1557, 1559, 1560, 1562, 1567, 1568, 1569, 1570, 1571, 1573, 1580, 1581, 1582, 1585, 1586, 1587, 1588, 1589, 1591, 1596, 1598, 1599, 1600, 1601, 1603, 1612, 1613, 1614, 1617, 1618, 1619, 1621, 1622, 1624, 1629, 1630, 1631, 1632, 1633, 1635, 1642, 1643, 1644, 1647, 1648, 1649, 1650, 1651, 1653, 1659, 1661, 1666, 1676, 1677, 1678, 1681, 1682, 1687, 1691, 1692, 1694, 1701, 1709, 1710, 1711, 1713, 1716, 1720, 1723, 1736, 1738, 1742, 1751, 1752, 1764, 1778, 1791, 1801, 1803, 1807, 1809, 1820, 1822, 1824, 1825, 1827, 1834, 1836, 1838, 1839, 1852, 1853, 1857, 1859, 1862, 1863, 1868, 1869, 1870, 1875, 1876, 1878], "notic": [7, 9, 31, 33], "0x7fc1e392f010": 7, "180": [7, 11, 12, 25, 26, 28, 33, 34, 729], "36": [7, 9, 26, 29, 31, 33], "thermophys": [7, 9, 31, 819, 1450], "about": [7, 9, 16, 17, 18, 22, 27, 28, 30, 31, 32, 33, 896, 897, 898, 900, 901, 902, 903, 904, 905, 933, 972, 1010, 1048, 1088, 1127, 1166, 1204, 1242, 1695, 1713, 1714, 1715], "air": [7, 9, 11, 12, 17, 20, 31, 33, 34, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286], "easi": [7, 9, 14, 15, 16, 18, 22, 25, 28, 30, 949], "remov": [7, 18, 23, 25, 26, 29, 30, 33, 36, 55, 60, 61, 64, 87, 90, 91, 115, 120, 121, 122, 123, 147, 152, 153, 155, 180, 185, 186, 188, 213, 218, 219, 220, 221, 245, 250, 251, 253, 278, 283, 284, 286, 311, 316, 317, 319, 344, 349, 350, 353, 378, 383, 384, 386, 411, 416, 417, 419, 444, 449, 450, 459, 477, 483, 506, 510, 511, 530, 553, 558, 571, 575, 582, 587, 597, 916, 917, 937, 942, 949, 955, 956, 976, 981, 993, 994, 1014, 1019, 1026, 1031, 1032, 1052, 1057, 1064, 1069, 1070, 1092, 1097, 1110, 1111, 1131, 1136, 1149, 1150, 1170, 1175, 1187, 1188, 1208, 1213, 1220, 1225, 1226, 1246, 1251, 1275, 1280, 1307, 1311, 1313, 1341, 1345, 1347, 1375, 1379, 1381, 1405, 1410, 1437, 1441, 1443, 1466, 1471, 1494, 1499, 1522, 1527, 1554, 1558, 1560, 1584, 1589, 1616, 1620, 1622, 1646, 1651, 1681, 1683, 1687, 1692, 1721, 1728, 1730, 1732, 1734, 1737, 1739, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1752, 1759, 1764, 1771, 1778, 1785, 1791, 1797, 1809, 1815, 1822, 1825, 1826, 1832, 1839, 1840, 1851, 1858], "phy": [7, 830], "del": [7, 25, 30, 31, 1311, 1345, 1379, 1441, 1558, 1620], "purpos": [7, 15, 20, 21, 29, 31, 33, 784], "fickiandiffus": [7, 8, 11, 22, 34, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162], "fd": [7, 11, 22, 34], "requir": [7, 9, 11, 12, 13, 15, 17, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 123, 556, 604, 626, 790, 820, 874, 890, 894, 940, 949, 979, 1017, 1055, 1095, 1134, 1173, 1182, 1211, 1249, 1278, 1310, 1344, 1378, 1408, 1440, 1450, 1469, 1497, 1525, 1557, 1587, 1619, 1649, 1677, 1702], "pretti": [7, 9, 30, 573, 1877, 1880], "much": [7, 20, 23, 25, 28, 29, 30, 32, 36, 1874], "everi": [7, 15, 16, 27, 29, 30, 31, 36, 1288, 1322, 1356, 1418, 1535, 1597, 1862, 1863], "specifi": [7, 18, 20, 22, 29, 30, 31, 33, 44, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 76, 83, 84, 85, 88, 90, 91, 93, 103, 110, 111, 112, 116, 120, 121, 122, 123, 125, 130, 136, 143, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 158, 169, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 189, 191, 197, 201, 208, 209, 210, 214, 218, 219, 220, 221, 223, 234, 241, 242, 243, 246, 248, 249, 250, 251, 252, 253, 254, 256, 267, 274, 275, 276, 279, 281, 282, 283, 284, 285, 286, 287, 289, 300, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 322, 333, 340, 341, 342, 345, 347, 349, 350, 352, 353, 354, 356, 367, 374, 375, 376, 379, 381, 383, 384, 385, 386, 387, 389, 394, 400, 407, 408, 409, 412, 414, 416, 417, 418, 419, 420, 422, 433, 440, 441, 442, 445, 447, 448, 449, 450, 451, 452, 454, 466, 473, 474, 475, 478, 480, 483, 484, 486, 495, 502, 503, 504, 507, 510, 511, 513, 519, 542, 549, 550, 551, 554, 556, 558, 560, 566, 567, 568, 569, 570, 571, 572, 604, 615, 618, 619, 626, 629, 630, 634, 707, 708, 712, 715, 716, 763, 765, 766, 789, 798, 801, 841, 842, 867, 872, 910, 911, 916, 917, 918, 919, 922, 923, 926, 928, 932, 934, 935, 938, 940, 942, 944, 949, 955, 956, 957, 958, 961, 962, 965, 967, 971, 973, 974, 977, 979, 981, 983, 988, 993, 994, 995, 996, 999, 1000, 1003, 1005, 1009, 1011, 1012, 1015, 1017, 1019, 1021, 1026, 1031, 1032, 1033, 1034, 1037, 1038, 1041, 1043, 1047, 1049, 1050, 1053, 1055, 1057, 1059, 1064, 1069, 1070, 1071, 1072, 1075, 1076, 1078, 1081, 1083, 1087, 1089, 1090, 1093, 1095, 1097, 1099, 1104, 1110, 1111, 1112, 1113, 1116, 1117, 1120, 1122, 1126, 1128, 1129, 1132, 1134, 1136, 1138, 1143, 1144, 1149, 1150, 1151, 1152, 1155, 1156, 1159, 1161, 1165, 1167, 1168, 1171, 1173, 1175, 1177, 1182, 1187, 1188, 1189, 1190, 1193, 1194, 1197, 1199, 1203, 1205, 1206, 1209, 1211, 1213, 1215, 1220, 1225, 1226, 1227, 1228, 1231, 1232, 1235, 1237, 1241, 1243, 1244, 1247, 1249, 1251, 1253, 1264, 1271, 1272, 1273, 1276, 1278, 1280, 1282, 1294, 1299, 1303, 1304, 1305, 1308, 1310, 1313, 1315, 1320, 1328, 1333, 1337, 1338, 1339, 1342, 1344, 1347, 1349, 1354, 1362, 1367, 1371, 1372, 1373, 1376, 1378, 1381, 1383, 1388, 1394, 1401, 1402, 1403, 1406, 1408, 1410, 1412, 1424, 1429, 1433, 1434, 1435, 1438, 1440, 1443, 1445, 1450, 1455, 1462, 1463, 1464, 1467, 1469, 1471, 1473, 1483, 1490, 1491, 1492, 1495, 1497, 1499, 1501, 1511, 1518, 1519, 1520, 1523, 1525, 1527, 1529, 1541, 1546, 1550, 1551, 1552, 1555, 1557, 1560, 1562, 1567, 1573, 1580, 1581, 1582, 1585, 1587, 1589, 1591, 1603, 1608, 1612, 1613, 1614, 1617, 1619, 1622, 1624, 1629, 1635, 1642, 1643, 1644, 1647, 1649, 1651, 1653, 1676, 1679, 1687, 1691, 1692, 1694, 1695, 1701, 1703, 1712, 1740, 1840, 1847, 1875, 1876], "c_in": [7, 8], "c_out": [7, 8], "attach": [7, 15, 25, 28, 30, 31, 622, 707, 712, 714, 715, 716, 763, 764, 765, 766, 789, 793, 794, 798, 801, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 1478, 1717, 1862, 1863], "know": [7, 9, 13, 15, 18, 23, 25, 26, 27, 28, 29, 31, 32, 33, 36], "take": [7, 23, 25, 27, 29, 31, 196, 1859], "interpol": [7, 32, 34, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 499, 526, 546, 875, 889, 929, 968, 1006, 1044, 1084, 1123, 1162, 1200, 1238, 1268, 1300, 1334, 1368, 1398, 1430, 1459, 1487, 1515, 1547, 1577, 1609, 1639], "pc": [7, 9, 11, 14, 31, 33, 820, 829, 850, 854, 856, 861, 865, 866, 868, 894, 1876], "tc": [7, 31, 820, 824, 825, 829, 836, 850, 857, 860, 861, 865, 866, 868], "interpolate_data": [7, 32], "size_bi": [7, 8, 26, 1875, 1876], "markers": [7, 8, 18, 26, 28, 1876, 1881], "400": [7, 26, 29], "linewidth": [7, 18, 26, 1875], "_": [7, 8, 16, 23, 33, 1875, 1876], "axi": [7, 8, 9, 29, 32, 591, 614, 793, 889, 1676, 1682, 1694, 1703, 1709, 1714, 1715, 1876], "off": [7, 8, 18, 33, 820, 1715], "fick": [7, 20, 23, 130, 682], "shown": [7, 9, 10, 16, 21, 22, 23, 26, 27, 28, 30, 32, 33, 34, 1875, 1876], "n_a": [7, 20, 682], "molar": [7, 824, 826, 831], "flow": [7, 11, 12, 14, 16, 18, 20, 23, 27, 28, 32, 294, 697, 872, 880, 887], "go": [7, 9, 13, 14, 23, 25, 29, 30], "give": [7, 23, 25, 27, 28, 32, 60, 90, 120, 152, 185, 218, 219, 221, 250, 283, 316, 349, 383, 416, 449, 510, 770, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226, 1678, 1716, 1803, 1849], "mole": [7, 824, 833, 835, 839, 842, 843, 844, 867, 1288, 1291, 1299, 1320, 1322, 1325, 1333, 1354, 1356, 1359, 1367, 1388, 1418, 1421, 1429, 1535, 1538, 1546, 1567, 1597, 1600, 1608, 1629], "per": [7, 9, 827, 845, 851, 858, 862, 869, 887], "rate_inlet": 7, "5e": [7, 15, 26, 29, 32, 890, 891], "mol": [7, 823, 825, 826, 831, 836, 845, 847, 854, 856, 857, 865, 866, 868, 896, 897], "88846e": 7, "d_eff": [7, 8], "6e": 7, "776925e": 7, "measur": [7, 8], "varepsilon": 7, "But": [7, 30, 31], "pleas": [7, 8, 35], "v_p": 7, "v_t": 7, "v_bulk": 7, "prod": 7, "429901e": 7, "02": [7, 197], "d_ab": 7, "270571e": 7, "00": 7, "ratio": [8, 12, 23, 482, 673, 683, 688, 698, 729, 786, 891], "conducit": 8, "pure": [8, 27, 32, 327, 820, 825, 827, 850, 851, 854, 856, 857, 858, 860, 861, 862, 865, 866, 868, 869, 1288, 1322, 1356, 1418, 1535, 1597], "brine": 8, "sigma_": 8, "factior": 8, "299e": 8, "diff": [8, 29], "colour": [8, 34], "media": [8, 9, 35, 874, 887], "research": [8, 35, 887], "process": [8, 9, 12, 15, 20, 22, 25, 29, 30, 32, 461, 538, 602, 712, 763, 789, 870, 872, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1678, 1716], "substitut": [8, 23, 1665, 1726, 1727, 1749], "anoth": [8, 10, 11, 14, 18, 20, 25, 26, 27, 28, 30, 31, 33, 590, 820, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226, 1291, 1325, 1359, 1421, 1538, 1600, 1825, 1828, 1830, 1831, 1835], "electron": [8, 23, 228, 896, 897], "analag": 8, "sigma": [8, 9, 20, 824, 829, 842, 849, 867, 875, 891, 1299, 1333, 1367, 1429, 1546, 1608], "respect": [8, 23, 27, 31, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 498, 525, 545, 619, 793, 896, 897, 927, 966, 1004, 1042, 1064, 1082, 1121, 1160, 1198, 1220, 1236, 1267, 1298, 1332, 1366, 1397, 1428, 1458, 1486, 1514, 1545, 1576, 1607, 1638, 1714, 1865, 1874], "pai": 8, "attent": 8, "mai": [8, 9, 10, 17, 20, 25, 27, 28, 29, 30, 31, 35, 60, 90, 120, 121, 123, 152, 185, 218, 219, 221, 250, 283, 316, 349, 383, 416, 449, 461, 480, 510, 538, 602, 626, 707, 713, 715, 765, 798, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1694], "underestim": [8, 10], "r": [8, 9, 10, 11, 12, 26, 32, 33, 36, 565, 729, 730, 874, 875, 891, 898, 900, 901, 902, 903, 904, 905, 921, 960, 998, 1026, 1036, 1074, 1115, 1154, 1192, 1220, 1230, 1695, 1703, 1713, 1714, 1875, 1876, 1879], "55": [8, 33], "10089643222": 8, "porosimetri": [9, 33, 729], "mip": [9, 14, 33], "common": [9, 18, 25, 26, 27, 28, 29, 30, 919, 922, 923, 933, 958, 961, 962, 972, 996, 999, 1000, 1010, 1034, 1037, 1038, 1048, 1072, 1075, 1076, 1088, 1113, 1116, 1117, 1127, 1152, 1155, 1156, 1166, 1190, 1193, 1194, 1204, 1228, 1231, 1232, 1242, 1687, 1691, 1692, 1717], "techniqu": 9, "There": [9, 17, 25, 26, 28, 29, 30, 31, 32, 615, 773], "why": [9, 15, 18, 25], "pnm": [9, 10, 20, 32, 33, 782, 1847, 1852, 1853], "accur": [9, 949], "univers": [9, 31], "interpret": [9, 25, 618, 899, 1703], "bundl": 9, "tube": [9, 32, 34, 730, 874, 875, 887, 890], "neglect": [9, 10, 33], "shield": [9, 26], "when": [9, 16, 18, 22, 25, 27, 28, 29, 30, 31, 33, 34, 51, 60, 83, 90, 110, 120, 143, 152, 176, 185, 208, 218, 241, 250, 261, 274, 283, 307, 316, 340, 349, 374, 383, 407, 416, 440, 449, 461, 473, 502, 510, 519, 538, 549, 567, 602, 630, 710, 713, 738, 761, 872, 889, 893, 912, 932, 951, 971, 989, 1009, 1027, 1047, 1065, 1087, 1106, 1126, 1145, 1165, 1183, 1203, 1221, 1241, 1260, 1271, 1289, 1303, 1323, 1337, 1357, 1371, 1390, 1401, 1419, 1433, 1451, 1462, 1479, 1490, 1507, 1518, 1536, 1550, 1569, 1580, 1598, 1612, 1631, 1642, 1666, 1693, 1717, 1727, 1749, 1801, 1853, 1862, 1863], "bodi": [9, 18, 26, 29, 32, 700, 701, 702, 703, 704, 705, 710, 718, 719, 720, 721, 722, 723, 724, 726, 727, 775, 776, 777, 780, 894, 910, 1862, 1863], "behind": [9, 17, 22, 25, 28, 31, 1478], "ones": [9, 25, 26, 28, 64, 155, 188, 253, 286, 319, 353, 386, 419, 820, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226], "nuanc": 9, "usual": [9, 13, 17, 23, 27, 30], "becaus": [9, 10, 18, 23, 25, 27, 28, 29, 30, 31, 32, 33, 708, 713, 922, 923, 961, 962, 999, 1000, 1037, 1038, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1691, 1692, 1803], "quit": [9, 13, 26, 28, 29, 33, 713, 911, 950, 1026, 1105, 1144, 1220], "bit": [9, 26, 30, 32, 33], "difficult": [9, 36, 911, 950, 1105, 1144], "accuraci": [9, 827, 851, 858, 862, 869], "justifi": 9, "often": [9, 25, 27, 28, 30, 31, 32], "wish": [9, 28, 29, 31, 1694], "specif": [9, 22, 23, 25, 28, 29, 30, 33, 40, 74, 101, 119, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 480, 493, 618, 790, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226, 1675, 1694, 1709, 1744, 1746, 1801], "involv": [9, 23, 33], "successfulli": 9, "metric": [9, 10], "better": [9, 10, 12, 31, 34], "experiment": [9, 31, 33, 896, 897], "iter": [9, 22, 29, 38, 45, 70, 72, 77, 96, 98, 104, 128, 130, 137, 161, 163, 170, 194, 196, 202, 226, 228, 235, 259, 261, 268, 292, 294, 301, 325, 327, 334, 359, 361, 368, 392, 394, 401, 425, 427, 434, 457, 467, 489, 491, 496, 516, 523, 535, 543, 563, 577, 584, 592, 599, 638, 639, 640, 641, 642, 643, 644, 713, 924, 947, 963, 986, 1001, 1024, 1039, 1062, 1064, 1079, 1102, 1118, 1141, 1157, 1180, 1195, 1218, 1220, 1233, 1256, 1265, 1285, 1295, 1318, 1329, 1352, 1363, 1386, 1395, 1415, 1425, 1448, 1456, 1476, 1484, 1504, 1512, 1532, 1542, 1565, 1574, 1594, 1604, 1627, 1636, 1656, 1663, 1666, 1669, 1754, 1761, 1766, 1775, 1780, 1787, 1789, 1794, 1807, 1812, 1819, 1820, 1843, 1855], "until": [9, 17, 33, 713, 1742], "match": [9, 14, 21, 23, 27, 33, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230, 1478, 1712], "panda": [9, 27, 623, 631], "pd": [9, 27], "stat": [9, 712, 714, 716, 763, 764, 766, 789, 794, 801], "w": [9, 16, 17, 18, 35, 614, 844, 857, 858, 887], "loglevel": [9, 10, 12, 23], "character": 9, "structur": [9, 25, 30, 33, 196, 614, 629, 708, 949], "reservoir": [9, 1677], "rock": [9, 614], "aid": 9, "serial": 9, "section": [9, 21, 22, 23, 27, 29, 32, 614, 661, 663, 701, 702, 703, 704, 705, 708, 718, 720, 734, 735, 736, 753, 754, 755, 756, 761, 775, 872, 880, 882, 883, 1696, 1726, 1727, 1729, 1731, 1733, 1740, 1744, 1746], "analysi": [9, 34, 614, 708], "tsakirogl": 9, "payatak": 9, "advanc": [9, 874, 890, 891], "resourc": [9, 25, 887], "23": [9, 26, 30, 33], "2000": 9, "773": 9, "789": 9, "graph": [9, 29, 31, 589, 590, 591, 615, 622, 813, 916, 917, 926, 955, 956, 965, 993, 994, 1003, 1031, 1032, 1041, 1069, 1070, 1081, 1110, 1111, 1120, 1149, 1150, 1159, 1187, 1188, 1197, 1225, 1226, 1235, 1878], "digit": 9, "sampl": [9, 1875, 1876], "df": 9, "read_csv": 9, "csv": [9, 612, 620, 628], "pa": [9, 14, 21, 31, 33, 823, 829, 830, 831, 850, 854, 856, 861, 865, 866, 868, 869], "s_hg": 9, "12056": 9, "00122": 9, "15162": 9, "00368": 9, "17630": 9, "00741": 9, "23693": 9, "00860": 9, "30708": 9, "01607": 9, "36799": 9, "01979": 9, "44633": 9, "02351": 9, "49752": 9, "02599": 9, "52522": 9, "03474": 9, "55439": 9, "05476": 9, "55449": 9, "05473": 9, "57820": 9, "06977": 9, "59569": 9, "09980": 9, "62089": 9, "16613": 9, "63563": 9, "22244": 9, "65092": 9, "25123": 9, "66585": 9, "37262": 9, "68232": 9, "34759": 9, "69833": 9, "42518": 9, "19": [9, 18, 26, 27, 30, 32, 33], "71069": 9, "47100": 9, "20": [9, 18, 26, 27, 29, 30, 33, 896, 897, 949, 1878], "71085": 9, "45271": 9, "21": [9, 10, 18, 26, 27, 30, 31, 33], "76355": 9, "54039": 9, "22": [9, 26, 30, 33, 869], "76802": 9, "54156": 9, "101289": 9, "60534": 9, "117732": 9, "63785": 9, "135188": 9, "67913": 9, "160014": 9, "70663": 9, "27": [9, 26, 33, 922, 961, 999, 1037, 1075, 1116, 1155, 1193, 1231], "203630": 9, "73037": 9, "28": [9, 26, 33, 647, 851], "222870": 9, "74787": 9, "29": [9, 26, 33], "267020": 9, "76787": 9, "30": [9, 18, 25, 26, 33], "348080": 9, "79660": 9, "31": [9, 18, 26, 31, 33, 647], "437710": 9, "80783": 9, "32": [9, 18, 25, 26, 33], "696280": 9, "83528": 9, "33": [9, 26, 33], "1148210": 9, "87899": 9, "34": [9, 26, 33], "1860000": 9, "90268": 9, "35": [9, 26, 33], "2352900": 9, "92016": 9, "3975500": 9, "94885": 9, "37": [9, 26, 29, 33], "5214900": 9, "95882": 9, "38": [9, 26, 33, 729], "7353000": 9, "98253": 9, "39": [9, 33], "9821400": 9, "99375": 9, "11698800": 9, "99622": 9, "12884400": 9, "99620": 9, "42": [9, 26, 33], "15440700": 9, "99617": 9, "43": [9, 26, 33], "17108000": 9, "99865": 9, "45": [9, 25, 26, 33, 1715], "point": [9, 11, 12, 15, 18, 26, 27, 28, 29, 30, 31, 32, 34, 36, 119, 348, 382, 415, 509, 610, 617, 712, 714, 716, 738, 763, 764, 766, 778, 786, 789, 791, 794, 800, 801, 805, 814, 818, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 894, 899, 905, 907, 908, 1026, 1064, 1220, 1681, 1684, 1694, 1695, 1700, 1702, 1703, 1713, 1715], "normal": [9, 10, 29, 30, 31, 36, 39, 60, 73, 90, 100, 120, 131, 152, 164, 185, 198, 218, 229, 250, 262, 283, 295, 316, 328, 349, 362, 383, 395, 416, 428, 449, 461, 464, 492, 510, 521, 538, 540, 602, 708, 820, 827, 851, 858, 860, 869, 912, 914, 951, 953, 989, 991, 1027, 1029, 1065, 1067, 1106, 1108, 1145, 1147, 1183, 1185, 1221, 1223, 1260, 1262, 1289, 1292, 1323, 1326, 1357, 1360, 1390, 1392, 1419, 1422, 1451, 1453, 1479, 1481, 1507, 1509, 1536, 1539, 1569, 1571, 1598, 1601, 1631, 1633, 1677, 1870, 1876], "befor": [9, 12, 28, 29, 30, 31, 33, 34, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 511, 556, 558, 571, 590, 604, 820, 889, 940, 942, 979, 981, 1017, 1019, 1055, 1057, 1095, 1097, 1134, 1136, 1173, 1175, 1211, 1213, 1249, 1251, 1278, 1280, 1310, 1313, 1344, 1347, 1378, 1381, 1408, 1410, 1440, 1443, 1469, 1471, 1497, 1499, 1525, 1527, 1557, 1560, 1587, 1589, 1619, 1622, 1649, 1651, 1717, 1796, 1814], "good": [9, 16, 25, 26, 29], "idea": [9, 25, 26, 27], "convert": [9, 20, 21, 28, 29, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 487, 514, 533, 561, 622, 623, 631, 708, 824, 839, 845, 899, 920, 945, 959, 984, 997, 1022, 1035, 1060, 1073, 1100, 1114, 1139, 1153, 1178, 1191, 1216, 1229, 1254, 1283, 1316, 1350, 1384, 1413, 1446, 1474, 1502, 1530, 1563, 1592, 1625, 1654, 1666, 1681, 1688, 1695, 1720, 1723, 1859, 1868, 1869, 1870, 1871], "expect": [9, 15, 16, 26, 29, 31, 1838], "co": [9, 790, 875, 891], "deg2rad": 9, "140": [9, 26, 33, 650], "semilogx": [9, 14], "1e6": 9, "um": [9, 29], "aim": [9, 32], "futur": [9, 16, 926, 928, 965, 967, 1003, 1005, 1041, 1043, 1081, 1083, 1120, 1122, 1159, 1161, 1182, 1197, 1199, 1235, 1237], "sake": [9, 23, 27], "close": [9, 29, 31, 32, 626, 630, 893], "30e": 9, "0x7f1a1e9f2700": 9, "3375": 9, "9450": 9, "225": [9, 33], "zmin": [9, 14, 26, 29], "zmax": [9, 14, 26, 29], "1178": 9, "2352": 9, "bottom": [9, 14, 17, 18, 26, 28, 29, 950, 1105, 1709], "top": [9, 14, 17, 25, 26, 27, 29, 30, 950, 1105, 1709, 1715], "topolog": [9, 29, 31, 802, 808, 809, 810, 1182, 1710, 1858, 1875, 1876], "shine": 9, "light": 9, "them": [9, 13, 15, 16, 18, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 461, 519, 538, 602, 912, 951, 989, 1027, 1064, 1065, 1106, 1145, 1183, 1220, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1676, 1679, 1704, 1709, 1716, 1717, 1800, 1818], "conveni": [9, 27, 28, 30, 31, 32, 33, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 480, 510, 896, 897, 1703], "pre": [9, 21, 22, 27, 29, 31, 33, 682, 697], "hand": [9, 20, 23, 25, 26, 28, 29, 31, 32, 33, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 1666], "possibl": [9, 17, 22, 25, 26, 27, 28, 29, 30, 31, 36, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 510, 590, 778, 779, 922, 923, 961, 962, 999, 1000, 1026, 1037, 1038, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1220, 1231, 1232, 1666, 1680, 1691, 1692, 1712, 1801, 1875], "produc": [9, 14, 29, 32, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 461, 464, 492, 521, 538, 540, 602, 714, 716, 764, 766, 794, 801, 896, 897, 912, 914, 951, 953, 989, 991, 1026, 1027, 1029, 1065, 1067, 1106, 1108, 1145, 1147, 1183, 1185, 1220, 1221, 1223, 1260, 1262, 1289, 1292, 1323, 1326, 1357, 1360, 1390, 1392, 1419, 1422, 1450, 1451, 1453, 1479, 1481, 1507, 1509, 1536, 1539, 1569, 1571, 1598, 1601, 1631, 1633, 1720, 1723, 1847, 1852, 1875, 1876], "directli": [9, 17, 22, 23, 25, 27, 28, 29, 30, 31, 33, 823, 824, 825, 826, 827, 829, 830, 831, 834, 836, 845, 847, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 865, 866, 868, 869, 911, 950, 1105, 1144, 1220, 1692, 1715], "arg": [9, 27, 38, 54, 72, 86, 98, 114, 130, 146, 163, 179, 196, 212, 228, 244, 261, 277, 294, 310, 327, 343, 361, 377, 394, 410, 427, 443, 460, 476, 491, 505, 520, 529, 537, 552, 586, 601, 910, 936, 949, 975, 988, 1013, 1026, 1051, 1064, 1091, 1104, 1130, 1143, 1169, 1182, 1207, 1220, 1245, 1259, 1274, 1287, 1306, 1321, 1340, 1355, 1374, 1389, 1404, 1417, 1436, 1450, 1465, 1478, 1493, 1506, 1521, 1534, 1553, 1568, 1583, 1596, 1615, 1630, 1645, 1681, 1725, 1728, 1729, 1730, 1732, 1734, 1737, 1739, 1741, 1743, 1745, 1747, 1748, 1750, 1777, 1801, 1804, 1838, 1861], "howev": [9, 10, 11, 12, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 52, 53, 84, 85, 111, 112, 144, 145, 177, 178, 196, 209, 210, 242, 243, 275, 276, 308, 309, 341, 342, 375, 376, 408, 409, 441, 442, 474, 475, 503, 504, 550, 551, 568, 569, 820, 934, 935, 973, 974, 1011, 1012, 1049, 1050, 1089, 1090, 1128, 1129, 1167, 1168, 1205, 1206, 1243, 1244, 1272, 1273, 1304, 1305, 1338, 1339, 1372, 1373, 1402, 1403, 1434, 1435, 1463, 1464, 1491, 1492, 1519, 1520, 1551, 1552, 1581, 1582, 1613, 1614, 1643, 1644], "later": [9, 14, 15, 23, 26, 27, 29, 30, 1717], "rand": [9, 15, 20, 22, 29, 31, 712, 714, 716, 763, 764, 766, 789, 790, 794, 801, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226], "mostli": [9, 27, 28, 784, 1677], "long": [9, 15, 25, 27, 29, 30, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 487, 514, 533, 561, 790, 805, 916, 921, 945, 955, 960, 984, 993, 998, 1022, 1026, 1031, 1036, 1060, 1069, 1074, 1100, 1110, 1115, 1139, 1149, 1154, 1178, 1187, 1192, 1216, 1225, 1230, 1254, 1283, 1288, 1316, 1322, 1350, 1356, 1384, 1413, 1418, 1446, 1474, 1502, 1530, 1535, 1563, 1592, 1597, 1625, 1654, 1686, 1690], "tail": [9, 15, 29, 707, 715, 765, 798, 1182], "few": [9, 14, 15, 18, 25, 26, 28, 29, 30, 33, 519, 824], "typic": [9, 824, 894, 1838], "dst": 9, "20e": 9, "what": [9, 15, 17, 18, 22, 23, 25, 27, 28, 29, 30, 31, 36, 820, 889, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226, 1709], "frozen": [9, 712, 763, 789], "chose": 9, "decent": [9, 591], "request": [9, 27, 28, 31, 32, 47, 48, 56, 67, 79, 80, 88, 93, 106, 107, 116, 125, 139, 140, 148, 158, 172, 173, 181, 191, 204, 205, 214, 223, 237, 238, 246, 256, 270, 271, 279, 289, 303, 304, 312, 322, 336, 337, 345, 356, 370, 371, 379, 389, 403, 404, 412, 422, 436, 437, 445, 454, 469, 470, 478, 481, 486, 498, 499, 507, 513, 525, 526, 545, 546, 554, 557, 560, 570, 572, 605, 841, 926, 927, 928, 929, 938, 941, 944, 965, 966, 967, 968, 977, 980, 983, 1003, 1004, 1005, 1006, 1015, 1018, 1021, 1041, 1042, 1043, 1044, 1053, 1056, 1059, 1081, 1082, 1083, 1084, 1093, 1096, 1099, 1120, 1121, 1122, 1123, 1132, 1135, 1138, 1159, 1160, 1161, 1162, 1171, 1174, 1177, 1197, 1198, 1199, 1200, 1209, 1212, 1215, 1220, 1235, 1236, 1237, 1238, 1247, 1250, 1253, 1267, 1268, 1276, 1279, 1282, 1297, 1298, 1299, 1300, 1308, 1312, 1315, 1320, 1331, 1332, 1333, 1334, 1342, 1346, 1349, 1354, 1365, 1366, 1367, 1368, 1376, 1380, 1383, 1388, 1397, 1398, 1406, 1409, 1412, 1427, 1428, 1429, 1430, 1438, 1442, 1445, 1458, 1459, 1467, 1470, 1473, 1486, 1487, 1495, 1498, 1501, 1514, 1515, 1523, 1526, 1529, 1544, 1545, 1546, 1547, 1555, 1559, 1562, 1567, 1576, 1577, 1585, 1588, 1591, 1606, 1607, 1608, 1609, 1617, 1621, 1624, 1629, 1638, 1639, 1647, 1650, 1653], "randomli": [9, 29, 1695, 1712], "10000": [9, 11, 714, 716, 764, 766, 794, 801], "tick_param": 9, "labelrot": 9, "nm": [9, 29], "posit": [9, 23, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 773, 1717], "within": [9, 12, 25, 27, 29, 31, 32, 589, 783, 812, 851, 858, 894, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230, 1680, 1695, 1711, 1717], "lastli": [9, 28, 30, 31], "control": [9, 14, 27, 29, 33, 39, 44, 50, 51, 58, 60, 61, 62, 63, 64, 65, 73, 76, 82, 83, 90, 91, 100, 103, 109, 110, 120, 122, 130, 131, 136, 142, 143, 150, 152, 153, 154, 155, 156, 164, 169, 175, 176, 183, 185, 186, 187, 188, 189, 198, 201, 207, 208, 218, 219, 220, 221, 229, 234, 240, 241, 248, 250, 251, 252, 253, 254, 262, 267, 273, 274, 281, 283, 284, 285, 286, 287, 295, 300, 306, 307, 314, 316, 317, 318, 319, 320, 328, 333, 339, 340, 347, 349, 350, 351, 352, 353, 354, 362, 367, 373, 374, 381, 383, 384, 385, 386, 387, 395, 400, 406, 407, 414, 416, 417, 418, 419, 420, 428, 433, 439, 440, 447, 449, 450, 451, 452, 464, 466, 472, 473, 483, 492, 495, 501, 502, 510, 511, 521, 528, 540, 542, 548, 549, 558, 566, 567, 571, 707, 708, 711, 712, 714, 715, 716, 759, 762, 763, 764, 765, 766, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 914, 918, 921, 931, 932, 942, 953, 957, 960, 970, 971, 981, 991, 995, 998, 1008, 1009, 1019, 1029, 1033, 1036, 1046, 1047, 1057, 1067, 1071, 1074, 1086, 1087, 1097, 1108, 1112, 1115, 1125, 1126, 1136, 1147, 1151, 1154, 1164, 1165, 1175, 1185, 1189, 1192, 1202, 1203, 1213, 1223, 1227, 1230, 1240, 1241, 1251, 1262, 1264, 1270, 1271, 1280, 1292, 1294, 1302, 1303, 1313, 1326, 1328, 1336, 1337, 1347, 1360, 1362, 1370, 1371, 1381, 1392, 1394, 1400, 1401, 1410, 1422, 1424, 1432, 1433, 1443, 1453, 1455, 1461, 1462, 1471, 1481, 1483, 1489, 1490, 1499, 1509, 1511, 1517, 1518, 1527, 1539, 1541, 1549, 1550, 1560, 1571, 1573, 1579, 1580, 1589, 1601, 1603, 1611, 1612, 1622, 1633, 1635, 1641, 1642, 1651, 1677, 1679, 1695, 1703, 1713, 1838, 1875, 1876, 1878], "skew": [9, 716, 766, 801], "slighli": 9, "elong": 9, "noth": [9, 28, 99, 1826], "too": [9, 10, 27, 1291, 1325, 1359, 1421, 1538, 1600, 1875], "extrem": [9, 25, 707, 715, 765, 798], "larger": [9, 20, 23, 29, 33], "revisit": [9, 22], "examin": [9, 21], "cdf": 9, "red": [9, 28, 1875, 1876], "ppf": [9, 29, 712, 714, 716, 763, 764, 766, 789, 794, 801], "firstli": 9, "prevent": [9, 16, 29, 31, 707, 715, 765, 798, 1026, 1805], "abnorm": [9, 777, 1711], "far": [9, 10, 23, 29, 30, 1703], "out": [9, 11, 12, 20, 23, 25, 27, 28, 29, 31, 32, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 506, 530, 553, 582, 597, 838, 937, 976, 1014, 1052, 1092, 1131, 1170, 1208, 1246, 1275, 1307, 1341, 1375, 1405, 1437, 1466, 1494, 1522, 1554, 1584, 1616, 1646, 1740, 1759, 1771, 1785, 1797, 1815, 1851], "end": [9, 10, 23, 27, 28, 29, 32, 682, 697, 707, 715, 738, 765, 778, 779, 798, 816, 820, 872, 1681, 1713, 1722, 1790, 1801, 1808, 1862, 1863], "choosen": 9, "9999": 9, "seconli": 9, "bewteen": 9, "fractal_nois": 9, "won": [9, 36], "anisotrop": 9, "issu": [9, 18, 633], "current": [9, 17, 18, 22, 26, 31, 34, 38, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 614, 896, 897, 898, 900, 901, 902, 903, 904, 905, 1717, 1803, 1847, 1848, 1852, 1853], "haven": 9, "n": [9, 20, 23, 25, 28, 31, 33, 615, 680, 695, 730, 785, 830, 831, 850, 851, 874, 896, 897, 921, 922, 960, 961, 998, 999, 1026, 1036, 1037, 1064, 1074, 1075, 1115, 1116, 1154, 1155, 1192, 1193, 1220, 1230, 1231, 1678, 1681, 1684, 1693, 1694, 1703, 1704, 1716, 1722, 1740], "repeat": [9, 33, 811], "recomput": [9, 29], "depend": [9, 10, 20, 23, 27, 31, 33, 36, 461, 538, 589, 590, 591, 602, 629, 872, 896, 897, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631], "forth": 9, "leverag": [9, 31], "featur": [9, 15, 16, 17, 22, 25, 27, 28, 29, 30, 36, 519, 586, 614, 889, 1026, 1064, 1220], "ie": [9, 820], "generic_distribut": 9, "accept": [9, 16, 27, 30, 44, 50, 51, 52, 53, 56, 67, 76, 82, 83, 84, 85, 88, 93, 103, 109, 110, 111, 112, 116, 125, 136, 142, 143, 144, 145, 148, 158, 169, 175, 176, 177, 178, 181, 191, 201, 207, 208, 209, 210, 214, 223, 234, 240, 241, 242, 243, 246, 256, 267, 273, 274, 275, 276, 279, 289, 300, 306, 307, 308, 309, 312, 322, 333, 339, 340, 341, 342, 345, 356, 367, 373, 374, 375, 376, 379, 389, 400, 406, 407, 408, 409, 412, 422, 433, 439, 440, 441, 442, 445, 454, 466, 472, 473, 474, 475, 478, 486, 495, 501, 502, 503, 504, 507, 513, 528, 542, 548, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 712, 714, 763, 764, 789, 794, 899, 918, 919, 922, 923, 931, 932, 933, 934, 935, 938, 944, 957, 958, 961, 962, 970, 971, 972, 973, 974, 977, 983, 995, 996, 999, 1000, 1008, 1009, 1010, 1011, 1012, 1015, 1021, 1033, 1034, 1037, 1038, 1046, 1047, 1048, 1049, 1050, 1053, 1059, 1071, 1072, 1075, 1076, 1086, 1087, 1088, 1089, 1090, 1093, 1099, 1112, 1113, 1116, 1117, 1125, 1126, 1127, 1128, 1129, 1132, 1138, 1151, 1152, 1155, 1156, 1164, 1165, 1166, 1167, 1168, 1171, 1177, 1189, 1190, 1193, 1194, 1202, 1203, 1204, 1205, 1206, 1209, 1215, 1227, 1228, 1231, 1232, 1240, 1241, 1242, 1243, 1244, 1247, 1253, 1264, 1270, 1271, 1272, 1273, 1276, 1282, 1294, 1302, 1303, 1304, 1305, 1308, 1315, 1328, 1336, 1337, 1338, 1339, 1342, 1349, 1362, 1370, 1371, 1372, 1373, 1376, 1383, 1394, 1400, 1401, 1402, 1403, 1406, 1412, 1424, 1432, 1433, 1434, 1435, 1438, 1445, 1455, 1461, 1462, 1463, 1464, 1467, 1473, 1483, 1489, 1490, 1491, 1492, 1495, 1501, 1511, 1517, 1518, 1519, 1520, 1523, 1529, 1541, 1549, 1550, 1551, 1552, 1555, 1562, 1573, 1579, 1580, 1581, 1582, 1585, 1591, 1603, 1611, 1612, 1613, 1614, 1617, 1624, 1635, 1641, 1642, 1643, 1644, 1647, 1653, 1687, 1691, 1692], "initi": [9, 10, 16, 17, 22, 29, 32, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 509, 610], "truncat": [9, 29, 661, 666, 672, 674, 675, 681, 687, 689, 690, 696], "98": [9, 33], "func": [9, 712, 714, 716, 763, 764, 766, 789, 790, 794, 801, 1726], "strictli": 9, "pictur": 9, "simpler": 9, "d1": 9, "d2": 9, "taken": [9, 23, 29, 31, 712, 763, 773, 789, 1534, 1596, 1681], "those": [9, 15, 28, 30, 34, 348, 382, 415, 480, 509, 618, 708, 711, 759, 762, 787, 788, 919, 922, 923, 933, 958, 961, 962, 972, 996, 999, 1000, 1010, 1034, 1037, 1038, 1048, 1072, 1075, 1076, 1088, 1113, 1116, 1117, 1127, 1152, 1155, 1156, 1166, 1190, 1193, 1194, 1204, 1228, 1231, 1232, 1242, 1685, 1687, 1691, 1692], "desir": [9, 15, 27, 28, 29, 30, 31, 461, 538, 589, 602, 619, 621, 625, 626, 630, 632, 634, 841, 912, 916, 917, 951, 955, 956, 988, 989, 993, 994, 1026, 1027, 1031, 1032, 1065, 1069, 1070, 1106, 1110, 1111, 1145, 1149, 1150, 1183, 1187, 1188, 1220, 1221, 1225, 1226, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1712, 1875, 1876], "same": [9, 11, 12, 16, 17, 20, 23, 25, 26, 28, 29, 30, 31, 32, 33, 60, 63, 65, 90, 120, 152, 154, 156, 185, 187, 189, 218, 219, 221, 250, 252, 254, 283, 285, 287, 316, 318, 320, 349, 352, 354, 383, 385, 387, 416, 418, 420, 449, 451, 452, 462, 510, 539, 603, 631, 632, 710, 761, 778, 779, 816, 824, 874, 890, 896, 897, 913, 920, 933, 952, 959, 972, 988, 990, 997, 1010, 1028, 1035, 1048, 1066, 1073, 1088, 1107, 1114, 1127, 1146, 1153, 1166, 1184, 1191, 1204, 1222, 1229, 1242, 1261, 1290, 1324, 1358, 1391, 1420, 1452, 1480, 1508, 1537, 1570, 1599, 1632, 1678, 1679, 1682, 1686, 1688, 1701, 1703, 1704, 1716, 1807, 1820, 1838, 1859, 1878], "diameter_1": 9, "And": [9, 15, 20, 22, 25, 26, 27, 29, 30, 32], "becom": [9, 20, 23, 28, 30, 893, 1862, 1863], "offici": [9, 25, 36, 459], "togeth": [9, 18, 22, 29, 30, 32, 33, 614], "densiti": [9, 14, 29, 31, 647, 650, 651, 823, 824, 825, 826, 827, 849, 896, 897], "true": [9, 10, 16, 22, 25, 26, 27, 28, 29, 30, 33, 56, 62, 67, 68, 69, 88, 93, 94, 95, 99, 116, 125, 126, 127, 148, 158, 159, 160, 181, 191, 192, 193, 197, 214, 223, 224, 225, 246, 256, 257, 258, 279, 289, 290, 291, 312, 322, 323, 324, 345, 351, 356, 357, 358, 379, 389, 390, 391, 412, 422, 423, 424, 445, 454, 455, 456, 478, 486, 487, 488, 507, 513, 514, 515, 519, 533, 534, 554, 560, 561, 562, 570, 572, 631, 657, 662, 665, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 691, 694, 698, 699, 701, 705, 759, 762, 771, 787, 788, 813, 916, 917, 919, 921, 922, 923, 933, 938, 944, 945, 946, 955, 956, 958, 960, 961, 962, 972, 977, 983, 984, 985, 988, 993, 994, 996, 998, 999, 1000, 1010, 1015, 1021, 1022, 1023, 1026, 1031, 1032, 1034, 1036, 1037, 1038, 1048, 1053, 1059, 1060, 1061, 1064, 1069, 1070, 1072, 1074, 1075, 1076, 1088, 1093, 1099, 1100, 1101, 1110, 1111, 1113, 1115, 1116, 1117, 1127, 1132, 1138, 1139, 1140, 1149, 1150, 1152, 1154, 1155, 1156, 1166, 1171, 1177, 1178, 1179, 1187, 1188, 1190, 1192, 1193, 1194, 1204, 1209, 1215, 1216, 1217, 1220, 1225, 1226, 1228, 1230, 1231, 1232, 1242, 1247, 1253, 1254, 1255, 1276, 1282, 1283, 1284, 1291, 1308, 1315, 1316, 1317, 1325, 1342, 1349, 1350, 1351, 1359, 1376, 1383, 1384, 1385, 1406, 1412, 1413, 1414, 1421, 1438, 1445, 1446, 1447, 1467, 1473, 1474, 1475, 1495, 1501, 1502, 1503, 1523, 1529, 1530, 1531, 1538, 1555, 1562, 1563, 1564, 1585, 1591, 1592, 1593, 1600, 1617, 1624, 1625, 1626, 1647, 1653, 1654, 1655, 1678, 1681, 1682, 1683, 1687, 1690, 1691, 1692, 1695, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1712, 1716, 1829, 1857, 1865, 1868, 1869, 1876, 1877], "alpha": [9, 29, 34, 889, 891, 1875, 1876, 1877], "fulli": [9, 32, 33, 36, 893, 1077, 1701], "assumpt": [9, 23, 773], "cube": [9, 10, 640, 659, 673, 688, 710, 742, 1874], "thing": [9, 16, 27, 28, 29, 30, 31, 33, 36, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 464, 492, 521, 540, 914, 953, 991, 1029, 1067, 1108, 1147, 1185, 1223, 1262, 1292, 1326, 1360, 1392, 1422, 1453, 1481, 1509, 1539, 1571, 1601, 1633], "region": [9, 10, 29, 916, 955, 993, 1031, 1069, 1110, 1149, 1187, 1225, 1875, 1876], "whose": [9, 51, 56, 67, 83, 88, 93, 110, 116, 125, 143, 148, 158, 176, 181, 191, 208, 214, 223, 241, 246, 256, 274, 279, 289, 307, 312, 322, 340, 345, 356, 374, 379, 389, 407, 412, 422, 440, 445, 454, 473, 478, 480, 484, 486, 502, 507, 513, 549, 554, 560, 567, 570, 572, 630, 634, 800, 920, 922, 923, 932, 933, 938, 944, 959, 961, 962, 971, 972, 977, 983, 997, 999, 1000, 1009, 1010, 1015, 1021, 1035, 1037, 1038, 1047, 1048, 1053, 1059, 1073, 1075, 1076, 1077, 1078, 1087, 1088, 1093, 1099, 1114, 1116, 1117, 1126, 1127, 1132, 1138, 1153, 1155, 1156, 1165, 1166, 1171, 1177, 1191, 1193, 1194, 1203, 1204, 1209, 1215, 1229, 1231, 1232, 1241, 1242, 1247, 1253, 1271, 1276, 1282, 1303, 1308, 1315, 1337, 1342, 1349, 1371, 1376, 1383, 1401, 1406, 1412, 1433, 1438, 1445, 1462, 1467, 1473, 1490, 1495, 1501, 1518, 1523, 1529, 1550, 1555, 1562, 1580, 1585, 1591, 1612, 1617, 1624, 1642, 1647, 1653, 1687, 1691, 1692, 1701, 1703, 1712, 1726, 1875, 1876], "twice": 9, "throat_length": [9, 10, 29, 638, 639, 640, 641, 642, 643, 644, 768, 769, 770, 771, 775, 776, 777, 780], "invad": [9, 11, 12, 33, 99, 121, 196, 219, 875, 889, 893, 894, 1690], "tension": [9, 11, 12, 33, 831, 849, 850, 851, 874, 875, 889], "cours": [9, 25, 28, 30, 36], "hg": [9, 14, 33], "calul": 9, "capillari": [9, 11, 14, 33, 211, 729, 730, 870, 874, 875, 887, 889, 890, 891, 894], "washburn": [9, 14, 33, 653, 654, 891, 894], "p_c": [9, 33, 875, 891], "theta": [9, 875, 891], "r_t": [9, 887], "capillary_pressur": [9, 14, 33], "contact": [9, 10, 11, 12, 33, 779, 874, 875, 889], "angl": [9, 11, 12, 33, 874, 875, 889], "while": [9, 16, 17, 25, 26, 27, 31, 33, 38, 61, 72, 91, 98, 122, 130, 153, 163, 186, 196, 220, 228, 251, 261, 284, 294, 317, 327, 350, 361, 384, 394, 417, 427, 450, 483, 491, 511, 558, 571, 896, 897, 942, 981, 988, 1019, 1057, 1097, 1136, 1175, 1213, 1251, 1280, 1313, 1347, 1381, 1410, 1443, 1471, 1499, 1527, 1560, 1589, 1622, 1651], "radiu": [9, 29, 32, 34, 874, 889, 890, 891, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230, 1695, 1703, 1717, 1718, 1719], "setup": [9, 33], "wet": [9, 11, 12, 33, 211, 730, 875, 887, 894], "rarefi": 9, "drain": [9, 33], "non": [9, 11, 12, 20, 22, 27, 28, 33, 211, 814, 875, 894, 910, 916, 917, 926, 928, 949, 955, 956, 965, 967, 988, 993, 994, 1003, 1005, 1026, 1031, 1032, 1041, 1043, 1064, 1069, 1070, 1081, 1083, 1104, 1110, 1111, 1120, 1122, 1143, 1149, 1150, 1159, 1161, 1182, 1187, 1188, 1197, 1199, 1220, 1225, 1226, 1235, 1237, 1682, 1688], "consid": [9, 16, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 123, 221, 713, 720, 778, 779, 807, 812, 880, 922, 923, 961, 962, 999, 1000, 1037, 1038, 1075, 1076, 1116, 1117, 1155, 1156, 1182, 1193, 1194, 1231, 1232, 1678, 1682, 1686, 1690, 1691, 1694, 1703, 1722, 1751, 1875, 1876], "class": [9, 15, 16, 17, 21, 25, 27, 28, 30, 32, 33, 34, 37, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 459, 460, 491, 518, 520, 537, 565, 573, 586, 601, 606, 607, 608, 609, 615, 618, 619, 887, 909, 910, 949, 988, 1026, 1064, 1104, 1143, 1182, 1220, 1258, 1259, 1287, 1321, 1355, 1389, 1417, 1450, 1478, 1506, 1534, 1568, 1596, 1630, 1658, 1659, 1661, 1663, 1665, 1667, 1669, 1671, 1673, 1725, 1751, 1763, 1777, 1789, 1801, 1804, 1805, 1807, 1819, 1820, 1838, 1853, 1862, 1863, 1864, 1875], "set_inlet_bc": [9, 11, 12, 14, 33], "pc_sim": 9, "pc_curv": [9, 14, 33, 98], "agreement": 9, "surprizingli": 9, "guess": [9, 22, 59, 151, 184, 249, 282, 315, 448], "littl": [9, 26, 27], "shift": [9, 29, 30, 1676], "recal": [9, 22, 29, 32], "took": 9, "readd": 9, "over": [9, 11, 12, 23, 29, 30, 34, 708, 820, 824, 838, 1665, 1838], "old": [9, 25, 1715], "still": [9, 16, 22, 26, 33, 36], "great": [9, 30], "peopl": [9, 25], "year": 9, "autom": [9, 614], "doe": [9, 16, 17, 22, 27, 28, 29, 31, 32, 33, 61, 62, 68, 70, 91, 94, 96, 122, 126, 128, 153, 159, 161, 186, 192, 194, 197, 220, 224, 226, 251, 257, 259, 284, 290, 292, 317, 323, 325, 350, 351, 357, 359, 384, 390, 392, 417, 423, 425, 450, 455, 457, 483, 487, 489, 511, 514, 516, 533, 535, 558, 561, 563, 571, 584, 599, 615, 633, 775, 776, 777, 778, 779, 780, 813, 894, 942, 945, 947, 981, 984, 986, 1019, 1022, 1024, 1026, 1057, 1060, 1062, 1097, 1100, 1102, 1136, 1139, 1141, 1175, 1178, 1180, 1213, 1216, 1218, 1220, 1251, 1254, 1256, 1280, 1283, 1285, 1313, 1316, 1318, 1347, 1350, 1352, 1381, 1384, 1386, 1410, 1413, 1415, 1443, 1446, 1448, 1471, 1474, 1476, 1499, 1502, 1504, 1527, 1530, 1532, 1560, 1563, 1565, 1589, 1592, 1594, 1622, 1625, 1627, 1651, 1654, 1656, 1694, 1714, 1761, 1775, 1787, 1840, 1855, 1858, 1878], "least": [9, 13, 25, 1694, 1702], "moment": [9, 23], "forg": [9, 36], "ahead": 9, "try": [9, 16, 18, 25, 27, 34], "slightli": [9, 23, 27, 33], "higher": [9, 12, 26, 32, 33, 99, 773, 827, 851, 858, 869], "plai": 9, "22e": 9, "improv": [9, 1874], "teh": 9, "nearli": [9, 31], "perfect": 9, "Of": [9, 28, 36], "high": [9, 10, 29, 33, 707, 715, 765, 798, 949, 1291, 1325, 1359, 1421, 1538, 1600], "dicuss": 9, "dual": [9, 26, 27], "microporos": 9, "resolv": [9, 31, 586], "greater": [9, 29, 1220], "besid": 9, "inconsist": 9, "aris": [9, 27], "max": [9, 12, 29, 30, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 499, 526, 546, 711, 759, 762, 787, 788, 889, 890, 891, 929, 968, 1006, 1044, 1084, 1123, 1162, 1200, 1238, 1268, 1300, 1334, 1368, 1398, 1430, 1459, 1487, 1515, 1547, 1577, 1609, 1639], "079377537427984e": 9, "1974596571409198e": 9, "remedi": [9, 28, 713], "increas": [9, 33, 34, 713, 874, 890, 894, 1874, 1875], "entir": [9, 23, 27, 30, 31, 33, 872, 1701, 1735, 1740], "simpli": [9, 28, 30, 720, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226], "coordin": [9, 26, 27, 28, 29, 34, 615, 660, 661, 662, 663, 664, 665, 674, 675, 676, 677, 678, 679, 689, 690, 691, 693, 694, 731, 732, 738, 743, 745, 746, 747, 748, 910, 949, 988, 1026, 1064, 1104, 1143, 1182, 1220, 1682, 1684, 1685, 1694, 1695, 1696, 1697, 1700, 1703, 1712, 1713, 1714, 1715, 1717, 1875, 1876, 1879], "681583689206006e": 9, "suitabl": [9, 28, 714, 716, 764, 766, 771, 794, 801, 875, 1687, 1849, 1879], "present": [9, 18, 20, 26, 27, 28, 30, 31, 44, 51, 52, 53, 56, 60, 67, 70, 76, 83, 84, 85, 88, 90, 93, 96, 103, 110, 111, 112, 116, 120, 121, 123, 125, 128, 136, 143, 144, 145, 148, 152, 158, 161, 169, 176, 177, 178, 181, 185, 191, 194, 201, 208, 209, 210, 214, 218, 219, 221, 223, 226, 234, 241, 242, 243, 246, 250, 256, 259, 267, 274, 275, 276, 279, 283, 289, 292, 300, 307, 308, 309, 312, 316, 322, 325, 333, 340, 341, 342, 345, 349, 356, 359, 367, 374, 375, 376, 379, 383, 389, 392, 400, 407, 408, 409, 412, 416, 422, 425, 433, 440, 441, 442, 445, 449, 454, 457, 466, 473, 474, 475, 478, 486, 489, 495, 502, 503, 504, 507, 510, 513, 516, 535, 542, 549, 550, 551, 554, 560, 563, 566, 567, 568, 569, 570, 572, 584, 599, 775, 777, 780, 847, 918, 926, 928, 932, 934, 935, 938, 944, 947, 957, 965, 967, 971, 973, 974, 977, 983, 986, 995, 1003, 1005, 1009, 1011, 1012, 1015, 1021, 1024, 1033, 1041, 1043, 1047, 1049, 1050, 1053, 1059, 1062, 1071, 1081, 1083, 1087, 1089, 1090, 1093, 1099, 1102, 1112, 1120, 1122, 1126, 1128, 1129, 1132, 1138, 1141, 1151, 1159, 1161, 1165, 1167, 1168, 1171, 1177, 1180, 1189, 1197, 1199, 1203, 1205, 1206, 1209, 1215, 1218, 1227, 1235, 1237, 1241, 1243, 1244, 1247, 1253, 1256, 1264, 1271, 1272, 1273, 1276, 1282, 1285, 1294, 1303, 1304, 1305, 1308, 1315, 1318, 1328, 1337, 1338, 1339, 1342, 1349, 1352, 1362, 1371, 1372, 1373, 1376, 1383, 1386, 1394, 1401, 1402, 1403, 1406, 1412, 1415, 1424, 1433, 1434, 1435, 1438, 1445, 1448, 1455, 1462, 1463, 1464, 1467, 1473, 1476, 1483, 1490, 1491, 1492, 1495, 1501, 1504, 1511, 1518, 1519, 1520, 1523, 1529, 1532, 1541, 1550, 1551, 1552, 1555, 1562, 1565, 1573, 1580, 1581, 1582, 1585, 1591, 1594, 1603, 1612, 1613, 1614, 1617, 1624, 1627, 1635, 1642, 1643, 1644, 1647, 1653, 1656, 1761, 1775, 1787, 1795, 1798, 1813, 1816, 1821, 1853, 1855], "50e": [9, 29], "15258430635887843": 9, "apart": 9, "perhap": [9, 31, 820], "48": [9, 26, 33], "tqdm": 10, "disabl": [10, 32], "modulenotfounderror": [10, 34], "traceback": 10, "recent": [10, 1026, 1220], "No": [10, 27, 28, 1679], "name": [10, 11, 12, 15, 17, 25, 26, 29, 30, 31, 34, 36, 38, 57, 60, 64, 72, 89, 90, 98, 117, 120, 130, 149, 152, 155, 163, 182, 185, 188, 196, 215, 218, 228, 247, 250, 253, 261, 280, 283, 286, 294, 313, 316, 319, 327, 346, 349, 353, 361, 380, 383, 386, 394, 413, 416, 419, 427, 446, 449, 460, 461, 479, 480, 481, 491, 508, 510, 519, 520, 531, 537, 538, 555, 557, 573, 602, 605, 613, 615, 618, 621, 626, 628, 629, 632, 633, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 710, 712, 713, 714, 716, 718, 720, 723, 724, 725, 726, 727, 730, 734, 735, 736, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 761, 763, 764, 766, 768, 769, 770, 771, 775, 776, 777, 778, 779, 780, 789, 794, 797, 801, 820, 823, 824, 825, 826, 827, 829, 830, 831, 834, 836, 841, 845, 847, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 865, 866, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 894, 905, 907, 908, 910, 912, 939, 941, 949, 951, 978, 980, 988, 989, 1016, 1018, 1026, 1027, 1054, 1056, 1064, 1065, 1094, 1096, 1104, 1106, 1133, 1135, 1143, 1145, 1172, 1174, 1182, 1183, 1210, 1212, 1220, 1221, 1248, 1250, 1259, 1260, 1277, 1279, 1287, 1288, 1289, 1297, 1309, 1311, 1312, 1320, 1321, 1322, 1323, 1331, 1343, 1345, 1346, 1354, 1355, 1356, 1357, 1365, 1377, 1379, 1380, 1388, 1389, 1390, 1407, 1409, 1417, 1418, 1419, 1427, 1439, 1441, 1442, 1450, 1451, 1468, 1470, 1478, 1479, 1496, 1498, 1506, 1507, 1524, 1526, 1534, 1535, 1536, 1544, 1556, 1558, 1559, 1567, 1568, 1569, 1586, 1588, 1596, 1597, 1598, 1606, 1618, 1620, 1621, 1629, 1630, 1631, 1648, 1650, 1717, 1729, 1801, 1803, 1838, 1842, 1847, 1849, 1852, 1858, 1859, 1867, 1875, 1876], "cubes_and_cuboid": [10, 23], "vol_void": 10, "vol_bulk": 10, "poro": 10, "One": [10, 20, 25, 26, 27, 28, 29, 30, 31, 33, 812, 887, 1291, 1325, 1359, 1421, 1538, 1600], "correctli": [10, 1717], "nx": [10, 14, 29, 708, 949], "erron": 10, "addit": [10, 20, 21, 26, 27, 29, 30, 31, 461, 462, 519, 538, 539, 602, 603, 776, 820, 899, 910, 912, 913, 951, 952, 989, 990, 1027, 1028, 1065, 1066, 1106, 1107, 1143, 1145, 1146, 1183, 1184, 1221, 1222, 1260, 1261, 1289, 1290, 1323, 1324, 1357, 1358, 1390, 1391, 1419, 1420, 1451, 1452, 1479, 1480, 1507, 1508, 1536, 1537, 1569, 1570, 1598, 1599, 1631, 1632, 1875, 1876], "half": [10, 29, 32, 713, 725], "green": [10, 28, 29, 33], "center": [10, 23, 26, 27, 32, 779, 817, 889, 910, 949, 988, 1143, 1220, 1703], "ignor": [10, 23, 61, 64, 69, 91, 95, 122, 127, 153, 155, 160, 186, 188, 193, 220, 225, 251, 253, 258, 284, 286, 291, 317, 319, 324, 350, 353, 358, 384, 386, 391, 417, 419, 424, 450, 456, 483, 488, 511, 515, 534, 558, 562, 571, 759, 762, 787, 842, 867, 916, 942, 946, 955, 981, 985, 993, 1019, 1023, 1026, 1031, 1057, 1061, 1069, 1097, 1101, 1110, 1136, 1140, 1149, 1175, 1179, 1187, 1213, 1217, 1220, 1225, 1251, 1255, 1280, 1284, 1299, 1313, 1317, 1333, 1347, 1351, 1367, 1381, 1385, 1410, 1414, 1429, 1443, 1447, 1471, 1475, 1499, 1503, 1527, 1531, 1546, 1560, 1564, 1589, 1593, 1608, 1622, 1626, 1651, 1655, 1666, 1714, 1715, 1862, 1863, 1864, 1879], "overestim": 10, "real": [10, 20, 633], "account": [10, 11, 12, 20, 23, 32, 720, 775, 776, 777, 780, 874, 890, 894, 1722], "pendular_r": [10, 776, 778], "tackl": 10, "vol_void_initi": 10, "vol_void_correct": 10, "poro_initi": 10, "poro_correct": 10, "5f": 10, "12852": 10, "12590": 10, "although": [10, 23, 27, 820, 896, 897], "neglig": [10, 661, 663], "pendular": [10, 779], "ring": [10, 779, 1718], "resid": [10, 778, 779], "radii": [10, 29, 779], "segment": 10, "regular": 10, "fill": [10, 28, 30, 33, 893, 894], "perfectli": [10, 730, 1695], "im": [10, 26, 28, 910, 917, 949, 956, 988, 994, 1026, 1032, 1064, 1070, 1104, 1111, 1143, 1150, 1182, 1188, 1220, 1226, 1718, 1719, 1874], "overlapping_spher": 10, "maxit": [10, 1663, 1665, 1666, 1669, 1671], "imshow": [10, 28], "im_poro": 10, "imag": [10, 18, 23, 26, 28, 29, 34, 614, 708, 916, 955, 988, 993, 1031, 1069, 1110, 1149, 1187, 1225, 1718, 1719, 1874], "1f": 10, "63": [10, 26, 33], "snow": 10, "snow2": 10, "boundary_width": 10, "io": [10, 26, 34, 1853], "network_from_porespi": 10, "inscribed_diamet": 10, "regen_mod": [10, 11, 12, 22, 31, 461, 462, 480, 538, 539, 602, 603, 912, 913, 951, 952, 989, 990, 1027, 1028, 1065, 1066, 1106, 1107, 1145, 1146, 1183, 1184, 1221, 1222, 1260, 1261, 1289, 1290, 1323, 1324, 1357, 1358, 1390, 1391, 1419, 1420, 1451, 1452, 1479, 1480, 1507, 1508, 1536, 1537, 1569, 1570, 1598, 1599, 1631, 1632], "cuboid": [10, 29, 640, 641, 659, 666, 673, 675, 681, 688, 690, 696, 742, 744, 749, 1874], "pnm_poro": 10, "67": [10, 26, 33], "indic": [11, 12, 15, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 38, 56, 57, 58, 61, 62, 63, 64, 65, 67, 68, 69, 72, 88, 89, 91, 93, 94, 95, 98, 116, 117, 121, 122, 125, 126, 127, 130, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 163, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 196, 214, 215, 219, 220, 221, 223, 224, 225, 228, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 261, 279, 280, 281, 284, 285, 286, 287, 289, 290, 291, 294, 312, 313, 314, 317, 318, 319, 320, 322, 323, 324, 327, 345, 346, 347, 350, 351, 352, 353, 354, 356, 357, 358, 361, 379, 380, 381, 384, 385, 386, 387, 389, 390, 391, 394, 412, 413, 414, 417, 418, 419, 420, 422, 423, 424, 427, 445, 446, 447, 450, 451, 452, 454, 455, 456, 460, 461, 462, 478, 479, 483, 486, 487, 488, 491, 507, 508, 511, 513, 514, 515, 519, 520, 531, 533, 534, 537, 538, 539, 554, 555, 558, 560, 561, 562, 570, 571, 572, 602, 603, 615, 627, 629, 707, 708, 715, 765, 798, 812, 813, 842, 867, 910, 911, 912, 913, 916, 917, 920, 922, 923, 926, 928, 938, 939, 942, 944, 945, 946, 949, 950, 951, 952, 955, 956, 959, 961, 962, 965, 967, 977, 978, 981, 983, 984, 985, 988, 989, 990, 993, 994, 997, 999, 1000, 1003, 1005, 1015, 1016, 1019, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1035, 1037, 1038, 1041, 1043, 1053, 1054, 1057, 1059, 1060, 1061, 1064, 1065, 1066, 1069, 1070, 1073, 1075, 1076, 1077, 1081, 1083, 1093, 1094, 1097, 1099, 1100, 1101, 1104, 1105, 1106, 1107, 1110, 1111, 1114, 1116, 1117, 1120, 1122, 1132, 1133, 1136, 1138, 1139, 1140, 1143, 1144, 1145, 1146, 1149, 1150, 1153, 1155, 1156, 1159, 1161, 1171, 1172, 1175, 1177, 1178, 1179, 1182, 1183, 1184, 1187, 1188, 1191, 1193, 1194, 1197, 1199, 1209, 1210, 1213, 1215, 1216, 1217, 1220, 1221, 1222, 1225, 1226, 1229, 1231, 1232, 1235, 1237, 1247, 1248, 1251, 1253, 1254, 1255, 1259, 1260, 1261, 1276, 1277, 1280, 1282, 1283, 1284, 1287, 1289, 1290, 1291, 1299, 1308, 1309, 1313, 1315, 1316, 1317, 1321, 1323, 1324, 1325, 1333, 1342, 1343, 1347, 1349, 1350, 1351, 1355, 1357, 1358, 1359, 1367, 1376, 1377, 1381, 1383, 1384, 1385, 1389, 1390, 1391, 1406, 1407, 1410, 1412, 1413, 1414, 1417, 1419, 1420, 1421, 1429, 1438, 1439, 1443, 1445, 1446, 1447, 1450, 1451, 1452, 1467, 1468, 1471, 1473, 1474, 1475, 1478, 1479, 1480, 1495, 1496, 1499, 1501, 1502, 1503, 1506, 1507, 1508, 1523, 1524, 1527, 1529, 1530, 1531, 1534, 1536, 1537, 1538, 1546, 1555, 1556, 1560, 1562, 1563, 1564, 1568, 1569, 1570, 1585, 1586, 1589, 1591, 1592, 1593, 1596, 1598, 1599, 1600, 1608, 1617, 1618, 1622, 1624, 1625, 1626, 1630, 1631, 1632, 1647, 1648, 1651, 1653, 1654, 1655, 1676, 1678, 1682, 1683, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1696, 1697, 1701, 1703, 1704, 1712, 1716, 1721, 1722, 1868, 1869], "concept": [11, 23, 25, 29], "mechan": [11, 15, 33], "info": [11, 12, 910, 949, 988, 1026, 1064, 1104, 1143, 1182, 1220, 1287, 1321, 1355, 1417, 1534, 1596], "similarli": [11, 17, 29], "072": [11, 12, 33], "contact_angl": [11, 12, 14, 31, 33, 650, 651, 874, 875, 889, 890, 891], "partial": [11, 30], "accomplish": [11, 30, 32, 33, 1182], "invasonpercol": 11, "ordinarypercol": 11, "drn": [11, 33], "occup": [11, 463, 484, 838, 893, 1722], "invasion_pressur": [11, 33, 99], "costum": [11, 12, 34], "sat_upd": 11, "nwp": [11, 12, 33, 894], "wp": [11, 12, 33, 894], "pore_mask": [11, 12], "throat_mask": [11, 12], "sat_p": [11, 12], "sat_t": [11, 12], "sat1": [11, 12], "bulk": [11, 12, 25], "sat": [11, 12], "cancel": [11, 12, 23], "remain": [11, 12, 33, 713, 1804], "fraction": [11, 12, 29, 824, 833, 835, 839, 842, 843, 844, 867, 894, 896, 897, 949, 1288, 1291, 1299, 1320, 1322, 1325, 1333, 1354, 1356, 1359, 1367, 1388, 1418, 1421, 1429, 1535, 1538, 1546, 1567, 1597, 1600, 1608, 1629, 1703], "text": [11, 23, 1717], "rate_": 11, "fickian": [11, 23, 34, 130], "conduit_conduct": [11, 12], "wherea": [11, 12, 23, 896, 897, 1690], "generic_diffusive_conduct": 11, "calcuat": [11, 12, 29, 753, 754, 755, 756, 757, 760, 767, 774], "rate_calc": [11, 12], "keyword": [11, 12, 461, 482, 538, 602, 610, 712, 763, 789, 820, 899, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1687, 1691, 1692, 1875, 1876], "val": [11, 12, 15, 31, 461, 538, 602, 841, 843, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1297, 1299, 1323, 1331, 1333, 1357, 1365, 1367, 1390, 1419, 1427, 1429, 1451, 1479, 1507, 1536, 1544, 1546, 1569, 1598, 1606, 1608, 1631], "focus": [11, 12], "diff_in": 11, "diff_out": 11, "presenc": [11, 12, 31], "model_mp_cond": [11, 12], "conduit_diffusive_conduct": 11, "throat_conduct": [11, 12, 882, 883, 893, 907, 908], "defer": [11, 12, 15, 22, 29, 30, 31, 461, 462, 538, 539, 602, 603, 912, 913, 951, 952, 989, 990, 1027, 1028, 1065, 1066, 1106, 1107, 1145, 1146, 1183, 1184, 1221, 1222, 1260, 1261, 1289, 1290, 1323, 1324, 1357, 1358, 1390, 1391, 1419, 1420, 1451, 1452, 1479, 1480, 1507, 1508, 1536, 1537, 1569, 1570, 1598, 1599, 1631, 1632], "snwparr": [11, 12], "reldiff_nwp": 11, "reldiff_wp": 11, "uniqu": [11, 16, 28, 30, 910, 919, 923, 949, 958, 962, 996, 1000, 1026, 1034, 1038, 1064, 1072, 1076, 1104, 1113, 1117, 1143, 1152, 1156, 1182, 1190, 1194, 1220, 1228, 1232, 1478, 1717, 1803, 1849], "sat_point": 11, "rate_single_nwp": 11, "rate_single_wp": 11, "rate_mult_nwp": 11, "rate_mult_wp": 11, "dr_nwp": 11, "dr_wp": 11, "xlabel": [11, 12, 33], "snwp": [11, 12, 14, 33], "ylabel": [11, 12, 33], "dr": [11, 891], "titl": [11, 12], "0x7f1e4b6ce860": 11, "sequenc": [12, 25, 33, 197], "asum": 12, "ip": [12, 33], "impplement": 12, "face": [12, 26, 130, 911, 949, 950, 1026, 1064, 1105, 1143, 1144, 1220, 1677, 1694, 1695, 1709, 1713], "By": [12, 23, 462, 539, 603, 813, 820, 913, 952, 990, 1028, 1066, 1107, 1146, 1184, 1222, 1261, 1290, 1324, 1358, 1391, 1420, 1452, 1480, 1508, 1537, 1570, 1599, 1632, 1694], "invasionpercol": [12, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "finlets_init": 12, "finlet": 12, "satur": [12, 14, 33, 211, 827, 851, 858, 869], "sat_occ_upd": 12, "ran": 12, "int": [12, 23, 28, 52, 53, 60, 84, 85, 90, 111, 112, 119, 120, 144, 145, 152, 177, 178, 185, 209, 210, 218, 242, 243, 250, 275, 276, 283, 308, 309, 316, 341, 342, 349, 375, 376, 383, 408, 409, 416, 441, 442, 449, 474, 475, 503, 504, 510, 550, 551, 568, 569, 615, 680, 695, 707, 708, 715, 765, 798, 934, 935, 949, 973, 974, 1011, 1012, 1026, 1049, 1050, 1064, 1089, 1090, 1128, 1129, 1167, 1168, 1205, 1206, 1220, 1243, 1244, 1272, 1273, 1304, 1305, 1338, 1339, 1372, 1373, 1402, 1403, 1434, 1435, 1463, 1464, 1491, 1492, 1519, 1520, 1551, 1552, 1581, 1582, 1613, 1614, 1643, 1644, 1685, 1718, 1719, 1727, 1744, 1746, 1749, 1874, 1879], "invasion_sequ": [12, 33, 99, 197], "mask": [12, 25, 28, 56, 61, 68, 69, 88, 91, 94, 95, 116, 122, 126, 127, 148, 153, 159, 160, 181, 186, 192, 193, 214, 220, 224, 225, 246, 251, 257, 258, 279, 284, 290, 291, 312, 317, 323, 324, 345, 350, 357, 358, 379, 384, 390, 391, 412, 417, 423, 424, 445, 450, 455, 456, 478, 483, 487, 488, 507, 511, 514, 515, 533, 534, 554, 558, 561, 562, 570, 571, 922, 923, 938, 942, 945, 946, 961, 962, 977, 981, 984, 985, 988, 999, 1000, 1015, 1019, 1022, 1023, 1037, 1038, 1053, 1057, 1060, 1061, 1075, 1076, 1093, 1097, 1100, 1101, 1116, 1117, 1132, 1136, 1139, 1140, 1155, 1156, 1171, 1175, 1178, 1179, 1193, 1194, 1209, 1213, 1216, 1217, 1231, 1232, 1247, 1251, 1254, 1255, 1276, 1280, 1283, 1284, 1308, 1313, 1316, 1317, 1342, 1347, 1350, 1351, 1376, 1381, 1384, 1385, 1406, 1410, 1413, 1414, 1438, 1443, 1446, 1447, 1467, 1471, 1474, 1475, 1495, 1499, 1502, 1503, 1523, 1527, 1530, 1531, 1555, 1560, 1563, 1564, 1585, 1589, 1592, 1593, 1617, 1622, 1625, 1626, 1647, 1651, 1654, 1655, 1682, 1683, 1686, 1690, 1703], "thorat": 12, "meet": [12, 32, 661, 663], "rphase": 12, "ephas": 12, "q_": 12, "stoke": [12, 697], "generic_hydraulic_conduct": 12, "st_p": 12, "relativep": 12, "flow_in": 12, "flow_out": 12, "detail": [12, 15, 23, 25, 26, 27, 29, 30, 31, 32, 34, 461, 538, 602, 616, 874, 890, 896, 897, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1220, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1686], "plesas": 12, "conduit_hydraulic_conduct": 12, "hydraulic_conduct": [12, 14, 16, 18, 32, 653, 654, 872, 880], "select": [12, 29, 31, 34, 62, 351, 656, 670, 685, 700, 709, 717, 722, 728, 733, 739, 753, 757, 760, 767, 774, 896, 897, 1675, 1711, 1731, 1744], "snwp_num": 12, "max_seq": 12, "stop": [12, 1795, 1813, 1874], "relperm_nwp": 12, "relperm_wp": 12, "rate_abs_nwp": 12, "rate_abs_wp": 12, "rate_enwp": 12, "rate_ewp": 12, "kr_nwp": 12, "kr_wp": 12, "kr": 12, "0x7fb13a6d8400": 12, "folder": [13, 34, 36, 614, 618], "contribut": [13, 459], "develop": [13, 16, 21, 26, 30, 33, 36, 459, 614], "perman": 13, "worth": [13, 14, 20, 26, 28, 29, 30, 459], "repositori": 13, "access": [13, 15, 17, 22, 25, 27, 30, 31, 33, 36, 196, 615, 707, 711, 712, 714, 715, 716, 759, 762, 763, 764, 765, 766, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237, 1478, 1731, 1744], "via": [13, 17, 26, 27, 31, 33, 36, 610], "github": [13, 36], "NOT": [13, 33, 461, 538, 602, 615, 775, 777, 780, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631], "test": [13, 23, 25, 27, 784, 820, 1861], "suit": [13, 29, 31, 1534, 1596], "gaurante": 13, "encourag": 13, "__version__": 13, "reader": 13, "version": [13, 18, 25, 28, 29, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 472, 501, 528, 548, 824, 860, 931, 970, 1008, 1046, 1086, 1125, 1164, 1202, 1240, 1270, 1302, 1336, 1370, 1400, 1432, 1461, 1489, 1517, 1549, 1579, 1611, 1641, 1728, 1730, 1732, 1734, 1737, 1739, 1741, 1743, 1745, 1747, 1748, 1750, 1803], "inten": 13, "fact": [14, 27, 28, 29, 31, 32, 33], "block": [14, 22, 25, 26, 29, 33], "ny": [14, 708, 949], "nz": [14, 708, 949], "lc": [14, 1875], "0x7efc1e773fb0": 14, "2700": 14, "488": 14, "972": 14, "phase_01": [14, 16, 22, 31, 32, 1862, 1863], "0x7efc1e181d50": 14, "temperatur": [14, 20, 21, 22, 27, 31, 32, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 499, 526, 546, 647, 650, 820, 823, 824, 825, 827, 829, 830, 831, 834, 836, 845, 847, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 865, 866, 868, 869, 878, 896, 897, 929, 968, 1006, 1044, 1084, 1123, 1162, 1200, 1238, 1268, 1300, 1334, 1368, 1398, 1430, 1459, 1487, 1515, 1547, 1577, 1609, 1639], "thermal_conduct": [14, 31, 647, 650, 651, 654, 853, 855, 907, 908], "molar_dens": [14, 31, 647, 650, 651], "logspac": 14, "pin": 14, "pout": 14, "200_000": [14, 18], "101_325": 14, "insert": [14, 30, 33, 66, 92, 124, 157, 190, 222, 255, 288, 321, 355, 388, 421, 453, 485, 512, 532, 559, 583, 598, 943, 982, 1020, 1058, 1098, 1137, 1176, 1214, 1252, 1281, 1314, 1348, 1382, 1411, 1444, 1472, 1500, 1528, 1561, 1590, 1623, 1652, 1717, 1726, 1727, 1760, 1772, 1786, 1854], "40366442e": 14, "possess": [14, 30, 519, 841], "demand": [14, 1182], "dummi": [14, 1744], "variabl": [14, 17, 21, 23, 30, 59, 151, 184, 249, 282, 315, 448, 792, 796, 872, 896, 897, 899], "gmod": 14, "old_diamet": 14, "pop": [14, 25, 33], "glanc": 14, "complex": [14, 26, 29, 30, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 507, 554, 570, 938, 977, 1015, 1053, 1093, 1132, 1171, 1209, 1247, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647], "task": [14, 27], "part": [15, 23, 27, 28, 32, 682, 697, 827, 851, 858, 862, 869, 922, 923, 961, 962, 999, 1000, 1037, 1038, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1686, 1691, 1692, 1704, 1716, 1729, 1731, 1742, 1744], "design": [15, 17, 22, 23, 26, 461, 538, 602, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631], "cover": [15, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "pore_to_pore_dist": [15, 30], "receiv": [15, 28, 44, 56, 76, 88, 103, 116, 136, 148, 169, 181, 201, 214, 234, 246, 267, 279, 300, 312, 333, 345, 367, 379, 400, 412, 433, 445, 466, 478, 495, 507, 542, 554, 566, 570, 820, 918, 938, 957, 977, 995, 1015, 1033, 1053, 1071, 1093, 1112, 1132, 1151, 1171, 1189, 1209, 1227, 1247, 1264, 1276, 1294, 1308, 1328, 1342, 1362, 1376, 1394, 1406, 1424, 1438, 1455, 1467, 1483, 1495, 1511, 1523, 1541, 1555, 1573, 1585, 1603, 1617, 1635, 1647], "avoid": [15, 17, 27, 29, 33, 617], "5292881": 15, "62911362": 15, "56165803": 15, "52692991": 15, "45419288": 15, "58753647": 15, "46255233": 15, "7350638": 15, "77819766": 15, "wonder": [15, 25], "write": [15, 16, 20, 22, 23, 25, 27, 29, 621, 622, 625, 633], "pass": [15, 25, 27, 29, 30, 31, 348, 382, 415, 461, 481, 482, 509, 538, 557, 602, 605, 820, 823, 824, 825, 826, 827, 829, 830, 831, 834, 836, 845, 847, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 865, 866, 868, 869, 872, 899, 912, 941, 951, 980, 989, 1018, 1027, 1056, 1065, 1096, 1106, 1135, 1145, 1174, 1183, 1212, 1221, 1250, 1260, 1279, 1289, 1312, 1323, 1346, 1357, 1380, 1390, 1409, 1419, 1442, 1451, 1470, 1479, 1498, 1507, 1526, 1536, 1559, 1569, 1588, 1598, 1621, 1631, 1650, 1711, 1718, 1719, 1744, 1801, 1849, 1875, 1876], "forc": [15, 29, 62, 351], "caught": [15, 25], "written": [15, 16, 22, 25, 27, 29, 30, 32, 633], "abil": [15, 25, 27, 31, 32, 519, 573, 1026, 1220], "variou": [15, 16, 28, 29, 31, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452, 618, 670, 685, 700, 722, 739, 774], "placesn": 15, "throughout": [15, 20, 27, 29, 30, 1478], "script": [15, 30, 1665], "proudc": 15, "relev": [16, 25, 30], "particularli": [16, 27, 30], "toler": [16, 1709, 1865], "overview": [16, 25, 29], "behavior": [16, 25, 26, 29, 30, 31, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 464, 480, 492, 521, 540, 730, 914, 953, 991, 1029, 1067, 1108, 1147, 1185, 1223, 1262, 1292, 1326, 1360, 1392, 1422, 1453, 1481, 1509, 1539, 1571, 1601, 1633], "plenti": 16, "demo": [16, 17, 18, 25, 27, 31, 32, 33, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142], "uuid": [16, 1803], "b6deada5": 16, "a12": 16, "4b92": 16, "a049": 16, "50e835d4f01b": 16, "default_domain": 16, "domain_1": 16, "cach": 16, "variable_prop": 16, "typedset": [16, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837], "f_rtol": 16, "06": [16, 29, 609, 647, 650, 807, 812, 890, 891, 893], "newton_maxit": 16, "5000": 16, "relaxation_factor": 16, "x_rtol": 16, "behav": 16, "somewhat": [16, 32], "dataclass": [16, 910, 949, 1026, 1064, 1104, 1143, 1182, 1220], "sorri": 16, "explor": [16, 26, 27, 29, 874, 890, 933, 972, 1010, 1048, 1088, 1127, 1166, 1204, 1242], "talk": 16, "onc": [16, 25, 29, 31, 32, 36, 462, 539, 603, 913, 952, 990, 1028, 1066, 1107, 1146, 1184, 1222, 1261, 1290, 1324, 1358, 1391, 1420, 1452, 1480, 1508, 1537, 1570, 1599, 1632, 1695, 1800, 1818], "subsequ": [16, 33, 707, 715, 765, 798], "except": [16, 18, 20, 25, 27, 34, 39, 60, 68, 73, 90, 94, 100, 120, 121, 123, 126, 131, 152, 159, 164, 185, 192, 197, 198, 218, 219, 221, 224, 229, 250, 257, 262, 283, 290, 295, 316, 323, 328, 349, 357, 362, 383, 390, 395, 416, 423, 428, 449, 455, 464, 480, 487, 492, 510, 514, 521, 533, 540, 561, 590, 914, 945, 953, 984, 988, 991, 1022, 1029, 1060, 1067, 1100, 1108, 1139, 1147, 1178, 1185, 1216, 1223, 1254, 1262, 1283, 1292, 1316, 1326, 1350, 1360, 1384, 1392, 1413, 1422, 1446, 1453, 1474, 1481, 1502, 1509, 1530, 1539, 1563, 1571, 1592, 1601, 1625, 1633, 1654], "reciev": 16, "str": [16, 25, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 73, 74, 76, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 93, 100, 101, 103, 106, 107, 109, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 131, 132, 136, 139, 140, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 164, 165, 169, 172, 173, 175, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 189, 191, 198, 199, 201, 204, 205, 207, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 229, 230, 234, 237, 238, 240, 241, 242, 243, 246, 247, 248, 250, 251, 252, 253, 254, 256, 262, 263, 267, 270, 271, 273, 274, 275, 276, 279, 280, 281, 283, 284, 285, 286, 287, 289, 295, 296, 300, 303, 304, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 322, 328, 329, 333, 336, 337, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 362, 363, 367, 370, 371, 373, 374, 375, 376, 379, 380, 381, 383, 384, 385, 386, 387, 389, 395, 396, 400, 403, 404, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 422, 428, 429, 433, 436, 437, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 454, 461, 462, 464, 466, 469, 470, 472, 473, 474, 475, 478, 479, 480, 481, 483, 486, 492, 493, 495, 498, 499, 501, 502, 503, 504, 507, 508, 510, 511, 513, 518, 521, 525, 526, 528, 531, 538, 539, 540, 542, 545, 546, 548, 549, 550, 551, 554, 555, 557, 558, 560, 566, 567, 568, 569, 570, 571, 572, 602, 603, 605, 613, 614, 617, 618, 621, 626, 628, 629, 632, 633, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 710, 711, 712, 713, 714, 716, 718, 720, 723, 724, 725, 726, 727, 730, 734, 735, 736, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 759, 761, 762, 763, 764, 766, 768, 769, 770, 771, 775, 776, 777, 778, 779, 780, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 799, 801, 805, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 911, 912, 913, 914, 916, 917, 918, 919, 922, 923, 926, 927, 928, 929, 931, 932, 933, 934, 935, 938, 939, 941, 942, 944, 949, 950, 951, 952, 953, 955, 956, 957, 958, 961, 962, 965, 966, 967, 968, 970, 971, 972, 973, 974, 977, 978, 980, 981, 983, 988, 989, 990, 991, 993, 994, 995, 996, 999, 1000, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1015, 1016, 1018, 1019, 1021, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1037, 1038, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1053, 1054, 1056, 1057, 1059, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1075, 1076, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1096, 1097, 1099, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1116, 1117, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1135, 1136, 1138, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1171, 1172, 1174, 1175, 1177, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1193, 1194, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1209, 1210, 1212, 1213, 1215, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1231, 1232, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1247, 1248, 1250, 1251, 1253, 1260, 1261, 1262, 1264, 1267, 1268, 1270, 1271, 1272, 1273, 1276, 1277, 1279, 1280, 1282, 1289, 1290, 1292, 1294, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1308, 1309, 1311, 1312, 1313, 1315, 1320, 1323, 1324, 1326, 1328, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1343, 1345, 1346, 1347, 1349, 1354, 1357, 1358, 1360, 1362, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1377, 1379, 1380, 1381, 1383, 1388, 1390, 1391, 1392, 1394, 1397, 1398, 1400, 1401, 1402, 1403, 1406, 1407, 1409, 1410, 1412, 1419, 1420, 1422, 1424, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1438, 1439, 1441, 1442, 1443, 1445, 1451, 1452, 1453, 1455, 1458, 1459, 1461, 1462, 1463, 1464, 1467, 1468, 1470, 1471, 1473, 1478, 1479, 1480, 1481, 1483, 1486, 1487, 1489, 1490, 1491, 1492, 1495, 1496, 1498, 1499, 1501, 1507, 1508, 1509, 1511, 1514, 1515, 1517, 1518, 1519, 1520, 1523, 1524, 1526, 1527, 1529, 1536, 1537, 1539, 1541, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1555, 1556, 1558, 1559, 1560, 1562, 1567, 1569, 1570, 1571, 1573, 1576, 1577, 1579, 1580, 1581, 1582, 1585, 1586, 1588, 1589, 1591, 1598, 1599, 1601, 1603, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1617, 1618, 1620, 1621, 1622, 1624, 1629, 1631, 1632, 1633, 1635, 1638, 1639, 1641, 1642, 1643, 1644, 1647, 1648, 1650, 1651, 1653, 1666, 1676, 1679, 1684, 1687, 1691, 1692, 1694, 1709, 1711, 1717, 1727, 1729, 1731, 1733, 1736, 1738, 1740, 1742, 1744, 1746, 1749, 1803, 1842, 1847, 1848, 1849, 1852, 1853, 1862, 1863, 1867, 1874, 1875, 1876, 1878, 1879], "getattr": 16, "tab": [16, 17, 29, 34], "complet": [16, 29, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 511, 558, 571, 893, 896, 897, 942, 981, 1019, 1057, 1097, 1136, 1175, 1213, 1251, 1280, 1313, 1347, 1381, 1410, 1443, 1471, 1499, 1527, 1560, 1589, 1622, 1651], "trait": 16, "attr": 16, "pydant": 16, "had": [16, 18, 22, 30], "major": [16, 30, 519], "drawback": 16, "clutter": 16, "item": [16, 17, 25, 28, 29, 31, 196, 575, 587, 889, 898, 900, 901, 902, 903, 904, 905, 1291, 1325, 1359, 1421, 1538, 1600, 1731, 1733, 1744, 1746, 1752, 1764, 1777, 1778, 1789, 1791, 1797, 1800, 1802, 1806, 1809, 1815, 1818, 1821, 1839, 1862, 1863], "dir": [16, 25], "startswith": [16, 25, 28], "certain": [16, 30, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 464, 492, 521, 540, 914, 953, 991, 1029, 1067, 1108, 1147, 1185, 1223, 1262, 1292, 1326, 1360, 1392, 1422, 1453, 1481, 1509, 1539, 1571, 1601, 1633, 1666, 1711], "sever": [16, 22, 25, 26, 27, 28, 29, 30, 31, 33, 462, 537, 539, 603, 820, 893, 913, 952, 990, 1028, 1066, 1107, 1146, 1182, 1184, 1222, 1261, 1290, 1324, 1358, 1391, 1420, 1452, 1480, 1508, 1537, 1570, 1599, 1632, 1878], "typedlist": [16, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818], "insist": [16, 36], "cannot": [16, 18, 20, 25, 27, 28, 31, 64, 99, 155, 188, 253, 286, 319, 353, 386, 419, 1182], "place": [16, 26, 27, 29, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 456, 481, 488, 515, 534, 557, 562, 605, 626, 633, 708, 713, 784, 790, 916, 917, 941, 946, 955, 956, 980, 985, 993, 994, 1018, 1023, 1031, 1032, 1056, 1061, 1069, 1070, 1096, 1101, 1110, 1111, 1135, 1140, 1149, 1150, 1174, 1179, 1187, 1188, 1212, 1217, 1225, 1226, 1250, 1255, 1279, 1284, 1312, 1317, 1346, 1351, 1380, 1385, 1409, 1414, 1442, 1447, 1470, 1475, 1498, 1503, 1526, 1531, 1559, 1564, 1588, 1593, 1621, 1626, 1650, 1655, 1714, 1715, 1799, 1800, 1817, 1818], "usabl": 16, "even": [16, 18, 26, 29, 30, 31, 810, 922, 961, 999, 1037, 1075, 1116, 1155, 1193, 1231], "overload": [16, 25, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 472, 501, 528, 548, 931, 970, 1008, 1046, 1086, 1125, 1164, 1202, 1240, 1270, 1302, 1336, 1370, 1400, 1432, 1461, 1489, 1517, 1549, 1579, 1611, 1641], "__new__": 16, "base2": [16, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 565], "descend": [16, 519, 1800, 1818], "core": [16, 1665], "c2e3bdd4": 16, "e967": 16, "49d1": 16, "8dc5": 16, "334ff0823657": 16, "dure": [16, 26, 29, 30, 519, 1717], "reload": 16, "worri": [17, 23], "equival": [17, 31, 60, 68, 90, 94, 120, 126, 152, 159, 185, 192, 218, 224, 250, 257, 283, 290, 316, 323, 349, 357, 383, 390, 416, 423, 449, 455, 481, 487, 510, 514, 533, 557, 561, 605, 919, 922, 923, 933, 941, 945, 958, 961, 962, 972, 980, 984, 996, 999, 1000, 1010, 1018, 1022, 1034, 1037, 1038, 1048, 1056, 1060, 1072, 1075, 1076, 1088, 1096, 1100, 1113, 1116, 1117, 1127, 1135, 1139, 1152, 1155, 1156, 1166, 1174, 1178, 1190, 1193, 1194, 1204, 1212, 1216, 1228, 1231, 1232, 1242, 1250, 1254, 1279, 1283, 1312, 1316, 1320, 1346, 1350, 1354, 1380, 1384, 1388, 1409, 1413, 1442, 1446, 1470, 1474, 1498, 1502, 1526, 1530, 1559, 1563, 1567, 1588, 1592, 1621, 1625, 1629, 1650, 1654, 1687, 1691, 1692, 1744, 1746], "web": 17, "browser": [17, 34], "window": 17, "insid": [17, 738, 889, 1078], "isol": [17, 18, 28, 1679, 1690, 1709, 1858], "associ": [17, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 480, 491, 519, 520, 537, 586, 707, 711, 712, 714, 715, 716, 759, 762, 763, 764, 765, 766, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 797, 798, 799, 800, 801, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 949, 988, 1026, 1064, 1104, 1143, 1182, 1220, 1259, 1287, 1321, 1355, 1389, 1417, 1450, 1478, 1506, 1534, 1568, 1596, 1630, 1801, 1852], "open": [17, 34, 35, 36, 632, 896, 897, 1686, 1801, 1838, 1847], "regist": [17, 1801], "load": [17, 612, 613, 614, 616, 617, 618, 1847, 1848, 1853], "verifi": [17, 23, 32], "empti": [17, 30, 31, 32, 51, 55, 60, 83, 87, 90, 110, 115, 120, 143, 147, 152, 176, 180, 185, 208, 213, 218, 241, 245, 250, 274, 278, 283, 307, 311, 316, 340, 344, 349, 374, 378, 383, 407, 411, 416, 440, 444, 449, 473, 477, 502, 506, 510, 530, 549, 553, 567, 582, 597, 812, 932, 937, 971, 976, 1009, 1014, 1047, 1052, 1087, 1092, 1126, 1131, 1165, 1170, 1203, 1208, 1241, 1246, 1271, 1275, 1303, 1307, 1337, 1341, 1371, 1375, 1401, 1405, 1433, 1437, 1450, 1462, 1466, 1490, 1494, 1518, 1522, 1550, 1554, 1580, 1584, 1612, 1616, 1642, 1646, 1693, 1751, 1759, 1771, 1785, 1797, 1815, 1832, 1849, 1851, 1857, 1875, 1876], "automat": [17, 27, 29, 31, 32, 626, 790, 1665, 1694, 1803, 1849], "id": [17, 26, 34, 910, 926, 928, 949, 965, 967, 988, 1003, 1005, 1026, 1041, 1043, 1064, 1081, 1083, 1104, 1120, 1122, 1143, 1159, 1161, 1182, 1197, 1199, 1220, 1235, 1237], "0x7f77852eb0b0": 17, "proj": [17, 1803, 1842, 1849], "new_project": 17, "pn2": 17, "activ": [17, 36, 1838], "proj_01": [17, 1849], "proj_02": [17, 1842], "0x7f77852ebe20": 17, "purg": [17, 30, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 511, 558, 571, 942, 981, 1019, 1057, 1097, 1136, 1175, 1213, 1251, 1280, 1313, 1347, 1381, 1410, 1443, 1471, 1499, 1527, 1560, 1589, 1622, 1651], "close_project": 17, "again": [17, 20, 28, 29, 32, 713], "pattern": [17, 18, 33, 708, 891], "ONE": 17, "session": [17, 1838], "enabl": [17, 33, 629, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237, 1876], "lookup": [17, 28, 30, 31, 32, 834, 847, 1478], "relationship": [17, 23], "belong": [17, 18, 22, 30, 33, 99, 461, 538, 602, 805, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1678, 1716, 1801], "scan": [17, 29, 1077, 1078], "0x7f7784eb25c0": 17, "handl": [17, 26, 28, 29, 31, 33, 38, 60, 61, 72, 90, 91, 98, 120, 122, 130, 152, 153, 163, 185, 186, 196, 218, 219, 220, 221, 228, 250, 251, 261, 283, 284, 294, 316, 317, 327, 349, 350, 361, 383, 384, 394, 416, 417, 427, 449, 450, 460, 461, 483, 491, 510, 511, 520, 537, 538, 558, 571, 602, 610, 617, 627, 630, 712, 763, 789, 790, 820, 910, 912, 942, 949, 951, 981, 988, 989, 1019, 1026, 1027, 1057, 1064, 1065, 1097, 1104, 1106, 1136, 1143, 1145, 1175, 1182, 1183, 1213, 1220, 1221, 1251, 1259, 1260, 1280, 1287, 1289, 1311, 1313, 1321, 1323, 1345, 1347, 1355, 1357, 1379, 1381, 1389, 1390, 1410, 1417, 1419, 1441, 1443, 1450, 1451, 1471, 1478, 1479, 1499, 1506, 1507, 1527, 1534, 1536, 1558, 1560, 1568, 1569, 1589, 1596, 1598, 1620, 1622, 1630, 1631, 1651, 1665, 1842, 1857, 1875, 1876], "trigger": [17, 25, 31], "search": [17, 30, 56, 67, 88, 93, 99, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 454, 478, 486, 507, 513, 554, 560, 570, 572, 713, 921, 938, 944, 960, 977, 983, 998, 1015, 1021, 1036, 1053, 1059, 1074, 1093, 1099, 1115, 1132, 1138, 1154, 1171, 1177, 1192, 1209, 1215, 1230, 1247, 1253, 1276, 1282, 1308, 1315, 1342, 1349, 1376, 1383, 1406, 1412, 1438, 1445, 1467, 1473, 1495, 1501, 1523, 1529, 1555, 1562, 1585, 1591, 1617, 1624, 1647, 1653], "seem": [17, 25, 30], "convolut": [17, 23, 708], "benefit": [17, 29, 31], "v1": 17, "lead": [17, 18, 28, 29, 1680], "memori": [17, 28, 30, 617, 1666], "leak": 17, "tricki": 17, "delet": [17, 25, 26, 28, 30, 39, 64, 73, 100, 131, 155, 164, 188, 198, 229, 253, 262, 286, 295, 319, 328, 353, 362, 386, 395, 419, 428, 464, 492, 521, 540, 813, 914, 949, 953, 991, 1029, 1067, 1108, 1147, 1185, 1223, 1262, 1292, 1326, 1360, 1392, 1422, 1453, 1481, 1509, 1539, 1571, 1601, 1633, 1712, 1729, 1731, 1733, 1847], "someth": [17, 25, 29, 1870], "syntact": [17, 31], "sugar": [17, 31], "scene": [17, 22, 25, 28, 31, 1478], "uphold": 17, "main": [18, 23, 27, 29, 31, 33, 60, 90, 118, 120, 152, 185, 218, 228, 250, 283, 316, 349, 383, 416, 449, 510, 537, 586, 896, 897, 1182, 1804], "fairli": 18, "tomogram": 18, "creativ": 18, "stitch": [18, 1710], "singular": [18, 27], "plot_tutori": [18, 27], "font_siz": [18, 1879], "trim": [18, 26, 28, 33, 820, 949, 988, 1026, 1064, 1220, 1695, 1710, 1712, 1858], "plu": [18, 25, 1713, 1715], "constitut": [18, 1417], "rest": [18, 26, 31, 33, 988, 1868, 1869], "100_000": [18, 32], "ill": 18, "messag": [18, 25, 29], "todens": [18, 20, 22, 27, 28], "pcolormesh": 18, "reflect": [18, 27, 1026, 1064, 1220, 1695, 1713], "row": [18, 20, 27, 28, 812, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237, 1717], "diagon": [18, 20, 28, 910, 1143, 1666, 1715], "column": [18, 23, 27, 28, 29, 32, 33, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 498, 525, 545, 618, 631, 773, 916, 917, 927, 955, 956, 966, 993, 994, 1004, 1031, 1032, 1042, 1069, 1070, 1082, 1110, 1111, 1121, 1149, 1150, 1160, 1187, 1188, 1198, 1225, 1226, 1236, 1267, 1298, 1332, 1366, 1397, 1428, 1458, 1486, 1514, 1545, 1576, 1607, 1638, 1688, 1777], "NO": [18, 27], "balanc": [18, 20, 22, 23, 32], "coupl": [18, 20, 36], "sai": [18, 30], "form": [18, 20, 23, 28, 29, 31, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 510, 738, 778, 834, 842, 867, 874, 910, 1026, 1143, 1220, 1299, 1333, 1367, 1429, 1546, 1608, 1676, 1711, 1715], "independ": [18, 509, 792, 796, 824, 899], "exchang": [18, 896, 897], "mini": [18, 25, 29], "ey": [18, 34], "begin": [18, 23, 27, 33], "libari": 18, "among": 18, "cluster_numb": 18, "cluster_s": 18, "0x7fd3cce57ba0": 18, "inspect": [18, 20, 23, 26, 27, 29, 30, 31, 590, 1182, 1875, 1876], "proper": [18, 20, 29, 872, 1878], "clearli": [18, 25, 29, 30, 33], "though": [18, 26, 27, 29, 30, 917, 949, 956, 994, 1032, 1070, 1111, 1150, 1188, 1226], "previou": [18, 22, 23, 34], "200000": 18, "176363": 18, "22226797": 18, "181874": 18, "99952557": 18, "198146": 18, "42744059": 18, "155644": 18, "8106158": 18, "148357": 18, "02397583": 18, "160355": 18, "19336507": 18, "101003": 18, "71156516": 18, "103295": 18, "32543076": 18, "123910": 18, "97950809": 18, "135061": 18, "2481491": 18, "122694": 18, "36823472": 18, "100000": 18, "pathcollect": [18, 1876], "0x7fd3cca8f820": 18, "output": [20, 26, 27, 30, 33, 34, 36, 632, 1738, 1862, 1863, 1881], "underli": 20, "speci": [20, 22, 27, 820, 824, 829, 830, 839, 844, 847, 849, 853, 855, 864, 896, 897, 1288, 1291, 1311, 1320, 1322, 1325, 1345, 1354, 1356, 1359, 1379, 1388, 1417, 1418, 1421, 1441, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1535, 1538, 1558, 1567, 1568, 1597, 1600, 1620, 1629], "j": [20, 23, 27, 28, 32, 35, 197, 708, 818, 827, 830, 836, 851, 858, 862, 869, 874, 887, 891, 1688, 1715, 1722], "c_a": [20, 22, 682], "composit": [20, 820, 824, 1287, 1321, 1355, 1534, 1596, 1861], "subject": [20, 29, 31, 32, 459], "2x2": 20, "nt": [20, 22, 23, 26, 27, 28, 29, 32, 33, 38, 47, 53, 67, 68, 69, 72, 79, 85, 93, 94, 95, 98, 106, 112, 125, 126, 127, 130, 139, 145, 158, 159, 160, 163, 172, 178, 191, 192, 193, 196, 204, 210, 223, 224, 225, 228, 237, 243, 256, 257, 258, 261, 270, 276, 289, 290, 291, 294, 303, 309, 322, 323, 324, 327, 336, 342, 356, 357, 358, 361, 370, 376, 389, 390, 391, 394, 403, 409, 422, 423, 424, 427, 436, 442, 454, 455, 456, 460, 469, 475, 486, 487, 488, 491, 498, 504, 513, 514, 515, 520, 525, 533, 534, 537, 545, 551, 560, 561, 562, 569, 572, 667, 682, 697, 712, 738, 763, 773, 789, 910, 916, 917, 927, 935, 944, 945, 946, 949, 955, 956, 966, 974, 983, 984, 985, 988, 993, 994, 1004, 1012, 1021, 1022, 1023, 1026, 1031, 1032, 1042, 1050, 1059, 1060, 1061, 1064, 1069, 1070, 1082, 1090, 1099, 1100, 1101, 1104, 1110, 1111, 1121, 1129, 1138, 1139, 1140, 1143, 1149, 1150, 1160, 1168, 1177, 1178, 1179, 1182, 1187, 1188, 1198, 1206, 1215, 1216, 1217, 1220, 1225, 1226, 1236, 1244, 1253, 1254, 1255, 1259, 1267, 1273, 1282, 1283, 1284, 1287, 1298, 1305, 1315, 1316, 1317, 1321, 1332, 1339, 1349, 1350, 1351, 1355, 1366, 1373, 1383, 1384, 1385, 1389, 1397, 1403, 1412, 1413, 1414, 1417, 1428, 1435, 1445, 1446, 1447, 1450, 1458, 1464, 1473, 1474, 1475, 1478, 1486, 1492, 1501, 1502, 1503, 1506, 1514, 1520, 1529, 1530, 1531, 1534, 1545, 1552, 1562, 1563, 1564, 1568, 1576, 1582, 1591, 1592, 1593, 1596, 1607, 1614, 1624, 1625, 1626, 1630, 1638, 1644, 1653, 1654, 1655, 1686, 1690], "interest": [20, 29, 31, 32, 33, 831, 842, 867, 896, 897, 898, 900, 901, 902, 903, 904, 905, 1682], "awai": [20, 25], "At": [20, 29, 729, 775, 777, 780, 1702], "absenc": 20, "reaction": [20, 22, 130, 261, 361, 870, 896, 897], "thu": [20, 27, 28, 29, 33, 58, 130, 150, 183, 248, 281, 314, 347, 381, 414, 447, 682, 697, 720, 922, 923, 961, 962, 999, 1000, 1037, 1038, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1687, 1691, 1692], "summat": 20, "g_": [20, 22, 23], "x_j": 20, "x_i": [20, 22, 824, 842, 867, 1299, 1333, 1367, 1429, 1546, 1608], "linear": [20, 22, 23, 31, 32, 427, 614, 650, 842, 867, 896, 897, 898, 899, 901, 902, 903, 904, 905, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1182, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237, 1299, 1333, 1367, 1429, 1546, 1608, 1660, 1662, 1664, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1715], "csgraph": [20, 33, 1678, 1693, 1716], "csg": [20, 33], "am": [20, 27, 28, 33, 910, 916, 926, 949, 955, 965, 988, 993, 1003, 1026, 1031, 1041, 1064, 1069, 1081, 1104, 1110, 1120, 1143, 1149, 1159, 1182, 1187, 1197, 1220, 1225, 1235, 1681, 1683, 1688, 1705, 1706, 1707, 1708], "create_adjacency_matrix": [20, 27, 28, 33, 926, 965, 1003, 1041, 1081, 1120, 1159, 1197, 1235], "weight": [20, 27, 28, 33, 708, 823, 824, 825, 826, 833, 835, 838, 842, 844, 854, 856, 857, 865, 866, 867, 868, 878, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237, 1299, 1333, 1367, 1429, 1546, 1608, 1693, 1712, 1720, 1723], "fmt": [20, 28, 33, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "csr": [20, 27, 33, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "triu": [20, 27, 28, 33, 916, 926, 955, 965, 993, 1003, 1031, 1041, 1069, 1081, 1110, 1120, 1149, 1159, 1187, 1197, 1225, 1235], "fals": [20, 26, 27, 28, 30, 33, 56, 59, 61, 62, 67, 88, 91, 93, 99, 116, 122, 125, 148, 151, 153, 158, 181, 184, 186, 191, 214, 220, 223, 246, 249, 251, 256, 279, 282, 284, 289, 312, 315, 317, 322, 345, 350, 351, 356, 379, 384, 389, 412, 417, 422, 445, 448, 450, 454, 478, 483, 486, 507, 511, 513, 554, 558, 560, 570, 571, 572, 589, 591, 609, 623, 625, 627, 629, 631, 916, 917, 919, 921, 922, 923, 933, 938, 942, 944, 955, 956, 958, 960, 961, 962, 972, 977, 981, 983, 993, 994, 996, 998, 999, 1000, 1010, 1015, 1019, 1021, 1031, 1032, 1034, 1036, 1037, 1038, 1048, 1053, 1057, 1059, 1069, 1070, 1072, 1074, 1075, 1076, 1088, 1093, 1097, 1099, 1110, 1111, 1113, 1115, 1116, 1117, 1127, 1132, 1136, 1138, 1149, 1150, 1152, 1154, 1155, 1156, 1166, 1171, 1175, 1177, 1187, 1188, 1190, 1192, 1193, 1194, 1204, 1209, 1213, 1215, 1225, 1226, 1228, 1230, 1231, 1232, 1242, 1247, 1251, 1253, 1276, 1280, 1282, 1308, 1313, 1315, 1342, 1347, 1349, 1376, 1381, 1383, 1406, 1410, 1412, 1438, 1443, 1445, 1467, 1471, 1473, 1495, 1499, 1501, 1523, 1527, 1529, 1555, 1560, 1562, 1585, 1589, 1591, 1617, 1622, 1624, 1647, 1651, 1653, 1687, 1691, 1692, 1702, 1751, 1800, 1818, 1857, 1865, 1868, 1869], "laplacian": 20, "77785207": 20, "94477225": 20, "83307983": 20, "71656905": 20, "7717968": 20, "92680625": 20, "09372643": 20, "86552323": 20, "trivial": [20, 28, 30, 33, 196], "movement": [20, 33], "r_i": [20, 23], "replac": [20, 29, 30, 31, 36, 633, 708, 783], "b_i": 20, "x_0": 20, "r_3": 20, "dtype": [20, 27, 28, 33, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230], "linalg": [20, 1671, 1673], "55836241": 20, "90066611": 20, "0177448": 20, "dens": 20, "natur": [20, 25, 26, 842, 867, 874, 890, 1299, 1333, 1367, 1429, 1546, 1608], "particular": 20, "bc": [20, 22, 32, 33, 40, 41, 42, 60, 74, 90, 101, 120, 132, 133, 134, 152, 165, 166, 167, 185, 197, 199, 218, 230, 231, 232, 250, 263, 264, 265, 283, 296, 297, 298, 316, 329, 330, 331, 349, 363, 364, 365, 383, 396, 397, 398, 416, 429, 430, 431, 449, 493, 510], "coo": [20, 27, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237, 1681, 1683, 1720, 1723], "manner": [20, 627, 1679], "index": [20, 25, 27, 28, 29, 30, 31, 33, 519, 615, 773, 810, 920, 959, 997, 1035, 1073, 1114, 1153, 1191, 1229, 1687, 1796, 1797, 1814, 1815, 1879], "hit": [20, 29], "Then": [20, 29, 30, 34], "diag": 20, "setdiag": 20, "eliminate_zero": [20, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226], "spsolv": [20, 1667, 1673], "tocsr": 20, "identi": 20, "effort": 20, "deal": [20, 31, 32, 1675], "intract": 20, "si": [21, 29, 614], "relat": [21, 23, 26, 29, 31, 33, 729, 730, 820, 870], "tabl": [21, 23, 27, 1666, 1862, 1863, 1868, 1869], "emperatur": 21, "298": 21, "101325": 21, "water_correl": [21, 31, 32, 651], "mean_vi": 21, "3f": 21, "mpa": 21, "893": 21, "report": [21, 31, 1830, 1831], "celsiu": 21, "incorrect": 21, "unyt": 21, "pint": 21, "despit": [21, 631], "broad": 21, "due": [21, 29, 30, 32, 820], "overhead": 21, "progress": [22, 24, 33], "incorpor": 22, "chemic": [22, 31, 820, 824, 834, 847, 860, 1287, 1478, 1534, 1596], "0x7f5039992ed0": 22, "ph": 22, "varieti": [22, 26, 27, 31, 32, 1838], "standar": 22, "a_0": 22, "a_1": 22, "a_3": 22, "rightarrow": [22, 23], "r_a": 22, "kc_a": 22, "kinet": [22, 896, 897], "strong": [22, 31], "source_term": [22, 899], "power_law": 22, "isotherm": 22, "a1": [22, 31, 820, 898, 900, 901, 902, 903, 904], "a2": [22, 31, 898, 900, 901, 902, 903, 904], "a3": [22, 31, 898, 901, 902, 903, 904], "unpack": 22, "retriev": [22, 23, 25, 29, 30, 38, 57, 72, 89, 98, 117, 130, 149, 163, 182, 196, 215, 228, 247, 261, 280, 294, 313, 327, 346, 361, 380, 394, 413, 427, 446, 460, 479, 491, 508, 519, 520, 531, 537, 555, 712, 763, 789, 910, 939, 949, 978, 988, 1016, 1026, 1054, 1064, 1094, 1104, 1133, 1143, 1172, 1182, 1210, 1220, 1248, 1259, 1277, 1287, 1309, 1321, 1343, 1355, 1377, 1389, 1407, 1417, 1439, 1450, 1468, 1478, 1496, 1506, 1524, 1534, 1556, 1568, 1586, 1596, 1618, 1630, 1648, 1801], "throw": [22, 27, 31, 1864], "scalar": [22, 30, 31, 38, 58, 63, 65, 72, 98, 130, 150, 154, 156, 163, 183, 187, 189, 196, 228, 248, 252, 254, 261, 281, 285, 287, 294, 314, 318, 320, 327, 347, 348, 352, 354, 361, 381, 382, 385, 387, 394, 414, 415, 418, 420, 427, 447, 451, 452, 460, 491, 509, 520, 537, 614, 633, 784, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 842, 845, 847, 849, 850, 851, 853, 854, 856, 857, 858, 860, 861, 862, 865, 866, 867, 868, 869, 910, 911, 921, 933, 949, 950, 960, 972, 988, 998, 1010, 1026, 1036, 1048, 1064, 1074, 1088, 1104, 1105, 1115, 1127, 1143, 1144, 1154, 1166, 1182, 1192, 1204, 1220, 1230, 1242, 1259, 1287, 1288, 1299, 1320, 1321, 1322, 1333, 1354, 1355, 1356, 1367, 1388, 1389, 1417, 1418, 1429, 1450, 1478, 1506, 1534, 1535, 1546, 1567, 1568, 1596, 1597, 1608, 1629, 1630, 1677, 1695, 1696, 1697, 1703, 1709, 1712, 1714, 1715, 1876, 1878], "string": [22, 25, 44, 52, 53, 57, 60, 76, 84, 85, 89, 90, 103, 111, 112, 117, 120, 136, 144, 145, 149, 152, 169, 177, 178, 182, 185, 201, 209, 210, 215, 218, 219, 221, 234, 242, 243, 247, 250, 267, 275, 276, 280, 283, 300, 308, 309, 313, 316, 333, 341, 342, 346, 349, 367, 375, 376, 380, 383, 400, 408, 409, 413, 416, 433, 441, 442, 446, 449, 466, 474, 475, 479, 495, 503, 504, 508, 510, 531, 542, 550, 551, 555, 556, 566, 568, 569, 604, 626, 629, 831, 918, 934, 935, 939, 940, 957, 973, 974, 978, 979, 995, 1011, 1012, 1016, 1017, 1033, 1049, 1050, 1054, 1055, 1071, 1089, 1090, 1094, 1095, 1112, 1128, 1129, 1133, 1134, 1151, 1167, 1168, 1172, 1173, 1189, 1205, 1206, 1210, 1211, 1227, 1243, 1244, 1248, 1249, 1264, 1272, 1273, 1277, 1278, 1294, 1304, 1305, 1309, 1310, 1328, 1338, 1339, 1343, 1344, 1362, 1372, 1373, 1377, 1378, 1394, 1402, 1403, 1407, 1408, 1424, 1434, 1435, 1439, 1440, 1455, 1463, 1464, 1468, 1469, 1483, 1491, 1492, 1496, 1497, 1511, 1519, 1520, 1524, 1525, 1541, 1551, 1552, 1556, 1557, 1573, 1581, 1582, 1586, 1587, 1603, 1613, 1614, 1618, 1619, 1635, 1643, 1644, 1648, 1649, 1680, 1727, 1729, 1740, 1749, 1847, 1852, 1862, 1863], "set_sourc": 22, "act": [22, 25, 27, 719, 721, 782, 1677, 1870], "seen": [22, 26, 27, 29, 30, 31, 32], "fick_02": 22, "0x7f5039993ce0": 22, "boolean": [22, 25, 26, 33, 39, 50, 56, 61, 67, 68, 69, 73, 82, 88, 91, 93, 94, 95, 100, 109, 116, 122, 125, 126, 127, 131, 142, 148, 153, 158, 159, 160, 164, 175, 181, 186, 191, 192, 193, 198, 207, 214, 220, 223, 224, 225, 229, 240, 246, 251, 256, 257, 258, 262, 273, 279, 284, 289, 290, 291, 295, 306, 312, 317, 322, 323, 324, 328, 339, 345, 350, 356, 357, 358, 362, 373, 379, 384, 389, 390, 391, 395, 406, 412, 417, 422, 423, 424, 428, 439, 445, 450, 454, 455, 456, 464, 472, 478, 483, 486, 487, 488, 492, 501, 507, 511, 513, 514, 515, 521, 528, 533, 534, 540, 548, 554, 558, 560, 561, 562, 565, 570, 571, 572, 629, 813, 914, 922, 923, 931, 938, 942, 944, 945, 946, 953, 961, 962, 970, 977, 981, 983, 984, 985, 991, 999, 1000, 1008, 1015, 1019, 1021, 1022, 1023, 1029, 1037, 1038, 1046, 1053, 1057, 1059, 1060, 1061, 1067, 1075, 1076, 1086, 1093, 1097, 1099, 1100, 1101, 1108, 1116, 1117, 1125, 1132, 1136, 1138, 1139, 1140, 1147, 1155, 1156, 1164, 1171, 1175, 1177, 1178, 1179, 1185, 1193, 1194, 1202, 1209, 1213, 1215, 1216, 1217, 1223, 1231, 1232, 1240, 1247, 1251, 1253, 1254, 1255, 1262, 1270, 1276, 1280, 1282, 1283, 1284, 1292, 1302, 1308, 1313, 1315, 1316, 1317, 1326, 1336, 1342, 1347, 1349, 1350, 1351, 1360, 1370, 1376, 1381, 1383, 1384, 1385, 1392, 1400, 1406, 1410, 1412, 1413, 1414, 1422, 1432, 1438, 1443, 1445, 1446, 1447, 1453, 1461, 1467, 1471, 1473, 1474, 1475, 1481, 1489, 1495, 1499, 1501, 1502, 1503, 1509, 1517, 1523, 1527, 1529, 1530, 1531, 1539, 1549, 1555, 1560, 1562, 1563, 1564, 1571, 1579, 1585, 1589, 1591, 1592, 1593, 1601, 1611, 1617, 1622, 1624, 1625, 1626, 1633, 1641, 1647, 1651, 1653, 1654, 1655, 1678, 1682, 1683, 1686, 1687, 1690, 1691, 1692, 1702, 1703, 1704, 1712, 1716, 1862, 1863], "another_react": 22, "printout": [22, 26, 31], "initial_guess": [22, 32], "awar": [22, 25, 633], "henc": [22, 27, 29], "0x7f5039993a10": 22, "s1": [22, 896, 897, 898, 900, 901, 902, 903, 904, 905], "s2": [22, 896, 897, 898, 900, 901, 902, 903, 904, 905], "self": [22, 25, 574], "explanatori": 22, "patankar": 22, "ref": [22, 896, 897], "slope": [22, 792, 896, 897, 898, 900, 901, 902, 903, 904, 905, 1715], "intercept": [22, 27, 792, 896, 897, 898, 900, 901, 902, 903, 904, 905], "outlin": [22, 28, 29, 31, 33, 197, 461, 538, 602, 613, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631], "around": [22, 23, 25, 32, 708, 1077], "flux": [22, 130], "consumpt": 22, "further": [22, 23, 26, 31, 1874], "expresss": 22, "abl": [22, 27, 28], "proce": [22, 28, 29, 99], "s_1": 22, "s_2": 22, "unknown": [22, 31, 59, 151, 184, 249, 282, 315, 448], "newton": 22, "rearrang": [22, 23], "lump": 22, "enter": [22, 23, 26, 58, 121, 150, 183, 248, 281, 314, 347, 381, 414, 447, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226], "hidden": 22, "_build_a": 22, "_build_b": 22, "_apply_bc": 22, "_apply_sourc": 22, "rh": [22, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 610], "evolv": 22, "65074068": 22, "71127916": 22, "93946152": 22, "03024162": 22, "38681877": 22, "93214369": 22, "54994418": 22, "16312541": 22, "18675333": 22, "58889444": 22, "65839737": 22, "38926566": 22, "28355006": 22, "58467747": 22, "16066508": 22, "71398962": 22, "44304676": 22, "78464939": 22, "08964052": 22, "72031367": 22, "43430329": 22, "ultim": [23, 32], "come": [23, 31], "sum_k": 23, "nb": 23, "m_": 23, "ik": 23, "c_i": 23, "c_k": 23, "overal": 23, "exit": [23, 58, 123, 150, 183, 221, 248, 281, 314, 347, 381, 414, 447], "n_p": 23, "cross": [23, 29, 32, 614, 661, 663, 701, 702, 703, 704, 705, 708, 718, 720, 734, 735, 736, 753, 754, 755, 756, 761, 775, 872, 880, 1696], "subscript": [23, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "denot": 23, "diffusion": 23, "transfer": [23, 896, 897], "cdot": [23, 824, 842, 867, 887, 1299, 1333, 1367, 1429, 1546, 1608], "assembli": 23, "seri": [23, 26, 27, 32, 33, 680, 695], "electr": [23, 882, 883], "circuit": [23, 896, 897], "analogi": 23, "resist": 23, "invers": [23, 32, 1715], "r_": [23, 896, 897], "r_k": 23, "superscript": 23, "rewritten": 23, "g_i": 23, "g_k": 23, "simplic": 23, "pi": [23, 32, 697], "d_i": 23, "ell_i": 23, "quad": 23, "d_k": 23, "ell_k": 23, "ell_": 23, "literatur": 23, "past": 23, "clariti": 23, "introduc": [23, 26, 27, 29, 31], "terminologi": [23, 30], "coin": 23, "mathcal": 23, "decoupl": 23, "word": [23, 27, 28, 33, 714, 764, 794], "join": [23, 25, 623, 631, 1731, 1744], "_func": 23, "__all__": 23, "circles_and_rectangl": 23, "cones_and_cylind": 23, "intersecting_con": 23, "hybrid_cones_and_cylind": 23, "trapezoids_and_rectangl": 23, "hybrid_trapezoids_and_rectangl": 23, "intersecting_trapezoid": 23, "pyramids_and_cuboid": 23, "intersecting_pyramid": 23, "hybrid_pyramids_and_cuboid": 23, "squares_and_rectangl": 23, "ncylinders_in_seri": 23, "molecular": [23, 27, 823, 824, 825, 826, 844, 854, 856, 857, 865, 866, 868, 878], "heat": [23, 163, 836], "choic": [23, 29, 31, 1874], "dc": 23, "dx": [23, 891], "gradient": [23, 31, 58, 62, 150, 183, 248, 281, 314, 347, 351, 381, 414, 447, 1666], "int_": 23, "bigg": [23, 32], "big": [23, 896, 897], "combin": [23, 26, 30, 31, 509, 631, 682, 697, 949, 1026, 1064, 1220, 1666, 1710, 1711, 1738, 1875], "_i": 23, "_k": 23, "a_i": 23, "a_": [23, 896, 897, 898, 900, 901, 902, 903, 904], "a_k": 23, "declar": 23, "earlier": 23, "breviti": 23, "nitti": 23, "gritti": 23, "pointer": 23, "satisfi": [23, 30, 56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 454, 478, 486, 507, 513, 554, 560, 570, 572, 813, 938, 944, 977, 983, 1015, 1021, 1053, 1059, 1093, 1099, 1132, 1138, 1171, 1177, 1209, 1215, 1247, 1253, 1276, 1282, 1308, 1315, 1342, 1349, 1376, 1383, 1406, 1412, 1438, 1445, 1467, 1473, 1495, 1501, 1523, 1529, 1555, 1562, 1585, 1591, 1617, 1624, 1647, 1653, 1685], "drop": [23, 26, 1683], "along": [23, 26, 27, 30, 31, 461, 538, 602, 889, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1676, 1709, 1715], "p_i": 23, "p_k": 23, "slip": 23, "wall": 23, "gradual": 23, "dp": [23, 719, 721], "i_p": 23, "rho": [23, 31, 826, 849], "da": 23, "volumetr": 23, "polar": 23, "inertia": 23, "calculu": 23, "p_j": 23, "friction": 23, "loss": [23, 27, 32], "inerti": 23, "safe": 23, "keep": [23, 28, 29, 36, 61, 91, 122, 153, 186, 196, 220, 251, 284, 317, 350, 384, 417, 450, 483, 511, 558, 571, 942, 981, 1019, 1057, 1097, 1136, 1175, 1213, 1251, 1280, 1313, 1347, 1381, 1410, 1443, 1471, 1478, 1499, 1527, 1560, 1589, 1622, 1651, 1744, 1746, 1858], "expand": [23, 30, 713], "cylidnr": 23, "128": [23, 33], "hagen": [23, 887], "poiseuil": [23, 32, 887], "ell": 23, "individu": [23, 27, 30, 31, 32, 33, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 573, 820, 1417, 1715], "resistor": [23, 27, 32], "eventu": [23, 31], "discuss": [23, 25, 26, 27, 820], "third": [23, 28, 896, 897, 1744], "machin": 23, "voxel": [23, 614, 1874], "vector": [23, 29, 31, 38, 58, 63, 65, 130, 150, 154, 156, 163, 183, 187, 189, 228, 248, 252, 254, 261, 281, 285, 287, 294, 314, 318, 320, 327, 347, 352, 354, 361, 381, 385, 387, 394, 414, 418, 420, 427, 447, 451, 452, 610, 773, 820, 824, 920, 959, 997, 1035, 1073, 1114, 1153, 1191, 1229, 1666, 1676, 1688], "input": [23, 28, 34, 919, 921, 922, 923, 933, 958, 960, 961, 962, 972, 996, 998, 999, 1000, 1010, 1034, 1036, 1037, 1038, 1048, 1072, 1074, 1075, 1076, 1088, 1113, 1115, 1116, 1117, 1127, 1152, 1154, 1155, 1156, 1166, 1190, 1192, 1193, 1194, 1204, 1228, 1230, 1231, 1232, 1242, 1676, 1687, 1691, 1692], "type": [23, 25, 26, 27, 30, 32, 34, 36, 40, 47, 48, 50, 52, 53, 57, 59, 60, 68, 69, 74, 79, 80, 82, 84, 85, 89, 90, 94, 95, 101, 106, 107, 109, 111, 112, 117, 120, 121, 123, 126, 127, 132, 139, 140, 142, 144, 145, 149, 151, 152, 159, 160, 165, 172, 173, 175, 177, 178, 182, 184, 185, 192, 193, 199, 204, 205, 207, 209, 210, 215, 218, 219, 221, 224, 225, 230, 237, 238, 240, 242, 243, 247, 249, 250, 257, 258, 263, 270, 271, 273, 275, 276, 280, 282, 283, 290, 291, 296, 303, 304, 306, 308, 309, 313, 315, 316, 323, 324, 329, 336, 337, 339, 341, 342, 346, 348, 349, 357, 358, 363, 370, 371, 373, 375, 376, 380, 382, 383, 390, 391, 396, 403, 404, 406, 408, 409, 413, 415, 416, 423, 424, 429, 436, 437, 439, 441, 442, 446, 448, 449, 455, 456, 469, 470, 472, 474, 475, 479, 487, 488, 493, 498, 499, 501, 503, 504, 508, 509, 510, 514, 515, 518, 525, 526, 528, 531, 533, 534, 545, 546, 548, 550, 551, 555, 561, 562, 568, 569, 610, 613, 614, 615, 617, 618, 622, 629, 630, 667, 682, 697, 704, 708, 710, 711, 712, 713, 716, 720, 726, 732, 738, 750, 755, 759, 761, 762, 763, 766, 769, 773, 776, 784, 787, 788, 789, 790, 792, 793, 796, 797, 799, 801, 805, 807, 812, 813, 824, 826, 830, 838, 841, 843, 844, 845, 847, 849, 850, 851, 857, 858, 864, 868, 869, 872, 874, 875, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 890, 893, 896, 897, 898, 900, 901, 902, 903, 904, 905, 907, 908, 910, 916, 917, 920, 927, 929, 931, 934, 935, 939, 945, 946, 949, 955, 956, 959, 966, 968, 970, 973, 974, 978, 984, 985, 993, 994, 997, 1004, 1006, 1008, 1011, 1012, 1016, 1022, 1023, 1026, 1031, 1032, 1035, 1042, 1044, 1046, 1049, 1050, 1054, 1060, 1061, 1064, 1069, 1070, 1073, 1082, 1084, 1086, 1089, 1090, 1094, 1100, 1101, 1104, 1110, 1111, 1114, 1121, 1123, 1125, 1128, 1129, 1133, 1139, 1140, 1143, 1149, 1150, 1153, 1160, 1162, 1164, 1167, 1168, 1172, 1178, 1179, 1182, 1187, 1188, 1191, 1198, 1200, 1202, 1205, 1206, 1210, 1216, 1217, 1220, 1225, 1226, 1229, 1236, 1238, 1240, 1243, 1244, 1248, 1254, 1255, 1267, 1268, 1270, 1272, 1273, 1277, 1283, 1284, 1291, 1297, 1298, 1299, 1300, 1302, 1304, 1305, 1309, 1316, 1317, 1325, 1331, 1332, 1333, 1334, 1336, 1338, 1339, 1343, 1350, 1351, 1359, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1377, 1384, 1385, 1397, 1398, 1400, 1402, 1403, 1407, 1413, 1414, 1421, 1427, 1428, 1429, 1430, 1432, 1434, 1435, 1439, 1446, 1447, 1458, 1459, 1461, 1463, 1464, 1468, 1474, 1475, 1486, 1487, 1489, 1491, 1492, 1496, 1502, 1503, 1514, 1515, 1517, 1519, 1520, 1524, 1530, 1531, 1538, 1544, 1545, 1546, 1547, 1549, 1551, 1552, 1556, 1563, 1564, 1576, 1577, 1579, 1581, 1582, 1586, 1592, 1593, 1600, 1606, 1607, 1608, 1609, 1611, 1613, 1614, 1618, 1625, 1626, 1638, 1639, 1641, 1643, 1644, 1648, 1654, 1655, 1666, 1677, 1680, 1681, 1682, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712, 1713, 1714, 1715, 1718, 1719, 1722, 1729, 1733, 1736, 1738, 1740, 1742, 1744, 1746, 1749, 1803, 1807, 1819, 1820, 1842, 1849, 1857, 1858, 1859, 1862, 1863, 1864, 1865, 1867, 1871, 1874, 1875, 1876, 1878, 1879], "akbari": 23, "sinton": 23, "bahrami": 23, "viscou": [23, 294], "microchannel": 23, "intern": [23, 27, 718, 719, 720, 721, 1688, 1694, 1875, 1876], "journal": [23, 730], "54": [23, 26, 31, 33], "2011": 23, "3970": 23, "3978": 23, "majid": 23, "michael": 23, "yovanovich": 23, "richard": 23, "culham": 23, "novel": 23, "singli": 23, "2007": [23, 708], "2492": 23, "2502": 23, "http": [23, 36, 197], "en": 23, "wikipedia": [23, 27, 813], "org": [23, 197, 626], "wiki": 23, "e2": 23, "80": [23, 26, 33], "93poiseuille_equ": 23, "misaghian": 23, "niloo": 23, "et": [23, 708, 827, 830, 847, 851, 857, 865, 869, 891], "al": [23, 708, 827, 830, 847, 851, 857, 865, 869, 891], "neural": 23, "geoscienc": 23, "162": [23, 33], "2022": 23, "105086": 23, "stil": 24, "comfort": 25, "topic": [25, 31], "squar": [25, 29, 643, 668, 683, 698, 751, 753, 754, 761, 775, 887, 1026, 1064, 1220, 1695, 1703, 1705], "bracket": 25, "round": 25, "tupl": [25, 33, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 348, 378, 382, 411, 415, 444, 477, 506, 509, 530, 553, 582, 591, 597, 610, 937, 976, 1014, 1052, 1092, 1131, 1170, 1208, 1246, 1275, 1307, 1341, 1375, 1405, 1437, 1466, 1494, 1522, 1554, 1584, 1616, 1646, 1678, 1686, 1716, 1722, 1759, 1771, 1785, 1851], "immut": 25, "read": [25, 26, 27, 31, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 499, 526, 546, 896, 897, 929, 968, 1006, 1044, 1084, 1123, 1162, 1200, 1238, 1268, 1300, 1334, 1368, 1398, 1430, 1459, 1487, 1515, 1547, 1577, 1609, 1639], "longer": [25, 29, 629], "ing": 25, "extend": [25, 28, 33, 860, 891, 1703, 1710, 1736], "200": [25, 26, 33, 923, 962, 1000, 1038, 1076, 1117, 1156, 1194, 1232], "300": [25, 31], "Or": [25, 27, 28], "math": 25, "typeerror": 25, "multipl": [25, 27, 30, 32, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 510, 713, 778, 779, 797, 1681, 1710, 1717, 1876], "duplic": [25, 28, 29, 33, 1805, 1858], "oper": [25, 27, 29, 30, 785, 790, 1715], "integ": [25, 30, 626, 713, 1683, 1746], "introduct": [25, 28], "internet": 25, "doc": [25, 1726], "answer": [25, 27], "question": 25, "exclus": 25, "nativ": [25, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "fast": [25, 28, 33], "downsid": [25, 29], "languag": [25, 29, 626], "understan": 25, "guid": 25, "fun": [25, 26], "arang": [25, 1864], "60": [25, 26, 33, 35, 847], "75": [25, 33, 34], "90": [25, 26, 31, 33], "hundr": 25, "profici": 25, "999": 25, "fanci": [25, 27], "111": [25, 26, 33], "222": [25, 33, 830], "333": 25, "sens": [25, 28, 29, 32], "assur": [25, 1712], "elementwis": 25, "unlik": [25, 29, 824, 847], "matlab": 25, "444": 25, "666": 25, "211": [25, 33], "322": 25, "433": 25, "190": [25, 33], "12321": 25, "49284": 25, "110889": 25, "8100": 25, "trick": [25, 29, 30, 32, 1695], "recogn": 25, "lack": [25, 28, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 489, 516, 535, 563, 584, 599, 947, 986, 1024, 1062, 1102, 1141, 1180, 1218, 1256, 1285, 1318, 1352, 1386, 1415, 1448, 1476, 1504, 1532, 1565, 1594, 1627, 1656, 1761, 1775, 1787, 1855], "thereof": 25, "offer": [25, 27, 29, 31, 33, 820, 949], "level": [25, 27, 31, 626, 629, 1838, 1860], "arr": [25, 30, 1777], "computation": [25, 33, 196], "ident": [25, 896, 897, 917, 956, 994, 1032, 1070, 1111, 1150, 1188, 1226, 1803], "familiar": 25, "readabl": [25, 614, 627], "who": [25, 31], "prefer": [25, 29], "piec": [25, 27, 31], "puzzl": 25, "datatyp": [25, 1804], "address": [25, 34], "pair": [25, 27, 28, 29, 32, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 506, 530, 553, 582, 597, 817, 896, 897, 910, 920, 937, 949, 959, 976, 997, 1014, 1026, 1035, 1052, 1064, 1073, 1092, 1104, 1114, 1131, 1143, 1153, 1170, 1182, 1191, 1208, 1220, 1229, 1246, 1275, 1307, 1341, 1375, 1405, 1437, 1466, 1494, 1522, 1554, 1584, 1616, 1646, 1681, 1688, 1693, 1759, 1771, 1785, 1851], "dict_valu": 25, "catch": [25, 30, 1864], "intimid": 25, "beautifulli": 25, "feel": [25, 29], "extens": [25, 27, 1733, 1746], "augment": [25, 26], "deep": [25, 589, 591, 1803], "dive": [25, 27], "pertain": [25, 27], "whenev": [25, 1838], "__getitem__": 25, "__setitem__": [25, 27], "doubl": [25, 29, 1729], "underscor": 25, "intrins": 25, "sometim": [25, 65, 156, 189, 254, 287, 320, 354, 387, 420, 452, 1687], "magic": [25, 1478], "extra": [25, 26, 29, 573], "newdict": 25, "setitem": 25, "super": 25, "dnew": 25, "enforc": [25, 27, 1804, 1807, 1819, 1820], "foo": [25, 27, 31, 1804], "bar": [25, 27, 31, 34, 1740, 1804], "param": [25, 31, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 491, 520, 537, 820, 823, 824, 825, 826, 829, 830, 831, 834, 836, 839, 844, 847, 849, 850, 853, 854, 855, 856, 857, 861, 864, 865, 866, 868, 910, 949, 988, 1026, 1064, 1104, 1143, 1182, 1220, 1259, 1287, 1321, 1355, 1389, 1417, 1450, 1478, 1506, 1534, 1568, 1596, 1630, 1726, 1727, 1729, 1731, 1733, 1736, 1738, 1742, 1744, 1746, 1749, 1861, 1868, 1869], "statement": 25, "rais": [25, 55, 60, 64, 68, 87, 90, 94, 115, 120, 121, 123, 126, 147, 152, 155, 159, 180, 185, 188, 192, 197, 213, 218, 219, 221, 224, 245, 250, 253, 257, 278, 283, 286, 290, 311, 316, 319, 323, 344, 349, 353, 357, 378, 383, 386, 390, 411, 416, 419, 423, 444, 449, 455, 477, 487, 506, 510, 514, 530, 533, 553, 561, 581, 582, 590, 596, 597, 937, 945, 976, 984, 1014, 1022, 1052, 1060, 1092, 1100, 1131, 1139, 1170, 1178, 1208, 1216, 1246, 1254, 1275, 1283, 1307, 1316, 1341, 1350, 1375, 1384, 1405, 1413, 1437, 1446, 1466, 1474, 1494, 1502, 1522, 1530, 1554, 1563, 1584, 1592, 1616, 1625, 1646, 1654, 1727, 1749, 1758, 1759, 1770, 1771, 1784, 1785, 1795, 1797, 1798, 1813, 1815, 1816, 1832, 1833, 1850, 1851], "implememnt": 25, "poreprop": 25, "blah": [25, 820], "bob": 25, "summari": [25, 31, 1666, 1736, 1738, 1742], "versatil": 25, "handi": 25, "alter": [25, 26, 29, 33], "interact": [25, 26], "troubleshoot": 26, "full": [26, 29, 31, 32, 36, 461, 519, 538, 602, 618, 657, 658, 660, 667, 708, 882, 883, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631, 1738], "dedic": [26, 33], "draongfli": 26, "percol": [26, 29, 99, 196, 197, 211, 894, 1678, 1686, 1690, 1704, 1716], "rough": 26, "displai": [26, 33, 1801], "10e": 26, "connreadd": 26, "descript": [26, 39, 50, 61, 73, 82, 91, 100, 109, 122, 131, 142, 153, 164, 175, 186, 198, 207, 220, 229, 240, 251, 262, 273, 284, 295, 306, 317, 328, 339, 350, 362, 373, 384, 395, 406, 417, 428, 439, 450, 461, 464, 472, 483, 492, 501, 511, 521, 528, 538, 540, 548, 558, 571, 602, 889, 893, 905, 912, 914, 931, 942, 951, 953, 970, 981, 989, 991, 1008, 1019, 1027, 1029, 1046, 1057, 1065, 1067, 1086, 1097, 1106, 1108, 1125, 1136, 1145, 1147, 1164, 1175, 1183, 1185, 1202, 1213, 1221, 1223, 1240, 1251, 1260, 1262, 1270, 1280, 1289, 1292, 1302, 1313, 1323, 1326, 1336, 1347, 1357, 1360, 1370, 1381, 1390, 1392, 1400, 1410, 1419, 1422, 1432, 1443, 1451, 1453, 1461, 1471, 1479, 1481, 1489, 1499, 1507, 1509, 1517, 1527, 1536, 1539, 1549, 1560, 1569, 1571, 1579, 1589, 1598, 1601, 1611, 1622, 1631, 1633, 1641, 1651, 1679, 1686, 1687, 1691, 1692, 1717, 1731, 1733, 1738, 1744, 1746], "randint": 26, "500": [26, 29, 1879], "practic": [26, 28, 30], "prompt": 26, "0x7fb8a9e92de0": 26, "64": [26, 33], "161": [26, 33], "56": [26, 33], "reveal": [26, 27, 31, 33], "elsewher": [26, 32, 1718, 1719], "convent": [26, 27, 1740], "AND": 26, "44": [26, 31, 33, 34], "46": [26, 33], "47": [26, 29, 33], "61": [26, 33], "62": [26, 33], "49": [26, 33, 35], "52": [26, 33], "53": [26, 33], "58": [26, 33, 830], "59": [26, 33], "68": [26, 33], "69": [26, 33], "71": [26, 33], "73": [26, 33, 830], "76": [26, 33], "77": [26, 33], "83": [26, 33], "85": [26, 33], "86": [26, 33], "89": [26, 33], "91": [26, 33], "93": [26, 33], "97": [26, 33], "105": [26, 33], "109": [26, 33], "110": [26, 31, 33, 651, 847], "112": [26, 33], "113": [26, 33], "115": [26, 33], "119": [26, 33], "120": [26, 33], "121": [26, 33], "122": [26, 33], "124": [26, 33], "126": [26, 33], "130": [26, 33, 874], "131": [26, 33], "133": [26, 33], "134": [26, 33], "135": [26, 33], "136": [26, 33], "139": [26, 33], "141": [26, 33, 730], "143": [26, 33], "144": [26, 33], "146": [26, 31, 33], "147": [26, 33], "148": [26, 33], "149": [26, 33], "150": [26, 32, 33, 869], "151": [26, 33], "153": [26, 33], "154": [26, 31, 33], "160": [26, 33, 827, 845, 858, 874], "wil": 26, "catalyst": 26, "pellet": 26, "helper": [26, 27, 30, 1288, 1311, 1320, 1321, 1322, 1345, 1354, 1355, 1356, 1379, 1388, 1418, 1441, 1535, 1558, 1567, 1597, 1620, 1629], "free": [26, 1666], "template_cylinder_annulu": 26, "r_outer": [26, 1718, 1719], "r_inner": [26, 1718, 1719], "templat": [26, 988, 1718, 1719], "facecenteredcub": [26, 910, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181], "bodycenteredcub": [26, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 1143], "jam": 26, "intersti": 26, "fcc": 26, "bcc": [26, 910], "4x4x4": 26, "corner": [26, 30, 33, 910, 949, 1143], "site": [26, 99, 922, 923, 961, 962, 999, 1000, 1037, 1038, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1678, 1681, 1683, 1686, 1687, 1688, 1690, 1691, 1692, 1703, 1704, 1714, 1716, 1722], "node": [26, 29, 33, 615, 1064, 1077, 1078, 1683, 1685, 1687, 1688, 1689, 1691, 1692, 1693, 1699, 1703, 1704, 1718, 1719, 1722, 1879], "whether": [26, 31, 51, 57, 83, 89, 99, 110, 117, 143, 149, 176, 182, 208, 215, 241, 247, 274, 280, 307, 313, 340, 346, 374, 380, 407, 413, 440, 446, 473, 479, 502, 508, 531, 549, 555, 567, 589, 894, 921, 932, 939, 960, 971, 978, 998, 1009, 1016, 1036, 1047, 1054, 1074, 1087, 1094, 1115, 1126, 1133, 1154, 1165, 1172, 1192, 1203, 1210, 1230, 1241, 1248, 1271, 1277, 1303, 1309, 1337, 1343, 1371, 1377, 1401, 1407, 1433, 1439, 1462, 1468, 1490, 1496, 1518, 1524, 1550, 1556, 1580, 1586, 1612, 1618, 1642, 1648, 1678, 1682, 1687, 1691, 1694, 1701, 1702, 1709, 1716, 1830, 1831, 1867, 1868, 1869], "indidc": 26, "portion": [26, 30, 1681], "color": [26, 33, 34, 1875, 1876, 1877, 1878, 1879], "0x7fb8a9ff8ea0": 26, "414": 26, "corner_to_bodi": [26, 910, 1143], "216": [26, 33], "corner_to_corn": 26, "body_to_bodi": 26, "orang": [26, 29], "eas": 26, "interpenetr": 26, "delaunayvoronoidu": [26, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103], "cartesian": [26, 1026, 1220], "cyl": 26, "sph": 26, "dpore": 26, "dthroat": 26, "preced": [26, 615], "depth": [26, 27, 1860], "wide": [26, 27, 29, 35, 1862, 1863], "assort": [26, 31], "subclass": [27, 38, 72, 130, 163, 228, 261, 294, 327, 394, 427, 460, 491, 520, 586, 610, 1259, 1417, 1450, 1630, 1777, 1789], "deper": 27, "scheme": [27, 28, 872], "humbl": 27, "accord": [27, 44, 51, 56, 67, 76, 83, 88, 93, 103, 110, 116, 125, 136, 143, 148, 158, 169, 176, 181, 191, 196, 201, 208, 214, 223, 234, 241, 246, 256, 267, 274, 279, 289, 300, 307, 312, 322, 333, 340, 345, 356, 367, 374, 379, 389, 400, 407, 412, 422, 433, 440, 445, 454, 466, 473, 478, 486, 495, 502, 507, 513, 542, 549, 554, 560, 566, 567, 570, 572, 918, 922, 923, 932, 938, 944, 957, 961, 962, 971, 977, 983, 995, 999, 1000, 1009, 1015, 1021, 1033, 1037, 1038, 1047, 1053, 1059, 1064, 1071, 1075, 1076, 1087, 1093, 1099, 1112, 1116, 1117, 1126, 1132, 1138, 1151, 1155, 1156, 1165, 1171, 1177, 1189, 1193, 1194, 1203, 1209, 1215, 1227, 1231, 1232, 1241, 1247, 1253, 1264, 1271, 1276, 1282, 1294, 1303, 1308, 1315, 1328, 1337, 1342, 1349, 1362, 1371, 1376, 1383, 1394, 1401, 1406, 1412, 1424, 1433, 1438, 1445, 1455, 1462, 1467, 1473, 1483, 1490, 1495, 1501, 1511, 1518, 1523, 1529, 1541, 1550, 1555, 1562, 1573, 1580, 1585, 1591, 1603, 1612, 1617, 1624, 1635, 1642, 1647, 1653, 1709, 1800, 1818], "imagin": 27, "pull": [27, 36], "pore_data_sheet": 27, "datafram": [27, 623, 631], "ndim": 27, "474407": 27, "055905": 27, "557595": 27, "090773": 27, "501382": 27, "065994": 27, "472442": 27, "055213": 27, "float64": 27, "05590507143096387": 27, "apt": 27, "colum": 27, "mathemat": 27, "serv": [27, 1735], "identifi": [27, 28, 33, 813, 949, 988, 1686, 1690, 1694, 1703, 1709, 1731, 1733, 1740, 1744, 1746], "wrong": 27, "creation": [27, 712, 763, 789, 1680], "cast": 27, "species_a": 27, "species_b": 27, "retreiv": [27, 841], "retun": 27, "subdictionari": [27, 31], "ask": [27, 31, 590], "int64": [27, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230], "set_label": 27, "meant": [27, 28, 1709, 1878], "pend": 27, "_hidden": 27, "shorthand": 27, "impli": [27, 916, 955, 993, 1031, 1069, 1110, 1149, 1187, 1225], "critic": [27, 31, 825, 836, 850, 854, 856, 857, 860, 861, 865, 866, 868], "v3": [27, 29, 30, 31], "lattice_connect": 27, "dimension": 27, "dispatch": [27, 31], "dn": 27, "delaunai": [27, 813, 874, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1077, 1078, 1694, 1720], "premis": 27, "sentenc": 27, "diagram": [27, 1064], "colunm": 27, "exactli": [27, 28, 30, 31, 32, 1834], "technic": [27, 28, 51, 52, 53, 56, 83, 84, 85, 88, 110, 111, 112, 116, 143, 144, 145, 148, 176, 177, 178, 181, 208, 209, 210, 214, 241, 242, 243, 246, 274, 275, 276, 279, 307, 308, 309, 312, 340, 341, 342, 345, 374, 375, 376, 379, 407, 408, 409, 412, 440, 441, 442, 445, 473, 474, 475, 478, 502, 503, 504, 507, 549, 550, 551, 554, 567, 568, 569, 570, 813, 932, 934, 935, 938, 971, 973, 974, 977, 1009, 1011, 1012, 1015, 1047, 1049, 1050, 1053, 1087, 1089, 1090, 1093, 1126, 1128, 1129, 1132, 1165, 1167, 1168, 1171, 1203, 1205, 1206, 1209, 1241, 1243, 1244, 1247, 1271, 1272, 1273, 1276, 1303, 1304, 1305, 1308, 1337, 1338, 1339, 1342, 1371, 1372, 1373, 1376, 1401, 1402, 1403, 1406, 1433, 1434, 1435, 1438, 1462, 1463, 1464, 1467, 1490, 1491, 1492, 1495, 1518, 1519, 1520, 1523, 1550, 1551, 1552, 1555, 1580, 1581, 1582, 1585, 1612, 1613, 1614, 1617, 1642, 1643, 1644, 1647], "rigorosli": 27, "support": [27, 31, 626, 1665, 1666], "unintend": 27, "merg": [27, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452, 1711], "ijv": 27, "evid": 27, "symmetr": [27, 28, 916, 949, 955, 993, 1031, 1069, 1110, 1149, 1187, 1225, 1688, 1705, 1834, 1835, 1865], "highli": [27, 875], "nonzero": [27, 28, 708], "travers": [27, 1693], "redund": [27, 917, 956, 994, 1032, 1070, 1111, 1150, 1188, 1226], "triangular": [27, 28, 29, 730, 887, 916, 926, 955, 965, 993, 1003, 1031, 1041, 1069, 1081, 1110, 1120, 1149, 1159, 1187, 1197, 1225, 1235, 1681, 1706, 1707, 1708, 1720, 1723], "lil": [27, 28, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "merit": 27, "articl": 27, "conductor": 27, "interconnect": [27, 1064], "enough": [27, 31, 1026, 1220], "get_conduit_data": 27, "47440675": 27, "23720338": 27, "55759468": 27, "25069084": 27, "50138169": 27, "2362208": 27, "47244159": 27, "r1_r2": 27, "understand": [28, 29, 30], "occassion": 28, "invok": 28, "easier": [28, 29, 30, 36, 910, 949, 1026, 1064, 1104, 1143, 1182, 1220], "notabl": 28, "obviou": 28, "grow": [28, 713], "million": [28, 824], "meaning": 28, "suggest": [28, 1858], "especi": 28, "amount": [28, 33, 1676, 1714, 1715], "intuit": [28, 30], "lower": [28, 32, 33, 773, 795, 916, 955, 993, 1031, 1069, 1110, 1149, 1187, 1225, 1706, 1707], "problemat": [28, 29, 631], "mind": 28, "basi": 28, "luckili": 28, "locations_of_nonzero": 28, "values_of_nonzero": 28, "dicionari": [28, 910, 949, 1026, 1064, 1104, 1143, 1182, 1220], "thank": 28, "sophist": 28, "strutur": 28, "dok": [28, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237, 1688], "gotcha": 28, "subtract": [28, 29, 718, 719, 720, 721, 778, 785], "slight": 28, "variat": 28, "create_incidence_matrix": [28, 928, 967, 1005, 1043, 1083, 1122, 1161, 1199, 1237], "background": 28, "predefin": [28, 31, 32, 1287, 1534, 1596], "cn": 28, "p_left": 28, "p_bottom": 28, "lightgrei": [28, 33], "marker": [28, 1694, 1876, 1878], "blue": 28, "OR": [28, 33], "find_neighbor_por": [28, 933, 972, 1010, 1048, 1088, 1127, 1166, 1182, 1204, 1242], "exclusve_or": 28, "neigbhor": [28, 933, 972, 1010, 1048, 1088, 1127, 1166, 1204, 1242], "xnor": [28, 30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 466, 473, 474, 475, 478, 486, 495, 502, 503, 504, 507, 513, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 918, 919, 922, 923, 932, 933, 934, 935, 938, 944, 957, 958, 961, 962, 971, 972, 973, 974, 977, 983, 995, 996, 999, 1000, 1009, 1010, 1011, 1012, 1015, 1021, 1033, 1034, 1037, 1038, 1047, 1048, 1049, 1050, 1053, 1059, 1071, 1072, 1075, 1076, 1087, 1088, 1089, 1090, 1093, 1099, 1112, 1113, 1116, 1117, 1126, 1127, 1128, 1129, 1132, 1138, 1151, 1152, 1155, 1156, 1165, 1166, 1167, 1168, 1171, 1177, 1189, 1190, 1193, 1194, 1203, 1204, 1205, 1206, 1209, 1215, 1227, 1228, 1231, 1232, 1241, 1242, 1243, 1244, 1247, 1253, 1264, 1271, 1272, 1273, 1276, 1282, 1294, 1303, 1304, 1305, 1308, 1315, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1394, 1401, 1402, 1403, 1406, 1412, 1424, 1433, 1434, 1435, 1438, 1445, 1455, 1462, 1463, 1464, 1467, 1473, 1483, 1490, 1491, 1492, 1495, 1501, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1603, 1612, 1613, 1614, 1617, 1624, 1635, 1642, 1643, 1644, 1647, 1653, 1687, 1691, 1692], "opposit": 28, "nxor": [28, 1687, 1691, 1692], "interchang": 28, "logic": [28, 30, 56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 454, 478, 486, 507, 513, 554, 560, 570, 572, 919, 922, 923, 933, 938, 944, 958, 961, 962, 972, 977, 983, 996, 999, 1000, 1010, 1015, 1021, 1034, 1037, 1038, 1048, 1053, 1059, 1072, 1075, 1076, 1088, 1093, 1099, 1113, 1116, 1117, 1127, 1132, 1138, 1152, 1155, 1156, 1166, 1171, 1177, 1190, 1193, 1194, 1204, 1209, 1215, 1228, 1231, 1232, 1242, 1247, 1253, 1276, 1282, 1308, 1315, 1342, 1349, 1376, 1383, 1406, 1412, 1438, 1445, 1467, 1473, 1495, 1501, 1523, 1529, 1555, 1562, 1585, 1591, 1617, 1624, 1647, 1653, 1687, 1691, 1692], "share": [28, 459, 919, 922, 923, 933, 958, 961, 962, 972, 996, 999, 1000, 1010, 1034, 1037, 1038, 1048, 1072, 1075, 1076, 1088, 1113, 1116, 1117, 1127, 1152, 1155, 1156, 1166, 1190, 1193, 1194, 1204, 1228, 1231, 1232, 1242, 1681, 1687, 1689, 1691, 1692], "find_connecting_throat": 28, "p1": [28, 920, 959, 997, 1035, 1073, 1114, 1153, 1191, 1229, 1688, 1689], "p2": [28, 920, 959, 997, 1035, 1073, 1114, 1153, 1191, 1229, 1688, 1689], "nan": [28, 30, 32, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 510, 631, 633, 759, 762, 787, 920, 959, 997, 1035, 1073, 1114, 1153, 1191, 1229, 1288, 1322, 1356, 1418, 1535, 1597, 1687, 1688, 1864], "find_connected_por": [28, 33], "flatten": [28, 33, 629, 919, 921, 922, 923, 933, 958, 960, 961, 962, 972, 996, 998, 999, 1000, 1010, 1034, 1036, 1037, 1038, 1048, 1072, 1074, 1075, 1076, 1088, 1113, 1115, 1116, 1117, 1127, 1152, 1154, 1155, 1156, 1166, 1190, 1192, 1193, 1194, 1204, 1228, 1230, 1231, 1232, 1242, 1687, 1691, 1692], "heterogen": [28, 29, 30], "blockag": 28, "actuali": [28, 30], "manual": [28, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 507, 554, 570, 938, 977, 1015, 1053, 1093, 1132, 1171, 1182, 1209, 1247, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647, 1853], "0x7f130c959670": 28, "easiest": 28, "bool": [28, 33, 56, 62, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 351, 356, 379, 389, 412, 422, 445, 454, 478, 486, 507, 513, 554, 560, 570, 572, 589, 627, 631, 759, 762, 787, 916, 917, 919, 921, 922, 923, 933, 938, 944, 955, 956, 958, 960, 961, 962, 972, 977, 983, 993, 994, 996, 998, 999, 1000, 1010, 1015, 1021, 1026, 1031, 1032, 1034, 1036, 1037, 1038, 1048, 1053, 1059, 1064, 1069, 1070, 1072, 1074, 1075, 1076, 1088, 1093, 1099, 1110, 1111, 1113, 1115, 1116, 1117, 1127, 1132, 1138, 1149, 1150, 1152, 1154, 1155, 1156, 1166, 1171, 1177, 1187, 1188, 1190, 1192, 1193, 1194, 1204, 1209, 1215, 1220, 1225, 1226, 1228, 1230, 1231, 1232, 1242, 1247, 1253, 1276, 1282, 1308, 1315, 1342, 1349, 1376, 1383, 1406, 1412, 1438, 1445, 1467, 1473, 1495, 1501, 1523, 1529, 1555, 1562, 1585, 1591, 1617, 1624, 1647, 1653, 1681, 1687, 1691, 1692, 1695, 1701, 1702, 1865, 1867, 1868, 1869, 1877], "inde": [28, 33], "signific": 28, "totrim": 28, "offset": [28, 911, 950, 1105, 1144, 1676, 1677], "cumsum": 28, "remap": 28, "did": 28, "0x7f130c8cc0e0": 28, "decis": 28, "made": [28, 30, 31, 35, 99, 949, 1714, 1715], "new_por": 28, "vstack": 28, "0x7f130ed93100": 28, "lucki": 28, "hstack": 28, "new_conn": [28, 1680], "obvious": 28, "enterpr": 29, "tomograph": 29, "Not": 29, "blank": 29, "0x7eff700b3c90": 29, "8000": 29, "22800": 29, "2168": 29, "4332": 29, "favor": [29, 916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "thorough": 29, "psd": 29, "norm": [29, 714, 764, 794], "xlim": 29, "5593961722893255": 29, "80996128980269": 29, "tsd": 29, "5130345457395142": 29, "96861960231873": 29, "vice": [29, 32, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230], "versa": [29, 32, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230], "strang": 29, "constrict": [29, 799], "564": 29, "ever": 29, "tempt": 29, "loop": [29, 33, 820, 1077, 1078], "interog": 29, "ye": 29, "safer": 29, "smallest": [29, 33, 1865, 1874], "amin": 29, "bia": 29, "toward": 29, "lo": 29, "hi": [29, 614], "01": [29, 31], "lie": [29, 738, 911, 950, 1105, 1144, 1220, 1694, 1695, 1703], "overli": 29, "tend": 29, "mandatori": 29, "occupi": [29, 1678, 1704, 1716], "regard": 29, "r1": 29, "r2": 29, "l_total": 29, "sqrt": 29, "squeez": 29, "lt": 29, "euclidean": 29, "root": [29, 36], "nest": [29, 627, 1860, 1870], "deeper": 29, "unbuff": 29, "sap": 29, "08485305e": 29, "68134509e": 29, "33947201e": 29, "57211706e": 29, "92152447e": 29, "72429278e": 29, "potenti": [29, 459, 896, 897], "substract": 29, "fashion": [29, 1680], "adjac": [29, 711, 713, 731, 732, 759, 762, 787, 788, 910, 916, 917, 926, 949, 955, 956, 965, 988, 993, 994, 1003, 1026, 1031, 1032, 1041, 1064, 1069, 1070, 1081, 1104, 1110, 1111, 1120, 1143, 1149, 1150, 1159, 1182, 1187, 1188, 1197, 1220, 1225, 1226, 1235, 1681, 1683, 1688, 1705, 1706, 1707, 1708, 1720, 1723], "analyz": 29, "lengthi": 29, "lai": [29, 1026, 1064, 1220], "bare": 29, "job": 29, "fresh": 29, "inherit": [29, 519, 537, 586], "throat_se": 29, "docstr": [29, 30, 31, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452, 462, 539, 603, 913, 952, 990, 1028, 1066, 1107, 1146, 1184, 1222, 1261, 1290, 1324, 1358, 1391, 1420, 1452, 1480, 1508, 1537, 1570, 1599, 1632, 1725, 1726, 1731, 1735, 1736, 1738, 1740, 1742, 1744, 1746], "78": [29, 33, 1862, 1863], "charact": [29, 1740, 1862, 1863], "cursor": 29, "explicitli": [29, 615], "track": [29, 33, 519, 1478], "f1": 29, "f2": 29, "f3": 29, "f4": 29, "lens": 29, "27203214e": 29, "58686910e": 29, "44028684e": 29, "92245838e": 29, "40091924e": 29, "59556144e": 29, "57978631e": 29, "74677718e": 29, "68073070e": 29, "tediou": 29, "prone": 29, "predfin": 29, "pprint": 29, "0x7eff35c2ad40": 29, "largest_spher": [29, 638, 639, 640, 641, 642, 643, 644], "0x7eff33a70790": 29, "0x7eff35c2a710": 29, "0x7eff33a70b80": 29, "pore_diamet": [29, 638, 639, 640, 641, 642, 643, 644, 657, 658, 659, 660, 661, 662, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 718, 719, 720, 721, 723, 724, 725, 726, 727, 738, 740, 741, 742, 743, 744, 745, 749, 750, 751, 752, 778, 779, 878, 891], "0x7eff33a71870": 29, "throat_diamet": [29, 638, 639, 640, 641, 642, 643, 644, 657, 658, 659, 666, 667, 668, 669, 671, 672, 673, 680, 681, 682, 683, 684, 686, 687, 688, 692, 695, 696, 697, 698, 699, 725, 729, 734, 735, 736, 738, 740, 741, 742, 749, 750, 751, 752, 754, 755, 756, 768, 769, 775, 776, 778, 779, 780, 878, 889, 890, 891], "0x7eff35c2add0": 29, "0x7eff33ac7640": 29, "0x7eff33ac5d80": 29, "0x7eff33a72290": 29, "0x7eff33a73490": 29, "0x7eff35c2af80": 29, "0x7eff33a73250": 29, "0x7eff35c2a9e0": 29, "nice": [29, 1220, 1789, 1862, 1863], "add_models_collect": 29, "0x7eff2fc60180": 29, "bound": 29, "nearest": [29, 713, 810, 1717], "dall": 29, "reach": [29, 33], "constrain": 29, "life": 29, "reomcomput": 29, "15319619": 29, "0328116": 29, "2287953": 29, "23887453": 29, "8411705": 29, "10988224": 29, "59011212e": 29, "75717988e": 29, "13561876e": 29, "66940036e": 29, "27284536e": 29, "36618201": 29, "35063831": 29, "40236746": 29, "58822388": 29, "42461491": 29, "9016327": 29, "11640227e": 29, "20171387e": 29, "57748463e": 29, "30989878e": 29, "79091080e": 29, "automatical": 29, "networkx": [29, 589, 615, 622, 1879], "sort": [29, 33, 196, 894], "tree": [29, 1712], "downstream": 29, "roughli": 29, "dependency_map": [29, 586, 589, 590], "style": [29, 591], "planar": [29, 657, 662, 665, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 691, 694, 698, 699, 701, 705], "circl": [29, 638, 644, 657, 671, 686, 740, 761, 813, 1703, 1718, 1876, 1879], "dependency_graph": [29, 586, 590, 591], "draw_networkx": 29, "draw_planar": 29, "bookmark": 30, "0x7f0796fbf010": 30, "corner_por": 30, "build": [30, 59, 151, 184, 249, 282, 315, 448], "filter": [30, 34, 44, 51, 56, 67, 76, 83, 88, 93, 103, 110, 116, 125, 136, 143, 148, 158, 169, 176, 181, 191, 201, 208, 214, 223, 234, 241, 246, 256, 267, 274, 279, 289, 300, 307, 312, 322, 333, 340, 345, 356, 367, 374, 379, 389, 400, 407, 412, 422, 433, 440, 445, 454, 466, 473, 478, 486, 495, 502, 507, 513, 542, 549, 554, 560, 566, 567, 570, 572, 918, 919, 922, 923, 932, 938, 944, 957, 958, 961, 962, 971, 977, 983, 995, 996, 999, 1000, 1009, 1015, 1021, 1033, 1034, 1037, 1038, 1047, 1053, 1059, 1071, 1072, 1075, 1076, 1087, 1093, 1099, 1112, 1113, 1116, 1117, 1126, 1132, 1138, 1151, 1152, 1155, 1156, 1165, 1171, 1177, 1189, 1190, 1193, 1194, 1203, 1209, 1215, 1227, 1228, 1231, 1232, 1241, 1247, 1253, 1264, 1271, 1276, 1282, 1294, 1303, 1308, 1315, 1328, 1337, 1342, 1349, 1362, 1371, 1376, 1383, 1394, 1401, 1406, 1412, 1424, 1433, 1438, 1445, 1455, 1462, 1467, 1473, 1483, 1490, 1495, 1501, 1511, 1518, 1523, 1529, 1541, 1550, 1555, 1562, 1573, 1580, 1585, 1591, 1603, 1612, 1617, 1624, 1635, 1642, 1647, 1653, 1685, 1687, 1691, 1692], "decrib": 30, "nd": [30, 841, 843], "wast": [30, 33], "wors": 30, "consum": 30, "8x": 30, "nonetheless": 30, "invest": 30, "mask1": 30, "mask2": 30, "edg": [30, 33, 615, 710, 761, 949, 1683, 1687, 1688, 1689, 1691, 1693, 1722, 1879], "theori": [30, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226, 1687, 1691, 1692], "nor": [30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 466, 473, 474, 475, 478, 486, 495, 502, 503, 504, 507, 513, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 918, 932, 934, 935, 938, 944, 957, 971, 973, 974, 977, 983, 995, 1009, 1011, 1012, 1015, 1021, 1033, 1047, 1049, 1050, 1053, 1059, 1071, 1087, 1089, 1090, 1093, 1099, 1112, 1126, 1128, 1129, 1132, 1138, 1151, 1165, 1167, 1168, 1171, 1177, 1189, 1203, 1205, 1206, 1209, 1215, 1227, 1241, 1243, 1244, 1247, 1253, 1264, 1271, 1272, 1273, 1276, 1282, 1294, 1303, 1304, 1305, 1308, 1315, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1394, 1401, 1402, 1403, 1406, 1412, 1424, 1433, 1434, 1435, 1438, 1445, 1455, 1462, 1463, 1464, 1467, 1473, 1483, 1490, 1491, 1492, 1495, 1501, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1603, 1612, 1613, 1614, 1617, 1624, 1635, 1642, 1643, 1644, 1647, 1653], "confus": [30, 33], "nand": [30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 466, 473, 474, 475, 478, 486, 495, 502, 503, 504, 507, 513, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 918, 932, 934, 935, 938, 944, 957, 971, 973, 974, 977, 983, 995, 1009, 1011, 1012, 1015, 1021, 1033, 1047, 1049, 1050, 1053, 1059, 1071, 1087, 1089, 1090, 1093, 1099, 1112, 1126, 1128, 1129, 1132, 1138, 1151, 1165, 1167, 1168, 1171, 1177, 1189, 1203, 1205, 1206, 1209, 1215, 1227, 1241, 1243, 1244, 1247, 1253, 1264, 1271, 1272, 1273, 1276, 1282, 1294, 1303, 1304, 1305, 1308, 1315, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1394, 1401, 1402, 1403, 1406, 1412, 1424, 1433, 1434, 1435, 1438, 1445, 1455, 1462, 1463, 1464, 1467, 1473, 1483, 1490, 1491, 1492, 1495, 1501, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1603, 1612, 1613, 1614, 1617, 1624, 1635, 1642, 1643, 1644, 1647, 1653], "retiev": 30, "annoi": [30, 1864], "shortcut": [30, 32, 36, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 491, 520, 537, 910, 949, 988, 1026, 1064, 1104, 1143, 1182, 1220, 1259, 1287, 1321, 1355, 1389, 1417, 1450, 1478, 1506, 1534, 1568, 1596, 1630], "edit": [30, 36, 896, 897], "syntax": [30, 615], "certainli": 30, "infer": [30, 911, 950, 988, 1105, 1144], "suppli": [30, 31, 44, 52, 53, 60, 63, 64, 65, 76, 84, 85, 90, 103, 111, 112, 120, 121, 123, 136, 144, 145, 152, 154, 155, 156, 169, 177, 178, 185, 187, 188, 189, 201, 209, 210, 218, 219, 221, 234, 242, 243, 250, 252, 253, 254, 267, 275, 276, 283, 285, 286, 287, 300, 308, 309, 316, 318, 319, 320, 333, 341, 342, 349, 352, 353, 354, 367, 375, 376, 383, 385, 386, 387, 400, 408, 409, 416, 418, 419, 420, 433, 441, 442, 449, 451, 452, 462, 463, 466, 474, 475, 480, 495, 503, 504, 510, 539, 542, 550, 551, 566, 568, 569, 603, 712, 763, 783, 789, 795, 913, 918, 921, 934, 935, 952, 957, 960, 973, 974, 990, 995, 998, 1011, 1012, 1026, 1028, 1033, 1036, 1049, 1050, 1066, 1071, 1074, 1089, 1090, 1107, 1112, 1115, 1128, 1129, 1146, 1151, 1154, 1167, 1168, 1184, 1189, 1192, 1205, 1206, 1220, 1222, 1227, 1230, 1243, 1244, 1261, 1264, 1272, 1273, 1290, 1294, 1304, 1305, 1324, 1328, 1338, 1339, 1358, 1362, 1372, 1373, 1391, 1394, 1402, 1403, 1420, 1424, 1434, 1435, 1452, 1455, 1463, 1464, 1480, 1483, 1491, 1492, 1508, 1511, 1519, 1520, 1537, 1541, 1551, 1552, 1570, 1573, 1581, 1582, 1599, 1603, 1613, 1614, 1632, 1635, 1643, 1644, 1703, 1715, 1801, 1803, 1842, 1875, 1876], "bonu": 30, "new_arrai": 30, "overwrot": 30, "symbol": [30, 899], "conceptu": 30, "gone": 30, "bimod": 30, "layer": [30, 708, 891, 1715], "v2": [30, 31], "lost": [30, 1840], "suffici": [30, 31], "separ": [30, 629], "mainten": 30, "backend": 30, "think": 30, "tidier": 30, "consequ": [30, 32, 896, 897], "mark": [30, 988, 1694], "leav": [30, 58, 61, 91, 122, 150, 153, 183, 186, 220, 248, 251, 281, 284, 314, 317, 347, 350, 381, 384, 414, 417, 447, 450, 483, 511, 558, 571, 942, 981, 1019, 1057, 1097, 1136, 1175, 1213, 1251, 1280, 1313, 1347, 1381, 1410, 1443, 1471, 1499, 1527, 1560, 1589, 1622, 1651], "unspecifi": 30, "everywher": 30, "visibl": 30, "recogin": 30, "redefin": 30, "run_model": 30, "observ": [30, 33], "With": 30, "dealt": [30, 633], "uniform": 30, "uniformli": 30, "abstract": 30, "freeli": 30, "asmask": [30, 56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 454, 478, 486, 507, 513, 554, 560, 570, 572, 922, 923, 938, 944, 961, 962, 977, 983, 999, 1000, 1015, 1021, 1037, 1038, 1053, 1059, 1075, 1076, 1093, 1099, 1116, 1117, 1132, 1138, 1155, 1156, 1171, 1177, 1193, 1194, 1209, 1215, 1231, 1232, 1247, 1253, 1276, 1282, 1308, 1315, 1342, 1349, 1376, 1383, 1406, 1412, 1438, 1445, 1467, 1473, 1495, 1501, 1523, 1529, 1555, 1562, 1585, 1591, 1617, 1624, 1647, 1653], "beed": 30, "thermodynam": [31, 32, 820], "framework": 31, "submodul": [31, 655, 712, 763, 781, 789, 802, 819, 870], "possibli": 31, "exhaust": 31, "librari": [31, 33, 34, 712, 763, 789, 1847, 1852], "polici": 31, "exact": [31, 824], "cantera": 31, "handler": 31, "ca": [31, 834], "extern": [31, 1694], "001": [31, 714, 764, 794], "three": [31, 32, 586, 898, 900, 901, 902, 903, 904, 905], "phase1": 31, "0x7f62c7e31080": 31, "broadcast": 31, "polynomi": [31, 647, 650], "4th": 31, "yield": 31, "a4": [31, 898, 901, 902, 903], "8543e": 31, "6756e": 31, "08": [31, 647, 650, 1663, 1665, 1669, 1671], "7831e": 31, "3156e": 31, "a0": [31, 796, 820], "8898e": 31, "00091476": 31, "350": 31, "rerun": [31, 36], "00050309": 31, "00048636": 31, "00068275": 31, "00049126": 31, "th": [31, 1715], "00047181": 31, "00045558": 31, "00065233": 31, "00046036": 31, "viscostii": 31, "custom_mu": 31, "reimplement": 31, "commonli": 31, "appropri": [31, 847, 872, 1694], "phase_02": 31, "0x7f62c7e32c00": 31, "vapor_pressur": [31, 651], "salin": [31, 827, 851, 858, 862, 869], "mass_to_molar": [31, 647, 650, 651], "mw": [31, 647, 823, 824, 825, 826, 829, 830, 839, 844, 849, 853, 854, 855, 856, 857, 864, 865, 866, 868, 1861], "molecular_weight": [31, 823, 824, 825, 826, 829, 830, 839, 844, 849, 853, 854, 855, 856, 857, 864, 865, 866, 868, 878, 1478, 1861], "liquid_pure_antoin": [31, 651], "therebi": 31, "molar_denstii": 31, "cycl": [31, 590], "upstream": 31, "unusu": 31, "reproduc": 31, "api": [31, 32, 459], "unnecessari": 31, "On": [31, 33, 36], "beta": [31, 896, 897], "oxygen": 31, "nitrogen": 31, "o2": 31, "phase_03": 31, "0x7f62c5580ae0": 31, "thermo": 31, "synonym": 31, "databas": 31, "BUT": 31, "host": 31, "7782": 31, "common_nam": 31, "charg": [31, 897], "formula": [31, 847, 887], "boiling_temperatur": [31, 850, 854, 856, 857], "1878078805": 31, "melting_temperatur": 31, "triple_point_temperatur": 31, "361": 31, "triple_point_pressur": 31, "277647044": 31, "dipole_mo": 31, "lj_diamet": [31, 829], "29728": 31, "lj_energi": [31, 829], "6520845934e": 31, "surface_tension_tb": [31, 831], "013145681055529814": 31, "molar_volume_tb": [31, 831], "8039990920723867e": 31, "9988": [31, 647], "critical_temperatur": [31, 820, 824, 825, 829, 836, 850, 857, 861, 865, 866, 868], "581": 31, "critical_pressur": [31, 829, 850, 854, 856, 861, 865, 866, 868], "5043000": 31, "critical_volum": [31, 824, 825], "33675715334e": 31, "critical_compressibilty_factor": 31, "28787424687871216": 31, "acentric_factor": [31, 824, 825, 829, 836, 854, 856, 861, 868], "0222": 31, "prefix": [31, 618], "stiel": [31, 866, 868], "thodo": [31, 866], "gas_pure_l": 31, "gas_pure_st": 31, "0102393e": 31, "tcrit": 31, "becuas": [31, 130], "gase": [31, 819], "standardliquid": [31, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595], "standardga": [31, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533], "approximat": 31, "h2o": [31, 1478], "popul": 31, "phase_04": 31, "0x7f62c5583920": 31, "heat_capacity_ga": [31, 836], "heat_capac": [31, 833, 834, 835], "phase_05": 31, "0x7f62c54aaf70": 31, "minim": 31, "liquid_pure_costald": 31, "vc": [31, 824, 825], "omega": [31, 824, 825, 829, 836, 854, 856, 861, 868], "gas_pure_trc": 31, "liquid_pure_rp": 31, "cpg": [31, 836], "liquid_pure_gismr": 31, "tb": [31, 850, 854, 856, 857], "liquid_pure_l": 31, "n2": 31, "standardgasmixtur": [31, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567], "79": [31, 33], "compositio": 31, "mixture_01": 31, "0x7f62c53963e0": 31, "mole_fract": [31, 1288, 1311, 1320, 1322, 1345, 1354, 1356, 1379, 1388, 1418, 1441, 1535, 1558, 1567, 1597, 1620, 1629], "blend": 31, "78599451e": 31, "01895979e": 31, "sub": [31, 919, 921, 922, 958, 960, 961, 996, 998, 999, 1034, 1036, 1037, 1072, 1074, 1075, 1113, 1115, 1116, 1152, 1154, 1155, 1190, 1192, 1193, 1228, 1230, 1231, 1687, 1691, 1692, 1875, 1876], "0x7f62c5395800": 31, "0x7f62c5395ad0": 31, "liquidmixtur": [31, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1596], "gasmixtur": [31, 1287, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1534], "remove_comp": 31, "liter": [31, 933, 972, 1010, 1048, 1088, 1127, 1166, 1204, 1242], "add_comp": 31, "compnam": [31, 841, 1320, 1354, 1388, 1567, 1629], "09391681e": 31, "6985128e": 31, "propertei": 31, "failur": 31, "health": [31, 1291, 1325, 1359, 1421, 1538, 1600, 1751, 1857, 1858], "mole_fraction_too_low": 31, "mole_fraction_too_high": 31, "symbmol": 31, "instruct": [31, 625], "mole_fraction_weight": 31, "55121679e": 31, "suffix": [31, 1862, 1863], "crucial": 31, "viscsoiti": 31, "turn": [31, 461, 538, 602, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631], "0x7fd4240d1a30": 32, "driven": 32, "0x7fd3e5b35760": 32, "00089319": 32, "simplest": 32, "hagan": 32, "prefactor": [32, 905], "g_h": 32, "protip": 32, "51423658e": 32, "70080904e": 32, "43799877e": 32, "18592800e": 32, "55327604e": 32, "46360246e": 32, "06766658e": 32, "02557421e": 32, "54105444e": 32, "74641724e": 32, "22466634e": 32, "32920528e": 32, "79069848e": 32, "96848899e": 32, "84642965e": 32, "91993307e": 32, "03421983e": 32, "37700974e": 32, "00510116e": 32, "67922896e": 32, "74627342e": 32, "31052410e": 32, "35148969e": 32, "11829827e": 32, "02469358e": 32, "43697249e": 32, "89935832e": 32, "46235379e": 32, "12461076e": 32, "44251231e": 32, "15411336e": 32, "41429327e": 32, "87969817e": 32, "11904291e": 32, "46237069e": 32, "10556639e": 32, "18517256e": 32, "78090610e": 32, "16052688e": 32, "25129663e": 32, "auotmat": 32, "stokes_01": 32, "0x7fd3e5b375b0": 32, "set_rate_bc": 32, "preceed": [32, 1729], "sustain": [32, 889], "compon": [32, 820, 824, 830, 831, 842, 843, 844, 867, 899, 1287, 1288, 1297, 1311, 1320, 1321, 1322, 1331, 1345, 1354, 1355, 1356, 1365, 1379, 1388, 1417, 1418, 1427, 1441, 1534, 1535, 1544, 1558, 1567, 1596, 1597, 1606, 1620, 1629, 1715, 1862, 1863], "multiphys": [32, 491, 509], "quanti": 32, "135286": 32, "90028383": 32, "143400": 32, "99158997": 32, "142283": 32, "39493086": 32, "138651": 32, "90398699": 32, "136353": 32, "5224697": 32, "kpa": 32, "simplist": 32, "finish": 32, "intersect": [32, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 466, 473, 474, 475, 478, 486, 495, 502, 503, 504, 507, 513, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 661, 663, 664, 665, 677, 678, 679, 692, 693, 694, 720, 738, 746, 747, 748, 775, 776, 777, 778, 780, 918, 919, 922, 923, 932, 933, 934, 935, 938, 944, 957, 958, 961, 962, 971, 972, 973, 974, 977, 983, 995, 996, 999, 1000, 1009, 1010, 1011, 1012, 1015, 1021, 1033, 1034, 1037, 1038, 1047, 1048, 1049, 1050, 1053, 1059, 1071, 1072, 1075, 1076, 1087, 1088, 1089, 1090, 1093, 1099, 1112, 1113, 1116, 1117, 1126, 1127, 1128, 1129, 1132, 1138, 1151, 1152, 1155, 1156, 1165, 1166, 1167, 1168, 1171, 1177, 1189, 1190, 1193, 1194, 1203, 1204, 1205, 1206, 1209, 1215, 1227, 1228, 1231, 1232, 1241, 1242, 1243, 1244, 1247, 1253, 1264, 1271, 1272, 1273, 1276, 1282, 1294, 1303, 1304, 1305, 1308, 1315, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1394, 1401, 1402, 1403, 1406, 1412, 1424, 1433, 1434, 1435, 1438, 1445, 1455, 1462, 1463, 1464, 1467, 1473, 1483, 1490, 1491, 1492, 1495, 1501, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1603, 1612, 1613, 1614, 1617, 1624, 1635, 1642, 1643, 1644, 1647, 1653, 1687, 1691, 1692, 1828, 1829], "98211503e": 32, "35250241e": 32, "70497099e": 32, "51914724e": 32, "11157850e": 32, "68160681e": 32, "96398033e": 32, "81301483e": 32, "27431197e": 32, "95245111e": 32, "58548584e": 32, "92348357e": 32, "96013589e": 32, "38140990e": 32, "77323120e": 32, "75401074e": 32, "38434902e": 32, "53630122e": 32, "78672319e": 32, "16033604e": 32, "16709425e": 32, "97928429e": 32, "84241061e": 32, "93754039e": 32, "62085761e": 32, "13264786e": 32, "45146481e": 32, "22117088e": 32, "45300657e": 32, "29894099e": 32, "54637981e": 32, "28502224e": 32, "18348605e": 32, "95858135e": 32, "74998268e": 32, "11738223e": 32, "61637571e": 32, "60044136e": 32, "22197804e": 32, "19573432e": 32, "28763063e": 32, "80604570e": 32, "15082650e": 32, "23755790e": 32, "80442549e": 32, "11892271e": 32, "01631453e": 32, "45293701e": 32, "57732010e": 32, "74890954e": 32, "12639087e": 32, "17944495e": 32, "73999366e": 32, "19910621e": 32, "34613750e": 32, "05856470e": 32, "06156569e": 32, "74331205e": 32, "16335703e": 32, "99352025e": 32, "89676684e": 32, "63187216e": 32, "98853891e": 32, "80843797e": 32, "05133416e": 32, "96306366e": 32, "84558839e": 32, "16244440e": 32, "86679511e": 32, "09254306e": 32, "40297702e": 32, "45853447e": 32, "47044689e": 32, "02340177e": 32, "18162988e": 32, "86294081e": 32, "35175724e": 32, "81722550e": 32, "59358422e": 32, "62493620e": 32, "51557058e": 32, "62760819e": 32, "46531129e": 32, "21641008e": 32, "27325235e": 32, "57228279e": 32, "01869494e": 32, "98574910e": 32, "58903650e": 32, "14366102e": 32, "88067284e": 32, "91464995e": 32, "41773109e": 32, "56394704e": 32, "54283257e": 32, "37707110e": 32, "50252684e": 32, "44568313e": 32, "79721967e": 32, "64234764e": 32, "poisseiul": 32, "f_h": 32, "roll": [32, 36], "invert": [32, 130], "f_": 32, "h": [32, 35, 614, 827, 847, 851, 862, 869, 887], "44807352e": 32, "62608288e": 32, "80281146e": 32, "08128632e": 32, "37342357e": 32, "25838520e": 32, "76492864e": 32, "37848737e": 32, "46861207e": 32, "84739086e": 32, "69737370e": 32, "79229533e": 32, "52731032e": 32, "69733947e": 32, "66682564e": 32, "73720094e": 32, "45232974e": 32, "17794057e": 32, "76853154e": 32, "00035961e": 32, "51814229e": 32, "12890359e": 32, "91758064e": 32, "02234463e": 32, "92905340e": 32, "16530103e": 32, "67436042e": 32, "01179180e": 32, "67292598e": 32, "16413142e": 32, "75918167e": 32, "12156534e": 32, "35303752e": 32, "96260545e": 32, "82618428e": 32, "87269805e": 32, "94305541e": 32, "56071094e": 32, "96689921e": 32, "65062087e": 32, "139765": 32, "57251383": 32, "148421": 32, "28747922": 32, "146813": 32, "68080183": 32, "143099": 32, "02315292": 32, "140438": 32, "41559343": 32, "inclus": 32, "02315291": 32, "impact": [33, 130], "multiphas": [33, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 518], "motiv": 33, "ordinari": 33, "imbibit": 33, "imbibt": 33, "menisci": 33, "plan": 33, "degre": [33, 1714, 1715], "displac": [33, 874, 894, 1677], "increasingli": 33, "p_": [33, 894], "decreas": 33, "suction": 33, "stem": 33, "regardless": [33, 99, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230], "clear": [33, 40, 41, 42, 60, 61, 64, 74, 90, 91, 101, 120, 122, 132, 133, 134, 152, 153, 155, 165, 166, 167, 185, 186, 188, 199, 218, 220, 230, 231, 232, 250, 251, 253, 263, 264, 265, 283, 284, 286, 296, 297, 298, 316, 317, 319, 329, 330, 331, 349, 350, 353, 363, 364, 365, 383, 384, 386, 396, 397, 398, 416, 417, 419, 429, 430, 431, 449, 450, 483, 493, 510, 511, 558, 571, 942, 981, 1019, 1057, 1097, 1136, 1175, 1213, 1251, 1280, 1313, 1347, 1381, 1410, 1443, 1471, 1499, 1527, 1560, 1589, 1622, 1651], "inject": 33, "withdraw": 33, "connected_compon": [33, 1678, 1716], "drop_zero": [33, 916, 917, 955, 956, 993, 994, 1031, 1032, 1069, 1070, 1110, 1111, 1149, 1150, 1187, 1188, 1225, 1226], "51": 33, "57": 33, "65": [33, 847], "66": 33, "70": 33, "72": 33, "74": [33, 35], "81": 33, "82": 33, "84": 33, "87": 33, "88": 33, "92": 33, "94": 33, "95": 33, "101": [33, 923, 962, 1000, 1038, 1076, 1117, 1156, 1194, 1232], "102": 33, "103": 33, "104": 33, "106": 33, "107": 33, "108": 33, "114": 33, "116": 33, "117": 33, "118": 33, "123": 33, "125": 33, "127": 33, "129": 33, "132": 33, "137": 33, "138": 33, "142": 33, "145": 33, "152": 33, "155": 33, "156": 33, "157": 33, "158": 33, "159": 33, "163": [33, 891], "164": 33, "165": 33, "166": 33, "167": 33, "168": [33, 874], "169": 33, "170": 33, "171": 33, "172": 33, "173": 33, "174": 33, "175": 33, "176": 33, "177": [33, 729], "178": 33, "179": 33, "181": 33, "182": 33, "183": 33, "184": 33, "185": 33, "186": 33, "187": 33, "188": 33, "189": 33, "191": 33, "192": 33, "193": 33, "194": 33, "195": 33, "196": 33, "197": 33, "198": 33, "199": 33, "201": [33, 923, 962, 1000, 1038, 1076, 1117, 1156, 1194, 1232], "202": 33, "203": 33, "204": 33, "205": 33, "206": 33, "207": 33, "208": 33, "209": 33, "210": 33, "212": 33, "213": 33, "214": 33, "215": 33, "217": 33, "218": 33, "219": 33, "220": 33, "221": 33, "223": 33, "224": 33, "226": 33, "227": 33, "228": 33, "229": 33, "230": 33, "231": 33, "232": 33, "233": 33, "234": 33, "235": 33, "236": [33, 887], "237": 33, "238": 33, "239": 33, "240": [33, 862], "241": 33, "242": 33, "243": 33, "244": 33, "245": 33, "246": 33, "247": 33, "248": 33, "249": 33, "250": 33, "251": 33, "252": 33, "253": 33, "254": 33, "255": 33, "256": 33, "257": 33, "258": 33, "259": 33, "260": 33, "261": 33, "262": [33, 730], "263": 33, "264": 33, "265": 33, "266": 33, "267": 33, "268": 33, "269": 33, "270": 33, "271": 33, "272": 33, "273": [33, 827, 851, 858, 862, 869], "274": [33, 730], "275": 33, "276": 33, "277": 33, "278": 33, "279": 33, "280": 33, "281": 33, "282": 33, "283": 33, "284": 33, "285": 33, "286": 33, "287": 33, "288": 33, "289": 33, "290": [33, 708], "291": 33, "292": 33, "293": 33, "294": 33, "295": [33, 887], "296": 33, "cmap": [33, 1875, 1876], "cm": 33, "nipy_spectr": 33, "black": 33, "thoughout": 33, "speak": 33, "uninvad": [33, 99, 1678, 1686], "yellow": 33, "invaded_por": 33, "isin": 33, "viridi": [33, 1878], "yeild": [33, 988], "increaingli": 33, "beyond": [33, 820, 874, 890, 1703], "drainage_01": 33, "0x7f4d64d96160": 33, "trap": [33, 99, 123, 197, 221], "actaulli": 33, "histori": [33, 99], "inv_pattern": 33, "9000": 33, "grei": [33, 1880], "post": 33, "escap": [33, 99], "apply_trap": 33, "inf": [33, 99, 633, 1717, 1864], "set_outlet_bc": [33, 197], "froma": 33, "namedtupl": 33, "evacu": 33, "data2": 33, "plateau": 33, "rigor": [33, 896, 897], "fictiti": 33, "invaded": 33, "percoalt": 33, "event": 33, "increment": 33, "mainli": 33, "binari": [33, 130, 196, 482, 518, 614, 830, 1287], "heap": [33, 196], "queue": 33, "accessb": 33, "newli": [33, 1677, 1717], "pinv": 33, "alloc": 33, "tinv": 33, "9260": 33, "551831957262": 33, "9493": 33, "684102948075": 33, "8650": 33, "998219036304": 33, "381": 33, "2nd": [33, 773], "heapq": 33, "hq": 33, "heapifi": 33, "easilii": 33, "sequenti": 33, "care": 33, "heappop": 33, "p_new": 33, "p_next": 33, "t_new": 33, "t_next": 33, "401": [33, 858], "maintain": [33, 1712, 1800, 1818, 1838], "heappush": 33, "confirm": [33, 824], "lowest": [33, 1878], "compil": 33, "numba": [33, 196], "acceler": 33, "abovec": 33, "reset": [33, 196, 784], "contigu": 33, "untrap": 33, "vari": 33, "overlai": 33, "data_ip": 33, "film": 33, "crack": 33, "jump": 33, "rise": 33, "fall": 33, "spike": 33, "vallei": 33, "never": [33, 713], "envelop": 33, "peak": 33, "current_directori": 34, "getcwd": 34, "plotli": [34, 1878], "pip": [34, 36], "instal": [34, 626], "pane": 34, "consol": [34, 36, 627], "editor": 34, "wirefram": 34, "transpar": [34, 1875, 1876, 1877], "static": [34, 1732, 1734, 1745, 1747], "scatter": [34, 1876], "plot_notebook": 34, "rotat": [34, 1714, 1878], "zoom": [34, 1878], "hover": 34, "box": 34, "node_color": [34, 1878, 1879], "node_scal": [34, 1878], "sceenshot": 34, "compat": [34, 36, 1677, 1868, 1869], "export": [34, 619, 620, 626, 632, 1875], "vtp": [34, 632, 633], "paraveiw": 34, "project_to_vtk": 34, "file_nam": 34, "directori": [34, 36, 614, 1847, 1852], "path_to_fil": 34, "_vtk": 34, "filenam": [34, 612, 613, 614, 616, 617, 619, 620, 621, 624, 625, 626, 628, 630, 632, 633, 634, 1847, 1848, 1852, 1853], "paraview_net": 34, "parview": 34, "click": 34, "button": 34, "glyph": 34, "tool": [34, 708], "pipelin": [34, 790], "alphabet": 34, "shrink": 34, "celldatatopointdata": 34, "transpos": 34, "extractsurfac": 34, "proport": [34, 793, 1876], "icon": 34, "glyph1": 34, "solid": [34, 819, 889, 896, 897, 1718, 1719, 1874, 1875, 1876], "tube1": 34, "didn": 34, "public": 35, "gostick": [35, 708, 874, 890], "aghighi": 35, "hinebaugh": 35, "tranter": 35, "hoeh": 35, "ma": 35, "dai": 35, "spellaci": 35, "sharqawi": [35, 827, 851, 862, 869], "mh": 35, "bazylak": 35, "burn": 35, "lehnert": 35, "scienc": [35, 730], "engin": [35, 847], "2016": [35, 197, 891], "doi": [35, 197, 854, 856], "1109": 35, "mcse": 35, "heavili": 36, "stack": [36, 1715], "environ": 36, "anaconda": 36, "Be": 36, "frequent": [36, 896, 897], "publish": 36, "releas": 36, "month": 36, "latest": 36, "branch": 36, "git": 36, "com": 36, "pmeal": 36, "contributor": 36, "uninstal": 36, "command": 36, "clone": [36, 1676, 1679], "repo": 36, "local": 36, "sound": 36, "termin": 36, "cmd": 36, "cd": 36, "somewher": 36, "disk": [36, 621, 1695], "txt": 36, "resort": 36, "voila": 36, "date": [36, 1853], "gui": [36, 1838], "gitfork": 36, "gitkraken": 36, "program": 36, "menu": [36, 1838], "env": 36, "kwarg": [38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 461, 482, 491, 520, 537, 538, 586, 601, 602, 610, 789, 790, 820, 899, 910, 912, 949, 951, 988, 989, 1026, 1027, 1064, 1065, 1104, 1106, 1143, 1145, 1182, 1183, 1220, 1221, 1259, 1260, 1287, 1289, 1310, 1321, 1323, 1344, 1355, 1357, 1378, 1389, 1390, 1417, 1419, 1440, 1450, 1451, 1478, 1479, 1506, 1507, 1534, 1536, 1557, 1568, 1569, 1596, 1598, 1619, 1630, 1631, 1668, 1672, 1674, 1681, 1684, 1687, 1688, 1691, 1692, 1703, 1714, 1715, 1722, 1725, 1728, 1729, 1730, 1732, 1734, 1737, 1739, 1741, 1743, 1745, 1747, 1748, 1750, 1751, 1777, 1801, 1838, 1875, 1876], "reactivetransport": [38, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 394], "advect": [38, 327, 872], "iterative_prop": [38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 491], "bctype": [40, 60, 62, 74, 90, 101, 120, 121, 123, 132, 152, 165, 185, 199, 218, 219, 221, 230, 250, 263, 283, 296, 316, 329, 349, 351, 363, 383, 396, 416, 429, 449, 493, 510], "shallow": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 366, 399, 432, 465, 494, 522, 541, 576, 588, 915, 954, 992, 1030, 1068, 1109, 1148, 1186, 1224, 1263, 1293, 1327, 1361, 1393, 1423, 1454, 1482, 1510, 1540, 1572, 1602, 1634, 1753, 1765, 1779, 1792, 1810, 1823], "array_lik": [44, 58, 60, 61, 62, 63, 64, 65, 69, 76, 90, 91, 95, 103, 120, 122, 127, 136, 150, 152, 153, 154, 155, 156, 160, 169, 183, 185, 186, 187, 188, 189, 193, 201, 218, 220, 225, 234, 248, 250, 251, 252, 253, 254, 258, 267, 281, 283, 284, 285, 286, 287, 291, 300, 314, 316, 317, 318, 319, 320, 324, 333, 347, 348, 349, 350, 351, 352, 353, 354, 358, 367, 381, 382, 383, 384, 385, 386, 387, 391, 400, 414, 415, 416, 417, 418, 419, 420, 424, 433, 447, 449, 450, 451, 452, 456, 466, 483, 488, 495, 509, 510, 511, 515, 534, 542, 558, 562, 566, 571, 610, 708, 793, 796, 874, 910, 911, 916, 917, 918, 919, 920, 921, 922, 923, 933, 942, 946, 949, 950, 955, 956, 957, 958, 959, 960, 961, 962, 972, 981, 985, 988, 993, 994, 995, 996, 997, 998, 999, 1000, 1010, 1019, 1023, 1026, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1048, 1057, 1061, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1088, 1097, 1101, 1105, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1127, 1136, 1140, 1143, 1144, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1166, 1175, 1179, 1182, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1204, 1213, 1217, 1220, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1242, 1251, 1255, 1264, 1280, 1284, 1288, 1294, 1313, 1317, 1322, 1328, 1347, 1351, 1356, 1362, 1381, 1385, 1394, 1410, 1414, 1418, 1424, 1443, 1447, 1455, 1471, 1475, 1483, 1499, 1503, 1511, 1527, 1531, 1535, 1541, 1560, 1564, 1573, 1589, 1593, 1597, 1603, 1622, 1626, 1635, 1651, 1655, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1696, 1697, 1701, 1702, 1703, 1704, 1711, 1714, 1715, 1716, 1717, 1718, 1719, 1875, 1876, 1879], "union": [44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 466, 473, 474, 475, 478, 486, 495, 502, 503, 504, 507, 513, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 918, 919, 922, 923, 932, 933, 934, 935, 938, 944, 957, 958, 961, 962, 971, 972, 973, 974, 977, 983, 995, 996, 999, 1000, 1009, 1010, 1011, 1012, 1015, 1021, 1033, 1034, 1037, 1038, 1047, 1048, 1049, 1050, 1053, 1059, 1071, 1072, 1075, 1076, 1087, 1088, 1089, 1090, 1093, 1099, 1112, 1113, 1116, 1117, 1126, 1127, 1128, 1129, 1132, 1138, 1151, 1152, 1155, 1156, 1165, 1166, 1167, 1168, 1171, 1177, 1189, 1190, 1193, 1194, 1203, 1204, 1205, 1206, 1209, 1215, 1227, 1228, 1231, 1232, 1241, 1242, 1243, 1244, 1247, 1253, 1264, 1271, 1272, 1273, 1276, 1282, 1294, 1303, 1304, 1305, 1308, 1315, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1394, 1401, 1402, 1403, 1406, 1412, 1424, 1433, 1434, 1435, 1438, 1445, 1455, 1462, 1463, 1464, 1467, 1473, 1483, 1490, 1491, 1492, 1495, 1501, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1603, 1612, 1613, 1614, 1617, 1624, 1635, 1642, 1643, 1644, 1647, 1653, 1687, 1691, 1692, 1837], "exclusive_or": [44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 466, 473, 474, 475, 478, 486, 495, 502, 503, 504, 507, 513, 542, 549, 550, 551, 554, 560, 566, 567, 568, 569, 570, 572, 918, 919, 922, 923, 932, 933, 934, 935, 938, 944, 957, 958, 961, 962, 971, 972, 973, 974, 977, 983, 995, 996, 999, 1000, 1009, 1010, 1011, 1012, 1015, 1021, 1033, 1034, 1037, 1038, 1047, 1048, 1049, 1050, 1053, 1059, 1071, 1072, 1075, 1076, 1087, 1088, 1089, 1090, 1093, 1099, 1112, 1113, 1116, 1117, 1126, 1127, 1128, 1129, 1132, 1138, 1151, 1152, 1155, 1156, 1165, 1166, 1167, 1168, 1171, 1177, 1189, 1190, 1193, 1194, 1203, 1204, 1205, 1206, 1209, 1215, 1227, 1228, 1231, 1232, 1241, 1242, 1243, 1244, 1247, 1253, 1264, 1271, 1272, 1273, 1276, 1282, 1294, 1303, 1304, 1305, 1308, 1315, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1394, 1401, 1402, 1403, 1406, 1412, 1424, 1433, 1434, 1435, 1438, 1445, 1455, 1462, 1463, 1464, 1467, 1473, 1483, 1490, 1491, 1492, 1495, 1501, 1511, 1518, 1519, 1520, 1523, 1529, 1541, 1550, 1551, 1552, 1555, 1562, 1573, 1580, 1581, 1582, 1585, 1591, 1603, 1612, 1613, 1614, 1617, 1624, 1635, 1642, 1643, 1644, 1647, 1653, 1687, 1691, 1692], "criteria": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 466, 495, 542, 566, 918, 921, 957, 960, 995, 998, 1033, 1036, 1071, 1074, 1112, 1115, 1151, 1154, 1189, 1192, 1227, 1230, 1264, 1294, 1328, 1362, 1394, 1424, 1455, 1483, 1511, 1541, 1573, 1603, 1635, 1685, 1874], "subset": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 461, 466, 495, 519, 538, 542, 566, 602, 912, 918, 951, 957, 989, 995, 1027, 1033, 1065, 1071, 1106, 1112, 1145, 1151, 1183, 1189, 1221, 1227, 1260, 1264, 1289, 1294, 1323, 1328, 1357, 1362, 1390, 1394, 1419, 1424, 1451, 1455, 1479, 1483, 1507, 1511, 1536, 1541, 1569, 1573, 1598, 1603, 1631, 1635, 1873], "requrest": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 498, 525, 545, 927, 966, 1004, 1042, 1082, 1121, 1160, 1198, 1236, 1267, 1298, 1332, 1366, 1397, 1428, 1458, 1486, 1514, 1545, 1576, 1607, 1638], "pore1": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 498, 525, 545, 667, 682, 697, 927, 966, 1004, 1042, 1082, 1121, 1160, 1198, 1236, 1267, 1298, 1332, 1366, 1397, 1428, 1458, 1486, 1514, 1545, 1576, 1607, 1638], "pore2": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 498, 525, 545, 667, 682, 697, 927, 966, 1004, 1042, 1082, 1121, 1160, 1198, 1236, 1267, 1298, 1332, 1366, 1397, 1428, 1458, 1486, 1514, 1545, 1576, 1607, 1638], "addition": [51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 502, 549, 567, 629, 932, 971, 1009, 1047, 1087, 1126, 1165, 1203, 1241, 1271, 1303, 1337, 1371, 1401, 1433, 1462, 1490, 1518, 1550, 1580, 1612, 1642], "sought": [51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 502, 549, 567, 860, 920, 921, 922, 923, 932, 959, 960, 961, 962, 971, 997, 998, 999, 1000, 1009, 1035, 1036, 1037, 1038, 1047, 1073, 1074, 1075, 1076, 1077, 1078, 1087, 1114, 1115, 1116, 1117, 1126, 1153, 1154, 1155, 1156, 1165, 1191, 1192, 1193, 1194, 1203, 1229, 1230, 1231, 1232, 1241, 1271, 1303, 1337, 1371, 1401, 1433, 1462, 1490, 1518, 1550, 1580, 1612, 1642, 1687, 1691, 1692, 1693], "num_throat": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 474, 503, 550, 568, 916, 917, 934, 955, 956, 973, 993, 994, 1011, 1031, 1032, 1049, 1069, 1070, 1089, 1110, 1111, 1128, 1149, 1150, 1167, 1187, 1188, 1205, 1225, 1226, 1243, 1272, 1304, 1338, 1372, 1402, 1434, 1463, 1491, 1519, 1551, 1581, 1613, 1643], "num_por": [53, 85, 112, 145, 178, 210, 243, 276, 309, 342, 376, 409, 442, 461, 475, 504, 538, 551, 569, 602, 912, 935, 951, 974, 989, 1012, 1027, 1050, 1065, 1090, 1106, 1129, 1145, 1168, 1183, 1206, 1221, 1244, 1260, 1273, 1289, 1305, 1323, 1339, 1357, 1373, 1390, 1403, 1419, 1435, 1451, 1464, 1479, 1492, 1507, 1520, 1536, 1552, 1569, 1582, 1598, 1614, 1631, 1644], "lifo": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 506, 530, 553, 582, 597, 937, 976, 1014, 1052, 1092, 1131, 1170, 1208, 1246, 1275, 1307, 1341, 1375, 1405, 1437, 1466, 1494, 1522, 1554, 1584, 1616, 1646, 1759, 1771, 1785, 1851], "keyerror": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 506, 530, 553, 581, 582, 596, 597, 937, 976, 1014, 1052, 1092, 1131, 1170, 1208, 1246, 1275, 1307, 1341, 1375, 1405, 1437, 1466, 1494, 1522, 1554, 1584, 1616, 1646, 1758, 1759, 1770, 1771, 1784, 1785, 1832, 1833, 1850, 1851], "indici": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 507, 554, 570, 938, 977, 1015, 1053, 1078, 1093, 1132, 1171, 1209, 1247, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647], "wildcard": [56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 454, 478, 486, 507, 513, 554, 560, 570, 572, 938, 944, 977, 983, 1015, 1021, 1053, 1059, 1093, 1099, 1132, 1138, 1171, 1177, 1209, 1215, 1247, 1253, 1276, 1282, 1308, 1315, 1342, 1349, 1376, 1383, 1406, 1412, 1438, 1445, 1467, 1473, 1495, 1501, 1523, 1529, 1555, 1562, 1585, 1591, 1617, 1624, 1647, 1653], "compound": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 507, 554, 570, 847, 938, 977, 1015, 1053, 1093, 1132, 1171, 1209, 1247, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647], "opt": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 507, 554, 570, 938, 977, 1015, 1053, 1093, 1132, 1171, 1209, 1247, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647], "verbos": [59, 151, 184, 249, 282, 315, 448, 609, 1868, 1869], "solutioncontain": [59, 151, 184, 249, 282, 315, 448], "bcvalu": [60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 510], "wrapper": [60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 510, 607, 820, 890, 891, 1321, 1355, 1658], "remvo": [60, 90, 120, 121, 123, 152, 185, 218, 219, 221, 250, 283, 316, 349, 383, 416, 449, 510], "remaind": [61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 511, 558, 571, 942, 981, 1019, 1057, 1097, 1136, 1175, 1213, 1251, 1280, 1313, 1347, 1381, 1410, 1443, 1471, 1499, 1527, 1560, 1589, 1622, 1651], "intact": [61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 511, 558, 571, 942, 981, 1019, 1057, 1097, 1136, 1175, 1213, 1251, 1280, 1313, 1347, 1381, 1410, 1443, 1471, 1499, 1527, 1560, 1589, 1622, 1651], "outflow": [62, 351], "set_bc": [62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452], "conditon": [63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 352, 354, 385, 387, 418, 420, 451, 452], "dirichlet": [65, 156, 189, 254, 287, 320, 354, 387, 420, 452], "omit": [67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 486, 513, 560, 572, 916, 917, 944, 955, 956, 983, 993, 994, 1021, 1031, 1032, 1059, 1069, 1070, 1099, 1110, 1111, 1138, 1149, 1150, 1177, 1187, 1188, 1215, 1225, 1226, 1253, 1282, 1315, 1349, 1383, 1412, 1445, 1473, 1501, 1529, 1562, 1591, 1624, 1653], "inidic": [67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 486, 513, 560, 572, 944, 983, 1021, 1059, 1099, 1138, 1177, 1215, 1253, 1282, 1315, 1349, 1383, 1412, 1445, 1473, 1501, 1529, 1562, 1591, 1624, 1653], "foundat": 72, "themselv": [99, 820, 922, 961, 999, 1037, 1075, 1116, 1155, 1193, 1231], "pressu": 119, "defend": [123, 221], "void": 130, "confin": 130, "simualt": 130, "oppos": 130, "n_": 130, "lineartransport": [163, 228, 294], "fourierconduct": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "speed": 196, "upon": [196, 461, 462, 538, 539, 602, 603, 712, 763, 789, 912, 913, 951, 952, 989, 990, 1027, 1028, 1065, 1066, 1106, 1107, 1145, 1146, 1183, 1184, 1221, 1222, 1260, 1261, 1289, 1290, 1323, 1324, 1357, 1358, 1390, 1391, 1419, 1420, 1451, 1452, 1479, 1480, 1507, 1508, 1536, 1537, 1569, 1570, 1598, 1599, 1631, 1632], "effici": 196, "masson": 197, "ninf": 197, "alg": [197, 1875, 1876], "1016": 197, "cageo": 197, "003": 197, "ionic": 228, "role": 228, "ohmicconduct": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "phenomena": 261, "signifi": [348, 382, 415, 509, 1874], "instanti": [348, 382, 415, 509, 519, 1801, 1838], "intermedi": [348, 382, 415, 509, 610], "transientsolut": [348, 382, 415, 509, 610], "transientfickiandiffus": [362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "transientreactivetransport": [395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "obj": [461, 462, 538, 539, 602, 603, 912, 913, 951, 952, 989, 990, 1027, 1028, 1065, 1066, 1106, 1107, 1145, 1146, 1183, 1184, 1221, 1222, 1260, 1261, 1289, 1290, 1320, 1323, 1324, 1354, 1357, 1358, 1388, 1390, 1391, 1419, 1420, 1451, 1452, 1479, 1480, 1507, 1508, 1536, 1537, 1567, 1569, 1570, 1598, 1599, 1629, 1631, 1632, 1801, 1803, 1804, 1857, 1868, 1869], "immedi": [461, 538, 602, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631], "discard": [461, 538, 602, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631], "exclud": [480, 556, 604, 940, 979, 1017, 1055, 1095, 1134, 1173, 1211, 1249, 1278, 1310, 1344, 1378, 1408, 1440, 1469, 1497, 1525, 1557, 1587, 1619, 1649, 1744], "constitu": 480, "domain1": [481, 557, 605, 941, 980, 1018, 1056, 1096, 1135, 1174, 1212, 1250, 1279, 1312, 1346, 1380, 1409, 1442, 1470, 1498, 1526, 1559, 1588, 1621, 1650], "partit": [482, 518, 1665], "interfac": [482, 730, 874, 887, 894], "doesn": [484, 1874], "transientmultiphys": [492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517], "simultaneoulsi": 509, "pore_diffus": [518, 877, 878, 879, 880], "throat_diffus": [518, 877, 878, 879, 880], "size_factor": [518, 682, 697, 877, 878, 879, 880, 882, 883, 885, 886, 907, 908], "partition_coef_glob": 518, "partition_coef": 518, "global": [518, 922, 923, 961, 962, 999, 1000, 1037, 1038, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1691, 1692], "dict_blurb": [518, 883, 889], "return_arr": [518, 883], "document": [518, 618, 1726, 1731, 1733, 1740, 1744, 1746, 1875, 1876], "subdomain": 519, "geomeri": 519, "boss": 519, "geom1": 519, "mixin": [519, 537, 565], "labelmixin": [566, 567, 568, 569, 570, 571, 572], "hold": [573, 618, 1804], "modelwrapp": [574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585], "unrepresent": [581, 596, 1758, 1770, 1784, 1850], "modelsmixin": 586, "dependency_list": [586, 589, 591], "modelsdict": [587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600], "intra": 589, "inter": 589, "unresolv": 590, "shell": [591, 1719], "map": [591, 615, 820, 1740, 1763], "drawn": [591, 813, 1875], "frame": 591, "modelsmixin2": [602, 603, 604, 605], "atol": [609, 1666], "rtol": [609, 1666, 1703, 1865, 1874], "linsolv": 609, "rk45": 609, "scipyrk45": 610, "od": 610, "dy": 610, "dt": [610, 729], "timespan": 610, "ex": 610, "t_i": 610, "jgf": [613, 621], "onto": 613, "voxel_s": 614, "3dma": 614, "np2th": 614, "th2np": 614, "resolut": 614, "eac": 614, "dimens": [614, 1026, 1064, 1220, 1677, 1682, 1695, 1703, 1714, 1874], "rocknam": 614, "th2pn": 614, "human": [614, 627], "brent": 614, "lindquist": 614, "medial": 614, "thin": [614, 1875], "skeleton": 614, "lee": [614, 861], "oh": 614, "venkatarangan": 614, "shin": 614, "prodanov": 614, "microtomographi": 614, "suni": 614, "stoni": 614, "brook": 614, "2005": [614, 862], "undirect": [615, 622, 1681, 1720, 1723], "gap": 615, "pore_": 615, "prepend": [615, 629], "central": [615, 716, 766, 801, 1703], "1x3": 615, "adj": 615, "throat_": 615, "embed": 615, "pergeo": 616, "avizo": 616, "pickl": [617, 1870], "dat": 618, "_node1": 618, "statoil": [618, 887, 1677], "maxim": 618, "ball": 618, "imperi": 618, "colleg": 618, "london": 618, "dataset": 618, "download": 618, "websit": 618, "header": 618, "theses": 618, "rectangular": [619, 736, 753, 756, 771, 780], "circular": [619, 718, 753, 755, 887, 1026, 1220, 1695, 1703, 1718], "comsol": 619, "mesh": [619, 626], "delim": [623, 629, 631], "explicit": 625, "salom": 625, "maxsiz": [626, 1795, 1813], "auto": [626, 1870], "fileformat": 626, "stl": 626, "logger_level": 626, "holder": [626, 633], "maximum": [626, 711, 713, 759, 762, 787, 788, 889, 921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230, 1681, 1709], "finner": 626, "slower": 626, "gmsh": 626, "fluent": 626, "ngsolv": 626, "logger": 626, "netgen": 626, "triangl": [626, 730, 916, 955, 993, 1031, 1069, 1110, 1149, 1187, 1225], "tessel": [626, 874, 1026, 1064, 1220, 1695, 1723], "cad": 626, "slow": [626, 820, 922, 961, 999, 1037, 1075, 1077, 1078, 1116, 1155, 1193, 1231, 1687, 1691, 1692], "hdf5": [627, 630], "flag": [627, 922, 961, 999, 1037, 1075, 1116, 1155, 1193, 1231, 1800, 1818], "categorize_bi": 629, "organ": 629, "net_01": 629, "hierarch": 629, "shorter": 631, "pvsm": 632, "fill_nan": 633, "fill_inf": 633, "vtk": 633, "rectangl": [638, 643, 644, 657, 662, 668, 669, 671, 676, 683, 684, 686, 691, 698, 699, 740, 745, 751, 752], "ideal_ga": 647, "0134": 647, "vdm": [647, 830], "gas_mixture_fesg": 647, "00422791": 647, "89606e": 647, "56383e": 647, "82082e": 647, "51815e": 647, "48553e": 647, "11409e": 647, "14280": 650, "47004": 650, "56254": 650, "00028": 650, "98691": 650, "0170967": 650, "3862e": 650, "00355837": 650, "00131e": 650, "23684e": 650, "1684e": 650, "generic_diffus": [653, 654], "generic_electr": 654, "generic_therm": 654, "symmetri": [657, 662, 665, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 691, 694, 698, 699, 701, 705, 896, 897], "cone": [658, 660, 663, 672, 674, 677, 687, 689, 692, 741, 743, 746], "throat_coord": [660, 661, 662, 663, 664, 665, 674, 675, 676, 677, 678, 679, 689, 690, 691, 692, 693, 694, 743, 744, 745, 746, 747, 748], "centroid": [660, 661, 662, 663, 664, 665, 674, 675, 676, 677, 678, 679, 689, 690, 691, 693, 694, 732, 738, 743, 745, 746, 747, 748, 1064, 1220, 1700, 1711], "pyramid": [661, 664, 666, 675, 678, 681, 690, 693, 696, 744, 747, 749], "trapezoid": [662, 665, 669, 676, 679, 684, 691, 694, 699, 745, 748, 752], "pore_coord": [663, 664, 665, 746, 747, 748], "pore_aspect": [673, 683, 688, 698], "throat_aspect": [673, 683, 688, 698], "aspect": [673, 683, 688, 698, 729, 1858], "divis": [680, 695, 889], "s_": [682, 697, 894, 896, 897, 898, 900, 901, 902, 903, 904, 905], "ndarri": [704, 708, 720, 1688], "spatailli": [706, 708], "sent": [707, 715, 765, 796, 798, 919, 923, 958, 962, 996, 1000, 1034, 1038, 1072, 1076, 1113, 1117, 1152, 1156, 1190, 1194, 1228, 1232], "strel": 708, "strength": 708, "extent": 708, "achiev": 708, "geoemtri": 708, "appproach": 708, "anistrop": 708, "ga": [708, 823, 829, 830, 836, 853, 854, 864, 865, 866, 874, 1321, 1506], "fuel": 708, "electrod": [708, 896, 897], "fibrou": [708, 874], "polym": 708, "electrolyt": [708, 896, 897], "membran": 708, "v173": 708, "pp277": 708, "pore_shap": [710, 1874], "adopt": [711, 759, 762, 787, 788], "eed": [712, 714, 716, 763, 764, 766, 789, 794, 801], "uninti": [712, 763, 789], "stats_obj": [712, 763, 789], "0001": [712, 714, 716, 763, 764, 766, 789, 794, 801, 899], "fixed_diamet": 713, "touch": [713, 889], "encompass": 713, "closer": 713, "zeno": 713, "cut": 713, "stddev": [714, 764, 794], "deviat": [714, 764, 794], "inner": [714, 716, 764, 766, 794, 801, 1718, 1719], "width": [716, 766, 801], "ndndarrai": [716, 766, 801], "throat_cross_sectional_area": [718, 719, 720, 721], "surface_area": [720, 769], "crude": 720, "curvatur": [720, 874], "neighbour": 725, "throat_perimet": [729, 730, 770], "perimet": [729, 730, 754, 755, 756, 770, 1713], "throat_area": [729, 730, 761, 777, 880, 887], "indiamet": 729, "jenkin": 729, "rao": 729, "elipt": 729, "pt": 729, "ellipt": [729, 889], "powder": 729, "technologi": 729, "pp": [729, 730], "1984": 729, "mason": [730, 874, 890], "morrow": [730, 874, 890], "mortensen": 730, "liquid": [730, 819, 824, 825, 831, 850, 855, 856, 857, 860, 861, 868, 1355, 1568], "irregular": 730, "colloid": [730, 874, 887], "1991": 730, "throat_centroid": 738, "endpoint": 738, "ignore_nan": [759, 762, 787, 788], "throat_shap": [761, 1874], "cirlc": 761, "sqaur": 761, "unit_vec": 773, "impicit": 773, "1st": 773, "assu": [774, 775, 776, 780], "reprsent": [775, 776, 777, 780], "hemispher": 778, "cap": [778, 1287], "placehold": 782, "useless": 784, "denomin": 786, "keyward": 790, "thermofluid": [792, 796], "corel": 792, "bin_cent": 793, "bin_height": 793, "skip": 796, "nth": 796, "thresh": [807, 812], "coincid": [807, 812], "furthest": 808, "closest": 809, "occurr": [811, 1793, 1798, 1811, 1816], "gabriel": 813, "subgraph": 813, "fuction": 813, "letsou_stiel": 820, "default_argmap": 820, "cvm": 820, "mixtur": [820, 824, 830, 842, 849, 853, 855, 864, 867, 868, 1287, 1288, 1291, 1297, 1299, 1311, 1320, 1321, 1322, 1325, 1331, 1333, 1345, 1354, 1355, 1356, 1359, 1365, 1367, 1379, 1388, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1478, 1506, 1534, 1535, 1538, 1544, 1546, 1558, 1567, 1568, 1596, 1597, 1600, 1606, 1608, 1620, 1629, 1862, 1863], "3e": 820, "9e": 820, "trail": 820, "iterpret": 820, "mix": [820, 824, 842, 867, 887], "agre": [820, 896, 897], "corrospod": [824, 825], "costald": [824, 825], "kg": [824, 826, 827, 845, 849, 851, 858, 862, 869], "m3": [824, 826, 831, 849], "mw_": 824, "mw_i": 824, "costald_mixtur": 824, "accentr": [825, 836, 854, 856, 861, 868], "dimensionless": [825, 836, 854, 856, 861, 868], "ndrrai": 826, "seawat": [827, 851, 858, 862, 869], "atmospher": [827, 851, 858, 869], "eq": [827, 851, 869, 896, 897], "boil": [827, 831, 850, 851, 854, 856, 857, 858, 869], "salt": [827, 845, 851, 858, 862, 869], "ppt": [827, 851, 858, 862, 869], "thousand": [827, 851, 858, 862, 869], "453": [827, 858, 869], "pct": 827, "lienhard": [827, 851, 862, 869], "zubair": [827, 851, 862, 869], "desalin": [827, 851, 858, 862, 869], "treatment": [827, 851, 862, 869], "2010": [827, 851, 862, 869], "chapman": 829, "enskog": 829, "molar_diffusion_volum": 830, "fuller": 830, "dij": 830, "gid": 830, "chromatogr": 830, "1965": 830, "schettler": 830, "ind": [830, 1683, 1685, 1687, 1688, 1691, 1692], "eng": 830, "chem": 830, "1966": 830, "enslei": 830, "3679": 830, "1969": 830, "vms_at_tb": 831, "sigmas_at_tb": 831, "tyn": 831, "calu": 831, "dilut": 831, "principl": 831, "kinemat": 831, "cp": [833, 835], "linearli": [833, 835], "trc_gas_data": 834, "capac": 836, "weighted_averag": 838, "logarithm": [842, 867, 1299, 1333, 1367, 1429, 1546, 1608], "rule": [842, 867, 1862, 1863], "ln": [842, 867, 903, 1299, 1333, 1367, 1429, 1546, 1608], "z_i": [842, 867, 1299, 1333, 1367, 1429, 1546, 1608], "expon": [842, 867, 894, 896, 897, 905, 1299, 1333, 1367, 1429, 1546, 1608], "guarante": 843, "conc": 845, "nacl": 845, "henri": 847, "gaseou": 847, "dissolv": 847, "kpx": 847, "atm": 847, "yaw": 847, "carl": 847, "solubl": 847, "sulfur": 847, "tradit": 847, "2003": 847, "liqiud": 849, "vapor": [849, 850, 860, 861, 862], "winterfeld": 849, "scriven": 849, "davi": 849, "brock": 850, "bird": 850, "313": 851, "percent": [851, 858, 862, 869], "wassiljew": 853, "hern": [853, 864], "zipper": [853, 864], "thermal": [854, 855, 856, 857, 858, 907, 908], "conductivti": 854, "gharagheizi": [854, 856, 865], "1002": [854, 856], "aic": [854, 856], "13938": [854, 856], "dippr9h": 855, "sato": 857, "jamieson": 858, "tudhop": 858, "393": 858, "1970": 858, "antoin": 860, "rpp": 860, "kesler": 861, "raoult": 862, "473": 862, "ashra": 862, "handbook": 862, "fundament": 862, "letsou": 868, "pore_pressur": [872, 880], "throat_hydraulic_conduct": [872, 880], "throat_diffusive_conduct": 872, "discret": [872, 1703], "diffuvs": 872, "impos": 872, "conduit_shape_factor": 872, "shape_factor": [872, 887], "r_toroid": [874, 890, 891], "toroid": [874, 889, 890, 891], "converg": [874, 890], "diverg": [874, 890], "meniscu": [874, 889, 890], "apex": [874, 890], "context": [874, 890], "sci": [874, 887], "1994": 874, "pemfc": 874, "voronoi": [874, 1064, 1077, 1078, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1723], "electrochem": [874, 896, 897], "soc": 874, "f731": 874, "2013": 874, "pore_temperatur": 878, "throat_temperatur": 878, "knudsen": 878, "molecular_weigth": 878, "pore_area": [880, 887], "taylor": 880, "ari": 880, "pore_conduct": [882, 883, 907, 908], "pore_viscos": [885, 886, 887], "throat_viscos": [885, 886, 887], "pore_shape_factor": 887, "throat_shape_factor": 887, "conduit_length": 887, "adapt": 887, "a_p": 887, "r_p": 887, "sf_p": 887, "theorat": 887, "p_p": 887, "4\u03c0": 887, "t_a": 887, "sf_t": 887, "t_p": 887, "valvatn": 887, "martin": 887, "blunt": 887, "2004": [887, 896, 897], "patzek": 887, "silin": 887, "2001": 887, "noncircular": 887, "creep": 887, "304": 887, "profile_equ": 889, "target_pc": [889, 890, 891], "num_point": [889, 890, 891, 1695], "throat_scale_a": 889, "scale_a": 889, "throat_scale_b": 889, "scale_b": 889, "touch_length": [889, 890, 891], "sinusoid": 889, "send": [889, 1694], "men": 889, "profil": [889, 890, 891], "assess": 889, "minima": 889, "maxima": 889, "perpendicular": 889, "protrud": 889, "therfor": 889, "po": 889, "xpo": 889, "rx": 889, "fa": 889, "fb": 889, "throatrad": 889, "fill_angl": 889, "alpha_min": 889, "alpha_max": 889, "c2x": 889, "gamma": [889, 896, 897], "cap_angl": 889, "rad_curv": 889, "men_data": 889, "men_max": 889, "toru": 890, "quarter": 891, "wavelength": 891, "amplitud": 891, "arctan": 891, "forner": 891, "cuenca": 891, "pefc": 891, "wettabl": 891, "ec": 891, "f1038": 891, "f1048": 891, "throat_occup": 893, "pore_occup": 893, "strict": 893, "agress": 893, "unoccupi": [893, 1716, 1722], "loos": 893, "pc_star": 894, "swp_star": 894, "eta": 894, "residu": 894, "i0_ref": [896, 897], "c_ref": [896, 897], "reaction_area": [896, 897], "solid_voltag": [896, 897], "electrolyte_voltag": [896, 897], "open_circuit_voltag": [896, 897], "butler": [896, 897], "volmer": [896, 897], "redox": [896, 897], "promot": [896, 897], "cathod": [896, 897], "theoret": [896, 897], "justif": [896, 897], "voltag": [896, 897], "equilibrium": [896, 897], "butler_volmer_voltag": 896, "former": [896, 897, 1801], "shouldn": [896, 897], "faradai": [896, 897], "book": [896, 897], "cite": [896, 897], "i_": [896, 897], "0ref": [896, 897], "rxn": [896, 897], "rt": [896, 897], "eta_": [896, 897], "phi_": [896, 897], "met": [896, 897], "u_": [896, 897], "electrostat": [896, 897], "consentr": [896, 897], "john": [896, 897], "newman": [896, 897], "karen": [896, 897], "thoma": [896, 897], "alyea": [896, 897], "wilei": [896, 897], "son": [896, 897], "chapter8": [896, 897], "electrolyte_concentr": 897, "rate_info": [897, 905], "butler_volmer_conc": 897, "a5": [898, 901, 902, 903], "a6": [898, 901], "eqn": 899, "sympi": 899, "evalu": [899, 1291, 1325, 1359, 1421, 1538, 1600], "sympifi": 899, "live": 899, "IF": 899, "referenc": 899, "st": 899, "arg_map": 899, "log_": 901, "pore_thermal_conduct": 908, "throat_thermal_conduct": 908, "overrid": [910, 949, 1026, 1064, 1104, 1143, 1182, 1220], "identif": [910, 949, 1026, 1064, 1104, 1143, 1182, 1220, 1717], "belon": [910, 1143], "corner_sit": [910, 1143], "body_sit": 910, "incid": [910, 917, 928, 949, 956, 967, 988, 994, 1005, 1026, 1032, 1043, 1064, 1070, 1083, 1104, 1111, 1122, 1143, 1150, 1161, 1182, 1188, 1199, 1220, 1226, 1237], "mirror": [916, 955, 993, 1031, 1069, 1110, 1149, 1187, 1225], "wise": [916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "slice": [916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "algebra": [916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "routin": [916, 917, 926, 928, 955, 956, 965, 967, 993, 994, 1003, 1005, 1031, 1032, 1041, 1043, 1069, 1070, 1081, 1083, 1110, 1111, 1120, 1122, 1149, 1150, 1159, 1161, 1187, 1188, 1197, 1199, 1225, 1226, 1235, 1237], "sparse_arrai": [917, 956, 994, 1032, 1070, 1111, 1150, 1188, 1226], "cousin": [917, 956, 994, 1032, 1070, 1111, 1150, 1188, 1226], "1d": [919, 922, 923, 933, 958, 961, 962, 972, 996, 999, 1000, 1010, 1034, 1037, 1038, 1048, 1072, 1075, 1076, 1088, 1113, 1116, 1117, 1127, 1152, 1155, 1156, 1166, 1190, 1193, 1194, 1204, 1228, 1231, 1232, 1242, 1682], "arra": [919, 958, 996, 1034, 1072, 1113, 1152, 1190, 1228], "minu": [919, 922, 923, 933, 958, 961, 962, 972, 996, 999, 1000, 1010, 1034, 1037, 1038, 1048, 1072, 1075, 1076, 1088, 1113, 1116, 1117, 1127, 1152, 1155, 1156, 1166, 1190, 1193, 1194, 1204, 1228, 1231, 1232, 1242, 1687, 1691, 1692], "isnan": [920, 959, 997, 1035, 1073, 1114, 1153, 1191, 1229], "include_input": [921, 922, 960, 961, 998, 999, 1036, 1037, 1074, 1075, 1115, 1116, 1154, 1155, 1192, 1193, 1230, 1231, 1692], "radial": [921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230], "toplog": [921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230], "whom": [921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230], "nearbi": [921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230], "compress": [922, 961, 999, 1037, 1075, 1116, 1155, 1193, 1231, 1687, 1691, 1692], "unflatten": [922, 961, 999, 1037, 1075, 1116, 1155, 1193, 1231, 1687, 1691, 1692], "bond": [923, 962, 1000, 1038, 1076, 1117, 1156, 1194, 1232, 1678, 1686, 1687, 1690, 1704, 1716, 1722], "sp": [926, 965, 1003, 1041, 1081, 1120, 1159, 1197, 1235], "uncertain": [933, 972, 1010, 1048, 1088, 1127, 1166, 1204, 1242], "reduce_coordin": 949, "permit": 949, "disconnect": [949, 1722, 1858], "kept": 988, "cubictempl": [989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025], "across": [1026, 1064, 1220, 1713], "unreason": 1026, "vertic": [1026, 1064, 1220], "outsid": [1026, 1064, 1220, 1694, 1703], "truli": [1026, 1220], "clean": [1026, 1220], "outer": [1026, 1220, 1713, 1718, 1719], "artifact": [1026, 1220], "geolog": [1026, 1220], "flexibl": [1026, 1220], "relax": [1064, 1220], "hull": [1064, 1077, 1220, 1700], "convex": [1077, 1700], "metod": 1077, "facet": 1078, "ridg": 1078, "face_sit": 1143, "head": [1182, 1862, 1863], "num_neighbor": 1182, "construct": 1182, "preset": [1259, 1389, 1630], "lennard": 1287, "jone": 1287, "binaryga": [1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320], "healthdict": [1291, 1325, 1359, 1421, 1538, 1600, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1857], "uniti": [1291, 1325, 1359, 1421, 1538, 1600], "healthi": [1291, 1325, 1359, 1421, 1538, 1600, 1751, 1857], "weigth": [1299, 1333, 1367, 1429, 1546, 1608], "getter": [1320, 1354, 1388, 1567, 1629], "multicompon": 1417, "genericnetwork": 1478, "tabul": 1478, "contant": 1478, "gas_mix": 1534, "liq_mix": 1596, "standardliquidmixtur": [1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629], "basesolv": 1660, "directsolv": 1662, "tol": [1663, 1665, 1669, 1671, 1709], "iterativesolv": 1664, "petsc": [1665, 1666], "parallel": 1665, "mpirun": 1665, "num_cor": 1665, "petsclinearsolv": 1666, "solver_typ": 1666, "cg": [1666, 1671], "precondion": 1666, "jacobi": 1666, "vec": 1666, "destroi": 1666, "csr_matrix": 1666, "conjug": 1666, "precondition": 1666, "precondit": 1666, "factorization_typ": 1666, "lu": 1666, "pypardiso": 1667, "pardisospsolv": 1668, "pyamg": 1669, "ruge_stuben_solv": 1669, "pyamgrugestubensolv": 1670, "scipycg": 1672, "scipyspsolv": 1674, "move_to": 1676, "apply_label": 1676, "clone_por": 1676, "translat": [1676, 1717], "cl": 1677, "occupied_bond": [1678, 1722], "acccord": [1678, 1716], "parent": 1679, "sibl": 1679, "pores1": 1680, "pores2": 1680, "consecut": [1680, 1711], "member": [1680, 1826, 1833], "batch": 1680, "force_triu": 1681, "drop_diag": 1681, "drop_dup": 1681, "drop_neg": 1681, "dim": 1682, "headless": [1683, 1858], "dropped_edg": 1683, "render": 1683, "invalid": [1683, 1727, 1749], "p_label": 1686, "t_label": 1686, "inds_1": 1689, "inds_2": 1689, "somtim": [1691, 1692], "pore_pair": 1693, "shortest": 1693, "node_path": 1693, "edge_path": 1693, "dijkstra": 1693, "triangul": [1694, 1720], "top_surfac": 1694, "sufac": 1694, "fail": [1694, 1804], "domain_s": [1695, 1713], "rectilinear": 1695, "height": [1695, 1703, 1718], "smooth": 1695, "excess": 1695, "cart2sph": 1695, "cart2cyl": 1695, "enclos": [1700, 1729], "xyz": 1700, "pores_bc": 1701, "coplanar": 1702, "permiss": 1703, "upward": 1703, "threshold": 1703, "find_surface_por": 1709, "donor": [1710, 1717], "preferr": 1711, "continu": 1711, "find_nearby_por": 1711, "relect": 1713, "relfect": 1713, "transform": [1714, 1715], "copi": [1714, 1715, 1840, 1842], "shear_coord": 1714, "shear": 1715, "ai": 1715, "az": 1715, "bx": 1715, "bz": 1715, "cx": 1715, "cy": 1715, "rotate_coord": 1715, "aj": 1715, "occupied_sit": [1716, 1722], "p_network": 1717, "p_donor": 1717, "len_max": 1717, "label_suffix": 1717, "label_stitch": 1717, "recipi": 1717, "defaul": 1717, "recipienet": 1717, "disc": 1718, "annulu": 1718, "demarc": [1718, 1719], "tri": 1720, "unweight": [1720, 1723], "b_label": 1722, "s_label": 1722, "bond_percol": 1722, "site_percol": 1722, "vor": 1723, "processor": 1725, "docor": [1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750], "shall": [1726, 1731, 1733, 1736, 1738, 1742, 1744, 1746], "dedent": [1726, 1744, 1746, 1749], "with_ind": 1726, "indent": [1726, 1749], "stacklevel": [1727, 1749], "safe_modul": [1727, 1749], "encount": [1727, 1749], "deprec": [1728, 1730, 1732, 1734, 1737, 1739, 1741, 1743, 1745, 1747, 1748, 1750], "base_kei": [1729, 1731, 1733, 1744, 1746], "no_arg": 1729, "no_kwarg": 1729, "no_args_kwarg": 1729, "similarili": 1729, "classmethod": 1730, "docrep": [1730, 1732, 1734, 1744, 1745, 1746, 1747], "delete_kwarg": [1730, 1740], "no_": 1731, "original_kei": [1731, 1744], "no_param1": 1731, "param2": [1731, 1744], "keep_param": [1731, 1740, 1745, 1746], "delete_typ": [1731, 1734, 1740, 1746], "delete_param": [1732, 1733, 1740, 1744], "out_kei": [1733, 1746], "keep_typ": [1733, 1740, 1744, 1747], "get_sect": [1735, 1741, 1744, 1746], "descriptor": 1735, "summary_ext": 1736, "get_extended_summari": [1737, 1738], "get_summari": [1738, 1743], "full_desc": 1738, "get_full_descript": 1739, "exctract": 1740, "guidelin": 1740, "param_like_sect": 1740, "text_sect": 1740, "split": 1740, "newlin": [1740, 1742], "napoleon": 1740, "save_docstr": 1740, "basicli": 1742, "param1": 1744, "reus": [1744, 1746], "docstringprocessor": [1744, 1746], "do_someth": [1744, 1746], "That": [1744, 1746], "doc_kei": [1744, 1746], "do_less": [1744, 1746], "my": [1744, 1746], "__doc__": [1744, 1746], "no_b": 1744, "int_onli": 1746, "no_float": 1746, "get_docstr": 1748, "unhealthi": 1751, "delimit": 1763, "brief": [1763, 1841], "to_dict": 1763, "unravel": 1763, "nesteddict": [1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776], "dct": 1773, "nicer": 1777, "item1": [1777, 1789], "item2": [1777, 1789], "item3": [1777, 1789], "item4": 1777, "printabledict": [1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788], "temp": 1789, "printablelist": [1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800], "sy": [1795, 1813], "valueerror": [1795, 1798, 1813, 1816], "indexerror": [1797, 1815], "IN": [1799, 1817], "ascend": [1800, 1818], "modifi": [1800, 1818], "stabl": [1800, 1818], "moreov": 1801, "original_uuid": 1803, "456": 1804, "simplelist": 1806, "null": 1829, "highest": 1838, "adminstr": 1838, "singleton": 1838, "wherev": 1838, "record": 1838, "renam": 1847, "load_workspac": 1847, "saved_fil": [1847, 1852], "networkssaved_fil": [1847, 1852], "pathlib": [1847, 1852], "save_workspac": 1852, "zip": 1853, "archiv": 1853, "load_project": 1853, "deem": 1857, "bidirect": 1858, "offend": 1858, "restor": 1858, "largest": [1858, 1874], "struct": [1859, 1871], "wtih": 1859, "input_list": 1860, "hr": [1862, 1863], "__str__": [1862, 1863], "workaround": [1862, 1863], "enhanc": [1862, 1863], "horizont": [1862, 1863], "get_printable_prop": 1862, "get_printable_label": 1863, "runtimewarn": 1864, "decor": 1864, "inevit": 1864, "temporarili": 1864, "myfun": 1864, "33333333": 1864, "input_dict": 1870, "vivifi": 1870, "draw": 1873, "max_dim": 1874, "jet": [1875, 1876], "linestyl": 1875, "veiw": 1875, "overlaid": [1875, 1876], "colormap": [1875, 1876, 1878], "specfi": [1875, 1876], "invis": [1875, 1876], "dash": 1875, "dashdot": 1875, "dot": 1875, "thick": [1875, 1878, 1879], "line3dcollect": 1875, "linecollect": 1875, "mpl": [1875, 1876], "agg": [1875, 1876], "add_boundary_por": [1875, 1876], "plot_throat": 1877, "opaqu": 1877, "edge_color": [1878, 1879], "node_s": [1878, 1879], "edge_scal": 1878, "emploi": 1878, "scaler": 1878, "resiz": 1878, "spyder": 1878, "jupyt": 1878, "pore_label": 1879, "throat_label": 1879, "line_width": 1879, "font": [1879, 1881], "border": 1879, "pore_color": 1880, "throat_color": 1880, "bgcolor": 1880, "vispi": 1880, "prettifi": 1881}, "objects": {"": [[1882, 0, 0, "-", "openpnm"]], "openpnm": [[37, 0, 0, "-", "algorithms"], [459, 0, 0, "-", "contrib"], [519, 0, 0, "-", "core"], [607, 0, 0, "-", "integrators"], [611, 0, 0, "-", "io"], [635, 0, 0, "-", "models"], [909, 0, 0, "-", "network"], [1258, 0, 0, "-", "phase"], [1658, 0, 0, "-", "solvers"], [1675, 0, 0, "-", "topotools"], [1724, 0, 0, "-", "utils"], [1872, 0, 0, "-", "visualization"]], "openpnm.algorithms": [[38, 1, 1, "", "AdvectionDiffusion"], [72, 1, 1, "", "Algorithm"], [98, 1, 1, "", "Drainage"], [130, 1, 1, "", "FickianDiffusion"], [163, 1, 1, "", "FourierConduction"], [196, 1, 1, "", "InvasionPercolation"], [228, 1, 1, "", "OhmicConduction"], [261, 1, 1, "", "ReactiveTransport"], [294, 1, 1, "", "StokesFlow"], [327, 1, 1, "", "TransientAdvectionDiffusion"], [361, 1, 1, "", "TransientFickianDiffusion"], [394, 1, 1, "", "TransientReactiveTransport"], [427, 1, 1, "", "Transport"]], "openpnm.algorithms.AdvectionDiffusion": [[39, 2, 1, "", "clear"], [40, 2, 1, "", "clear_BCs"], [41, 2, 1, "", "clear_rate_BCs"], [42, 2, 1, "", "clear_value_BCs"], [43, 2, 1, "", "copy"], [44, 2, 1, "", "filter_by_label"], [45, 2, 1, "", "fromkeys"], [46, 2, 1, "", "get"], [47, 2, 1, "", "get_conduit_data"], [48, 2, 1, "", "interpolate_data"], [49, 2, 1, "", "items"], [50, 2, 1, "", "keys"], [51, 2, 1, "", "labels"], [52, 2, 1, "", "num_pores"], [53, 2, 1, "", "num_throats"], [54, 2, 1, "", "pop"], [55, 2, 1, "", "popitem"], [56, 2, 1, "", "pores"], [57, 2, 1, "", "props"], [58, 2, 1, "", "rate"], [59, 2, 1, "", "run"], [60, 2, 1, "", "set_BC"], [61, 2, 1, "", "set_label"], [62, 2, 1, "", "set_outflow_BC"], [63, 2, 1, "", "set_rate_BC"], [64, 2, 1, "", "set_source"], [65, 2, 1, "", "set_value_BC"], [66, 2, 1, "", "setdefault"], [67, 2, 1, "", "throats"], [68, 2, 1, "", "to_indices"], [69, 2, 1, "", "to_mask"], [70, 2, 1, "", "update"], [71, 2, 1, "", "values"]], "openpnm.algorithms.Algorithm": [[73, 2, 1, "", "clear"], [74, 2, 1, "", "clear_BCs"], [75, 2, 1, "", "copy"], [76, 2, 1, "", "filter_by_label"], [77, 2, 1, "", "fromkeys"], [78, 2, 1, "", "get"], [79, 2, 1, "", "get_conduit_data"], [80, 2, 1, "", "interpolate_data"], [81, 2, 1, "", "items"], [82, 2, 1, "", "keys"], [83, 2, 1, "", "labels"], [84, 2, 1, "", "num_pores"], [85, 2, 1, "", "num_throats"], [86, 2, 1, "", "pop"], [87, 2, 1, "", "popitem"], [88, 2, 1, "", "pores"], [89, 2, 1, "", "props"], [90, 2, 1, "", "set_BC"], [91, 2, 1, "", "set_label"], [92, 2, 1, "", "setdefault"], [93, 2, 1, "", "throats"], [94, 2, 1, "", "to_indices"], [95, 2, 1, "", "to_mask"], [96, 2, 1, "", "update"], [97, 2, 1, "", "values"]], "openpnm.algorithms.Drainage": [[99, 2, 1, "", "apply_trapping"], [100, 2, 1, "", "clear"], [101, 2, 1, "", "clear_BCs"], [102, 2, 1, "", "copy"], [103, 2, 1, "", "filter_by_label"], [104, 2, 1, "", "fromkeys"], [105, 2, 1, "", "get"], [106, 2, 1, "", "get_conduit_data"], [107, 2, 1, "", "interpolate_data"], [108, 2, 1, "", "items"], [109, 2, 1, "", "keys"], [110, 2, 1, "", "labels"], [111, 2, 1, "", "num_pores"], [112, 2, 1, "", "num_throats"], [113, 2, 1, "", "pc_curve"], [114, 2, 1, "", "pop"], [115, 2, 1, "", "popitem"], [116, 2, 1, "", "pores"], [117, 2, 1, "", "props"], [118, 2, 1, "", "reset"], [119, 2, 1, "", "run"], [120, 2, 1, "", "set_BC"], [121, 2, 1, "", "set_inlet_BC"], [122, 2, 1, "", "set_label"], [123, 2, 1, "", "set_outlet_BC"], [124, 2, 1, "", "setdefault"], [125, 2, 1, "", "throats"], [126, 2, 1, "", "to_indices"], [127, 2, 1, "", "to_mask"], [128, 2, 1, "", "update"], [129, 2, 1, "", "values"]], "openpnm.algorithms.FickianDiffusion": [[131, 2, 1, "", "clear"], [132, 2, 1, "", "clear_BCs"], [133, 2, 1, "", "clear_rate_BCs"], [134, 2, 1, "", "clear_value_BCs"], [135, 2, 1, "", "copy"], [136, 2, 1, "", "filter_by_label"], [137, 2, 1, "", "fromkeys"], [138, 2, 1, "", "get"], [139, 2, 1, "", "get_conduit_data"], [140, 2, 1, "", "interpolate_data"], [141, 2, 1, "", "items"], [142, 2, 1, "", "keys"], [143, 2, 1, "", "labels"], [144, 2, 1, "", "num_pores"], [145, 2, 1, "", "num_throats"], [146, 2, 1, "", "pop"], [147, 2, 1, "", "popitem"], [148, 2, 1, "", "pores"], [149, 2, 1, "", "props"], [150, 2, 1, "", "rate"], [151, 2, 1, "", "run"], [152, 2, 1, "", "set_BC"], [153, 2, 1, "", "set_label"], [154, 2, 1, "", "set_rate_BC"], [155, 2, 1, "", "set_source"], [156, 2, 1, "", "set_value_BC"], [157, 2, 1, "", "setdefault"], [158, 2, 1, "", "throats"], [159, 2, 1, "", "to_indices"], [160, 2, 1, "", "to_mask"], [161, 2, 1, "", "update"], [162, 2, 1, "", "values"]], "openpnm.algorithms.FourierConduction": [[164, 2, 1, "", "clear"], [165, 2, 1, "", "clear_BCs"], [166, 2, 1, "", "clear_rate_BCs"], [167, 2, 1, "", "clear_value_BCs"], [168, 2, 1, "", "copy"], [169, 2, 1, "", "filter_by_label"], [170, 2, 1, "", "fromkeys"], [171, 2, 1, "", "get"], [172, 2, 1, "", "get_conduit_data"], [173, 2, 1, "", "interpolate_data"], [174, 2, 1, "", "items"], [175, 2, 1, "", "keys"], [176, 2, 1, "", "labels"], [177, 2, 1, "", "num_pores"], [178, 2, 1, "", "num_throats"], [179, 2, 1, "", "pop"], [180, 2, 1, "", "popitem"], [181, 2, 1, "", "pores"], [182, 2, 1, "", "props"], [183, 2, 1, "", "rate"], [184, 2, 1, "", "run"], [185, 2, 1, "", "set_BC"], [186, 2, 1, "", "set_label"], [187, 2, 1, "", "set_rate_BC"], [188, 2, 1, "", "set_source"], [189, 2, 1, "", "set_value_BC"], [190, 2, 1, "", "setdefault"], [191, 2, 1, "", "throats"], [192, 2, 1, "", "to_indices"], [193, 2, 1, "", "to_mask"], [194, 2, 1, "", "update"], [195, 2, 1, "", "values"]], "openpnm.algorithms.InvasionPercolation": [[197, 2, 1, "", "apply_trapping"], [198, 2, 1, "", "clear"], [199, 2, 1, "", "clear_BCs"], [200, 2, 1, "", "copy"], [201, 2, 1, "", "filter_by_label"], [202, 2, 1, "", "fromkeys"], [203, 2, 1, "", "get"], [204, 2, 1, "", "get_conduit_data"], [205, 2, 1, "", "interpolate_data"], [206, 2, 1, "", "items"], [207, 2, 1, "", "keys"], [208, 2, 1, "", "labels"], [209, 2, 1, "", "num_pores"], [210, 2, 1, "", "num_throats"], [211, 2, 1, "", "pc_curve"], [212, 2, 1, "", "pop"], [213, 2, 1, "", "popitem"], [214, 2, 1, "", "pores"], [215, 2, 1, "", "props"], [216, 2, 1, "", "reset"], [217, 2, 1, "", "run"], [218, 2, 1, "", "set_BC"], [219, 2, 1, "", "set_inlet_BC"], [220, 2, 1, "", "set_label"], [221, 2, 1, "", "set_outlet_BC"], [222, 2, 1, "", "setdefault"], [223, 2, 1, "", "throats"], [224, 2, 1, "", "to_indices"], [225, 2, 1, "", "to_mask"], [226, 2, 1, "", "update"], [227, 2, 1, "", "values"]], "openpnm.algorithms.OhmicConduction": [[229, 2, 1, "", "clear"], [230, 2, 1, "", "clear_BCs"], [231, 2, 1, "", "clear_rate_BCs"], [232, 2, 1, "", "clear_value_BCs"], [233, 2, 1, "", "copy"], [234, 2, 1, "", "filter_by_label"], [235, 2, 1, "", "fromkeys"], [236, 2, 1, "", "get"], [237, 2, 1, "", "get_conduit_data"], [238, 2, 1, "", "interpolate_data"], [239, 2, 1, "", "items"], [240, 2, 1, "", "keys"], [241, 2, 1, "", "labels"], [242, 2, 1, "", "num_pores"], [243, 2, 1, "", "num_throats"], [244, 2, 1, "", "pop"], [245, 2, 1, "", "popitem"], [246, 2, 1, "", "pores"], [247, 2, 1, "", "props"], [248, 2, 1, "", "rate"], [249, 2, 1, "", "run"], [250, 2, 1, "", "set_BC"], [251, 2, 1, "", "set_label"], [252, 2, 1, "", "set_rate_BC"], [253, 2, 1, "", "set_source"], [254, 2, 1, "", "set_value_BC"], [255, 2, 1, "", "setdefault"], [256, 2, 1, "", "throats"], [257, 2, 1, "", "to_indices"], [258, 2, 1, "", "to_mask"], [259, 2, 1, "", "update"], [260, 2, 1, "", "values"]], "openpnm.algorithms.ReactiveTransport": [[262, 2, 1, "", "clear"], [263, 2, 1, "", "clear_BCs"], [264, 2, 1, "", "clear_rate_BCs"], [265, 2, 1, "", "clear_value_BCs"], [266, 2, 1, "", "copy"], [267, 2, 1, "", "filter_by_label"], [268, 2, 1, "", "fromkeys"], [269, 2, 1, "", "get"], [270, 2, 1, "", "get_conduit_data"], [271, 2, 1, "", "interpolate_data"], [272, 2, 1, "", "items"], [273, 2, 1, "", "keys"], [274, 2, 1, "", "labels"], [275, 2, 1, "", "num_pores"], [276, 2, 1, "", "num_throats"], [277, 2, 1, "", "pop"], [278, 2, 1, "", "popitem"], [279, 2, 1, "", "pores"], [280, 2, 1, "", "props"], [281, 2, 1, "", "rate"], [282, 2, 1, "", "run"], [283, 2, 1, "", "set_BC"], [284, 2, 1, "", "set_label"], [285, 2, 1, "", "set_rate_BC"], [286, 2, 1, "", "set_source"], [287, 2, 1, "", "set_value_BC"], [288, 2, 1, "", "setdefault"], [289, 2, 1, "", "throats"], [290, 2, 1, "", "to_indices"], [291, 2, 1, "", "to_mask"], [292, 2, 1, "", "update"], [293, 2, 1, "", "values"]], "openpnm.algorithms.StokesFlow": [[295, 2, 1, "", "clear"], [296, 2, 1, "", "clear_BCs"], [297, 2, 1, "", "clear_rate_BCs"], [298, 2, 1, "", "clear_value_BCs"], [299, 2, 1, "", "copy"], [300, 2, 1, "", "filter_by_label"], [301, 2, 1, "", "fromkeys"], [302, 2, 1, "", "get"], [303, 2, 1, "", "get_conduit_data"], [304, 2, 1, "", "interpolate_data"], [305, 2, 1, "", "items"], [306, 2, 1, "", "keys"], [307, 2, 1, "", "labels"], [308, 2, 1, "", "num_pores"], [309, 2, 1, "", "num_throats"], [310, 2, 1, "", "pop"], [311, 2, 1, "", "popitem"], [312, 2, 1, "", "pores"], [313, 2, 1, "", "props"], [314, 2, 1, "", "rate"], [315, 2, 1, "", "run"], [316, 2, 1, "", "set_BC"], [317, 2, 1, "", "set_label"], [318, 2, 1, "", "set_rate_BC"], [319, 2, 1, "", "set_source"], [320, 2, 1, "", "set_value_BC"], [321, 2, 1, "", "setdefault"], [322, 2, 1, "", "throats"], [323, 2, 1, "", "to_indices"], [324, 2, 1, "", "to_mask"], [325, 2, 1, "", "update"], [326, 2, 1, "", "values"]], "openpnm.algorithms.TransientAdvectionDiffusion": [[328, 2, 1, "", "clear"], [329, 2, 1, "", "clear_BCs"], [330, 2, 1, "", "clear_rate_BCs"], [331, 2, 1, "", "clear_value_BCs"], [332, 2, 1, "", "copy"], [333, 2, 1, "", "filter_by_label"], [334, 2, 1, "", "fromkeys"], [335, 2, 1, "", "get"], [336, 2, 1, "", "get_conduit_data"], [337, 2, 1, "", "interpolate_data"], [338, 2, 1, "", "items"], [339, 2, 1, "", "keys"], [340, 2, 1, "", "labels"], [341, 2, 1, "", "num_pores"], [342, 2, 1, "", "num_throats"], [343, 2, 1, "", "pop"], [344, 2, 1, "", "popitem"], [345, 2, 1, "", "pores"], [346, 2, 1, "", "props"], [347, 2, 1, "", "rate"], [348, 2, 1, "", "run"], [349, 2, 1, "", "set_BC"], [350, 2, 1, "", "set_label"], [351, 2, 1, "", "set_outflow_BC"], [352, 2, 1, "", "set_rate_BC"], [353, 2, 1, "", "set_source"], [354, 2, 1, "", "set_value_BC"], [355, 2, 1, "", "setdefault"], [356, 2, 1, "", "throats"], [357, 2, 1, "", "to_indices"], [358, 2, 1, "", "to_mask"], [359, 2, 1, "", "update"], [360, 2, 1, "", "values"]], "openpnm.algorithms.TransientFickianDiffusion": [[362, 2, 1, "", "clear"], [363, 2, 1, "", "clear_BCs"], [364, 2, 1, "", "clear_rate_BCs"], [365, 2, 1, "", "clear_value_BCs"], [366, 2, 1, "", "copy"], [367, 2, 1, "", "filter_by_label"], [368, 2, 1, "", "fromkeys"], [369, 2, 1, "", "get"], [370, 2, 1, "", "get_conduit_data"], [371, 2, 1, "", "interpolate_data"], [372, 2, 1, "", "items"], [373, 2, 1, "", "keys"], [374, 2, 1, "", "labels"], [375, 2, 1, "", "num_pores"], [376, 2, 1, "", "num_throats"], [377, 2, 1, "", "pop"], [378, 2, 1, "", "popitem"], [379, 2, 1, "", "pores"], [380, 2, 1, "", "props"], [381, 2, 1, "", "rate"], [382, 2, 1, "", "run"], [383, 2, 1, "", "set_BC"], [384, 2, 1, "", "set_label"], [385, 2, 1, "", "set_rate_BC"], [386, 2, 1, "", "set_source"], [387, 2, 1, "", "set_value_BC"], [388, 2, 1, "", "setdefault"], [389, 2, 1, "", "throats"], [390, 2, 1, "", "to_indices"], [391, 2, 1, "", "to_mask"], [392, 2, 1, "", "update"], [393, 2, 1, "", "values"]], "openpnm.algorithms.TransientReactiveTransport": [[395, 2, 1, "", "clear"], [396, 2, 1, "", "clear_BCs"], [397, 2, 1, "", "clear_rate_BCs"], [398, 2, 1, "", "clear_value_BCs"], [399, 2, 1, "", "copy"], [400, 2, 1, "", "filter_by_label"], [401, 2, 1, "", "fromkeys"], [402, 2, 1, "", "get"], [403, 2, 1, "", "get_conduit_data"], [404, 2, 1, "", "interpolate_data"], [405, 2, 1, "", "items"], [406, 2, 1, "", "keys"], [407, 2, 1, "", "labels"], [408, 2, 1, "", "num_pores"], [409, 2, 1, "", "num_throats"], [410, 2, 1, "", "pop"], [411, 2, 1, "", "popitem"], [412, 2, 1, "", "pores"], [413, 2, 1, "", "props"], [414, 2, 1, "", "rate"], [415, 2, 1, "", "run"], [416, 2, 1, "", "set_BC"], [417, 2, 1, "", "set_label"], [418, 2, 1, "", "set_rate_BC"], [419, 2, 1, "", "set_source"], [420, 2, 1, "", "set_value_BC"], [421, 2, 1, "", "setdefault"], [422, 2, 1, "", "throats"], [423, 2, 1, "", "to_indices"], [424, 2, 1, "", "to_mask"], [425, 2, 1, "", "update"], [426, 2, 1, "", "values"]], "openpnm.algorithms.Transport": [[428, 2, 1, "", "clear"], [429, 2, 1, "", "clear_BCs"], [430, 2, 1, "", "clear_rate_BCs"], [431, 2, 1, "", "clear_value_BCs"], [432, 2, 1, "", "copy"], [433, 2, 1, "", "filter_by_label"], [434, 2, 1, "", "fromkeys"], [435, 2, 1, "", "get"], [436, 2, 1, "", "get_conduit_data"], [437, 2, 1, "", "interpolate_data"], [438, 2, 1, "", "items"], [439, 2, 1, "", "keys"], [440, 2, 1, "", "labels"], [441, 2, 1, "", "num_pores"], [442, 2, 1, "", "num_throats"], [443, 2, 1, "", "pop"], [444, 2, 1, "", "popitem"], [445, 2, 1, "", "pores"], [446, 2, 1, "", "props"], [447, 2, 1, "", "rate"], [448, 2, 1, "", "run"], [449, 2, 1, "", "set_BC"], [450, 2, 1, "", "set_label"], [451, 2, 1, "", "set_rate_BC"], [452, 2, 1, "", "set_value_BC"], [453, 2, 1, "", "setdefault"], [454, 2, 1, "", "throats"], [455, 2, 1, "", "to_indices"], [456, 2, 1, "", "to_mask"], [457, 2, 1, "", "update"], [458, 2, 1, "", "values"]], "openpnm.contrib": [[460, 1, 1, "", "MultiPhase"], [491, 1, 1, "", "TransientMultiPhysics"], [518, 3, 1, "", "multiphase_diffusion"]], "openpnm.contrib.MultiPhase": [[461, 2, 1, "", "add_model"], [462, 2, 1, "", "add_model_collection"], [463, 2, 1, "", "add_phases"], [464, 2, 1, "", "clear"], [465, 2, 1, "", "copy"], [466, 2, 1, "", "filter_by_label"], [467, 2, 1, "", "fromkeys"], [468, 2, 1, "", "get"], [469, 2, 1, "", "get_conduit_data"], [470, 2, 1, "", "interpolate_data"], [471, 2, 1, "", "items"], [472, 2, 1, "", "keys"], [473, 2, 1, "", "labels"], [474, 2, 1, "", "num_pores"], [475, 2, 1, "", "num_throats"], [476, 2, 1, "", "pop"], [477, 2, 1, "", "popitem"], [478, 2, 1, "", "pores"], [479, 2, 1, "", "props"], [480, 2, 1, "", "regenerate_models"], [481, 2, 1, "", "run_model"], [482, 2, 1, "", "set_binary_partition_coef"], [483, 2, 1, "", "set_label"], [484, 2, 1, "", "set_occupancy"], [485, 2, 1, "", "setdefault"], [486, 2, 1, "", "throats"], [487, 2, 1, "", "to_indices"], [488, 2, 1, "", "to_mask"], [489, 2, 1, "", "update"], [490, 2, 1, "", "values"]], "openpnm.contrib.TransientMultiPhysics": [[492, 2, 1, "", "clear"], [493, 2, 1, "", "clear_BCs"], [494, 2, 1, "", "copy"], [495, 2, 1, "", "filter_by_label"], [496, 2, 1, "", "fromkeys"], [497, 2, 1, "", "get"], [498, 2, 1, "", "get_conduit_data"], [499, 2, 1, "", "interpolate_data"], [500, 2, 1, "", "items"], [501, 2, 1, "", "keys"], [502, 2, 1, "", "labels"], [503, 2, 1, "", "num_pores"], [504, 2, 1, "", "num_throats"], [505, 2, 1, "", "pop"], [506, 2, 1, "", "popitem"], [507, 2, 1, "", "pores"], [508, 2, 1, "", "props"], [509, 2, 1, "", "run"], [510, 2, 1, "", "set_BC"], [511, 2, 1, "", "set_label"], [512, 2, 1, "", "setdefault"], [513, 2, 1, "", "throats"], [514, 2, 1, "", "to_indices"], [515, 2, 1, "", "to_mask"], [516, 2, 1, "", "update"], [517, 2, 1, "", "values"]], "openpnm.core": [[520, 1, 1, "", "Base2"], [537, 1, 1, "", "Domain"], [565, 1, 1, "", "LabelMixin"], [573, 1, 1, "", "ModelWrapper"], [586, 1, 1, "", "ModelsDict"], [601, 1, 1, "", "ModelsMixin2"], [606, 1, 1, "", "ParserMixin"]], "openpnm.core.Base2": [[521, 2, 1, "", "clear"], [522, 2, 1, "", "copy"], [523, 2, 1, "", "fromkeys"], [524, 2, 1, "", "get"], [525, 2, 1, "", "get_conduit_data"], [526, 2, 1, "", "interpolate_data"], [527, 2, 1, "", "items"], [528, 2, 1, "", "keys"], [529, 2, 1, "", "pop"], [530, 2, 1, "", "popitem"], [531, 2, 1, "", "props"], [532, 2, 1, "", "setdefault"], [533, 2, 1, "", "to_indices"], [534, 2, 1, "", "to_mask"], [535, 2, 1, "", "update"], [536, 2, 1, "", "values"]], "openpnm.core.Domain": [[538, 2, 1, "", "add_model"], [539, 2, 1, "", "add_model_collection"], [540, 2, 1, "", "clear"], [541, 2, 1, "", "copy"], [542, 2, 1, "", "filter_by_label"], [543, 2, 1, "", "fromkeys"], [544, 2, 1, "", "get"], [545, 2, 1, "", "get_conduit_data"], [546, 2, 1, "", "interpolate_data"], [547, 2, 1, "", "items"], [548, 2, 1, "", "keys"], [549, 2, 1, "", "labels"], [550, 2, 1, "", "num_pores"], [551, 2, 1, "", "num_throats"], [552, 2, 1, "", "pop"], [553, 2, 1, "", "popitem"], [554, 2, 1, "", "pores"], [555, 2, 1, "", "props"], [556, 2, 1, "", "regenerate_models"], [557, 2, 1, "", "run_model"], [558, 2, 1, "", "set_label"], [559, 2, 1, "", "setdefault"], [560, 2, 1, "", "throats"], [561, 2, 1, "", "to_indices"], [562, 2, 1, "", "to_mask"], [563, 2, 1, "", "update"], [564, 2, 1, "", "values"]], "openpnm.core.LabelMixin": [[566, 2, 1, "", "filter_by_label"], [567, 2, 1, "", "labels"], [568, 2, 1, "", "num_pores"], [569, 2, 1, "", "num_throats"], [570, 2, 1, "", "pores"], [571, 2, 1, "", "set_label"], [572, 2, 1, "", "throats"]], "openpnm.core.ModelWrapper": [[574, 2, 1, "", "__call__"], [575, 2, 1, "", "clear"], [576, 2, 1, "", "copy"], [577, 2, 1, "", "fromkeys"], [578, 2, 1, "", "get"], [579, 2, 1, "", "items"], [580, 2, 1, "", "keys"], [581, 2, 1, "", "pop"], [582, 2, 1, "", "popitem"], [583, 2, 1, "", "setdefault"], [584, 2, 1, "", "update"], [585, 2, 1, "", "values"]], "openpnm.core.ModelsDict": [[587, 2, 1, "", "clear"], [588, 2, 1, "", "copy"], [589, 2, 1, "", "dependency_graph"], [590, 2, 1, "", "dependency_list"], [591, 2, 1, "", "dependency_map"], [592, 2, 1, "", "fromkeys"], [593, 2, 1, "", "get"], [594, 2, 1, "", "items"], [595, 2, 1, "", "keys"], [596, 2, 1, "", "pop"], [597, 2, 1, "", "popitem"], [598, 2, 1, "", "setdefault"], [599, 2, 1, "", "update"], [600, 2, 1, "", "values"]], "openpnm.core.ModelsMixin2": [[602, 2, 1, "", "add_model"], [603, 2, 1, "", "add_model_collection"], [604, 2, 1, "", "regenerate_models"], [605, 2, 1, "", "run_model"]], "openpnm.integrators": [[608, 1, 1, "", "Integrator"], [609, 1, 1, "", "ScipyRK45"]], "openpnm.integrators.ScipyRK45": [[610, 2, 1, "", "solve"]], "openpnm.io": [[612, 3, 1, "", "network_from_csv"], [613, 3, 1, "", "network_from_jsongraph"], [614, 3, 1, "", "network_from_marock"], [615, 3, 1, "", "network_from_networkx"], [616, 3, 1, "", "network_from_pergeos"], [617, 3, 1, "", "network_from_porespy"], [618, 3, 1, "", "network_from_statoil"], [619, 3, 1, "", "network_to_comsol"], [620, 3, 1, "", "network_to_csv"], [621, 3, 1, "", "network_to_jsongraph"], [622, 3, 1, "", "network_to_networkx"], [623, 3, 1, "", "network_to_pandas"], [624, 3, 1, "", "network_to_pergeos"], [625, 3, 1, "", "network_to_salome"], [626, 3, 1, "", "network_to_stl"], [627, 3, 1, "", "print_hdf5"], [628, 3, 1, "", "project_to_csv"], [629, 3, 1, "", "project_to_dict"], [630, 3, 1, "", "project_to_hdf5"], [631, 3, 1, "", "project_to_pandas"], [632, 3, 1, "", "project_to_paraview"], [633, 3, 1, "", "project_to_vtk"], [634, 3, 1, "", "project_to_xdmf"]], "openpnm.models": [[636, 0, 0, "-", "collections"], [655, 0, 0, "-", "geometry"], [781, 0, 0, "-", "misc"], [802, 0, 0, "-", "network"], [819, 0, 0, "-", "phase"], [870, 0, 0, "-", "physics"]], "openpnm.models.collections": [[637, 0, 0, "-", "geometry"], [645, 0, 0, "-", "network"], [646, 0, 0, "-", "phase"], [652, 0, 0, "-", "physics"]], "openpnm.models.collections.geometry": [[638, 4, 1, "", "circles_and_rectangles"], [639, 4, 1, "", "cones_and_cylinders"], [640, 4, 1, "", "cubes_and_cuboids"], [641, 4, 1, "", "pyramids_and_cuboids"], [642, 4, 1, "", "spheres_and_cylinders"], [643, 4, 1, "", "squares_and_rectangles"], [644, 4, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.collections.phase": [[647, 4, 1, "", "air"], [648, 0, 0, "-", "gas"], [649, 0, 0, "-", "liquid"], [650, 4, 1, "", "mercury"], [651, 4, 1, "", "water"]], "openpnm.models.collections.physics": [[653, 4, 1, "", "basic"], [654, 4, 1, "", "standard"]], "openpnm.models.geometry": [[656, 0, 0, "-", "conduit_lengths"], [670, 0, 0, "-", "diffusive_size_factors"], [685, 0, 0, "-", "hydraulic_size_factors"], [700, 0, 0, "-", "pore_cross_sectional_area"], [706, 0, 0, "-", "pore_seed"], [709, 0, 0, "-", "pore_size"], [717, 0, 0, "-", "pore_surface_area"], [722, 0, 0, "-", "pore_volume"], [728, 0, 0, "-", "throat_capillary_shape_factor"], [731, 0, 0, "-", "throat_centroid"], [733, 0, 0, "-", "throat_cross_sectional_area"], [737, 0, 0, "-", "throat_endpoints"], [739, 0, 0, "-", "throat_length"], [753, 0, 0, "-", "throat_perimeter"], [757, 0, 0, "-", "throat_seed"], [760, 0, 0, "-", "throat_size"], [767, 0, 0, "-", "throat_surface_area"], [772, 0, 0, "-", "throat_vector"], [774, 0, 0, "-", "throat_volume"]], "openpnm.models.geometry.conduit_lengths": [[657, 3, 1, "", "circles_and_rectangles"], [658, 3, 1, "", "cones_and_cylinders"], [659, 3, 1, "", "cubes_and_cuboids"], [660, 3, 1, "", "hybrid_cones_and_cylinders"], [661, 3, 1, "", "hybrid_pyramids_and_cuboids"], [662, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [663, 3, 1, "", "intersecting_cones"], [664, 3, 1, "", "intersecting_pyramids"], [665, 3, 1, "", "intersecting_trapezoids"], [666, 3, 1, "", "pyramids_and_cuboids"], [667, 3, 1, "", "spheres_and_cylinders"], [668, 3, 1, "", "squares_and_rectangles"], [669, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[671, 3, 1, "", "circles_and_rectangles"], [672, 3, 1, "", "cones_and_cylinders"], [673, 3, 1, "", "cubes_and_cuboids"], [674, 3, 1, "", "hybrid_cones_and_cylinders"], [675, 3, 1, "", "hybrid_pyramids_and_cuboids"], [676, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [677, 3, 1, "", "intersecting_cones"], [678, 3, 1, "", "intersecting_pyramids"], [679, 3, 1, "", "intersecting_trapezoids"], [680, 3, 1, "", "ncylinders_in_series"], [681, 3, 1, "", "pyramids_and_cuboids"], [682, 3, 1, "", "spheres_and_cylinders"], [683, 3, 1, "", "squares_and_rectangles"], [684, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[686, 3, 1, "", "circles_and_rectangles"], [687, 3, 1, "", "cones_and_cylinders"], [688, 3, 1, "", "cubes_and_cuboids"], [689, 3, 1, "", "hybrid_cones_and_cylinders"], [690, 3, 1, "", "hybrid_pyramids_and_cuboids"], [691, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [692, 3, 1, "", "intersecting_cones"], [693, 3, 1, "", "intersecting_pyramids"], [694, 3, 1, "", "intersecting_trapezoids"], [695, 3, 1, "", "ncylinders_in_series"], [696, 3, 1, "", "pyramids_and_cuboids"], [697, 3, 1, "", "spheres_and_cylinders"], [698, 3, 1, "", "squares_and_rectangles"], [699, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[701, 3, 1, "", "circle"], [702, 3, 1, "", "cone"], [703, 3, 1, "", "cube"], [704, 3, 1, "", "sphere"], [705, 3, 1, "", "square"]], "openpnm.models.geometry.pore_seed": [[707, 3, 1, "", "random"], [708, 3, 1, "", "spatially_correlated"]], "openpnm.models.geometry.pore_size": [[710, 3, 1, "", "equivalent_diameter"], [711, 3, 1, "", "from_neighbor_throats"], [712, 3, 1, "", "generic_distribution"], [713, 3, 1, "", "largest_sphere"], [714, 3, 1, "", "normal"], [715, 3, 1, "", "random"], [716, 3, 1, "", "weibull"]], "openpnm.models.geometry.pore_surface_area": [[718, 3, 1, "", "circle"], [719, 3, 1, "", "cube"], [720, 3, 1, "", "sphere"], [721, 3, 1, "", "square"]], "openpnm.models.geometry.pore_volume": [[723, 3, 1, "", "circle"], [724, 3, 1, "", "cube"], [725, 3, 1, "", "effective"], [726, 3, 1, "", "sphere"], [727, 3, 1, "", "square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[729, 3, 1, "", "jenkins_rao"], [730, 3, 1, "", "mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[732, 3, 1, "", "pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[734, 3, 1, "", "cuboid"], [735, 3, 1, "", "cylinder"], [736, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_endpoints": [[738, 3, 1, "", "spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[740, 3, 1, "", "circles_and_rectangles"], [741, 3, 1, "", "cones_and_cylinders"], [742, 3, 1, "", "cubes_and_cuboids"], [743, 3, 1, "", "hybrid_cones_and_cylinders"], [744, 3, 1, "", "hybrid_pyramids_and_cuboids"], [745, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [746, 3, 1, "", "intersecting_cones"], [747, 3, 1, "", "intersecting_pyramids"], [748, 3, 1, "", "intersecting_trapezoids"], [749, 3, 1, "", "pyramids_and_cuboids"], [750, 3, 1, "", "spheres_and_cylinders"], [751, 3, 1, "", "squares_and_rectangles"], [752, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[754, 3, 1, "", "cuboid"], [755, 3, 1, "", "cylinder"], [756, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_seed": [[758, 3, 1, "", "from_neighbor_pores"], [759, 3, 1, "", "random"]], "openpnm.models.geometry.throat_size": [[761, 3, 1, "", "equivalent_diameter"], [762, 3, 1, "", "from_neighbor_pores"], [763, 3, 1, "", "generic_distribution"], [764, 3, 1, "", "normal"], [765, 3, 1, "", "random"], [766, 3, 1, "", "weibull"]], "openpnm.models.geometry.throat_surface_area": [[768, 3, 1, "", "cuboid"], [769, 3, 1, "", "cylinder"], [770, 3, 1, "", "extrusion"], [771, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_vector": [[773, 3, 1, "", "pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[775, 3, 1, "", "cuboid"], [776, 3, 1, "", "cylinder"], [777, 3, 1, "", "extrusion"], [778, 3, 1, "", "lens"], [779, 3, 1, "", "pendular_ring"], [780, 3, 1, "", "rectangle"]], "openpnm.models.misc": [[782, 3, 1, "", "blank"], [783, 3, 1, "", "clip"], [784, 3, 1, "", "constant"], [785, 3, 1, "", "difference"], [786, 3, 1, "", "fraction"], [787, 3, 1, "", "from_neighbor_pores"], [788, 3, 1, "", "from_neighbor_throats"], [789, 3, 1, "", "generic_distribution"], [790, 3, 1, "", "generic_function"], [791, 3, 1, "", "invert"], [792, 3, 1, "", "linear"], [793, 3, 1, "", "match_histogram"], [794, 3, 1, "", "normal"], [795, 3, 1, "", "normalize"], [796, 3, 1, "", "polynomial"], [797, 3, 1, "", "product"], [798, 3, 1, "", "random"], [799, 3, 1, "", "scaled"], [800, 3, 1, "", "summation"], [801, 3, 1, "", "weibull"]], "openpnm.models.network": [[803, 3, 1, "", "bidirectional_throats"], [804, 3, 1, "", "cluster_number"], [805, 3, 1, "", "cluster_size"], [806, 3, 1, "", "coordination_number"], [807, 3, 1, "", "count_coincident_pores"], [808, 3, 1, "", "distance_to_furthest_neighbor"], [809, 3, 1, "", "distance_to_nearest_neighbor"], [810, 3, 1, "", "distance_to_nearest_pore"], [811, 3, 1, "", "duplicate_throats"], [812, 3, 1, "", "find_coincident_pores"], [813, 3, 1, "", "gabriel_edges"], [814, 3, 1, "", "headless_throats"], [815, 3, 1, "", "isolated_pores"], [816, 3, 1, "", "looped_throats"], [817, 3, 1, "", "pore_to_pore_distance"], [818, 3, 1, "", "reversed_throats"]], "openpnm.models.phase": [[820, 3, 1, "", "chemicals_wrapper"], [821, 0, 0, "-", "critical_props"], [822, 0, 0, "-", "density"], [828, 0, 0, "-", "diffusivity"], [832, 0, 0, "-", "heat_capacity"], [837, 0, 0, "-", "misc"], [840, 0, 0, "-", "mixtures"], [846, 0, 0, "-", "partition_coefficient"], [848, 0, 0, "-", "surface_tension"], [852, 0, 0, "-", "thermal_conductivity"], [859, 0, 0, "-", "vapor_pressure"], [863, 0, 0, "-", "viscosity"]], "openpnm.models.phase.density": [[823, 3, 1, "", "ideal_gas"], [824, 3, 1, "", "liquid_mixture_COSTALD"], [825, 3, 1, "", "liquid_pure_COSTALD"], [826, 3, 1, "", "mass_to_molar"], [827, 3, 1, "", "water_correlation"]], "openpnm.models.phase.diffusivity": [[829, 3, 1, "", "gas_mixture_ce"], [830, 3, 1, "", "gas_mixture_fesg"], [831, 3, 1, "", "liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[833, 3, 1, "", "gas_mixture_yweighted"], [834, 3, 1, "", "gas_pure_TRC"], [835, 3, 1, "", "liquid_mixture_xweighted"], [836, 3, 1, "", "liquid_pure_rp"]], "openpnm.models.phase.misc": [[838, 3, 1, "", "mix_and_match"], [839, 3, 1, "", "mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[841, 3, 1, "", "from_component"], [842, 3, 1, "", "mixing_rule"], [843, 3, 1, "", "mole_summation"], [844, 3, 1, "", "mole_to_mass_fraction"], [845, 3, 1, "", "salinity"]], "openpnm.models.phase.partition_coefficient": [[847, 3, 1, "", "gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[849, 3, 1, "", "liquid_mixture_wsd"], [850, 3, 1, "", "liquid_pure_bb"], [851, 3, 1, "", "water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[853, 3, 1, "", "gas_mixture_whz"], [854, 3, 1, "", "gas_pure_gismr"], [855, 3, 1, "", "liquid_mixture_DIPPR9H"], [856, 3, 1, "", "liquid_pure_gismr"], [857, 3, 1, "", "liquid_pure_sr"], [858, 3, 1, "", "water_correlation"]], "openpnm.models.phase.vapor_pressure": [[860, 3, 1, "", "liquid_pure_antoine"], [861, 3, 1, "", "liquid_pure_lk"], [862, 3, 1, "", "water_correlation"]], "openpnm.models.phase.viscosity": [[864, 3, 1, "", "gas_mixture_hz"], [865, 3, 1, "", "gas_pure_gesmr"], [866, 3, 1, "", "gas_pure_st"], [867, 3, 1, "", "liquid_mixture_xweighted"], [868, 3, 1, "", "liquid_pure_ls"], [869, 3, 1, "", "water_correlation"]], "openpnm.models.physics": [[871, 0, 0, "-", "ad_dif_conductance"], [873, 0, 0, "-", "capillary_pressure"], [876, 0, 0, "-", "diffusive_conductance"], [881, 0, 0, "-", "electrical_conductance"], [884, 0, 0, "-", "hydraulic_conductance"], [888, 0, 0, "-", "meniscus"], [892, 0, 0, "-", "multiphase"], [895, 0, 0, "-", "source_terms"], [906, 0, 0, "-", "thermal_conductance"]], "openpnm.models.physics.ad_dif_conductance": [[872, 3, 1, "", "ad_dif"]], "openpnm.models.physics.capillary_pressure": [[874, 3, 1, "", "purcell"], [875, 3, 1, "", "washburn"]], "openpnm.models.physics.diffusive_conductance": [[877, 3, 1, "", "generic_diffusive"], [878, 3, 1, "", "mixed_diffusion"], [879, 3, 1, "", "ordinary_diffusion"], [880, 3, 1, "", "taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[882, 3, 1, "", "generic_electrical"], [883, 3, 1, "", "series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[885, 3, 1, "", "generic_hydraulic"], [886, 3, 1, "", "hagen_poiseuille"], [887, 3, 1, "", "valvatne_blunt"]], "openpnm.models.physics.meniscus": [[889, 3, 1, "", "general_toroidal"], [890, 3, 1, "", "purcell"], [891, 3, 1, "", "sinusoidal"]], "openpnm.models.physics.multiphase": [[893, 3, 1, "", "conduit_conductance"], [894, 3, 1, "", "late_filling"]], "openpnm.models.physics.source_terms": [[896, 3, 1, "", "butler_volmer_conc"], [897, 3, 1, "", "butler_volmer_voltage"], [898, 3, 1, "", "exponential"], [899, 3, 1, "", "general_symbolic"], [900, 3, 1, "", "linear"], [901, 3, 1, "", "logarithm"], [902, 3, 1, "", "natural_exponential"], [903, 3, 1, "", "natural_logarithm"], [904, 3, 1, "", "power_law"], [905, 3, 1, "", "standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[907, 3, 1, "", "generic_thermal"], [908, 3, 1, "", "series_resistors"]], "openpnm.network": [[910, 1, 1, "", "BodyCenteredCubic"], [949, 1, 1, "", "Cubic"], [988, 1, 1, "", "CubicTemplate"], [1026, 1, 1, "", "Delaunay"], [1064, 1, 1, "", "DelaunayVoronoiDual"], [1104, 1, 1, "", "Demo"], [1143, 1, 1, "", "FaceCenteredCubic"], [1182, 1, 1, "", "Network"], [1220, 1, 1, "", "Voronoi"]], "openpnm.network.BodyCenteredCubic": [[911, 2, 1, "", "add_boundary_pores"], [912, 2, 1, "", "add_model"], [913, 2, 1, "", "add_model_collection"], [914, 2, 1, "", "clear"], [915, 2, 1, "", "copy"], [916, 2, 1, "", "create_adjacency_matrix"], [917, 2, 1, "", "create_incidence_matrix"], [918, 2, 1, "", "filter_by_label"], [919, 2, 1, "", "find_connected_pores"], [920, 2, 1, "", "find_connecting_throat"], [921, 2, 1, "", "find_nearby_pores"], [922, 2, 1, "", "find_neighbor_pores"], [923, 2, 1, "", "find_neighbor_throats"], [924, 2, 1, "", "fromkeys"], [925, 2, 1, "", "get"], [926, 2, 1, "", "get_adjacency_matrix"], [927, 2, 1, "", "get_conduit_data"], [928, 2, 1, "", "get_incidence_matrix"], [929, 2, 1, "", "interpolate_data"], [930, 2, 1, "", "items"], [931, 2, 1, "", "keys"], [932, 2, 1, "", "labels"], [933, 2, 1, "", "num_neighbors"], [934, 2, 1, "", "num_pores"], [935, 2, 1, "", "num_throats"], [936, 2, 1, "", "pop"], [937, 2, 1, "", "popitem"], [938, 2, 1, "", "pores"], [939, 2, 1, "", "props"], [940, 2, 1, "", "regenerate_models"], [941, 2, 1, "", "run_model"], [942, 2, 1, "", "set_label"], [943, 2, 1, "", "setdefault"], [944, 2, 1, "", "throats"], [945, 2, 1, "", "to_indices"], [946, 2, 1, "", "to_mask"], [947, 2, 1, "", "update"], [948, 2, 1, "", "values"]], "openpnm.network.Cubic": [[950, 2, 1, "", "add_boundary_pores"], [951, 2, 1, "", "add_model"], [952, 2, 1, "", "add_model_collection"], [953, 2, 1, "", "clear"], [954, 2, 1, "", "copy"], [955, 2, 1, "", "create_adjacency_matrix"], [956, 2, 1, "", "create_incidence_matrix"], [957, 2, 1, "", "filter_by_label"], [958, 2, 1, "", "find_connected_pores"], [959, 2, 1, "", "find_connecting_throat"], [960, 2, 1, "", "find_nearby_pores"], [961, 2, 1, "", "find_neighbor_pores"], [962, 2, 1, "", "find_neighbor_throats"], [963, 2, 1, "", "fromkeys"], [964, 2, 1, "", "get"], [965, 2, 1, "", "get_adjacency_matrix"], [966, 2, 1, "", "get_conduit_data"], [967, 2, 1, "", "get_incidence_matrix"], [968, 2, 1, "", "interpolate_data"], [969, 2, 1, "", "items"], [970, 2, 1, "", "keys"], [971, 2, 1, "", "labels"], [972, 2, 1, "", "num_neighbors"], [973, 2, 1, "", "num_pores"], [974, 2, 1, "", "num_throats"], [975, 2, 1, "", "pop"], [976, 2, 1, "", "popitem"], [977, 2, 1, "", "pores"], [978, 2, 1, "", "props"], [979, 2, 1, "", "regenerate_models"], [980, 2, 1, "", "run_model"], [981, 2, 1, "", "set_label"], [982, 2, 1, "", "setdefault"], [983, 2, 1, "", "throats"], [984, 2, 1, "", "to_indices"], [985, 2, 1, "", "to_mask"], [986, 2, 1, "", "update"], [987, 2, 1, "", "values"]], "openpnm.network.CubicTemplate": [[989, 2, 1, "", "add_model"], [990, 2, 1, "", "add_model_collection"], [991, 2, 1, "", "clear"], [992, 2, 1, "", "copy"], [993, 2, 1, "", "create_adjacency_matrix"], [994, 2, 1, "", "create_incidence_matrix"], [995, 2, 1, "", "filter_by_label"], [996, 2, 1, "", "find_connected_pores"], [997, 2, 1, "", "find_connecting_throat"], [998, 2, 1, "", "find_nearby_pores"], [999, 2, 1, "", "find_neighbor_pores"], [1000, 2, 1, "", "find_neighbor_throats"], [1001, 2, 1, "", "fromkeys"], [1002, 2, 1, "", "get"], [1003, 2, 1, "", "get_adjacency_matrix"], [1004, 2, 1, "", "get_conduit_data"], [1005, 2, 1, "", "get_incidence_matrix"], [1006, 2, 1, "", "interpolate_data"], [1007, 2, 1, "", "items"], [1008, 2, 1, "", "keys"], [1009, 2, 1, "", "labels"], [1010, 2, 1, "", "num_neighbors"], [1011, 2, 1, "", "num_pores"], [1012, 2, 1, "", "num_throats"], [1013, 2, 1, "", "pop"], [1014, 2, 1, "", "popitem"], [1015, 2, 1, "", "pores"], [1016, 2, 1, "", "props"], [1017, 2, 1, "", "regenerate_models"], [1018, 2, 1, "", "run_model"], [1019, 2, 1, "", "set_label"], [1020, 2, 1, "", "setdefault"], [1021, 2, 1, "", "throats"], [1022, 2, 1, "", "to_indices"], [1023, 2, 1, "", "to_mask"], [1024, 2, 1, "", "update"], [1025, 2, 1, "", "values"]], "openpnm.network.Delaunay": [[1027, 2, 1, "", "add_model"], [1028, 2, 1, "", "add_model_collection"], [1029, 2, 1, "", "clear"], [1030, 2, 1, "", "copy"], [1031, 2, 1, "", "create_adjacency_matrix"], [1032, 2, 1, "", "create_incidence_matrix"], [1033, 2, 1, "", "filter_by_label"], [1034, 2, 1, "", "find_connected_pores"], [1035, 2, 1, "", "find_connecting_throat"], [1036, 2, 1, "", "find_nearby_pores"], [1037, 2, 1, "", "find_neighbor_pores"], [1038, 2, 1, "", "find_neighbor_throats"], [1039, 2, 1, "", "fromkeys"], [1040, 2, 1, "", "get"], [1041, 2, 1, "", "get_adjacency_matrix"], [1042, 2, 1, "", "get_conduit_data"], [1043, 2, 1, "", "get_incidence_matrix"], [1044, 2, 1, "", "interpolate_data"], [1045, 2, 1, "", "items"], [1046, 2, 1, "", "keys"], [1047, 2, 1, "", "labels"], [1048, 2, 1, "", "num_neighbors"], [1049, 2, 1, "", "num_pores"], [1050, 2, 1, "", "num_throats"], [1051, 2, 1, "", "pop"], [1052, 2, 1, "", "popitem"], [1053, 2, 1, "", "pores"], [1054, 2, 1, "", "props"], [1055, 2, 1, "", "regenerate_models"], [1056, 2, 1, "", "run_model"], [1057, 2, 1, "", "set_label"], [1058, 2, 1, "", "setdefault"], [1059, 2, 1, "", "throats"], [1060, 2, 1, "", "to_indices"], [1061, 2, 1, "", "to_mask"], [1062, 2, 1, "", "update"], [1063, 2, 1, "", "values"]], "openpnm.network.DelaunayVoronoiDual": [[1065, 2, 1, "", "add_model"], [1066, 2, 1, "", "add_model_collection"], [1067, 2, 1, "", "clear"], [1068, 2, 1, "", "copy"], [1069, 2, 1, "", "create_adjacency_matrix"], [1070, 2, 1, "", "create_incidence_matrix"], [1071, 2, 1, "", "filter_by_label"], [1072, 2, 1, "", "find_connected_pores"], [1073, 2, 1, "", "find_connecting_throat"], [1074, 2, 1, "", "find_nearby_pores"], [1075, 2, 1, "", "find_neighbor_pores"], [1076, 2, 1, "", "find_neighbor_throats"], [1077, 2, 1, "", "find_pore_hulls"], [1078, 2, 1, "", "find_throat_facets"], [1079, 2, 1, "", "fromkeys"], [1080, 2, 1, "", "get"], [1081, 2, 1, "", "get_adjacency_matrix"], [1082, 2, 1, "", "get_conduit_data"], [1083, 2, 1, "", "get_incidence_matrix"], [1084, 2, 1, "", "interpolate_data"], [1085, 2, 1, "", "items"], [1086, 2, 1, "", "keys"], [1087, 2, 1, "", "labels"], [1088, 2, 1, "", "num_neighbors"], [1089, 2, 1, "", "num_pores"], [1090, 2, 1, "", "num_throats"], [1091, 2, 1, "", "pop"], [1092, 2, 1, "", "popitem"], [1093, 2, 1, "", "pores"], [1094, 2, 1, "", "props"], [1095, 2, 1, "", "regenerate_models"], [1096, 2, 1, "", "run_model"], [1097, 2, 1, "", "set_label"], [1098, 2, 1, "", "setdefault"], [1099, 2, 1, "", "throats"], [1100, 2, 1, "", "to_indices"], [1101, 2, 1, "", "to_mask"], [1102, 2, 1, "", "update"], [1103, 2, 1, "", "values"]], "openpnm.network.Demo": [[1105, 2, 1, "", "add_boundary_pores"], [1106, 2, 1, "", "add_model"], [1107, 2, 1, "", "add_model_collection"], [1108, 2, 1, "", "clear"], [1109, 2, 1, "", "copy"], [1110, 2, 1, "", "create_adjacency_matrix"], [1111, 2, 1, "", "create_incidence_matrix"], [1112, 2, 1, "", "filter_by_label"], [1113, 2, 1, "", "find_connected_pores"], [1114, 2, 1, "", "find_connecting_throat"], [1115, 2, 1, "", "find_nearby_pores"], [1116, 2, 1, "", "find_neighbor_pores"], [1117, 2, 1, "", "find_neighbor_throats"], [1118, 2, 1, "", "fromkeys"], [1119, 2, 1, "", "get"], [1120, 2, 1, "", "get_adjacency_matrix"], [1121, 2, 1, "", "get_conduit_data"], [1122, 2, 1, "", "get_incidence_matrix"], [1123, 2, 1, "", "interpolate_data"], [1124, 2, 1, "", "items"], [1125, 2, 1, "", "keys"], [1126, 2, 1, "", "labels"], [1127, 2, 1, "", "num_neighbors"], [1128, 2, 1, "", "num_pores"], [1129, 2, 1, "", "num_throats"], [1130, 2, 1, "", "pop"], [1131, 2, 1, "", "popitem"], [1132, 2, 1, "", "pores"], [1133, 2, 1, "", "props"], [1134, 2, 1, "", "regenerate_models"], [1135, 2, 1, "", "run_model"], [1136, 2, 1, "", "set_label"], [1137, 2, 1, "", "setdefault"], [1138, 2, 1, "", "throats"], [1139, 2, 1, "", "to_indices"], [1140, 2, 1, "", "to_mask"], [1141, 2, 1, "", "update"], [1142, 2, 1, "", "values"]], "openpnm.network.FaceCenteredCubic": [[1144, 2, 1, "", "add_boundary_pores"], [1145, 2, 1, "", "add_model"], [1146, 2, 1, "", "add_model_collection"], [1147, 2, 1, "", "clear"], [1148, 2, 1, "", "copy"], [1149, 2, 1, "", "create_adjacency_matrix"], [1150, 2, 1, "", "create_incidence_matrix"], [1151, 2, 1, "", "filter_by_label"], [1152, 2, 1, "", "find_connected_pores"], [1153, 2, 1, "", "find_connecting_throat"], [1154, 2, 1, "", "find_nearby_pores"], [1155, 2, 1, "", "find_neighbor_pores"], [1156, 2, 1, "", "find_neighbor_throats"], [1157, 2, 1, "", "fromkeys"], [1158, 2, 1, "", "get"], [1159, 2, 1, "", "get_adjacency_matrix"], [1160, 2, 1, "", "get_conduit_data"], [1161, 2, 1, "", "get_incidence_matrix"], [1162, 2, 1, "", "interpolate_data"], [1163, 2, 1, "", "items"], [1164, 2, 1, "", "keys"], [1165, 2, 1, "", "labels"], [1166, 2, 1, "", "num_neighbors"], [1167, 2, 1, "", "num_pores"], [1168, 2, 1, "", "num_throats"], [1169, 2, 1, "", "pop"], [1170, 2, 1, "", "popitem"], [1171, 2, 1, "", "pores"], [1172, 2, 1, "", "props"], [1173, 2, 1, "", "regenerate_models"], [1174, 2, 1, "", "run_model"], [1175, 2, 1, "", "set_label"], [1176, 2, 1, "", "setdefault"], [1177, 2, 1, "", "throats"], [1178, 2, 1, "", "to_indices"], [1179, 2, 1, "", "to_mask"], [1180, 2, 1, "", "update"], [1181, 2, 1, "", "values"]], "openpnm.network.Network": [[1183, 2, 1, "", "add_model"], [1184, 2, 1, "", "add_model_collection"], [1185, 2, 1, "", "clear"], [1186, 2, 1, "", "copy"], [1187, 2, 1, "", "create_adjacency_matrix"], [1188, 2, 1, "", "create_incidence_matrix"], [1189, 2, 1, "", "filter_by_label"], [1190, 2, 1, "", "find_connected_pores"], [1191, 2, 1, "", "find_connecting_throat"], [1192, 2, 1, "", "find_nearby_pores"], [1193, 2, 1, "", "find_neighbor_pores"], [1194, 2, 1, "", "find_neighbor_throats"], [1195, 2, 1, "", "fromkeys"], [1196, 2, 1, "", "get"], [1197, 2, 1, "", "get_adjacency_matrix"], [1198, 2, 1, "", "get_conduit_data"], [1199, 2, 1, "", "get_incidence_matrix"], [1200, 2, 1, "", "interpolate_data"], [1201, 2, 1, "", "items"], [1202, 2, 1, "", "keys"], [1203, 2, 1, "", "labels"], [1204, 2, 1, "", "num_neighbors"], [1205, 2, 1, "", "num_pores"], [1206, 2, 1, "", "num_throats"], [1207, 2, 1, "", "pop"], [1208, 2, 1, "", "popitem"], [1209, 2, 1, "", "pores"], [1210, 2, 1, "", "props"], [1211, 2, 1, "", "regenerate_models"], [1212, 2, 1, "", "run_model"], [1213, 2, 1, "", "set_label"], [1214, 2, 1, "", "setdefault"], [1215, 2, 1, "", "throats"], [1216, 2, 1, "", "to_indices"], [1217, 2, 1, "", "to_mask"], [1218, 2, 1, "", "update"], [1219, 2, 1, "", "values"]], "openpnm.network.Voronoi": [[1221, 2, 1, "", "add_model"], [1222, 2, 1, "", "add_model_collection"], [1223, 2, 1, "", "clear"], [1224, 2, 1, "", "copy"], [1225, 2, 1, "", "create_adjacency_matrix"], [1226, 2, 1, "", "create_incidence_matrix"], [1227, 2, 1, "", "filter_by_label"], [1228, 2, 1, "", "find_connected_pores"], [1229, 2, 1, "", "find_connecting_throat"], [1230, 2, 1, "", "find_nearby_pores"], [1231, 2, 1, "", "find_neighbor_pores"], [1232, 2, 1, "", "find_neighbor_throats"], [1233, 2, 1, "", "fromkeys"], [1234, 2, 1, "", "get"], [1235, 2, 1, "", "get_adjacency_matrix"], [1236, 2, 1, "", "get_conduit_data"], [1237, 2, 1, "", "get_incidence_matrix"], [1238, 2, 1, "", "interpolate_data"], [1239, 2, 1, "", "items"], [1240, 2, 1, "", "keys"], [1241, 2, 1, "", "labels"], [1242, 2, 1, "", "num_neighbors"], [1243, 2, 1, "", "num_pores"], [1244, 2, 1, "", "num_throats"], [1245, 2, 1, "", "pop"], [1246, 2, 1, "", "popitem"], [1247, 2, 1, "", "pores"], [1248, 2, 1, "", "props"], [1249, 2, 1, "", "regenerate_models"], [1250, 2, 1, "", "run_model"], [1251, 2, 1, "", "set_label"], [1252, 2, 1, "", "setdefault"], [1253, 2, 1, "", "throats"], [1254, 2, 1, "", "to_indices"], [1255, 2, 1, "", "to_mask"], [1256, 2, 1, "", "update"], [1257, 2, 1, "", "values"]], "openpnm.phase": [[1259, 1, 1, "", "Air"], [1287, 1, 1, "", "BinaryGas"], [1321, 1, 1, "", "GasMixture"], [1355, 1, 1, "", "LiquidMixture"], [1389, 1, 1, "", "Mercury"], [1417, 1, 1, "", "Mixture"], [1450, 1, 1, "", "Phase"], [1478, 1, 1, "", "Species"], [1506, 1, 1, "", "StandardGas"], [1534, 1, 1, "", "StandardGasMixture"], [1568, 1, 1, "", "StandardLiquid"], [1596, 1, 1, "", "StandardLiquidMixture"], [1630, 1, 1, "", "Water"]], "openpnm.phase.Air": [[1260, 2, 1, "", "add_model"], [1261, 2, 1, "", "add_model_collection"], [1262, 2, 1, "", "clear"], [1263, 2, 1, "", "copy"], [1264, 2, 1, "", "filter_by_label"], [1265, 2, 1, "", "fromkeys"], [1266, 2, 1, "", "get"], [1267, 2, 1, "", "get_conduit_data"], [1268, 2, 1, "", "interpolate_data"], [1269, 2, 1, "", "items"], [1270, 2, 1, "", "keys"], [1271, 2, 1, "", "labels"], [1272, 2, 1, "", "num_pores"], [1273, 2, 1, "", "num_throats"], [1274, 2, 1, "", "pop"], [1275, 2, 1, "", "popitem"], [1276, 2, 1, "", "pores"], [1277, 2, 1, "", "props"], [1278, 2, 1, "", "regenerate_models"], [1279, 2, 1, "", "run_model"], [1280, 2, 1, "", "set_label"], [1281, 2, 1, "", "setdefault"], [1282, 2, 1, "", "throats"], [1283, 2, 1, "", "to_indices"], [1284, 2, 1, "", "to_mask"], [1285, 2, 1, "", "update"], [1286, 2, 1, "", "values"]], "openpnm.phase.BinaryGas": [[1288, 2, 1, "", "add_comp"], [1289, 2, 1, "", "add_model"], [1290, 2, 1, "", "add_model_collection"], [1291, 2, 1, "", "check_mixture_health"], [1292, 2, 1, "", "clear"], [1293, 2, 1, "", "copy"], [1294, 2, 1, "", "filter_by_label"], [1295, 2, 1, "", "fromkeys"], [1296, 2, 1, "", "get"], [1297, 2, 1, "", "get_comp_vals"], [1298, 2, 1, "", "get_conduit_data"], [1299, 2, 1, "", "get_mix_vals"], [1300, 2, 1, "", "interpolate_data"], [1301, 2, 1, "", "items"], [1302, 2, 1, "", "keys"], [1303, 2, 1, "", "labels"], [1304, 2, 1, "", "num_pores"], [1305, 2, 1, "", "num_throats"], [1306, 2, 1, "", "pop"], [1307, 2, 1, "", "popitem"], [1308, 2, 1, "", "pores"], [1309, 2, 1, "", "props"], [1310, 2, 1, "", "regenerate_models"], [1311, 2, 1, "", "remove_comp"], [1312, 2, 1, "", "run_model"], [1313, 2, 1, "", "set_label"], [1314, 2, 1, "", "setdefault"], [1315, 2, 1, "", "throats"], [1316, 2, 1, "", "to_indices"], [1317, 2, 1, "", "to_mask"], [1318, 2, 1, "", "update"], [1319, 2, 1, "", "values"], [1320, 2, 1, "", "y"]], "openpnm.phase.GasMixture": [[1322, 2, 1, "", "add_comp"], [1323, 2, 1, "", "add_model"], [1324, 2, 1, "", "add_model_collection"], [1325, 2, 1, "", "check_mixture_health"], [1326, 2, 1, "", "clear"], [1327, 2, 1, "", "copy"], [1328, 2, 1, "", "filter_by_label"], [1329, 2, 1, "", "fromkeys"], [1330, 2, 1, "", "get"], [1331, 2, 1, "", "get_comp_vals"], [1332, 2, 1, "", "get_conduit_data"], [1333, 2, 1, "", "get_mix_vals"], [1334, 2, 1, "", "interpolate_data"], [1335, 2, 1, "", "items"], [1336, 2, 1, "", "keys"], [1337, 2, 1, "", "labels"], [1338, 2, 1, "", "num_pores"], [1339, 2, 1, "", "num_throats"], [1340, 2, 1, "", "pop"], [1341, 2, 1, "", "popitem"], [1342, 2, 1, "", "pores"], [1343, 2, 1, "", "props"], [1344, 2, 1, "", "regenerate_models"], [1345, 2, 1, "", "remove_comp"], [1346, 2, 1, "", "run_model"], [1347, 2, 1, "", "set_label"], [1348, 2, 1, "", "setdefault"], [1349, 2, 1, "", "throats"], [1350, 2, 1, "", "to_indices"], [1351, 2, 1, "", "to_mask"], [1352, 2, 1, "", "update"], [1353, 2, 1, "", "values"], [1354, 2, 1, "", "y"]], "openpnm.phase.LiquidMixture": [[1356, 2, 1, "", "add_comp"], [1357, 2, 1, "", "add_model"], [1358, 2, 1, "", "add_model_collection"], [1359, 2, 1, "", "check_mixture_health"], [1360, 2, 1, "", "clear"], [1361, 2, 1, "", "copy"], [1362, 2, 1, "", "filter_by_label"], [1363, 2, 1, "", "fromkeys"], [1364, 2, 1, "", "get"], [1365, 2, 1, "", "get_comp_vals"], [1366, 2, 1, "", "get_conduit_data"], [1367, 2, 1, "", "get_mix_vals"], [1368, 2, 1, "", "interpolate_data"], [1369, 2, 1, "", "items"], [1370, 2, 1, "", "keys"], [1371, 2, 1, "", "labels"], [1372, 2, 1, "", "num_pores"], [1373, 2, 1, "", "num_throats"], [1374, 2, 1, "", "pop"], [1375, 2, 1, "", "popitem"], [1376, 2, 1, "", "pores"], [1377, 2, 1, "", "props"], [1378, 2, 1, "", "regenerate_models"], [1379, 2, 1, "", "remove_comp"], [1380, 2, 1, "", "run_model"], [1381, 2, 1, "", "set_label"], [1382, 2, 1, "", "setdefault"], [1383, 2, 1, "", "throats"], [1384, 2, 1, "", "to_indices"], [1385, 2, 1, "", "to_mask"], [1386, 2, 1, "", "update"], [1387, 2, 1, "", "values"], [1388, 2, 1, "", "x"]], "openpnm.phase.Mercury": [[1390, 2, 1, "", "add_model"], [1391, 2, 1, "", "add_model_collection"], [1392, 2, 1, "", "clear"], [1393, 2, 1, "", "copy"], [1394, 2, 1, "", "filter_by_label"], [1395, 2, 1, "", "fromkeys"], [1396, 2, 1, "", "get"], [1397, 2, 1, "", "get_conduit_data"], [1398, 2, 1, "", "interpolate_data"], [1399, 2, 1, "", "items"], [1400, 2, 1, "", "keys"], [1401, 2, 1, "", "labels"], [1402, 2, 1, "", "num_pores"], [1403, 2, 1, "", "num_throats"], [1404, 2, 1, "", "pop"], [1405, 2, 1, "", "popitem"], [1406, 2, 1, "", "pores"], [1407, 2, 1, "", "props"], [1408, 2, 1, "", "regenerate_models"], [1409, 2, 1, "", "run_model"], [1410, 2, 1, "", "set_label"], [1411, 2, 1, "", "setdefault"], [1412, 2, 1, "", "throats"], [1413, 2, 1, "", "to_indices"], [1414, 2, 1, "", "to_mask"], [1415, 2, 1, "", "update"], [1416, 2, 1, "", "values"]], "openpnm.phase.Mixture": [[1418, 2, 1, "", "add_comp"], [1419, 2, 1, "", "add_model"], [1420, 2, 1, "", "add_model_collection"], [1421, 2, 1, "", "check_mixture_health"], [1422, 2, 1, "", "clear"], [1423, 2, 1, "", "copy"], [1424, 2, 1, "", "filter_by_label"], [1425, 2, 1, "", "fromkeys"], [1426, 2, 1, "", "get"], [1427, 2, 1, "", "get_comp_vals"], [1428, 2, 1, "", "get_conduit_data"], [1429, 2, 1, "", "get_mix_vals"], [1430, 2, 1, "", "interpolate_data"], [1431, 2, 1, "", "items"], [1432, 2, 1, "", "keys"], [1433, 2, 1, "", "labels"], [1434, 2, 1, "", "num_pores"], [1435, 2, 1, "", "num_throats"], [1436, 2, 1, "", "pop"], [1437, 2, 1, "", "popitem"], [1438, 2, 1, "", "pores"], [1439, 2, 1, "", "props"], [1440, 2, 1, "", "regenerate_models"], [1441, 2, 1, "", "remove_comp"], [1442, 2, 1, "", "run_model"], [1443, 2, 1, "", "set_label"], [1444, 2, 1, "", "setdefault"], [1445, 2, 1, "", "throats"], [1446, 2, 1, "", "to_indices"], [1447, 2, 1, "", "to_mask"], [1448, 2, 1, "", "update"], [1449, 2, 1, "", "values"]], "openpnm.phase.Phase": [[1451, 2, 1, "", "add_model"], [1452, 2, 1, "", "add_model_collection"], [1453, 2, 1, "", "clear"], [1454, 2, 1, "", "copy"], [1455, 2, 1, "", "filter_by_label"], [1456, 2, 1, "", "fromkeys"], [1457, 2, 1, "", "get"], [1458, 2, 1, "", "get_conduit_data"], [1459, 2, 1, "", "interpolate_data"], [1460, 2, 1, "", "items"], [1461, 2, 1, "", "keys"], [1462, 2, 1, "", "labels"], [1463, 2, 1, "", "num_pores"], [1464, 2, 1, "", "num_throats"], [1465, 2, 1, "", "pop"], [1466, 2, 1, "", "popitem"], [1467, 2, 1, "", "pores"], [1468, 2, 1, "", "props"], [1469, 2, 1, "", "regenerate_models"], [1470, 2, 1, "", "run_model"], [1471, 2, 1, "", "set_label"], [1472, 2, 1, "", "setdefault"], [1473, 2, 1, "", "throats"], [1474, 2, 1, "", "to_indices"], [1475, 2, 1, "", "to_mask"], [1476, 2, 1, "", "update"], [1477, 2, 1, "", "values"]], "openpnm.phase.Species": [[1479, 2, 1, "", "add_model"], [1480, 2, 1, "", "add_model_collection"], [1481, 2, 1, "", "clear"], [1482, 2, 1, "", "copy"], [1483, 2, 1, "", "filter_by_label"], [1484, 2, 1, "", "fromkeys"], [1485, 2, 1, "", "get"], [1486, 2, 1, "", "get_conduit_data"], [1487, 2, 1, "", "interpolate_data"], [1488, 2, 1, "", "items"], [1489, 2, 1, "", "keys"], [1490, 2, 1, "", "labels"], [1491, 2, 1, "", "num_pores"], [1492, 2, 1, "", "num_throats"], [1493, 2, 1, "", "pop"], [1494, 2, 1, "", "popitem"], [1495, 2, 1, "", "pores"], [1496, 2, 1, "", "props"], [1497, 2, 1, "", "regenerate_models"], [1498, 2, 1, "", "run_model"], [1499, 2, 1, "", "set_label"], [1500, 2, 1, "", "setdefault"], [1501, 2, 1, "", "throats"], [1502, 2, 1, "", "to_indices"], [1503, 2, 1, "", "to_mask"], [1504, 2, 1, "", "update"], [1505, 2, 1, "", "values"]], "openpnm.phase.StandardGas": [[1507, 2, 1, "", "add_model"], [1508, 2, 1, "", "add_model_collection"], [1509, 2, 1, "", "clear"], [1510, 2, 1, "", "copy"], [1511, 2, 1, "", "filter_by_label"], [1512, 2, 1, "", "fromkeys"], [1513, 2, 1, "", "get"], [1514, 2, 1, "", "get_conduit_data"], [1515, 2, 1, "", "interpolate_data"], [1516, 2, 1, "", "items"], [1517, 2, 1, "", "keys"], [1518, 2, 1, "", "labels"], [1519, 2, 1, "", "num_pores"], [1520, 2, 1, "", "num_throats"], [1521, 2, 1, "", "pop"], [1522, 2, 1, "", "popitem"], [1523, 2, 1, "", "pores"], [1524, 2, 1, "", "props"], [1525, 2, 1, "", "regenerate_models"], [1526, 2, 1, "", "run_model"], [1527, 2, 1, "", "set_label"], [1528, 2, 1, "", "setdefault"], [1529, 2, 1, "", "throats"], [1530, 2, 1, "", "to_indices"], [1531, 2, 1, "", "to_mask"], [1532, 2, 1, "", "update"], [1533, 2, 1, "", "values"]], "openpnm.phase.StandardGasMixture": [[1535, 2, 1, "", "add_comp"], [1536, 2, 1, "", "add_model"], [1537, 2, 1, "", "add_model_collection"], [1538, 2, 1, "", "check_mixture_health"], [1539, 2, 1, "", "clear"], [1540, 2, 1, "", "copy"], [1541, 2, 1, "", "filter_by_label"], [1542, 2, 1, "", "fromkeys"], [1543, 2, 1, "", "get"], [1544, 2, 1, "", "get_comp_vals"], [1545, 2, 1, "", "get_conduit_data"], [1546, 2, 1, "", "get_mix_vals"], [1547, 2, 1, "", "interpolate_data"], [1548, 2, 1, "", "items"], [1549, 2, 1, "", "keys"], [1550, 2, 1, "", "labels"], [1551, 2, 1, "", "num_pores"], [1552, 2, 1, "", "num_throats"], [1553, 2, 1, "", "pop"], [1554, 2, 1, "", "popitem"], [1555, 2, 1, "", "pores"], [1556, 2, 1, "", "props"], [1557, 2, 1, "", "regenerate_models"], [1558, 2, 1, "", "remove_comp"], [1559, 2, 1, "", "run_model"], [1560, 2, 1, "", "set_label"], [1561, 2, 1, "", "setdefault"], [1562, 2, 1, "", "throats"], [1563, 2, 1, "", "to_indices"], [1564, 2, 1, "", "to_mask"], [1565, 2, 1, "", "update"], [1566, 2, 1, "", "values"], [1567, 2, 1, "", "y"]], "openpnm.phase.StandardLiquid": [[1569, 2, 1, "", "add_model"], [1570, 2, 1, "", "add_model_collection"], [1571, 2, 1, "", "clear"], [1572, 2, 1, "", "copy"], [1573, 2, 1, "", "filter_by_label"], [1574, 2, 1, "", "fromkeys"], [1575, 2, 1, "", "get"], [1576, 2, 1, "", "get_conduit_data"], [1577, 2, 1, "", "interpolate_data"], [1578, 2, 1, "", "items"], [1579, 2, 1, "", "keys"], [1580, 2, 1, "", "labels"], [1581, 2, 1, "", "num_pores"], [1582, 2, 1, "", "num_throats"], [1583, 2, 1, "", "pop"], [1584, 2, 1, "", "popitem"], [1585, 2, 1, "", "pores"], [1586, 2, 1, "", "props"], [1587, 2, 1, "", "regenerate_models"], [1588, 2, 1, "", "run_model"], [1589, 2, 1, "", "set_label"], [1590, 2, 1, "", "setdefault"], [1591, 2, 1, "", "throats"], [1592, 2, 1, "", "to_indices"], [1593, 2, 1, "", "to_mask"], [1594, 2, 1, "", "update"], [1595, 2, 1, "", "values"]], "openpnm.phase.StandardLiquidMixture": [[1597, 2, 1, "", "add_comp"], [1598, 2, 1, "", "add_model"], [1599, 2, 1, "", "add_model_collection"], [1600, 2, 1, "", "check_mixture_health"], [1601, 2, 1, "", "clear"], [1602, 2, 1, "", "copy"], [1603, 2, 1, "", "filter_by_label"], [1604, 2, 1, "", "fromkeys"], [1605, 2, 1, "", "get"], [1606, 2, 1, "", "get_comp_vals"], [1607, 2, 1, "", "get_conduit_data"], [1608, 2, 1, "", "get_mix_vals"], [1609, 2, 1, "", "interpolate_data"], [1610, 2, 1, "", "items"], [1611, 2, 1, "", "keys"], [1612, 2, 1, "", "labels"], [1613, 2, 1, "", "num_pores"], [1614, 2, 1, "", "num_throats"], [1615, 2, 1, "", "pop"], [1616, 2, 1, "", "popitem"], [1617, 2, 1, "", "pores"], [1618, 2, 1, "", "props"], [1619, 2, 1, "", "regenerate_models"], [1620, 2, 1, "", "remove_comp"], [1621, 2, 1, "", "run_model"], [1622, 2, 1, "", "set_label"], [1623, 2, 1, "", "setdefault"], [1624, 2, 1, "", "throats"], [1625, 2, 1, "", "to_indices"], [1626, 2, 1, "", "to_mask"], [1627, 2, 1, "", "update"], [1628, 2, 1, "", "values"], [1629, 2, 1, "", "x"]], "openpnm.phase.Water": [[1631, 2, 1, "", "add_model"], [1632, 2, 1, "", "add_model_collection"], [1633, 2, 1, "", "clear"], [1634, 2, 1, "", "copy"], [1635, 2, 1, "", "filter_by_label"], [1636, 2, 1, "", "fromkeys"], [1637, 2, 1, "", "get"], [1638, 2, 1, "", "get_conduit_data"], [1639, 2, 1, "", "interpolate_data"], [1640, 2, 1, "", "items"], [1641, 2, 1, "", "keys"], [1642, 2, 1, "", "labels"], [1643, 2, 1, "", "num_pores"], [1644, 2, 1, "", "num_throats"], [1645, 2, 1, "", "pop"], [1646, 2, 1, "", "popitem"], [1647, 2, 1, "", "pores"], [1648, 2, 1, "", "props"], [1649, 2, 1, "", "regenerate_models"], [1650, 2, 1, "", "run_model"], [1651, 2, 1, "", "set_label"], [1652, 2, 1, "", "setdefault"], [1653, 2, 1, "", "throats"], [1654, 2, 1, "", "to_indices"], [1655, 2, 1, "", "to_mask"], [1656, 2, 1, "", "update"], [1657, 2, 1, "", "values"]], "openpnm.solvers": [[1659, 1, 1, "", "BaseSolver"], [1661, 1, 1, "", "DirectSolver"], [1663, 1, 1, "", "IterativeSolver"], [1665, 1, 1, "", "PETScLinearSolver"], [1667, 1, 1, "", "PardisoSpsolve"], [1669, 1, 1, "", "PyamgRugeStubenSolver"], [1671, 1, 1, "", "ScipyCG"], [1673, 1, 1, "", "ScipySpsolve"]], "openpnm.solvers.BaseSolver": [[1660, 2, 1, "", "solve"]], "openpnm.solvers.DirectSolver": [[1662, 2, 1, "", "solve"]], "openpnm.solvers.IterativeSolver": [[1664, 2, 1, "", "solve"]], "openpnm.solvers.PETScLinearSolver": [[1666, 2, 1, "", "solve"]], "openpnm.solvers.PardisoSpsolve": [[1668, 2, 1, "", "solve"]], "openpnm.solvers.PyamgRugeStubenSolver": [[1670, 2, 1, "", "solve"]], "openpnm.solvers.ScipyCG": [[1672, 2, 1, "", "solve"]], "openpnm.solvers.ScipySpsolve": [[1674, 2, 1, "", "solve"]], "openpnm.topotools": [[1676, 3, 1, "", "add_boundary_pores"], [1677, 3, 1, "", "add_reservoir_pore"], [1678, 3, 1, "", "bond_percolation"], [1679, 3, 1, "", "clone_pores"], [1680, 3, 1, "", "connect_pores"], [1681, 3, 1, "", "conns_to_am"], [1682, 3, 1, "", "dimensionality"], [1683, 3, 1, "", "drop_sites"], [1684, 3, 1, "", "extend"], [1685, 3, 1, "", "filter_pores_by_z"], [1686, 3, 1, "", "find_clusters"], [1687, 3, 1, "", "find_connected_sites"], [1688, 3, 1, "", "find_connecting_bonds"], [1689, 3, 1, "", "find_interface_throats"], [1690, 3, 1, "", "find_isolated_clusters"], [1691, 3, 1, "", "find_neighbor_bonds"], [1692, 3, 1, "", "find_neighbor_sites"], [1693, 3, 1, "", "find_path"], [1694, 3, 1, "", "find_surface_pores"], [1695, 3, 1, "", "generate_base_points"], [1696, 3, 1, "", "get_domain_area"], [1697, 3, 1, "", "get_domain_length"], [1698, 3, 1, "", "get_shape"], [1699, 3, 1, "", "get_spacing"], [1700, 3, 1, "", "hull_centroid"], [1701, 3, 1, "", "is_fully_connected"], [1702, 3, 1, "", "iscoplanar"], [1703, 3, 1, "", "isoutside"], [1704, 3, 1, "", "ispercolating"], [1705, 3, 1, "", "issymmetric"], [1706, 3, 1, "", "istriangular"], [1707, 3, 1, "", "istril"], [1708, 3, 1, "", "istriu"], [1709, 3, 1, "", "label_faces"], [1710, 3, 1, "", "merge_networks"], [1711, 3, 1, "", "merge_pores"], [1712, 3, 1, "", "reduce_coordination"], [1713, 3, 1, "", "reflect_base_points"], [1714, 3, 1, "", "rotate_coords"], [1715, 3, 1, "", "shear_coords"], [1716, 3, 1, "", "site_percolation"], [1717, 3, 1, "", "stitch"], [1718, 3, 1, "", "template_cylinder_annulus"], [1719, 3, 1, "", "template_sphere_shell"], [1720, 3, 1, "", "tri_to_am"], [1721, 3, 1, "", "trim"], [1722, 3, 1, "", "trim_disconnected_clusters"], [1723, 3, 1, "", "vor_to_am"]], "openpnm.utils": [[1725, 1, 1, "", "Docorator"], [1751, 1, 1, "", "HealthDict"], [1763, 1, 1, "", "NestedDict"], [1777, 1, 1, "", "PrintableDict"], [1789, 1, 1, "", "PrintableList"], [1801, 1, 1, "", "Project"], [1804, 1, 1, "", "SettingsAttr"], [1805, 1, 1, "", "SimpleList"], [1807, 1, 1, "", "TypedList"], [1819, 1, 1, "", "TypedMixin"], [1820, 1, 1, "", "TypedSet"], [1838, 1, 1, "", "Workspace"], [1857, 3, 1, "", "check_data_health"], [1858, 3, 1, "", "check_network_health"], [1859, 3, 1, "", "dict_to_struct"], [1860, 3, 1, "", "flat_list"], [1861, 3, 1, "", "get_mixture_model_args"], [1862, 3, 1, "", "get_printable_labels"], [1863, 3, 1, "", "get_printable_props"], [1864, 3, 1, "", "ignore_warnings"], [1865, 3, 1, "", "is_symmetric"], [1866, 3, 1, "", "is_transient"], [1867, 3, 1, "", "is_valid_propname"], [1868, 3, 1, "", "methods_to_table"], [1869, 3, 1, "", "models_to_table"], [1870, 3, 1, "", "sanitize_dict"], [1871, 3, 1, "", "struct_to_dict"]], "openpnm.utils.Docorator": [[1726, 2, 1, "", "__call__"], [1727, 2, 1, "", "dedent"], [1728, 2, 1, "", "dedents"], [1729, 2, 1, "", "delete_kwargs"], [1730, 2, 1, "", "delete_kwargs_s"], [1731, 2, 1, "", "delete_params"], [1732, 2, 1, "", "delete_params_s"], [1733, 2, 1, "", "delete_types"], [1734, 2, 1, "", "delete_types_s"], [1735, 2, 1, "", "get_docstring"], [1736, 2, 1, "", "get_extended_summary"], [1737, 2, 1, "", "get_extended_summaryf"], [1738, 2, 1, "", "get_full_description"], [1739, 2, 1, "", "get_full_descriptionf"], [1740, 2, 1, "", "get_sections"], [1741, 2, 1, "", "get_sectionsf"], [1742, 2, 1, "", "get_summary"], [1743, 2, 1, "", "get_summaryf"], [1744, 2, 1, "", "keep_params"], [1745, 2, 1, "", "keep_params_s"], [1746, 2, 1, "", "keep_types"], [1747, 2, 1, "", "keep_types_s"], [1748, 2, 1, "", "save_docstring"], [1749, 2, 1, "", "with_indent"], [1750, 2, 1, "", "with_indents"]], "openpnm.utils.HealthDict": [[1752, 2, 1, "", "clear"], [1753, 2, 1, "", "copy"], [1754, 2, 1, "", "fromkeys"], [1755, 2, 1, "", "get"], [1756, 2, 1, "", "items"], [1757, 2, 1, "", "keys"], [1758, 2, 1, "", "pop"], [1759, 2, 1, "", "popitem"], [1760, 2, 1, "", "setdefault"], [1761, 2, 1, "", "update"], [1762, 2, 1, "", "values"]], "openpnm.utils.NestedDict": [[1764, 2, 1, "", "clear"], [1765, 2, 1, "", "copy"], [1766, 2, 1, "", "fromkeys"], [1767, 2, 1, "", "get"], [1768, 2, 1, "", "items"], [1769, 2, 1, "", "keys"], [1770, 2, 1, "", "pop"], [1771, 2, 1, "", "popitem"], [1772, 2, 1, "", "setdefault"], [1773, 2, 1, "", "to_dict"], [1774, 2, 1, "", "unravel"], [1775, 2, 1, "", "update"], [1776, 2, 1, "", "values"]], "openpnm.utils.PrintableDict": [[1778, 2, 1, "", "clear"], [1779, 2, 1, "", "copy"], [1780, 2, 1, "", "fromkeys"], [1781, 2, 1, "", "get"], [1782, 2, 1, "", "items"], [1783, 2, 1, "", "keys"], [1784, 2, 1, "", "pop"], [1785, 2, 1, "", "popitem"], [1786, 2, 1, "", "setdefault"], [1787, 2, 1, "", "update"], [1788, 2, 1, "", "values"]], "openpnm.utils.PrintableList": [[1790, 2, 1, "", "append"], [1791, 2, 1, "", "clear"], [1792, 2, 1, "", "copy"], [1793, 2, 1, "", "count"], [1794, 2, 1, "", "extend"], [1795, 2, 1, "", "index"], [1796, 2, 1, "", "insert"], [1797, 2, 1, "", "pop"], [1798, 2, 1, "", "remove"], [1799, 2, 1, "", "reverse"], [1800, 2, 1, "", "sort"]], "openpnm.utils.Project": [[1802, 2, 1, "", "append"], [1803, 2, 1, "", "copy"]], "openpnm.utils.SimpleList": [[1806, 2, 1, "", "append"]], "openpnm.utils.TypedList": [[1808, 2, 1, "", "append"], [1809, 2, 1, "", "clear"], [1810, 2, 1, "", "copy"], [1811, 2, 1, "", "count"], [1812, 2, 1, "", "extend"], [1813, 2, 1, "", "index"], [1814, 2, 1, "", "insert"], [1815, 2, 1, "", "pop"], [1816, 2, 1, "", "remove"], [1817, 2, 1, "", "reverse"], [1818, 2, 1, "", "sort"]], "openpnm.utils.TypedSet": [[1821, 2, 1, "", "add"], [1822, 2, 1, "", "clear"], [1823, 2, 1, "", "copy"], [1824, 2, 1, "", "difference"], [1825, 2, 1, "", "difference_update"], [1826, 2, 1, "", "discard"], [1827, 2, 1, "", "intersection"], [1828, 2, 1, "", "intersection_update"], [1829, 2, 1, "", "isdisjoint"], [1830, 2, 1, "", "issubset"], [1831, 2, 1, "", "issuperset"], [1832, 2, 1, "", "pop"], [1833, 2, 1, "", "remove"], [1834, 2, 1, "", "symmetric_difference"], [1835, 2, 1, "", "symmetric_difference_update"], [1836, 2, 1, "", "union"], [1837, 2, 1, "", "update"]], "openpnm.utils.Workspace": [[1839, 2, 1, "", "clear"], [1840, 2, 1, "", "close_project"], [1841, 2, 1, "", "copy"], [1842, 2, 1, "", "copy_project"], [1843, 2, 1, "", "fromkeys"], [1844, 2, 1, "", "get"], [1845, 2, 1, "", "items"], [1846, 2, 1, "", "keys"], [1847, 2, 1, "", "load_project"], [1848, 2, 1, "", "load_workspace"], [1849, 2, 1, "", "new_project"], [1850, 2, 1, "", "pop"], [1851, 2, 1, "", "popitem"], [1852, 2, 1, "", "save_project"], [1853, 2, 1, "", "save_workspace"], [1854, 2, 1, "", "setdefault"], [1855, 2, 1, "", "update"], [1856, 2, 1, "", "values"]], "openpnm.visualization": [[1873, 3, 1, "", "draw_conduit"], [1874, 3, 1, "", "generate_voxel_image"], [1875, 3, 1, "", "plot_connections"], [1876, 3, 1, "", "plot_coordinates"], [1877, 3, 1, "", "plot_networkx"], [1878, 3, 1, "", "plot_notebook"], [1879, 3, 1, "", "plot_tutorial"], [1880, 3, 1, "", "plot_vispy"], [1881, 3, 1, "", "set_mpl_style"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"applic": 0, "exampl": [1, 13], "refer": [2, 1882], "10": 3, "step": [3, 9], "learn": 3, "openpnm": [3, 5, 22, 23, 28, 35, 519], "predict": [4, 6, 8, 10, 12], "absolut": [4, 21], "permeabl": [4, 12, 14], "creat": [4, 8, 10, 11, 12, 14, 18, 20, 30, 31, 32], "random": [4, 9, 10, 26, 707, 715, 759, 765, 798], "cubic": [4, 10, 14, 26, 949], "network": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 23, 26, 27, 28, 35, 645, 802, 909, 1182, 1675], "phase": [4, 6, 7, 8, 9, 11, 12, 14, 31, 32, 646, 819, 1258, 1450], "object": [4, 31, 32], "appli": [4, 6, 8, 9, 11, 12, 20], "stoke": [4, 6], "flow": [4, 6], "calcul": [4, 7, 8, 10, 11, 12, 14, 29, 32], "adjust": [5, 14], "pore": [5, 6, 9, 10, 14, 15, 23, 27, 28, 29, 30, 32, 35, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 507, 554, 570, 635, 700, 706, 709, 717, 722, 938, 977, 1015, 1053, 1093, 1132, 1171, 1209, 1247, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647], "size": [5, 9, 14, 23, 29, 670, 685, 709, 760], "distribut": [5, 9, 14, 29], "geometri": [5, 7, 637, 655], "throat": [5, 9, 10, 23, 27, 28, 29, 30, 67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 486, 513, 560, 572, 728, 731, 733, 739, 753, 757, 760, 767, 772, 774, 944, 983, 1021, 1059, 1099, 1138, 1177, 1215, 1253, 1282, 1315, 1349, 1383, 1412, 1445, 1473, 1501, 1529, 1562, 1591, 1624, 1653], "us": [5, 9, 21, 22, 28, 29, 30, 31, 33], "scipi": [5, 29], "stat": [5, 29], "class": [5, 31, 519, 1724], "directli": 5, "pre": 5, "defin": [5, 6, 11, 12, 14, 30, 32], "model": [5, 15, 23, 29, 30, 31, 32, 35, 635, 645, 656, 670, 685, 700, 706, 709, 717, 722, 728, 731, 733, 739, 753, 757, 760, 767, 772, 774], "dispers": 6, "coeffici": [6, 14, 20], "gener": [6, 26], "effect": [6, 7, 725], "volum": [6, 10, 722, 774], "perform": [6, 7, 9, 14], "transient": [6, 24, 607], "advect": 6, "diffus": [6, 7, 8, 11, 23, 670, 828], "elut": 6, "curv": [6, 11], "solv": [6, 20, 610, 1660, 1662, 1664, 1666, 1668, 1670, 1672, 1674], "find": [7, 9, 28], "tortuos": 7, "physic": [7, 9, 652, 870], "fickian": [7, 8], "visual": [7, 8, 26, 34, 1872], "result": [7, 8], "format": [8, 28], "factor": [8, 23, 670, 685, 728], "calibr": 9, "mercuri": [9, 650, 1389], "intrus": 9, "data": [9, 27, 30, 611], "import": [9, 26, 611], "packag": [9, 21], "sandston": 9, "add": [9, 1821], "geometr": [9, 29], "properti": [9, 27, 29, 31], "given": 9, "seed": [9, 706, 757], "between": 9, "0": 9, "1": [9, 31], "check": [9, 31], "consist": [9, 31], "addit": 9, "poros": 10, "void": 10, "bulk": 10, "discuss": 10, "issu": 10, "domain": [10, 30, 537], "overlap": 10, "extract": 10, "obtain": 11, "rel": [11, 12], "ordinari": 11, "percol": [11, 12, 33], "satur": 11, "rate": [11, 20, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447], "function": [11, 12, 22, 25, 611, 1675, 1724], "multiphas": [11, 12, 460, 892], "conduct": [11, 12, 23, 32], "invas": [12, 33], "occup": 12, "contibut": 13, "get": [14, 31, 46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 468, 497, 524, 544, 578, 593, 925, 964, 1002, 1040, 1080, 1119, 1158, 1196, 1234, 1266, 1296, 1330, 1364, 1396, 1426, 1457, 1485, 1513, 1543, 1575, 1605, 1637, 1755, 1767, 1781, 1844], "start": [14, 27], "drainag": [14, 33, 98], "simul": [14, 32, 33, 607, 1658], "scale": [15, 29, 32, 635, 799], "set": [16, 31], "attribut": [16, 31], "machineri": 16, "datatyp": 16, "i": [16, 17, 35], "enforc": 16, "can": 16, "access": 16, "dict": [16, 25], "kei": [16, 27, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 472, 501, 528, 548, 580, 595, 931, 970, 1008, 1046, 1086, 1125, 1164, 1202, 1240, 1270, 1302, 1336, 1370, 1400, 1432, 1461, 1489, 1517, 1549, 1579, 1611, 1641, 1757, 1769, 1783, 1846], "namespac": 16, "clean": 16, "collect": [16, 29, 607, 611, 635, 636, 645, 1658, 1675], "also": 16, "type": 16, "ar": [16, 27], "attach": 16, "befor": 16, "init": 16, "The": [17, 27, 28, 30, 31, 36, 519], "workspac": [17, 1838], "project": [17, 1801], "usag": 17, "singleton": 17, "One": 17, "per": 17, "manag": 18, "cluster": 18, "illustr": 18, "problem": 18, "fix": 18, "avail": 19, "matrix": [19, 20, 28, 1658], "solver": [19, 1658], "steadi": [20, 1658], "state": [20, 1658], "transport": [20, 22, 23, 24, 32, 427], "valu": [20, 27, 31, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 458, 490, 517, 536, 564, 585, 600, 948, 987, 1025, 1063, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1505, 1533, 1566, 1595, 1628, 1657, 1762, 1776, 1788, 1856], "boundari": [20, 32], "condit": [20, 32], "system": 20, "equat": 20, "spars": [20, 27, 28], "matric": [20, 27], "explan": 21, "unit": 21, "pressur": 21, "v": [21, 23, 27], "gaug": 21, "convers": 21, "challeng": 21, "reactiv": 22, "sourc": 22, "term": 22, "how": [22, 35], "work": 22, "singl": [23, 32], "conduit": [23, 27, 656], "shape": [23, 30, 728], "built": [23, 31], "deriv": 23, "arbitrari": 23, "hydraul": [23, 685], "element": 23, "numer": [25, 27], "python": [25, 35], "primer": 25, "list": 25, "flexibl": 25, "slow": 25, "numpi": [25, 27], "ndarrai": 25, "optim": 25, "vector": [25, 27, 772], "method": [25, 28, 30, 32], "versu": 25, "dictionari": [25, 27], "hold": 25, "thing": 25, "togeth": 25, "subclass": 25, "quick": 26, "cubictempl": [26, 988], "other": [26, 28], "lattic": 26, "delaunai": [26, 1026], "voronoi": [26, 1220], "tessel": 26, "storag": 27, "topologi": [27, 1675], "spreadsheet": 27, "analogi": 27, "rule": 27, "maintain": 27, "integr": [27, 607, 608], "all": 27, "convert": 27, "arrai": 27, "must": 27, "With": 27, "ani": 27, "scalar": 27, "expand": 27, "full": [27, 30], "length": [27, 29, 656, 739], "nest": 27, "name": 27, "allow": 27, "boolean": [27, 30], "treat": 27, "label": [27, 30, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 502, 549, 567, 932, 971, 1009, 1047, 1087, 1126, 1165, 1203, 1241, 1271, 1303, 1337, 1371, 1401, 1433, 1462, 1490, 1518, 1550, 1580, 1612, 1642], "lead": 27, "underscor": 27, "hidden": 27, "param": 27, "prefix": 27, "repres": 27, "adjac": [27, 28], "dens": 27, "represent": 28, "queri": 28, "manipul": [28, 1675], "coo": 28, "incid": 28, "neighor": 28, "neighbor": 28, "connect": 28, "remov": [28, 31, 1798, 1816, 1833], "ad": [28, 29, 31], "assign": [29, 31, 32], "manual": [29, 32, 33], "from": 29, "comput": 29, "surfac": [29, 717, 767], "area": [29, 700, 717, 733, 767], "librari": 29, "predefin": [29, 30], "custom": [29, 30, 31], "overwrit": 29, "them": 29, "Their": 29, "argument": [29, 30], "introduct": 29, "depend": 29, "handler": 29, "mode": 30, "mask": 30, "set_label": [30, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 511, 558, 571, 942, 981, 1019, 1057, 1097, 1136, 1175, 1213, 1251, 1280, 1313, 1347, 1381, 1410, 1443, 1471, 1499, 1527, 1560, 1589, 1622, 1651], "sytax": 30, "read": 30, "write": [30, 31], "subdomain": 30, "chang": 30, "locat": 30, "mix": 30, "mani": 30, "differ": [30, 785, 1824], "part": 31, "direct": 31, "constant": [31, 784], "water": [31, 651, 1630], "specif": 31, "your": 31, "own": 31, "common": 31, "fluid": 31, "2": 31, "speci": [31, 1478], "mixtur": [31, 840, 1417], "pure": 31, "ga": [31, 648], "liquid": [31, 649], "composit": 31, "explor": 31, "featur": 31, "info": 31, "compon": 31, "mole": 31, "fraction": [31, 786], "get_comp_v": [31, 1297, 1331, 1365, 1427, 1544, 1606], "check_mixture_health": [31, 1291, 1325, 1359, 1421, 1538, 1600], "retriev": 31, "wildcard": 31, "syntax": 31, "viscos": [32, 863], "basic": [32, 653], "algorithm": [32, 33, 37, 72], "rigor": 32, "implement": 33, "draing": 33, "process": 33, "invasionpercol": [33, 196], "option": 34, "spyder": 34, "interact": 34, "plot": 34, "jupyt": 34, "notebook": 34, "paraview": 34, "framework": 35, "what": 35, "star": 35, "To": 35, "cite": 35, "citat": 35, "instal": 36, "dev": 36, "version": 36, "easi": 36, "wai": 36, "hard": 36, "correct": 36, "where": 36, "": 36, "my": 36, "conda": 36, "prompt": 36, "window": 36, "mac": 36, "linux": 36, "advectiondiffus": 38, "clear": [39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 464, 492, 521, 540, 575, 587, 914, 953, 991, 1029, 1067, 1108, 1147, 1185, 1223, 1262, 1292, 1326, 1360, 1392, 1422, 1453, 1481, 1509, 1539, 1571, 1601, 1633, 1752, 1764, 1778, 1791, 1809, 1822, 1839], "clear_bc": [40, 74, 101, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 493], "clear_rate_bc": [41, 133, 166, 231, 264, 297, 330, 364, 397, 430], "clear_value_bc": [42, 134, 167, 232, 265, 298, 331, 365, 398, 431], "copi": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 366, 399, 432, 465, 494, 522, 541, 576, 588, 915, 954, 992, 1030, 1068, 1109, 1148, 1186, 1224, 1263, 1293, 1327, 1361, 1393, 1423, 1454, 1482, 1510, 1540, 1572, 1602, 1634, 1753, 1765, 1779, 1792, 1803, 1810, 1823, 1841], "filter_by_label": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 466, 495, 542, 566, 918, 957, 995, 1033, 1071, 1112, 1151, 1189, 1227, 1264, 1294, 1328, 1362, 1394, 1424, 1455, 1483, 1511, 1541, 1573, 1603, 1635], "fromkei": [45, 77, 104, 137, 170, 202, 235, 268, 301, 334, 368, 401, 434, 467, 496, 523, 543, 577, 592, 924, 963, 1001, 1039, 1079, 1118, 1157, 1195, 1233, 1265, 1295, 1329, 1363, 1395, 1425, 1456, 1484, 1512, 1542, 1574, 1604, 1636, 1754, 1766, 1780, 1843], "get_conduit_data": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 498, 525, 545, 927, 966, 1004, 1042, 1082, 1121, 1160, 1198, 1236, 1267, 1298, 1332, 1366, 1397, 1428, 1458, 1486, 1514, 1545, 1576, 1607, 1638], "interpolate_data": [48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 499, 526, 546, 929, 968, 1006, 1044, 1084, 1123, 1162, 1200, 1238, 1268, 1300, 1334, 1368, 1398, 1430, 1459, 1487, 1515, 1547, 1577, 1609, 1639], "item": [49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 500, 527, 547, 579, 594, 930, 969, 1007, 1045, 1085, 1124, 1163, 1201, 1239, 1269, 1301, 1335, 1369, 1399, 1431, 1460, 1488, 1516, 1548, 1578, 1610, 1640, 1756, 1768, 1782, 1845], "num_por": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 474, 503, 550, 568, 934, 973, 1011, 1049, 1089, 1128, 1167, 1205, 1243, 1272, 1304, 1338, 1372, 1402, 1434, 1463, 1491, 1519, 1551, 1581, 1613, 1643], "num_throat": [53, 85, 112, 145, 178, 210, 243, 276, 309, 342, 376, 409, 442, 475, 504, 551, 569, 935, 974, 1012, 1050, 1090, 1129, 1168, 1206, 1244, 1273, 1305, 1339, 1373, 1403, 1435, 1464, 1492, 1520, 1552, 1582, 1614, 1644], "pop": [54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 377, 410, 443, 476, 505, 529, 552, 581, 596, 936, 975, 1013, 1051, 1091, 1130, 1169, 1207, 1245, 1274, 1306, 1340, 1374, 1404, 1436, 1465, 1493, 1521, 1553, 1583, 1615, 1645, 1758, 1770, 1784, 1797, 1815, 1832, 1850], "popitem": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 506, 530, 553, 582, 597, 937, 976, 1014, 1052, 1092, 1131, 1170, 1208, 1246, 1275, 1307, 1341, 1375, 1405, 1437, 1466, 1494, 1522, 1554, 1584, 1616, 1646, 1759, 1771, 1785, 1851], "prop": [57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 479, 508, 531, 555, 939, 978, 1016, 1054, 1094, 1133, 1172, 1210, 1248, 1277, 1309, 1343, 1377, 1407, 1439, 1468, 1496, 1524, 1556, 1586, 1618, 1648], "run": [59, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 509], "set_bc": [60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 510], "set_outflow_bc": [62, 351], "set_rate_bc": [63, 154, 187, 252, 285, 318, 352, 385, 418, 451], "set_sourc": [64, 155, 188, 253, 286, 319, 353, 386, 419], "set_value_bc": [65, 156, 189, 254, 287, 320, 354, 387, 420, 452], "setdefault": [66, 92, 124, 157, 190, 222, 255, 288, 321, 355, 388, 421, 453, 485, 512, 532, 559, 583, 598, 943, 982, 1020, 1058, 1098, 1137, 1176, 1214, 1252, 1281, 1314, 1348, 1382, 1411, 1444, 1472, 1500, 1528, 1561, 1590, 1623, 1652, 1760, 1772, 1786, 1854], "to_indic": [68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 487, 514, 533, 561, 945, 984, 1022, 1060, 1100, 1139, 1178, 1216, 1254, 1283, 1316, 1350, 1384, 1413, 1446, 1474, 1502, 1530, 1563, 1592, 1625, 1654], "to_mask": [69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 456, 488, 515, 534, 562, 946, 985, 1023, 1061, 1101, 1140, 1179, 1217, 1255, 1284, 1317, 1351, 1385, 1414, 1447, 1475, 1503, 1531, 1564, 1593, 1626, 1655], "updat": [70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 489, 516, 535, 563, 584, 599, 947, 986, 1024, 1062, 1102, 1141, 1180, 1218, 1256, 1285, 1318, 1352, 1386, 1415, 1448, 1476, 1504, 1532, 1565, 1594, 1627, 1656, 1761, 1775, 1787, 1837, 1855], "apply_trap": [99, 197], "pc_curv": [113, 211], "reset": [118, 216], "set_inlet_bc": [121, 219], "set_outlet_bc": [123, 221], "fickiandiffus": 130, "fourierconduct": 163, "ohmicconduct": 228, "reactivetransport": 261, "stokesflow": 294, "transientadvectiondiffus": 327, "transientfickiandiffus": 361, "transientreactivetransport": 394, "contrib": 459, "add_model": [461, 538, 602, 912, 951, 989, 1027, 1065, 1106, 1145, 1183, 1221, 1260, 1289, 1323, 1357, 1390, 1419, 1451, 1479, 1507, 1536, 1569, 1598, 1631], "add_model_collect": [462, 539, 603, 913, 952, 990, 1028, 1066, 1107, 1146, 1184, 1222, 1261, 1290, 1324, 1358, 1391, 1420, 1452, 1480, 1508, 1537, 1570, 1599, 1632], "add_phas": 463, "regenerate_model": [480, 556, 604, 940, 979, 1017, 1055, 1095, 1134, 1173, 1211, 1249, 1278, 1310, 1344, 1378, 1408, 1440, 1469, 1497, 1525, 1557, 1587, 1619, 1649], "run_model": [481, 557, 605, 941, 980, 1018, 1056, 1096, 1135, 1174, 1212, 1250, 1279, 1312, 1346, 1380, 1409, 1442, 1470, 1498, 1526, 1559, 1588, 1621, 1650], "set_binary_partition_coef": 482, "set_occup": 484, "transientmultiphys": 491, "multiphase_diffus": 518, "core": 519, "main": 519, "base": 519, "modelsmixin": 519, "base2": 520, "labelmixin": 565, "modelwrapp": 573, "__call__": [574, 1726], "modelsdict": 586, "dependency_graph": 589, "dependency_list": 590, "dependency_map": 591, "modelsmixin2": 601, "parsermixin": 606, "od": 607, "scipyrk45": 609, "io": 611, "export": 611, "network_from_csv": 612, "network_from_jsongraph": 613, "network_from_marock": 614, "network_from_networkx": 615, "network_from_pergeo": 616, "network_from_porespi": 617, "network_from_statoil": 618, "network_to_comsol": 619, "network_to_csv": 620, "network_to_jsongraph": 621, "network_to_networkx": 622, "network_to_panda": 623, "network_to_pergeo": 624, "network_to_salom": 625, "network_to_stl": 626, "print_hdf5": 627, "project_to_csv": 628, "project_to_dict": 629, "project_to_hdf5": 630, "project_to_panda": 631, "project_to_paraview": 632, "project_to_vtk": 633, "project_to_xdmf": 634, "circles_and_rectangl": [638, 657, 671, 686, 740], "cones_and_cylind": [639, 658, 672, 687, 741], "cubes_and_cuboid": [640, 659, 673, 688, 742], "pyramids_and_cuboid": [641, 666, 681, 696, 749], "spheres_and_cylind": [642, 667, 682, 697, 738, 750], "squares_and_rectangl": [643, 668, 683, 698, 751], "trapezoids_and_rectangl": [644, 669, 684, 699, 752], "air": [647, 1259], "standard": 654, "conduit_length": 656, "hybrid_cones_and_cylind": [660, 674, 689, 743], "hybrid_pyramids_and_cuboid": [661, 675, 690, 744], "hybrid_trapezoids_and_rectangl": [662, 676, 691, 745], "intersecting_con": [663, 677, 692, 746], "intersecting_pyramid": [664, 678, 693, 747], "intersecting_trapezoid": [665, 679, 694, 748], "diffusive_size_factor": 670, "ncylinders_in_seri": [680, 695], "hydraulic_size_factor": 685, "pore_cross_sectional_area": 700, "cross": [700, 733], "section": [700, 733], "circl": [701, 718, 723], "cone": 702, "cube": [703, 719, 724], "sphere": [704, 720, 726], "squar": [705, 721, 727], "pore_se": 706, "spatially_correl": 708, "pore_s": 709, "equivalent_diamet": [710, 761], "from_neighbor_throat": [711, 788], "generic_distribut": [712, 763, 789], "largest_spher": 713, "normal": [714, 764, 794, 795], "weibul": [716, 766, 801], "pore_surface_area": 717, "pore_volum": 722, "throat_capillary_shape_factor": 728, "capillari": 728, "jenkins_rao": 729, "mason_morrow": 730, "throat_centroid": 731, "centroid": 731, "pore_coord": 732, "throat_cross_sectional_area": 733, "cuboid": [734, 754, 768, 775], "cylind": [735, 755, 769, 776], "rectangl": [736, 756, 771, 780], "throat_endpoint": 737, "throat_length": 739, "throat_perimet": 753, "perimet": 753, "throat_se": 757, "from_neighbor_por": [758, 762, 787], "throat_siz": 760, "throat_surface_area": 767, "extrus": [770, 777], "throat_vector": 772, "pore_to_por": 773, "throat_volum": 774, "len": 778, "pendular_r": 779, "misc": [781, 837], "miscellan": 781, "blank": 782, "clip": 783, "generic_funct": 790, "invert": 791, "linear": [792, 900], "match_histogram": 793, "polynomi": 796, "product": 797, "summat": 800, "bidirectional_throat": 803, "cluster_numb": 804, "cluster_s": 805, "coordination_numb": 806, "count_coincident_por": 807, "distance_to_furthest_neighbor": 808, "distance_to_nearest_neighbor": 809, "distance_to_nearest_por": 810, "duplicate_throat": 811, "find_coincident_por": 812, "gabriel_edg": 813, "headless_throat": 814, "isolated_por": 815, "looped_throat": 816, "pore_to_pore_dist": 817, "reversed_throat": 818, "chemicals_wrapp": 820, "critical_prop": 821, "densiti": 822, "ideal_ga": 823, "liquid_mixture_costald": 824, "liquid_pure_costald": 825, "mass_to_molar": 826, "water_correl": [827, 851, 858, 862, 869], "gas_mixture_c": 829, "gas_mixture_fesg": 830, "liquid_mixture_tc": 831, "heat_capac": 832, "gas_mixture_yweight": 833, "gas_pure_trc": 834, "liquid_mixture_xweight": [835, 867], "liquid_pure_rp": 836, "mix_and_match": 838, "mole_to_mass_fract": [839, 844], "from_compon": 841, "mixing_rul": 842, "mole_summ": 843, "salin": 845, "partition_coeffici": 846, "gaseous_species_in_wat": 847, "surface_tens": 848, "liquid_mixture_wsd": 849, "liquid_pure_bb": 850, "thermal_conduct": [852, 906], "gas_mixture_whz": 853, "gas_pure_gismr": 854, "liquid_mixture_dippr9h": 855, "liquid_pure_gismr": 856, "liquid_pure_sr": 857, "vapor_pressur": 859, "liquid_pure_antoin": 860, "liquid_pure_lk": 861, "gas_mixture_hz": 864, "gas_pure_gesmr": 865, "gas_pure_st": 866, "liquid_pure_l": 868, "ad_dif_conduct": 871, "ad_dif": 872, "capillary_pressur": 873, "purcel": [874, 890], "washburn": 875, "diffusive_conduct": 876, "generic_diffus": 877, "mixed_diffus": 878, "ordinary_diffus": 879, "taylor_aris_diffus": 880, "electrical_conduct": 881, "generic_electr": 882, "series_resistor": [883, 908], "hydraulic_conduct": 884, "generic_hydraul": 885, "hagen_poiseuil": 886, "valvatne_blunt": 887, "meniscu": 888, "general_toroid": 889, "sinusoid": 891, "conduit_conduct": 893, "late_fil": 894, "source_term": 895, "butler_volmer_conc": 896, "butler_volmer_voltag": 897, "exponenti": 898, "general_symbol": 899, "logarithm": 901, "natural_exponenti": 902, "natural_logarithm": 903, "power_law": 904, "standard_kinet": 905, "generic_therm": 907, "bodycenteredcub": 910, "add_boundary_por": [911, 950, 1105, 1144, 1676], "create_adjacency_matrix": [916, 955, 993, 1031, 1069, 1110, 1149, 1187, 1225], "create_incidence_matrix": [917, 956, 994, 1032, 1070, 1111, 1150, 1188, 1226], "find_connected_por": [919, 958, 996, 1034, 1072, 1113, 1152, 1190, 1228], "find_connecting_throat": [920, 959, 997, 1035, 1073, 1114, 1153, 1191, 1229], "find_nearby_por": [921, 960, 998, 1036, 1074, 1115, 1154, 1192, 1230], "find_neighbor_por": [922, 961, 999, 1037, 1075, 1116, 1155, 1193, 1231], "find_neighbor_throat": [923, 962, 1000, 1038, 1076, 1117, 1156, 1194, 1232], "get_adjacency_matrix": [926, 965, 1003, 1041, 1081, 1120, 1159, 1197, 1235], "get_incidence_matrix": [928, 967, 1005, 1043, 1083, 1122, 1161, 1199, 1237], "num_neighbor": [933, 972, 1010, 1048, 1088, 1127, 1166, 1204, 1242], "delaunayvoronoidu": 1064, "find_pore_hul": 1077, "find_throat_facet": 1078, "demo": 1104, "facecenteredcub": 1143, "binaryga": 1287, "add_comp": [1288, 1322, 1356, 1418, 1535, 1597], "get_mix_v": [1299, 1333, 1367, 1429, 1546, 1608], "remove_comp": [1311, 1345, 1379, 1441, 1558, 1620], "y": [1320, 1354, 1567], "gasmixtur": 1321, "liquidmixtur": 1355, "x": [1388, 1629], "standardga": 1506, "standardgasmixtur": 1534, "standardliquid": 1568, "standardliquidmixtur": 1596, "basesolv": 1659, "directsolv": 1661, "iterativesolv": 1663, "petsclinearsolv": 1665, "pardisospsolv": 1667, "pyamgrugestubensolv": 1669, "scipycg": 1671, "scipyspsolv": 1673, "topotool": 1675, "add_reservoir_por": 1677, "bond_percol": 1678, "clone_por": 1679, "connect_por": 1680, "conns_to_am": 1681, "dimension": 1682, "drop_sit": 1683, "extend": [1684, 1794, 1812], "filter_pores_by_z": 1685, "find_clust": 1686, "find_connected_sit": 1687, "find_connecting_bond": 1688, "find_interface_throat": 1689, "find_isolated_clust": 1690, "find_neighbor_bond": 1691, "find_neighbor_sit": 1692, "find_path": 1693, "find_surface_por": 1694, "generate_base_point": 1695, "get_domain_area": 1696, "get_domain_length": 1697, "get_shap": 1698, "get_spac": 1699, "hull_centroid": 1700, "is_fully_connect": 1701, "iscoplanar": 1702, "isoutsid": 1703, "ispercol": 1704, "issymmetr": 1705, "istriangular": 1706, "istril": 1707, "istriu": 1708, "label_fac": 1709, "merge_network": 1710, "merge_por": 1711, "reduce_coordin": 1712, "reflect_base_point": 1713, "rotate_coord": 1714, "shear_coord": 1715, "site_percol": 1716, "stitch": 1717, "template_cylinder_annulu": 1718, "template_sphere_shel": 1719, "tri_to_am": 1720, "trim": 1721, "trim_disconnected_clust": 1722, "vor_to_am": 1723, "util": 1724, "helper": 1724, "docor": 1725, "dedent": [1727, 1728], "delete_kwarg": 1729, "delete_kwargs_": 1730, "delete_param": 1731, "delete_params_": 1732, "delete_typ": 1733, "delete_types_": 1734, "get_docstr": 1735, "get_extended_summari": 1736, "get_extended_summaryf": 1737, "get_full_descript": 1738, "get_full_descriptionf": 1739, "get_sect": 1740, "get_sectionsf": 1741, "get_summari": 1742, "get_summaryf": 1743, "keep_param": 1744, "keep_params_": 1745, "keep_typ": 1746, "keep_types_": 1747, "save_docstr": 1748, "with_ind": [1749, 1750], "healthdict": 1751, "nesteddict": 1763, "to_dict": 1773, "unravel": 1774, "printabledict": 1777, "printablelist": 1789, "append": [1790, 1802, 1806, 1808], "count": [1793, 1811], "index": [1795, 1813], "insert": [1796, 1814], "revers": [1799, 1817], "sort": [1800, 1818], "settingsattr": 1804, "simplelist": 1805, "typedlist": 1807, "typedmixin": 1819, "typedset": 1820, "difference_upd": 1825, "discard": 1826, "intersect": 1827, "intersection_upd": 1828, "isdisjoint": 1829, "issubset": 1830, "issuperset": 1831, "symmetric_differ": 1834, "symmetric_difference_upd": 1835, "union": 1836, "close_project": 1840, "copy_project": 1842, "load_project": 1847, "load_workspac": 1848, "new_project": 1849, "save_project": 1852, "save_workspac": 1853, "check_data_health": 1857, "check_network_health": 1858, "dict_to_struct": 1859, "flat_list": 1860, "get_mixture_model_arg": 1861, "get_printable_label": 1862, "get_printable_prop": 1863, "ignore_warn": 1864, "is_symmetr": 1865, "is_transi": 1866, "is_valid_propnam": 1867, "methods_to_t": 1868, "models_to_t": 1869, "sanitize_dict": 1870, "struct_to_dict": 1871, "draw_conduit": 1873, "generate_voxel_imag": 1874, "plot_connect": 1875, "plot_coordin": 1876, "plot_networkx": 1877, "plot_notebook": 1878, "plot_tutori": 1879, "plot_vispi": 1880, "set_mpl_styl": 1881, "modul": 1882}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"setdefault": [[124, "setdefault"], [157, "setdefault"], [190, "setdefault"], [1854, "setdefault"], [1760, "setdefault"], [1786, "setdefault"], [1772, "setdefault"], [1652, "setdefault"], [1590, "setdefault"], [1561, "setdefault"], [1623, "setdefault"], [1472, "setdefault"], [1528, "setdefault"], [1500, "setdefault"], [1382, "setdefault"], [1411, "setdefault"], [1444, "setdefault"], [1348, "setdefault"], [1281, "setdefault"], [1314, "setdefault"], [1176, "setdefault"], [1252, "setdefault"], [1214, "setdefault"], [1098, "setdefault"], [1137, "setdefault"], [982, "setdefault"], [1058, "setdefault"], [1020, "setdefault"], [943, "setdefault"], [598, "setdefault"], [583, "setdefault"], [559, "setdefault"], [485, "setdefault"], [532, "setdefault"], [512, "setdefault"], [388, "setdefault"], [453, "setdefault"], [421, "setdefault"], [355, "setdefault"], [321, "setdefault"], [255, "setdefault"], [222, "setdefault"], [288, "setdefault"], [66, "setdefault"], [92, "setdefault"]], "labels": [[143, "labels"], [176, "labels"], [110, "labels"], [1642, "labels"], [1612, "labels"], [1580, "labels"], [1518, "labels"], [1490, "labels"], [1462, "labels"], [1550, "labels"], [1401, "labels"], [1433, "labels"], [1371, "labels"], [1303, "labels"], [1337, "labels"], [1271, "labels"], [1165, "labels"], [1203, "labels"], [1241, "labels"], [1126, "labels"], [1087, "labels"], [971, "labels"], [1047, "labels"], [1009, "labels"], [932, "labels"], [549, "labels"], [567, "labels"], [502, "labels"], [473, "labels"], [407, "labels"], [440, "labels"], [340, "labels"], [374, "labels"], [307, "labels"], [208, "labels"], [274, "labels"], [241, "labels"], [51, "labels"], [83, "labels"]], "set_BC": [[185, "set-bc"], [152, "set-bc"], [120, "set-bc"], [510, "set-bc"], [449, "set-bc"], [416, "set-bc"], [349, "set-bc"], [383, "set-bc"], [316, "set-bc"], [250, "set-bc"], [283, "set-bc"], [218, "set-bc"], [90, "set-bc"], [60, "set-bc"]], "set_value_BC": [[156, "set-value-bc"], [189, "set-value-bc"], [420, "set-value-bc"], [452, "set-value-bc"], [320, "set-value-bc"], [354, "set-value-bc"], [387, "set-value-bc"], [287, "set-value-bc"], [254, "set-value-bc"], [65, "set-value-bc"]], "keys": [[142, "keys"], [109, "keys"], [175, "keys"], [1846, "keys"], [1757, "keys"], [1783, "keys"], [1769, "keys"], [1641, "keys"], [1611, "keys"], [1579, "keys"], [1489, "keys"], [1549, "keys"], [1461, "keys"], [1517, "keys"], [1370, "keys"], [1400, "keys"], [1432, "keys"], [1270, "keys"], [1336, "keys"], [1302, "keys"], [1202, "keys"], [1164, "keys"], [1240, "keys"], [1086, "keys"], [1125, "keys"], [1046, "keys"], [970, "keys"], [1008, "keys"], [931, "keys"], [595, "keys"], [548, "keys"], [580, "keys"], [501, "keys"], [528, "keys"], [406, "keys"], [472, "keys"], [439, "keys"], [339, "keys"], [373, "keys"], [306, "keys"], [240, "keys"], [273, "keys"], [207, "keys"], [82, "keys"], [50, "keys"]], "update": [[128, "update"], [161, "update"], [1855, "update"], [1775, "update"], [1761, "update"], [1837, "update"], [1787, "update"], [1656, "update"], [1565, "update"], [1594, "update"], [1627, "update"], [1504, "update"], [1476, "update"], [1532, "update"], [1415, "update"], [1448, "update"], [1386, "update"], [1352, "update"], [1285, "update"], [1318, "update"], [1218, "update"], [1256, "update"], [1180, "update"], [1141, "update"], [1102, "update"], [986, "update"], [1062, "update"], [1024, "update"], [947, "update"], [584, "update"], [599, "update"], [516, "update"], [489, "update"], [563, "update"], [535, "update"], [392, "update"], [457, "update"], [425, "update"], [359, "update"], [292, "update"], [325, "update"], [259, "update"], [194, "update"], [226, "update"], [70, "update"], [96, "update"]], "throats": [[158, "throats"], [191, "throats"], [125, "throats"], [1653, "throats"], [1624, "throats"], [1562, "throats"], [1591, "throats"], [1473, "throats"], [1529, "throats"], [1501, "throats"], [1383, "throats"], [1445, "throats"], [1412, "throats"], [1349, "throats"], [1315, "throats"], [1282, "throats"], [1215, "throats"], [1253, "throats"], [1177, "throats"], [1138, "throats"], [1099, "throats"], [1059, "throats"], [1021, "throats"], [983, "throats"], [944, "throats"], [572, "throats"], [513, "throats"], [486, "throats"], [560, "throats"], [389, "throats"], [422, "throats"], [454, "throats"], [322, "throats"], [356, "throats"], [289, "throats"], [256, "throats"], [223, "throats"], [67, "throats"], [93, "throats"]], "FickianDiffusion": [[130, "fickiandiffusion"]], "clear_BCs": [[101, "clear-bcs"], [165, "clear-bcs"], [132, "clear-bcs"], [493, "clear-bcs"], [396, "clear-bcs"], [429, "clear-bcs"], [296, "clear-bcs"], [363, "clear-bcs"], [329, "clear-bcs"], [199, "clear-bcs"], [263, "clear-bcs"], [230, "clear-bcs"], [40, "clear-bcs"], [74, "clear-bcs"]], "values": [[162, "values"], [129, "values"], [97, "values"], [1856, "values"], [1762, "values"], [1776, "values"], [1788, "values"], [1657, "values"], [1628, "values"], [1595, "values"], [1566, "values"], [1477, "values"], [1505, "values"], [1533, "values"], [1449, "values"], [1416, "values"], [1387, "values"], [1353, "values"], [1319, "values"], [1286, "values"], [1219, "values"], [1257, "values"], [1181, "values"], [1103, "values"], [1142, "values"], [1063, "values"], [1025, "values"], [987, "values"], [948, "values"], [600, "values"], [585, "values"], [490, "values"], [517, "values"], [536, "values"], [564, "values"], [458, "values"], [393, "values"], [426, "values"], [360, "values"], [293, "values"], [326, "values"], [195, "values"], [227, "values"], [260, "values"], [71, "values"]], "copy": [[135, "copy"], [168, "copy"], [102, "copy"], [1823, "copy"], [1765, "copy"], [1810, "copy"], [1779, "copy"], [1841, "copy"], [1792, "copy"], [1803, "copy"], [1753, "copy"], [1602, "copy"], [1634, "copy"], [1572, "copy"], [1540, "copy"], [1482, "copy"], [1510, "copy"], [1454, "copy"], [1393, "copy"], [1361, "copy"], [1423, "copy"], [1263, "copy"], [1327, "copy"], [1293, "copy"], [1224, "copy"], [1186, "copy"], [1148, "copy"], [1068, "copy"], [1109, "copy"], [1030, "copy"], [992, "copy"], [915, "copy"], [954, "copy"], [588, "copy"], [494, "copy"], [522, "copy"], [576, "copy"], [541, "copy"], [432, "copy"], [465, "copy"], [399, "copy"], [366, "copy"], [299, "copy"], [332, "copy"], [266, "copy"], [200, "copy"], [233, "copy"], [75, "copy"], [43, "copy"]], "pc_curve": [[113, "pc-curve"], [211, "pc-curve"]], "set_inlet_BC": [[121, "set-inlet-bc"], [219, "set-inlet-bc"]], "clear_rate_BCs": [[166, "clear-rate-bcs"], [133, "clear-rate-bcs"], [430, "clear-rate-bcs"], [397, "clear-rate-bcs"], [330, "clear-rate-bcs"], [297, "clear-rate-bcs"], [364, "clear-rate-bcs"], [231, "clear-rate-bcs"], [264, "clear-rate-bcs"], [41, "clear-rate-bcs"]], "get_conduit_data": [[139, "get-conduit-data"], [106, "get-conduit-data"], [172, "get-conduit-data"], [1638, "get-conduit-data"], [1607, "get-conduit-data"], [1576, "get-conduit-data"], [1545, "get-conduit-data"], [1458, "get-conduit-data"], [1486, "get-conduit-data"], [1514, "get-conduit-data"], [1397, "get-conduit-data"], [1366, "get-conduit-data"], [1428, "get-conduit-data"], [1267, "get-conduit-data"], [1332, "get-conduit-data"], [1298, "get-conduit-data"], [1236, "get-conduit-data"], [1198, "get-conduit-data"], [1160, "get-conduit-data"], [1121, "get-conduit-data"], [1082, "get-conduit-data"], [1004, "get-conduit-data"], [1042, "get-conduit-data"], [966, "get-conduit-data"], [927, "get-conduit-data"], [545, "get-conduit-data"], [498, "get-conduit-data"], [525, "get-conduit-data"], [403, "get-conduit-data"], [469, "get-conduit-data"], [436, "get-conduit-data"], [370, "get-conduit-data"], [336, "get-conduit-data"], [303, "get-conduit-data"], [237, "get-conduit-data"], [204, "get-conduit-data"], [270, "get-conduit-data"], [79, "get-conduit-data"], [47, "get-conduit-data"]], "items": [[108, "items"], [141, "items"], [174, "items"], [1845, "items"], [1782, "items"], [1756, "items"], [1768, "items"], [1610, "items"], [1578, "items"], [1640, "items"], [1548, "items"], [1460, "items"], [1488, "items"], [1516, "items"], [1399, "items"], [1369, "items"], [1431, "items"], [1269, "items"], [1301, "items"], [1335, "items"], [1239, "items"], [1201, "items"], [1085, "items"], [1124, "items"], [1163, "items"], [1007, "items"], [1045, "items"], [969, "items"], [930, "items"], [594, "items"], [547, "items"], [500, "items"], [579, "items"], [527, "items"], [471, "items"], [438, "items"], [405, "items"], [372, "items"], [338, "items"], [305, "items"], [239, "items"], [272, "items"], [206, "items"], [81, "items"], [49, "items"]], "fromkeys": [[137, "fromkeys"], [170, "fromkeys"], [104, "fromkeys"], [1843, "fromkeys"], [1766, "fromkeys"], [1754, "fromkeys"], [1780, "fromkeys"], [1604, "fromkeys"], [1574, "fromkeys"], [1636, "fromkeys"], [1512, "fromkeys"], [1542, "fromkeys"], [1456, "fromkeys"], [1484, "fromkeys"], [1363, "fromkeys"], [1425, "fromkeys"], [1395, "fromkeys"], [1295, "fromkeys"], [1265, "fromkeys"], [1329, "fromkeys"], [1195, "fromkeys"], [1233, "fromkeys"], [1118, "fromkeys"], [1079, "fromkeys"], [1157, "fromkeys"], [1039, "fromkeys"], [1001, "fromkeys"], [924, "fromkeys"], [963, "fromkeys"], [592, "fromkeys"], [496, "fromkeys"], [543, "fromkeys"], [523, "fromkeys"], [577, "fromkeys"], [467, "fromkeys"], [434, "fromkeys"], [401, "fromkeys"], [334, "fromkeys"], [368, "fromkeys"], [301, "fromkeys"], [268, "fromkeys"], [235, "fromkeys"], [202, "fromkeys"], [45, "fromkeys"], [77, "fromkeys"]], "to_mask": [[160, "to-mask"], [127, "to-mask"], [193, "to-mask"], [1655, "to-mask"], [1593, "to-mask"], [1564, "to-mask"], [1626, "to-mask"], [1475, "to-mask"], [1503, "to-mask"], [1531, "to-mask"], [1447, "to-mask"], [1414, "to-mask"], [1385, "to-mask"], [1351, "to-mask"], [1284, "to-mask"], [1317, "to-mask"], [1217, "to-mask"], [1179, "to-mask"], [1255, "to-mask"], [1101, "to-mask"], [1140, "to-mask"], [1061, "to-mask"], [1023, "to-mask"], [985, "to-mask"], [946, "to-mask"], [515, "to-mask"], [562, "to-mask"], [534, "to-mask"], [488, "to-mask"], [391, "to-mask"], [424, "to-mask"], [456, "to-mask"], [324, "to-mask"], [291, "to-mask"], [358, "to-mask"], [258, "to-mask"], [225, "to-mask"], [95, "to-mask"], [69, "to-mask"]], "rate": [[150, "rate"], [183, "rate"], [447, "rate"], [414, "rate"], [381, "rate"], [347, "rate"], [314, "rate"], [281, "rate"], [248, "rate"], [58, "rate"]], "apply_trapping": [[99, "apply-trapping"], [197, "apply-trapping"]], "clear_value_BCs": [[134, "clear-value-bcs"], [167, "clear-value-bcs"], [398, "clear-value-bcs"], [431, "clear-value-bcs"], [365, "clear-value-bcs"], [331, "clear-value-bcs"], [298, "clear-value-bcs"], [265, "clear-value-bcs"], [232, "clear-value-bcs"], [42, "clear-value-bcs"]], "set_rate_BC": [[154, "set-rate-bc"], [187, "set-rate-bc"], [451, "set-rate-bc"], [418, "set-rate-bc"], [385, "set-rate-bc"], [352, "set-rate-bc"], [318, "set-rate-bc"], [285, "set-rate-bc"], [252, "set-rate-bc"], [63, "set-rate-bc"]], "popitem": [[147, "popitem"], [180, "popitem"], [115, "popitem"], [1851, "popitem"], [1759, "popitem"], [1785, "popitem"], [1771, "popitem"], [1616, "popitem"], [1554, "popitem"], [1646, "popitem"], [1584, "popitem"], [1494, "popitem"], [1466, "popitem"], [1522, "popitem"], [1405, "popitem"], [1375, "popitem"], [1437, "popitem"], [1275, "popitem"], [1341, "popitem"], [1307, "popitem"], [1208, "popitem"], [1170, "popitem"], [1246, "popitem"], [1131, "popitem"], [1092, "popitem"], [1052, "popitem"], [976, "popitem"], [1014, "popitem"], [937, "popitem"], [597, "popitem"], [582, "popitem"], [553, "popitem"], [530, "popitem"], [506, "popitem"], [411, "popitem"], [444, "popitem"], [477, "popitem"], [344, "popitem"], [378, "popitem"], [311, "popitem"], [213, "popitem"], [278, "popitem"], [245, "popitem"], [55, "popitem"], [87, "popitem"]], "reset": [[118, "reset"], [216, "reset"]], "props": [[149, "props"], [182, "props"], [117, "props"], [1648, "props"], [1586, "props"], [1556, "props"], [1618, "props"], [1468, "props"], [1524, "props"], [1496, "props"], [1407, "props"], [1377, "props"], [1439, "props"], [1277, "props"], [1343, "props"], [1309, "props"], [1210, "props"], [1248, "props"], [1172, "props"], [1094, "props"], [1133, "props"], [1054, "props"], [978, "props"], [1016, "props"], [939, "props"], [508, "props"], [555, "props"], [531, "props"], [446, "props"], [413, "props"], [479, "props"], [313, "props"], [346, "props"], [380, "props"], [280, "props"], [215, "props"], [247, "props"], [57, "props"], [89, "props"]], "pores": [[181, "pores"], [116, "pores"], [148, "pores"], [1585, "pores"], [1647, "pores"], [1617, "pores"], [1555, "pores"], [1523, "pores"], [1467, "pores"], [1495, "pores"], [1438, "pores"], [1376, "pores"], [1406, "pores"], [1276, "pores"], [1342, "pores"], [1308, "pores"], [1171, "pores"], [1209, "pores"], [1247, "pores"], [1132, "pores"], [1093, "pores"], [977, "pores"], [1053, "pores"], [1015, "pores"], [938, "pores"], [507, "pores"], [570, "pores"], [554, "pores"], [445, "pores"], [478, "pores"], [412, "pores"], [345, "pores"], [312, "pores"], [379, "pores"], [214, "pores"], [246, "pores"], [279, "pores"], [88, "pores"], [56, "pores"]], "num_throats": [[112, "num-throats"], [178, "num-throats"], [145, "num-throats"], [1582, "num-throats"], [1614, "num-throats"], [1552, "num-throats"], [1644, "num-throats"], [1492, "num-throats"], [1464, "num-throats"], [1520, "num-throats"], [1435, "num-throats"], [1373, "num-throats"], [1403, "num-throats"], [1339, "num-throats"], [1305, "num-throats"], [1273, "num-throats"], [1244, "num-throats"], [1168, "num-throats"], [1206, "num-throats"], [1129, "num-throats"], [1090, "num-throats"], [1050, "num-throats"], [974, "num-throats"], [1012, "num-throats"], [935, "num-throats"], [551, "num-throats"], [569, "num-throats"], [504, "num-throats"], [475, "num-throats"], [409, "num-throats"], [442, "num-throats"], [342, "num-throats"], [376, "num-throats"], [309, "num-throats"], [276, "num-throats"], [243, "num-throats"], [210, "num-throats"], [85, "num-throats"], [53, "num-throats"]], "clear": [[164, "clear"], [100, "clear"], [131, "clear"], [1764, "clear"], [1791, "clear"], [1839, "clear"], [1778, "clear"], [1752, "clear"], [1822, "clear"], [1809, "clear"], [1601, "clear"], [1571, "clear"], [1633, "clear"], [1539, "clear"], [1509, "clear"], [1481, "clear"], [1422, "clear"], [1392, "clear"], [1453, "clear"], [1360, "clear"], [1326, "clear"], [1262, "clear"], [1292, "clear"], [1185, "clear"], [1223, "clear"], [1147, "clear"], [1067, "clear"], [1108, "clear"], [991, "clear"], [1029, "clear"], [914, "clear"], [953, "clear"], [587, "clear"], [492, "clear"], [575, "clear"], [540, "clear"], [521, "clear"], [428, "clear"], [395, "clear"], [464, "clear"], [295, "clear"], [362, "clear"], [328, "clear"], [229, "clear"], [198, "clear"], [262, "clear"], [39, "clear"], [73, "clear"]], "pop": [[179, "pop"], [114, "pop"], [146, "pop"], [1850, "pop"], [1832, "pop"], [1784, "pop"], [1758, "pop"], [1770, "pop"], [1815, "pop"], [1797, "pop"], [1615, "pop"], [1583, "pop"], [1645, "pop"], [1553, "pop"], [1521, "pop"], [1493, "pop"], [1465, "pop"], [1436, "pop"], [1374, "pop"], [1404, "pop"], [1306, "pop"], [1274, "pop"], [1340, "pop"], [1245, "pop"], [1207, "pop"], [1169, "pop"], [1091, "pop"], [1130, "pop"], [1051, "pop"], [975, "pop"], [1013, "pop"], [936, "pop"], [596, "pop"], [552, "pop"], [505, "pop"], [529, "pop"], [581, "pop"], [476, "pop"], [443, "pop"], [410, "pop"], [343, "pop"], [377, "pop"], [310, "pop"], [277, "pop"], [212, "pop"], [244, "pop"], [54, "pop"], [86, "pop"]], "filter_by_label": [[169, "filter-by-label"], [136, "filter-by-label"], [103, "filter-by-label"], [1635, "filter-by-label"], [1603, "filter-by-label"], [1573, "filter-by-label"], [1483, "filter-by-label"], [1511, "filter-by-label"], [1541, "filter-by-label"], [1455, "filter-by-label"], [1424, "filter-by-label"], [1362, "filter-by-label"], [1394, "filter-by-label"], [1328, "filter-by-label"], [1294, "filter-by-label"], [1264, "filter-by-label"], [1227, "filter-by-label"], [1189, "filter-by-label"], [1151, "filter-by-label"], [1112, "filter-by-label"], [1071, "filter-by-label"], [995, "filter-by-label"], [1033, "filter-by-label"], [918, "filter-by-label"], [957, "filter-by-label"], [542, "filter-by-label"], [495, "filter-by-label"], [566, "filter-by-label"], [433, "filter-by-label"], [466, "filter-by-label"], [400, "filter-by-label"], [300, "filter-by-label"], [333, "filter-by-label"], [367, "filter-by-label"], [234, "filter-by-label"], [267, "filter-by-label"], [201, "filter-by-label"], [76, "filter-by-label"], [44, "filter-by-label"]], "interpolate_data": [[140, "interpolate-data"], [107, "interpolate-data"], [173, "interpolate-data"], [1577, "interpolate-data"], [1609, "interpolate-data"], [1639, "interpolate-data"], [1459, "interpolate-data"], [1547, "interpolate-data"], [1515, "interpolate-data"], [1487, "interpolate-data"], [1368, "interpolate-data"], [1398, "interpolate-data"], [1430, "interpolate-data"], [1300, "interpolate-data"], [1268, "interpolate-data"], [1334, "interpolate-data"], [1238, "interpolate-data"], [1200, "interpolate-data"], [1084, "interpolate-data"], [1123, "interpolate-data"], [1162, "interpolate-data"], [1044, "interpolate-data"], [1006, "interpolate-data"], [968, "interpolate-data"], [929, "interpolate-data"], [546, "interpolate-data"], [499, "interpolate-data"], [526, "interpolate-data"], [404, "interpolate-data"], [470, "interpolate-data"], [437, "interpolate-data"], [304, "interpolate-data"], [371, "interpolate-data"], [337, "interpolate-data"], [238, "interpolate-data"], [205, "interpolate-data"], [271, "interpolate-data"], [48, "interpolate-data"], [80, "interpolate-data"]], "set_source": [[155, "set-source"], [188, "set-source"], [419, "set-source"], [319, "set-source"], [386, "set-source"], [353, "set-source"], [286, "set-source"], [253, "set-source"], [64, "set-source"]], "to_indices": [[126, "to-indices"], [159, "to-indices"], [192, "to-indices"], [1654, "to-indices"], [1592, "to-indices"], [1625, "to-indices"], [1563, "to-indices"], [1474, "to-indices"], [1530, "to-indices"], [1502, "to-indices"], [1413, "to-indices"], [1384, "to-indices"], [1446, "to-indices"], [1316, "to-indices"], [1350, "to-indices"], [1283, "to-indices"], [1254, "to-indices"], [1216, "to-indices"], [1178, "to-indices"], [1100, "to-indices"], [1139, "to-indices"], [984, "to-indices"], [1022, "to-indices"], [1060, "to-indices"], [945, "to-indices"], [561, "to-indices"], [533, "to-indices"], [514, "to-indices"], [487, "to-indices"], [423, "to-indices"], [455, "to-indices"], [390, "to-indices"], [323, "to-indices"], [357, "to-indices"], [257, "to-indices"], [224, "to-indices"], [290, "to-indices"], [94, "to-indices"], [68, "to-indices"]], "run": [[119, "run"], [151, "run"], [184, "run"], [509, "run"], [448, "run"], [415, "run"], [315, "run"], [348, "run"], [382, "run"], [249, "run"], [217, "run"], [282, "run"], [59, "run"]], "set_label": [[122, "set-label"], [153, "set-label"], [186, "set-label"], [1651, "set-label"], [1589, "set-label"], [1560, "set-label"], [1622, "set-label"], [1527, "set-label"], [1499, "set-label"], [1471, "set-label"], [1381, "set-label"], [1443, "set-label"], [1410, "set-label"], [1313, "set-label"], [1347, "set-label"], [1280, "set-label"], [1175, "set-label"], [1213, "set-label"], [1251, "set-label"], [1136, "set-label"], [1097, "set-label"], [1057, "set-label"], [1019, "set-label"], [981, "set-label"], [942, "set-label"], [511, "set-label"], [558, "set-label"], [571, "set-label"], [450, "set-label"], [417, "set-label"], [483, "set-label"], [317, "set-label"], [384, "set-label"], [350, "set-label"], [251, "set-label"], [220, "set-label"], [284, "set-label"], [91, "set-label"], [61, "set-label"]], "num_pores": [[144, "num-pores"], [111, "num-pores"], [177, "num-pores"], [1581, "num-pores"], [1643, "num-pores"], [1613, "num-pores"], [1463, "num-pores"], [1519, "num-pores"], [1551, "num-pores"], [1491, "num-pores"], [1372, "num-pores"], [1402, "num-pores"], [1434, "num-pores"], [1304, "num-pores"], [1338, "num-pores"], [1272, "num-pores"], [1167, "num-pores"], [1243, "num-pores"], [1205, "num-pores"], [1089, "num-pores"], [1128, "num-pores"], [973, "num-pores"], [1049, "num-pores"], [1011, "num-pores"], [934, "num-pores"], [550, "num-pores"], [568, "num-pores"], [503, "num-pores"], [408, "num-pores"], [441, "num-pores"], [474, "num-pores"], [375, "num-pores"], [341, "num-pores"], [308, "num-pores"], [209, "num-pores"], [275, "num-pores"], [242, "num-pores"], [84, "num-pores"], [52, "num-pores"]], "set_outlet_BC": [[123, "set-outlet-bc"], [221, "set-outlet-bc"]], "get": [[138, "get"], [171, "get"], [105, "get"], [1844, "get"], [1781, "get"], [1767, "get"], [1755, "get"], [1605, "get"], [1575, "get"], [1637, "get"], [1457, "get"], [1485, "get"], [1513, "get"], [1543, "get"], [1396, "get"], [1364, "get"], [1426, "get"], [1266, "get"], [1296, "get"], [1330, "get"], [1234, "get"], [1196, "get"], [1158, "get"], [1119, "get"], [1080, "get"], [1002, "get"], [1040, "get"], [964, "get"], [925, "get"], [593, "get"], [497, "get"], [578, "get"], [524, "get"], [544, "get"], [402, "get"], [468, "get"], [435, "get"], [335, "get"], [369, "get"], [302, "get"], [269, "get"], [236, "get"], [203, "get"], [78, "get"], [46, "get"]], "FourierConduction": [[163, "fourierconduction"]], "Drainage": [[98, "drainage"], [33, "drainage"]], "sanitize_dict": [[1870, "sanitize-dict"]], "visualization": [[1872, "module-openpnm.visualization"]], "is_transient": [[1866, "is-transient"]], "check_network_health": [[1858, "check-network-health"]], "is_symmetric": [[1865, "is-symmetric"]], "is_valid_propname": [[1867, "is-valid-propname"]], "methods_to_table": [[1868, "methods-to-table"]], "get_mixture_model_args": [[1861, "get-mixture-model-args"]], "check_data_health": [[1857, "check-data-health"]], "struct_to_dict": [[1871, "struct-to-dict"]], "ignore_warnings": [[1864, "ignore-warnings"]], "flat_list": [[1860, "flat-list"]], "save_workspace": [[1853, "save-workspace"]], "save_project": [[1852, "save-project"]], "draw_conduit": [[1873, "draw-conduit"]], "set_mpl_style": [[1881, "set-mpl-style"]], "Module Reference": [[1882, "module-openpnm"]], "get_printable_labels": [[1862, "get-printable-labels"]], "generate_voxel_image": [[1874, "generate-voxel-image"]], "load_workspace": [[1848, "load-workspace"]], "plot_networkx": [[1877, "plot-networkx"]], "new_project": [[1849, "new-project"]], "plot_coordinates": [[1876, "plot-coordinates"]], "dict_to_struct": [[1859, "dict-to-struct"]], "load_project": [[1847, "load-project"]], "plot_notebook": [[1878, "plot-notebook"]], "plot_tutorial": [[1879, "plot-tutorial"]], "plot_vispy": [[1880, "plot-vispy"]], "plot_connections": [[1875, "plot-connections"]], "get_printable_props": [[1863, "get-printable-props"]], "models_to_table": [[1869, "models-to-table"]], "reverse": [[1799, "reverse"], [1817, "reverse"]], "insert": [[1814, "insert"], [1796, "insert"]], "TypedList": [[1807, "typedlist"]], "TypedSet": [[1820, "typedset"]], "intersection": [[1827, "intersection"]], "remove": [[1833, "remove"], [1816, "remove"], [1798, "remove"]], "index": [[1795, "index"], [1813, "index"]], "append": [[1790, "append"], [1808, "append"], [1802, "append"], [1806, "append"]], "copy_project": [[1842, "copy-project"]], "keep_types_s": [[1747, "keep-types-s"]], "HealthDict": [[1751, "healthdict"]], "save_docstring": [[1748, "save-docstring"]], "PrintableDict": [[1777, "printabledict"]], "SettingsAttr": [[1804, "settingsattr"]], "intersection_update": [[1828, "intersection-update"]], "keep_types": [[1746, "keep-types"]], "union": [[1836, "union"]], "issubset": [[1830, "issubset"]], "Workspace": [[1838, "workspace"]], "extend": [[1812, "extend"], [1794, "extend"], [1684, "extend"]], "difference_update": [[1825, "difference-update"]], "SimpleList": [[1805, "simplelist"]], "PrintableList": [[1789, "printablelist"]], "to_dict": [[1773, "to-dict"]], "symmetric_difference_update": [[1835, "symmetric-difference-update"]], "TypedMixin": [[1819, "typedmixin"]], "symmetric_difference": [[1834, "symmetric-difference"]], "count": [[1793, "count"], [1811, "count"]], "discard": [[1826, "discard"]], "Project": [[1801, "project"]], "sort": [[1818, "sort"], [1800, "sort"]], "isdisjoint": [[1829, "isdisjoint"]], "unravel": [[1774, "unravel"]], "NestedDict": [[1763, "nesteddict"]], "close_project": [[1840, "close-project"]], "add": [[1821, "add"]], "with_indent": [[1749, "with-indent"]], "issuperset": [[1831, "issuperset"]], "difference": [[1824, "difference"], [785, "difference"]], "with_indents": [[1750, "with-indents"]], "get_shape": [[1698, "get-shape"]], "clone_pores": [[1679, "clone-pores"]], "iscoplanar": [[1702, "iscoplanar"]], "topotools": [[1675, "module-openpnm.topotools"]], "Collection of functions for manipulating network topology": [[1675, "collection-of-functions-for-manipulating-network-topology"]], "__call__": [[1726, "call"], [574, "call"]], "filter_pores_by_z": [[1685, "filter-pores-by-z"]], "regenerate_models": [[1649, "regenerate-models"], [1557, "regenerate-models"], [1619, "regenerate-models"], [1587, "regenerate-models"], [1525, "regenerate-models"], [1469, "regenerate-models"], [1497, "regenerate-models"], [1378, "regenerate-models"], [1440, "regenerate-models"], [1408, "regenerate-models"], [1310, "regenerate-models"], [1278, "regenerate-models"], [1344, "regenerate-models"], [1173, "regenerate-models"], [1211, "regenerate-models"], [1249, "regenerate-models"], [1095, "regenerate-models"], [1134, "regenerate-models"], [1017, "regenerate-models"], [1055, "regenerate-models"], [979, "regenerate-models"], [940, "regenerate-models"], [604, "regenerate-models"], [556, "regenerate-models"], [480, "regenerate-models"]], "ScipyCG": [[1671, "scipycg"]], "get_summaryf": [[1743, "get-summaryf"]], "delete_kwargs_s": [[1730, "delete-kwargs-s"]], "delete_types": [[1733, "delete-types"]], "shear_coords": [[1715, "shear-coords"]], "DirectSolver": [[1661, "directsolver"]], "keep_params": [[1744, "keep-params"]], "delete_params": [[1731, "delete-params"]], "Docorator": [[1725, "docorator"]], "solve": [[1666, "solve"], [1672, "solve"], [1662, "solve"], [1664, "solve"], [1668, "solve"], [1674, "solve"], [1660, "solve"], [1670, "solve"], [610, "solve"]], "label_faces": [[1709, "label-faces"]], "isoutside": [[1703, "isoutside"]], "conns_to_am": [[1681, "conns-to-am"]], "template_sphere_shell": [[1719, "template-sphere-shell"]], "get_spacing": [[1699, "get-spacing"]], "get_sections": [[1740, "get-sections"]], "stitch": [[1717, "stitch"]], "merge_pores": [[1711, "merge-pores"]], "istriu": [[1708, "istriu"]], "trim": [[1721, "trim"]], "delete_params_s": [[1732, "delete-params-s"]], "vor_to_am": [[1723, "vor-to-am"]], "template_cylinder_annulus": [[1718, "template-cylinder-annulus"]], "get_extended_summaryf": [[1737, "get-extended-summaryf"]], "merge_networks": [[1710, "merge-networks"]], "get_docstring": [[1735, "get-docstring"]], "keep_params_s": [[1745, "keep-params-s"]], "delete_kwargs": [[1729, "delete-kwargs"]], "rotate_coords": [[1714, "rotate-coords"]], "find_connecting_bonds": [[1688, "find-connecting-bonds"]], "PardisoSpsolve": [[1667, "pardisospsolve"]], "tri_to_am": [[1720, "tri-to-am"]], "ScipySpsolve": [[1673, "scipyspsolve"]], "trim_disconnected_clusters": [[1722, "trim-disconnected-clusters"]], "reduce_coordination": [[1712, "reduce-coordination"]], "connect_pores": [[1680, "connect-pores"]], "get_full_descriptionf": [[1739, "get-full-descriptionf"]], "IterativeSolver": [[1663, "iterativesolver"]], "add_boundary_pores": [[1676, "add-boundary-pores"], [1105, "add-boundary-pores"], [1144, "add-boundary-pores"], [911, "add-boundary-pores"], [950, "add-boundary-pores"]], "istriangular": [[1706, "istriangular"]], "delete_types_s": [[1734, "delete-types-s"]], "run_model": [[1650, "run-model"], [1588, "run-model"], [1621, "run-model"], [1559, "run-model"], [1470, "run-model"], [1526, "run-model"], [1498, "run-model"], [1409, "run-model"], [1442, "run-model"], [1380, "run-model"], [1279, "run-model"], [1346, "run-model"], [1312, "run-model"], [1174, "run-model"], [1212, "run-model"], [1250, "run-model"], [1135, "run-model"], [1096, "run-model"], [1056, "run-model"], [980, "run-model"], [1018, "run-model"], [941, "run-model"], [605, "run-model"], [557, "run-model"], [481, "run-model"]], "find_neighbor_sites": [[1692, "find-neighbor-sites"]], "find_path": [[1693, "find-path"]], "dimensionality": [[1682, "dimensionality"]], "add_reservoir_pore": [[1677, "add-reservoir-pore"]], "find_isolated_clusters": [[1690, "find-isolated-clusters"]], "PETScLinearSolver": [[1665, "petsclinearsolver"]], "issymmetric": [[1705, "issymmetric"]], "find_neighbor_bonds": [[1691, "find-neighbor-bonds"]], "find_clusters": [[1686, "find-clusters"]], "istril": [[1707, "istril"]], "find_connected_sites": [[1687, "find-connected-sites"]], "drop_sites": [[1683, "drop-sites"]], "dedents": [[1728, "dedents"]], "hull_centroid": [[1700, "hull-centroid"]], "ispercolating": [[1704, "ispercolating"]], "get_extended_summary": [[1736, "get-extended-summary"]], "PyamgRugeStubenSolver": [[1669, "pyamgrugestubensolver"]], "get_full_description": [[1738, "get-full-description"]], "get_domain_length": [[1697, "get-domain-length"]], "is_fully_connected": [[1701, "is-fully-connected"]], "solvers": [[1658, "module-openpnm.solvers"]], "Collection of matrix solvers for steady state simulations": [[1658, "collection-of-matrix-solvers-for-steady-state-simulations"]], "get_summary": [[1742, "get-summary"]], "reflect_base_points": [[1713, "reflect-base-points"]], "get_domain_area": [[1696, "get-domain-area"]], "site_percolation": [[1716, "site-percolation"]], "generate_base_points": [[1695, "generate-base-points"]], "utils": [[1724, "module-openpnm.utils"]], "Utilities and helper classes/functions": [[1724, "utilities-and-helper-classes-functions"]], "get_sectionsf": [[1741, "get-sectionsf"]], "dedent": [[1727, "dedent"]], "find_interface_throats": [[1689, "find-interface-throats"]], "find_surface_pores": [[1694, "find-surface-pores"]], "bond_percolation": [[1678, "bond-percolation"]], "BaseSolver": [[1659, "basesolver"]], "Water": [[1630, "water"]], "add_model_collection": [[1599, "add-model-collection"], [1632, "add-model-collection"], [1570, "add-model-collection"], [1480, "add-model-collection"], [1537, "add-model-collection"], [1508, "add-model-collection"], [1391, "add-model-collection"], [1452, "add-model-collection"], [1358, "add-model-collection"], [1420, "add-model-collection"], [1324, "add-model-collection"], [1290, "add-model-collection"], [1261, "add-model-collection"], [1222, "add-model-collection"], [1184, "add-model-collection"], [1146, "add-model-collection"], [1107, "add-model-collection"], [1028, "add-model-collection"], [1066, "add-model-collection"], [990, "add-model-collection"], [913, "add-model-collection"], [952, "add-model-collection"], [603, "add-model-collection"], [539, "add-model-collection"], [462, "add-model-collection"]], "x": [[1629, "x"], [1388, "x"]], "get_mix_vals": [[1608, "get-mix-vals"], [1546, "get-mix-vals"], [1367, "get-mix-vals"], [1429, "get-mix-vals"], [1299, "get-mix-vals"], [1333, "get-mix-vals"]], "get_comp_vals": [[1606, "get-comp-vals"], [1544, "get-comp-vals"], [1365, "get-comp-vals"], [1427, "get-comp-vals"], [1331, "get-comp-vals"], [1297, "get-comp-vals"]], "check_mixture_health": [[1600, "check-mixture-health"], [1538, "check-mixture-health"], [1359, "check-mixture-health"], [1421, "check-mixture-health"], [1325, "check-mixture-health"], [1291, "check-mixture-health"]], "add_model": [[1631, "add-model"], [1598, "add-model"], [1569, "add-model"], [1536, "add-model"], [1507, "add-model"], [1479, "add-model"], [1390, "add-model"], [1451, "add-model"], [1419, "add-model"], [1323, "add-model"], [1289, "add-model"], [1357, "add-model"], [1183, "add-model"], [1221, "add-model"], [1260, "add-model"], [1106, "add-model"], [1145, "add-model"], [1065, "add-model"], [989, "add-model"], [1027, "add-model"], [912, "add-model"], [951, "add-model"], [602, "add-model"], [538, "add-model"], [461, "add-model"]], "StandardLiquidMixture": [[1596, "standardliquidmixture"]], "StandardLiquid": [[1568, "standardliquid"]], "remove_comp": [[1558, "remove-comp"], [1620, "remove-comp"], [1379, "remove-comp"], [1441, "remove-comp"], [1311, "remove-comp"], [1345, "remove-comp"]], "y": [[1567, "y"], [1354, "y"], [1320, "y"]], "add_comp": [[1597, "add-comp"], [1535, "add-comp"], [1418, "add-comp"], [1322, "add-comp"], [1356, "add-comp"], [1288, "add-comp"]], "Species": [[1478, "species"]], "StandardGas": [[1506, "standardgas"]], "StandardGasMixture": [[1534, "standardgasmixture"]], "Phase": [[1450, "phase"], [819, "id1"], [9, "phase"], [7, "phase"]], "Mixture": [[1417, "mixture"]], "Mercury": [[1389, "mercury"]], "LiquidMixture": [[1355, "liquidmixture"]], "BinaryGas": [[1287, "binarygas"]], "GasMixture": [[1321, "gasmixture"]], "get_adjacency_matrix": [[1235, "get-adjacency-matrix"], [1197, "get-adjacency-matrix"], [1081, "get-adjacency-matrix"], [1120, "get-adjacency-matrix"], [1159, "get-adjacency-matrix"], [1041, "get-adjacency-matrix"], [1003, "get-adjacency-matrix"], [965, "get-adjacency-matrix"], [926, "get-adjacency-matrix"]], "num_neighbors": [[1204, "num-neighbors"], [1242, "num-neighbors"], [1166, "num-neighbors"], [1127, "num-neighbors"], [1088, "num-neighbors"], [1048, "num-neighbors"], [972, "num-neighbors"], [1010, "num-neighbors"], [933, "num-neighbors"]], "find_connected_pores": [[1190, "find-connected-pores"], [1228, "find-connected-pores"], [1072, "find-connected-pores"], [1113, "find-connected-pores"], [1152, "find-connected-pores"], [1034, "find-connected-pores"], [996, "find-connected-pores"], [958, "find-connected-pores"], [919, "find-connected-pores"]], "create_adjacency_matrix": [[1187, "create-adjacency-matrix"], [1225, "create-adjacency-matrix"], [1069, "create-adjacency-matrix"], [1149, "create-adjacency-matrix"], [1110, "create-adjacency-matrix"], [993, "create-adjacency-matrix"], [1031, "create-adjacency-matrix"], [955, "create-adjacency-matrix"], [916, "create-adjacency-matrix"]], "find_nearby_pores": [[1230, "find-nearby-pores"], [1192, "find-nearby-pores"], [1074, "find-nearby-pores"], [1115, "find-nearby-pores"], [1154, "find-nearby-pores"], [1036, "find-nearby-pores"], [998, "find-nearby-pores"], [921, "find-nearby-pores"], [960, "find-nearby-pores"]], "find_neighbor_pores": [[1193, "find-neighbor-pores"], [1231, "find-neighbor-pores"], [1155, "find-neighbor-pores"], [1116, "find-neighbor-pores"], [1075, "find-neighbor-pores"], [999, "find-neighbor-pores"], [1037, "find-neighbor-pores"], [922, "find-neighbor-pores"], [961, "find-neighbor-pores"]], "Air": [[1259, "air"]], "Network": [[1182, "network"], [802, "id1"], [9, "network"], [7, "network"], [5, "network"]], "find_connecting_throat": [[1191, "find-connecting-throat"], [1229, "find-connecting-throat"], [1073, "find-connecting-throat"], [1114, "find-connecting-throat"], [1153, "find-connecting-throat"], [1035, "find-connecting-throat"], [997, "find-connecting-throat"], [920, "find-connecting-throat"], [959, "find-connecting-throat"]], "create_incidence_matrix": [[1188, "create-incidence-matrix"], [1226, "create-incidence-matrix"], [1111, "create-incidence-matrix"], [1070, "create-incidence-matrix"], [1150, "create-incidence-matrix"], [1032, "create-incidence-matrix"], [994, "create-incidence-matrix"], [956, "create-incidence-matrix"], [917, "create-incidence-matrix"]], "get_incidence_matrix": [[1199, "get-incidence-matrix"], [1237, "get-incidence-matrix"], [1161, "get-incidence-matrix"], [1083, "get-incidence-matrix"], [1122, "get-incidence-matrix"], [1005, "get-incidence-matrix"], [1043, "get-incidence-matrix"], [967, "get-incidence-matrix"], [928, "get-incidence-matrix"]], "Voronoi": [[1220, "voronoi"]], "find_neighbor_throats": [[1194, "find-neighbor-throats"], [1232, "find-neighbor-throats"], [1117, "find-neighbor-throats"], [1076, "find-neighbor-throats"], [1156, "find-neighbor-throats"], [1000, "find-neighbor-throats"], [1038, "find-neighbor-throats"], [962, "find-neighbor-throats"], [923, "find-neighbor-throats"]], "phase": [[1258, "module-openpnm.phase"], [819, "module-openpnm.models.phase"], [646, "module-openpnm.models.collections.phase"]], "FaceCenteredCubic": [[1143, "facecenteredcubic"]], "find_pore_hulls": [[1077, "find-pore-hulls"]], "find_throat_facets": [[1078, "find-throat-facets"]], "Demo": [[1104, "demo"]], "Delaunay": [[1026, "delaunay"]], "CubicTemplate": [[988, "cubictemplate"]], "DelaunayVoronoiDual": [[1064, "delaunayvoronoidual"]], "standard_kinetics": [[905, "standard-kinetics"]], "BodyCenteredCubic": [[910, "bodycenteredcubic"]], "hydraulic_conductance": [[884, "module-openpnm.models.physics.hydraulic_conductance"]], "power_law": [[904, "power-law"]], "logarithm": [[901, "logarithm"]], "network": [[909, "module-openpnm.network"], [802, "module-openpnm.models.network"], [645, "module-openpnm.models.collections.network"]], "generic_hydraulic": [[885, "generic-hydraulic"]], "natural_logarithm": [[903, "natural-logarithm"]], "general_symbolic": [[899, "general-symbolic"]], "capillary_pressure": [[873, "module-openpnm.models.physics.capillary_pressure"]], "electrical_conductance": [[881, "module-openpnm.models.physics.electrical_conductance"]], "general_toroidal": [[889, "general-toroidal"]], "washburn": [[875, "washburn"]], "mixed_diffusion": [[878, "mixed-diffusion"]], "generic_diffusive": [[877, "generic-diffusive"]], "thermal_conductance": [[906, "module-openpnm.models.physics.thermal_conductance"]], "late_filling": [[894, "late-filling"]], "linear": [[900, "linear"], [792, "linear"]], "ordinary_diffusion": [[879, "ordinary-diffusion"]], "Cubic": [[949, "cubic"], [26, "cubic"]], "series_resistors": [[908, "series-resistors"], [883, "series-resistors"]], "diffusive_conductance": [[876, "module-openpnm.models.physics.diffusive_conductance"]], "source_terms": [[895, "module-openpnm.models.physics.source_terms"]], "taylor_aris_diffusion": [[880, "taylor-aris-diffusion"]], "sinusoidal": [[891, "sinusoidal"]], "multiphase": [[892, "module-openpnm.models.physics.multiphase"]], "conduit_conductance": [[893, "conduit-conductance"]], "generic_thermal": [[907, "generic-thermal"]], "butler_volmer_conc": [[896, "butler-volmer-conc"]], "valvatne_blunt": [[887, "valvatne-blunt"]], "natural_exponential": [[902, "natural-exponential"]], "hagen_poiseuille": [[886, "hagen-poiseuille"]], "purcell": [[874, "purcell"], [890, "purcell"]], "butler_volmer_voltage": [[897, "butler-volmer-voltage"]], "meniscus": [[888, "module-openpnm.models.physics.meniscus"]], "exponential": [[898, "exponential"]], "generic_electrical": [[882, "generic-electrical"]], "partition_coefficient": [[846, "module-openpnm.models.phase.partition_coefficient"]], "cluster_number": [[804, "cluster-number"]], "mole_to_mass_fraction": [[844, "mole-to-mass-fraction"], [839, "mole-to-mass-fraction"]], "rectangle": [[780, "rectangle"], [771, "rectangle"], [756, "rectangle"], [736, "rectangle"]], "generic_function": [[790, "generic-function"]], "from_component": [[841, "from-component"]], "gas_pure_gesmr": [[865, "gas-pure-gesmr"]], "ad_dif": [[872, "ad-dif"]], "ideal_gas": [[823, "ideal-gas"]], "from_neighbor_pores": [[787, "from-neighbor-pores"], [758, "from-neighbor-pores"], [762, "from-neighbor-pores"]], "gas_mixture_fesg": [[830, "gas-mixture-fesg"]], "random": [[798, "random"], [707, "random"], [765, "random"], [715, "random"], [759, "random"]], "mass_to_molar": [[826, "mass-to-molar"]], "thermal_conductivity": [[852, "module-openpnm.models.phase.thermal_conductivity"]], "liquid_pure_sr": [[857, "liquid-pure-sr"]], "water_correlation": [[858, "water-correlation"], [827, "water-correlation"], [862, "water-correlation"], [869, "water-correlation"], [851, "water-correlation"]], "liquid_mixture_xweighted": [[867, "liquid-mixture-xweighted"], [835, "liquid-mixture-xweighted"]], "gabriel_edges": [[813, "gabriel-edges"]], "clip": [[783, "clip"]], "coordination_number": [[806, "coordination-number"]], "gaseous_species_in_water": [[847, "gaseous-species-in-water"]], "liquid_pure_gismr": [[856, "liquid-pure-gismr"]], "physics": [[870, "module-openpnm.models.physics"], [652, "module-openpnm.models.collections.physics"]], "Physics": [[870, "id1"], [7, "physics"]], "pore_to_pore_distance": [[817, "pore-to-pore-distance"]], "headless_throats": [[814, "headless-throats"]], "find_coincident_pores": [[812, "find-coincident-pores"]], "gas_mixture_yweighted": [[833, "gas-mixture-yweighted"]], "salinity": [[845, "salinity"]], "gas_pure_gismr": [[854, "gas-pure-gismr"]], "summation": [[800, "summation"]], "liquid_pure_rp": [[836, "liquid-pure-rp"]], "gas_mixture_whz": [[853, "gas-mixture-whz"]], "chemicals_wrapper": [[820, "chemicals-wrapper"]], "liquid_pure_lk": [[861, "liquid-pure-lk"]], "normal": [[794, "normal"], [714, "normal"], [764, "normal"]], "liquid_mixture_wsd": [[849, "liquid-mixture-wsd"]], "count_coincident_pores": [[807, "count-coincident-pores"]], "liquid_mixture_DIPPR9H": [[855, "liquid-mixture-dippr9h"]], "polynomial": [[796, "polynomial"]], "liquid_mixture_COSTALD": [[824, "liquid-mixture-costald"]], "blank": [[782, "blank"]], "weibull": [[801, "weibull"], [716, "weibull"], [766, "weibull"]], "gas_mixture_hz": [[864, "gas-mixture-hz"]], "looped_throats": [[816, "looped-throats"]], "viscosity": [[863, "module-openpnm.models.phase.viscosity"]], "ad_dif_conductance": [[871, "module-openpnm.models.physics.ad_dif_conductance"]], "reversed_throats": [[818, "reversed-throats"]], "bidirectional_throats": [[803, "bidirectional-throats"]], "invert": [[791, "invert"]], "normalize": [[795, "normalize"]], "constant": [[784, "constant"]], "critical_props": [[821, "module-openpnm.models.phase.critical_props"]], "fraction": [[786, "fraction"]], "heat_capacity": [[832, "module-openpnm.models.phase.heat_capacity"]], "vapor_pressure": [[859, "module-openpnm.models.phase.vapor_pressure"]], "misc": [[781, "module-openpnm.models.misc"], [837, "module-openpnm.models.phase.misc"]], "Miscellaneous": [[781, "miscellaneous"]], "match_histogram": [[793, "match-histogram"]], "liquid_pure_COSTALD": [[825, "liquid-pure-costald"]], "liquid_pure_ls": [[868, "liquid-pure-ls"]], "mix_and_match": [[838, "mix-and-match"]], "lens": [[778, "lens"]], "surface_tension": [[848, "module-openpnm.models.phase.surface_tension"]], "scaled": [[799, "scaled"]], "distance_to_nearest_neighbor": [[809, "distance-to-nearest-neighbor"]], "duplicate_throats": [[811, "duplicate-throats"]], "distance_to_nearest_pore": [[810, "distance-to-nearest-pore"]], "cylinder": [[776, "cylinder"], [769, "cylinder"], [735, "cylinder"], [755, "cylinder"]], "gas_mixture_ce": [[829, "gas-mixture-ce"]], "density": [[822, "module-openpnm.models.phase.density"]], "generic_distribution": [[789, "generic-distribution"], [763, "generic-distribution"], [712, "generic-distribution"]], "cluster_size": [[805, "cluster-size"]], "mixtures": [[840, "module-openpnm.models.phase.mixtures"]], "mixing_rule": [[842, "mixing-rule"]], "liquid_mixture_tc": [[831, "liquid-mixture-tc"]], "product": [[797, "product"]], "mole_summation": [[843, "mole-summation"]], "isolated_pores": [[815, "isolated-pores"]], "diffusivity": [[828, "module-openpnm.models.phase.diffusivity"]], "gas_pure_TRC": [[834, "gas-pure-trc"]], "liquid_pure_bb": [[850, "liquid-pure-bb"]], "gas_pure_st": [[866, "gas-pure-st"]], "extrusion": [[777, "extrusion"], [770, "extrusion"]], "from_neighbor_throats": [[788, "from-neighbor-throats"], [711, "from-neighbor-throats"]], "liquid_pure_antoine": [[860, "liquid-pure-antoine"]], "distance_to_furthest_neighbor": [[808, "distance-to-furthest-neighbor"]], "pendular_ring": [[779, "pendular-ring"]], "pore_to_pore": [[773, "pore-to-pore"]], "circle": [[723, "circle"], [701, "circle"], [718, "circle"]], "cubes_and_cuboids": [[742, "cubes-and-cuboids"], [688, "cubes-and-cuboids"], [640, "cubes-and-cuboids"], [673, "cubes-and-cuboids"], [659, "cubes-and-cuboids"]], "intersecting_pyramids": [[693, "intersecting-pyramids"], [747, "intersecting-pyramids"], [664, "intersecting-pyramids"], [678, "intersecting-pyramids"]], "throat_size": [[760, "module-openpnm.models.geometry.throat_size"]], "Throat Size Models": [[760, "throat-size-models"]], "throat_perimeter": [[753, "module-openpnm.models.geometry.throat_perimeter"]], "Throat Perimeter Models": [[753, "throat-perimeter-models"]], "trapezoids_and_rectangles": [[684, "trapezoids-and-rectangles"], [699, "trapezoids-and-rectangles"], [752, "trapezoids-and-rectangles"], [644, "trapezoids-and-rectangles"], [669, "trapezoids-and-rectangles"]], "sphere": [[720, "sphere"], [726, "sphere"], [704, "sphere"]], "throat_centroid": [[731, "module-openpnm.models.geometry.throat_centroid"]], "Throat Centroid Model": [[731, "throat-centroid-model"]], "hybrid_cones_and_cylinders": [[743, "hybrid-cones-and-cylinders"], [689, "hybrid-cones-and-cylinders"], [660, "hybrid-cones-and-cylinders"], [674, "hybrid-cones-and-cylinders"]], "intersecting_trapezoids": [[748, "intersecting-trapezoids"], [694, "intersecting-trapezoids"], [679, "intersecting-trapezoids"], [665, "intersecting-trapezoids"]], "throat_capillary_shape_factor": [[728, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "Throat Capillary Shape Factor Models": [[728, "throat-capillary-shape-factor-models"]], "mason_morrow": [[730, "mason-morrow"]], "throat_cross_sectional_area": [[733, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "Throat Cross-sectional Area Models": [[733, "throat-cross-sectional-area-models"]], "intersecting_cones": [[746, "intersecting-cones"], [692, "intersecting-cones"], [663, "intersecting-cones"], [677, "intersecting-cones"]], "hydraulic_size_factors": [[685, "module-openpnm.models.geometry.hydraulic_size_factors"]], "Hydraulic Size Factors Models": [[685, "hydraulic-size-factors-models"]], "hybrid_trapezoids_and_rectangles": [[745, "hybrid-trapezoids-and-rectangles"], [691, "hybrid-trapezoids-and-rectangles"], [662, "hybrid-trapezoids-and-rectangles"], [676, "hybrid-trapezoids-and-rectangles"]], "cones_and_cylinders": [[741, "cones-and-cylinders"], [687, "cones-and-cylinders"], [672, "cones-and-cylinders"], [658, "cones-and-cylinders"], [639, "cones-and-cylinders"]], "pore_seed": [[706, "module-openpnm.models.geometry.pore_seed"]], "Pore Seed Models": [[706, "pore-seed-models"]], "square": [[727, "square"], [705, "square"], [721, "square"]], "equivalent_diameter": [[710, "equivalent-diameter"], [761, "equivalent-diameter"]], "throat_surface_area": [[767, "module-openpnm.models.geometry.throat_surface_area"]], "Throat Surface Area Models": [[767, "throat-surface-area-models"]], "hybrid_pyramids_and_cuboids": [[690, "hybrid-pyramids-and-cuboids"], [744, "hybrid-pyramids-and-cuboids"], [661, "hybrid-pyramids-and-cuboids"], [675, "hybrid-pyramids-and-cuboids"]], "cube": [[724, "cube"], [719, "cube"], [703, "cube"]], "cuboid": [[768, "cuboid"], [734, "cuboid"], [775, "cuboid"], [754, "cuboid"]], "squares_and_rectangles": [[751, "squares-and-rectangles"], [698, "squares-and-rectangles"], [683, "squares-and-rectangles"], [668, "squares-and-rectangles"], [643, "squares-and-rectangles"]], "ncylinders_in_series": [[680, "ncylinders-in-series"], [695, "ncylinders-in-series"]], "pore_size": [[709, "module-openpnm.models.geometry.pore_size"]], "Pore Size Models": [[709, "pore-size-models"]], "pore_coords": [[732, "pore-coords"]], "pyramids_and_cuboids": [[696, "pyramids-and-cuboids"], [749, "pyramids-and-cuboids"], [681, "pyramids-and-cuboids"], [641, "pyramids-and-cuboids"], [666, "pyramids-and-cuboids"]], "spheres_and_cylinders": [[738, "spheres-and-cylinders"], [750, "spheres-and-cylinders"], [682, "spheres-and-cylinders"], [697, "spheres-and-cylinders"], [642, "spheres-and-cylinders"], [667, "spheres-and-cylinders"]], "throat_volume": [[774, "module-openpnm.models.geometry.throat_volume"]], "Throat Volume Models": [[774, "throat-volume-models"]], "throat_seed": [[757, "module-openpnm.models.geometry.throat_seed"]], "Throat Seed Models": [[757, "throat-seed-models"]], "throat_endpoints": [[737, "module-openpnm.models.geometry.throat_endpoints"]], "spatially_correlated": [[708, "spatially-correlated"]], "pore_cross_sectional_area": [[700, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "Pore Cross-sectional Area Models": [[700, "pore-cross-sectional-area-models"]], "pore_volume": [[722, "module-openpnm.models.geometry.pore_volume"]], "Pore Volume Models": [[722, "pore-volume-models"]], "largest_sphere": [[713, "largest-sphere"]], "circles_and_rectangles": [[686, "circles-and-rectangles"], [740, "circles-and-rectangles"], [657, "circles-and-rectangles"], [638, "circles-and-rectangles"], [671, "circles-and-rectangles"]], "jenkins_rao": [[729, "jenkins-rao"]], "throat_length": [[739, "module-openpnm.models.geometry.throat_length"]], "Throat Length Models": [[739, "throat-length-models"]], "throat_vector": [[772, "module-openpnm.models.geometry.throat_vector"]], "Throat Vector Model": [[772, "throat-vector-model"]], "cone": [[702, "cone"]], "effective": [[725, "effective"]], "pore_surface_area": [[717, "module-openpnm.models.geometry.pore_surface_area"]], "Pore Surface Area Models": [[717, "pore-surface-area-models"]], "air": [[647, "air"]], "network_from_jsongraph": [[613, "network-from-jsongraph"]], "water": [[651, "water"]], "project_to_dict": [[629, "project-to-dict"]], "conduit_lengths": [[656, "module-openpnm.models.geometry.conduit_lengths"]], "Conduit Lengths Models": [[656, "conduit-lengths-models"]], "network_from_pergeos": [[616, "network-from-pergeos"]], "network_to_pandas": [[623, "network-to-pandas"]], "io": [[611, "module-openpnm.io"]], "Collection of functions for import/export of  data": [[611, "collection-of-functions-for-import-export-of-data"]], "network_from_statoil": [[618, "network-from-statoil"]], "network_to_stl": [[626, "network-to-stl"]], "geometry": [[655, "module-openpnm.models.geometry"], [637, "module-openpnm.models.collections.geometry"]], "Geometry": [[655, "id1"], [7, "geometry"], [5, "geometry"]], "network_from_networkx": [[615, "network-from-networkx"]], "mercury": [[650, "mercury"]], "Integrator": [[608, "integrator"]], "collections": [[636, "module-openpnm.models.collections"]], "project_to_pandas": [[631, "project-to-pandas"]], "models": [[635, "module-openpnm.models"]], "Collection of pore-scale models": [[635, "collection-of-pore-scale-models"]], "print_hdf5": [[627, "print-hdf5"]], "project_to_vtk": [[633, "project-to-vtk"]], "ModelsMixin2": [[601, "modelsmixin2"]], "dependency_graph": [[589, "dependency-graph"]], "liquid": [[649, "module-openpnm.models.collections.phase.liquid"]], "diffusive_size_factors": [[670, "module-openpnm.models.geometry.diffusive_size_factors"]], "Diffusive Size Factors Models": [[670, "diffusive-size-factors-models"]], "integrators": [[607, "module-openpnm.integrators"]], "Collection of ODE integrators for transient simulations": [[607, "collection-of-ode-integrators-for-transient-simulations"]], "ParserMixin": [[606, "parsermixin"]], "network_from_csv": [[612, "network-from-csv"]], "network_to_csv": [[620, "network-to-csv"]], "network_to_comsol": [[619, "network-to-comsol"]], "ScipyRK45": [[609, "scipyrk45"]], "network_to_networkx": [[622, "network-to-networkx"]], "network_from_marock": [[614, "network-from-marock"]], "network_to_pergeos": [[624, "network-to-pergeos"]], "network_to_jsongraph": [[621, "network-to-jsongraph"]], "gas": [[648, "module-openpnm.models.collections.phase.gas"]], "dependency_map": [[591, "dependency-map"]], "standard": [[654, "standard"]], "dependency_list": [[590, "dependency-list"]], "network_to_salome": [[625, "network-to-salome"]], "project_to_csv": [[628, "project-to-csv"]], "basic": [[653, "basic"]], "project_to_hdf5": [[630, "project-to-hdf5"]], "network_from_porespy": [[617, "network-from-porespy"]], "project_to_xdmf": [[634, "project-to-xdmf"]], "ModelsDict": [[586, "modelsdict"]], "Network Models Collections": [[645, "network-models-collections"]], "project_to_paraview": [[632, "project-to-paraview"]], "core": [[519, "module-openpnm.core"]], "Main classes of OpenPNM": [[519, "main-classes-of-openpnm"]], "The Base class": [[519, "the-base-class"]], "The ModelsMixin class": [[519, "the-modelsmixin-class"]], "Domain": [[537, "domain"]], "TransientMultiPhysics": [[491, "transientmultiphysics"]], "LabelMixin": [[565, "labelmixin"]], "Base2": [[520, "base2"]], "multiphase_diffusion": [[518, "multiphase-diffusion"]], "ModelWrapper": [[573, "modelwrapper"]], "add_phases": [[463, "add-phases"]], "set_occupancy": [[484, "set-occupancy"]], "MultiPhase": [[460, "multiphase"]], "set_binary_partition_coef": [[482, "set-binary-partition-coef"]], "contrib": [[459, "module-openpnm.contrib"]], "Contrib": [[459, "id1"]], "Transport": [[427, "transport"]], "TransientReactiveTransport": [[394, "transientreactivetransport"]], "StokesFlow": [[294, "stokesflow"]], "set_outflow_BC": [[351, "set-outflow-bc"], [62, "set-outflow-bc"]], "TransientFickianDiffusion": [[361, "transientfickiandiffusion"]], "TransientAdvectionDiffusion": [[327, "transientadvectiondiffusion"]], "ReactiveTransport": [[261, "reactivetransport"]], "InvasionPercolation": [[196, "invasionpercolation"]], "OhmicConduction": [[228, "ohmicconduction"]], "algorithms": [[37, "module-openpnm.algorithms"]], "Simulating Invasion": [[33, "simulating-invasion"]], "Manual Implementation of the Drainge Process": [[33, "manual-implementation-of-the-drainge-process"]], "Using the Drainage Algorithm": [[33, "using-the-drainage-algorithm"]], "Invasion Percolation": [[33, "invasion-percolation"]], "Manual Implementation of the Invasion Percolation Process": [[33, "manual-implementation-of-the-invasion-percolation-process"]], "Using the InvasionPercolation Algorithm": [[33, "using-the-invasionpercolation-algorithm"]], "Getting Started": [[14, "getting-started"]], "Creating a Cubic Network": [[14, "creating-a-cubic-network"]], "Defining a Phase": [[14, "defining-a-phase"]], "Performing a Drainage Simulation": [[14, "performing-a-drainage-simulation"]], "Calculating Permeability Coefficient": [[14, "calculating-permeability-coefficient"]], "Adjusting Pore Size Distribution": [[14, "adjusting-pore-size-distribution"]], "Installation": [[36, "installation"]], "Installing the dev version": [[36, "installing-the-dev-version"]], "The easy way": [[36, "the-easy-way"]], "The hard (but correct) way": [[36, "the-hard-but-correct-way"]], "Where\u2019s my conda prompt?": [[36, "where-s-my-conda-prompt"]], "Windows": [[36, "windows"]], "Mac and Linux": [[36, "mac-and-linux"]], "Reactive Transport": [[22, "reactive-transport"]], "Using the source term functionality in OpenPNM": [[22, "using-the-source-term-functionality-in-openpnm"]], "How the source-term functionality works": [[22, "how-the-source-term-functionality-works"]], "Calibrating a Network Using Mercury Intrusion Data": [[9, "calibrating-a-network-using-mercury-intrusion-data"]], "Import Packages": [[9, "import-packages"]], "Import Data for a Sandstone": [[9, "import-data-for-a-sandstone"]], "Add Geometrical Properties": [[9, "add-geometrical-properties"]], "Pore Sizes": [[9, "pore-sizes"]], "Finding Pore Sizes Given Random Seeds between 0 and 1": [[9, "finding-pore-sizes-given-random-seeds-between-0-and-1"]], "Apply Distribution to the Network": [[9, "apply-distribution-to-the-network"]], "Throat Sizes": [[9, "throat-sizes"]], "Add Physics": [[9, "add-physics"]], "Perform Mercury Intrusion": [[9, "perform-mercury-intrusion"]], "Check Geometric Consistency": [[9, "check-geometric-consistency"]], "Additional Calibration Steps": [[9, "additional-calibration-steps"]], "Pore-Scale Models": [[15, "pore-scale-models"]], "Predicting relative permeability": [[12, "predicting-relative-permeability"]], "Create network and phases": [[12, "create-network-and-phases"], [11, "create-network-and-phases"]], "Apply invasion percolation": [[12, "apply-invasion-percolation"]], "Occupancy and permeability functions": [[12, "occupancy-and-permeability-functions"]], "Define multiphase conductance": [[12, "define-multiphase-conductance"], [11, "define-multiphase-conductance"]], "Calculate relative permeabilities": [[12, "calculate-relative-permeabilities"]], "Using Labels and Defining Domains": [[30, "using-labels-and-defining-domains"]], "Using Predefined Labels": [[30, "using-predefined-labels"]], "The pores and throats methods": [[30, "the-pores-and-throats-methods"]], "Using the mode argument in the pores and throats methods": [[30, "using-the-mode-argument-in-the-pores-and-throats-methods"]], "Defining Custom Labels": [[30, "defining-custom-labels"]], "Creating Boolean Masks": [[30, "creating-boolean-masks"]], "Using set_label": [[30, "using-set-label"]], "Using the @ sytax to read and write data": [[30, "using-the-sytax-to-read-and-write-data"]], "Defining Subdomains": [[30, "defining-subdomains"]], "Defining and Changing Subdomain Locations": [[30, "defining-and-changing-subdomain-locations"]], "Mixing Full Domain and Subdomain Models": [[30, "mixing-full-domain-and-subdomain-models"]], "Mixing Many Subdomains of Different Shape": [[30, "mixing-many-subdomains-of-different-shape"]], "AdvectionDiffusion": [[38, "advectiondiffusion"]], "Transient Transport": [[24, "transient-transport"]], "Size Factors and Transport Conductance": [[23, "size-factors-and-transport-conductance"]], "Conductance in pore network models": [[23, "conductance-in-pore-network-models"]], "Conductance of a single conduit": [[23, "conductance-of-a-single-conduit"]], "Size factors vs. shape factors": [[23, "size-factors-vs-shape-factors"]], "Built-in size factor models in OpenPNM": [[23, "built-in-size-factor-models-in-openpnm"]], "Deriving the size factor for arbitrary-shaped pores and throats": [[23, "deriving-the-size-factor-for-arbitrary-shaped-pores-and-throats"]], "Diffusive size factor": [[23, "diffusive-size-factor"]], "Hydraulic size factor": [[23, "hydraulic-size-factor"]], "Conduit vs. element size factor": [[23, "conduit-vs-element-size-factor"]], "Available Matrix Solvers": [[19, "available-matrix-solvers"]], "Predicting absolute permeability": [[4, "predicting-absolute-permeability"]], "Create a random cubic network": [[4, "create-a-random-cubic-network"], [10, "create-a-random-cubic-network"]], "Create phase object": [[4, "create-phase-object"]], "Apply Stokes flow": [[4, "apply-stokes-flow"]], "Calculate permeability": [[4, "calculate-permeability"]], "Generating Networks and Quick Visualization": [[26, "generating-networks-and-quick-visualization"]], "CubicTemplates": [[26, "cubictemplates"]], "Other Cubic Lattices": [[26, "other-cubic-lattices"]], "Random Network: Delaunay and Voronoi Tessellations": [[26, "random-network-delaunay-and-voronoi-tessellations"]], "Imported Networks": [[26, "imported-networks"]], "Examples": [[1, "examples"]], "Network Representation, Queries, and Manipulation": [[28, "network-representation-queries-and-manipulation"]], "The Adjacency Matrix": [[28, "the-adjacency-matrix"]], "COO Sparse Format": [[28, "coo-sparse-format"]], "Other Sparse Formats": [[28, "other-sparse-formats"]], "The Incidence Matrix": [[28, "the-incidence-matrix"]], "Using OpenPNM Methods Query Methods": [[28, "using-openpnm-methods-query-methods"]], "Find Neighoring Pores": [[28, "find-neighoring-pores"]], "Find Neighboring Throats": [[28, "find-neighboring-throats"]], "Find Connecting Throats": [[28, "find-connecting-throats"]], "Find Connected Pores": [[28, "find-connected-pores"]], "Removing Throats": [[28, "removing-throats"]], "Removing Pores": [[28, "removing-pores"]], "Adding Pores and Throats": [[28, "adding-pores-and-throats"]], "The Workspace and Projects": [[17, "the-workspace-and-projects"]], "Usage of Projects and Workspace": [[17, "usage-of-projects-and-workspace"]], "Workspace is a Singleton": [[17, "workspace-is-a-singleton"]], "One Network per Project": [[17, "one-network-per-project"]], "Predicting Porosity": [[10, "predicting-porosity"]], "Calculate void and bulk volume": [[10, "calculate-void-and-bulk-volume"]], "Discussions and Issues": [[10, "discussions-and-issues"]], "Domain volume": [[10, "domain-volume"]], "Overlapping pores and throats": [[10, "overlapping-pores-and-throats"]], "Extracted networks": [[10, "extracted-networks"]], "Void volume": [[10, "void-volume"]], "Simulating Single Phase Transport": [[32, "simulating-single-phase-transport"]], "Define Phase Viscosity": [[32, "define-phase-viscosity"]], "Basic Conductance Calculation": [[32, "basic-conductance-calculation"]], "Create Algorithm Object": [[32, "create-algorithm-object"]], "Assign Boundary Conditions": [[32, "assign-boundary-conditions"]], "Rigorous Conductance Calculation": [[32, "rigorous-conductance-calculation"]], "Manual Method": [[32, "manual-method"]], "Pore-Scale Model Method": [[32, "pore-scale-model-method"]], "Predicting dispersion coefficient": [[6, "predicting-dispersion-coefficient"]], "Generating Network and phase": [[6, "generating-network-and-phase"]], "Defining Effective Pore Volume": [[6, "defining-effective-pore-volume"]], "Perform Stokes flow": [[6, "perform-stokes-flow"]], "Apply transient advection diffusion": [[6, "apply-transient-advection-diffusion"]], "Elution curve": [[6, "elution-curve"]], "Solving for the dispersion coefficient": [[6, "solving-for-the-dispersion-coefficient"]], "Steady State Transport": [[20, "steady-state-transport"]], "Creating the Coefficient Matrix": [[20, "creating-the-coefficient-matrix"]], "Applying Value and Rate Boundary Conditions": [[20, "applying-value-and-rate-boundary-conditions"]], "Solving the System of Equations": [[20, "solving-the-system-of-equations"]], "Sparse Matrices": [[20, "sparse-matrices"]], "Creating Phases": [[31, "creating-phases"]], "Part 1: The Phase class": [[31, "part-1-the-phase-class"]], "Direct assignment of a constant value": [[31, "direct-assignment-of-a-constant-value"]], "Using a built-in model": [[31, "using-a-built-in-model"]], "Using a water-specific model": [[31, "using-a-water-specific-model"]], "Writing your own custom model": [[31, "writing-your-own-custom-model"]], "Specific Classes for Common Fluids": [[31, "specific-classes-for-common-fluids"]], "Part 2: Using Species and Mixtures": [[31, "part-2-using-species-and-mixtures"]], "Pure Species": [[31, "pure-species"]], "Gas and Liquid Species": [[31, "gas-and-liquid-species"]], "Gas and Liquid Mixtures": [[31, "gas-and-liquid-mixtures"]], "Getting and Setting Compositions": [[31, "getting-and-setting-compositions"]], "Exploring Features of the Mixture Objects": [[31, "exploring-features-of-the-mixture-objects"]], "Adding and Removing Species": [[31, "adding-and-removing-species"]], "The info Attribute": [[31, "the-info-attribute"]], "Get component mole fractions": [[31, "get-component-mole-fractions"]], "The components Attribute": [[31, "the-components-attribute"]], "Using get_comp_vals": [[31, "using-get-comp-vals"]], "Checking consistency with check_mixture_health": [[31, "checking-consistency-with-check-mixture-health"]], "Retrieving Species Properties": [[31, "retrieving-species-properties"]], "Using the wildcard (*) syntax": [[31, "using-the-wildcard-syntax"]], "Numerical Python Primer": [[25, "numerical-python-primer"]], "Python Lists: Flexible but Slow": [[25, "python-lists-flexible-but-slow"]], "Numpy ndarray: Optimized for Numerics": [[25, "numpy-ndarray-optimized-for-numerics"]], "Vectorization": [[25, "vectorization"]], "Methods versus Functions": [[25, "methods-versus-functions"]], "Dictionaries: Holding Things Together": [[25, "dictionaries-holding-things-together"]], "Subclassing dict": [[25, "subclassing-dict"]], "Algorithm": [[72, "algorithm"]], "Explanation of Units": [[21, "explanation-of-units"]], "Use of absolute pressure vs gauge pressure": [[21, "use-of-absolute-pressure-vs-gauge-pressure"]], "Unit conversion packages and challenges": [[21, "unit-conversion-packages-and-challenges"]], "Storage of Network Data and Topology": [[27, "storage-of-network-data-and-topology"]], "Spreadsheet Analogy": [[27, "spreadsheet-analogy"]], "Rules to Maintain Data Integrity": [[27, "rules-to-maintain-data-integrity"]], "All Values are Converted to Numpy Arrays": [[27, "all-values-are-converted-to-numpy-arrays"]], "Dictionary Keys Must Start With \u2018pore\u2019 or \u2018throat\u2019": [[27, "dictionary-keys-must-start-with-pore-or-throat"]], "Any Scalars are Expanded to a Full-Length Vector": [[27, "any-scalars-are-expanded-to-a-full-length-vector"]], "Nested Dictionary Names are Allowed": [[27, "nested-dictionary-names-are-allowed"]], "Boolean Arrays are Treated as Labels, Numerical Arrays are Treated as Properties": [[27, "boolean-arrays-are-treated-as-labels-numerical-arrays-are-treated-as-properties"]], "Dictionary Keys with a Leading Underscore are Hidden": [[27, "dictionary-keys-with-a-leading-underscore-are-hidden"]], "The param prefix": [[27, "the-param-prefix"]], "Representing Topology": [[27, "representing-topology"]], "Adjacency Matrices: Dense vs Sparse": [[27, "adjacency-matrices-dense-vs-sparse"]], "conduit data": [[27, "conduit-data"]], "Predicting Formation Factor": [[8, "predicting-formation-factor"]], "Create Network": [[8, "create-network"]], "Create Phase": [[8, "create-phase"]], "Apply Fickian Diffusion": [[8, "apply-fickian-diffusion"]], "Visualize Results": [[8, "visualize-results"]], "Calculate Formation Factor": [[8, "calculate-formation-factor"]], "Settings Attribute Machinery": [[16, "settings-attribute-machinery"]], "Datatype is enforced": [[16, "datatype-is-enforced"]], "Settings can be access as attributes or dict keys": [[16, "settings-can-be-access-as-attributes-or-dict-keys"]], "Namespace is clean": [[16, "namespace-is-clean"]], "Collections also enforce types": [[16, "collections-also-enforce-types"]], "Settings are attached before init": [[16, "settings-are-attached-before-init"]], "Finding Effective Diffusivity and Tortuosity of a Network": [[7, "finding-effective-diffusivity-and-tortuosity-of-a-network"]], "Performing Fickian Diffusion": [[7, "performing-fickian-diffusion"]], "Visualize the Results": [[7, "visualize-the-results"]], "Calculate the Effective Diffusivity": [[7, "calculate-the-effective-diffusivity"]], "Calculate the Tortuosity": [[7, "calculate-the-tortuosity"]], "Applications": [[0, "applications"]], "10 Steps to Learn OpenPNM": [[3, "steps-to-learn-openpnm"]], "Adjusting Pore Size Distributions": [[5, "adjusting-pore-size-distributions"]], "Adjusting Pore and Throat Sizes": [[5, "adjusting-pore-and-throat-sizes"]], "Using scipy.stats classes directly": [[5, "using-scipy-stats-classes-directly"]], "Using pre-defined models in OpenPNM": [[5, "using-pre-defined-models-in-openpnm"]], "Assigning Geometric Properties": [[29, "assigning-geometric-properties"]], "Manually Calculating Properties": [[29, "manually-calculating-properties"]], "Adding pore and throat sizes from scipy.stats distributions": [[29, "adding-pore-and-throat-sizes-from-scipy-stats-distributions"]], "Computing throat length": [[29, "computing-throat-length"]], "Computing pore surface areas": [[29, "computing-pore-surface-areas"]], "Using Pore-scale Models from the Library": [[29, "using-pore-scale-models-from-the-library"]], "Using Predefined Collections of Models": [[29, "using-predefined-collections-of-models"]], "Customizing Models by Overwriting Them or Their Arguments": [[29, "customizing-models-by-overwriting-them-or-their-arguments"]], "Introduction to the Dependency Handler": [[29, "introduction-to-the-dependency-handler"]], "Obtaining Relative Diffusivity Curves": [[11, "obtaining-relative-diffusivity-curves"]], "Apply ordinary percolation": [[11, "apply-ordinary-percolation"]], "Saturation and rate functions": [[11, "saturation-and-rate-functions"]], "Calculate relative diffusivities": [[11, "calculate-relative-diffusivities"]], "Managing Clustered Networks": [[18, "managing-clustered-networks"]], "Creating a Clustered Network": [[18, "creating-a-clustered-network"]], "Illustrating the Problem": [[18, "illustrating-the-problem"]], "Fixing Clustered Networks": [[18, "fixing-clustered-networks"]], "Visualization options": [[34, "visualization-options"]], "Spyder": [[34, "spyder"]], "Interactive plots in Jupyter notebook": [[34, "interactive-plots-in-jupyter-notebook"]], "Paraview": [[34, "paraview"]], "Contibuted Examples": [[13, "contibuted-examples"]], "Pore Network Modeling Framework in Python": [[35, "pore-network-modeling-framework-in-python"]], "What is OpenPNM? stars": [[35, "what-is-openpnm-stars"]], "How To Cite": [[35, "how-to-cite"]], "Citation": [[35, null]], "Reference": [[2, "reference"]]}, "indexentries": {"module": [[37, "module-openpnm.algorithms"], [459, "module-openpnm.contrib"], [519, "module-openpnm.core"], [607, "module-openpnm.integrators"], [611, "module-openpnm.io"], [635, "module-openpnm.models"], [636, "module-openpnm.models.collections"], [637, "module-openpnm.models.collections.geometry"], [645, "module-openpnm.models.collections.network"], [646, "module-openpnm.models.collections.phase"], [648, "module-openpnm.models.collections.phase.gas"], [649, "module-openpnm.models.collections.phase.liquid"], [652, "module-openpnm.models.collections.physics"], [655, "module-openpnm.models.geometry"], [656, "module-openpnm.models.geometry.conduit_lengths"], [670, "module-openpnm.models.geometry.diffusive_size_factors"], [685, "module-openpnm.models.geometry.hydraulic_size_factors"], [700, "module-openpnm.models.geometry.pore_cross_sectional_area"], [706, "module-openpnm.models.geometry.pore_seed"], [709, "module-openpnm.models.geometry.pore_size"], [717, "module-openpnm.models.geometry.pore_surface_area"], [722, "module-openpnm.models.geometry.pore_volume"], [728, "module-openpnm.models.geometry.throat_capillary_shape_factor"], [731, "module-openpnm.models.geometry.throat_centroid"], [733, "module-openpnm.models.geometry.throat_cross_sectional_area"], [737, "module-openpnm.models.geometry.throat_endpoints"], [739, "module-openpnm.models.geometry.throat_length"], [753, "module-openpnm.models.geometry.throat_perimeter"], [757, "module-openpnm.models.geometry.throat_seed"], [760, "module-openpnm.models.geometry.throat_size"], [767, "module-openpnm.models.geometry.throat_surface_area"], [772, "module-openpnm.models.geometry.throat_vector"], [774, "module-openpnm.models.geometry.throat_volume"], [781, "module-openpnm.models.misc"], [802, "module-openpnm.models.network"], [819, "module-openpnm.models.phase"], [821, "module-openpnm.models.phase.critical_props"], [822, "module-openpnm.models.phase.density"], [828, "module-openpnm.models.phase.diffusivity"], [832, "module-openpnm.models.phase.heat_capacity"], [837, "module-openpnm.models.phase.misc"], [840, "module-openpnm.models.phase.mixtures"], [846, "module-openpnm.models.phase.partition_coefficient"], [848, "module-openpnm.models.phase.surface_tension"], [852, "module-openpnm.models.phase.thermal_conductivity"], [859, "module-openpnm.models.phase.vapor_pressure"], [863, "module-openpnm.models.phase.viscosity"], [870, "module-openpnm.models.physics"], [871, "module-openpnm.models.physics.ad_dif_conductance"], [873, "module-openpnm.models.physics.capillary_pressure"], [876, "module-openpnm.models.physics.diffusive_conductance"], [881, "module-openpnm.models.physics.electrical_conductance"], [884, "module-openpnm.models.physics.hydraulic_conductance"], [888, "module-openpnm.models.physics.meniscus"], [892, "module-openpnm.models.physics.multiphase"], [895, "module-openpnm.models.physics.source_terms"], [906, "module-openpnm.models.physics.thermal_conductance"], [909, "module-openpnm.network"], [1258, "module-openpnm.phase"], [1658, "module-openpnm.solvers"], [1675, "module-openpnm.topotools"], [1724, "module-openpnm.utils"], [1872, "module-openpnm.visualization"], [1882, "module-openpnm"]], "openpnm.algorithms": [[37, "module-openpnm.algorithms"]], "advectiondiffusion (class in openpnm.algorithms)": [[38, "openpnm.algorithms.AdvectionDiffusion"]], "clear() (advectiondiffusion method)": [[39, "openpnm.algorithms.AdvectionDiffusion.clear"]], "clear_bcs() (advectiondiffusion method)": [[40, "openpnm.algorithms.AdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (advectiondiffusion method)": [[41, "openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (advectiondiffusion method)": [[42, "openpnm.algorithms.AdvectionDiffusion.clear_value_BCs"]], "copy() (advectiondiffusion method)": [[43, "openpnm.algorithms.AdvectionDiffusion.copy"]], "filter_by_label() (advectiondiffusion method)": [[44, "openpnm.algorithms.AdvectionDiffusion.filter_by_label"]], "fromkeys() (advectiondiffusion method)": [[45, "openpnm.algorithms.AdvectionDiffusion.fromkeys"]], "get() (advectiondiffusion method)": [[46, "openpnm.algorithms.AdvectionDiffusion.get"]], "get_conduit_data() (advectiondiffusion method)": [[47, "openpnm.algorithms.AdvectionDiffusion.get_conduit_data"]], "interpolate_data() (advectiondiffusion method)": [[48, "openpnm.algorithms.AdvectionDiffusion.interpolate_data"]], "items() (advectiondiffusion method)": [[49, "openpnm.algorithms.AdvectionDiffusion.items"]], "keys() (advectiondiffusion method)": [[50, "openpnm.algorithms.AdvectionDiffusion.keys"]], "labels() (advectiondiffusion method)": [[51, "openpnm.algorithms.AdvectionDiffusion.labels"]], "num_pores() (advectiondiffusion method)": [[52, "openpnm.algorithms.AdvectionDiffusion.num_pores"]], "num_throats() (advectiondiffusion method)": [[53, "openpnm.algorithms.AdvectionDiffusion.num_throats"]], "pop() (advectiondiffusion method)": [[54, "openpnm.algorithms.AdvectionDiffusion.pop"]], "popitem() (advectiondiffusion method)": [[55, "openpnm.algorithms.AdvectionDiffusion.popitem"]], "pores() (advectiondiffusion method)": [[56, "openpnm.algorithms.AdvectionDiffusion.pores"]], "props() (advectiondiffusion method)": [[57, "openpnm.algorithms.AdvectionDiffusion.props"]], "rate() (advectiondiffusion method)": [[58, "openpnm.algorithms.AdvectionDiffusion.rate"]], "run() (advectiondiffusion method)": [[59, "openpnm.algorithms.AdvectionDiffusion.run"]], "set_bc() (advectiondiffusion method)": [[60, "openpnm.algorithms.AdvectionDiffusion.set_BC"]], "set_label() (advectiondiffusion method)": [[61, "openpnm.algorithms.AdvectionDiffusion.set_label"]], "set_outflow_bc() (advectiondiffusion method)": [[62, "openpnm.algorithms.AdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (advectiondiffusion method)": [[63, "openpnm.algorithms.AdvectionDiffusion.set_rate_BC"]], "set_source() (advectiondiffusion method)": [[64, "openpnm.algorithms.AdvectionDiffusion.set_source"]], "set_value_bc() (advectiondiffusion method)": [[65, "openpnm.algorithms.AdvectionDiffusion.set_value_BC"]], "setdefault() (advectiondiffusion method)": [[66, "openpnm.algorithms.AdvectionDiffusion.setdefault"]], "throats() (advectiondiffusion method)": [[67, "openpnm.algorithms.AdvectionDiffusion.throats"]], "to_indices() (advectiondiffusion method)": [[68, "openpnm.algorithms.AdvectionDiffusion.to_indices"]], "to_mask() (advectiondiffusion method)": [[69, "openpnm.algorithms.AdvectionDiffusion.to_mask"]], "update() (advectiondiffusion method)": [[70, "openpnm.algorithms.AdvectionDiffusion.update"]], "values() (advectiondiffusion method)": [[71, "openpnm.algorithms.AdvectionDiffusion.values"]], "algorithm (class in openpnm.algorithms)": [[72, "openpnm.algorithms.Algorithm"]], "clear() (algorithm method)": [[73, "openpnm.algorithms.Algorithm.clear"]], "clear_bcs() (algorithm method)": [[74, "openpnm.algorithms.Algorithm.clear_BCs"]], "copy() (algorithm method)": [[75, "openpnm.algorithms.Algorithm.copy"]], "filter_by_label() (algorithm method)": [[76, "openpnm.algorithms.Algorithm.filter_by_label"]], "fromkeys() (algorithm method)": [[77, "openpnm.algorithms.Algorithm.fromkeys"]], "get() (algorithm method)": [[78, "openpnm.algorithms.Algorithm.get"]], "get_conduit_data() (algorithm method)": [[79, "openpnm.algorithms.Algorithm.get_conduit_data"]], "interpolate_data() (algorithm method)": [[80, "openpnm.algorithms.Algorithm.interpolate_data"]], "items() (algorithm method)": [[81, "openpnm.algorithms.Algorithm.items"]], "keys() (algorithm method)": [[82, "openpnm.algorithms.Algorithm.keys"]], "labels() (algorithm method)": [[83, "openpnm.algorithms.Algorithm.labels"]], "num_pores() (algorithm method)": [[84, "openpnm.algorithms.Algorithm.num_pores"]], "num_throats() (algorithm method)": [[85, "openpnm.algorithms.Algorithm.num_throats"]], "pop() (algorithm method)": [[86, "openpnm.algorithms.Algorithm.pop"]], "popitem() (algorithm method)": [[87, "openpnm.algorithms.Algorithm.popitem"]], "pores() (algorithm method)": [[88, "openpnm.algorithms.Algorithm.pores"]], "props() (algorithm method)": [[89, "openpnm.algorithms.Algorithm.props"]], "set_bc() (algorithm method)": [[90, "openpnm.algorithms.Algorithm.set_BC"]], "set_label() (algorithm method)": [[91, "openpnm.algorithms.Algorithm.set_label"]], "setdefault() (algorithm method)": [[92, "openpnm.algorithms.Algorithm.setdefault"]], "throats() (algorithm method)": [[93, "openpnm.algorithms.Algorithm.throats"]], "to_indices() (algorithm method)": [[94, "openpnm.algorithms.Algorithm.to_indices"]], "to_mask() (algorithm method)": [[95, "openpnm.algorithms.Algorithm.to_mask"]], "update() (algorithm method)": [[96, "openpnm.algorithms.Algorithm.update"]], "values() (algorithm method)": [[97, "openpnm.algorithms.Algorithm.values"]], "drainage (class in openpnm.algorithms)": [[98, "openpnm.algorithms.Drainage"]], "apply_trapping() (drainage method)": [[99, "openpnm.algorithms.Drainage.apply_trapping"]], "clear() (drainage method)": [[100, "openpnm.algorithms.Drainage.clear"]], "clear_bcs() (drainage method)": [[101, "openpnm.algorithms.Drainage.clear_BCs"]], "copy() (drainage method)": [[102, "openpnm.algorithms.Drainage.copy"]], "filter_by_label() (drainage method)": [[103, "openpnm.algorithms.Drainage.filter_by_label"]], "fromkeys() (drainage method)": [[104, "openpnm.algorithms.Drainage.fromkeys"]], "get() (drainage method)": [[105, "openpnm.algorithms.Drainage.get"]], "get_conduit_data() (drainage method)": [[106, "openpnm.algorithms.Drainage.get_conduit_data"]], "interpolate_data() (drainage method)": [[107, "openpnm.algorithms.Drainage.interpolate_data"]], "items() (drainage method)": [[108, "openpnm.algorithms.Drainage.items"]], "keys() (drainage method)": [[109, "openpnm.algorithms.Drainage.keys"]], "labels() (drainage method)": [[110, "openpnm.algorithms.Drainage.labels"]], "num_pores() (drainage method)": [[111, "openpnm.algorithms.Drainage.num_pores"]], "num_throats() (drainage method)": [[112, "openpnm.algorithms.Drainage.num_throats"]], "pc_curve() (drainage method)": [[113, "openpnm.algorithms.Drainage.pc_curve"]], "pop() (drainage method)": [[114, "openpnm.algorithms.Drainage.pop"]], "popitem() (drainage method)": [[115, "openpnm.algorithms.Drainage.popitem"]], "pores() (drainage method)": [[116, "openpnm.algorithms.Drainage.pores"]], "props() (drainage method)": [[117, "openpnm.algorithms.Drainage.props"]], "reset() (drainage method)": [[118, "openpnm.algorithms.Drainage.reset"]], "run() (drainage method)": [[119, "openpnm.algorithms.Drainage.run"]], "set_bc() (drainage method)": [[120, "openpnm.algorithms.Drainage.set_BC"]], "set_inlet_bc() (drainage method)": [[121, "openpnm.algorithms.Drainage.set_inlet_BC"]], "set_label() (drainage method)": [[122, "openpnm.algorithms.Drainage.set_label"]], "set_outlet_bc() (drainage method)": [[123, "openpnm.algorithms.Drainage.set_outlet_BC"]], "setdefault() (drainage method)": [[124, "openpnm.algorithms.Drainage.setdefault"]], "throats() (drainage method)": [[125, "openpnm.algorithms.Drainage.throats"]], "to_indices() (drainage method)": [[126, "openpnm.algorithms.Drainage.to_indices"]], "to_mask() (drainage method)": [[127, "openpnm.algorithms.Drainage.to_mask"]], "update() (drainage method)": [[128, "openpnm.algorithms.Drainage.update"]], "values() (drainage method)": [[129, "openpnm.algorithms.Drainage.values"]], "fickiandiffusion (class in openpnm.algorithms)": [[130, "openpnm.algorithms.FickianDiffusion"]], "clear() (fickiandiffusion method)": [[131, "openpnm.algorithms.FickianDiffusion.clear"]], "clear_bcs() (fickiandiffusion method)": [[132, "openpnm.algorithms.FickianDiffusion.clear_BCs"]], "clear_rate_bcs() (fickiandiffusion method)": [[133, "openpnm.algorithms.FickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (fickiandiffusion method)": [[134, "openpnm.algorithms.FickianDiffusion.clear_value_BCs"]], "copy() (fickiandiffusion method)": [[135, "openpnm.algorithms.FickianDiffusion.copy"]], "filter_by_label() (fickiandiffusion method)": [[136, "openpnm.algorithms.FickianDiffusion.filter_by_label"]], "fromkeys() (fickiandiffusion method)": [[137, "openpnm.algorithms.FickianDiffusion.fromkeys"]], "get() (fickiandiffusion method)": [[138, "openpnm.algorithms.FickianDiffusion.get"]], "get_conduit_data() (fickiandiffusion method)": [[139, "openpnm.algorithms.FickianDiffusion.get_conduit_data"]], "interpolate_data() (fickiandiffusion method)": [[140, "openpnm.algorithms.FickianDiffusion.interpolate_data"]], "items() (fickiandiffusion method)": [[141, "openpnm.algorithms.FickianDiffusion.items"]], "keys() (fickiandiffusion method)": [[142, "openpnm.algorithms.FickianDiffusion.keys"]], "labels() (fickiandiffusion method)": [[143, "openpnm.algorithms.FickianDiffusion.labels"]], "num_pores() (fickiandiffusion method)": [[144, "openpnm.algorithms.FickianDiffusion.num_pores"]], "num_throats() (fickiandiffusion method)": [[145, "openpnm.algorithms.FickianDiffusion.num_throats"]], "pop() (fickiandiffusion method)": [[146, "openpnm.algorithms.FickianDiffusion.pop"]], "popitem() (fickiandiffusion method)": [[147, "openpnm.algorithms.FickianDiffusion.popitem"]], "pores() (fickiandiffusion method)": [[148, "openpnm.algorithms.FickianDiffusion.pores"]], "props() (fickiandiffusion method)": [[149, "openpnm.algorithms.FickianDiffusion.props"]], "rate() (fickiandiffusion method)": [[150, "openpnm.algorithms.FickianDiffusion.rate"]], "run() (fickiandiffusion method)": [[151, "openpnm.algorithms.FickianDiffusion.run"]], "set_bc() (fickiandiffusion method)": [[152, "openpnm.algorithms.FickianDiffusion.set_BC"]], "set_label() (fickiandiffusion method)": [[153, "openpnm.algorithms.FickianDiffusion.set_label"]], "set_rate_bc() (fickiandiffusion method)": [[154, "openpnm.algorithms.FickianDiffusion.set_rate_BC"]], "set_source() (fickiandiffusion method)": [[155, "openpnm.algorithms.FickianDiffusion.set_source"]], "set_value_bc() (fickiandiffusion method)": [[156, "openpnm.algorithms.FickianDiffusion.set_value_BC"]], "setdefault() (fickiandiffusion method)": [[157, "openpnm.algorithms.FickianDiffusion.setdefault"]], "throats() (fickiandiffusion method)": [[158, "openpnm.algorithms.FickianDiffusion.throats"]], "to_indices() (fickiandiffusion method)": [[159, "openpnm.algorithms.FickianDiffusion.to_indices"]], "to_mask() (fickiandiffusion method)": [[160, "openpnm.algorithms.FickianDiffusion.to_mask"]], "update() (fickiandiffusion method)": [[161, "openpnm.algorithms.FickianDiffusion.update"]], "values() (fickiandiffusion method)": [[162, "openpnm.algorithms.FickianDiffusion.values"]], "fourierconduction (class in openpnm.algorithms)": [[163, "openpnm.algorithms.FourierConduction"]], "clear() (fourierconduction method)": [[164, "openpnm.algorithms.FourierConduction.clear"]], "clear_bcs() (fourierconduction method)": [[165, "openpnm.algorithms.FourierConduction.clear_BCs"]], "clear_rate_bcs() (fourierconduction method)": [[166, "openpnm.algorithms.FourierConduction.clear_rate_BCs"]], "clear_value_bcs() (fourierconduction method)": [[167, "openpnm.algorithms.FourierConduction.clear_value_BCs"]], "copy() (fourierconduction method)": [[168, "openpnm.algorithms.FourierConduction.copy"]], "filter_by_label() (fourierconduction method)": [[169, "openpnm.algorithms.FourierConduction.filter_by_label"]], "fromkeys() (fourierconduction method)": [[170, "openpnm.algorithms.FourierConduction.fromkeys"]], "get() (fourierconduction method)": [[171, "openpnm.algorithms.FourierConduction.get"]], "get_conduit_data() (fourierconduction method)": [[172, "openpnm.algorithms.FourierConduction.get_conduit_data"]], "interpolate_data() (fourierconduction method)": [[173, "openpnm.algorithms.FourierConduction.interpolate_data"]], "items() (fourierconduction method)": [[174, "openpnm.algorithms.FourierConduction.items"]], "keys() (fourierconduction method)": [[175, "openpnm.algorithms.FourierConduction.keys"]], "labels() (fourierconduction method)": [[176, "openpnm.algorithms.FourierConduction.labels"]], "num_pores() (fourierconduction method)": [[177, "openpnm.algorithms.FourierConduction.num_pores"]], "num_throats() (fourierconduction method)": [[178, "openpnm.algorithms.FourierConduction.num_throats"]], "pop() (fourierconduction method)": [[179, "openpnm.algorithms.FourierConduction.pop"]], "popitem() (fourierconduction method)": [[180, "openpnm.algorithms.FourierConduction.popitem"]], "pores() (fourierconduction method)": [[181, "openpnm.algorithms.FourierConduction.pores"]], "props() (fourierconduction method)": [[182, "openpnm.algorithms.FourierConduction.props"]], "rate() (fourierconduction method)": [[183, "openpnm.algorithms.FourierConduction.rate"]], "run() (fourierconduction method)": [[184, "openpnm.algorithms.FourierConduction.run"]], "set_bc() (fourierconduction method)": [[185, "openpnm.algorithms.FourierConduction.set_BC"]], "set_label() (fourierconduction method)": [[186, "openpnm.algorithms.FourierConduction.set_label"]], "set_rate_bc() (fourierconduction method)": [[187, "openpnm.algorithms.FourierConduction.set_rate_BC"]], "set_source() (fourierconduction method)": [[188, "openpnm.algorithms.FourierConduction.set_source"]], "set_value_bc() (fourierconduction method)": [[189, "openpnm.algorithms.FourierConduction.set_value_BC"]], "setdefault() (fourierconduction method)": [[190, "openpnm.algorithms.FourierConduction.setdefault"]], "throats() (fourierconduction method)": [[191, "openpnm.algorithms.FourierConduction.throats"]], "to_indices() (fourierconduction method)": [[192, "openpnm.algorithms.FourierConduction.to_indices"]], "to_mask() (fourierconduction method)": [[193, "openpnm.algorithms.FourierConduction.to_mask"]], "update() (fourierconduction method)": [[194, "openpnm.algorithms.FourierConduction.update"]], "values() (fourierconduction method)": [[195, "openpnm.algorithms.FourierConduction.values"]], "invasionpercolation (class in openpnm.algorithms)": [[196, "openpnm.algorithms.InvasionPercolation"]], "apply_trapping() (invasionpercolation method)": [[197, "openpnm.algorithms.InvasionPercolation.apply_trapping"]], "clear() (invasionpercolation method)": [[198, "openpnm.algorithms.InvasionPercolation.clear"]], "clear_bcs() (invasionpercolation method)": [[199, "openpnm.algorithms.InvasionPercolation.clear_BCs"]], "copy() (invasionpercolation method)": [[200, "openpnm.algorithms.InvasionPercolation.copy"]], "filter_by_label() (invasionpercolation method)": [[201, "openpnm.algorithms.InvasionPercolation.filter_by_label"]], "fromkeys() (invasionpercolation method)": [[202, "openpnm.algorithms.InvasionPercolation.fromkeys"]], "get() (invasionpercolation method)": [[203, "openpnm.algorithms.InvasionPercolation.get"]], "get_conduit_data() (invasionpercolation method)": [[204, "openpnm.algorithms.InvasionPercolation.get_conduit_data"]], "interpolate_data() (invasionpercolation method)": [[205, "openpnm.algorithms.InvasionPercolation.interpolate_data"]], "items() (invasionpercolation method)": [[206, "openpnm.algorithms.InvasionPercolation.items"]], "keys() (invasionpercolation method)": [[207, "openpnm.algorithms.InvasionPercolation.keys"]], "labels() (invasionpercolation method)": [[208, "openpnm.algorithms.InvasionPercolation.labels"]], "num_pores() (invasionpercolation method)": [[209, "openpnm.algorithms.InvasionPercolation.num_pores"]], "num_throats() (invasionpercolation method)": [[210, "openpnm.algorithms.InvasionPercolation.num_throats"]], "pc_curve() (invasionpercolation method)": [[211, "openpnm.algorithms.InvasionPercolation.pc_curve"]], "pop() (invasionpercolation method)": [[212, "openpnm.algorithms.InvasionPercolation.pop"]], "popitem() (invasionpercolation method)": [[213, "openpnm.algorithms.InvasionPercolation.popitem"]], "pores() (invasionpercolation method)": [[214, "openpnm.algorithms.InvasionPercolation.pores"]], "props() (invasionpercolation method)": [[215, "openpnm.algorithms.InvasionPercolation.props"]], "reset() (invasionpercolation method)": [[216, "openpnm.algorithms.InvasionPercolation.reset"]], "run() (invasionpercolation method)": [[217, "openpnm.algorithms.InvasionPercolation.run"]], "set_bc() (invasionpercolation method)": [[218, "openpnm.algorithms.InvasionPercolation.set_BC"]], "set_inlet_bc() (invasionpercolation method)": [[219, "openpnm.algorithms.InvasionPercolation.set_inlet_BC"]], "set_label() (invasionpercolation method)": [[220, "openpnm.algorithms.InvasionPercolation.set_label"]], "set_outlet_bc() (invasionpercolation method)": [[221, "openpnm.algorithms.InvasionPercolation.set_outlet_BC"]], "setdefault() (invasionpercolation method)": [[222, "openpnm.algorithms.InvasionPercolation.setdefault"]], "throats() (invasionpercolation method)": [[223, "openpnm.algorithms.InvasionPercolation.throats"]], "to_indices() (invasionpercolation method)": [[224, "openpnm.algorithms.InvasionPercolation.to_indices"]], "to_mask() (invasionpercolation method)": [[225, "openpnm.algorithms.InvasionPercolation.to_mask"]], "update() (invasionpercolation method)": [[226, "openpnm.algorithms.InvasionPercolation.update"]], "values() (invasionpercolation method)": [[227, "openpnm.algorithms.InvasionPercolation.values"]], "ohmicconduction (class in openpnm.algorithms)": [[228, "openpnm.algorithms.OhmicConduction"]], "clear() (ohmicconduction method)": [[229, "openpnm.algorithms.OhmicConduction.clear"]], "clear_bcs() (ohmicconduction method)": [[230, "openpnm.algorithms.OhmicConduction.clear_BCs"]], "clear_rate_bcs() (ohmicconduction method)": [[231, "openpnm.algorithms.OhmicConduction.clear_rate_BCs"]], "clear_value_bcs() (ohmicconduction method)": [[232, "openpnm.algorithms.OhmicConduction.clear_value_BCs"]], "copy() (ohmicconduction method)": [[233, "openpnm.algorithms.OhmicConduction.copy"]], "filter_by_label() (ohmicconduction method)": [[234, "openpnm.algorithms.OhmicConduction.filter_by_label"]], "fromkeys() (ohmicconduction method)": [[235, "openpnm.algorithms.OhmicConduction.fromkeys"]], "get() (ohmicconduction method)": [[236, "openpnm.algorithms.OhmicConduction.get"]], "get_conduit_data() (ohmicconduction method)": [[237, "openpnm.algorithms.OhmicConduction.get_conduit_data"]], "interpolate_data() (ohmicconduction method)": [[238, "openpnm.algorithms.OhmicConduction.interpolate_data"]], "items() (ohmicconduction method)": [[239, "openpnm.algorithms.OhmicConduction.items"]], "keys() (ohmicconduction method)": [[240, "openpnm.algorithms.OhmicConduction.keys"]], "labels() (ohmicconduction method)": [[241, "openpnm.algorithms.OhmicConduction.labels"]], "num_pores() (ohmicconduction method)": [[242, "openpnm.algorithms.OhmicConduction.num_pores"]], "num_throats() (ohmicconduction method)": [[243, "openpnm.algorithms.OhmicConduction.num_throats"]], "pop() (ohmicconduction method)": [[244, "openpnm.algorithms.OhmicConduction.pop"]], "popitem() (ohmicconduction method)": [[245, "openpnm.algorithms.OhmicConduction.popitem"]], "pores() (ohmicconduction method)": [[246, "openpnm.algorithms.OhmicConduction.pores"]], "props() (ohmicconduction method)": [[247, "openpnm.algorithms.OhmicConduction.props"]], "rate() (ohmicconduction method)": [[248, "openpnm.algorithms.OhmicConduction.rate"]], "run() (ohmicconduction method)": [[249, "openpnm.algorithms.OhmicConduction.run"]], "set_bc() (ohmicconduction method)": [[250, "openpnm.algorithms.OhmicConduction.set_BC"]], "set_label() (ohmicconduction method)": [[251, "openpnm.algorithms.OhmicConduction.set_label"]], "set_rate_bc() (ohmicconduction method)": [[252, "openpnm.algorithms.OhmicConduction.set_rate_BC"]], "set_source() (ohmicconduction method)": [[253, "openpnm.algorithms.OhmicConduction.set_source"]], "set_value_bc() (ohmicconduction method)": [[254, "openpnm.algorithms.OhmicConduction.set_value_BC"]], "setdefault() (ohmicconduction method)": [[255, "openpnm.algorithms.OhmicConduction.setdefault"]], "throats() (ohmicconduction method)": [[256, "openpnm.algorithms.OhmicConduction.throats"]], "to_indices() (ohmicconduction method)": [[257, "openpnm.algorithms.OhmicConduction.to_indices"]], "to_mask() (ohmicconduction method)": [[258, "openpnm.algorithms.OhmicConduction.to_mask"]], "update() (ohmicconduction method)": [[259, "openpnm.algorithms.OhmicConduction.update"]], "values() (ohmicconduction method)": [[260, "openpnm.algorithms.OhmicConduction.values"]], "reactivetransport (class in openpnm.algorithms)": [[261, "openpnm.algorithms.ReactiveTransport"]], "clear() (reactivetransport method)": [[262, "openpnm.algorithms.ReactiveTransport.clear"]], "clear_bcs() (reactivetransport method)": [[263, "openpnm.algorithms.ReactiveTransport.clear_BCs"]], "clear_rate_bcs() (reactivetransport method)": [[264, "openpnm.algorithms.ReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (reactivetransport method)": [[265, "openpnm.algorithms.ReactiveTransport.clear_value_BCs"]], "copy() (reactivetransport method)": [[266, "openpnm.algorithms.ReactiveTransport.copy"]], "filter_by_label() (reactivetransport method)": [[267, "openpnm.algorithms.ReactiveTransport.filter_by_label"]], "fromkeys() (reactivetransport method)": [[268, "openpnm.algorithms.ReactiveTransport.fromkeys"]], "get() (reactivetransport method)": [[269, "openpnm.algorithms.ReactiveTransport.get"]], "get_conduit_data() (reactivetransport method)": [[270, "openpnm.algorithms.ReactiveTransport.get_conduit_data"]], "interpolate_data() (reactivetransport method)": [[271, "openpnm.algorithms.ReactiveTransport.interpolate_data"]], "items() (reactivetransport method)": [[272, "openpnm.algorithms.ReactiveTransport.items"]], "keys() (reactivetransport method)": [[273, "openpnm.algorithms.ReactiveTransport.keys"]], "labels() (reactivetransport method)": [[274, "openpnm.algorithms.ReactiveTransport.labels"]], "num_pores() (reactivetransport method)": [[275, "openpnm.algorithms.ReactiveTransport.num_pores"]], "num_throats() (reactivetransport method)": [[276, "openpnm.algorithms.ReactiveTransport.num_throats"]], "pop() (reactivetransport method)": [[277, "openpnm.algorithms.ReactiveTransport.pop"]], "popitem() (reactivetransport method)": [[278, "openpnm.algorithms.ReactiveTransport.popitem"]], "pores() (reactivetransport method)": [[279, "openpnm.algorithms.ReactiveTransport.pores"]], "props() (reactivetransport method)": [[280, "openpnm.algorithms.ReactiveTransport.props"]], "rate() (reactivetransport method)": [[281, "openpnm.algorithms.ReactiveTransport.rate"]], "run() (reactivetransport method)": [[282, "openpnm.algorithms.ReactiveTransport.run"]], "set_bc() (reactivetransport method)": [[283, "openpnm.algorithms.ReactiveTransport.set_BC"]], "set_label() (reactivetransport method)": [[284, "openpnm.algorithms.ReactiveTransport.set_label"]], "set_rate_bc() (reactivetransport method)": [[285, "openpnm.algorithms.ReactiveTransport.set_rate_BC"]], "set_source() (reactivetransport method)": [[286, "openpnm.algorithms.ReactiveTransport.set_source"]], "set_value_bc() (reactivetransport method)": [[287, "openpnm.algorithms.ReactiveTransport.set_value_BC"]], "setdefault() (reactivetransport method)": [[288, "openpnm.algorithms.ReactiveTransport.setdefault"]], "throats() (reactivetransport method)": [[289, "openpnm.algorithms.ReactiveTransport.throats"]], "to_indices() (reactivetransport method)": [[290, "openpnm.algorithms.ReactiveTransport.to_indices"]], "to_mask() (reactivetransport method)": [[291, "openpnm.algorithms.ReactiveTransport.to_mask"]], "update() (reactivetransport method)": [[292, "openpnm.algorithms.ReactiveTransport.update"]], "values() (reactivetransport method)": [[293, "openpnm.algorithms.ReactiveTransport.values"]], "stokesflow (class in openpnm.algorithms)": [[294, "openpnm.algorithms.StokesFlow"]], "clear() (stokesflow method)": [[295, "openpnm.algorithms.StokesFlow.clear"]], "clear_bcs() (stokesflow method)": [[296, "openpnm.algorithms.StokesFlow.clear_BCs"]], "clear_rate_bcs() (stokesflow method)": [[297, "openpnm.algorithms.StokesFlow.clear_rate_BCs"]], "clear_value_bcs() (stokesflow method)": [[298, "openpnm.algorithms.StokesFlow.clear_value_BCs"]], "copy() (stokesflow method)": [[299, "openpnm.algorithms.StokesFlow.copy"]], "filter_by_label() (stokesflow method)": [[300, "openpnm.algorithms.StokesFlow.filter_by_label"]], "fromkeys() (stokesflow method)": [[301, "openpnm.algorithms.StokesFlow.fromkeys"]], "get() (stokesflow method)": [[302, "openpnm.algorithms.StokesFlow.get"]], "get_conduit_data() (stokesflow method)": [[303, "openpnm.algorithms.StokesFlow.get_conduit_data"]], "interpolate_data() (stokesflow method)": [[304, "openpnm.algorithms.StokesFlow.interpolate_data"]], "items() (stokesflow method)": [[305, "openpnm.algorithms.StokesFlow.items"]], "keys() (stokesflow method)": [[306, "openpnm.algorithms.StokesFlow.keys"]], "labels() (stokesflow method)": [[307, "openpnm.algorithms.StokesFlow.labels"]], "num_pores() (stokesflow method)": [[308, "openpnm.algorithms.StokesFlow.num_pores"]], "num_throats() (stokesflow method)": [[309, "openpnm.algorithms.StokesFlow.num_throats"]], "pop() (stokesflow method)": [[310, "openpnm.algorithms.StokesFlow.pop"]], "popitem() (stokesflow method)": [[311, "openpnm.algorithms.StokesFlow.popitem"]], "pores() (stokesflow method)": [[312, "openpnm.algorithms.StokesFlow.pores"]], "props() (stokesflow method)": [[313, "openpnm.algorithms.StokesFlow.props"]], "rate() (stokesflow method)": [[314, "openpnm.algorithms.StokesFlow.rate"]], "run() (stokesflow method)": [[315, "openpnm.algorithms.StokesFlow.run"]], "set_bc() (stokesflow method)": [[316, "openpnm.algorithms.StokesFlow.set_BC"]], "set_label() (stokesflow method)": [[317, "openpnm.algorithms.StokesFlow.set_label"]], "set_rate_bc() (stokesflow method)": [[318, "openpnm.algorithms.StokesFlow.set_rate_BC"]], "set_source() (stokesflow method)": [[319, "openpnm.algorithms.StokesFlow.set_source"]], "set_value_bc() (stokesflow method)": [[320, "openpnm.algorithms.StokesFlow.set_value_BC"]], "setdefault() (stokesflow method)": [[321, "openpnm.algorithms.StokesFlow.setdefault"]], "throats() (stokesflow method)": [[322, "openpnm.algorithms.StokesFlow.throats"]], "to_indices() (stokesflow method)": [[323, "openpnm.algorithms.StokesFlow.to_indices"]], "to_mask() (stokesflow method)": [[324, "openpnm.algorithms.StokesFlow.to_mask"]], "update() (stokesflow method)": [[325, "openpnm.algorithms.StokesFlow.update"]], "values() (stokesflow method)": [[326, "openpnm.algorithms.StokesFlow.values"]], "transientadvectiondiffusion (class in openpnm.algorithms)": [[327, "openpnm.algorithms.TransientAdvectionDiffusion"]], "clear() (transientadvectiondiffusion method)": [[328, "openpnm.algorithms.TransientAdvectionDiffusion.clear"]], "clear_bcs() (transientadvectiondiffusion method)": [[329, "openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (transientadvectiondiffusion method)": [[330, "openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientadvectiondiffusion method)": [[331, "openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs"]], "copy() (transientadvectiondiffusion method)": [[332, "openpnm.algorithms.TransientAdvectionDiffusion.copy"]], "filter_by_label() (transientadvectiondiffusion method)": [[333, "openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label"]], "fromkeys() (transientadvectiondiffusion method)": [[334, "openpnm.algorithms.TransientAdvectionDiffusion.fromkeys"]], "get() (transientadvectiondiffusion method)": [[335, "openpnm.algorithms.TransientAdvectionDiffusion.get"]], "get_conduit_data() (transientadvectiondiffusion method)": [[336, "openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data"]], "interpolate_data() (transientadvectiondiffusion method)": [[337, "openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data"]], "items() (transientadvectiondiffusion method)": [[338, "openpnm.algorithms.TransientAdvectionDiffusion.items"]], "keys() (transientadvectiondiffusion method)": [[339, "openpnm.algorithms.TransientAdvectionDiffusion.keys"]], "labels() (transientadvectiondiffusion method)": [[340, "openpnm.algorithms.TransientAdvectionDiffusion.labels"]], "num_pores() (transientadvectiondiffusion method)": [[341, "openpnm.algorithms.TransientAdvectionDiffusion.num_pores"]], "num_throats() (transientadvectiondiffusion method)": [[342, "openpnm.algorithms.TransientAdvectionDiffusion.num_throats"]], "pop() (transientadvectiondiffusion method)": [[343, "openpnm.algorithms.TransientAdvectionDiffusion.pop"]], "popitem() (transientadvectiondiffusion method)": [[344, "openpnm.algorithms.TransientAdvectionDiffusion.popitem"]], "pores() (transientadvectiondiffusion method)": [[345, "openpnm.algorithms.TransientAdvectionDiffusion.pores"]], "props() (transientadvectiondiffusion method)": [[346, "openpnm.algorithms.TransientAdvectionDiffusion.props"]], "rate() (transientadvectiondiffusion method)": [[347, "openpnm.algorithms.TransientAdvectionDiffusion.rate"]], "run() (transientadvectiondiffusion method)": [[348, "openpnm.algorithms.TransientAdvectionDiffusion.run"]], "set_bc() (transientadvectiondiffusion method)": [[349, "openpnm.algorithms.TransientAdvectionDiffusion.set_BC"]], "set_label() (transientadvectiondiffusion method)": [[350, "openpnm.algorithms.TransientAdvectionDiffusion.set_label"]], "set_outflow_bc() (transientadvectiondiffusion method)": [[351, "openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (transientadvectiondiffusion method)": [[352, "openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC"]], "set_source() (transientadvectiondiffusion method)": [[353, "openpnm.algorithms.TransientAdvectionDiffusion.set_source"]], "set_value_bc() (transientadvectiondiffusion method)": [[354, "openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC"]], "setdefault() (transientadvectiondiffusion method)": [[355, "openpnm.algorithms.TransientAdvectionDiffusion.setdefault"]], "throats() (transientadvectiondiffusion method)": [[356, "openpnm.algorithms.TransientAdvectionDiffusion.throats"]], "to_indices() (transientadvectiondiffusion method)": [[357, "openpnm.algorithms.TransientAdvectionDiffusion.to_indices"]], "to_mask() (transientadvectiondiffusion method)": [[358, "openpnm.algorithms.TransientAdvectionDiffusion.to_mask"]], "update() (transientadvectiondiffusion method)": [[359, "openpnm.algorithms.TransientAdvectionDiffusion.update"]], "values() (transientadvectiondiffusion method)": [[360, "openpnm.algorithms.TransientAdvectionDiffusion.values"]], "transientfickiandiffusion (class in openpnm.algorithms)": [[361, "openpnm.algorithms.TransientFickianDiffusion"]], "clear() (transientfickiandiffusion method)": [[362, "openpnm.algorithms.TransientFickianDiffusion.clear"]], "clear_bcs() (transientfickiandiffusion method)": [[363, "openpnm.algorithms.TransientFickianDiffusion.clear_BCs"]], "clear_rate_bcs() (transientfickiandiffusion method)": [[364, "openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientfickiandiffusion method)": [[365, "openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs"]], "copy() (transientfickiandiffusion method)": [[366, "openpnm.algorithms.TransientFickianDiffusion.copy"]], "filter_by_label() (transientfickiandiffusion method)": [[367, "openpnm.algorithms.TransientFickianDiffusion.filter_by_label"]], "fromkeys() (transientfickiandiffusion method)": [[368, "openpnm.algorithms.TransientFickianDiffusion.fromkeys"]], "get() (transientfickiandiffusion method)": [[369, "openpnm.algorithms.TransientFickianDiffusion.get"]], "get_conduit_data() (transientfickiandiffusion method)": [[370, "openpnm.algorithms.TransientFickianDiffusion.get_conduit_data"]], "interpolate_data() (transientfickiandiffusion method)": [[371, "openpnm.algorithms.TransientFickianDiffusion.interpolate_data"]], "items() (transientfickiandiffusion method)": [[372, "openpnm.algorithms.TransientFickianDiffusion.items"]], "keys() (transientfickiandiffusion method)": [[373, "openpnm.algorithms.TransientFickianDiffusion.keys"]], "labels() (transientfickiandiffusion method)": [[374, "openpnm.algorithms.TransientFickianDiffusion.labels"]], "num_pores() (transientfickiandiffusion method)": [[375, "openpnm.algorithms.TransientFickianDiffusion.num_pores"]], "num_throats() (transientfickiandiffusion method)": [[376, "openpnm.algorithms.TransientFickianDiffusion.num_throats"]], "pop() (transientfickiandiffusion method)": [[377, "openpnm.algorithms.TransientFickianDiffusion.pop"]], "popitem() (transientfickiandiffusion method)": [[378, "openpnm.algorithms.TransientFickianDiffusion.popitem"]], "pores() (transientfickiandiffusion method)": [[379, "openpnm.algorithms.TransientFickianDiffusion.pores"]], "props() (transientfickiandiffusion method)": [[380, "openpnm.algorithms.TransientFickianDiffusion.props"]], "rate() (transientfickiandiffusion method)": [[381, "openpnm.algorithms.TransientFickianDiffusion.rate"]], "run() (transientfickiandiffusion method)": [[382, "openpnm.algorithms.TransientFickianDiffusion.run"]], "set_bc() (transientfickiandiffusion method)": [[383, "openpnm.algorithms.TransientFickianDiffusion.set_BC"]], "set_label() (transientfickiandiffusion method)": [[384, "openpnm.algorithms.TransientFickianDiffusion.set_label"]], "set_rate_bc() (transientfickiandiffusion method)": [[385, "openpnm.algorithms.TransientFickianDiffusion.set_rate_BC"]], "set_source() (transientfickiandiffusion method)": [[386, "openpnm.algorithms.TransientFickianDiffusion.set_source"]], "set_value_bc() (transientfickiandiffusion method)": [[387, "openpnm.algorithms.TransientFickianDiffusion.set_value_BC"]], "setdefault() (transientfickiandiffusion method)": [[388, "openpnm.algorithms.TransientFickianDiffusion.setdefault"]], "throats() (transientfickiandiffusion method)": [[389, "openpnm.algorithms.TransientFickianDiffusion.throats"]], "to_indices() (transientfickiandiffusion method)": [[390, "openpnm.algorithms.TransientFickianDiffusion.to_indices"]], "to_mask() (transientfickiandiffusion method)": [[391, "openpnm.algorithms.TransientFickianDiffusion.to_mask"]], "update() (transientfickiandiffusion method)": [[392, "openpnm.algorithms.TransientFickianDiffusion.update"]], "values() (transientfickiandiffusion method)": [[393, "openpnm.algorithms.TransientFickianDiffusion.values"]], "transientreactivetransport (class in openpnm.algorithms)": [[394, "openpnm.algorithms.TransientReactiveTransport"]], "clear() (transientreactivetransport method)": [[395, "openpnm.algorithms.TransientReactiveTransport.clear"]], "clear_bcs() (transientreactivetransport method)": [[396, "openpnm.algorithms.TransientReactiveTransport.clear_BCs"]], "clear_rate_bcs() (transientreactivetransport method)": [[397, "openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (transientreactivetransport method)": [[398, "openpnm.algorithms.TransientReactiveTransport.clear_value_BCs"]], "copy() (transientreactivetransport method)": [[399, "openpnm.algorithms.TransientReactiveTransport.copy"]], "filter_by_label() (transientreactivetransport method)": [[400, "openpnm.algorithms.TransientReactiveTransport.filter_by_label"]], "fromkeys() (transientreactivetransport method)": [[401, "openpnm.algorithms.TransientReactiveTransport.fromkeys"]], "get() (transientreactivetransport method)": [[402, "openpnm.algorithms.TransientReactiveTransport.get"]], "get_conduit_data() (transientreactivetransport method)": [[403, "openpnm.algorithms.TransientReactiveTransport.get_conduit_data"]], "interpolate_data() (transientreactivetransport method)": [[404, "openpnm.algorithms.TransientReactiveTransport.interpolate_data"]], "items() (transientreactivetransport method)": [[405, "openpnm.algorithms.TransientReactiveTransport.items"]], "keys() (transientreactivetransport method)": [[406, "openpnm.algorithms.TransientReactiveTransport.keys"]], "labels() (transientreactivetransport method)": [[407, "openpnm.algorithms.TransientReactiveTransport.labels"]], "num_pores() (transientreactivetransport method)": [[408, "openpnm.algorithms.TransientReactiveTransport.num_pores"]], "num_throats() (transientreactivetransport method)": [[409, "openpnm.algorithms.TransientReactiveTransport.num_throats"]], "pop() (transientreactivetransport method)": [[410, "openpnm.algorithms.TransientReactiveTransport.pop"]], "popitem() (transientreactivetransport method)": [[411, "openpnm.algorithms.TransientReactiveTransport.popitem"]], "pores() (transientreactivetransport method)": [[412, "openpnm.algorithms.TransientReactiveTransport.pores"]], "props() (transientreactivetransport method)": [[413, "openpnm.algorithms.TransientReactiveTransport.props"]], "rate() (transientreactivetransport method)": [[414, "openpnm.algorithms.TransientReactiveTransport.rate"]], "run() (transientreactivetransport method)": [[415, "openpnm.algorithms.TransientReactiveTransport.run"]], "set_bc() (transientreactivetransport method)": [[416, "openpnm.algorithms.TransientReactiveTransport.set_BC"]], "set_label() (transientreactivetransport method)": [[417, "openpnm.algorithms.TransientReactiveTransport.set_label"]], "set_rate_bc() (transientreactivetransport method)": [[418, "openpnm.algorithms.TransientReactiveTransport.set_rate_BC"]], "set_source() (transientreactivetransport method)": [[419, "openpnm.algorithms.TransientReactiveTransport.set_source"]], "set_value_bc() (transientreactivetransport method)": [[420, "openpnm.algorithms.TransientReactiveTransport.set_value_BC"]], "setdefault() (transientreactivetransport method)": [[421, "openpnm.algorithms.TransientReactiveTransport.setdefault"]], "throats() (transientreactivetransport method)": [[422, "openpnm.algorithms.TransientReactiveTransport.throats"]], "to_indices() (transientreactivetransport method)": [[423, "openpnm.algorithms.TransientReactiveTransport.to_indices"]], "to_mask() (transientreactivetransport method)": [[424, "openpnm.algorithms.TransientReactiveTransport.to_mask"]], "update() (transientreactivetransport method)": [[425, "openpnm.algorithms.TransientReactiveTransport.update"]], "values() (transientreactivetransport method)": [[426, "openpnm.algorithms.TransientReactiveTransport.values"]], "transport (class in openpnm.algorithms)": [[427, "openpnm.algorithms.Transport"]], "clear() (transport method)": [[428, "openpnm.algorithms.Transport.clear"]], "clear_bcs() (transport method)": [[429, "openpnm.algorithms.Transport.clear_BCs"]], "clear_rate_bcs() (transport method)": [[430, "openpnm.algorithms.Transport.clear_rate_BCs"]], "clear_value_bcs() (transport method)": [[431, "openpnm.algorithms.Transport.clear_value_BCs"]], "copy() (transport method)": [[432, "openpnm.algorithms.Transport.copy"]], "filter_by_label() (transport method)": [[433, "openpnm.algorithms.Transport.filter_by_label"]], "fromkeys() (transport method)": [[434, "openpnm.algorithms.Transport.fromkeys"]], "get() (transport method)": [[435, "openpnm.algorithms.Transport.get"]], "get_conduit_data() (transport method)": [[436, "openpnm.algorithms.Transport.get_conduit_data"]], "interpolate_data() (transport method)": [[437, "openpnm.algorithms.Transport.interpolate_data"]], "items() (transport method)": [[438, "openpnm.algorithms.Transport.items"]], "keys() (transport method)": [[439, "openpnm.algorithms.Transport.keys"]], "labels() (transport method)": [[440, "openpnm.algorithms.Transport.labels"]], "num_pores() (transport method)": [[441, "openpnm.algorithms.Transport.num_pores"]], "num_throats() (transport method)": [[442, "openpnm.algorithms.Transport.num_throats"]], "pop() (transport method)": [[443, "openpnm.algorithms.Transport.pop"]], "popitem() (transport method)": [[444, "openpnm.algorithms.Transport.popitem"]], "pores() (transport method)": [[445, "openpnm.algorithms.Transport.pores"]], "props() (transport method)": [[446, "openpnm.algorithms.Transport.props"]], "rate() (transport method)": [[447, "openpnm.algorithms.Transport.rate"]], "run() (transport method)": [[448, "openpnm.algorithms.Transport.run"]], "set_bc() (transport method)": [[449, "openpnm.algorithms.Transport.set_BC"]], "set_label() (transport method)": [[450, "openpnm.algorithms.Transport.set_label"]], "set_rate_bc() (transport method)": [[451, "openpnm.algorithms.Transport.set_rate_BC"]], "set_value_bc() (transport method)": [[452, "openpnm.algorithms.Transport.set_value_BC"]], "setdefault() (transport method)": [[453, "openpnm.algorithms.Transport.setdefault"]], "throats() (transport method)": [[454, "openpnm.algorithms.Transport.throats"]], "to_indices() (transport method)": [[455, "openpnm.algorithms.Transport.to_indices"]], "to_mask() (transport method)": [[456, "openpnm.algorithms.Transport.to_mask"]], "update() (transport method)": [[457, "openpnm.algorithms.Transport.update"]], "values() (transport method)": [[458, "openpnm.algorithms.Transport.values"]], "openpnm.contrib": [[459, "module-openpnm.contrib"]], "multiphase (class in openpnm.contrib)": [[460, "openpnm.contrib.MultiPhase"]], "add_model() (multiphase method)": [[461, "openpnm.contrib.MultiPhase.add_model"]], "add_model_collection() (multiphase method)": [[462, "openpnm.contrib.MultiPhase.add_model_collection"]], "add_phases() (multiphase method)": [[463, "openpnm.contrib.MultiPhase.add_phases"]], "clear() (multiphase method)": [[464, "openpnm.contrib.MultiPhase.clear"]], "copy() (multiphase method)": [[465, "openpnm.contrib.MultiPhase.copy"]], "filter_by_label() (multiphase method)": [[466, "openpnm.contrib.MultiPhase.filter_by_label"]], "fromkeys() (multiphase method)": [[467, "openpnm.contrib.MultiPhase.fromkeys"]], "get() (multiphase method)": [[468, "openpnm.contrib.MultiPhase.get"]], "get_conduit_data() (multiphase method)": [[469, "openpnm.contrib.MultiPhase.get_conduit_data"]], "interpolate_data() (multiphase method)": [[470, "openpnm.contrib.MultiPhase.interpolate_data"]], "items() (multiphase method)": [[471, "openpnm.contrib.MultiPhase.items"]], "keys() (multiphase method)": [[472, "openpnm.contrib.MultiPhase.keys"]], "labels() (multiphase method)": [[473, "openpnm.contrib.MultiPhase.labels"]], "num_pores() (multiphase method)": [[474, "openpnm.contrib.MultiPhase.num_pores"]], "num_throats() (multiphase method)": [[475, "openpnm.contrib.MultiPhase.num_throats"]], "pop() (multiphase method)": [[476, "openpnm.contrib.MultiPhase.pop"]], "popitem() (multiphase method)": [[477, "openpnm.contrib.MultiPhase.popitem"]], "pores() (multiphase method)": [[478, "openpnm.contrib.MultiPhase.pores"]], "props() (multiphase method)": [[479, "openpnm.contrib.MultiPhase.props"]], "regenerate_models() (multiphase method)": [[480, "openpnm.contrib.MultiPhase.regenerate_models"]], "run_model() (multiphase method)": [[481, "openpnm.contrib.MultiPhase.run_model"]], "set_binary_partition_coef() (multiphase method)": [[482, "openpnm.contrib.MultiPhase.set_binary_partition_coef"]], "set_label() (multiphase method)": [[483, "openpnm.contrib.MultiPhase.set_label"]], "set_occupancy() (multiphase method)": [[484, "openpnm.contrib.MultiPhase.set_occupancy"]], "setdefault() (multiphase method)": [[485, "openpnm.contrib.MultiPhase.setdefault"]], "throats() (multiphase method)": [[486, "openpnm.contrib.MultiPhase.throats"]], "to_indices() (multiphase method)": [[487, "openpnm.contrib.MultiPhase.to_indices"]], "to_mask() (multiphase method)": [[488, "openpnm.contrib.MultiPhase.to_mask"]], "update() (multiphase method)": [[489, "openpnm.contrib.MultiPhase.update"]], "values() (multiphase method)": [[490, "openpnm.contrib.MultiPhase.values"]], "transientmultiphysics (class in openpnm.contrib)": [[491, "openpnm.contrib.TransientMultiPhysics"]], "clear() (transientmultiphysics method)": [[492, "openpnm.contrib.TransientMultiPhysics.clear"]], "clear_bcs() (transientmultiphysics method)": [[493, "openpnm.contrib.TransientMultiPhysics.clear_BCs"]], "copy() (transientmultiphysics method)": [[494, "openpnm.contrib.TransientMultiPhysics.copy"]], "filter_by_label() (transientmultiphysics method)": [[495, "openpnm.contrib.TransientMultiPhysics.filter_by_label"]], "fromkeys() (transientmultiphysics method)": [[496, "openpnm.contrib.TransientMultiPhysics.fromkeys"]], "get() (transientmultiphysics method)": [[497, "openpnm.contrib.TransientMultiPhysics.get"]], "get_conduit_data() (transientmultiphysics method)": [[498, "openpnm.contrib.TransientMultiPhysics.get_conduit_data"]], "interpolate_data() (transientmultiphysics method)": [[499, "openpnm.contrib.TransientMultiPhysics.interpolate_data"]], "items() (transientmultiphysics method)": [[500, "openpnm.contrib.TransientMultiPhysics.items"]], "keys() (transientmultiphysics method)": [[501, "openpnm.contrib.TransientMultiPhysics.keys"]], "labels() (transientmultiphysics method)": [[502, "openpnm.contrib.TransientMultiPhysics.labels"]], "num_pores() (transientmultiphysics method)": [[503, "openpnm.contrib.TransientMultiPhysics.num_pores"]], "num_throats() (transientmultiphysics method)": [[504, "openpnm.contrib.TransientMultiPhysics.num_throats"]], "pop() (transientmultiphysics method)": [[505, "openpnm.contrib.TransientMultiPhysics.pop"]], "popitem() (transientmultiphysics method)": [[506, "openpnm.contrib.TransientMultiPhysics.popitem"]], "pores() (transientmultiphysics method)": [[507, "openpnm.contrib.TransientMultiPhysics.pores"]], "props() (transientmultiphysics method)": [[508, "openpnm.contrib.TransientMultiPhysics.props"]], "run() (transientmultiphysics method)": [[509, "openpnm.contrib.TransientMultiPhysics.run"]], "set_bc() (transientmultiphysics method)": [[510, "openpnm.contrib.TransientMultiPhysics.set_BC"]], "set_label() (transientmultiphysics method)": [[511, "openpnm.contrib.TransientMultiPhysics.set_label"]], "setdefault() (transientmultiphysics method)": [[512, "openpnm.contrib.TransientMultiPhysics.setdefault"]], "throats() (transientmultiphysics method)": [[513, "openpnm.contrib.TransientMultiPhysics.throats"]], "to_indices() (transientmultiphysics method)": [[514, "openpnm.contrib.TransientMultiPhysics.to_indices"]], "to_mask() (transientmultiphysics method)": [[515, "openpnm.contrib.TransientMultiPhysics.to_mask"]], "update() (transientmultiphysics method)": [[516, "openpnm.contrib.TransientMultiPhysics.update"]], "values() (transientmultiphysics method)": [[517, "openpnm.contrib.TransientMultiPhysics.values"]], "multiphase_diffusion() (in module openpnm.contrib)": [[518, "openpnm.contrib.multiphase_diffusion"]], "openpnm.core": [[519, "module-openpnm.core"]], "base2 (class in openpnm.core)": [[520, "openpnm.core.Base2"]], "clear() (base2 method)": [[521, "openpnm.core.Base2.clear"]], "copy() (base2 method)": [[522, "openpnm.core.Base2.copy"]], "fromkeys() (base2 method)": [[523, "openpnm.core.Base2.fromkeys"]], "get() (base2 method)": [[524, "openpnm.core.Base2.get"]], "get_conduit_data() (base2 method)": [[525, "openpnm.core.Base2.get_conduit_data"]], "interpolate_data() (base2 method)": [[526, "openpnm.core.Base2.interpolate_data"]], "items() (base2 method)": [[527, "openpnm.core.Base2.items"]], "keys() (base2 method)": [[528, "openpnm.core.Base2.keys"]], "pop() (base2 method)": [[529, "openpnm.core.Base2.pop"]], "popitem() (base2 method)": [[530, "openpnm.core.Base2.popitem"]], "props() (base2 method)": [[531, "openpnm.core.Base2.props"]], "setdefault() (base2 method)": [[532, "openpnm.core.Base2.setdefault"]], "to_indices() (base2 method)": [[533, "openpnm.core.Base2.to_indices"]], "to_mask() (base2 method)": [[534, "openpnm.core.Base2.to_mask"]], "update() (base2 method)": [[535, "openpnm.core.Base2.update"]], "values() (base2 method)": [[536, "openpnm.core.Base2.values"]], "domain (class in openpnm.core)": [[537, "openpnm.core.Domain"]], "add_model() (domain method)": [[538, "openpnm.core.Domain.add_model"]], "add_model_collection() (domain method)": [[539, "openpnm.core.Domain.add_model_collection"]], "clear() (domain method)": [[540, "openpnm.core.Domain.clear"]], "copy() (domain method)": [[541, "openpnm.core.Domain.copy"]], "filter_by_label() (domain method)": [[542, "openpnm.core.Domain.filter_by_label"]], "fromkeys() (domain method)": [[543, "openpnm.core.Domain.fromkeys"]], "get() (domain method)": [[544, "openpnm.core.Domain.get"]], "get_conduit_data() (domain method)": [[545, "openpnm.core.Domain.get_conduit_data"]], "interpolate_data() (domain method)": [[546, "openpnm.core.Domain.interpolate_data"]], "items() (domain method)": [[547, "openpnm.core.Domain.items"]], "keys() (domain method)": [[548, "openpnm.core.Domain.keys"]], "labels() (domain method)": [[549, "openpnm.core.Domain.labels"]], "num_pores() (domain method)": [[550, "openpnm.core.Domain.num_pores"]], "num_throats() (domain method)": [[551, "openpnm.core.Domain.num_throats"]], "pop() (domain method)": [[552, "openpnm.core.Domain.pop"]], "popitem() (domain method)": [[553, "openpnm.core.Domain.popitem"]], "pores() (domain method)": [[554, "openpnm.core.Domain.pores"]], "props() (domain method)": [[555, "openpnm.core.Domain.props"]], "regenerate_models() (domain method)": [[556, "openpnm.core.Domain.regenerate_models"]], "run_model() (domain method)": [[557, "openpnm.core.Domain.run_model"]], "set_label() (domain method)": [[558, "openpnm.core.Domain.set_label"]], "setdefault() (domain method)": [[559, "openpnm.core.Domain.setdefault"]], "throats() (domain method)": [[560, "openpnm.core.Domain.throats"]], "to_indices() (domain method)": [[561, "openpnm.core.Domain.to_indices"]], "to_mask() (domain method)": [[562, "openpnm.core.Domain.to_mask"]], "update() (domain method)": [[563, "openpnm.core.Domain.update"]], "values() (domain method)": [[564, "openpnm.core.Domain.values"]], "labelmixin (class in openpnm.core)": [[565, "openpnm.core.LabelMixin"]], "filter_by_label() (labelmixin method)": [[566, "openpnm.core.LabelMixin.filter_by_label"]], "labels() (labelmixin method)": [[567, "openpnm.core.LabelMixin.labels"]], "num_pores() (labelmixin method)": [[568, "openpnm.core.LabelMixin.num_pores"]], "num_throats() (labelmixin method)": [[569, "openpnm.core.LabelMixin.num_throats"]], "pores() (labelmixin method)": [[570, "openpnm.core.LabelMixin.pores"]], "set_label() (labelmixin method)": [[571, "openpnm.core.LabelMixin.set_label"]], "throats() (labelmixin method)": [[572, "openpnm.core.LabelMixin.throats"]], "modelwrapper (class in openpnm.core)": [[573, "openpnm.core.ModelWrapper"]], "__call__() (modelwrapper method)": [[574, "openpnm.core.ModelWrapper.__call__"]], "clear() (modelwrapper method)": [[575, "openpnm.core.ModelWrapper.clear"]], "copy() (modelwrapper method)": [[576, "openpnm.core.ModelWrapper.copy"]], "fromkeys() (modelwrapper method)": [[577, "openpnm.core.ModelWrapper.fromkeys"]], "get() (modelwrapper method)": [[578, "openpnm.core.ModelWrapper.get"]], "items() (modelwrapper method)": [[579, "openpnm.core.ModelWrapper.items"]], "keys() (modelwrapper method)": [[580, "openpnm.core.ModelWrapper.keys"]], "pop() (modelwrapper method)": [[581, "openpnm.core.ModelWrapper.pop"]], "popitem() (modelwrapper method)": [[582, "openpnm.core.ModelWrapper.popitem"]], "setdefault() (modelwrapper method)": [[583, "openpnm.core.ModelWrapper.setdefault"]], "update() (modelwrapper method)": [[584, "openpnm.core.ModelWrapper.update"]], "values() (modelwrapper method)": [[585, "openpnm.core.ModelWrapper.values"]], "modelsdict (class in openpnm.core)": [[586, "openpnm.core.ModelsDict"]], "clear() (modelsdict method)": [[587, "openpnm.core.ModelsDict.clear"]], "copy() (modelsdict method)": [[588, "openpnm.core.ModelsDict.copy"]], "dependency_graph() (modelsdict method)": [[589, "openpnm.core.ModelsDict.dependency_graph"]], "dependency_list() (modelsdict method)": [[590, "openpnm.core.ModelsDict.dependency_list"]], "dependency_map() (modelsdict method)": [[591, "openpnm.core.ModelsDict.dependency_map"]], "fromkeys() (modelsdict method)": [[592, "openpnm.core.ModelsDict.fromkeys"]], "get() (modelsdict method)": [[593, "openpnm.core.ModelsDict.get"]], "items() (modelsdict method)": [[594, "openpnm.core.ModelsDict.items"]], "keys() (modelsdict method)": [[595, "openpnm.core.ModelsDict.keys"]], "pop() (modelsdict method)": [[596, "openpnm.core.ModelsDict.pop"]], "popitem() (modelsdict method)": [[597, "openpnm.core.ModelsDict.popitem"]], "setdefault() (modelsdict method)": [[598, "openpnm.core.ModelsDict.setdefault"]], "update() (modelsdict method)": [[599, "openpnm.core.ModelsDict.update"]], "values() (modelsdict method)": [[600, "openpnm.core.ModelsDict.values"]], "modelsmixin2 (class in openpnm.core)": [[601, "openpnm.core.ModelsMixin2"]], "add_model() (modelsmixin2 method)": [[602, "openpnm.core.ModelsMixin2.add_model"]], "add_model_collection() (modelsmixin2 method)": [[603, "openpnm.core.ModelsMixin2.add_model_collection"]], "regenerate_models() (modelsmixin2 method)": [[604, "openpnm.core.ModelsMixin2.regenerate_models"]], "run_model() (modelsmixin2 method)": [[605, "openpnm.core.ModelsMixin2.run_model"]], "parsermixin (class in openpnm.core)": [[606, "openpnm.core.ParserMixin"]], "openpnm.integrators": [[607, "module-openpnm.integrators"]], "integrator (class in openpnm.integrators)": [[608, "openpnm.integrators.Integrator"]], "scipyrk45 (class in openpnm.integrators)": [[609, "openpnm.integrators.ScipyRK45"]], "solve() (scipyrk45 method)": [[610, "openpnm.integrators.ScipyRK45.solve"]], "openpnm.io": [[611, "module-openpnm.io"]], "network_from_csv() (in module openpnm.io)": [[612, "openpnm.io.network_from_csv"]], "network_from_jsongraph() (in module openpnm.io)": [[613, "openpnm.io.network_from_jsongraph"]], "network_from_marock() (in module openpnm.io)": [[614, "openpnm.io.network_from_marock"]], "network_from_networkx() (in module openpnm.io)": [[615, "openpnm.io.network_from_networkx"]], "network_from_pergeos() (in module openpnm.io)": [[616, "openpnm.io.network_from_pergeos"]], "network_from_porespy() (in module openpnm.io)": [[617, "openpnm.io.network_from_porespy"]], "network_from_statoil() (in module openpnm.io)": [[618, "openpnm.io.network_from_statoil"]], "network_to_comsol() (in module openpnm.io)": [[619, "openpnm.io.network_to_comsol"]], "network_to_csv() (in module openpnm.io)": [[620, "openpnm.io.network_to_csv"]], "network_to_jsongraph() (in module openpnm.io)": [[621, "openpnm.io.network_to_jsongraph"]], "network_to_networkx() (in module openpnm.io)": [[622, "openpnm.io.network_to_networkx"]], "network_to_pandas() (in module openpnm.io)": [[623, "openpnm.io.network_to_pandas"]], "network_to_pergeos() (in module openpnm.io)": [[624, "openpnm.io.network_to_pergeos"]], "network_to_salome() (in module openpnm.io)": [[625, "openpnm.io.network_to_salome"]], "network_to_stl() (in module openpnm.io)": [[626, "openpnm.io.network_to_stl"]], "print_hdf5() (in module openpnm.io)": [[627, "openpnm.io.print_hdf5"]], "project_to_csv() (in module openpnm.io)": [[628, "openpnm.io.project_to_csv"]], "project_to_dict() (in module openpnm.io)": [[629, "openpnm.io.project_to_dict"]], "project_to_hdf5() (in module openpnm.io)": [[630, "openpnm.io.project_to_hdf5"]], "project_to_pandas() (in module openpnm.io)": [[631, "openpnm.io.project_to_pandas"]], "project_to_paraview() (in module openpnm.io)": [[632, "openpnm.io.project_to_paraview"]], "project_to_vtk() (in module openpnm.io)": [[633, "openpnm.io.project_to_vtk"]], "project_to_xdmf() (in module openpnm.io)": [[634, "openpnm.io.project_to_xdmf"]], "openpnm.models": [[635, "module-openpnm.models"]], "openpnm.models.collections": [[636, "module-openpnm.models.collections"]], "openpnm.models.collections.geometry": [[637, "module-openpnm.models.collections.geometry"]], "circles_and_rectangles (in module openpnm.models.collections.geometry)": [[638, "openpnm.models.collections.geometry.circles_and_rectangles"]], "cones_and_cylinders (in module openpnm.models.collections.geometry)": [[639, "openpnm.models.collections.geometry.cones_and_cylinders"]], "cubes_and_cuboids (in module openpnm.models.collections.geometry)": [[640, "openpnm.models.collections.geometry.cubes_and_cuboids"]], "pyramids_and_cuboids (in module openpnm.models.collections.geometry)": [[641, "openpnm.models.collections.geometry.pyramids_and_cuboids"]], "spheres_and_cylinders (in module openpnm.models.collections.geometry)": [[642, "openpnm.models.collections.geometry.spheres_and_cylinders"]], "squares_and_rectangles (in module openpnm.models.collections.geometry)": [[643, "openpnm.models.collections.geometry.squares_and_rectangles"]], "trapezoids_and_rectangles (in module openpnm.models.collections.geometry)": [[644, "openpnm.models.collections.geometry.trapezoids_and_rectangles"]], "openpnm.models.collections.network": [[645, "module-openpnm.models.collections.network"]], "openpnm.models.collections.phase": [[646, "module-openpnm.models.collections.phase"]], "air (in module openpnm.models.collections.phase)": [[647, "openpnm.models.collections.phase.air"]], "openpnm.models.collections.phase.gas": [[648, "module-openpnm.models.collections.phase.gas"]], "openpnm.models.collections.phase.liquid": [[649, "module-openpnm.models.collections.phase.liquid"]], "mercury (in module openpnm.models.collections.phase)": [[650, "openpnm.models.collections.phase.mercury"]], "water (in module openpnm.models.collections.phase)": [[651, "openpnm.models.collections.phase.water"]], "openpnm.models.collections.physics": [[652, "module-openpnm.models.collections.physics"]], "basic (in module openpnm.models.collections.physics)": [[653, "openpnm.models.collections.physics.basic"]], "standard (in module openpnm.models.collections.physics)": [[654, "openpnm.models.collections.physics.standard"]], "openpnm.models.geometry": [[655, "module-openpnm.models.geometry"]], "openpnm.models.geometry.conduit_lengths": [[656, "module-openpnm.models.geometry.conduit_lengths"]], "circles_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[657, "openpnm.models.geometry.conduit_lengths.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[658, "openpnm.models.geometry.conduit_lengths.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[659, "openpnm.models.geometry.conduit_lengths.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[660, "openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[661, "openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[662, "openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.conduit_lengths)": [[663, "openpnm.models.geometry.conduit_lengths.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.conduit_lengths)": [[664, "openpnm.models.geometry.conduit_lengths.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.conduit_lengths)": [[665, "openpnm.models.geometry.conduit_lengths.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[666, "openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[667, "openpnm.models.geometry.conduit_lengths.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[668, "openpnm.models.geometry.conduit_lengths.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[669, "openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[670, "module-openpnm.models.geometry.diffusive_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[671, "openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[672, "openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[673, "openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[674, "openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[675, "openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[676, "openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.diffusive_size_factors)": [[677, "openpnm.models.geometry.diffusive_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.diffusive_size_factors)": [[678, "openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.diffusive_size_factors)": [[679, "openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.diffusive_size_factors)": [[680, "openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[681, "openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[682, "openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[683, "openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[684, "openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[685, "module-openpnm.models.geometry.hydraulic_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[686, "openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[687, "openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[688, "openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[689, "openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[690, "openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[691, "openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.hydraulic_size_factors)": [[692, "openpnm.models.geometry.hydraulic_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[693, "openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[694, "openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.hydraulic_size_factors)": [[695, "openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[696, "openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[697, "openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[698, "openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[699, "openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[700, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "circle() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[701, "openpnm.models.geometry.pore_cross_sectional_area.circle"]], "cone() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[702, "openpnm.models.geometry.pore_cross_sectional_area.cone"]], "cube() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[703, "openpnm.models.geometry.pore_cross_sectional_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[704, "openpnm.models.geometry.pore_cross_sectional_area.sphere"]], "square() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[705, "openpnm.models.geometry.pore_cross_sectional_area.square"]], "openpnm.models.geometry.pore_seed": [[706, "module-openpnm.models.geometry.pore_seed"]], "random() (in module openpnm.models.geometry.pore_seed)": [[707, "openpnm.models.geometry.pore_seed.random"]], "spatially_correlated() (in module openpnm.models.geometry.pore_seed)": [[708, "openpnm.models.geometry.pore_seed.spatially_correlated"]], "openpnm.models.geometry.pore_size": [[709, "module-openpnm.models.geometry.pore_size"]], "equivalent_diameter() (in module openpnm.models.geometry.pore_size)": [[710, "openpnm.models.geometry.pore_size.equivalent_diameter"]], "from_neighbor_throats() (in module openpnm.models.geometry.pore_size)": [[711, "openpnm.models.geometry.pore_size.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.geometry.pore_size)": [[712, "openpnm.models.geometry.pore_size.generic_distribution"]], "largest_sphere() (in module openpnm.models.geometry.pore_size)": [[713, "openpnm.models.geometry.pore_size.largest_sphere"]], "normal() (in module openpnm.models.geometry.pore_size)": [[714, "openpnm.models.geometry.pore_size.normal"]], "random() (in module openpnm.models.geometry.pore_size)": [[715, "openpnm.models.geometry.pore_size.random"]], "weibull() (in module openpnm.models.geometry.pore_size)": [[716, "openpnm.models.geometry.pore_size.weibull"]], "openpnm.models.geometry.pore_surface_area": [[717, "module-openpnm.models.geometry.pore_surface_area"]], "circle() (in module openpnm.models.geometry.pore_surface_area)": [[718, "openpnm.models.geometry.pore_surface_area.circle"]], "cube() (in module openpnm.models.geometry.pore_surface_area)": [[719, "openpnm.models.geometry.pore_surface_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_surface_area)": [[720, "openpnm.models.geometry.pore_surface_area.sphere"]], "square() (in module openpnm.models.geometry.pore_surface_area)": [[721, "openpnm.models.geometry.pore_surface_area.square"]], "openpnm.models.geometry.pore_volume": [[722, "module-openpnm.models.geometry.pore_volume"]], "circle() (in module openpnm.models.geometry.pore_volume)": [[723, "openpnm.models.geometry.pore_volume.circle"]], "cube() (in module openpnm.models.geometry.pore_volume)": [[724, "openpnm.models.geometry.pore_volume.cube"]], "effective() (in module openpnm.models.geometry.pore_volume)": [[725, "openpnm.models.geometry.pore_volume.effective"]], "sphere() (in module openpnm.models.geometry.pore_volume)": [[726, "openpnm.models.geometry.pore_volume.sphere"]], "square() (in module openpnm.models.geometry.pore_volume)": [[727, "openpnm.models.geometry.pore_volume.square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[728, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "jenkins_rao() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[729, "openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao"]], "mason_morrow() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[730, "openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[731, "module-openpnm.models.geometry.throat_centroid"]], "pore_coords() (in module openpnm.models.geometry.throat_centroid)": [[732, "openpnm.models.geometry.throat_centroid.pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[733, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "cuboid() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[734, "openpnm.models.geometry.throat_cross_sectional_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[735, "openpnm.models.geometry.throat_cross_sectional_area.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[736, "openpnm.models.geometry.throat_cross_sectional_area.rectangle"]], "openpnm.models.geometry.throat_endpoints": [[737, "module-openpnm.models.geometry.throat_endpoints"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_endpoints)": [[738, "openpnm.models.geometry.throat_endpoints.spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[739, "module-openpnm.models.geometry.throat_length"]], "circles_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[740, "openpnm.models.geometry.throat_length.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[741, "openpnm.models.geometry.throat_length.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[742, "openpnm.models.geometry.throat_length.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[743, "openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[744, "openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[745, "openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.throat_length)": [[746, "openpnm.models.geometry.throat_length.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.throat_length)": [[747, "openpnm.models.geometry.throat_length.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.throat_length)": [[748, "openpnm.models.geometry.throat_length.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[749, "openpnm.models.geometry.throat_length.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[750, "openpnm.models.geometry.throat_length.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[751, "openpnm.models.geometry.throat_length.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[752, "openpnm.models.geometry.throat_length.trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[753, "module-openpnm.models.geometry.throat_perimeter"]], "cuboid() (in module openpnm.models.geometry.throat_perimeter)": [[754, "openpnm.models.geometry.throat_perimeter.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_perimeter)": [[755, "openpnm.models.geometry.throat_perimeter.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_perimeter)": [[756, "openpnm.models.geometry.throat_perimeter.rectangle"]], "openpnm.models.geometry.throat_seed": [[757, "module-openpnm.models.geometry.throat_seed"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_seed)": [[758, "openpnm.models.geometry.throat_seed.from_neighbor_pores"]], "random() (in module openpnm.models.geometry.throat_seed)": [[759, "openpnm.models.geometry.throat_seed.random"]], "openpnm.models.geometry.throat_size": [[760, "module-openpnm.models.geometry.throat_size"]], "equivalent_diameter() (in module openpnm.models.geometry.throat_size)": [[761, "openpnm.models.geometry.throat_size.equivalent_diameter"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_size)": [[762, "openpnm.models.geometry.throat_size.from_neighbor_pores"]], "generic_distribution() (in module openpnm.models.geometry.throat_size)": [[763, "openpnm.models.geometry.throat_size.generic_distribution"]], "normal() (in module openpnm.models.geometry.throat_size)": [[764, "openpnm.models.geometry.throat_size.normal"]], "random() (in module openpnm.models.geometry.throat_size)": [[765, "openpnm.models.geometry.throat_size.random"]], "weibull() (in module openpnm.models.geometry.throat_size)": [[766, "openpnm.models.geometry.throat_size.weibull"]], "openpnm.models.geometry.throat_surface_area": [[767, "module-openpnm.models.geometry.throat_surface_area"]], "cuboid() (in module openpnm.models.geometry.throat_surface_area)": [[768, "openpnm.models.geometry.throat_surface_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_surface_area)": [[769, "openpnm.models.geometry.throat_surface_area.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_surface_area)": [[770, "openpnm.models.geometry.throat_surface_area.extrusion"]], "rectangle() (in module openpnm.models.geometry.throat_surface_area)": [[771, "openpnm.models.geometry.throat_surface_area.rectangle"]], "openpnm.models.geometry.throat_vector": [[772, "module-openpnm.models.geometry.throat_vector"]], "pore_to_pore() (in module openpnm.models.geometry.throat_vector)": [[773, "openpnm.models.geometry.throat_vector.pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[774, "module-openpnm.models.geometry.throat_volume"]], "cuboid() (in module openpnm.models.geometry.throat_volume)": [[775, "openpnm.models.geometry.throat_volume.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_volume)": [[776, "openpnm.models.geometry.throat_volume.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_volume)": [[777, "openpnm.models.geometry.throat_volume.extrusion"]], "lens() (in module openpnm.models.geometry.throat_volume)": [[778, "openpnm.models.geometry.throat_volume.lens"]], "pendular_ring() (in module openpnm.models.geometry.throat_volume)": [[779, "openpnm.models.geometry.throat_volume.pendular_ring"]], "rectangle() (in module openpnm.models.geometry.throat_volume)": [[780, "openpnm.models.geometry.throat_volume.rectangle"]], "openpnm.models.misc": [[781, "module-openpnm.models.misc"]], "blank() (in module openpnm.models.misc)": [[782, "openpnm.models.misc.blank"]], "clip() (in module openpnm.models.misc)": [[783, "openpnm.models.misc.clip"]], "constant() (in module openpnm.models.misc)": [[784, "openpnm.models.misc.constant"]], "difference() (in module openpnm.models.misc)": [[785, "openpnm.models.misc.difference"]], "fraction() (in module openpnm.models.misc)": [[786, "openpnm.models.misc.fraction"]], "from_neighbor_pores() (in module openpnm.models.misc)": [[787, "openpnm.models.misc.from_neighbor_pores"]], "from_neighbor_throats() (in module openpnm.models.misc)": [[788, "openpnm.models.misc.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.misc)": [[789, "openpnm.models.misc.generic_distribution"]], "generic_function() (in module openpnm.models.misc)": [[790, "openpnm.models.misc.generic_function"]], "invert() (in module openpnm.models.misc)": [[791, "openpnm.models.misc.invert"]], "linear() (in module openpnm.models.misc)": [[792, "openpnm.models.misc.linear"]], "match_histogram() (in module openpnm.models.misc)": [[793, "openpnm.models.misc.match_histogram"]], "normal() (in module openpnm.models.misc)": [[794, "openpnm.models.misc.normal"]], "normalize() (in module openpnm.models.misc)": [[795, "openpnm.models.misc.normalize"]], "polynomial() (in module openpnm.models.misc)": [[796, "openpnm.models.misc.polynomial"]], "product() (in module openpnm.models.misc)": [[797, "openpnm.models.misc.product"]], "random() (in module openpnm.models.misc)": [[798, "openpnm.models.misc.random"]], "scaled() (in module openpnm.models.misc)": [[799, "openpnm.models.misc.scaled"]], "summation() (in module openpnm.models.misc)": [[800, "openpnm.models.misc.summation"]], "weibull() (in module openpnm.models.misc)": [[801, "openpnm.models.misc.weibull"]], "openpnm.models.network": [[802, "module-openpnm.models.network"]], "bidirectional_throats() (in module openpnm.models.network)": [[803, "openpnm.models.network.bidirectional_throats"]], "cluster_number() (in module openpnm.models.network)": [[804, "openpnm.models.network.cluster_number"]], "cluster_size() (in module openpnm.models.network)": [[805, "openpnm.models.network.cluster_size"]], "coordination_number() (in module openpnm.models.network)": [[806, "openpnm.models.network.coordination_number"]], "count_coincident_pores() (in module openpnm.models.network)": [[807, "openpnm.models.network.count_coincident_pores"]], "distance_to_furthest_neighbor() (in module openpnm.models.network)": [[808, "openpnm.models.network.distance_to_furthest_neighbor"]], "distance_to_nearest_neighbor() (in module openpnm.models.network)": [[809, "openpnm.models.network.distance_to_nearest_neighbor"]], "distance_to_nearest_pore() (in module openpnm.models.network)": [[810, "openpnm.models.network.distance_to_nearest_pore"]], "duplicate_throats() (in module openpnm.models.network)": [[811, "openpnm.models.network.duplicate_throats"]], "find_coincident_pores() (in module openpnm.models.network)": [[812, "openpnm.models.network.find_coincident_pores"]], "gabriel_edges() (in module openpnm.models.network)": [[813, "openpnm.models.network.gabriel_edges"]], "headless_throats() (in module openpnm.models.network)": [[814, "openpnm.models.network.headless_throats"]], "isolated_pores() (in module openpnm.models.network)": [[815, "openpnm.models.network.isolated_pores"]], "looped_throats() (in module openpnm.models.network)": [[816, "openpnm.models.network.looped_throats"]], "pore_to_pore_distance() (in module openpnm.models.network)": [[817, "openpnm.models.network.pore_to_pore_distance"]], "reversed_throats() (in module openpnm.models.network)": [[818, "openpnm.models.network.reversed_throats"]], "openpnm.models.phase": [[819, "module-openpnm.models.phase"]], "chemicals_wrapper() (in module openpnm.models.phase)": [[820, "openpnm.models.phase.chemicals_wrapper"]], "openpnm.models.phase.critical_props": [[821, "module-openpnm.models.phase.critical_props"]], "openpnm.models.phase.density": [[822, "module-openpnm.models.phase.density"]], "ideal_gas() (in module openpnm.models.phase.density)": [[823, "openpnm.models.phase.density.ideal_gas"]], "liquid_mixture_costald() (in module openpnm.models.phase.density)": [[824, "openpnm.models.phase.density.liquid_mixture_COSTALD"]], "liquid_pure_costald() (in module openpnm.models.phase.density)": [[825, "openpnm.models.phase.density.liquid_pure_COSTALD"]], "mass_to_molar() (in module openpnm.models.phase.density)": [[826, "openpnm.models.phase.density.mass_to_molar"]], "water_correlation() (in module openpnm.models.phase.density)": [[827, "openpnm.models.phase.density.water_correlation"]], "openpnm.models.phase.diffusivity": [[828, "module-openpnm.models.phase.diffusivity"]], "gas_mixture_ce() (in module openpnm.models.phase.diffusivity)": [[829, "openpnm.models.phase.diffusivity.gas_mixture_ce"]], "gas_mixture_fesg() (in module openpnm.models.phase.diffusivity)": [[830, "openpnm.models.phase.diffusivity.gas_mixture_fesg"]], "liquid_mixture_tc() (in module openpnm.models.phase.diffusivity)": [[831, "openpnm.models.phase.diffusivity.liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[832, "module-openpnm.models.phase.heat_capacity"]], "gas_mixture_yweighted() (in module openpnm.models.phase.heat_capacity)": [[833, "openpnm.models.phase.heat_capacity.gas_mixture_yweighted"]], "gas_pure_trc() (in module openpnm.models.phase.heat_capacity)": [[834, "openpnm.models.phase.heat_capacity.gas_pure_TRC"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.heat_capacity)": [[835, "openpnm.models.phase.heat_capacity.liquid_mixture_xweighted"]], "liquid_pure_rp() (in module openpnm.models.phase.heat_capacity)": [[836, "openpnm.models.phase.heat_capacity.liquid_pure_rp"]], "openpnm.models.phase.misc": [[837, "module-openpnm.models.phase.misc"]], "mix_and_match() (in module openpnm.models.phase.misc)": [[838, "openpnm.models.phase.misc.mix_and_match"]], "mole_to_mass_fraction() (in module openpnm.models.phase.misc)": [[839, "openpnm.models.phase.misc.mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[840, "module-openpnm.models.phase.mixtures"]], "from_component() (in module openpnm.models.phase.mixtures)": [[841, "openpnm.models.phase.mixtures.from_component"]], "mixing_rule() (in module openpnm.models.phase.mixtures)": [[842, "openpnm.models.phase.mixtures.mixing_rule"]], "mole_summation() (in module openpnm.models.phase.mixtures)": [[843, "openpnm.models.phase.mixtures.mole_summation"]], "mole_to_mass_fraction() (in module openpnm.models.phase.mixtures)": [[844, "openpnm.models.phase.mixtures.mole_to_mass_fraction"]], "salinity() (in module openpnm.models.phase.mixtures)": [[845, "openpnm.models.phase.mixtures.salinity"]], "openpnm.models.phase.partition_coefficient": [[846, "module-openpnm.models.phase.partition_coefficient"]], "gaseous_species_in_water() (in module openpnm.models.phase.partition_coefficient)": [[847, "openpnm.models.phase.partition_coefficient.gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[848, "module-openpnm.models.phase.surface_tension"]], "liquid_mixture_wsd() (in module openpnm.models.phase.surface_tension)": [[849, "openpnm.models.phase.surface_tension.liquid_mixture_wsd"]], "liquid_pure_bb() (in module openpnm.models.phase.surface_tension)": [[850, "openpnm.models.phase.surface_tension.liquid_pure_bb"]], "water_correlation() (in module openpnm.models.phase.surface_tension)": [[851, "openpnm.models.phase.surface_tension.water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[852, "module-openpnm.models.phase.thermal_conductivity"]], "gas_mixture_whz() (in module openpnm.models.phase.thermal_conductivity)": [[853, "openpnm.models.phase.thermal_conductivity.gas_mixture_whz"]], "gas_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[854, "openpnm.models.phase.thermal_conductivity.gas_pure_gismr"]], "liquid_mixture_dippr9h() (in module openpnm.models.phase.thermal_conductivity)": [[855, "openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H"]], "liquid_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[856, "openpnm.models.phase.thermal_conductivity.liquid_pure_gismr"]], "liquid_pure_sr() (in module openpnm.models.phase.thermal_conductivity)": [[857, "openpnm.models.phase.thermal_conductivity.liquid_pure_sr"]], "water_correlation() (in module openpnm.models.phase.thermal_conductivity)": [[858, "openpnm.models.phase.thermal_conductivity.water_correlation"]], "openpnm.models.phase.vapor_pressure": [[859, "module-openpnm.models.phase.vapor_pressure"]], "liquid_pure_antoine() (in module openpnm.models.phase.vapor_pressure)": [[860, "openpnm.models.phase.vapor_pressure.liquid_pure_antoine"]], "liquid_pure_lk() (in module openpnm.models.phase.vapor_pressure)": [[861, "openpnm.models.phase.vapor_pressure.liquid_pure_lk"]], "water_correlation() (in module openpnm.models.phase.vapor_pressure)": [[862, "openpnm.models.phase.vapor_pressure.water_correlation"]], "openpnm.models.phase.viscosity": [[863, "module-openpnm.models.phase.viscosity"]], "gas_mixture_hz() (in module openpnm.models.phase.viscosity)": [[864, "openpnm.models.phase.viscosity.gas_mixture_hz"]], "gas_pure_gesmr() (in module openpnm.models.phase.viscosity)": [[865, "openpnm.models.phase.viscosity.gas_pure_gesmr"]], "gas_pure_st() (in module openpnm.models.phase.viscosity)": [[866, "openpnm.models.phase.viscosity.gas_pure_st"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.viscosity)": [[867, "openpnm.models.phase.viscosity.liquid_mixture_xweighted"]], "liquid_pure_ls() (in module openpnm.models.phase.viscosity)": [[868, "openpnm.models.phase.viscosity.liquid_pure_ls"]], "water_correlation() (in module openpnm.models.phase.viscosity)": [[869, "openpnm.models.phase.viscosity.water_correlation"]], "openpnm.models.physics": [[870, "module-openpnm.models.physics"]], "openpnm.models.physics.ad_dif_conductance": [[871, "module-openpnm.models.physics.ad_dif_conductance"]], "ad_dif() (in module openpnm.models.physics.ad_dif_conductance)": [[872, "openpnm.models.physics.ad_dif_conductance.ad_dif"]], "openpnm.models.physics.capillary_pressure": [[873, "module-openpnm.models.physics.capillary_pressure"]], "purcell() (in module openpnm.models.physics.capillary_pressure)": [[874, "openpnm.models.physics.capillary_pressure.purcell"]], "washburn() (in module openpnm.models.physics.capillary_pressure)": [[875, "openpnm.models.physics.capillary_pressure.washburn"]], "openpnm.models.physics.diffusive_conductance": [[876, "module-openpnm.models.physics.diffusive_conductance"]], "generic_diffusive() (in module openpnm.models.physics.diffusive_conductance)": [[877, "openpnm.models.physics.diffusive_conductance.generic_diffusive"]], "mixed_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[878, "openpnm.models.physics.diffusive_conductance.mixed_diffusion"]], "ordinary_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[879, "openpnm.models.physics.diffusive_conductance.ordinary_diffusion"]], "taylor_aris_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[880, "openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[881, "module-openpnm.models.physics.electrical_conductance"]], "generic_electrical() (in module openpnm.models.physics.electrical_conductance)": [[882, "openpnm.models.physics.electrical_conductance.generic_electrical"]], "series_resistors() (in module openpnm.models.physics.electrical_conductance)": [[883, "openpnm.models.physics.electrical_conductance.series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[884, "module-openpnm.models.physics.hydraulic_conductance"]], "generic_hydraulic() (in module openpnm.models.physics.hydraulic_conductance)": [[885, "openpnm.models.physics.hydraulic_conductance.generic_hydraulic"]], "hagen_poiseuille() (in module openpnm.models.physics.hydraulic_conductance)": [[886, "openpnm.models.physics.hydraulic_conductance.hagen_poiseuille"]], "valvatne_blunt() (in module openpnm.models.physics.hydraulic_conductance)": [[887, "openpnm.models.physics.hydraulic_conductance.valvatne_blunt"]], "openpnm.models.physics.meniscus": [[888, "module-openpnm.models.physics.meniscus"]], "general_toroidal() (in module openpnm.models.physics.meniscus)": [[889, "openpnm.models.physics.meniscus.general_toroidal"]], "purcell() (in module openpnm.models.physics.meniscus)": [[890, "openpnm.models.physics.meniscus.purcell"]], "sinusoidal() (in module openpnm.models.physics.meniscus)": [[891, "openpnm.models.physics.meniscus.sinusoidal"]], "openpnm.models.physics.multiphase": [[892, "module-openpnm.models.physics.multiphase"]], "conduit_conductance() (in module openpnm.models.physics.multiphase)": [[893, "openpnm.models.physics.multiphase.conduit_conductance"]], "late_filling() (in module openpnm.models.physics.multiphase)": [[894, "openpnm.models.physics.multiphase.late_filling"]], "openpnm.models.physics.source_terms": [[895, "module-openpnm.models.physics.source_terms"]], "butler_volmer_conc() (in module openpnm.models.physics.source_terms)": [[896, "openpnm.models.physics.source_terms.butler_volmer_conc"]], "butler_volmer_voltage() (in module openpnm.models.physics.source_terms)": [[897, "openpnm.models.physics.source_terms.butler_volmer_voltage"]], "exponential() (in module openpnm.models.physics.source_terms)": [[898, "openpnm.models.physics.source_terms.exponential"]], "general_symbolic() (in module openpnm.models.physics.source_terms)": [[899, "openpnm.models.physics.source_terms.general_symbolic"]], "linear() (in module openpnm.models.physics.source_terms)": [[900, "openpnm.models.physics.source_terms.linear"]], "logarithm() (in module openpnm.models.physics.source_terms)": [[901, "openpnm.models.physics.source_terms.logarithm"]], "natural_exponential() (in module openpnm.models.physics.source_terms)": [[902, "openpnm.models.physics.source_terms.natural_exponential"]], "natural_logarithm() (in module openpnm.models.physics.source_terms)": [[903, "openpnm.models.physics.source_terms.natural_logarithm"]], "power_law() (in module openpnm.models.physics.source_terms)": [[904, "openpnm.models.physics.source_terms.power_law"]], "standard_kinetics() (in module openpnm.models.physics.source_terms)": [[905, "openpnm.models.physics.source_terms.standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[906, "module-openpnm.models.physics.thermal_conductance"]], "generic_thermal() (in module openpnm.models.physics.thermal_conductance)": [[907, "openpnm.models.physics.thermal_conductance.generic_thermal"]], "series_resistors() (in module openpnm.models.physics.thermal_conductance)": [[908, "openpnm.models.physics.thermal_conductance.series_resistors"]], "openpnm.network": [[909, "module-openpnm.network"]], "bodycenteredcubic (class in openpnm.network)": [[910, "openpnm.network.BodyCenteredCubic"]], "add_boundary_pores() (bodycenteredcubic method)": [[911, "openpnm.network.BodyCenteredCubic.add_boundary_pores"]], "add_model() (bodycenteredcubic method)": [[912, "openpnm.network.BodyCenteredCubic.add_model"]], "add_model_collection() (bodycenteredcubic method)": [[913, "openpnm.network.BodyCenteredCubic.add_model_collection"]], "clear() (bodycenteredcubic method)": [[914, "openpnm.network.BodyCenteredCubic.clear"]], "copy() (bodycenteredcubic method)": [[915, "openpnm.network.BodyCenteredCubic.copy"]], "create_adjacency_matrix() (bodycenteredcubic method)": [[916, "openpnm.network.BodyCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (bodycenteredcubic method)": [[917, "openpnm.network.BodyCenteredCubic.create_incidence_matrix"]], "filter_by_label() (bodycenteredcubic method)": [[918, "openpnm.network.BodyCenteredCubic.filter_by_label"]], "find_connected_pores() (bodycenteredcubic method)": [[919, "openpnm.network.BodyCenteredCubic.find_connected_pores"]], "find_connecting_throat() (bodycenteredcubic method)": [[920, "openpnm.network.BodyCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (bodycenteredcubic method)": [[921, "openpnm.network.BodyCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (bodycenteredcubic method)": [[922, "openpnm.network.BodyCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (bodycenteredcubic method)": [[923, "openpnm.network.BodyCenteredCubic.find_neighbor_throats"]], "fromkeys() (bodycenteredcubic method)": [[924, "openpnm.network.BodyCenteredCubic.fromkeys"]], "get() (bodycenteredcubic method)": [[925, "openpnm.network.BodyCenteredCubic.get"]], "get_adjacency_matrix() (bodycenteredcubic method)": [[926, "openpnm.network.BodyCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (bodycenteredcubic method)": [[927, "openpnm.network.BodyCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (bodycenteredcubic method)": [[928, "openpnm.network.BodyCenteredCubic.get_incidence_matrix"]], "interpolate_data() (bodycenteredcubic method)": [[929, "openpnm.network.BodyCenteredCubic.interpolate_data"]], "items() (bodycenteredcubic method)": [[930, "openpnm.network.BodyCenteredCubic.items"]], "keys() (bodycenteredcubic method)": [[931, "openpnm.network.BodyCenteredCubic.keys"]], "labels() (bodycenteredcubic method)": [[932, "openpnm.network.BodyCenteredCubic.labels"]], "num_neighbors() (bodycenteredcubic method)": [[933, "openpnm.network.BodyCenteredCubic.num_neighbors"]], "num_pores() (bodycenteredcubic method)": [[934, "openpnm.network.BodyCenteredCubic.num_pores"]], "num_throats() (bodycenteredcubic method)": [[935, "openpnm.network.BodyCenteredCubic.num_throats"]], "pop() (bodycenteredcubic method)": [[936, "openpnm.network.BodyCenteredCubic.pop"]], "popitem() (bodycenteredcubic method)": [[937, "openpnm.network.BodyCenteredCubic.popitem"]], "pores() (bodycenteredcubic method)": [[938, "openpnm.network.BodyCenteredCubic.pores"]], "props() (bodycenteredcubic method)": [[939, "openpnm.network.BodyCenteredCubic.props"]], "regenerate_models() (bodycenteredcubic method)": [[940, "openpnm.network.BodyCenteredCubic.regenerate_models"]], "run_model() (bodycenteredcubic method)": [[941, "openpnm.network.BodyCenteredCubic.run_model"]], "set_label() (bodycenteredcubic method)": [[942, "openpnm.network.BodyCenteredCubic.set_label"]], "setdefault() (bodycenteredcubic method)": [[943, "openpnm.network.BodyCenteredCubic.setdefault"]], "throats() (bodycenteredcubic method)": [[944, "openpnm.network.BodyCenteredCubic.throats"]], "to_indices() (bodycenteredcubic method)": [[945, "openpnm.network.BodyCenteredCubic.to_indices"]], "to_mask() (bodycenteredcubic method)": [[946, "openpnm.network.BodyCenteredCubic.to_mask"]], "update() (bodycenteredcubic method)": [[947, "openpnm.network.BodyCenteredCubic.update"]], "values() (bodycenteredcubic method)": [[948, "openpnm.network.BodyCenteredCubic.values"]], "cubic (class in openpnm.network)": [[949, "openpnm.network.Cubic"]], "add_boundary_pores() (cubic method)": [[950, "openpnm.network.Cubic.add_boundary_pores"]], "add_model() (cubic method)": [[951, "openpnm.network.Cubic.add_model"]], "add_model_collection() (cubic method)": [[952, "openpnm.network.Cubic.add_model_collection"]], "clear() (cubic method)": [[953, "openpnm.network.Cubic.clear"]], "copy() (cubic method)": [[954, "openpnm.network.Cubic.copy"]], "create_adjacency_matrix() (cubic method)": [[955, "openpnm.network.Cubic.create_adjacency_matrix"]], "create_incidence_matrix() (cubic method)": [[956, "openpnm.network.Cubic.create_incidence_matrix"]], "filter_by_label() (cubic method)": [[957, "openpnm.network.Cubic.filter_by_label"]], "find_connected_pores() (cubic method)": [[958, "openpnm.network.Cubic.find_connected_pores"]], "find_connecting_throat() (cubic method)": [[959, "openpnm.network.Cubic.find_connecting_throat"]], "find_nearby_pores() (cubic method)": [[960, "openpnm.network.Cubic.find_nearby_pores"]], "find_neighbor_pores() (cubic method)": [[961, "openpnm.network.Cubic.find_neighbor_pores"]], "find_neighbor_throats() (cubic method)": [[962, "openpnm.network.Cubic.find_neighbor_throats"]], "fromkeys() (cubic method)": [[963, "openpnm.network.Cubic.fromkeys"]], "get() (cubic method)": [[964, "openpnm.network.Cubic.get"]], "get_adjacency_matrix() (cubic method)": [[965, "openpnm.network.Cubic.get_adjacency_matrix"]], "get_conduit_data() (cubic method)": [[966, "openpnm.network.Cubic.get_conduit_data"]], "get_incidence_matrix() (cubic method)": [[967, "openpnm.network.Cubic.get_incidence_matrix"]], "interpolate_data() (cubic method)": [[968, "openpnm.network.Cubic.interpolate_data"]], "items() (cubic method)": [[969, "openpnm.network.Cubic.items"]], "keys() (cubic method)": [[970, "openpnm.network.Cubic.keys"]], "labels() (cubic method)": [[971, "openpnm.network.Cubic.labels"]], "num_neighbors() (cubic method)": [[972, "openpnm.network.Cubic.num_neighbors"]], "num_pores() (cubic method)": [[973, "openpnm.network.Cubic.num_pores"]], "num_throats() (cubic method)": [[974, "openpnm.network.Cubic.num_throats"]], "pop() (cubic method)": [[975, "openpnm.network.Cubic.pop"]], "popitem() (cubic method)": [[976, "openpnm.network.Cubic.popitem"]], "pores() (cubic method)": [[977, "openpnm.network.Cubic.pores"]], "props() (cubic method)": [[978, "openpnm.network.Cubic.props"]], "regenerate_models() (cubic method)": [[979, "openpnm.network.Cubic.regenerate_models"]], "run_model() (cubic method)": [[980, "openpnm.network.Cubic.run_model"]], "set_label() (cubic method)": [[981, "openpnm.network.Cubic.set_label"]], "setdefault() (cubic method)": [[982, "openpnm.network.Cubic.setdefault"]], "throats() (cubic method)": [[983, "openpnm.network.Cubic.throats"]], "to_indices() (cubic method)": [[984, "openpnm.network.Cubic.to_indices"]], "to_mask() (cubic method)": [[985, "openpnm.network.Cubic.to_mask"]], "update() (cubic method)": [[986, "openpnm.network.Cubic.update"]], "values() (cubic method)": [[987, "openpnm.network.Cubic.values"]], "cubictemplate (class in openpnm.network)": [[988, "openpnm.network.CubicTemplate"]], "add_model() (cubictemplate method)": [[989, "openpnm.network.CubicTemplate.add_model"]], "add_model_collection() (cubictemplate method)": [[990, "openpnm.network.CubicTemplate.add_model_collection"]], "clear() (cubictemplate method)": [[991, "openpnm.network.CubicTemplate.clear"]], "copy() (cubictemplate method)": [[992, "openpnm.network.CubicTemplate.copy"]], "create_adjacency_matrix() (cubictemplate method)": [[993, "openpnm.network.CubicTemplate.create_adjacency_matrix"]], "create_incidence_matrix() (cubictemplate method)": [[994, "openpnm.network.CubicTemplate.create_incidence_matrix"]], "filter_by_label() (cubictemplate method)": [[995, "openpnm.network.CubicTemplate.filter_by_label"]], "find_connected_pores() (cubictemplate method)": [[996, "openpnm.network.CubicTemplate.find_connected_pores"]], "find_connecting_throat() (cubictemplate method)": [[997, "openpnm.network.CubicTemplate.find_connecting_throat"]], "find_nearby_pores() (cubictemplate method)": [[998, "openpnm.network.CubicTemplate.find_nearby_pores"]], "find_neighbor_pores() (cubictemplate method)": [[999, "openpnm.network.CubicTemplate.find_neighbor_pores"]], "find_neighbor_throats() (cubictemplate method)": [[1000, "openpnm.network.CubicTemplate.find_neighbor_throats"]], "fromkeys() (cubictemplate method)": [[1001, "openpnm.network.CubicTemplate.fromkeys"]], "get() (cubictemplate method)": [[1002, "openpnm.network.CubicTemplate.get"]], "get_adjacency_matrix() (cubictemplate method)": [[1003, "openpnm.network.CubicTemplate.get_adjacency_matrix"]], "get_conduit_data() (cubictemplate method)": [[1004, "openpnm.network.CubicTemplate.get_conduit_data"]], "get_incidence_matrix() (cubictemplate method)": [[1005, "openpnm.network.CubicTemplate.get_incidence_matrix"]], "interpolate_data() (cubictemplate method)": [[1006, "openpnm.network.CubicTemplate.interpolate_data"]], "items() (cubictemplate method)": [[1007, "openpnm.network.CubicTemplate.items"]], "keys() (cubictemplate method)": [[1008, "openpnm.network.CubicTemplate.keys"]], "labels() (cubictemplate method)": [[1009, "openpnm.network.CubicTemplate.labels"]], "num_neighbors() (cubictemplate method)": [[1010, "openpnm.network.CubicTemplate.num_neighbors"]], "num_pores() (cubictemplate method)": [[1011, "openpnm.network.CubicTemplate.num_pores"]], "num_throats() (cubictemplate method)": [[1012, "openpnm.network.CubicTemplate.num_throats"]], "pop() (cubictemplate method)": [[1013, "openpnm.network.CubicTemplate.pop"]], "popitem() (cubictemplate method)": [[1014, "openpnm.network.CubicTemplate.popitem"]], "pores() (cubictemplate method)": [[1015, "openpnm.network.CubicTemplate.pores"]], "props() (cubictemplate method)": [[1016, "openpnm.network.CubicTemplate.props"]], "regenerate_models() (cubictemplate method)": [[1017, "openpnm.network.CubicTemplate.regenerate_models"]], "run_model() (cubictemplate method)": [[1018, "openpnm.network.CubicTemplate.run_model"]], "set_label() (cubictemplate method)": [[1019, "openpnm.network.CubicTemplate.set_label"]], "setdefault() (cubictemplate method)": [[1020, "openpnm.network.CubicTemplate.setdefault"]], "throats() (cubictemplate method)": [[1021, "openpnm.network.CubicTemplate.throats"]], "to_indices() (cubictemplate method)": [[1022, "openpnm.network.CubicTemplate.to_indices"]], "to_mask() (cubictemplate method)": [[1023, "openpnm.network.CubicTemplate.to_mask"]], "update() (cubictemplate method)": [[1024, "openpnm.network.CubicTemplate.update"]], "values() (cubictemplate method)": [[1025, "openpnm.network.CubicTemplate.values"]], "delaunay (class in openpnm.network)": [[1026, "openpnm.network.Delaunay"]], "add_model() (delaunay method)": [[1027, "openpnm.network.Delaunay.add_model"]], "add_model_collection() (delaunay method)": [[1028, "openpnm.network.Delaunay.add_model_collection"]], "clear() (delaunay method)": [[1029, "openpnm.network.Delaunay.clear"]], "copy() (delaunay method)": [[1030, "openpnm.network.Delaunay.copy"]], "create_adjacency_matrix() (delaunay method)": [[1031, "openpnm.network.Delaunay.create_adjacency_matrix"]], "create_incidence_matrix() (delaunay method)": [[1032, "openpnm.network.Delaunay.create_incidence_matrix"]], "filter_by_label() (delaunay method)": [[1033, "openpnm.network.Delaunay.filter_by_label"]], "find_connected_pores() (delaunay method)": [[1034, "openpnm.network.Delaunay.find_connected_pores"]], "find_connecting_throat() (delaunay method)": [[1035, "openpnm.network.Delaunay.find_connecting_throat"]], "find_nearby_pores() (delaunay method)": [[1036, "openpnm.network.Delaunay.find_nearby_pores"]], "find_neighbor_pores() (delaunay method)": [[1037, "openpnm.network.Delaunay.find_neighbor_pores"]], "find_neighbor_throats() (delaunay method)": [[1038, "openpnm.network.Delaunay.find_neighbor_throats"]], "fromkeys() (delaunay method)": [[1039, "openpnm.network.Delaunay.fromkeys"]], "get() (delaunay method)": [[1040, "openpnm.network.Delaunay.get"]], "get_adjacency_matrix() (delaunay method)": [[1041, "openpnm.network.Delaunay.get_adjacency_matrix"]], "get_conduit_data() (delaunay method)": [[1042, "openpnm.network.Delaunay.get_conduit_data"]], "get_incidence_matrix() (delaunay method)": [[1043, "openpnm.network.Delaunay.get_incidence_matrix"]], "interpolate_data() (delaunay method)": [[1044, "openpnm.network.Delaunay.interpolate_data"]], "items() (delaunay method)": [[1045, "openpnm.network.Delaunay.items"]], "keys() (delaunay method)": [[1046, "openpnm.network.Delaunay.keys"]], "labels() (delaunay method)": [[1047, "openpnm.network.Delaunay.labels"]], "num_neighbors() (delaunay method)": [[1048, "openpnm.network.Delaunay.num_neighbors"]], "num_pores() (delaunay method)": [[1049, "openpnm.network.Delaunay.num_pores"]], "num_throats() (delaunay method)": [[1050, "openpnm.network.Delaunay.num_throats"]], "pop() (delaunay method)": [[1051, "openpnm.network.Delaunay.pop"]], "popitem() (delaunay method)": [[1052, "openpnm.network.Delaunay.popitem"]], "pores() (delaunay method)": [[1053, "openpnm.network.Delaunay.pores"]], "props() (delaunay method)": [[1054, "openpnm.network.Delaunay.props"]], "regenerate_models() (delaunay method)": [[1055, "openpnm.network.Delaunay.regenerate_models"]], "run_model() (delaunay method)": [[1056, "openpnm.network.Delaunay.run_model"]], "set_label() (delaunay method)": [[1057, "openpnm.network.Delaunay.set_label"]], "setdefault() (delaunay method)": [[1058, "openpnm.network.Delaunay.setdefault"]], "throats() (delaunay method)": [[1059, "openpnm.network.Delaunay.throats"]], "to_indices() (delaunay method)": [[1060, "openpnm.network.Delaunay.to_indices"]], "to_mask() (delaunay method)": [[1061, "openpnm.network.Delaunay.to_mask"]], "update() (delaunay method)": [[1062, "openpnm.network.Delaunay.update"]], "values() (delaunay method)": [[1063, "openpnm.network.Delaunay.values"]], "delaunayvoronoidual (class in openpnm.network)": [[1064, "openpnm.network.DelaunayVoronoiDual"]], "add_model() (delaunayvoronoidual method)": [[1065, "openpnm.network.DelaunayVoronoiDual.add_model"]], "add_model_collection() (delaunayvoronoidual method)": [[1066, "openpnm.network.DelaunayVoronoiDual.add_model_collection"]], "clear() (delaunayvoronoidual method)": [[1067, "openpnm.network.DelaunayVoronoiDual.clear"]], "copy() (delaunayvoronoidual method)": [[1068, "openpnm.network.DelaunayVoronoiDual.copy"]], "create_adjacency_matrix() (delaunayvoronoidual method)": [[1069, "openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix"]], "create_incidence_matrix() (delaunayvoronoidual method)": [[1070, "openpnm.network.DelaunayVoronoiDual.create_incidence_matrix"]], "filter_by_label() (delaunayvoronoidual method)": [[1071, "openpnm.network.DelaunayVoronoiDual.filter_by_label"]], "find_connected_pores() (delaunayvoronoidual method)": [[1072, "openpnm.network.DelaunayVoronoiDual.find_connected_pores"]], "find_connecting_throat() (delaunayvoronoidual method)": [[1073, "openpnm.network.DelaunayVoronoiDual.find_connecting_throat"]], "find_nearby_pores() (delaunayvoronoidual method)": [[1074, "openpnm.network.DelaunayVoronoiDual.find_nearby_pores"]], "find_neighbor_pores() (delaunayvoronoidual method)": [[1075, "openpnm.network.DelaunayVoronoiDual.find_neighbor_pores"]], "find_neighbor_throats() (delaunayvoronoidual method)": [[1076, "openpnm.network.DelaunayVoronoiDual.find_neighbor_throats"]], "find_pore_hulls() (delaunayvoronoidual method)": [[1077, "openpnm.network.DelaunayVoronoiDual.find_pore_hulls"]], "find_throat_facets() (delaunayvoronoidual method)": [[1078, "openpnm.network.DelaunayVoronoiDual.find_throat_facets"]], "fromkeys() (delaunayvoronoidual method)": [[1079, "openpnm.network.DelaunayVoronoiDual.fromkeys"]], "get() (delaunayvoronoidual method)": [[1080, "openpnm.network.DelaunayVoronoiDual.get"]], "get_adjacency_matrix() (delaunayvoronoidual method)": [[1081, "openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix"]], "get_conduit_data() (delaunayvoronoidual method)": [[1082, "openpnm.network.DelaunayVoronoiDual.get_conduit_data"]], "get_incidence_matrix() (delaunayvoronoidual method)": [[1083, "openpnm.network.DelaunayVoronoiDual.get_incidence_matrix"]], "interpolate_data() (delaunayvoronoidual method)": [[1084, "openpnm.network.DelaunayVoronoiDual.interpolate_data"]], "items() (delaunayvoronoidual method)": [[1085, "openpnm.network.DelaunayVoronoiDual.items"]], "keys() (delaunayvoronoidual method)": [[1086, "openpnm.network.DelaunayVoronoiDual.keys"]], "labels() (delaunayvoronoidual method)": [[1087, "openpnm.network.DelaunayVoronoiDual.labels"]], "num_neighbors() (delaunayvoronoidual method)": [[1088, "openpnm.network.DelaunayVoronoiDual.num_neighbors"]], "num_pores() (delaunayvoronoidual method)": [[1089, "openpnm.network.DelaunayVoronoiDual.num_pores"]], "num_throats() (delaunayvoronoidual method)": [[1090, "openpnm.network.DelaunayVoronoiDual.num_throats"]], "pop() (delaunayvoronoidual method)": [[1091, "openpnm.network.DelaunayVoronoiDual.pop"]], "popitem() (delaunayvoronoidual method)": [[1092, "openpnm.network.DelaunayVoronoiDual.popitem"]], "pores() (delaunayvoronoidual method)": [[1093, "openpnm.network.DelaunayVoronoiDual.pores"]], "props() (delaunayvoronoidual method)": [[1094, "openpnm.network.DelaunayVoronoiDual.props"]], "regenerate_models() (delaunayvoronoidual method)": [[1095, "openpnm.network.DelaunayVoronoiDual.regenerate_models"]], "run_model() (delaunayvoronoidual method)": [[1096, "openpnm.network.DelaunayVoronoiDual.run_model"]], "set_label() (delaunayvoronoidual method)": [[1097, "openpnm.network.DelaunayVoronoiDual.set_label"]], "setdefault() (delaunayvoronoidual method)": [[1098, "openpnm.network.DelaunayVoronoiDual.setdefault"]], "throats() (delaunayvoronoidual method)": [[1099, "openpnm.network.DelaunayVoronoiDual.throats"]], "to_indices() (delaunayvoronoidual method)": [[1100, "openpnm.network.DelaunayVoronoiDual.to_indices"]], "to_mask() (delaunayvoronoidual method)": [[1101, "openpnm.network.DelaunayVoronoiDual.to_mask"]], "update() (delaunayvoronoidual method)": [[1102, "openpnm.network.DelaunayVoronoiDual.update"]], "values() (delaunayvoronoidual method)": [[1103, "openpnm.network.DelaunayVoronoiDual.values"]], "demo (class in openpnm.network)": [[1104, "openpnm.network.Demo"]], "add_boundary_pores() (demo method)": [[1105, "openpnm.network.Demo.add_boundary_pores"]], "add_model() (demo method)": [[1106, "openpnm.network.Demo.add_model"]], "add_model_collection() (demo method)": [[1107, "openpnm.network.Demo.add_model_collection"]], "clear() (demo method)": [[1108, "openpnm.network.Demo.clear"]], "copy() (demo method)": [[1109, "openpnm.network.Demo.copy"]], "create_adjacency_matrix() (demo method)": [[1110, "openpnm.network.Demo.create_adjacency_matrix"]], "create_incidence_matrix() (demo method)": [[1111, "openpnm.network.Demo.create_incidence_matrix"]], "filter_by_label() (demo method)": [[1112, "openpnm.network.Demo.filter_by_label"]], "find_connected_pores() (demo method)": [[1113, "openpnm.network.Demo.find_connected_pores"]], "find_connecting_throat() (demo method)": [[1114, "openpnm.network.Demo.find_connecting_throat"]], "find_nearby_pores() (demo method)": [[1115, "openpnm.network.Demo.find_nearby_pores"]], "find_neighbor_pores() (demo method)": [[1116, "openpnm.network.Demo.find_neighbor_pores"]], "find_neighbor_throats() (demo method)": [[1117, "openpnm.network.Demo.find_neighbor_throats"]], "fromkeys() (demo method)": [[1118, "openpnm.network.Demo.fromkeys"]], "get() (demo method)": [[1119, "openpnm.network.Demo.get"]], "get_adjacency_matrix() (demo method)": [[1120, "openpnm.network.Demo.get_adjacency_matrix"]], "get_conduit_data() (demo method)": [[1121, "openpnm.network.Demo.get_conduit_data"]], "get_incidence_matrix() (demo method)": [[1122, "openpnm.network.Demo.get_incidence_matrix"]], "interpolate_data() (demo method)": [[1123, "openpnm.network.Demo.interpolate_data"]], "items() (demo method)": [[1124, "openpnm.network.Demo.items"]], "keys() (demo method)": [[1125, "openpnm.network.Demo.keys"]], "labels() (demo method)": [[1126, "openpnm.network.Demo.labels"]], "num_neighbors() (demo method)": [[1127, "openpnm.network.Demo.num_neighbors"]], "num_pores() (demo method)": [[1128, "openpnm.network.Demo.num_pores"]], "num_throats() (demo method)": [[1129, "openpnm.network.Demo.num_throats"]], "pop() (demo method)": [[1130, "openpnm.network.Demo.pop"]], "popitem() (demo method)": [[1131, "openpnm.network.Demo.popitem"]], "pores() (demo method)": [[1132, "openpnm.network.Demo.pores"]], "props() (demo method)": [[1133, "openpnm.network.Demo.props"]], "regenerate_models() (demo method)": [[1134, "openpnm.network.Demo.regenerate_models"]], "run_model() (demo method)": [[1135, "openpnm.network.Demo.run_model"]], "set_label() (demo method)": [[1136, "openpnm.network.Demo.set_label"]], "setdefault() (demo method)": [[1137, "openpnm.network.Demo.setdefault"]], "throats() (demo method)": [[1138, "openpnm.network.Demo.throats"]], "to_indices() (demo method)": [[1139, "openpnm.network.Demo.to_indices"]], "to_mask() (demo method)": [[1140, "openpnm.network.Demo.to_mask"]], "update() (demo method)": [[1141, "openpnm.network.Demo.update"]], "values() (demo method)": [[1142, "openpnm.network.Demo.values"]], "facecenteredcubic (class in openpnm.network)": [[1143, "openpnm.network.FaceCenteredCubic"]], "add_boundary_pores() (facecenteredcubic method)": [[1144, "openpnm.network.FaceCenteredCubic.add_boundary_pores"]], "add_model() (facecenteredcubic method)": [[1145, "openpnm.network.FaceCenteredCubic.add_model"]], "add_model_collection() (facecenteredcubic method)": [[1146, "openpnm.network.FaceCenteredCubic.add_model_collection"]], "clear() (facecenteredcubic method)": [[1147, "openpnm.network.FaceCenteredCubic.clear"]], "copy() (facecenteredcubic method)": [[1148, "openpnm.network.FaceCenteredCubic.copy"]], "create_adjacency_matrix() (facecenteredcubic method)": [[1149, "openpnm.network.FaceCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (facecenteredcubic method)": [[1150, "openpnm.network.FaceCenteredCubic.create_incidence_matrix"]], "filter_by_label() (facecenteredcubic method)": [[1151, "openpnm.network.FaceCenteredCubic.filter_by_label"]], "find_connected_pores() (facecenteredcubic method)": [[1152, "openpnm.network.FaceCenteredCubic.find_connected_pores"]], "find_connecting_throat() (facecenteredcubic method)": [[1153, "openpnm.network.FaceCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (facecenteredcubic method)": [[1154, "openpnm.network.FaceCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (facecenteredcubic method)": [[1155, "openpnm.network.FaceCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (facecenteredcubic method)": [[1156, "openpnm.network.FaceCenteredCubic.find_neighbor_throats"]], "fromkeys() (facecenteredcubic method)": [[1157, "openpnm.network.FaceCenteredCubic.fromkeys"]], "get() (facecenteredcubic method)": [[1158, "openpnm.network.FaceCenteredCubic.get"]], "get_adjacency_matrix() (facecenteredcubic method)": [[1159, "openpnm.network.FaceCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (facecenteredcubic method)": [[1160, "openpnm.network.FaceCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (facecenteredcubic method)": [[1161, "openpnm.network.FaceCenteredCubic.get_incidence_matrix"]], "interpolate_data() (facecenteredcubic method)": [[1162, "openpnm.network.FaceCenteredCubic.interpolate_data"]], "items() (facecenteredcubic method)": [[1163, "openpnm.network.FaceCenteredCubic.items"]], "keys() (facecenteredcubic method)": [[1164, "openpnm.network.FaceCenteredCubic.keys"]], "labels() (facecenteredcubic method)": [[1165, "openpnm.network.FaceCenteredCubic.labels"]], "num_neighbors() (facecenteredcubic method)": [[1166, "openpnm.network.FaceCenteredCubic.num_neighbors"]], "num_pores() (facecenteredcubic method)": [[1167, "openpnm.network.FaceCenteredCubic.num_pores"]], "num_throats() (facecenteredcubic method)": [[1168, "openpnm.network.FaceCenteredCubic.num_throats"]], "pop() (facecenteredcubic method)": [[1169, "openpnm.network.FaceCenteredCubic.pop"]], "popitem() (facecenteredcubic method)": [[1170, "openpnm.network.FaceCenteredCubic.popitem"]], "pores() (facecenteredcubic method)": [[1171, "openpnm.network.FaceCenteredCubic.pores"]], "props() (facecenteredcubic method)": [[1172, "openpnm.network.FaceCenteredCubic.props"]], "regenerate_models() (facecenteredcubic method)": [[1173, "openpnm.network.FaceCenteredCubic.regenerate_models"]], "run_model() (facecenteredcubic method)": [[1174, "openpnm.network.FaceCenteredCubic.run_model"]], "set_label() (facecenteredcubic method)": [[1175, "openpnm.network.FaceCenteredCubic.set_label"]], "setdefault() (facecenteredcubic method)": [[1176, "openpnm.network.FaceCenteredCubic.setdefault"]], "throats() (facecenteredcubic method)": [[1177, "openpnm.network.FaceCenteredCubic.throats"]], "to_indices() (facecenteredcubic method)": [[1178, "openpnm.network.FaceCenteredCubic.to_indices"]], "to_mask() (facecenteredcubic method)": [[1179, "openpnm.network.FaceCenteredCubic.to_mask"]], "update() (facecenteredcubic method)": [[1180, "openpnm.network.FaceCenteredCubic.update"]], "values() (facecenteredcubic method)": [[1181, "openpnm.network.FaceCenteredCubic.values"]], "network (class in openpnm.network)": [[1182, "openpnm.network.Network"]], "add_model() (network method)": [[1183, "openpnm.network.Network.add_model"]], "add_model_collection() (network method)": [[1184, "openpnm.network.Network.add_model_collection"]], "clear() (network method)": [[1185, "openpnm.network.Network.clear"]], "copy() (network method)": [[1186, "openpnm.network.Network.copy"]], "create_adjacency_matrix() (network method)": [[1187, "openpnm.network.Network.create_adjacency_matrix"]], "create_incidence_matrix() (network method)": [[1188, "openpnm.network.Network.create_incidence_matrix"]], "filter_by_label() (network method)": [[1189, "openpnm.network.Network.filter_by_label"]], "find_connected_pores() (network method)": [[1190, "openpnm.network.Network.find_connected_pores"]], "find_connecting_throat() (network method)": [[1191, "openpnm.network.Network.find_connecting_throat"]], "find_nearby_pores() (network method)": [[1192, "openpnm.network.Network.find_nearby_pores"]], "find_neighbor_pores() (network method)": [[1193, "openpnm.network.Network.find_neighbor_pores"]], "find_neighbor_throats() (network method)": [[1194, "openpnm.network.Network.find_neighbor_throats"]], "fromkeys() (network method)": [[1195, "openpnm.network.Network.fromkeys"]], "get() (network method)": [[1196, "openpnm.network.Network.get"]], "get_adjacency_matrix() (network method)": [[1197, "openpnm.network.Network.get_adjacency_matrix"]], "get_conduit_data() (network method)": [[1198, "openpnm.network.Network.get_conduit_data"]], "get_incidence_matrix() (network method)": [[1199, "openpnm.network.Network.get_incidence_matrix"]], "interpolate_data() (network method)": [[1200, "openpnm.network.Network.interpolate_data"]], "items() (network method)": [[1201, "openpnm.network.Network.items"]], "keys() (network method)": [[1202, "openpnm.network.Network.keys"]], "labels() (network method)": [[1203, "openpnm.network.Network.labels"]], "num_neighbors() (network method)": [[1204, "openpnm.network.Network.num_neighbors"]], "num_pores() (network method)": [[1205, "openpnm.network.Network.num_pores"]], "num_throats() (network method)": [[1206, "openpnm.network.Network.num_throats"]], "pop() (network method)": [[1207, "openpnm.network.Network.pop"]], "popitem() (network method)": [[1208, "openpnm.network.Network.popitem"]], "pores() (network method)": [[1209, "openpnm.network.Network.pores"]], "props() (network method)": [[1210, "openpnm.network.Network.props"]], "regenerate_models() (network method)": [[1211, "openpnm.network.Network.regenerate_models"]], "run_model() (network method)": [[1212, "openpnm.network.Network.run_model"]], "set_label() (network method)": [[1213, "openpnm.network.Network.set_label"]], "setdefault() (network method)": [[1214, "openpnm.network.Network.setdefault"]], "throats() (network method)": [[1215, "openpnm.network.Network.throats"]], "to_indices() (network method)": [[1216, "openpnm.network.Network.to_indices"]], "to_mask() (network method)": [[1217, "openpnm.network.Network.to_mask"]], "update() (network method)": [[1218, "openpnm.network.Network.update"]], "values() (network method)": [[1219, "openpnm.network.Network.values"]], "voronoi (class in openpnm.network)": [[1220, "openpnm.network.Voronoi"]], "add_model() (voronoi method)": [[1221, "openpnm.network.Voronoi.add_model"]], "add_model_collection() (voronoi method)": [[1222, "openpnm.network.Voronoi.add_model_collection"]], "clear() (voronoi method)": [[1223, "openpnm.network.Voronoi.clear"]], "copy() (voronoi method)": [[1224, "openpnm.network.Voronoi.copy"]], "create_adjacency_matrix() (voronoi method)": [[1225, "openpnm.network.Voronoi.create_adjacency_matrix"]], "create_incidence_matrix() (voronoi method)": [[1226, "openpnm.network.Voronoi.create_incidence_matrix"]], "filter_by_label() (voronoi method)": [[1227, "openpnm.network.Voronoi.filter_by_label"]], "find_connected_pores() (voronoi method)": [[1228, "openpnm.network.Voronoi.find_connected_pores"]], "find_connecting_throat() (voronoi method)": [[1229, "openpnm.network.Voronoi.find_connecting_throat"]], "find_nearby_pores() (voronoi method)": [[1230, "openpnm.network.Voronoi.find_nearby_pores"]], "find_neighbor_pores() (voronoi method)": [[1231, "openpnm.network.Voronoi.find_neighbor_pores"]], "find_neighbor_throats() (voronoi method)": [[1232, "openpnm.network.Voronoi.find_neighbor_throats"]], "fromkeys() (voronoi method)": [[1233, "openpnm.network.Voronoi.fromkeys"]], "get() (voronoi method)": [[1234, "openpnm.network.Voronoi.get"]], "get_adjacency_matrix() (voronoi method)": [[1235, "openpnm.network.Voronoi.get_adjacency_matrix"]], "get_conduit_data() (voronoi method)": [[1236, "openpnm.network.Voronoi.get_conduit_data"]], "get_incidence_matrix() (voronoi method)": [[1237, "openpnm.network.Voronoi.get_incidence_matrix"]], "interpolate_data() (voronoi method)": [[1238, "openpnm.network.Voronoi.interpolate_data"]], "items() (voronoi method)": [[1239, "openpnm.network.Voronoi.items"]], "keys() (voronoi method)": [[1240, "openpnm.network.Voronoi.keys"]], "labels() (voronoi method)": [[1241, "openpnm.network.Voronoi.labels"]], "num_neighbors() (voronoi method)": [[1242, "openpnm.network.Voronoi.num_neighbors"]], "num_pores() (voronoi method)": [[1243, "openpnm.network.Voronoi.num_pores"]], "num_throats() (voronoi method)": [[1244, "openpnm.network.Voronoi.num_throats"]], "pop() (voronoi method)": [[1245, "openpnm.network.Voronoi.pop"]], "popitem() (voronoi method)": [[1246, "openpnm.network.Voronoi.popitem"]], "pores() (voronoi method)": [[1247, "openpnm.network.Voronoi.pores"]], "props() (voronoi method)": [[1248, "openpnm.network.Voronoi.props"]], "regenerate_models() (voronoi method)": [[1249, "openpnm.network.Voronoi.regenerate_models"]], "run_model() (voronoi method)": [[1250, "openpnm.network.Voronoi.run_model"]], "set_label() (voronoi method)": [[1251, "openpnm.network.Voronoi.set_label"]], "setdefault() (voronoi method)": [[1252, "openpnm.network.Voronoi.setdefault"]], "throats() (voronoi method)": [[1253, "openpnm.network.Voronoi.throats"]], "to_indices() (voronoi method)": [[1254, "openpnm.network.Voronoi.to_indices"]], "to_mask() (voronoi method)": [[1255, "openpnm.network.Voronoi.to_mask"]], "update() (voronoi method)": [[1256, "openpnm.network.Voronoi.update"]], "values() (voronoi method)": [[1257, "openpnm.network.Voronoi.values"]], "openpnm.phase": [[1258, "module-openpnm.phase"]], "air (class in openpnm.phase)": [[1259, "openpnm.phase.Air"]], "add_model() (air method)": [[1260, "openpnm.phase.Air.add_model"]], "add_model_collection() (air method)": [[1261, "openpnm.phase.Air.add_model_collection"]], "clear() (air method)": [[1262, "openpnm.phase.Air.clear"]], "copy() (air method)": [[1263, "openpnm.phase.Air.copy"]], "filter_by_label() (air method)": [[1264, "openpnm.phase.Air.filter_by_label"]], "fromkeys() (air method)": [[1265, "openpnm.phase.Air.fromkeys"]], "get() (air method)": [[1266, "openpnm.phase.Air.get"]], "get_conduit_data() (air method)": [[1267, "openpnm.phase.Air.get_conduit_data"]], "interpolate_data() (air method)": [[1268, "openpnm.phase.Air.interpolate_data"]], "items() (air method)": [[1269, "openpnm.phase.Air.items"]], "keys() (air method)": [[1270, "openpnm.phase.Air.keys"]], "labels() (air method)": [[1271, "openpnm.phase.Air.labels"]], "num_pores() (air method)": [[1272, "openpnm.phase.Air.num_pores"]], "num_throats() (air method)": [[1273, "openpnm.phase.Air.num_throats"]], "pop() (air method)": [[1274, "openpnm.phase.Air.pop"]], "popitem() (air method)": [[1275, "openpnm.phase.Air.popitem"]], "pores() (air method)": [[1276, "openpnm.phase.Air.pores"]], "props() (air method)": [[1277, "openpnm.phase.Air.props"]], "regenerate_models() (air method)": [[1278, "openpnm.phase.Air.regenerate_models"]], "run_model() (air method)": [[1279, "openpnm.phase.Air.run_model"]], "set_label() (air method)": [[1280, "openpnm.phase.Air.set_label"]], "setdefault() (air method)": [[1281, "openpnm.phase.Air.setdefault"]], "throats() (air method)": [[1282, "openpnm.phase.Air.throats"]], "to_indices() (air method)": [[1283, "openpnm.phase.Air.to_indices"]], "to_mask() (air method)": [[1284, "openpnm.phase.Air.to_mask"]], "update() (air method)": [[1285, "openpnm.phase.Air.update"]], "values() (air method)": [[1286, "openpnm.phase.Air.values"]], "binarygas (class in openpnm.phase)": [[1287, "openpnm.phase.BinaryGas"]], "add_comp() (binarygas method)": [[1288, "openpnm.phase.BinaryGas.add_comp"]], "add_model() (binarygas method)": [[1289, "openpnm.phase.BinaryGas.add_model"]], "add_model_collection() (binarygas method)": [[1290, "openpnm.phase.BinaryGas.add_model_collection"]], "check_mixture_health() (binarygas method)": [[1291, "openpnm.phase.BinaryGas.check_mixture_health"]], "clear() (binarygas method)": [[1292, "openpnm.phase.BinaryGas.clear"]], "copy() (binarygas method)": [[1293, "openpnm.phase.BinaryGas.copy"]], "filter_by_label() (binarygas method)": [[1294, "openpnm.phase.BinaryGas.filter_by_label"]], "fromkeys() (binarygas method)": [[1295, "openpnm.phase.BinaryGas.fromkeys"]], "get() (binarygas method)": [[1296, "openpnm.phase.BinaryGas.get"]], "get_comp_vals() (binarygas method)": [[1297, "openpnm.phase.BinaryGas.get_comp_vals"]], "get_conduit_data() (binarygas method)": [[1298, "openpnm.phase.BinaryGas.get_conduit_data"]], "get_mix_vals() (binarygas method)": [[1299, "openpnm.phase.BinaryGas.get_mix_vals"]], "interpolate_data() (binarygas method)": [[1300, "openpnm.phase.BinaryGas.interpolate_data"]], "items() (binarygas method)": [[1301, "openpnm.phase.BinaryGas.items"]], "keys() (binarygas method)": [[1302, "openpnm.phase.BinaryGas.keys"]], "labels() (binarygas method)": [[1303, "openpnm.phase.BinaryGas.labels"]], "num_pores() (binarygas method)": [[1304, "openpnm.phase.BinaryGas.num_pores"]], "num_throats() (binarygas method)": [[1305, "openpnm.phase.BinaryGas.num_throats"]], "pop() (binarygas method)": [[1306, "openpnm.phase.BinaryGas.pop"]], "popitem() (binarygas method)": [[1307, "openpnm.phase.BinaryGas.popitem"]], "pores() (binarygas method)": [[1308, "openpnm.phase.BinaryGas.pores"]], "props() (binarygas method)": [[1309, "openpnm.phase.BinaryGas.props"]], "regenerate_models() (binarygas method)": [[1310, "openpnm.phase.BinaryGas.regenerate_models"]], "remove_comp() (binarygas method)": [[1311, "openpnm.phase.BinaryGas.remove_comp"]], "run_model() (binarygas method)": [[1312, "openpnm.phase.BinaryGas.run_model"]], "set_label() (binarygas method)": [[1313, "openpnm.phase.BinaryGas.set_label"]], "setdefault() (binarygas method)": [[1314, "openpnm.phase.BinaryGas.setdefault"]], "throats() (binarygas method)": [[1315, "openpnm.phase.BinaryGas.throats"]], "to_indices() (binarygas method)": [[1316, "openpnm.phase.BinaryGas.to_indices"]], "to_mask() (binarygas method)": [[1317, "openpnm.phase.BinaryGas.to_mask"]], "update() (binarygas method)": [[1318, "openpnm.phase.BinaryGas.update"]], "values() (binarygas method)": [[1319, "openpnm.phase.BinaryGas.values"]], "y() (binarygas method)": [[1320, "openpnm.phase.BinaryGas.y"]], "gasmixture (class in openpnm.phase)": [[1321, "openpnm.phase.GasMixture"]], "add_comp() (gasmixture method)": [[1322, "openpnm.phase.GasMixture.add_comp"]], "add_model() (gasmixture method)": [[1323, "openpnm.phase.GasMixture.add_model"]], "add_model_collection() (gasmixture method)": [[1324, "openpnm.phase.GasMixture.add_model_collection"]], "check_mixture_health() (gasmixture method)": [[1325, "openpnm.phase.GasMixture.check_mixture_health"]], "clear() (gasmixture method)": [[1326, "openpnm.phase.GasMixture.clear"]], "copy() (gasmixture method)": [[1327, "openpnm.phase.GasMixture.copy"]], "filter_by_label() (gasmixture method)": [[1328, "openpnm.phase.GasMixture.filter_by_label"]], "fromkeys() (gasmixture method)": [[1329, "openpnm.phase.GasMixture.fromkeys"]], "get() (gasmixture method)": [[1330, "openpnm.phase.GasMixture.get"]], "get_comp_vals() (gasmixture method)": [[1331, "openpnm.phase.GasMixture.get_comp_vals"]], "get_conduit_data() (gasmixture method)": [[1332, "openpnm.phase.GasMixture.get_conduit_data"]], "get_mix_vals() (gasmixture method)": [[1333, "openpnm.phase.GasMixture.get_mix_vals"]], "interpolate_data() (gasmixture method)": [[1334, "openpnm.phase.GasMixture.interpolate_data"]], "items() (gasmixture method)": [[1335, "openpnm.phase.GasMixture.items"]], "keys() (gasmixture method)": [[1336, "openpnm.phase.GasMixture.keys"]], "labels() (gasmixture method)": [[1337, "openpnm.phase.GasMixture.labels"]], "num_pores() (gasmixture method)": [[1338, "openpnm.phase.GasMixture.num_pores"]], "num_throats() (gasmixture method)": [[1339, "openpnm.phase.GasMixture.num_throats"]], "pop() (gasmixture method)": [[1340, "openpnm.phase.GasMixture.pop"]], "popitem() (gasmixture method)": [[1341, "openpnm.phase.GasMixture.popitem"]], "pores() (gasmixture method)": [[1342, "openpnm.phase.GasMixture.pores"]], "props() (gasmixture method)": [[1343, "openpnm.phase.GasMixture.props"]], "regenerate_models() (gasmixture method)": [[1344, "openpnm.phase.GasMixture.regenerate_models"]], "remove_comp() (gasmixture method)": [[1345, "openpnm.phase.GasMixture.remove_comp"]], "run_model() (gasmixture method)": [[1346, "openpnm.phase.GasMixture.run_model"]], "set_label() (gasmixture method)": [[1347, "openpnm.phase.GasMixture.set_label"]], "setdefault() (gasmixture method)": [[1348, "openpnm.phase.GasMixture.setdefault"]], "throats() (gasmixture method)": [[1349, "openpnm.phase.GasMixture.throats"]], "to_indices() (gasmixture method)": [[1350, "openpnm.phase.GasMixture.to_indices"]], "to_mask() (gasmixture method)": [[1351, "openpnm.phase.GasMixture.to_mask"]], "update() (gasmixture method)": [[1352, "openpnm.phase.GasMixture.update"]], "values() (gasmixture method)": [[1353, "openpnm.phase.GasMixture.values"]], "y() (gasmixture method)": [[1354, "openpnm.phase.GasMixture.y"]], "liquidmixture (class in openpnm.phase)": [[1355, "openpnm.phase.LiquidMixture"]], "add_comp() (liquidmixture method)": [[1356, "openpnm.phase.LiquidMixture.add_comp"]], "add_model() (liquidmixture method)": [[1357, "openpnm.phase.LiquidMixture.add_model"]], "add_model_collection() (liquidmixture method)": [[1358, "openpnm.phase.LiquidMixture.add_model_collection"]], "check_mixture_health() (liquidmixture method)": [[1359, "openpnm.phase.LiquidMixture.check_mixture_health"]], "clear() (liquidmixture method)": [[1360, "openpnm.phase.LiquidMixture.clear"]], "copy() (liquidmixture method)": [[1361, "openpnm.phase.LiquidMixture.copy"]], "filter_by_label() (liquidmixture method)": [[1362, "openpnm.phase.LiquidMixture.filter_by_label"]], "fromkeys() (liquidmixture method)": [[1363, "openpnm.phase.LiquidMixture.fromkeys"]], "get() (liquidmixture method)": [[1364, "openpnm.phase.LiquidMixture.get"]], "get_comp_vals() (liquidmixture method)": [[1365, "openpnm.phase.LiquidMixture.get_comp_vals"]], "get_conduit_data() (liquidmixture method)": [[1366, "openpnm.phase.LiquidMixture.get_conduit_data"]], "get_mix_vals() (liquidmixture method)": [[1367, "openpnm.phase.LiquidMixture.get_mix_vals"]], "interpolate_data() (liquidmixture method)": [[1368, "openpnm.phase.LiquidMixture.interpolate_data"]], "items() (liquidmixture method)": [[1369, "openpnm.phase.LiquidMixture.items"]], "keys() (liquidmixture method)": [[1370, "openpnm.phase.LiquidMixture.keys"]], "labels() (liquidmixture method)": [[1371, "openpnm.phase.LiquidMixture.labels"]], "num_pores() (liquidmixture method)": [[1372, "openpnm.phase.LiquidMixture.num_pores"]], "num_throats() (liquidmixture method)": [[1373, "openpnm.phase.LiquidMixture.num_throats"]], "pop() (liquidmixture method)": [[1374, "openpnm.phase.LiquidMixture.pop"]], "popitem() (liquidmixture method)": [[1375, "openpnm.phase.LiquidMixture.popitem"]], "pores() (liquidmixture method)": [[1376, "openpnm.phase.LiquidMixture.pores"]], "props() (liquidmixture method)": [[1377, "openpnm.phase.LiquidMixture.props"]], "regenerate_models() (liquidmixture method)": [[1378, "openpnm.phase.LiquidMixture.regenerate_models"]], "remove_comp() (liquidmixture method)": [[1379, "openpnm.phase.LiquidMixture.remove_comp"]], "run_model() (liquidmixture method)": [[1380, "openpnm.phase.LiquidMixture.run_model"]], "set_label() (liquidmixture method)": [[1381, "openpnm.phase.LiquidMixture.set_label"]], "setdefault() (liquidmixture method)": [[1382, "openpnm.phase.LiquidMixture.setdefault"]], "throats() (liquidmixture method)": [[1383, "openpnm.phase.LiquidMixture.throats"]], "to_indices() (liquidmixture method)": [[1384, "openpnm.phase.LiquidMixture.to_indices"]], "to_mask() (liquidmixture method)": [[1385, "openpnm.phase.LiquidMixture.to_mask"]], "update() (liquidmixture method)": [[1386, "openpnm.phase.LiquidMixture.update"]], "values() (liquidmixture method)": [[1387, "openpnm.phase.LiquidMixture.values"]], "x() (liquidmixture method)": [[1388, "openpnm.phase.LiquidMixture.x"]], "mercury (class in openpnm.phase)": [[1389, "openpnm.phase.Mercury"]], "add_model() (mercury method)": [[1390, "openpnm.phase.Mercury.add_model"]], "add_model_collection() (mercury method)": [[1391, "openpnm.phase.Mercury.add_model_collection"]], "clear() (mercury method)": [[1392, "openpnm.phase.Mercury.clear"]], "copy() (mercury method)": [[1393, "openpnm.phase.Mercury.copy"]], "filter_by_label() (mercury method)": [[1394, "openpnm.phase.Mercury.filter_by_label"]], "fromkeys() (mercury method)": [[1395, "openpnm.phase.Mercury.fromkeys"]], "get() (mercury method)": [[1396, "openpnm.phase.Mercury.get"]], "get_conduit_data() (mercury method)": [[1397, "openpnm.phase.Mercury.get_conduit_data"]], "interpolate_data() (mercury method)": [[1398, "openpnm.phase.Mercury.interpolate_data"]], "items() (mercury method)": [[1399, "openpnm.phase.Mercury.items"]], "keys() (mercury method)": [[1400, "openpnm.phase.Mercury.keys"]], "labels() (mercury method)": [[1401, "openpnm.phase.Mercury.labels"]], "num_pores() (mercury method)": [[1402, "openpnm.phase.Mercury.num_pores"]], "num_throats() (mercury method)": [[1403, "openpnm.phase.Mercury.num_throats"]], "pop() (mercury method)": [[1404, "openpnm.phase.Mercury.pop"]], "popitem() (mercury method)": [[1405, "openpnm.phase.Mercury.popitem"]], "pores() (mercury method)": [[1406, "openpnm.phase.Mercury.pores"]], "props() (mercury method)": [[1407, "openpnm.phase.Mercury.props"]], "regenerate_models() (mercury method)": [[1408, "openpnm.phase.Mercury.regenerate_models"]], "run_model() (mercury method)": [[1409, "openpnm.phase.Mercury.run_model"]], "set_label() (mercury method)": [[1410, "openpnm.phase.Mercury.set_label"]], "setdefault() (mercury method)": [[1411, "openpnm.phase.Mercury.setdefault"]], "throats() (mercury method)": [[1412, "openpnm.phase.Mercury.throats"]], "to_indices() (mercury method)": [[1413, "openpnm.phase.Mercury.to_indices"]], "to_mask() (mercury method)": [[1414, "openpnm.phase.Mercury.to_mask"]], "update() (mercury method)": [[1415, "openpnm.phase.Mercury.update"]], "values() (mercury method)": [[1416, "openpnm.phase.Mercury.values"]], "mixture (class in openpnm.phase)": [[1417, "openpnm.phase.Mixture"]], "add_comp() (mixture method)": [[1418, "openpnm.phase.Mixture.add_comp"]], "add_model() (mixture method)": [[1419, "openpnm.phase.Mixture.add_model"]], "add_model_collection() (mixture method)": [[1420, "openpnm.phase.Mixture.add_model_collection"]], "check_mixture_health() (mixture method)": [[1421, "openpnm.phase.Mixture.check_mixture_health"]], "clear() (mixture method)": [[1422, "openpnm.phase.Mixture.clear"]], "copy() (mixture method)": [[1423, "openpnm.phase.Mixture.copy"]], "filter_by_label() (mixture method)": [[1424, "openpnm.phase.Mixture.filter_by_label"]], "fromkeys() (mixture method)": [[1425, "openpnm.phase.Mixture.fromkeys"]], "get() (mixture method)": [[1426, "openpnm.phase.Mixture.get"]], "get_comp_vals() (mixture method)": [[1427, "openpnm.phase.Mixture.get_comp_vals"]], "get_conduit_data() (mixture method)": [[1428, "openpnm.phase.Mixture.get_conduit_data"]], "get_mix_vals() (mixture method)": [[1429, "openpnm.phase.Mixture.get_mix_vals"]], "interpolate_data() (mixture method)": [[1430, "openpnm.phase.Mixture.interpolate_data"]], "items() (mixture method)": [[1431, "openpnm.phase.Mixture.items"]], "keys() (mixture method)": [[1432, "openpnm.phase.Mixture.keys"]], "labels() (mixture method)": [[1433, "openpnm.phase.Mixture.labels"]], "num_pores() (mixture method)": [[1434, "openpnm.phase.Mixture.num_pores"]], "num_throats() (mixture method)": [[1435, "openpnm.phase.Mixture.num_throats"]], "pop() (mixture method)": [[1436, "openpnm.phase.Mixture.pop"]], "popitem() (mixture method)": [[1437, "openpnm.phase.Mixture.popitem"]], "pores() (mixture method)": [[1438, "openpnm.phase.Mixture.pores"]], "props() (mixture method)": [[1439, "openpnm.phase.Mixture.props"]], "regenerate_models() (mixture method)": [[1440, "openpnm.phase.Mixture.regenerate_models"]], "remove_comp() (mixture method)": [[1441, "openpnm.phase.Mixture.remove_comp"]], "run_model() (mixture method)": [[1442, "openpnm.phase.Mixture.run_model"]], "set_label() (mixture method)": [[1443, "openpnm.phase.Mixture.set_label"]], "setdefault() (mixture method)": [[1444, "openpnm.phase.Mixture.setdefault"]], "throats() (mixture method)": [[1445, "openpnm.phase.Mixture.throats"]], "to_indices() (mixture method)": [[1446, "openpnm.phase.Mixture.to_indices"]], "to_mask() (mixture method)": [[1447, "openpnm.phase.Mixture.to_mask"]], "update() (mixture method)": [[1448, "openpnm.phase.Mixture.update"]], "values() (mixture method)": [[1449, "openpnm.phase.Mixture.values"]], "phase (class in openpnm.phase)": [[1450, "openpnm.phase.Phase"]], "add_model() (phase method)": [[1451, "openpnm.phase.Phase.add_model"]], "add_model_collection() (phase method)": [[1452, "openpnm.phase.Phase.add_model_collection"]], "clear() (phase method)": [[1453, "openpnm.phase.Phase.clear"]], "copy() (phase method)": [[1454, "openpnm.phase.Phase.copy"]], "filter_by_label() (phase method)": [[1455, "openpnm.phase.Phase.filter_by_label"]], "fromkeys() (phase method)": [[1456, "openpnm.phase.Phase.fromkeys"]], "get() (phase method)": [[1457, "openpnm.phase.Phase.get"]], "get_conduit_data() (phase method)": [[1458, "openpnm.phase.Phase.get_conduit_data"]], "interpolate_data() (phase method)": [[1459, "openpnm.phase.Phase.interpolate_data"]], "items() (phase method)": [[1460, "openpnm.phase.Phase.items"]], "keys() (phase method)": [[1461, "openpnm.phase.Phase.keys"]], "labels() (phase method)": [[1462, "openpnm.phase.Phase.labels"]], "num_pores() (phase method)": [[1463, "openpnm.phase.Phase.num_pores"]], "num_throats() (phase method)": [[1464, "openpnm.phase.Phase.num_throats"]], "pop() (phase method)": [[1465, "openpnm.phase.Phase.pop"]], "popitem() (phase method)": [[1466, "openpnm.phase.Phase.popitem"]], "pores() (phase method)": [[1467, "openpnm.phase.Phase.pores"]], "props() (phase method)": [[1468, "openpnm.phase.Phase.props"]], "regenerate_models() (phase method)": [[1469, "openpnm.phase.Phase.regenerate_models"]], "run_model() (phase method)": [[1470, "openpnm.phase.Phase.run_model"]], "set_label() (phase method)": [[1471, "openpnm.phase.Phase.set_label"]], "setdefault() (phase method)": [[1472, "openpnm.phase.Phase.setdefault"]], "throats() (phase method)": [[1473, "openpnm.phase.Phase.throats"]], "to_indices() (phase method)": [[1474, "openpnm.phase.Phase.to_indices"]], "to_mask() (phase method)": [[1475, "openpnm.phase.Phase.to_mask"]], "update() (phase method)": [[1476, "openpnm.phase.Phase.update"]], "values() (phase method)": [[1477, "openpnm.phase.Phase.values"]], "species (class in openpnm.phase)": [[1478, "openpnm.phase.Species"]], "add_model() (species method)": [[1479, "openpnm.phase.Species.add_model"]], "add_model_collection() (species method)": [[1480, "openpnm.phase.Species.add_model_collection"]], "clear() (species method)": [[1481, "openpnm.phase.Species.clear"]], "copy() (species method)": [[1482, "openpnm.phase.Species.copy"]], "filter_by_label() (species method)": [[1483, "openpnm.phase.Species.filter_by_label"]], "fromkeys() (species method)": [[1484, "openpnm.phase.Species.fromkeys"]], "get() (species method)": [[1485, "openpnm.phase.Species.get"]], "get_conduit_data() (species method)": [[1486, "openpnm.phase.Species.get_conduit_data"]], "interpolate_data() (species method)": [[1487, "openpnm.phase.Species.interpolate_data"]], "items() (species method)": [[1488, "openpnm.phase.Species.items"]], "keys() (species method)": [[1489, "openpnm.phase.Species.keys"]], "labels() (species method)": [[1490, "openpnm.phase.Species.labels"]], "num_pores() (species method)": [[1491, "openpnm.phase.Species.num_pores"]], "num_throats() (species method)": [[1492, "openpnm.phase.Species.num_throats"]], "pop() (species method)": [[1493, "openpnm.phase.Species.pop"]], "popitem() (species method)": [[1494, "openpnm.phase.Species.popitem"]], "pores() (species method)": [[1495, "openpnm.phase.Species.pores"]], "props() (species method)": [[1496, "openpnm.phase.Species.props"]], "regenerate_models() (species method)": [[1497, "openpnm.phase.Species.regenerate_models"]], "run_model() (species method)": [[1498, "openpnm.phase.Species.run_model"]], "set_label() (species method)": [[1499, "openpnm.phase.Species.set_label"]], "setdefault() (species method)": [[1500, "openpnm.phase.Species.setdefault"]], "throats() (species method)": [[1501, "openpnm.phase.Species.throats"]], "to_indices() (species method)": [[1502, "openpnm.phase.Species.to_indices"]], "to_mask() (species method)": [[1503, "openpnm.phase.Species.to_mask"]], "update() (species method)": [[1504, "openpnm.phase.Species.update"]], "values() (species method)": [[1505, "openpnm.phase.Species.values"]], "standardgas (class in openpnm.phase)": [[1506, "openpnm.phase.StandardGas"]], "add_model() (standardgas method)": [[1507, "openpnm.phase.StandardGas.add_model"]], "add_model_collection() (standardgas method)": [[1508, "openpnm.phase.StandardGas.add_model_collection"]], "clear() (standardgas method)": [[1509, "openpnm.phase.StandardGas.clear"]], "copy() (standardgas method)": [[1510, "openpnm.phase.StandardGas.copy"]], "filter_by_label() (standardgas method)": [[1511, "openpnm.phase.StandardGas.filter_by_label"]], "fromkeys() (standardgas method)": [[1512, "openpnm.phase.StandardGas.fromkeys"]], "get() (standardgas method)": [[1513, "openpnm.phase.StandardGas.get"]], "get_conduit_data() (standardgas method)": [[1514, "openpnm.phase.StandardGas.get_conduit_data"]], "interpolate_data() (standardgas method)": [[1515, "openpnm.phase.StandardGas.interpolate_data"]], "items() (standardgas method)": [[1516, "openpnm.phase.StandardGas.items"]], "keys() (standardgas method)": [[1517, "openpnm.phase.StandardGas.keys"]], "labels() (standardgas method)": [[1518, "openpnm.phase.StandardGas.labels"]], "num_pores() (standardgas method)": [[1519, "openpnm.phase.StandardGas.num_pores"]], "num_throats() (standardgas method)": [[1520, "openpnm.phase.StandardGas.num_throats"]], "pop() (standardgas method)": [[1521, "openpnm.phase.StandardGas.pop"]], "popitem() (standardgas method)": [[1522, "openpnm.phase.StandardGas.popitem"]], "pores() (standardgas method)": [[1523, "openpnm.phase.StandardGas.pores"]], "props() (standardgas method)": [[1524, "openpnm.phase.StandardGas.props"]], "regenerate_models() (standardgas method)": [[1525, "openpnm.phase.StandardGas.regenerate_models"]], "run_model() (standardgas method)": [[1526, "openpnm.phase.StandardGas.run_model"]], "set_label() (standardgas method)": [[1527, "openpnm.phase.StandardGas.set_label"]], "setdefault() (standardgas method)": [[1528, "openpnm.phase.StandardGas.setdefault"]], "throats() (standardgas method)": [[1529, "openpnm.phase.StandardGas.throats"]], "to_indices() (standardgas method)": [[1530, "openpnm.phase.StandardGas.to_indices"]], "to_mask() (standardgas method)": [[1531, "openpnm.phase.StandardGas.to_mask"]], "update() (standardgas method)": [[1532, "openpnm.phase.StandardGas.update"]], "values() (standardgas method)": [[1533, "openpnm.phase.StandardGas.values"]], "standardgasmixture (class in openpnm.phase)": [[1534, "openpnm.phase.StandardGasMixture"]], "add_comp() (standardgasmixture method)": [[1535, "openpnm.phase.StandardGasMixture.add_comp"]], "add_model() (standardgasmixture method)": [[1536, "openpnm.phase.StandardGasMixture.add_model"]], "add_model_collection() (standardgasmixture method)": [[1537, "openpnm.phase.StandardGasMixture.add_model_collection"]], "check_mixture_health() (standardgasmixture method)": [[1538, "openpnm.phase.StandardGasMixture.check_mixture_health"]], "clear() (standardgasmixture method)": [[1539, "openpnm.phase.StandardGasMixture.clear"]], "copy() (standardgasmixture method)": [[1540, "openpnm.phase.StandardGasMixture.copy"]], "filter_by_label() (standardgasmixture method)": [[1541, "openpnm.phase.StandardGasMixture.filter_by_label"]], "fromkeys() (standardgasmixture method)": [[1542, "openpnm.phase.StandardGasMixture.fromkeys"]], "get() (standardgasmixture method)": [[1543, "openpnm.phase.StandardGasMixture.get"]], "get_comp_vals() (standardgasmixture method)": [[1544, "openpnm.phase.StandardGasMixture.get_comp_vals"]], "get_conduit_data() (standardgasmixture method)": [[1545, "openpnm.phase.StandardGasMixture.get_conduit_data"]], "get_mix_vals() (standardgasmixture method)": [[1546, "openpnm.phase.StandardGasMixture.get_mix_vals"]], "interpolate_data() (standardgasmixture method)": [[1547, "openpnm.phase.StandardGasMixture.interpolate_data"]], "items() (standardgasmixture method)": [[1548, "openpnm.phase.StandardGasMixture.items"]], "keys() (standardgasmixture method)": [[1549, "openpnm.phase.StandardGasMixture.keys"]], "labels() (standardgasmixture method)": [[1550, "openpnm.phase.StandardGasMixture.labels"]], "num_pores() (standardgasmixture method)": [[1551, "openpnm.phase.StandardGasMixture.num_pores"]], "num_throats() (standardgasmixture method)": [[1552, "openpnm.phase.StandardGasMixture.num_throats"]], "pop() (standardgasmixture method)": [[1553, "openpnm.phase.StandardGasMixture.pop"]], "popitem() (standardgasmixture method)": [[1554, "openpnm.phase.StandardGasMixture.popitem"]], "pores() (standardgasmixture method)": [[1555, "openpnm.phase.StandardGasMixture.pores"]], "props() (standardgasmixture method)": [[1556, "openpnm.phase.StandardGasMixture.props"]], "regenerate_models() (standardgasmixture method)": [[1557, "openpnm.phase.StandardGasMixture.regenerate_models"]], "remove_comp() (standardgasmixture method)": [[1558, "openpnm.phase.StandardGasMixture.remove_comp"]], "run_model() (standardgasmixture method)": [[1559, "openpnm.phase.StandardGasMixture.run_model"]], "set_label() (standardgasmixture method)": [[1560, "openpnm.phase.StandardGasMixture.set_label"]], "setdefault() (standardgasmixture method)": [[1561, "openpnm.phase.StandardGasMixture.setdefault"]], "throats() (standardgasmixture method)": [[1562, "openpnm.phase.StandardGasMixture.throats"]], "to_indices() (standardgasmixture method)": [[1563, "openpnm.phase.StandardGasMixture.to_indices"]], "to_mask() (standardgasmixture method)": [[1564, "openpnm.phase.StandardGasMixture.to_mask"]], "update() (standardgasmixture method)": [[1565, "openpnm.phase.StandardGasMixture.update"]], "values() (standardgasmixture method)": [[1566, "openpnm.phase.StandardGasMixture.values"]], "y() (standardgasmixture method)": [[1567, "openpnm.phase.StandardGasMixture.y"]], "standardliquid (class in openpnm.phase)": [[1568, "openpnm.phase.StandardLiquid"]], "add_model() (standardliquid method)": [[1569, "openpnm.phase.StandardLiquid.add_model"]], "add_model_collection() (standardliquid method)": [[1570, "openpnm.phase.StandardLiquid.add_model_collection"]], "clear() (standardliquid method)": [[1571, "openpnm.phase.StandardLiquid.clear"]], "copy() (standardliquid method)": [[1572, "openpnm.phase.StandardLiquid.copy"]], "filter_by_label() (standardliquid method)": [[1573, "openpnm.phase.StandardLiquid.filter_by_label"]], "fromkeys() (standardliquid method)": [[1574, "openpnm.phase.StandardLiquid.fromkeys"]], "get() (standardliquid method)": [[1575, "openpnm.phase.StandardLiquid.get"]], "get_conduit_data() (standardliquid method)": [[1576, "openpnm.phase.StandardLiquid.get_conduit_data"]], "interpolate_data() (standardliquid method)": [[1577, "openpnm.phase.StandardLiquid.interpolate_data"]], "items() (standardliquid method)": [[1578, "openpnm.phase.StandardLiquid.items"]], "keys() (standardliquid method)": [[1579, "openpnm.phase.StandardLiquid.keys"]], "labels() (standardliquid method)": [[1580, "openpnm.phase.StandardLiquid.labels"]], "num_pores() (standardliquid method)": [[1581, "openpnm.phase.StandardLiquid.num_pores"]], "num_throats() (standardliquid method)": [[1582, "openpnm.phase.StandardLiquid.num_throats"]], "pop() (standardliquid method)": [[1583, "openpnm.phase.StandardLiquid.pop"]], "popitem() (standardliquid method)": [[1584, "openpnm.phase.StandardLiquid.popitem"]], "pores() (standardliquid method)": [[1585, "openpnm.phase.StandardLiquid.pores"]], "props() (standardliquid method)": [[1586, "openpnm.phase.StandardLiquid.props"]], "regenerate_models() (standardliquid method)": [[1587, "openpnm.phase.StandardLiquid.regenerate_models"]], "run_model() (standardliquid method)": [[1588, "openpnm.phase.StandardLiquid.run_model"]], "set_label() (standardliquid method)": [[1589, "openpnm.phase.StandardLiquid.set_label"]], "setdefault() (standardliquid method)": [[1590, "openpnm.phase.StandardLiquid.setdefault"]], "throats() (standardliquid method)": [[1591, "openpnm.phase.StandardLiquid.throats"]], "to_indices() (standardliquid method)": [[1592, "openpnm.phase.StandardLiquid.to_indices"]], "to_mask() (standardliquid method)": [[1593, "openpnm.phase.StandardLiquid.to_mask"]], "update() (standardliquid method)": [[1594, "openpnm.phase.StandardLiquid.update"]], "values() (standardliquid method)": [[1595, "openpnm.phase.StandardLiquid.values"]], "standardliquidmixture (class in openpnm.phase)": [[1596, "openpnm.phase.StandardLiquidMixture"]], "add_comp() (standardliquidmixture method)": [[1597, "openpnm.phase.StandardLiquidMixture.add_comp"]], "add_model() (standardliquidmixture method)": [[1598, "openpnm.phase.StandardLiquidMixture.add_model"]], "add_model_collection() (standardliquidmixture method)": [[1599, "openpnm.phase.StandardLiquidMixture.add_model_collection"]], "check_mixture_health() (standardliquidmixture method)": [[1600, "openpnm.phase.StandardLiquidMixture.check_mixture_health"]], "clear() (standardliquidmixture method)": [[1601, "openpnm.phase.StandardLiquidMixture.clear"]], "copy() (standardliquidmixture method)": [[1602, "openpnm.phase.StandardLiquidMixture.copy"]], "filter_by_label() (standardliquidmixture method)": [[1603, "openpnm.phase.StandardLiquidMixture.filter_by_label"]], "fromkeys() (standardliquidmixture method)": [[1604, "openpnm.phase.StandardLiquidMixture.fromkeys"]], "get() (standardliquidmixture method)": [[1605, "openpnm.phase.StandardLiquidMixture.get"]], "get_comp_vals() (standardliquidmixture method)": [[1606, "openpnm.phase.StandardLiquidMixture.get_comp_vals"]], "get_conduit_data() (standardliquidmixture method)": [[1607, "openpnm.phase.StandardLiquidMixture.get_conduit_data"]], "get_mix_vals() (standardliquidmixture method)": [[1608, "openpnm.phase.StandardLiquidMixture.get_mix_vals"]], "interpolate_data() (standardliquidmixture method)": [[1609, "openpnm.phase.StandardLiquidMixture.interpolate_data"]], "items() (standardliquidmixture method)": [[1610, "openpnm.phase.StandardLiquidMixture.items"]], "keys() (standardliquidmixture method)": [[1611, "openpnm.phase.StandardLiquidMixture.keys"]], "labels() (standardliquidmixture method)": [[1612, "openpnm.phase.StandardLiquidMixture.labels"]], "num_pores() (standardliquidmixture method)": [[1613, "openpnm.phase.StandardLiquidMixture.num_pores"]], "num_throats() (standardliquidmixture method)": [[1614, "openpnm.phase.StandardLiquidMixture.num_throats"]], "pop() (standardliquidmixture method)": [[1615, "openpnm.phase.StandardLiquidMixture.pop"]], "popitem() (standardliquidmixture method)": [[1616, "openpnm.phase.StandardLiquidMixture.popitem"]], "pores() (standardliquidmixture method)": [[1617, "openpnm.phase.StandardLiquidMixture.pores"]], "props() (standardliquidmixture method)": [[1618, "openpnm.phase.StandardLiquidMixture.props"]], "regenerate_models() (standardliquidmixture method)": [[1619, "openpnm.phase.StandardLiquidMixture.regenerate_models"]], "remove_comp() (standardliquidmixture method)": [[1620, "openpnm.phase.StandardLiquidMixture.remove_comp"]], "run_model() (standardliquidmixture method)": [[1621, "openpnm.phase.StandardLiquidMixture.run_model"]], "set_label() (standardliquidmixture method)": [[1622, "openpnm.phase.StandardLiquidMixture.set_label"]], "setdefault() (standardliquidmixture method)": [[1623, "openpnm.phase.StandardLiquidMixture.setdefault"]], "throats() (standardliquidmixture method)": [[1624, "openpnm.phase.StandardLiquidMixture.throats"]], "to_indices() (standardliquidmixture method)": [[1625, "openpnm.phase.StandardLiquidMixture.to_indices"]], "to_mask() (standardliquidmixture method)": [[1626, "openpnm.phase.StandardLiquidMixture.to_mask"]], "update() (standardliquidmixture method)": [[1627, "openpnm.phase.StandardLiquidMixture.update"]], "values() (standardliquidmixture method)": [[1628, "openpnm.phase.StandardLiquidMixture.values"]], "x() (standardliquidmixture method)": [[1629, "openpnm.phase.StandardLiquidMixture.x"]], "water (class in openpnm.phase)": [[1630, "openpnm.phase.Water"]], "add_model() (water method)": [[1631, "openpnm.phase.Water.add_model"]], "add_model_collection() (water method)": [[1632, "openpnm.phase.Water.add_model_collection"]], "clear() (water method)": [[1633, "openpnm.phase.Water.clear"]], "copy() (water method)": [[1634, "openpnm.phase.Water.copy"]], "filter_by_label() (water method)": [[1635, "openpnm.phase.Water.filter_by_label"]], "fromkeys() (water method)": [[1636, "openpnm.phase.Water.fromkeys"]], "get() (water method)": [[1637, "openpnm.phase.Water.get"]], "get_conduit_data() (water method)": [[1638, "openpnm.phase.Water.get_conduit_data"]], "interpolate_data() (water method)": [[1639, "openpnm.phase.Water.interpolate_data"]], "items() (water method)": [[1640, "openpnm.phase.Water.items"]], "keys() (water method)": [[1641, "openpnm.phase.Water.keys"]], "labels() (water method)": [[1642, "openpnm.phase.Water.labels"]], "num_pores() (water method)": [[1643, "openpnm.phase.Water.num_pores"]], "num_throats() (water method)": [[1644, "openpnm.phase.Water.num_throats"]], "pop() (water method)": [[1645, "openpnm.phase.Water.pop"]], "popitem() (water method)": [[1646, "openpnm.phase.Water.popitem"]], "pores() (water method)": [[1647, "openpnm.phase.Water.pores"]], "props() (water method)": [[1648, "openpnm.phase.Water.props"]], "regenerate_models() (water method)": [[1649, "openpnm.phase.Water.regenerate_models"]], "run_model() (water method)": [[1650, "openpnm.phase.Water.run_model"]], "set_label() (water method)": [[1651, "openpnm.phase.Water.set_label"]], "setdefault() (water method)": [[1652, "openpnm.phase.Water.setdefault"]], "throats() (water method)": [[1653, "openpnm.phase.Water.throats"]], "to_indices() (water method)": [[1654, "openpnm.phase.Water.to_indices"]], "to_mask() (water method)": [[1655, "openpnm.phase.Water.to_mask"]], "update() (water method)": [[1656, "openpnm.phase.Water.update"]], "values() (water method)": [[1657, "openpnm.phase.Water.values"]], "openpnm.solvers": [[1658, "module-openpnm.solvers"]], "basesolver (class in openpnm.solvers)": [[1659, "openpnm.solvers.BaseSolver"]], "solve() (basesolver method)": [[1660, "openpnm.solvers.BaseSolver.solve"]], "directsolver (class in openpnm.solvers)": [[1661, "openpnm.solvers.DirectSolver"]], "solve() (directsolver method)": [[1662, "openpnm.solvers.DirectSolver.solve"]], "iterativesolver (class in openpnm.solvers)": [[1663, "openpnm.solvers.IterativeSolver"]], "solve() (iterativesolver method)": [[1664, "openpnm.solvers.IterativeSolver.solve"]], "petsclinearsolver (class in openpnm.solvers)": [[1665, "openpnm.solvers.PETScLinearSolver"]], "solve() (petsclinearsolver method)": [[1666, "openpnm.solvers.PETScLinearSolver.solve"]], "pardisospsolve (class in openpnm.solvers)": [[1667, "openpnm.solvers.PardisoSpsolve"]], "solve() (pardisospsolve method)": [[1668, "openpnm.solvers.PardisoSpsolve.solve"]], "pyamgrugestubensolver (class in openpnm.solvers)": [[1669, "openpnm.solvers.PyamgRugeStubenSolver"]], "solve() (pyamgrugestubensolver method)": [[1670, "openpnm.solvers.PyamgRugeStubenSolver.solve"]], "scipycg (class in openpnm.solvers)": [[1671, "openpnm.solvers.ScipyCG"]], "solve() (scipycg method)": [[1672, "openpnm.solvers.ScipyCG.solve"]], "scipyspsolve (class in openpnm.solvers)": [[1673, "openpnm.solvers.ScipySpsolve"]], "solve() (scipyspsolve method)": [[1674, "openpnm.solvers.ScipySpsolve.solve"]], "openpnm.topotools": [[1675, "module-openpnm.topotools"]], "add_boundary_pores() (in module openpnm.topotools)": [[1676, "openpnm.topotools.add_boundary_pores"]], "add_reservoir_pore() (in module openpnm.topotools)": [[1677, "openpnm.topotools.add_reservoir_pore"]], "bond_percolation() (in module openpnm.topotools)": [[1678, "openpnm.topotools.bond_percolation"]], "clone_pores() (in module openpnm.topotools)": [[1679, "openpnm.topotools.clone_pores"]], "connect_pores() (in module openpnm.topotools)": [[1680, "openpnm.topotools.connect_pores"]], "conns_to_am() (in module openpnm.topotools)": [[1681, "openpnm.topotools.conns_to_am"]], "dimensionality() (in module openpnm.topotools)": [[1682, "openpnm.topotools.dimensionality"]], "drop_sites() (in module openpnm.topotools)": [[1683, "openpnm.topotools.drop_sites"]], "extend() (in module openpnm.topotools)": [[1684, "openpnm.topotools.extend"]], "filter_pores_by_z() (in module openpnm.topotools)": [[1685, "openpnm.topotools.filter_pores_by_z"]], "find_clusters() (in module openpnm.topotools)": [[1686, "openpnm.topotools.find_clusters"]], "find_connected_sites() (in module openpnm.topotools)": [[1687, "openpnm.topotools.find_connected_sites"]], "find_connecting_bonds() (in module openpnm.topotools)": [[1688, "openpnm.topotools.find_connecting_bonds"]], "find_interface_throats() (in module openpnm.topotools)": [[1689, "openpnm.topotools.find_interface_throats"]], "find_isolated_clusters() (in module openpnm.topotools)": [[1690, "openpnm.topotools.find_isolated_clusters"]], "find_neighbor_bonds() (in module openpnm.topotools)": [[1691, "openpnm.topotools.find_neighbor_bonds"]], "find_neighbor_sites() (in module openpnm.topotools)": [[1692, "openpnm.topotools.find_neighbor_sites"]], "find_path() (in module openpnm.topotools)": [[1693, "openpnm.topotools.find_path"]], "find_surface_pores() (in module openpnm.topotools)": [[1694, "openpnm.topotools.find_surface_pores"]], "generate_base_points() (in module openpnm.topotools)": [[1695, "openpnm.topotools.generate_base_points"]], "get_domain_area() (in module openpnm.topotools)": [[1696, "openpnm.topotools.get_domain_area"]], "get_domain_length() (in module openpnm.topotools)": [[1697, "openpnm.topotools.get_domain_length"]], "get_shape() (in module openpnm.topotools)": [[1698, "openpnm.topotools.get_shape"]], "get_spacing() (in module openpnm.topotools)": [[1699, "openpnm.topotools.get_spacing"]], "hull_centroid() (in module openpnm.topotools)": [[1700, "openpnm.topotools.hull_centroid"]], "is_fully_connected() (in module openpnm.topotools)": [[1701, "openpnm.topotools.is_fully_connected"]], "iscoplanar() (in module openpnm.topotools)": [[1702, "openpnm.topotools.iscoplanar"]], "isoutside() (in module openpnm.topotools)": [[1703, "openpnm.topotools.isoutside"]], "ispercolating() (in module openpnm.topotools)": [[1704, "openpnm.topotools.ispercolating"]], "issymmetric() (in module openpnm.topotools)": [[1705, "openpnm.topotools.issymmetric"]], "istriangular() (in module openpnm.topotools)": [[1706, "openpnm.topotools.istriangular"]], "istril() (in module openpnm.topotools)": [[1707, "openpnm.topotools.istril"]], "istriu() (in module openpnm.topotools)": [[1708, "openpnm.topotools.istriu"]], "label_faces() (in module openpnm.topotools)": [[1709, "openpnm.topotools.label_faces"]], "merge_networks() (in module openpnm.topotools)": [[1710, "openpnm.topotools.merge_networks"]], "merge_pores() (in module openpnm.topotools)": [[1711, "openpnm.topotools.merge_pores"]], "reduce_coordination() (in module openpnm.topotools)": [[1712, "openpnm.topotools.reduce_coordination"]], "reflect_base_points() (in module openpnm.topotools)": [[1713, "openpnm.topotools.reflect_base_points"]], "rotate_coords() (in module openpnm.topotools)": [[1714, "openpnm.topotools.rotate_coords"]], "shear_coords() (in module openpnm.topotools)": [[1715, "openpnm.topotools.shear_coords"]], "site_percolation() (in module openpnm.topotools)": [[1716, "openpnm.topotools.site_percolation"]], "stitch() (in module openpnm.topotools)": [[1717, "openpnm.topotools.stitch"]], "template_cylinder_annulus() (in module openpnm.topotools)": [[1718, "openpnm.topotools.template_cylinder_annulus"]], "template_sphere_shell() (in module openpnm.topotools)": [[1719, "openpnm.topotools.template_sphere_shell"]], "tri_to_am() (in module openpnm.topotools)": [[1720, "openpnm.topotools.tri_to_am"]], "trim() (in module openpnm.topotools)": [[1721, "openpnm.topotools.trim"]], "trim_disconnected_clusters() (in module openpnm.topotools)": [[1722, "openpnm.topotools.trim_disconnected_clusters"]], "vor_to_am() (in module openpnm.topotools)": [[1723, "openpnm.topotools.vor_to_am"]], "openpnm.utils": [[1724, "module-openpnm.utils"]], "docorator (class in openpnm.utils)": [[1725, "openpnm.utils.Docorator"]], "__call__() (docorator method)": [[1726, "openpnm.utils.Docorator.__call__"]], "dedent() (docorator method)": [[1727, "openpnm.utils.Docorator.dedent"]], "dedents() (docorator method)": [[1728, "openpnm.utils.Docorator.dedents"]], "delete_kwargs() (docorator method)": [[1729, "openpnm.utils.Docorator.delete_kwargs"]], "delete_kwargs_s() (docorator class method)": [[1730, "openpnm.utils.Docorator.delete_kwargs_s"]], "delete_params() (docorator method)": [[1731, "openpnm.utils.Docorator.delete_params"]], "delete_params_s() (docorator static method)": [[1732, "openpnm.utils.Docorator.delete_params_s"]], "delete_types() (docorator method)": [[1733, "openpnm.utils.Docorator.delete_types"]], "delete_types_s() (docorator static method)": [[1734, "openpnm.utils.Docorator.delete_types_s"]], "get_docstring() (docorator method)": [[1735, "openpnm.utils.Docorator.get_docstring"]], "get_extended_summary() (docorator method)": [[1736, "openpnm.utils.Docorator.get_extended_summary"]], "get_extended_summaryf() (docorator method)": [[1737, "openpnm.utils.Docorator.get_extended_summaryf"]], "get_full_description() (docorator method)": [[1738, "openpnm.utils.Docorator.get_full_description"]], "get_full_descriptionf() (docorator method)": [[1739, "openpnm.utils.Docorator.get_full_descriptionf"]], "get_sections() (docorator method)": [[1740, "openpnm.utils.Docorator.get_sections"]], "get_sectionsf() (docorator method)": [[1741, "openpnm.utils.Docorator.get_sectionsf"]], "get_summary() (docorator method)": [[1742, "openpnm.utils.Docorator.get_summary"]], "get_summaryf() (docorator method)": [[1743, "openpnm.utils.Docorator.get_summaryf"]], "keep_params() (docorator method)": [[1744, "openpnm.utils.Docorator.keep_params"]], "keep_params_s() (docorator static method)": [[1745, "openpnm.utils.Docorator.keep_params_s"]], "keep_types() (docorator method)": [[1746, "openpnm.utils.Docorator.keep_types"]], "keep_types_s() (docorator static method)": [[1747, "openpnm.utils.Docorator.keep_types_s"]], "save_docstring() (docorator method)": [[1748, "openpnm.utils.Docorator.save_docstring"]], "with_indent() (docorator method)": [[1749, "openpnm.utils.Docorator.with_indent"]], "with_indents() (docorator method)": [[1750, "openpnm.utils.Docorator.with_indents"]], "healthdict (class in openpnm.utils)": [[1751, "openpnm.utils.HealthDict"]], "clear() (healthdict method)": [[1752, "openpnm.utils.HealthDict.clear"]], "copy() (healthdict method)": [[1753, "openpnm.utils.HealthDict.copy"]], "fromkeys() (healthdict method)": [[1754, "openpnm.utils.HealthDict.fromkeys"]], "get() (healthdict method)": [[1755, "openpnm.utils.HealthDict.get"]], "items() (healthdict method)": [[1756, "openpnm.utils.HealthDict.items"]], "keys() (healthdict method)": [[1757, "openpnm.utils.HealthDict.keys"]], "pop() (healthdict method)": [[1758, "openpnm.utils.HealthDict.pop"]], "popitem() (healthdict method)": [[1759, "openpnm.utils.HealthDict.popitem"]], "setdefault() (healthdict method)": [[1760, "openpnm.utils.HealthDict.setdefault"]], "update() (healthdict method)": [[1761, "openpnm.utils.HealthDict.update"]], "values() (healthdict method)": [[1762, "openpnm.utils.HealthDict.values"]], "nesteddict (class in openpnm.utils)": [[1763, "openpnm.utils.NestedDict"]], "clear() (nesteddict method)": [[1764, "openpnm.utils.NestedDict.clear"]], "copy() (nesteddict method)": [[1765, "openpnm.utils.NestedDict.copy"]], "fromkeys() (nesteddict method)": [[1766, "openpnm.utils.NestedDict.fromkeys"]], "get() (nesteddict method)": [[1767, "openpnm.utils.NestedDict.get"]], "items() (nesteddict method)": [[1768, "openpnm.utils.NestedDict.items"]], "keys() (nesteddict method)": [[1769, "openpnm.utils.NestedDict.keys"]], "pop() (nesteddict method)": [[1770, "openpnm.utils.NestedDict.pop"]], "popitem() (nesteddict method)": [[1771, "openpnm.utils.NestedDict.popitem"]], "setdefault() (nesteddict method)": [[1772, "openpnm.utils.NestedDict.setdefault"]], "to_dict() (nesteddict method)": [[1773, "openpnm.utils.NestedDict.to_dict"]], "unravel() (nesteddict method)": [[1774, "openpnm.utils.NestedDict.unravel"]], "update() (nesteddict method)": [[1775, "openpnm.utils.NestedDict.update"]], "values() (nesteddict method)": [[1776, "openpnm.utils.NestedDict.values"]], "printabledict (class in openpnm.utils)": [[1777, "openpnm.utils.PrintableDict"]], "clear() (printabledict method)": [[1778, "openpnm.utils.PrintableDict.clear"]], "copy() (printabledict method)": [[1779, "openpnm.utils.PrintableDict.copy"]], "fromkeys() (printabledict method)": [[1780, "openpnm.utils.PrintableDict.fromkeys"]], "get() (printabledict method)": [[1781, "openpnm.utils.PrintableDict.get"]], "items() (printabledict method)": [[1782, "openpnm.utils.PrintableDict.items"]], "keys() (printabledict method)": [[1783, "openpnm.utils.PrintableDict.keys"]], "pop() (printabledict method)": [[1784, "openpnm.utils.PrintableDict.pop"]], "popitem() (printabledict method)": [[1785, "openpnm.utils.PrintableDict.popitem"]], "setdefault() (printabledict method)": [[1786, "openpnm.utils.PrintableDict.setdefault"]], "update() (printabledict method)": [[1787, "openpnm.utils.PrintableDict.update"]], "values() (printabledict method)": [[1788, "openpnm.utils.PrintableDict.values"]], "printablelist (class in openpnm.utils)": [[1789, "openpnm.utils.PrintableList"]], "append() (printablelist method)": [[1790, "openpnm.utils.PrintableList.append"]], "clear() (printablelist method)": [[1791, "openpnm.utils.PrintableList.clear"]], "copy() (printablelist method)": [[1792, "openpnm.utils.PrintableList.copy"]], "count() (printablelist method)": [[1793, "openpnm.utils.PrintableList.count"]], "extend() (printablelist method)": [[1794, "openpnm.utils.PrintableList.extend"]], "index() (printablelist method)": [[1795, "openpnm.utils.PrintableList.index"]], "insert() (printablelist method)": [[1796, "openpnm.utils.PrintableList.insert"]], "pop() (printablelist method)": [[1797, "openpnm.utils.PrintableList.pop"]], "remove() (printablelist method)": [[1798, "openpnm.utils.PrintableList.remove"]], "reverse() (printablelist method)": [[1799, "openpnm.utils.PrintableList.reverse"]], "sort() (printablelist method)": [[1800, "openpnm.utils.PrintableList.sort"]], "project (class in openpnm.utils)": [[1801, "openpnm.utils.Project"]], "append() (project method)": [[1802, "openpnm.utils.Project.append"]], "copy() (project method)": [[1803, "openpnm.utils.Project.copy"]], "settingsattr (class in openpnm.utils)": [[1804, "openpnm.utils.SettingsAttr"]], "simplelist (class in openpnm.utils)": [[1805, "openpnm.utils.SimpleList"]], "append() (simplelist method)": [[1806, "openpnm.utils.SimpleList.append"]], "typedlist (class in openpnm.utils)": [[1807, "openpnm.utils.TypedList"]], "append() (typedlist method)": [[1808, "openpnm.utils.TypedList.append"]], "clear() (typedlist method)": [[1809, "openpnm.utils.TypedList.clear"]], "copy() (typedlist method)": [[1810, "openpnm.utils.TypedList.copy"]], "count() (typedlist method)": [[1811, "openpnm.utils.TypedList.count"]], "extend() (typedlist method)": [[1812, "openpnm.utils.TypedList.extend"]], "index() (typedlist method)": [[1813, "openpnm.utils.TypedList.index"]], "insert() (typedlist method)": [[1814, "openpnm.utils.TypedList.insert"]], "pop() (typedlist method)": [[1815, "openpnm.utils.TypedList.pop"]], "remove() (typedlist method)": [[1816, "openpnm.utils.TypedList.remove"]], "reverse() (typedlist method)": [[1817, "openpnm.utils.TypedList.reverse"]], "sort() (typedlist method)": [[1818, "openpnm.utils.TypedList.sort"]], "typedmixin (class in openpnm.utils)": [[1819, "openpnm.utils.TypedMixin"]], "typedset (class in openpnm.utils)": [[1820, "openpnm.utils.TypedSet"]], "add() (typedset method)": [[1821, "openpnm.utils.TypedSet.add"]], "clear() (typedset method)": [[1822, "openpnm.utils.TypedSet.clear"]], "copy() (typedset method)": [[1823, "openpnm.utils.TypedSet.copy"]], "difference() (typedset method)": [[1824, "openpnm.utils.TypedSet.difference"]], "difference_update() (typedset method)": [[1825, "openpnm.utils.TypedSet.difference_update"]], "discard() (typedset method)": [[1826, "openpnm.utils.TypedSet.discard"]], "intersection() (typedset method)": [[1827, "openpnm.utils.TypedSet.intersection"]], "intersection_update() (typedset method)": [[1828, "openpnm.utils.TypedSet.intersection_update"]], "isdisjoint() (typedset method)": [[1829, "openpnm.utils.TypedSet.isdisjoint"]], "issubset() (typedset method)": [[1830, "openpnm.utils.TypedSet.issubset"]], "issuperset() (typedset method)": [[1831, "openpnm.utils.TypedSet.issuperset"]], "pop() (typedset method)": [[1832, "openpnm.utils.TypedSet.pop"]], "remove() (typedset method)": [[1833, "openpnm.utils.TypedSet.remove"]], "symmetric_difference() (typedset method)": [[1834, "openpnm.utils.TypedSet.symmetric_difference"]], "symmetric_difference_update() (typedset method)": [[1835, "openpnm.utils.TypedSet.symmetric_difference_update"]], "union() (typedset method)": [[1836, "openpnm.utils.TypedSet.union"]], "update() (typedset method)": [[1837, "openpnm.utils.TypedSet.update"]], "workspace (class in openpnm.utils)": [[1838, "openpnm.utils.Workspace"]], "clear() (workspace method)": [[1839, "openpnm.utils.Workspace.clear"]], "close_project() (workspace method)": [[1840, "openpnm.utils.Workspace.close_project"]], "copy() (workspace method)": [[1841, "openpnm.utils.Workspace.copy"]], "copy_project() (workspace method)": [[1842, "openpnm.utils.Workspace.copy_project"]], "fromkeys() (workspace method)": [[1843, "openpnm.utils.Workspace.fromkeys"]], "get() (workspace method)": [[1844, "openpnm.utils.Workspace.get"]], "items() (workspace method)": [[1845, "openpnm.utils.Workspace.items"]], "keys() (workspace method)": [[1846, "openpnm.utils.Workspace.keys"]], "load_project() (workspace method)": [[1847, "openpnm.utils.Workspace.load_project"]], "load_workspace() (workspace method)": [[1848, "openpnm.utils.Workspace.load_workspace"]], "new_project() (workspace method)": [[1849, "openpnm.utils.Workspace.new_project"]], "pop() (workspace method)": [[1850, "openpnm.utils.Workspace.pop"]], "popitem() (workspace method)": [[1851, "openpnm.utils.Workspace.popitem"]], "save_project() (workspace method)": [[1852, "openpnm.utils.Workspace.save_project"]], "save_workspace() (workspace method)": [[1853, "openpnm.utils.Workspace.save_workspace"]], "setdefault() (workspace method)": [[1854, "openpnm.utils.Workspace.setdefault"]], "update() (workspace method)": [[1855, "openpnm.utils.Workspace.update"]], "values() (workspace method)": [[1856, "openpnm.utils.Workspace.values"]], "check_data_health() (in module openpnm.utils)": [[1857, "openpnm.utils.check_data_health"]], "check_network_health() (in module openpnm.utils)": [[1858, "openpnm.utils.check_network_health"]], "dict_to_struct() (in module openpnm.utils)": [[1859, "openpnm.utils.dict_to_struct"]], "flat_list() (in module openpnm.utils)": [[1860, "openpnm.utils.flat_list"]], "get_mixture_model_args() (in module openpnm.utils)": [[1861, "openpnm.utils.get_mixture_model_args"]], "get_printable_labels() (in module openpnm.utils)": [[1862, "openpnm.utils.get_printable_labels"]], "get_printable_props() (in module openpnm.utils)": [[1863, "openpnm.utils.get_printable_props"]], "ignore_warnings() (in module openpnm.utils)": [[1864, "openpnm.utils.ignore_warnings"]], "is_symmetric() (in module openpnm.utils)": [[1865, "openpnm.utils.is_symmetric"]], "is_transient() (in module openpnm.utils)": [[1866, "openpnm.utils.is_transient"]], "is_valid_propname() (in module openpnm.utils)": [[1867, "openpnm.utils.is_valid_propname"]], "methods_to_table() (in module openpnm.utils)": [[1868, "openpnm.utils.methods_to_table"]], "models_to_table() (in module openpnm.utils)": [[1869, "openpnm.utils.models_to_table"]], "sanitize_dict() (in module openpnm.utils)": [[1870, "openpnm.utils.sanitize_dict"]], "struct_to_dict() (in module openpnm.utils)": [[1871, "openpnm.utils.struct_to_dict"]], "openpnm.visualization": [[1872, "module-openpnm.visualization"]], "draw_conduit() (in module openpnm.visualization)": [[1873, "openpnm.visualization.draw_conduit"]], "generate_voxel_image() (in module openpnm.visualization)": [[1874, "openpnm.visualization.generate_voxel_image"]], "plot_connections() (in module openpnm.visualization)": [[1875, "openpnm.visualization.plot_connections"]], "plot_coordinates() (in module openpnm.visualization)": [[1876, "openpnm.visualization.plot_coordinates"]], "plot_networkx() (in module openpnm.visualization)": [[1877, "openpnm.visualization.plot_networkx"]], "plot_notebook() (in module openpnm.visualization)": [[1878, "openpnm.visualization.plot_notebook"]], "plot_tutorial() (in module openpnm.visualization)": [[1879, "openpnm.visualization.plot_tutorial"]], "plot_vispy() (in module openpnm.visualization)": [[1880, "openpnm.visualization.plot_vispy"]], "set_mpl_style() (in module openpnm.visualization)": [[1881, "openpnm.visualization.set_mpl_style"]], "openpnm": [[1882, "module-openpnm"]]}})