Search.setIndex({"docnames": ["_examples/applications", "_examples/index", "_examples/reference", "_examples/tutorials", "examples/applications/absolute_permeability", "examples/applications/adjusting_pore_size_distributions", "examples/applications/dispersion_coefficient", "examples/applications/effective_diffusivity_and_tortuosity", "examples/applications/formation_factor", "examples/applications/mercury_intrusion", "examples/applications/porosity", "examples/applications/relative_diffusivity", "examples/applications/relative_permeability", "examples/contrib/README", "examples/getting_started", "examples/reference/architecture/pore_scale_models", "examples/reference/architecture/settings_attribute_machinery", "examples/reference/architecture/workspace_and_projects", "examples/reference/networks/managing_clustered_networks", "examples/reference/simulations/available_matrix_solvers", "examples/reference/simulations/basic_transport", "examples/reference/simulations/explanation_of_units", "examples/reference/simulations/reactive_transport", "examples/reference/simulations/size_factors_and_transport_conductance", "examples/reference/simulations/transient_transport", "examples/tutorials/01_numerical_python_primer", "examples/tutorials/02_network_generation_and_visualization", "examples/tutorials/03_data_and_topology_storage", "examples/tutorials/04_graph_queries_and_manipulation", "examples/tutorials/05_defining_geometry", "examples/tutorials/06_labels_and_domains", "examples/tutorials/07_phases_and_mixtures", "examples/tutorials/08_simulating_transport", "examples/tutorials/09_simulating_invasion", "examples/tutorials/10_visualization_options", "index", "installation", "modules/generated/openpnm.algorithms", "modules/generated/openpnm.algorithms.AdvectionDiffusion", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values", "modules/generated/openpnm.algorithms.Algorithm", "modules/generated/openpnm.algorithms.Algorithm.clear", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs", "modules/generated/openpnm.algorithms.Algorithm.copy", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label", "modules/generated/openpnm.algorithms.Algorithm.fromkeys", "modules/generated/openpnm.algorithms.Algorithm.get", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data", "modules/generated/openpnm.algorithms.Algorithm.items", "modules/generated/openpnm.algorithms.Algorithm.keys", "modules/generated/openpnm.algorithms.Algorithm.labels", "modules/generated/openpnm.algorithms.Algorithm.num_pores", "modules/generated/openpnm.algorithms.Algorithm.num_throats", "modules/generated/openpnm.algorithms.Algorithm.pop", "modules/generated/openpnm.algorithms.Algorithm.popitem", "modules/generated/openpnm.algorithms.Algorithm.pores", "modules/generated/openpnm.algorithms.Algorithm.props", "modules/generated/openpnm.algorithms.Algorithm.set_BC", "modules/generated/openpnm.algorithms.Algorithm.set_label", "modules/generated/openpnm.algorithms.Algorithm.setdefault", "modules/generated/openpnm.algorithms.Algorithm.throats", "modules/generated/openpnm.algorithms.Algorithm.to_indices", "modules/generated/openpnm.algorithms.Algorithm.to_mask", "modules/generated/openpnm.algorithms.Algorithm.update", "modules/generated/openpnm.algorithms.Algorithm.values", "modules/generated/openpnm.algorithms.Drainage", "modules/generated/openpnm.algorithms.Drainage.apply_trapping", "modules/generated/openpnm.algorithms.Drainage.clear", "modules/generated/openpnm.algorithms.Drainage.clear_BCs", "modules/generated/openpnm.algorithms.Drainage.copy", "modules/generated/openpnm.algorithms.Drainage.filter_by_label", "modules/generated/openpnm.algorithms.Drainage.fromkeys", "modules/generated/openpnm.algorithms.Drainage.get", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data", "modules/generated/openpnm.algorithms.Drainage.interpolate_data", "modules/generated/openpnm.algorithms.Drainage.items", "modules/generated/openpnm.algorithms.Drainage.keys", "modules/generated/openpnm.algorithms.Drainage.labels", "modules/generated/openpnm.algorithms.Drainage.num_pores", "modules/generated/openpnm.algorithms.Drainage.num_throats", "modules/generated/openpnm.algorithms.Drainage.pc_curve", "modules/generated/openpnm.algorithms.Drainage.pop", "modules/generated/openpnm.algorithms.Drainage.popitem", "modules/generated/openpnm.algorithms.Drainage.pores", "modules/generated/openpnm.algorithms.Drainage.props", "modules/generated/openpnm.algorithms.Drainage.reset", "modules/generated/openpnm.algorithms.Drainage.run", "modules/generated/openpnm.algorithms.Drainage.set_BC", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC", "modules/generated/openpnm.algorithms.Drainage.set_label", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC", "modules/generated/openpnm.algorithms.Drainage.setdefault", "modules/generated/openpnm.algorithms.Drainage.throats", "modules/generated/openpnm.algorithms.Drainage.to_indices", "modules/generated/openpnm.algorithms.Drainage.to_mask", "modules/generated/openpnm.algorithms.Drainage.update", "modules/generated/openpnm.algorithms.Drainage.values", "modules/generated/openpnm.algorithms.FickianDiffusion", "modules/generated/openpnm.algorithms.FickianDiffusion.clear", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.copy", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.FickianDiffusion.get", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.FickianDiffusion.items", "modules/generated/openpnm.algorithms.FickianDiffusion.keys", "modules/generated/openpnm.algorithms.FickianDiffusion.labels", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.FickianDiffusion.pop", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem", "modules/generated/openpnm.algorithms.FickianDiffusion.pores", "modules/generated/openpnm.algorithms.FickianDiffusion.props", "modules/generated/openpnm.algorithms.FickianDiffusion.rate", "modules/generated/openpnm.algorithms.FickianDiffusion.run", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.FickianDiffusion.throats", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.FickianDiffusion.update", "modules/generated/openpnm.algorithms.FickianDiffusion.values", "modules/generated/openpnm.algorithms.FourierConduction", "modules/generated/openpnm.algorithms.FourierConduction.clear", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.FourierConduction.copy", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys", "modules/generated/openpnm.algorithms.FourierConduction.get", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data", "modules/generated/openpnm.algorithms.FourierConduction.items", "modules/generated/openpnm.algorithms.FourierConduction.keys", "modules/generated/openpnm.algorithms.FourierConduction.labels", "modules/generated/openpnm.algorithms.FourierConduction.num_pores", "modules/generated/openpnm.algorithms.FourierConduction.num_throats", "modules/generated/openpnm.algorithms.FourierConduction.pop", "modules/generated/openpnm.algorithms.FourierConduction.popitem", "modules/generated/openpnm.algorithms.FourierConduction.pores", "modules/generated/openpnm.algorithms.FourierConduction.props", "modules/generated/openpnm.algorithms.FourierConduction.rate", "modules/generated/openpnm.algorithms.FourierConduction.run", "modules/generated/openpnm.algorithms.FourierConduction.set_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_label", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_source", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC", "modules/generated/openpnm.algorithms.FourierConduction.setdefault", "modules/generated/openpnm.algorithms.FourierConduction.throats", "modules/generated/openpnm.algorithms.FourierConduction.to_indices", "modules/generated/openpnm.algorithms.FourierConduction.to_mask", "modules/generated/openpnm.algorithms.FourierConduction.update", "modules/generated/openpnm.algorithms.FourierConduction.values", "modules/generated/openpnm.algorithms.InvasionPercolation", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping", "modules/generated/openpnm.algorithms.InvasionPercolation.clear", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs", "modules/generated/openpnm.algorithms.InvasionPercolation.copy", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys", "modules/generated/openpnm.algorithms.InvasionPercolation.get", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data", "modules/generated/openpnm.algorithms.InvasionPercolation.items", "modules/generated/openpnm.algorithms.InvasionPercolation.keys", "modules/generated/openpnm.algorithms.InvasionPercolation.labels", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve", "modules/generated/openpnm.algorithms.InvasionPercolation.pop", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem", "modules/generated/openpnm.algorithms.InvasionPercolation.pores", "modules/generated/openpnm.algorithms.InvasionPercolation.props", "modules/generated/openpnm.algorithms.InvasionPercolation.reset", "modules/generated/openpnm.algorithms.InvasionPercolation.run", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault", "modules/generated/openpnm.algorithms.InvasionPercolation.throats", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask", "modules/generated/openpnm.algorithms.InvasionPercolation.update", "modules/generated/openpnm.algorithms.InvasionPercolation.values", "modules/generated/openpnm.algorithms.OhmicConduction", "modules/generated/openpnm.algorithms.OhmicConduction.clear", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.copy", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys", "modules/generated/openpnm.algorithms.OhmicConduction.get", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data", "modules/generated/openpnm.algorithms.OhmicConduction.items", "modules/generated/openpnm.algorithms.OhmicConduction.keys", "modules/generated/openpnm.algorithms.OhmicConduction.labels", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats", "modules/generated/openpnm.algorithms.OhmicConduction.pop", "modules/generated/openpnm.algorithms.OhmicConduction.popitem", "modules/generated/openpnm.algorithms.OhmicConduction.pores", "modules/generated/openpnm.algorithms.OhmicConduction.props", "modules/generated/openpnm.algorithms.OhmicConduction.rate", "modules/generated/openpnm.algorithms.OhmicConduction.run", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_label", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_source", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault", "modules/generated/openpnm.algorithms.OhmicConduction.throats", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask", "modules/generated/openpnm.algorithms.OhmicConduction.update", "modules/generated/openpnm.algorithms.OhmicConduction.values", "modules/generated/openpnm.algorithms.ReactiveTransport", "modules/generated/openpnm.algorithms.ReactiveTransport.clear", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.copy", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.ReactiveTransport.get", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.ReactiveTransport.items", "modules/generated/openpnm.algorithms.ReactiveTransport.keys", "modules/generated/openpnm.algorithms.ReactiveTransport.labels", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.ReactiveTransport.pop", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem", "modules/generated/openpnm.algorithms.ReactiveTransport.pores", "modules/generated/openpnm.algorithms.ReactiveTransport.props", "modules/generated/openpnm.algorithms.ReactiveTransport.rate", "modules/generated/openpnm.algorithms.ReactiveTransport.run", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.ReactiveTransport.throats", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.ReactiveTransport.update", "modules/generated/openpnm.algorithms.ReactiveTransport.values", "modules/generated/openpnm.algorithms.StokesFlow", "modules/generated/openpnm.algorithms.StokesFlow.clear", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs", "modules/generated/openpnm.algorithms.StokesFlow.copy", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys", "modules/generated/openpnm.algorithms.StokesFlow.get", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data", "modules/generated/openpnm.algorithms.StokesFlow.items", "modules/generated/openpnm.algorithms.StokesFlow.keys", "modules/generated/openpnm.algorithms.StokesFlow.labels", "modules/generated/openpnm.algorithms.StokesFlow.num_pores", "modules/generated/openpnm.algorithms.StokesFlow.num_throats", "modules/generated/openpnm.algorithms.StokesFlow.pop", "modules/generated/openpnm.algorithms.StokesFlow.popitem", "modules/generated/openpnm.algorithms.StokesFlow.pores", "modules/generated/openpnm.algorithms.StokesFlow.props", "modules/generated/openpnm.algorithms.StokesFlow.rate", "modules/generated/openpnm.algorithms.StokesFlow.run", "modules/generated/openpnm.algorithms.StokesFlow.set_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_label", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_source", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC", "modules/generated/openpnm.algorithms.StokesFlow.setdefault", "modules/generated/openpnm.algorithms.StokesFlow.throats", "modules/generated/openpnm.algorithms.StokesFlow.to_indices", "modules/generated/openpnm.algorithms.StokesFlow.to_mask", "modules/generated/openpnm.algorithms.StokesFlow.update", "modules/generated/openpnm.algorithms.StokesFlow.values", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values", "modules/generated/openpnm.algorithms.TransientFickianDiffusion", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values", "modules/generated/openpnm.algorithms.TransientFourierConduction", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_BCs", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientFourierConduction.copy", "modules/generated/openpnm.algorithms.TransientFourierConduction.filter_by_label", "modules/generated/openpnm.algorithms.TransientFourierConduction.fromkeys", "modules/generated/openpnm.algorithms.TransientFourierConduction.get", "modules/generated/openpnm.algorithms.TransientFourierConduction.get_conduit_data", "modules/generated/openpnm.algorithms.TransientFourierConduction.interpolate_data", "modules/generated/openpnm.algorithms.TransientFourierConduction.items", "modules/generated/openpnm.algorithms.TransientFourierConduction.keys", "modules/generated/openpnm.algorithms.TransientFourierConduction.labels", "modules/generated/openpnm.algorithms.TransientFourierConduction.num_pores", "modules/generated/openpnm.algorithms.TransientFourierConduction.num_throats", "modules/generated/openpnm.algorithms.TransientFourierConduction.pop", "modules/generated/openpnm.algorithms.TransientFourierConduction.popitem", "modules/generated/openpnm.algorithms.TransientFourierConduction.pores", "modules/generated/openpnm.algorithms.TransientFourierConduction.props", "modules/generated/openpnm.algorithms.TransientFourierConduction.rate", "modules/generated/openpnm.algorithms.TransientFourierConduction.run", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_BC", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_label", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_rate_BC", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_source", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_value_BC", "modules/generated/openpnm.algorithms.TransientFourierConduction.setdefault", "modules/generated/openpnm.algorithms.TransientFourierConduction.throats", "modules/generated/openpnm.algorithms.TransientFourierConduction.to_indices", "modules/generated/openpnm.algorithms.TransientFourierConduction.to_mask", "modules/generated/openpnm.algorithms.TransientFourierConduction.update", "modules/generated/openpnm.algorithms.TransientFourierConduction.values", "modules/generated/openpnm.algorithms.TransientReactiveTransport", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values", "modules/generated/openpnm.algorithms.Transport", "modules/generated/openpnm.algorithms.Transport.clear", "modules/generated/openpnm.algorithms.Transport.clear_BCs", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs", "modules/generated/openpnm.algorithms.Transport.copy", "modules/generated/openpnm.algorithms.Transport.filter_by_label", "modules/generated/openpnm.algorithms.Transport.fromkeys", "modules/generated/openpnm.algorithms.Transport.get", "modules/generated/openpnm.algorithms.Transport.get_conduit_data", "modules/generated/openpnm.algorithms.Transport.interpolate_data", "modules/generated/openpnm.algorithms.Transport.items", "modules/generated/openpnm.algorithms.Transport.keys", "modules/generated/openpnm.algorithms.Transport.labels", "modules/generated/openpnm.algorithms.Transport.num_pores", "modules/generated/openpnm.algorithms.Transport.num_throats", "modules/generated/openpnm.algorithms.Transport.pop", "modules/generated/openpnm.algorithms.Transport.popitem", "modules/generated/openpnm.algorithms.Transport.pores", "modules/generated/openpnm.algorithms.Transport.props", "modules/generated/openpnm.algorithms.Transport.rate", "modules/generated/openpnm.algorithms.Transport.run", "modules/generated/openpnm.algorithms.Transport.set_BC", "modules/generated/openpnm.algorithms.Transport.set_label", "modules/generated/openpnm.algorithms.Transport.set_rate_BC", "modules/generated/openpnm.algorithms.Transport.set_value_BC", "modules/generated/openpnm.algorithms.Transport.setdefault", "modules/generated/openpnm.algorithms.Transport.throats", "modules/generated/openpnm.algorithms.Transport.to_indices", "modules/generated/openpnm.algorithms.Transport.to_mask", "modules/generated/openpnm.algorithms.Transport.update", "modules/generated/openpnm.algorithms.Transport.values", "modules/generated/openpnm.contrib", "modules/generated/openpnm.contrib.MultiPhase", "modules/generated/openpnm.contrib.MultiPhase.add_model", "modules/generated/openpnm.contrib.MultiPhase.add_model_collection", "modules/generated/openpnm.contrib.MultiPhase.add_phases", "modules/generated/openpnm.contrib.MultiPhase.clear", "modules/generated/openpnm.contrib.MultiPhase.copy", "modules/generated/openpnm.contrib.MultiPhase.filter_by_label", "modules/generated/openpnm.contrib.MultiPhase.fromkeys", "modules/generated/openpnm.contrib.MultiPhase.get", "modules/generated/openpnm.contrib.MultiPhase.get_conduit_data", "modules/generated/openpnm.contrib.MultiPhase.interpolate_data", "modules/generated/openpnm.contrib.MultiPhase.items", "modules/generated/openpnm.contrib.MultiPhase.keys", "modules/generated/openpnm.contrib.MultiPhase.labels", "modules/generated/openpnm.contrib.MultiPhase.num_pores", "modules/generated/openpnm.contrib.MultiPhase.num_throats", "modules/generated/openpnm.contrib.MultiPhase.pop", "modules/generated/openpnm.contrib.MultiPhase.popitem", "modules/generated/openpnm.contrib.MultiPhase.pores", "modules/generated/openpnm.contrib.MultiPhase.props", "modules/generated/openpnm.contrib.MultiPhase.regenerate_models", "modules/generated/openpnm.contrib.MultiPhase.run_model", "modules/generated/openpnm.contrib.MultiPhase.set_binary_partition_coef", "modules/generated/openpnm.contrib.MultiPhase.set_label", "modules/generated/openpnm.contrib.MultiPhase.set_occupancy", "modules/generated/openpnm.contrib.MultiPhase.setdefault", "modules/generated/openpnm.contrib.MultiPhase.throats", "modules/generated/openpnm.contrib.MultiPhase.to_indices", "modules/generated/openpnm.contrib.MultiPhase.to_mask", "modules/generated/openpnm.contrib.MultiPhase.update", "modules/generated/openpnm.contrib.MultiPhase.values", "modules/generated/openpnm.contrib.TransientMultiPhysics", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear_BCs", "modules/generated/openpnm.contrib.TransientMultiPhysics.copy", "modules/generated/openpnm.contrib.TransientMultiPhysics.filter_by_label", "modules/generated/openpnm.contrib.TransientMultiPhysics.fromkeys", "modules/generated/openpnm.contrib.TransientMultiPhysics.get", "modules/generated/openpnm.contrib.TransientMultiPhysics.get_conduit_data", "modules/generated/openpnm.contrib.TransientMultiPhysics.interpolate_data", "modules/generated/openpnm.contrib.TransientMultiPhysics.items", "modules/generated/openpnm.contrib.TransientMultiPhysics.keys", "modules/generated/openpnm.contrib.TransientMultiPhysics.labels", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_pores", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_throats", "modules/generated/openpnm.contrib.TransientMultiPhysics.pop", "modules/generated/openpnm.contrib.TransientMultiPhysics.popitem", "modules/generated/openpnm.contrib.TransientMultiPhysics.pores", "modules/generated/openpnm.contrib.TransientMultiPhysics.props", "modules/generated/openpnm.contrib.TransientMultiPhysics.run", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_BC", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_label", "modules/generated/openpnm.contrib.TransientMultiPhysics.setdefault", "modules/generated/openpnm.contrib.TransientMultiPhysics.throats", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_indices", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_mask", "modules/generated/openpnm.contrib.TransientMultiPhysics.update", "modules/generated/openpnm.contrib.TransientMultiPhysics.values", "modules/generated/openpnm.contrib.multiphase_diffusion", "modules/generated/openpnm.core", "modules/generated/openpnm.core.Base2", "modules/generated/openpnm.core.Base2.clear", "modules/generated/openpnm.core.Base2.copy", "modules/generated/openpnm.core.Base2.fromkeys", "modules/generated/openpnm.core.Base2.get", "modules/generated/openpnm.core.Base2.get_conduit_data", "modules/generated/openpnm.core.Base2.interpolate_data", "modules/generated/openpnm.core.Base2.items", "modules/generated/openpnm.core.Base2.keys", "modules/generated/openpnm.core.Base2.pop", "modules/generated/openpnm.core.Base2.popitem", "modules/generated/openpnm.core.Base2.props", "modules/generated/openpnm.core.Base2.setdefault", "modules/generated/openpnm.core.Base2.to_indices", "modules/generated/openpnm.core.Base2.to_mask", "modules/generated/openpnm.core.Base2.update", "modules/generated/openpnm.core.Base2.values", "modules/generated/openpnm.core.Domain", "modules/generated/openpnm.core.Domain.add_model", "modules/generated/openpnm.core.Domain.add_model_collection", "modules/generated/openpnm.core.Domain.clear", "modules/generated/openpnm.core.Domain.copy", "modules/generated/openpnm.core.Domain.filter_by_label", "modules/generated/openpnm.core.Domain.fromkeys", "modules/generated/openpnm.core.Domain.get", "modules/generated/openpnm.core.Domain.get_conduit_data", "modules/generated/openpnm.core.Domain.interpolate_data", "modules/generated/openpnm.core.Domain.items", "modules/generated/openpnm.core.Domain.keys", "modules/generated/openpnm.core.Domain.labels", "modules/generated/openpnm.core.Domain.num_pores", "modules/generated/openpnm.core.Domain.num_throats", "modules/generated/openpnm.core.Domain.pop", "modules/generated/openpnm.core.Domain.popitem", "modules/generated/openpnm.core.Domain.pores", "modules/generated/openpnm.core.Domain.props", "modules/generated/openpnm.core.Domain.regenerate_models", "modules/generated/openpnm.core.Domain.run_model", "modules/generated/openpnm.core.Domain.set_label", "modules/generated/openpnm.core.Domain.setdefault", "modules/generated/openpnm.core.Domain.throats", "modules/generated/openpnm.core.Domain.to_indices", "modules/generated/openpnm.core.Domain.to_mask", "modules/generated/openpnm.core.Domain.update", "modules/generated/openpnm.core.Domain.values", "modules/generated/openpnm.core.LabelMixin", "modules/generated/openpnm.core.LabelMixin.filter_by_label", "modules/generated/openpnm.core.LabelMixin.labels", "modules/generated/openpnm.core.LabelMixin.num_pores", "modules/generated/openpnm.core.LabelMixin.num_throats", "modules/generated/openpnm.core.LabelMixin.pores", "modules/generated/openpnm.core.LabelMixin.set_label", "modules/generated/openpnm.core.LabelMixin.throats", "modules/generated/openpnm.core.ModelWrapper", "modules/generated/openpnm.core.ModelWrapper.__call__", "modules/generated/openpnm.core.ModelWrapper.clear", "modules/generated/openpnm.core.ModelWrapper.copy", "modules/generated/openpnm.core.ModelWrapper.fromkeys", "modules/generated/openpnm.core.ModelWrapper.get", "modules/generated/openpnm.core.ModelWrapper.items", "modules/generated/openpnm.core.ModelWrapper.keys", "modules/generated/openpnm.core.ModelWrapper.pop", "modules/generated/openpnm.core.ModelWrapper.popitem", "modules/generated/openpnm.core.ModelWrapper.setdefault", "modules/generated/openpnm.core.ModelWrapper.update", "modules/generated/openpnm.core.ModelWrapper.values", "modules/generated/openpnm.core.ModelsDict", "modules/generated/openpnm.core.ModelsDict.clear", "modules/generated/openpnm.core.ModelsDict.copy", "modules/generated/openpnm.core.ModelsDict.dependency_graph", "modules/generated/openpnm.core.ModelsDict.dependency_list", "modules/generated/openpnm.core.ModelsDict.dependency_map", "modules/generated/openpnm.core.ModelsDict.fromkeys", "modules/generated/openpnm.core.ModelsDict.get", "modules/generated/openpnm.core.ModelsDict.items", "modules/generated/openpnm.core.ModelsDict.keys", "modules/generated/openpnm.core.ModelsDict.pop", "modules/generated/openpnm.core.ModelsDict.popitem", "modules/generated/openpnm.core.ModelsDict.setdefault", "modules/generated/openpnm.core.ModelsDict.update", "modules/generated/openpnm.core.ModelsDict.values", "modules/generated/openpnm.core.ModelsMixin2", "modules/generated/openpnm.core.ModelsMixin2.add_model", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models", "modules/generated/openpnm.core.ModelsMixin2.run_model", "modules/generated/openpnm.core.ParserMixin", "modules/generated/openpnm.integrators", "modules/generated/openpnm.integrators.Integrator", "modules/generated/openpnm.integrators.ScipyRK45", "modules/generated/openpnm.integrators.ScipyRK45.solve", "modules/generated/openpnm.io", "modules/generated/openpnm.io.network_from_csv", "modules/generated/openpnm.io.network_from_jsongraph", "modules/generated/openpnm.io.network_from_marock", "modules/generated/openpnm.io.network_from_networkx", "modules/generated/openpnm.io.network_from_pergeos", "modules/generated/openpnm.io.network_from_porespy", "modules/generated/openpnm.io.network_from_statoil", "modules/generated/openpnm.io.network_to_comsol", "modules/generated/openpnm.io.network_to_csv", "modules/generated/openpnm.io.network_to_jsongraph", "modules/generated/openpnm.io.network_to_networkx", "modules/generated/openpnm.io.network_to_pandas", "modules/generated/openpnm.io.network_to_pergeos", "modules/generated/openpnm.io.network_to_salome", "modules/generated/openpnm.io.network_to_stl", "modules/generated/openpnm.io.print_hdf5", "modules/generated/openpnm.io.project_to_csv", "modules/generated/openpnm.io.project_to_dict", "modules/generated/openpnm.io.project_to_hdf5", "modules/generated/openpnm.io.project_to_pandas", "modules/generated/openpnm.io.project_to_paraview", "modules/generated/openpnm.io.project_to_vtk", "modules/generated/openpnm.io.project_to_xdmf", "modules/generated/openpnm.models", "modules/generated/openpnm.models.collections", "modules/generated/openpnm.models.collections.geometry", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles", "modules/generated/openpnm.models.collections.network", "modules/generated/openpnm.models.collections.phase", "modules/generated/openpnm.models.collections.phase.air", "modules/generated/openpnm.models.collections.phase.gas", "modules/generated/openpnm.models.collections.phase.liquid", "modules/generated/openpnm.models.collections.phase.mercury", "modules/generated/openpnm.models.collections.phase.water", "modules/generated/openpnm.models.collections.physics", "modules/generated/openpnm.models.collections.physics.basic", "modules/generated/openpnm.models.collections.physics.standard", "modules/generated/openpnm.models.geometry", "modules/generated/openpnm.models.geometry.conduit_lengths", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square", "modules/generated/openpnm.models.geometry.pore_seed", "modules/generated/openpnm.models.geometry.pore_seed.random", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated", "modules/generated/openpnm.models.geometry.pore_size", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere", "modules/generated/openpnm.models.geometry.pore_size.normal", "modules/generated/openpnm.models.geometry.pore_size.random", "modules/generated/openpnm.models.geometry.pore_size.weibull", "modules/generated/openpnm.models.geometry.pore_surface_area", "modules/generated/openpnm.models.geometry.pore_surface_area.circle", "modules/generated/openpnm.models.geometry.pore_surface_area.cube", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere", "modules/generated/openpnm.models.geometry.pore_surface_area.square", "modules/generated/openpnm.models.geometry.pore_volume", "modules/generated/openpnm.models.geometry.pore_volume.circle", "modules/generated/openpnm.models.geometry.pore_volume.cube", "modules/generated/openpnm.models.geometry.pore_volume.effective", "modules/generated/openpnm.models.geometry.pore_volume.sphere", "modules/generated/openpnm.models.geometry.pore_volume.square", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow", "modules/generated/openpnm.models.geometry.throat_centroid", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle", "modules/generated/openpnm.models.geometry.throat_endpoints", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_perimeter", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle", "modules/generated/openpnm.models.geometry.throat_seed", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_seed.random", "modules/generated/openpnm.models.geometry.throat_size", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution", "modules/generated/openpnm.models.geometry.throat_size.normal", "modules/generated/openpnm.models.geometry.throat_size.random", "modules/generated/openpnm.models.geometry.throat_size.weibull", "modules/generated/openpnm.models.geometry.throat_surface_area", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle", "modules/generated/openpnm.models.geometry.throat_vector", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore", "modules/generated/openpnm.models.geometry.throat_volume", "modules/generated/openpnm.models.geometry.throat_volume.cuboid", "modules/generated/openpnm.models.geometry.throat_volume.cylinder", "modules/generated/openpnm.models.geometry.throat_volume.extrusion", "modules/generated/openpnm.models.geometry.throat_volume.lens", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring", "modules/generated/openpnm.models.geometry.throat_volume.rectangle", "modules/generated/openpnm.models.misc", "modules/generated/openpnm.models.misc.blank", "modules/generated/openpnm.models.misc.clip", "modules/generated/openpnm.models.misc.constant", "modules/generated/openpnm.models.misc.difference", "modules/generated/openpnm.models.misc.fraction", "modules/generated/openpnm.models.misc.from_neighbor_pores", "modules/generated/openpnm.models.misc.from_neighbor_throats", "modules/generated/openpnm.models.misc.generic_distribution", "modules/generated/openpnm.models.misc.generic_function", "modules/generated/openpnm.models.misc.invert", "modules/generated/openpnm.models.misc.linear", "modules/generated/openpnm.models.misc.match_histogram", "modules/generated/openpnm.models.misc.normal", "modules/generated/openpnm.models.misc.normalize", "modules/generated/openpnm.models.misc.polynomial", "modules/generated/openpnm.models.misc.product", "modules/generated/openpnm.models.misc.random", "modules/generated/openpnm.models.misc.scaled", "modules/generated/openpnm.models.misc.summation", "modules/generated/openpnm.models.misc.weibull", "modules/generated/openpnm.models.network", "modules/generated/openpnm.models.network.bidirectional_throats", "modules/generated/openpnm.models.network.cluster_number", "modules/generated/openpnm.models.network.cluster_size", "modules/generated/openpnm.models.network.coordination_number", "modules/generated/openpnm.models.network.count_coincident_pores", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_pore", "modules/generated/openpnm.models.network.duplicate_throats", "modules/generated/openpnm.models.network.find_coincident_pores", "modules/generated/openpnm.models.network.gabriel_edges", "modules/generated/openpnm.models.network.headless_throats", "modules/generated/openpnm.models.network.isolated_pores", "modules/generated/openpnm.models.network.looped_throats", "modules/generated/openpnm.models.network.pore_to_pore_distance", "modules/generated/openpnm.models.network.reversed_throats", "modules/generated/openpnm.models.phase", "modules/generated/openpnm.models.phase.chemicals_wrapper", "modules/generated/openpnm.models.phase.critical_props", "modules/generated/openpnm.models.phase.density", "modules/generated/openpnm.models.phase.density.ideal_gas", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD", "modules/generated/openpnm.models.phase.density.mass_to_molar", "modules/generated/openpnm.models.phase.density.water_correlation", "modules/generated/openpnm.models.phase.diffusivity", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc", "modules/generated/openpnm.models.phase.heat_capacity", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp", "modules/generated/openpnm.models.phase.misc", "modules/generated/openpnm.models.phase.misc.mix_and_match", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures", "modules/generated/openpnm.models.phase.mixtures.from_component", "modules/generated/openpnm.models.phase.mixtures.mixing_rule", "modules/generated/openpnm.models.phase.mixtures.mole_summation", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures.salinity", "modules/generated/openpnm.models.phase.partition_coefficient", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water", "modules/generated/openpnm.models.phase.surface_tension", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb", "modules/generated/openpnm.models.phase.surface_tension.water_correlation", "modules/generated/openpnm.models.phase.thermal_conductivity", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation", "modules/generated/openpnm.models.phase.vapor_pressure", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation", "modules/generated/openpnm.models.phase.viscosity", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls", "modules/generated/openpnm.models.phase.viscosity.water_correlation", "modules/generated/openpnm.models.physics", "modules/generated/openpnm.models.physics.ad_dif_conductance", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif", "modules/generated/openpnm.models.physics.capillary_pressure", "modules/generated/openpnm.models.physics.capillary_pressure.purcell", "modules/generated/openpnm.models.physics.capillary_pressure.washburn", "modules/generated/openpnm.models.physics.diffusive_conductance", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion", "modules/generated/openpnm.models.physics.electrical_conductance", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors", "modules/generated/openpnm.models.physics.hydraulic_conductance", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt", "modules/generated/openpnm.models.physics.meniscus", "modules/generated/openpnm.models.physics.meniscus.general_toroidal", "modules/generated/openpnm.models.physics.meniscus.purcell", "modules/generated/openpnm.models.physics.meniscus.sinusoidal", "modules/generated/openpnm.models.physics.multiphase", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance", "modules/generated/openpnm.models.physics.multiphase.late_filling", "modules/generated/openpnm.models.physics.source_terms", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage", "modules/generated/openpnm.models.physics.source_terms.exponential", "modules/generated/openpnm.models.physics.source_terms.general_symbolic", "modules/generated/openpnm.models.physics.source_terms.linear", "modules/generated/openpnm.models.physics.source_terms.logarithm", "modules/generated/openpnm.models.physics.source_terms.natural_exponential", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm", "modules/generated/openpnm.models.physics.source_terms.power_law", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics", "modules/generated/openpnm.models.physics.thermal_conductance", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors", "modules/generated/openpnm.network", "modules/generated/openpnm.network.BodyCenteredCubic", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.BodyCenteredCubic.add_model", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection", "modules/generated/openpnm.network.BodyCenteredCubic.clear", "modules/generated/openpnm.network.BodyCenteredCubic.copy", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys", "modules/generated/openpnm.network.BodyCenteredCubic.get", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data", "modules/generated/openpnm.network.BodyCenteredCubic.items", "modules/generated/openpnm.network.BodyCenteredCubic.keys", "modules/generated/openpnm.network.BodyCenteredCubic.labels", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats", "modules/generated/openpnm.network.BodyCenteredCubic.pop", "modules/generated/openpnm.network.BodyCenteredCubic.popitem", "modules/generated/openpnm.network.BodyCenteredCubic.pores", "modules/generated/openpnm.network.BodyCenteredCubic.props", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models", "modules/generated/openpnm.network.BodyCenteredCubic.run_model", "modules/generated/openpnm.network.BodyCenteredCubic.set_label", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault", "modules/generated/openpnm.network.BodyCenteredCubic.throats", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask", "modules/generated/openpnm.network.BodyCenteredCubic.update", "modules/generated/openpnm.network.BodyCenteredCubic.values", "modules/generated/openpnm.network.Cubic", "modules/generated/openpnm.network.Cubic.add_boundary_pores", "modules/generated/openpnm.network.Cubic.add_model", "modules/generated/openpnm.network.Cubic.add_model_collection", "modules/generated/openpnm.network.Cubic.clear", "modules/generated/openpnm.network.Cubic.copy", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix", "modules/generated/openpnm.network.Cubic.create_incidence_matrix", "modules/generated/openpnm.network.Cubic.filter_by_label", "modules/generated/openpnm.network.Cubic.find_connected_pores", "modules/generated/openpnm.network.Cubic.find_connecting_throat", "modules/generated/openpnm.network.Cubic.find_nearby_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_throats", "modules/generated/openpnm.network.Cubic.fromkeys", "modules/generated/openpnm.network.Cubic.get", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix", "modules/generated/openpnm.network.Cubic.get_conduit_data", "modules/generated/openpnm.network.Cubic.get_incidence_matrix", "modules/generated/openpnm.network.Cubic.interpolate_data", "modules/generated/openpnm.network.Cubic.items", "modules/generated/openpnm.network.Cubic.keys", "modules/generated/openpnm.network.Cubic.labels", "modules/generated/openpnm.network.Cubic.num_neighbors", "modules/generated/openpnm.network.Cubic.num_pores", "modules/generated/openpnm.network.Cubic.num_throats", "modules/generated/openpnm.network.Cubic.pop", "modules/generated/openpnm.network.Cubic.popitem", "modules/generated/openpnm.network.Cubic.pores", "modules/generated/openpnm.network.Cubic.props", "modules/generated/openpnm.network.Cubic.regenerate_models", "modules/generated/openpnm.network.Cubic.run_model", "modules/generated/openpnm.network.Cubic.set_label", "modules/generated/openpnm.network.Cubic.setdefault", "modules/generated/openpnm.network.Cubic.throats", "modules/generated/openpnm.network.Cubic.to_indices", "modules/generated/openpnm.network.Cubic.to_mask", "modules/generated/openpnm.network.Cubic.update", "modules/generated/openpnm.network.Cubic.values", "modules/generated/openpnm.network.CubicTemplate", "modules/generated/openpnm.network.CubicTemplate.add_model", "modules/generated/openpnm.network.CubicTemplate.add_model_collection", "modules/generated/openpnm.network.CubicTemplate.clear", "modules/generated/openpnm.network.CubicTemplate.copy", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.filter_by_label", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats", "modules/generated/openpnm.network.CubicTemplate.fromkeys", "modules/generated/openpnm.network.CubicTemplate.get", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.interpolate_data", "modules/generated/openpnm.network.CubicTemplate.items", "modules/generated/openpnm.network.CubicTemplate.keys", "modules/generated/openpnm.network.CubicTemplate.labels", "modules/generated/openpnm.network.CubicTemplate.num_neighbors", "modules/generated/openpnm.network.CubicTemplate.num_pores", "modules/generated/openpnm.network.CubicTemplate.num_throats", "modules/generated/openpnm.network.CubicTemplate.pop", "modules/generated/openpnm.network.CubicTemplate.popitem", "modules/generated/openpnm.network.CubicTemplate.pores", "modules/generated/openpnm.network.CubicTemplate.props", "modules/generated/openpnm.network.CubicTemplate.regenerate_models", "modules/generated/openpnm.network.CubicTemplate.run_model", "modules/generated/openpnm.network.CubicTemplate.set_label", "modules/generated/openpnm.network.CubicTemplate.setdefault", "modules/generated/openpnm.network.CubicTemplate.throats", "modules/generated/openpnm.network.CubicTemplate.to_indices", "modules/generated/openpnm.network.CubicTemplate.to_mask", "modules/generated/openpnm.network.CubicTemplate.update", "modules/generated/openpnm.network.CubicTemplate.values", "modules/generated/openpnm.network.Delaunay", "modules/generated/openpnm.network.Delaunay.add_model", "modules/generated/openpnm.network.Delaunay.add_model_collection", "modules/generated/openpnm.network.Delaunay.clear", "modules/generated/openpnm.network.Delaunay.copy", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix", "modules/generated/openpnm.network.Delaunay.filter_by_label", "modules/generated/openpnm.network.Delaunay.find_connected_pores", "modules/generated/openpnm.network.Delaunay.find_connecting_throat", "modules/generated/openpnm.network.Delaunay.find_nearby_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats", "modules/generated/openpnm.network.Delaunay.fromkeys", "modules/generated/openpnm.network.Delaunay.get", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.get_conduit_data", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix", "modules/generated/openpnm.network.Delaunay.interpolate_data", "modules/generated/openpnm.network.Delaunay.items", "modules/generated/openpnm.network.Delaunay.keys", "modules/generated/openpnm.network.Delaunay.labels", "modules/generated/openpnm.network.Delaunay.num_neighbors", "modules/generated/openpnm.network.Delaunay.num_pores", "modules/generated/openpnm.network.Delaunay.num_throats", "modules/generated/openpnm.network.Delaunay.pop", "modules/generated/openpnm.network.Delaunay.popitem", "modules/generated/openpnm.network.Delaunay.pores", "modules/generated/openpnm.network.Delaunay.props", "modules/generated/openpnm.network.Delaunay.regenerate_models", "modules/generated/openpnm.network.Delaunay.run_model", "modules/generated/openpnm.network.Delaunay.set_label", "modules/generated/openpnm.network.Delaunay.setdefault", "modules/generated/openpnm.network.Delaunay.throats", "modules/generated/openpnm.network.Delaunay.to_indices", "modules/generated/openpnm.network.Delaunay.to_mask", "modules/generated/openpnm.network.Delaunay.update", "modules/generated/openpnm.network.Delaunay.values", "modules/generated/openpnm.network.DelaunayVoronoiDual", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys", "modules/generated/openpnm.network.DelaunayVoronoiDual.get", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.items", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.props", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask", "modules/generated/openpnm.network.DelaunayVoronoiDual.update", "modules/generated/openpnm.network.DelaunayVoronoiDual.values", "modules/generated/openpnm.network.Demo", "modules/generated/openpnm.network.Demo.add_boundary_pores", "modules/generated/openpnm.network.Demo.add_model", "modules/generated/openpnm.network.Demo.add_model_collection", "modules/generated/openpnm.network.Demo.clear", "modules/generated/openpnm.network.Demo.copy", "modules/generated/openpnm.network.Demo.create_adjacency_matrix", "modules/generated/openpnm.network.Demo.create_incidence_matrix", "modules/generated/openpnm.network.Demo.filter_by_label", "modules/generated/openpnm.network.Demo.find_connected_pores", "modules/generated/openpnm.network.Demo.find_connecting_throat", "modules/generated/openpnm.network.Demo.find_nearby_pores", "modules/generated/openpnm.network.Demo.find_neighbor_pores", "modules/generated/openpnm.network.Demo.find_neighbor_throats", "modules/generated/openpnm.network.Demo.fromkeys", "modules/generated/openpnm.network.Demo.get", "modules/generated/openpnm.network.Demo.get_adjacency_matrix", "modules/generated/openpnm.network.Demo.get_conduit_data", "modules/generated/openpnm.network.Demo.get_incidence_matrix", "modules/generated/openpnm.network.Demo.interpolate_data", "modules/generated/openpnm.network.Demo.items", "modules/generated/openpnm.network.Demo.keys", "modules/generated/openpnm.network.Demo.labels", "modules/generated/openpnm.network.Demo.num_neighbors", "modules/generated/openpnm.network.Demo.num_pores", "modules/generated/openpnm.network.Demo.num_throats", "modules/generated/openpnm.network.Demo.pop", "modules/generated/openpnm.network.Demo.popitem", "modules/generated/openpnm.network.Demo.pores", "modules/generated/openpnm.network.Demo.props", "modules/generated/openpnm.network.Demo.regenerate_models", "modules/generated/openpnm.network.Demo.run_model", "modules/generated/openpnm.network.Demo.set_label", "modules/generated/openpnm.network.Demo.setdefault", "modules/generated/openpnm.network.Demo.throats", "modules/generated/openpnm.network.Demo.to_indices", "modules/generated/openpnm.network.Demo.to_mask", "modules/generated/openpnm.network.Demo.update", "modules/generated/openpnm.network.Demo.values", "modules/generated/openpnm.network.FaceCenteredCubic", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.FaceCenteredCubic.add_model", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection", "modules/generated/openpnm.network.FaceCenteredCubic.clear", "modules/generated/openpnm.network.FaceCenteredCubic.copy", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys", "modules/generated/openpnm.network.FaceCenteredCubic.get", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data", "modules/generated/openpnm.network.FaceCenteredCubic.items", "modules/generated/openpnm.network.FaceCenteredCubic.keys", "modules/generated/openpnm.network.FaceCenteredCubic.labels", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats", "modules/generated/openpnm.network.FaceCenteredCubic.pop", "modules/generated/openpnm.network.FaceCenteredCubic.popitem", "modules/generated/openpnm.network.FaceCenteredCubic.pores", "modules/generated/openpnm.network.FaceCenteredCubic.props", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models", "modules/generated/openpnm.network.FaceCenteredCubic.run_model", "modules/generated/openpnm.network.FaceCenteredCubic.set_label", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault", "modules/generated/openpnm.network.FaceCenteredCubic.throats", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask", "modules/generated/openpnm.network.FaceCenteredCubic.update", "modules/generated/openpnm.network.FaceCenteredCubic.values", "modules/generated/openpnm.network.Network", "modules/generated/openpnm.network.Network.add_model", "modules/generated/openpnm.network.Network.add_model_collection", "modules/generated/openpnm.network.Network.clear", "modules/generated/openpnm.network.Network.copy", "modules/generated/openpnm.network.Network.create_adjacency_matrix", "modules/generated/openpnm.network.Network.create_incidence_matrix", "modules/generated/openpnm.network.Network.filter_by_label", "modules/generated/openpnm.network.Network.find_connected_pores", "modules/generated/openpnm.network.Network.find_connecting_throat", "modules/generated/openpnm.network.Network.find_nearby_pores", "modules/generated/openpnm.network.Network.find_neighbor_pores", "modules/generated/openpnm.network.Network.find_neighbor_throats", "modules/generated/openpnm.network.Network.fromkeys", "modules/generated/openpnm.network.Network.get", "modules/generated/openpnm.network.Network.get_adjacency_matrix", "modules/generated/openpnm.network.Network.get_conduit_data", "modules/generated/openpnm.network.Network.get_incidence_matrix", "modules/generated/openpnm.network.Network.interpolate_data", "modules/generated/openpnm.network.Network.items", "modules/generated/openpnm.network.Network.keys", "modules/generated/openpnm.network.Network.labels", "modules/generated/openpnm.network.Network.num_neighbors", "modules/generated/openpnm.network.Network.num_pores", "modules/generated/openpnm.network.Network.num_throats", "modules/generated/openpnm.network.Network.pop", "modules/generated/openpnm.network.Network.popitem", "modules/generated/openpnm.network.Network.pores", "modules/generated/openpnm.network.Network.props", "modules/generated/openpnm.network.Network.regenerate_models", "modules/generated/openpnm.network.Network.run_model", "modules/generated/openpnm.network.Network.set_label", "modules/generated/openpnm.network.Network.setdefault", "modules/generated/openpnm.network.Network.throats", "modules/generated/openpnm.network.Network.to_indices", "modules/generated/openpnm.network.Network.to_mask", "modules/generated/openpnm.network.Network.update", "modules/generated/openpnm.network.Network.values", "modules/generated/openpnm.network.Voronoi", "modules/generated/openpnm.network.Voronoi.add_model", "modules/generated/openpnm.network.Voronoi.add_model_collection", "modules/generated/openpnm.network.Voronoi.clear", "modules/generated/openpnm.network.Voronoi.copy", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix", "modules/generated/openpnm.network.Voronoi.filter_by_label", "modules/generated/openpnm.network.Voronoi.find_connected_pores", "modules/generated/openpnm.network.Voronoi.find_connecting_throat", "modules/generated/openpnm.network.Voronoi.find_nearby_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats", "modules/generated/openpnm.network.Voronoi.fromkeys", "modules/generated/openpnm.network.Voronoi.get", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.get_conduit_data", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix", "modules/generated/openpnm.network.Voronoi.interpolate_data", "modules/generated/openpnm.network.Voronoi.items", "modules/generated/openpnm.network.Voronoi.keys", "modules/generated/openpnm.network.Voronoi.labels", "modules/generated/openpnm.network.Voronoi.num_neighbors", "modules/generated/openpnm.network.Voronoi.num_pores", "modules/generated/openpnm.network.Voronoi.num_throats", "modules/generated/openpnm.network.Voronoi.pop", "modules/generated/openpnm.network.Voronoi.popitem", "modules/generated/openpnm.network.Voronoi.pores", "modules/generated/openpnm.network.Voronoi.props", "modules/generated/openpnm.network.Voronoi.regenerate_models", "modules/generated/openpnm.network.Voronoi.run_model", "modules/generated/openpnm.network.Voronoi.set_label", "modules/generated/openpnm.network.Voronoi.setdefault", "modules/generated/openpnm.network.Voronoi.throats", "modules/generated/openpnm.network.Voronoi.to_indices", "modules/generated/openpnm.network.Voronoi.to_mask", "modules/generated/openpnm.network.Voronoi.update", "modules/generated/openpnm.network.Voronoi.values", "modules/generated/openpnm.phase", "modules/generated/openpnm.phase.Air", "modules/generated/openpnm.phase.Air.add_model", "modules/generated/openpnm.phase.Air.add_model_collection", "modules/generated/openpnm.phase.Air.clear", "modules/generated/openpnm.phase.Air.copy", "modules/generated/openpnm.phase.Air.filter_by_label", "modules/generated/openpnm.phase.Air.fromkeys", "modules/generated/openpnm.phase.Air.get", "modules/generated/openpnm.phase.Air.get_conduit_data", "modules/generated/openpnm.phase.Air.interpolate_data", "modules/generated/openpnm.phase.Air.items", "modules/generated/openpnm.phase.Air.keys", "modules/generated/openpnm.phase.Air.labels", "modules/generated/openpnm.phase.Air.num_pores", "modules/generated/openpnm.phase.Air.num_throats", "modules/generated/openpnm.phase.Air.pop", "modules/generated/openpnm.phase.Air.popitem", "modules/generated/openpnm.phase.Air.pores", "modules/generated/openpnm.phase.Air.props", "modules/generated/openpnm.phase.Air.regenerate_models", "modules/generated/openpnm.phase.Air.run_model", "modules/generated/openpnm.phase.Air.set_label", "modules/generated/openpnm.phase.Air.setdefault", "modules/generated/openpnm.phase.Air.throats", "modules/generated/openpnm.phase.Air.to_indices", "modules/generated/openpnm.phase.Air.to_mask", "modules/generated/openpnm.phase.Air.update", "modules/generated/openpnm.phase.Air.values", "modules/generated/openpnm.phase.BinaryGas", "modules/generated/openpnm.phase.BinaryGas.add_comp", "modules/generated/openpnm.phase.BinaryGas.add_model", "modules/generated/openpnm.phase.BinaryGas.add_model_collection", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health", "modules/generated/openpnm.phase.BinaryGas.clear", "modules/generated/openpnm.phase.BinaryGas.copy", "modules/generated/openpnm.phase.BinaryGas.filter_by_label", "modules/generated/openpnm.phase.BinaryGas.fromkeys", "modules/generated/openpnm.phase.BinaryGas.get", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals", "modules/generated/openpnm.phase.BinaryGas.interpolate_data", "modules/generated/openpnm.phase.BinaryGas.items", "modules/generated/openpnm.phase.BinaryGas.keys", "modules/generated/openpnm.phase.BinaryGas.labels", "modules/generated/openpnm.phase.BinaryGas.num_pores", "modules/generated/openpnm.phase.BinaryGas.num_throats", "modules/generated/openpnm.phase.BinaryGas.pop", "modules/generated/openpnm.phase.BinaryGas.popitem", "modules/generated/openpnm.phase.BinaryGas.pores", "modules/generated/openpnm.phase.BinaryGas.props", "modules/generated/openpnm.phase.BinaryGas.regenerate_models", "modules/generated/openpnm.phase.BinaryGas.remove_comp", "modules/generated/openpnm.phase.BinaryGas.run_model", "modules/generated/openpnm.phase.BinaryGas.set_label", "modules/generated/openpnm.phase.BinaryGas.setdefault", "modules/generated/openpnm.phase.BinaryGas.throats", "modules/generated/openpnm.phase.BinaryGas.to_indices", "modules/generated/openpnm.phase.BinaryGas.to_mask", "modules/generated/openpnm.phase.BinaryGas.update", "modules/generated/openpnm.phase.BinaryGas.values", "modules/generated/openpnm.phase.BinaryGas.y", "modules/generated/openpnm.phase.GasMixture", "modules/generated/openpnm.phase.GasMixture.add_comp", "modules/generated/openpnm.phase.GasMixture.add_model", "modules/generated/openpnm.phase.GasMixture.add_model_collection", "modules/generated/openpnm.phase.GasMixture.check_mixture_health", "modules/generated/openpnm.phase.GasMixture.clear", "modules/generated/openpnm.phase.GasMixture.copy", "modules/generated/openpnm.phase.GasMixture.filter_by_label", "modules/generated/openpnm.phase.GasMixture.fromkeys", "modules/generated/openpnm.phase.GasMixture.get", "modules/generated/openpnm.phase.GasMixture.get_comp_vals", "modules/generated/openpnm.phase.GasMixture.get_conduit_data", "modules/generated/openpnm.phase.GasMixture.get_mix_vals", "modules/generated/openpnm.phase.GasMixture.interpolate_data", "modules/generated/openpnm.phase.GasMixture.items", "modules/generated/openpnm.phase.GasMixture.keys", "modules/generated/openpnm.phase.GasMixture.labels", "modules/generated/openpnm.phase.GasMixture.num_pores", "modules/generated/openpnm.phase.GasMixture.num_throats", "modules/generated/openpnm.phase.GasMixture.pop", "modules/generated/openpnm.phase.GasMixture.popitem", "modules/generated/openpnm.phase.GasMixture.pores", "modules/generated/openpnm.phase.GasMixture.props", "modules/generated/openpnm.phase.GasMixture.regenerate_models", "modules/generated/openpnm.phase.GasMixture.remove_comp", "modules/generated/openpnm.phase.GasMixture.run_model", "modules/generated/openpnm.phase.GasMixture.set_label", "modules/generated/openpnm.phase.GasMixture.setdefault", "modules/generated/openpnm.phase.GasMixture.throats", "modules/generated/openpnm.phase.GasMixture.to_indices", "modules/generated/openpnm.phase.GasMixture.to_mask", "modules/generated/openpnm.phase.GasMixture.update", "modules/generated/openpnm.phase.GasMixture.values", "modules/generated/openpnm.phase.GasMixture.y", "modules/generated/openpnm.phase.LiquidMixture", "modules/generated/openpnm.phase.LiquidMixture.add_comp", "modules/generated/openpnm.phase.LiquidMixture.add_model", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.LiquidMixture.clear", "modules/generated/openpnm.phase.LiquidMixture.copy", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label", "modules/generated/openpnm.phase.LiquidMixture.fromkeys", "modules/generated/openpnm.phase.LiquidMixture.get", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data", "modules/generated/openpnm.phase.LiquidMixture.items", "modules/generated/openpnm.phase.LiquidMixture.keys", "modules/generated/openpnm.phase.LiquidMixture.labels", "modules/generated/openpnm.phase.LiquidMixture.num_pores", "modules/generated/openpnm.phase.LiquidMixture.num_throats", "modules/generated/openpnm.phase.LiquidMixture.pop", "modules/generated/openpnm.phase.LiquidMixture.popitem", "modules/generated/openpnm.phase.LiquidMixture.pores", "modules/generated/openpnm.phase.LiquidMixture.props", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models", "modules/generated/openpnm.phase.LiquidMixture.remove_comp", "modules/generated/openpnm.phase.LiquidMixture.run_model", "modules/generated/openpnm.phase.LiquidMixture.set_label", "modules/generated/openpnm.phase.LiquidMixture.setdefault", "modules/generated/openpnm.phase.LiquidMixture.throats", "modules/generated/openpnm.phase.LiquidMixture.to_indices", "modules/generated/openpnm.phase.LiquidMixture.to_mask", "modules/generated/openpnm.phase.LiquidMixture.update", "modules/generated/openpnm.phase.LiquidMixture.values", "modules/generated/openpnm.phase.LiquidMixture.x", "modules/generated/openpnm.phase.Mercury", "modules/generated/openpnm.phase.Mercury.add_model", "modules/generated/openpnm.phase.Mercury.add_model_collection", "modules/generated/openpnm.phase.Mercury.clear", "modules/generated/openpnm.phase.Mercury.copy", "modules/generated/openpnm.phase.Mercury.filter_by_label", "modules/generated/openpnm.phase.Mercury.fromkeys", "modules/generated/openpnm.phase.Mercury.get", "modules/generated/openpnm.phase.Mercury.get_conduit_data", "modules/generated/openpnm.phase.Mercury.interpolate_data", "modules/generated/openpnm.phase.Mercury.items", "modules/generated/openpnm.phase.Mercury.keys", "modules/generated/openpnm.phase.Mercury.labels", "modules/generated/openpnm.phase.Mercury.num_pores", "modules/generated/openpnm.phase.Mercury.num_throats", "modules/generated/openpnm.phase.Mercury.pop", "modules/generated/openpnm.phase.Mercury.popitem", "modules/generated/openpnm.phase.Mercury.pores", "modules/generated/openpnm.phase.Mercury.props", "modules/generated/openpnm.phase.Mercury.regenerate_models", "modules/generated/openpnm.phase.Mercury.run_model", "modules/generated/openpnm.phase.Mercury.set_label", "modules/generated/openpnm.phase.Mercury.setdefault", "modules/generated/openpnm.phase.Mercury.throats", "modules/generated/openpnm.phase.Mercury.to_indices", "modules/generated/openpnm.phase.Mercury.to_mask", "modules/generated/openpnm.phase.Mercury.update", "modules/generated/openpnm.phase.Mercury.values", "modules/generated/openpnm.phase.Mixture", "modules/generated/openpnm.phase.Mixture.add_comp", "modules/generated/openpnm.phase.Mixture.add_model", "modules/generated/openpnm.phase.Mixture.add_model_collection", "modules/generated/openpnm.phase.Mixture.check_mixture_health", "modules/generated/openpnm.phase.Mixture.clear", "modules/generated/openpnm.phase.Mixture.copy", "modules/generated/openpnm.phase.Mixture.filter_by_label", "modules/generated/openpnm.phase.Mixture.fromkeys", "modules/generated/openpnm.phase.Mixture.get", "modules/generated/openpnm.phase.Mixture.get_comp_vals", "modules/generated/openpnm.phase.Mixture.get_conduit_data", "modules/generated/openpnm.phase.Mixture.get_mix_vals", "modules/generated/openpnm.phase.Mixture.interpolate_data", "modules/generated/openpnm.phase.Mixture.items", "modules/generated/openpnm.phase.Mixture.keys", "modules/generated/openpnm.phase.Mixture.labels", "modules/generated/openpnm.phase.Mixture.num_pores", "modules/generated/openpnm.phase.Mixture.num_throats", "modules/generated/openpnm.phase.Mixture.pop", "modules/generated/openpnm.phase.Mixture.popitem", "modules/generated/openpnm.phase.Mixture.pores", "modules/generated/openpnm.phase.Mixture.props", "modules/generated/openpnm.phase.Mixture.regenerate_models", "modules/generated/openpnm.phase.Mixture.remove_comp", "modules/generated/openpnm.phase.Mixture.run_model", "modules/generated/openpnm.phase.Mixture.set_label", "modules/generated/openpnm.phase.Mixture.setdefault", "modules/generated/openpnm.phase.Mixture.throats", "modules/generated/openpnm.phase.Mixture.to_indices", "modules/generated/openpnm.phase.Mixture.to_mask", "modules/generated/openpnm.phase.Mixture.update", "modules/generated/openpnm.phase.Mixture.values", "modules/generated/openpnm.phase.Phase", "modules/generated/openpnm.phase.Phase.add_model", "modules/generated/openpnm.phase.Phase.add_model_collection", "modules/generated/openpnm.phase.Phase.clear", "modules/generated/openpnm.phase.Phase.copy", "modules/generated/openpnm.phase.Phase.filter_by_label", "modules/generated/openpnm.phase.Phase.fromkeys", "modules/generated/openpnm.phase.Phase.get", "modules/generated/openpnm.phase.Phase.get_conduit_data", "modules/generated/openpnm.phase.Phase.interpolate_data", "modules/generated/openpnm.phase.Phase.items", "modules/generated/openpnm.phase.Phase.keys", "modules/generated/openpnm.phase.Phase.labels", "modules/generated/openpnm.phase.Phase.num_pores", "modules/generated/openpnm.phase.Phase.num_throats", "modules/generated/openpnm.phase.Phase.pop", "modules/generated/openpnm.phase.Phase.popitem", "modules/generated/openpnm.phase.Phase.pores", "modules/generated/openpnm.phase.Phase.props", "modules/generated/openpnm.phase.Phase.regenerate_models", "modules/generated/openpnm.phase.Phase.run_model", "modules/generated/openpnm.phase.Phase.set_label", "modules/generated/openpnm.phase.Phase.setdefault", "modules/generated/openpnm.phase.Phase.throats", "modules/generated/openpnm.phase.Phase.to_indices", "modules/generated/openpnm.phase.Phase.to_mask", "modules/generated/openpnm.phase.Phase.update", "modules/generated/openpnm.phase.Phase.values", "modules/generated/openpnm.phase.Species", "modules/generated/openpnm.phase.Species.add_model", "modules/generated/openpnm.phase.Species.add_model_collection", "modules/generated/openpnm.phase.Species.clear", "modules/generated/openpnm.phase.Species.copy", "modules/generated/openpnm.phase.Species.filter_by_label", "modules/generated/openpnm.phase.Species.fromkeys", "modules/generated/openpnm.phase.Species.get", "modules/generated/openpnm.phase.Species.get_conduit_data", "modules/generated/openpnm.phase.Species.interpolate_data", "modules/generated/openpnm.phase.Species.items", "modules/generated/openpnm.phase.Species.keys", "modules/generated/openpnm.phase.Species.labels", "modules/generated/openpnm.phase.Species.num_pores", "modules/generated/openpnm.phase.Species.num_throats", "modules/generated/openpnm.phase.Species.pop", "modules/generated/openpnm.phase.Species.popitem", "modules/generated/openpnm.phase.Species.pores", "modules/generated/openpnm.phase.Species.props", "modules/generated/openpnm.phase.Species.regenerate_models", "modules/generated/openpnm.phase.Species.run_model", "modules/generated/openpnm.phase.Species.set_label", "modules/generated/openpnm.phase.Species.setdefault", "modules/generated/openpnm.phase.Species.throats", "modules/generated/openpnm.phase.Species.to_indices", "modules/generated/openpnm.phase.Species.to_mask", "modules/generated/openpnm.phase.Species.update", "modules/generated/openpnm.phase.Species.values", "modules/generated/openpnm.phase.StandardGas", "modules/generated/openpnm.phase.StandardGas.add_model", "modules/generated/openpnm.phase.StandardGas.add_model_collection", "modules/generated/openpnm.phase.StandardGas.clear", "modules/generated/openpnm.phase.StandardGas.copy", "modules/generated/openpnm.phase.StandardGas.filter_by_label", "modules/generated/openpnm.phase.StandardGas.fromkeys", "modules/generated/openpnm.phase.StandardGas.get", "modules/generated/openpnm.phase.StandardGas.get_conduit_data", "modules/generated/openpnm.phase.StandardGas.interpolate_data", "modules/generated/openpnm.phase.StandardGas.items", "modules/generated/openpnm.phase.StandardGas.keys", "modules/generated/openpnm.phase.StandardGas.labels", "modules/generated/openpnm.phase.StandardGas.num_pores", "modules/generated/openpnm.phase.StandardGas.num_throats", "modules/generated/openpnm.phase.StandardGas.pop", "modules/generated/openpnm.phase.StandardGas.popitem", "modules/generated/openpnm.phase.StandardGas.pores", "modules/generated/openpnm.phase.StandardGas.props", "modules/generated/openpnm.phase.StandardGas.regenerate_models", "modules/generated/openpnm.phase.StandardGas.run_model", "modules/generated/openpnm.phase.StandardGas.set_label", "modules/generated/openpnm.phase.StandardGas.setdefault", "modules/generated/openpnm.phase.StandardGas.throats", "modules/generated/openpnm.phase.StandardGas.to_indices", "modules/generated/openpnm.phase.StandardGas.to_mask", "modules/generated/openpnm.phase.StandardGas.update", "modules/generated/openpnm.phase.StandardGas.values", "modules/generated/openpnm.phase.StandardGasMixture", "modules/generated/openpnm.phase.StandardGasMixture.add_comp", "modules/generated/openpnm.phase.StandardGasMixture.add_model", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardGasMixture.clear", "modules/generated/openpnm.phase.StandardGasMixture.copy", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys", "modules/generated/openpnm.phase.StandardGasMixture.get", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data", "modules/generated/openpnm.phase.StandardGasMixture.items", "modules/generated/openpnm.phase.StandardGasMixture.keys", "modules/generated/openpnm.phase.StandardGasMixture.labels", "modules/generated/openpnm.phase.StandardGasMixture.num_pores", "modules/generated/openpnm.phase.StandardGasMixture.num_throats", "modules/generated/openpnm.phase.StandardGasMixture.pop", "modules/generated/openpnm.phase.StandardGasMixture.popitem", "modules/generated/openpnm.phase.StandardGasMixture.pores", "modules/generated/openpnm.phase.StandardGasMixture.props", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp", "modules/generated/openpnm.phase.StandardGasMixture.run_model", "modules/generated/openpnm.phase.StandardGasMixture.set_label", "modules/generated/openpnm.phase.StandardGasMixture.setdefault", "modules/generated/openpnm.phase.StandardGasMixture.throats", "modules/generated/openpnm.phase.StandardGasMixture.to_indices", "modules/generated/openpnm.phase.StandardGasMixture.to_mask", "modules/generated/openpnm.phase.StandardGasMixture.update", "modules/generated/openpnm.phase.StandardGasMixture.values", "modules/generated/openpnm.phase.StandardGasMixture.y", "modules/generated/openpnm.phase.StandardLiquid", "modules/generated/openpnm.phase.StandardLiquid.add_model", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection", "modules/generated/openpnm.phase.StandardLiquid.clear", "modules/generated/openpnm.phase.StandardLiquid.copy", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label", "modules/generated/openpnm.phase.StandardLiquid.fromkeys", "modules/generated/openpnm.phase.StandardLiquid.get", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data", "modules/generated/openpnm.phase.StandardLiquid.items", "modules/generated/openpnm.phase.StandardLiquid.keys", "modules/generated/openpnm.phase.StandardLiquid.labels", "modules/generated/openpnm.phase.StandardLiquid.num_pores", "modules/generated/openpnm.phase.StandardLiquid.num_throats", "modules/generated/openpnm.phase.StandardLiquid.pop", "modules/generated/openpnm.phase.StandardLiquid.popitem", "modules/generated/openpnm.phase.StandardLiquid.pores", "modules/generated/openpnm.phase.StandardLiquid.props", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models", "modules/generated/openpnm.phase.StandardLiquid.run_model", "modules/generated/openpnm.phase.StandardLiquid.set_label", "modules/generated/openpnm.phase.StandardLiquid.setdefault", "modules/generated/openpnm.phase.StandardLiquid.throats", "modules/generated/openpnm.phase.StandardLiquid.to_indices", "modules/generated/openpnm.phase.StandardLiquid.to_mask", "modules/generated/openpnm.phase.StandardLiquid.update", "modules/generated/openpnm.phase.StandardLiquid.values", "modules/generated/openpnm.phase.StandardLiquidMixture", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardLiquidMixture.clear", "modules/generated/openpnm.phase.StandardLiquidMixture.copy", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys", "modules/generated/openpnm.phase.StandardLiquidMixture.get", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data", "modules/generated/openpnm.phase.StandardLiquidMixture.items", "modules/generated/openpnm.phase.StandardLiquidMixture.keys", "modules/generated/openpnm.phase.StandardLiquidMixture.labels", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats", "modules/generated/openpnm.phase.StandardLiquidMixture.pop", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem", "modules/generated/openpnm.phase.StandardLiquidMixture.pores", "modules/generated/openpnm.phase.StandardLiquidMixture.props", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault", "modules/generated/openpnm.phase.StandardLiquidMixture.throats", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask", "modules/generated/openpnm.phase.StandardLiquidMixture.update", "modules/generated/openpnm.phase.StandardLiquidMixture.values", "modules/generated/openpnm.phase.StandardLiquidMixture.x", "modules/generated/openpnm.phase.Water", "modules/generated/openpnm.phase.Water.add_model", "modules/generated/openpnm.phase.Water.add_model_collection", "modules/generated/openpnm.phase.Water.clear", "modules/generated/openpnm.phase.Water.copy", "modules/generated/openpnm.phase.Water.filter_by_label", "modules/generated/openpnm.phase.Water.fromkeys", "modules/generated/openpnm.phase.Water.get", "modules/generated/openpnm.phase.Water.get_conduit_data", "modules/generated/openpnm.phase.Water.interpolate_data", "modules/generated/openpnm.phase.Water.items", "modules/generated/openpnm.phase.Water.keys", "modules/generated/openpnm.phase.Water.labels", "modules/generated/openpnm.phase.Water.num_pores", "modules/generated/openpnm.phase.Water.num_throats", "modules/generated/openpnm.phase.Water.pop", "modules/generated/openpnm.phase.Water.popitem", "modules/generated/openpnm.phase.Water.pores", "modules/generated/openpnm.phase.Water.props", "modules/generated/openpnm.phase.Water.regenerate_models", "modules/generated/openpnm.phase.Water.run_model", "modules/generated/openpnm.phase.Water.set_label", "modules/generated/openpnm.phase.Water.setdefault", "modules/generated/openpnm.phase.Water.throats", "modules/generated/openpnm.phase.Water.to_indices", "modules/generated/openpnm.phase.Water.to_mask", "modules/generated/openpnm.phase.Water.update", "modules/generated/openpnm.phase.Water.values", "modules/generated/openpnm.solvers", "modules/generated/openpnm.solvers.BaseSolver", "modules/generated/openpnm.solvers.BaseSolver.solve", "modules/generated/openpnm.solvers.DirectSolver", "modules/generated/openpnm.solvers.DirectSolver.solve", "modules/generated/openpnm.solvers.IterativeSolver", "modules/generated/openpnm.solvers.IterativeSolver.solve", "modules/generated/openpnm.solvers.PETScLinearSolver", "modules/generated/openpnm.solvers.PETScLinearSolver.solve", "modules/generated/openpnm.solvers.PardisoSpsolve", "modules/generated/openpnm.solvers.PardisoSpsolve.solve", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.solve", "modules/generated/openpnm.solvers.ScipyCG", "modules/generated/openpnm.solvers.ScipyCG.solve", "modules/generated/openpnm.solvers.ScipySpsolve", "modules/generated/openpnm.solvers.ScipySpsolve.solve", "modules/generated/openpnm.topotools", "modules/generated/openpnm.topotools.add_boundary_pores", "modules/generated/openpnm.topotools.add_reservoir_pore", "modules/generated/openpnm.topotools.bond_percolation", "modules/generated/openpnm.topotools.clone_pores", "modules/generated/openpnm.topotools.connect_pores", "modules/generated/openpnm.topotools.conns_to_am", "modules/generated/openpnm.topotools.dimensionality", "modules/generated/openpnm.topotools.drop_sites", "modules/generated/openpnm.topotools.extend", "modules/generated/openpnm.topotools.filter_pores_by_z", "modules/generated/openpnm.topotools.find_clusters", "modules/generated/openpnm.topotools.find_connected_sites", "modules/generated/openpnm.topotools.find_connecting_bonds", "modules/generated/openpnm.topotools.find_interface_throats", "modules/generated/openpnm.topotools.find_isolated_clusters", "modules/generated/openpnm.topotools.find_neighbor_bonds", "modules/generated/openpnm.topotools.find_neighbor_sites", "modules/generated/openpnm.topotools.find_path", "modules/generated/openpnm.topotools.find_surface_pores", "modules/generated/openpnm.topotools.generate_base_points", "modules/generated/openpnm.topotools.get_domain_area", "modules/generated/openpnm.topotools.get_domain_length", "modules/generated/openpnm.topotools.get_shape", "modules/generated/openpnm.topotools.get_spacing", "modules/generated/openpnm.topotools.hull_centroid", "modules/generated/openpnm.topotools.is_fully_connected", "modules/generated/openpnm.topotools.iscoplanar", "modules/generated/openpnm.topotools.isoutside", "modules/generated/openpnm.topotools.ispercolating", "modules/generated/openpnm.topotools.issymmetric", "modules/generated/openpnm.topotools.istriangular", "modules/generated/openpnm.topotools.istril", "modules/generated/openpnm.topotools.istriu", "modules/generated/openpnm.topotools.label_faces", "modules/generated/openpnm.topotools.merge_networks", "modules/generated/openpnm.topotools.merge_pores", "modules/generated/openpnm.topotools.reduce_coordination", "modules/generated/openpnm.topotools.reflect_base_points", "modules/generated/openpnm.topotools.rotate_coords", "modules/generated/openpnm.topotools.shear_coords", "modules/generated/openpnm.topotools.site_percolation", "modules/generated/openpnm.topotools.stitch", "modules/generated/openpnm.topotools.template_cylinder_annulus", "modules/generated/openpnm.topotools.template_sphere_shell", "modules/generated/openpnm.topotools.tri_to_am", "modules/generated/openpnm.topotools.trim", "modules/generated/openpnm.topotools.trim_disconnected_clusters", "modules/generated/openpnm.topotools.vor_to_am", "modules/generated/openpnm.utils", "modules/generated/openpnm.utils.Docorator", "modules/generated/openpnm.utils.Docorator.__call__", "modules/generated/openpnm.utils.Docorator.dedent", "modules/generated/openpnm.utils.Docorator.dedents", "modules/generated/openpnm.utils.Docorator.delete_kwargs", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s", "modules/generated/openpnm.utils.Docorator.delete_params", "modules/generated/openpnm.utils.Docorator.delete_params_s", "modules/generated/openpnm.utils.Docorator.delete_types", "modules/generated/openpnm.utils.Docorator.delete_types_s", "modules/generated/openpnm.utils.Docorator.get_docstring", "modules/generated/openpnm.utils.Docorator.get_extended_summary", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf", "modules/generated/openpnm.utils.Docorator.get_full_description", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf", "modules/generated/openpnm.utils.Docorator.get_sections", "modules/generated/openpnm.utils.Docorator.get_sectionsf", "modules/generated/openpnm.utils.Docorator.get_summary", "modules/generated/openpnm.utils.Docorator.get_summaryf", "modules/generated/openpnm.utils.Docorator.keep_params", "modules/generated/openpnm.utils.Docorator.keep_params_s", "modules/generated/openpnm.utils.Docorator.keep_types", "modules/generated/openpnm.utils.Docorator.keep_types_s", "modules/generated/openpnm.utils.Docorator.save_docstring", "modules/generated/openpnm.utils.Docorator.with_indent", "modules/generated/openpnm.utils.Docorator.with_indents", "modules/generated/openpnm.utils.HealthDict", "modules/generated/openpnm.utils.HealthDict.clear", "modules/generated/openpnm.utils.HealthDict.copy", "modules/generated/openpnm.utils.HealthDict.fromkeys", "modules/generated/openpnm.utils.HealthDict.get", "modules/generated/openpnm.utils.HealthDict.items", "modules/generated/openpnm.utils.HealthDict.keys", "modules/generated/openpnm.utils.HealthDict.pop", "modules/generated/openpnm.utils.HealthDict.popitem", "modules/generated/openpnm.utils.HealthDict.setdefault", "modules/generated/openpnm.utils.HealthDict.update", "modules/generated/openpnm.utils.HealthDict.values", "modules/generated/openpnm.utils.NestedDict", "modules/generated/openpnm.utils.NestedDict.clear", "modules/generated/openpnm.utils.NestedDict.copy", "modules/generated/openpnm.utils.NestedDict.fromkeys", "modules/generated/openpnm.utils.NestedDict.get", "modules/generated/openpnm.utils.NestedDict.items", "modules/generated/openpnm.utils.NestedDict.keys", "modules/generated/openpnm.utils.NestedDict.pop", "modules/generated/openpnm.utils.NestedDict.popitem", "modules/generated/openpnm.utils.NestedDict.setdefault", "modules/generated/openpnm.utils.NestedDict.to_dict", "modules/generated/openpnm.utils.NestedDict.unravel", "modules/generated/openpnm.utils.NestedDict.update", "modules/generated/openpnm.utils.NestedDict.values", "modules/generated/openpnm.utils.PrintableDict", "modules/generated/openpnm.utils.PrintableDict.clear", "modules/generated/openpnm.utils.PrintableDict.copy", "modules/generated/openpnm.utils.PrintableDict.fromkeys", "modules/generated/openpnm.utils.PrintableDict.get", "modules/generated/openpnm.utils.PrintableDict.items", "modules/generated/openpnm.utils.PrintableDict.keys", "modules/generated/openpnm.utils.PrintableDict.pop", "modules/generated/openpnm.utils.PrintableDict.popitem", "modules/generated/openpnm.utils.PrintableDict.setdefault", "modules/generated/openpnm.utils.PrintableDict.update", "modules/generated/openpnm.utils.PrintableDict.values", "modules/generated/openpnm.utils.PrintableList", "modules/generated/openpnm.utils.PrintableList.append", "modules/generated/openpnm.utils.PrintableList.clear", "modules/generated/openpnm.utils.PrintableList.copy", "modules/generated/openpnm.utils.PrintableList.count", "modules/generated/openpnm.utils.PrintableList.extend", "modules/generated/openpnm.utils.PrintableList.index", "modules/generated/openpnm.utils.PrintableList.insert", "modules/generated/openpnm.utils.PrintableList.pop", "modules/generated/openpnm.utils.PrintableList.remove", "modules/generated/openpnm.utils.PrintableList.reverse", "modules/generated/openpnm.utils.PrintableList.sort", "modules/generated/openpnm.utils.Project", "modules/generated/openpnm.utils.Project.append", "modules/generated/openpnm.utils.Project.clear", "modules/generated/openpnm.utils.Project.copy", "modules/generated/openpnm.utils.Project.count", "modules/generated/openpnm.utils.Project.extend", "modules/generated/openpnm.utils.Project.index", "modules/generated/openpnm.utils.Project.insert", "modules/generated/openpnm.utils.Project.pop", "modules/generated/openpnm.utils.Project.remove", "modules/generated/openpnm.utils.Project.reverse", "modules/generated/openpnm.utils.Project.sort", "modules/generated/openpnm.utils.SettingsAttr", "modules/generated/openpnm.utils.TypedList", "modules/generated/openpnm.utils.TypedList.append", "modules/generated/openpnm.utils.TypedList.clear", "modules/generated/openpnm.utils.TypedList.copy", "modules/generated/openpnm.utils.TypedList.count", "modules/generated/openpnm.utils.TypedList.extend", "modules/generated/openpnm.utils.TypedList.index", "modules/generated/openpnm.utils.TypedList.insert", "modules/generated/openpnm.utils.TypedList.pop", "modules/generated/openpnm.utils.TypedList.remove", "modules/generated/openpnm.utils.TypedList.reverse", "modules/generated/openpnm.utils.TypedList.sort", "modules/generated/openpnm.utils.TypedMixin", "modules/generated/openpnm.utils.TypedSet", "modules/generated/openpnm.utils.TypedSet.add", "modules/generated/openpnm.utils.TypedSet.clear", "modules/generated/openpnm.utils.TypedSet.copy", "modules/generated/openpnm.utils.TypedSet.difference", "modules/generated/openpnm.utils.TypedSet.difference_update", "modules/generated/openpnm.utils.TypedSet.discard", "modules/generated/openpnm.utils.TypedSet.intersection", "modules/generated/openpnm.utils.TypedSet.intersection_update", "modules/generated/openpnm.utils.TypedSet.isdisjoint", "modules/generated/openpnm.utils.TypedSet.issubset", "modules/generated/openpnm.utils.TypedSet.issuperset", "modules/generated/openpnm.utils.TypedSet.pop", "modules/generated/openpnm.utils.TypedSet.remove", "modules/generated/openpnm.utils.TypedSet.symmetric_difference", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update", "modules/generated/openpnm.utils.TypedSet.union", "modules/generated/openpnm.utils.TypedSet.update", "modules/generated/openpnm.utils.Workspace", "modules/generated/openpnm.utils.Workspace.clear", "modules/generated/openpnm.utils.Workspace.close_project", "modules/generated/openpnm.utils.Workspace.copy", "modules/generated/openpnm.utils.Workspace.copy_project", "modules/generated/openpnm.utils.Workspace.fromkeys", "modules/generated/openpnm.utils.Workspace.get", "modules/generated/openpnm.utils.Workspace.items", "modules/generated/openpnm.utils.Workspace.keys", "modules/generated/openpnm.utils.Workspace.load_project", "modules/generated/openpnm.utils.Workspace.load_workspace", "modules/generated/openpnm.utils.Workspace.new_project", "modules/generated/openpnm.utils.Workspace.pop", "modules/generated/openpnm.utils.Workspace.popitem", "modules/generated/openpnm.utils.Workspace.save_project", "modules/generated/openpnm.utils.Workspace.save_workspace", "modules/generated/openpnm.utils.Workspace.setdefault", "modules/generated/openpnm.utils.Workspace.update", "modules/generated/openpnm.utils.Workspace.values", "modules/generated/openpnm.utils.check_data_health", "modules/generated/openpnm.utils.check_network_health", "modules/generated/openpnm.utils.dict_to_struct", "modules/generated/openpnm.utils.flat_list", "modules/generated/openpnm.utils.get_mixture_model_args", "modules/generated/openpnm.utils.get_printable_labels", "modules/generated/openpnm.utils.get_printable_props", "modules/generated/openpnm.utils.ignore_warnings", "modules/generated/openpnm.utils.is_symmetric", "modules/generated/openpnm.utils.is_transient", "modules/generated/openpnm.utils.is_valid_propname", "modules/generated/openpnm.utils.methods_to_table", "modules/generated/openpnm.utils.models_to_table", "modules/generated/openpnm.utils.sanitize_dict", "modules/generated/openpnm.utils.struct_to_dict", "modules/generated/openpnm.visualization", "modules/generated/openpnm.visualization.draw_conduit", "modules/generated/openpnm.visualization.generate_voxel_image", "modules/generated/openpnm.visualization.plot_connections", "modules/generated/openpnm.visualization.plot_coordinates", "modules/generated/openpnm.visualization.plot_networkx", "modules/generated/openpnm.visualization.plot_notebook", "modules/generated/openpnm.visualization.plot_tutorial", "modules/generated/openpnm.visualization.plot_vispy", "modules/generated/openpnm.visualization.set_mpl_style", "modules/index"], "filenames": ["_examples/applications.rst", "_examples/index.rst", "_examples/reference.rst", "_examples/tutorials.rst", "examples/applications/absolute_permeability.ipynb", "examples/applications/adjusting_pore_size_distributions.ipynb", "examples/applications/dispersion_coefficient.ipynb", "examples/applications/effective_diffusivity_and_tortuosity.ipynb", "examples/applications/formation_factor.ipynb", "examples/applications/mercury_intrusion.ipynb", "examples/applications/porosity.ipynb", "examples/applications/relative_diffusivity.ipynb", "examples/applications/relative_permeability.ipynb", "examples/contrib/README.rst", "examples/getting_started.ipynb", "examples/reference/architecture/pore_scale_models.ipynb", "examples/reference/architecture/settings_attribute_machinery.ipynb", "examples/reference/architecture/workspace_and_projects.ipynb", "examples/reference/networks/managing_clustered_networks.ipynb", "examples/reference/simulations/available_matrix_solvers.ipynb", "examples/reference/simulations/basic_transport.ipynb", "examples/reference/simulations/explanation_of_units.ipynb", "examples/reference/simulations/reactive_transport.ipynb", "examples/reference/simulations/size_factors_and_transport_conductance.ipynb", "examples/reference/simulations/transient_transport.ipynb", "examples/tutorials/01_numerical_python_primer.ipynb", "examples/tutorials/02_network_generation_and_visualization.ipynb", "examples/tutorials/03_data_and_topology_storage.ipynb", "examples/tutorials/04_graph_queries_and_manipulation.ipynb", "examples/tutorials/05_defining_geometry.ipynb", "examples/tutorials/06_labels_and_domains.ipynb", "examples/tutorials/07_phases_and_mixtures.ipynb", "examples/tutorials/08_simulating_transport.ipynb", "examples/tutorials/09_simulating_invasion.ipynb", "examples/tutorials/10_visualization_options.ipynb", "index.rst", "installation.rst", "modules/generated/openpnm.algorithms.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.Algorithm.rst", "modules/generated/openpnm.algorithms.Algorithm.clear.rst", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs.rst", "modules/generated/openpnm.algorithms.Algorithm.copy.rst", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label.rst", "modules/generated/openpnm.algorithms.Algorithm.fromkeys.rst", "modules/generated/openpnm.algorithms.Algorithm.get.rst", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data.rst", "modules/generated/openpnm.algorithms.Algorithm.items.rst", "modules/generated/openpnm.algorithms.Algorithm.keys.rst", "modules/generated/openpnm.algorithms.Algorithm.labels.rst", "modules/generated/openpnm.algorithms.Algorithm.num_pores.rst", "modules/generated/openpnm.algorithms.Algorithm.num_throats.rst", "modules/generated/openpnm.algorithms.Algorithm.pop.rst", "modules/generated/openpnm.algorithms.Algorithm.popitem.rst", "modules/generated/openpnm.algorithms.Algorithm.pores.rst", "modules/generated/openpnm.algorithms.Algorithm.props.rst", "modules/generated/openpnm.algorithms.Algorithm.set_BC.rst", "modules/generated/openpnm.algorithms.Algorithm.set_label.rst", "modules/generated/openpnm.algorithms.Algorithm.setdefault.rst", "modules/generated/openpnm.algorithms.Algorithm.throats.rst", "modules/generated/openpnm.algorithms.Algorithm.to_indices.rst", "modules/generated/openpnm.algorithms.Algorithm.to_mask.rst", "modules/generated/openpnm.algorithms.Algorithm.update.rst", "modules/generated/openpnm.algorithms.Algorithm.values.rst", "modules/generated/openpnm.algorithms.Drainage.rst", "modules/generated/openpnm.algorithms.Drainage.apply_trapping.rst", "modules/generated/openpnm.algorithms.Drainage.clear.rst", "modules/generated/openpnm.algorithms.Drainage.clear_BCs.rst", "modules/generated/openpnm.algorithms.Drainage.copy.rst", "modules/generated/openpnm.algorithms.Drainage.filter_by_label.rst", "modules/generated/openpnm.algorithms.Drainage.fromkeys.rst", "modules/generated/openpnm.algorithms.Drainage.get.rst", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Drainage.interpolate_data.rst", "modules/generated/openpnm.algorithms.Drainage.items.rst", "modules/generated/openpnm.algorithms.Drainage.keys.rst", "modules/generated/openpnm.algorithms.Drainage.labels.rst", "modules/generated/openpnm.algorithms.Drainage.num_pores.rst", "modules/generated/openpnm.algorithms.Drainage.num_throats.rst", "modules/generated/openpnm.algorithms.Drainage.pc_curve.rst", "modules/generated/openpnm.algorithms.Drainage.pop.rst", "modules/generated/openpnm.algorithms.Drainage.popitem.rst", "modules/generated/openpnm.algorithms.Drainage.pores.rst", "modules/generated/openpnm.algorithms.Drainage.props.rst", "modules/generated/openpnm.algorithms.Drainage.reset.rst", "modules/generated/openpnm.algorithms.Drainage.run.rst", "modules/generated/openpnm.algorithms.Drainage.set_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_label.rst", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.setdefault.rst", "modules/generated/openpnm.algorithms.Drainage.throats.rst", "modules/generated/openpnm.algorithms.Drainage.to_indices.rst", "modules/generated/openpnm.algorithms.Drainage.to_mask.rst", "modules/generated/openpnm.algorithms.Drainage.update.rst", "modules/generated/openpnm.algorithms.Drainage.values.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.FourierConduction.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.copy.rst", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.FourierConduction.get.rst", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.items.rst", "modules/generated/openpnm.algorithms.FourierConduction.keys.rst", "modules/generated/openpnm.algorithms.FourierConduction.labels.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.pop.rst", "modules/generated/openpnm.algorithms.FourierConduction.popitem.rst", "modules/generated/openpnm.algorithms.FourierConduction.pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.props.rst", "modules/generated/openpnm.algorithms.FourierConduction.rate.rst", "modules/generated/openpnm.algorithms.FourierConduction.run.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_source.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.setdefault.rst", "modules/generated/openpnm.algorithms.FourierConduction.throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_indices.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_mask.rst", "modules/generated/openpnm.algorithms.FourierConduction.update.rst", "modules/generated/openpnm.algorithms.FourierConduction.values.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.copy.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.items.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.keys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.labels.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pop.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.props.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.reset.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.run.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.update.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.values.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.copy.rst", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.items.rst", "modules/generated/openpnm.algorithms.OhmicConduction.keys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.labels.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pop.rst", "modules/generated/openpnm.algorithms.OhmicConduction.popitem.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.props.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rate.rst", "modules/generated/openpnm.algorithms.OhmicConduction.run.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_source.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault.rst", "modules/generated/openpnm.algorithms.OhmicConduction.throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask.rst", "modules/generated/openpnm.algorithms.OhmicConduction.update.rst", "modules/generated/openpnm.algorithms.OhmicConduction.values.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.StokesFlow.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.copy.rst", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys.rst", "modules/generated/openpnm.algorithms.StokesFlow.get.rst", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.items.rst", "modules/generated/openpnm.algorithms.StokesFlow.keys.rst", "modules/generated/openpnm.algorithms.StokesFlow.labels.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.pop.rst", "modules/generated/openpnm.algorithms.StokesFlow.popitem.rst", "modules/generated/openpnm.algorithms.StokesFlow.pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.props.rst", "modules/generated/openpnm.algorithms.StokesFlow.rate.rst", "modules/generated/openpnm.algorithms.StokesFlow.run.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_source.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.setdefault.rst", "modules/generated/openpnm.algorithms.StokesFlow.throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_indices.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_mask.rst", "modules/generated/openpnm.algorithms.StokesFlow.update.rst", "modules/generated/openpnm.algorithms.StokesFlow.values.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.copy.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.get.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.items.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.keys.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.labels.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.num_pores.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.num_throats.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.pop.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.popitem.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.pores.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.props.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.rate.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.run.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_BC.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_label.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_source.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.setdefault.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.throats.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.to_indices.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.to_mask.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.update.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.values.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.Transport.rst", "modules/generated/openpnm.algorithms.Transport.clear.rst", "modules/generated/openpnm.algorithms.Transport.clear_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.Transport.copy.rst", "modules/generated/openpnm.algorithms.Transport.filter_by_label.rst", "modules/generated/openpnm.algorithms.Transport.fromkeys.rst", "modules/generated/openpnm.algorithms.Transport.get.rst", "modules/generated/openpnm.algorithms.Transport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Transport.interpolate_data.rst", "modules/generated/openpnm.algorithms.Transport.items.rst", "modules/generated/openpnm.algorithms.Transport.keys.rst", "modules/generated/openpnm.algorithms.Transport.labels.rst", "modules/generated/openpnm.algorithms.Transport.num_pores.rst", "modules/generated/openpnm.algorithms.Transport.num_throats.rst", "modules/generated/openpnm.algorithms.Transport.pop.rst", "modules/generated/openpnm.algorithms.Transport.popitem.rst", "modules/generated/openpnm.algorithms.Transport.pores.rst", "modules/generated/openpnm.algorithms.Transport.props.rst", "modules/generated/openpnm.algorithms.Transport.rate.rst", "modules/generated/openpnm.algorithms.Transport.run.rst", "modules/generated/openpnm.algorithms.Transport.set_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_label.rst", "modules/generated/openpnm.algorithms.Transport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_value_BC.rst", "modules/generated/openpnm.algorithms.Transport.setdefault.rst", "modules/generated/openpnm.algorithms.Transport.throats.rst", "modules/generated/openpnm.algorithms.Transport.to_indices.rst", "modules/generated/openpnm.algorithms.Transport.to_mask.rst", "modules/generated/openpnm.algorithms.Transport.update.rst", "modules/generated/openpnm.algorithms.Transport.values.rst", "modules/generated/openpnm.contrib.rst", "modules/generated/openpnm.contrib.MultiPhase.rst", "modules/generated/openpnm.contrib.MultiPhase.add_model.rst", "modules/generated/openpnm.contrib.MultiPhase.add_model_collection.rst", "modules/generated/openpnm.contrib.MultiPhase.add_phases.rst", "modules/generated/openpnm.contrib.MultiPhase.clear.rst", "modules/generated/openpnm.contrib.MultiPhase.copy.rst", "modules/generated/openpnm.contrib.MultiPhase.filter_by_label.rst", "modules/generated/openpnm.contrib.MultiPhase.fromkeys.rst", "modules/generated/openpnm.contrib.MultiPhase.get.rst", "modules/generated/openpnm.contrib.MultiPhase.get_conduit_data.rst", "modules/generated/openpnm.contrib.MultiPhase.interpolate_data.rst", "modules/generated/openpnm.contrib.MultiPhase.items.rst", "modules/generated/openpnm.contrib.MultiPhase.keys.rst", "modules/generated/openpnm.contrib.MultiPhase.labels.rst", "modules/generated/openpnm.contrib.MultiPhase.num_pores.rst", "modules/generated/openpnm.contrib.MultiPhase.num_throats.rst", "modules/generated/openpnm.contrib.MultiPhase.pop.rst", "modules/generated/openpnm.contrib.MultiPhase.popitem.rst", "modules/generated/openpnm.contrib.MultiPhase.pores.rst", "modules/generated/openpnm.contrib.MultiPhase.props.rst", "modules/generated/openpnm.contrib.MultiPhase.regenerate_models.rst", "modules/generated/openpnm.contrib.MultiPhase.run_model.rst", "modules/generated/openpnm.contrib.MultiPhase.set_binary_partition_coef.rst", "modules/generated/openpnm.contrib.MultiPhase.set_label.rst", "modules/generated/openpnm.contrib.MultiPhase.set_occupancy.rst", "modules/generated/openpnm.contrib.MultiPhase.setdefault.rst", "modules/generated/openpnm.contrib.MultiPhase.throats.rst", "modules/generated/openpnm.contrib.MultiPhase.to_indices.rst", "modules/generated/openpnm.contrib.MultiPhase.to_mask.rst", "modules/generated/openpnm.contrib.MultiPhase.update.rst", "modules/generated/openpnm.contrib.MultiPhase.values.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear_BCs.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.copy.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.filter_by_label.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.fromkeys.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.get.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.get_conduit_data.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.interpolate_data.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.items.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.keys.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.labels.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_pores.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_throats.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.pop.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.popitem.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.pores.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.props.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.run.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_BC.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_label.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.setdefault.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.throats.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_indices.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_mask.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.update.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.values.rst", "modules/generated/openpnm.contrib.multiphase_diffusion.rst", "modules/generated/openpnm.core.rst", "modules/generated/openpnm.core.Base2.rst", "modules/generated/openpnm.core.Base2.clear.rst", "modules/generated/openpnm.core.Base2.copy.rst", "modules/generated/openpnm.core.Base2.fromkeys.rst", "modules/generated/openpnm.core.Base2.get.rst", "modules/generated/openpnm.core.Base2.get_conduit_data.rst", "modules/generated/openpnm.core.Base2.interpolate_data.rst", "modules/generated/openpnm.core.Base2.items.rst", "modules/generated/openpnm.core.Base2.keys.rst", "modules/generated/openpnm.core.Base2.pop.rst", "modules/generated/openpnm.core.Base2.popitem.rst", "modules/generated/openpnm.core.Base2.props.rst", "modules/generated/openpnm.core.Base2.setdefault.rst", "modules/generated/openpnm.core.Base2.to_indices.rst", "modules/generated/openpnm.core.Base2.to_mask.rst", "modules/generated/openpnm.core.Base2.update.rst", "modules/generated/openpnm.core.Base2.values.rst", "modules/generated/openpnm.core.Domain.rst", "modules/generated/openpnm.core.Domain.add_model.rst", "modules/generated/openpnm.core.Domain.add_model_collection.rst", "modules/generated/openpnm.core.Domain.clear.rst", "modules/generated/openpnm.core.Domain.copy.rst", "modules/generated/openpnm.core.Domain.filter_by_label.rst", "modules/generated/openpnm.core.Domain.fromkeys.rst", "modules/generated/openpnm.core.Domain.get.rst", "modules/generated/openpnm.core.Domain.get_conduit_data.rst", "modules/generated/openpnm.core.Domain.interpolate_data.rst", "modules/generated/openpnm.core.Domain.items.rst", "modules/generated/openpnm.core.Domain.keys.rst", "modules/generated/openpnm.core.Domain.labels.rst", "modules/generated/openpnm.core.Domain.num_pores.rst", "modules/generated/openpnm.core.Domain.num_throats.rst", "modules/generated/openpnm.core.Domain.pop.rst", "modules/generated/openpnm.core.Domain.popitem.rst", "modules/generated/openpnm.core.Domain.pores.rst", "modules/generated/openpnm.core.Domain.props.rst", "modules/generated/openpnm.core.Domain.regenerate_models.rst", "modules/generated/openpnm.core.Domain.run_model.rst", "modules/generated/openpnm.core.Domain.set_label.rst", "modules/generated/openpnm.core.Domain.setdefault.rst", "modules/generated/openpnm.core.Domain.throats.rst", "modules/generated/openpnm.core.Domain.to_indices.rst", "modules/generated/openpnm.core.Domain.to_mask.rst", "modules/generated/openpnm.core.Domain.update.rst", "modules/generated/openpnm.core.Domain.values.rst", "modules/generated/openpnm.core.LabelMixin.rst", "modules/generated/openpnm.core.LabelMixin.filter_by_label.rst", "modules/generated/openpnm.core.LabelMixin.labels.rst", "modules/generated/openpnm.core.LabelMixin.num_pores.rst", "modules/generated/openpnm.core.LabelMixin.num_throats.rst", "modules/generated/openpnm.core.LabelMixin.pores.rst", "modules/generated/openpnm.core.LabelMixin.set_label.rst", "modules/generated/openpnm.core.LabelMixin.throats.rst", "modules/generated/openpnm.core.ModelWrapper.rst", "modules/generated/openpnm.core.ModelWrapper.__call__.rst", "modules/generated/openpnm.core.ModelWrapper.clear.rst", "modules/generated/openpnm.core.ModelWrapper.copy.rst", "modules/generated/openpnm.core.ModelWrapper.fromkeys.rst", "modules/generated/openpnm.core.ModelWrapper.get.rst", "modules/generated/openpnm.core.ModelWrapper.items.rst", "modules/generated/openpnm.core.ModelWrapper.keys.rst", "modules/generated/openpnm.core.ModelWrapper.pop.rst", "modules/generated/openpnm.core.ModelWrapper.popitem.rst", "modules/generated/openpnm.core.ModelWrapper.setdefault.rst", "modules/generated/openpnm.core.ModelWrapper.update.rst", "modules/generated/openpnm.core.ModelWrapper.values.rst", "modules/generated/openpnm.core.ModelsDict.rst", "modules/generated/openpnm.core.ModelsDict.clear.rst", "modules/generated/openpnm.core.ModelsDict.copy.rst", "modules/generated/openpnm.core.ModelsDict.dependency_graph.rst", "modules/generated/openpnm.core.ModelsDict.dependency_list.rst", "modules/generated/openpnm.core.ModelsDict.dependency_map.rst", "modules/generated/openpnm.core.ModelsDict.fromkeys.rst", "modules/generated/openpnm.core.ModelsDict.get.rst", "modules/generated/openpnm.core.ModelsDict.items.rst", "modules/generated/openpnm.core.ModelsDict.keys.rst", "modules/generated/openpnm.core.ModelsDict.pop.rst", "modules/generated/openpnm.core.ModelsDict.popitem.rst", "modules/generated/openpnm.core.ModelsDict.setdefault.rst", "modules/generated/openpnm.core.ModelsDict.update.rst", "modules/generated/openpnm.core.ModelsDict.values.rst", "modules/generated/openpnm.core.ModelsMixin2.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection.rst", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models.rst", "modules/generated/openpnm.core.ModelsMixin2.run_model.rst", "modules/generated/openpnm.core.ParserMixin.rst", "modules/generated/openpnm.integrators.rst", "modules/generated/openpnm.integrators.Integrator.rst", "modules/generated/openpnm.integrators.ScipyRK45.rst", "modules/generated/openpnm.integrators.ScipyRK45.solve.rst", "modules/generated/openpnm.io.rst", "modules/generated/openpnm.io.network_from_csv.rst", "modules/generated/openpnm.io.network_from_jsongraph.rst", "modules/generated/openpnm.io.network_from_marock.rst", "modules/generated/openpnm.io.network_from_networkx.rst", "modules/generated/openpnm.io.network_from_pergeos.rst", "modules/generated/openpnm.io.network_from_porespy.rst", "modules/generated/openpnm.io.network_from_statoil.rst", "modules/generated/openpnm.io.network_to_comsol.rst", "modules/generated/openpnm.io.network_to_csv.rst", "modules/generated/openpnm.io.network_to_jsongraph.rst", "modules/generated/openpnm.io.network_to_networkx.rst", "modules/generated/openpnm.io.network_to_pandas.rst", "modules/generated/openpnm.io.network_to_pergeos.rst", "modules/generated/openpnm.io.network_to_salome.rst", "modules/generated/openpnm.io.network_to_stl.rst", "modules/generated/openpnm.io.print_hdf5.rst", "modules/generated/openpnm.io.project_to_csv.rst", "modules/generated/openpnm.io.project_to_dict.rst", "modules/generated/openpnm.io.project_to_hdf5.rst", "modules/generated/openpnm.io.project_to_pandas.rst", "modules/generated/openpnm.io.project_to_paraview.rst", "modules/generated/openpnm.io.project_to_vtk.rst", "modules/generated/openpnm.io.project_to_xdmf.rst", "modules/generated/openpnm.models.rst", "modules/generated/openpnm.models.collections.rst", "modules/generated/openpnm.models.collections.geometry.rst", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.collections.network.rst", "modules/generated/openpnm.models.collections.phase.rst", "modules/generated/openpnm.models.collections.phase.air.rst", "modules/generated/openpnm.models.collections.phase.gas.rst", "modules/generated/openpnm.models.collections.phase.liquid.rst", "modules/generated/openpnm.models.collections.phase.mercury.rst", "modules/generated/openpnm.models.collections.phase.water.rst", "modules/generated/openpnm.models.collections.physics.rst", "modules/generated/openpnm.models.collections.physics.basic.rst", "modules/generated/openpnm.models.collections.physics.standard.rst", "modules/generated/openpnm.models.geometry.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square.rst", "modules/generated/openpnm.models.geometry.pore_seed.rst", "modules/generated/openpnm.models.geometry.pore_seed.random.rst", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated.rst", "modules/generated/openpnm.models.geometry.pore_size.rst", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats.rst", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere.rst", "modules/generated/openpnm.models.geometry.pore_size.normal.rst", "modules/generated/openpnm.models.geometry.pore_size.random.rst", "modules/generated/openpnm.models.geometry.pore_size.weibull.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.square.rst", "modules/generated/openpnm.models.geometry.pore_volume.rst", "modules/generated/openpnm.models.geometry.pore_volume.circle.rst", "modules/generated/openpnm.models.geometry.pore_volume.cube.rst", "modules/generated/openpnm.models.geometry.pore_volume.effective.rst", "modules/generated/openpnm.models.geometry.pore_volume.sphere.rst", "modules/generated/openpnm.models.geometry.pore_volume.square.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow.rst", "modules/generated/openpnm.models.geometry.throat_centroid.rst", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.rst", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_seed.rst", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_seed.random.rst", "modules/generated/openpnm.models.geometry.throat_size.rst", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.throat_size.normal.rst", "modules/generated/openpnm.models.geometry.throat_size.random.rst", "modules/generated/openpnm.models.geometry.throat_size.weibull.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_vector.rst", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore.rst", "modules/generated/openpnm.models.geometry.throat_volume.rst", "modules/generated/openpnm.models.geometry.throat_volume.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_volume.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_volume.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_volume.lens.rst", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring.rst", "modules/generated/openpnm.models.geometry.throat_volume.rectangle.rst", "modules/generated/openpnm.models.misc.rst", "modules/generated/openpnm.models.misc.blank.rst", "modules/generated/openpnm.models.misc.clip.rst", "modules/generated/openpnm.models.misc.constant.rst", "modules/generated/openpnm.models.misc.difference.rst", "modules/generated/openpnm.models.misc.fraction.rst", "modules/generated/openpnm.models.misc.from_neighbor_pores.rst", "modules/generated/openpnm.models.misc.from_neighbor_throats.rst", "modules/generated/openpnm.models.misc.generic_distribution.rst", "modules/generated/openpnm.models.misc.generic_function.rst", "modules/generated/openpnm.models.misc.invert.rst", "modules/generated/openpnm.models.misc.linear.rst", "modules/generated/openpnm.models.misc.match_histogram.rst", "modules/generated/openpnm.models.misc.normal.rst", "modules/generated/openpnm.models.misc.normalize.rst", "modules/generated/openpnm.models.misc.polynomial.rst", "modules/generated/openpnm.models.misc.product.rst", "modules/generated/openpnm.models.misc.random.rst", "modules/generated/openpnm.models.misc.scaled.rst", "modules/generated/openpnm.models.misc.summation.rst", "modules/generated/openpnm.models.misc.weibull.rst", "modules/generated/openpnm.models.network.rst", "modules/generated/openpnm.models.network.bidirectional_throats.rst", "modules/generated/openpnm.models.network.cluster_number.rst", "modules/generated/openpnm.models.network.cluster_size.rst", "modules/generated/openpnm.models.network.coordination_number.rst", "modules/generated/openpnm.models.network.count_coincident_pores.rst", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_pore.rst", "modules/generated/openpnm.models.network.duplicate_throats.rst", "modules/generated/openpnm.models.network.find_coincident_pores.rst", "modules/generated/openpnm.models.network.gabriel_edges.rst", "modules/generated/openpnm.models.network.headless_throats.rst", "modules/generated/openpnm.models.network.isolated_pores.rst", "modules/generated/openpnm.models.network.looped_throats.rst", "modules/generated/openpnm.models.network.pore_to_pore_distance.rst", "modules/generated/openpnm.models.network.reversed_throats.rst", "modules/generated/openpnm.models.phase.rst", "modules/generated/openpnm.models.phase.chemicals_wrapper.rst", "modules/generated/openpnm.models.phase.critical_props.rst", "modules/generated/openpnm.models.phase.density.rst", "modules/generated/openpnm.models.phase.density.ideal_gas.rst", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD.rst", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD.rst", "modules/generated/openpnm.models.phase.density.mass_to_molar.rst", "modules/generated/openpnm.models.phase.density.water_correlation.rst", "modules/generated/openpnm.models.phase.diffusivity.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg.rst", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc.rst", "modules/generated/openpnm.models.phase.heat_capacity.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp.rst", "modules/generated/openpnm.models.phase.misc.rst", "modules/generated/openpnm.models.phase.misc.mix_and_match.rst", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.rst", "modules/generated/openpnm.models.phase.mixtures.from_component.rst", "modules/generated/openpnm.models.phase.mixtures.mixing_rule.rst", "modules/generated/openpnm.models.phase.mixtures.mole_summation.rst", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.salinity.rst", "modules/generated/openpnm.models.phase.partition_coefficient.rst", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water.rst", "modules/generated/openpnm.models.phase.surface_tension.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb.rst", "modules/generated/openpnm.models.phase.surface_tension.water_correlation.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation.rst", "modules/generated/openpnm.models.phase.vapor_pressure.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk.rst", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation.rst", "modules/generated/openpnm.models.phase.viscosity.rst", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls.rst", "modules/generated/openpnm.models.phase.viscosity.water_correlation.rst", "modules/generated/openpnm.models.physics.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif.rst", "modules/generated/openpnm.models.physics.capillary_pressure.rst", "modules/generated/openpnm.models.physics.capillary_pressure.purcell.rst", "modules/generated/openpnm.models.physics.capillary_pressure.washburn.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion.rst", "modules/generated/openpnm.models.physics.electrical_conductance.rst", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical.rst", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt.rst", "modules/generated/openpnm.models.physics.meniscus.rst", "modules/generated/openpnm.models.physics.meniscus.general_toroidal.rst", "modules/generated/openpnm.models.physics.meniscus.purcell.rst", "modules/generated/openpnm.models.physics.meniscus.sinusoidal.rst", "modules/generated/openpnm.models.physics.multiphase.rst", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance.rst", "modules/generated/openpnm.models.physics.multiphase.late_filling.rst", "modules/generated/openpnm.models.physics.source_terms.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage.rst", "modules/generated/openpnm.models.physics.source_terms.exponential.rst", "modules/generated/openpnm.models.physics.source_terms.general_symbolic.rst", "modules/generated/openpnm.models.physics.source_terms.linear.rst", "modules/generated/openpnm.models.physics.source_terms.logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.natural_exponential.rst", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.power_law.rst", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics.rst", "modules/generated/openpnm.models.physics.thermal_conductance.rst", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal.rst", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors.rst", "modules/generated/openpnm.network.rst", "modules/generated/openpnm.network.BodyCenteredCubic.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.BodyCenteredCubic.clear.rst", "modules/generated/openpnm.network.BodyCenteredCubic.copy.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.items.rst", "modules/generated/openpnm.network.BodyCenteredCubic.keys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.labels.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pop.rst", "modules/generated/openpnm.network.BodyCenteredCubic.popitem.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.props.rst", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.BodyCenteredCubic.run_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.set_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.BodyCenteredCubic.throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.BodyCenteredCubic.update.rst", "modules/generated/openpnm.network.BodyCenteredCubic.values.rst", "modules/generated/openpnm.network.Cubic.rst", "modules/generated/openpnm.network.Cubic.add_boundary_pores.rst", "modules/generated/openpnm.network.Cubic.add_model.rst", "modules/generated/openpnm.network.Cubic.add_model_collection.rst", "modules/generated/openpnm.network.Cubic.clear.rst", "modules/generated/openpnm.network.Cubic.copy.rst", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.filter_by_label.rst", "modules/generated/openpnm.network.Cubic.find_connected_pores.rst", "modules/generated/openpnm.network.Cubic.find_connecting_throat.rst", "modules/generated/openpnm.network.Cubic.find_nearby_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.Cubic.fromkeys.rst", "modules/generated/openpnm.network.Cubic.get.rst", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.get_conduit_data.rst", "modules/generated/openpnm.network.Cubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.interpolate_data.rst", "modules/generated/openpnm.network.Cubic.items.rst", "modules/generated/openpnm.network.Cubic.keys.rst", "modules/generated/openpnm.network.Cubic.labels.rst", "modules/generated/openpnm.network.Cubic.num_neighbors.rst", "modules/generated/openpnm.network.Cubic.num_pores.rst", "modules/generated/openpnm.network.Cubic.num_throats.rst", "modules/generated/openpnm.network.Cubic.pop.rst", "modules/generated/openpnm.network.Cubic.popitem.rst", "modules/generated/openpnm.network.Cubic.pores.rst", "modules/generated/openpnm.network.Cubic.props.rst", "modules/generated/openpnm.network.Cubic.regenerate_models.rst", "modules/generated/openpnm.network.Cubic.run_model.rst", "modules/generated/openpnm.network.Cubic.set_label.rst", "modules/generated/openpnm.network.Cubic.setdefault.rst", "modules/generated/openpnm.network.Cubic.throats.rst", "modules/generated/openpnm.network.Cubic.to_indices.rst", "modules/generated/openpnm.network.Cubic.to_mask.rst", "modules/generated/openpnm.network.Cubic.update.rst", "modules/generated/openpnm.network.Cubic.values.rst", "modules/generated/openpnm.network.CubicTemplate.rst", "modules/generated/openpnm.network.CubicTemplate.add_model.rst", "modules/generated/openpnm.network.CubicTemplate.add_model_collection.rst", "modules/generated/openpnm.network.CubicTemplate.clear.rst", "modules/generated/openpnm.network.CubicTemplate.copy.rst", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.filter_by_label.rst", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat.rst", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats.rst", "modules/generated/openpnm.network.CubicTemplate.fromkeys.rst", "modules/generated/openpnm.network.CubicTemplate.get.rst", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data.rst", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.interpolate_data.rst", "modules/generated/openpnm.network.CubicTemplate.items.rst", "modules/generated/openpnm.network.CubicTemplate.keys.rst", "modules/generated/openpnm.network.CubicTemplate.labels.rst", "modules/generated/openpnm.network.CubicTemplate.num_neighbors.rst", "modules/generated/openpnm.network.CubicTemplate.num_pores.rst", "modules/generated/openpnm.network.CubicTemplate.num_throats.rst", "modules/generated/openpnm.network.CubicTemplate.pop.rst", "modules/generated/openpnm.network.CubicTemplate.popitem.rst", "modules/generated/openpnm.network.CubicTemplate.pores.rst", "modules/generated/openpnm.network.CubicTemplate.props.rst", "modules/generated/openpnm.network.CubicTemplate.regenerate_models.rst", "modules/generated/openpnm.network.CubicTemplate.run_model.rst", "modules/generated/openpnm.network.CubicTemplate.set_label.rst", "modules/generated/openpnm.network.CubicTemplate.setdefault.rst", "modules/generated/openpnm.network.CubicTemplate.throats.rst", "modules/generated/openpnm.network.CubicTemplate.to_indices.rst", "modules/generated/openpnm.network.CubicTemplate.to_mask.rst", "modules/generated/openpnm.network.CubicTemplate.update.rst", "modules/generated/openpnm.network.CubicTemplate.values.rst", "modules/generated/openpnm.network.Delaunay.rst", "modules/generated/openpnm.network.Delaunay.add_model.rst", "modules/generated/openpnm.network.Delaunay.add_model_collection.rst", "modules/generated/openpnm.network.Delaunay.clear.rst", "modules/generated/openpnm.network.Delaunay.copy.rst", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.filter_by_label.rst", "modules/generated/openpnm.network.Delaunay.find_connected_pores.rst", "modules/generated/openpnm.network.Delaunay.find_connecting_throat.rst", "modules/generated/openpnm.network.Delaunay.find_nearby_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats.rst", "modules/generated/openpnm.network.Delaunay.fromkeys.rst", "modules/generated/openpnm.network.Delaunay.get.rst", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.get_conduit_data.rst", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.interpolate_data.rst", "modules/generated/openpnm.network.Delaunay.items.rst", "modules/generated/openpnm.network.Delaunay.keys.rst", "modules/generated/openpnm.network.Delaunay.labels.rst", "modules/generated/openpnm.network.Delaunay.num_neighbors.rst", "modules/generated/openpnm.network.Delaunay.num_pores.rst", "modules/generated/openpnm.network.Delaunay.num_throats.rst", "modules/generated/openpnm.network.Delaunay.pop.rst", "modules/generated/openpnm.network.Delaunay.popitem.rst", "modules/generated/openpnm.network.Delaunay.pores.rst", "modules/generated/openpnm.network.Delaunay.props.rst", "modules/generated/openpnm.network.Delaunay.regenerate_models.rst", "modules/generated/openpnm.network.Delaunay.run_model.rst", "modules/generated/openpnm.network.Delaunay.set_label.rst", "modules/generated/openpnm.network.Delaunay.setdefault.rst", "modules/generated/openpnm.network.Delaunay.throats.rst", "modules/generated/openpnm.network.Delaunay.to_indices.rst", "modules/generated/openpnm.network.Delaunay.to_mask.rst", "modules/generated/openpnm.network.Delaunay.update.rst", "modules/generated/openpnm.network.Delaunay.values.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.items.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.props.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.update.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.values.rst", "modules/generated/openpnm.network.Demo.rst", "modules/generated/openpnm.network.Demo.add_boundary_pores.rst", "modules/generated/openpnm.network.Demo.add_model.rst", "modules/generated/openpnm.network.Demo.add_model_collection.rst", "modules/generated/openpnm.network.Demo.clear.rst", "modules/generated/openpnm.network.Demo.copy.rst", "modules/generated/openpnm.network.Demo.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.create_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.filter_by_label.rst", "modules/generated/openpnm.network.Demo.find_connected_pores.rst", "modules/generated/openpnm.network.Demo.find_connecting_throat.rst", "modules/generated/openpnm.network.Demo.find_nearby_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_throats.rst", "modules/generated/openpnm.network.Demo.fromkeys.rst", "modules/generated/openpnm.network.Demo.get.rst", "modules/generated/openpnm.network.Demo.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.get_conduit_data.rst", "modules/generated/openpnm.network.Demo.get_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.interpolate_data.rst", "modules/generated/openpnm.network.Demo.items.rst", "modules/generated/openpnm.network.Demo.keys.rst", "modules/generated/openpnm.network.Demo.labels.rst", "modules/generated/openpnm.network.Demo.num_neighbors.rst", "modules/generated/openpnm.network.Demo.num_pores.rst", "modules/generated/openpnm.network.Demo.num_throats.rst", "modules/generated/openpnm.network.Demo.pop.rst", "modules/generated/openpnm.network.Demo.popitem.rst", "modules/generated/openpnm.network.Demo.pores.rst", "modules/generated/openpnm.network.Demo.props.rst", "modules/generated/openpnm.network.Demo.regenerate_models.rst", "modules/generated/openpnm.network.Demo.run_model.rst", "modules/generated/openpnm.network.Demo.set_label.rst", "modules/generated/openpnm.network.Demo.setdefault.rst", "modules/generated/openpnm.network.Demo.throats.rst", "modules/generated/openpnm.network.Demo.to_indices.rst", "modules/generated/openpnm.network.Demo.to_mask.rst", "modules/generated/openpnm.network.Demo.update.rst", "modules/generated/openpnm.network.Demo.values.rst", "modules/generated/openpnm.network.FaceCenteredCubic.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.FaceCenteredCubic.clear.rst", "modules/generated/openpnm.network.FaceCenteredCubic.copy.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.items.rst", "modules/generated/openpnm.network.FaceCenteredCubic.keys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.labels.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pop.rst", "modules/generated/openpnm.network.FaceCenteredCubic.popitem.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.props.rst", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.FaceCenteredCubic.run_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.set_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.FaceCenteredCubic.throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.FaceCenteredCubic.update.rst", "modules/generated/openpnm.network.FaceCenteredCubic.values.rst", "modules/generated/openpnm.network.Network.rst", "modules/generated/openpnm.network.Network.add_model.rst", "modules/generated/openpnm.network.Network.add_model_collection.rst", "modules/generated/openpnm.network.Network.clear.rst", "modules/generated/openpnm.network.Network.copy.rst", "modules/generated/openpnm.network.Network.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.create_incidence_matrix.rst", "modules/generated/openpnm.network.Network.filter_by_label.rst", "modules/generated/openpnm.network.Network.find_connected_pores.rst", "modules/generated/openpnm.network.Network.find_connecting_throat.rst", "modules/generated/openpnm.network.Network.find_nearby_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_throats.rst", "modules/generated/openpnm.network.Network.fromkeys.rst", "modules/generated/openpnm.network.Network.get.rst", "modules/generated/openpnm.network.Network.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.get_conduit_data.rst", "modules/generated/openpnm.network.Network.get_incidence_matrix.rst", "modules/generated/openpnm.network.Network.interpolate_data.rst", "modules/generated/openpnm.network.Network.items.rst", "modules/generated/openpnm.network.Network.keys.rst", "modules/generated/openpnm.network.Network.labels.rst", "modules/generated/openpnm.network.Network.num_neighbors.rst", "modules/generated/openpnm.network.Network.num_pores.rst", "modules/generated/openpnm.network.Network.num_throats.rst", "modules/generated/openpnm.network.Network.pop.rst", "modules/generated/openpnm.network.Network.popitem.rst", "modules/generated/openpnm.network.Network.pores.rst", "modules/generated/openpnm.network.Network.props.rst", "modules/generated/openpnm.network.Network.regenerate_models.rst", "modules/generated/openpnm.network.Network.run_model.rst", "modules/generated/openpnm.network.Network.set_label.rst", "modules/generated/openpnm.network.Network.setdefault.rst", "modules/generated/openpnm.network.Network.throats.rst", "modules/generated/openpnm.network.Network.to_indices.rst", "modules/generated/openpnm.network.Network.to_mask.rst", "modules/generated/openpnm.network.Network.update.rst", "modules/generated/openpnm.network.Network.values.rst", "modules/generated/openpnm.network.Voronoi.rst", "modules/generated/openpnm.network.Voronoi.add_model.rst", "modules/generated/openpnm.network.Voronoi.add_model_collection.rst", "modules/generated/openpnm.network.Voronoi.clear.rst", "modules/generated/openpnm.network.Voronoi.copy.rst", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.filter_by_label.rst", "modules/generated/openpnm.network.Voronoi.find_connected_pores.rst", "modules/generated/openpnm.network.Voronoi.find_connecting_throat.rst", "modules/generated/openpnm.network.Voronoi.find_nearby_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats.rst", "modules/generated/openpnm.network.Voronoi.fromkeys.rst", "modules/generated/openpnm.network.Voronoi.get.rst", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.get_conduit_data.rst", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.interpolate_data.rst", "modules/generated/openpnm.network.Voronoi.items.rst", "modules/generated/openpnm.network.Voronoi.keys.rst", "modules/generated/openpnm.network.Voronoi.labels.rst", "modules/generated/openpnm.network.Voronoi.num_neighbors.rst", "modules/generated/openpnm.network.Voronoi.num_pores.rst", "modules/generated/openpnm.network.Voronoi.num_throats.rst", "modules/generated/openpnm.network.Voronoi.pop.rst", "modules/generated/openpnm.network.Voronoi.popitem.rst", "modules/generated/openpnm.network.Voronoi.pores.rst", "modules/generated/openpnm.network.Voronoi.props.rst", "modules/generated/openpnm.network.Voronoi.regenerate_models.rst", "modules/generated/openpnm.network.Voronoi.run_model.rst", "modules/generated/openpnm.network.Voronoi.set_label.rst", "modules/generated/openpnm.network.Voronoi.setdefault.rst", "modules/generated/openpnm.network.Voronoi.throats.rst", "modules/generated/openpnm.network.Voronoi.to_indices.rst", "modules/generated/openpnm.network.Voronoi.to_mask.rst", "modules/generated/openpnm.network.Voronoi.update.rst", "modules/generated/openpnm.network.Voronoi.values.rst", "modules/generated/openpnm.phase.rst", "modules/generated/openpnm.phase.Air.rst", "modules/generated/openpnm.phase.Air.add_model.rst", "modules/generated/openpnm.phase.Air.add_model_collection.rst", "modules/generated/openpnm.phase.Air.clear.rst", "modules/generated/openpnm.phase.Air.copy.rst", "modules/generated/openpnm.phase.Air.filter_by_label.rst", "modules/generated/openpnm.phase.Air.fromkeys.rst", "modules/generated/openpnm.phase.Air.get.rst", "modules/generated/openpnm.phase.Air.get_conduit_data.rst", "modules/generated/openpnm.phase.Air.interpolate_data.rst", "modules/generated/openpnm.phase.Air.items.rst", "modules/generated/openpnm.phase.Air.keys.rst", "modules/generated/openpnm.phase.Air.labels.rst", "modules/generated/openpnm.phase.Air.num_pores.rst", "modules/generated/openpnm.phase.Air.num_throats.rst", "modules/generated/openpnm.phase.Air.pop.rst", "modules/generated/openpnm.phase.Air.popitem.rst", "modules/generated/openpnm.phase.Air.pores.rst", "modules/generated/openpnm.phase.Air.props.rst", "modules/generated/openpnm.phase.Air.regenerate_models.rst", "modules/generated/openpnm.phase.Air.run_model.rst", "modules/generated/openpnm.phase.Air.set_label.rst", "modules/generated/openpnm.phase.Air.setdefault.rst", "modules/generated/openpnm.phase.Air.throats.rst", "modules/generated/openpnm.phase.Air.to_indices.rst", "modules/generated/openpnm.phase.Air.to_mask.rst", "modules/generated/openpnm.phase.Air.update.rst", "modules/generated/openpnm.phase.Air.values.rst", "modules/generated/openpnm.phase.BinaryGas.rst", "modules/generated/openpnm.phase.BinaryGas.add_comp.rst", "modules/generated/openpnm.phase.BinaryGas.add_model.rst", "modules/generated/openpnm.phase.BinaryGas.add_model_collection.rst", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health.rst", "modules/generated/openpnm.phase.BinaryGas.clear.rst", "modules/generated/openpnm.phase.BinaryGas.copy.rst", "modules/generated/openpnm.phase.BinaryGas.filter_by_label.rst", "modules/generated/openpnm.phase.BinaryGas.fromkeys.rst", "modules/generated/openpnm.phase.BinaryGas.get.rst", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals.rst", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data.rst", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals.rst", "modules/generated/openpnm.phase.BinaryGas.interpolate_data.rst", "modules/generated/openpnm.phase.BinaryGas.items.rst", "modules/generated/openpnm.phase.BinaryGas.keys.rst", "modules/generated/openpnm.phase.BinaryGas.labels.rst", "modules/generated/openpnm.phase.BinaryGas.num_pores.rst", "modules/generated/openpnm.phase.BinaryGas.num_throats.rst", "modules/generated/openpnm.phase.BinaryGas.pop.rst", "modules/generated/openpnm.phase.BinaryGas.popitem.rst", "modules/generated/openpnm.phase.BinaryGas.pores.rst", "modules/generated/openpnm.phase.BinaryGas.props.rst", "modules/generated/openpnm.phase.BinaryGas.regenerate_models.rst", "modules/generated/openpnm.phase.BinaryGas.remove_comp.rst", "modules/generated/openpnm.phase.BinaryGas.run_model.rst", "modules/generated/openpnm.phase.BinaryGas.set_label.rst", "modules/generated/openpnm.phase.BinaryGas.setdefault.rst", "modules/generated/openpnm.phase.BinaryGas.throats.rst", "modules/generated/openpnm.phase.BinaryGas.to_indices.rst", "modules/generated/openpnm.phase.BinaryGas.to_mask.rst", "modules/generated/openpnm.phase.BinaryGas.update.rst", "modules/generated/openpnm.phase.BinaryGas.values.rst", "modules/generated/openpnm.phase.BinaryGas.y.rst", "modules/generated/openpnm.phase.GasMixture.rst", "modules/generated/openpnm.phase.GasMixture.add_comp.rst", "modules/generated/openpnm.phase.GasMixture.add_model.rst", "modules/generated/openpnm.phase.GasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.GasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.GasMixture.clear.rst", "modules/generated/openpnm.phase.GasMixture.copy.rst", "modules/generated/openpnm.phase.GasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.GasMixture.fromkeys.rst", "modules/generated/openpnm.phase.GasMixture.get.rst", "modules/generated/openpnm.phase.GasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.GasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.GasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.GasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.GasMixture.items.rst", "modules/generated/openpnm.phase.GasMixture.keys.rst", "modules/generated/openpnm.phase.GasMixture.labels.rst", "modules/generated/openpnm.phase.GasMixture.num_pores.rst", "modules/generated/openpnm.phase.GasMixture.num_throats.rst", "modules/generated/openpnm.phase.GasMixture.pop.rst", "modules/generated/openpnm.phase.GasMixture.popitem.rst", "modules/generated/openpnm.phase.GasMixture.pores.rst", "modules/generated/openpnm.phase.GasMixture.props.rst", "modules/generated/openpnm.phase.GasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.GasMixture.remove_comp.rst", "modules/generated/openpnm.phase.GasMixture.run_model.rst", "modules/generated/openpnm.phase.GasMixture.set_label.rst", "modules/generated/openpnm.phase.GasMixture.setdefault.rst", "modules/generated/openpnm.phase.GasMixture.throats.rst", "modules/generated/openpnm.phase.GasMixture.to_indices.rst", "modules/generated/openpnm.phase.GasMixture.to_mask.rst", "modules/generated/openpnm.phase.GasMixture.update.rst", "modules/generated/openpnm.phase.GasMixture.values.rst", "modules/generated/openpnm.phase.GasMixture.y.rst", "modules/generated/openpnm.phase.LiquidMixture.rst", "modules/generated/openpnm.phase.LiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.LiquidMixture.clear.rst", "modules/generated/openpnm.phase.LiquidMixture.copy.rst", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.LiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.LiquidMixture.get.rst", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.LiquidMixture.items.rst", "modules/generated/openpnm.phase.LiquidMixture.keys.rst", "modules/generated/openpnm.phase.LiquidMixture.labels.rst", "modules/generated/openpnm.phase.LiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.LiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.LiquidMixture.pop.rst", "modules/generated/openpnm.phase.LiquidMixture.popitem.rst", "modules/generated/openpnm.phase.LiquidMixture.pores.rst", "modules/generated/openpnm.phase.LiquidMixture.props.rst", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.LiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.run_model.rst", "modules/generated/openpnm.phase.LiquidMixture.set_label.rst", "modules/generated/openpnm.phase.LiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.LiquidMixture.throats.rst", "modules/generated/openpnm.phase.LiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.LiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.LiquidMixture.update.rst", "modules/generated/openpnm.phase.LiquidMixture.values.rst", "modules/generated/openpnm.phase.LiquidMixture.x.rst", "modules/generated/openpnm.phase.Mercury.rst", "modules/generated/openpnm.phase.Mercury.add_model.rst", "modules/generated/openpnm.phase.Mercury.add_model_collection.rst", "modules/generated/openpnm.phase.Mercury.clear.rst", "modules/generated/openpnm.phase.Mercury.copy.rst", "modules/generated/openpnm.phase.Mercury.filter_by_label.rst", "modules/generated/openpnm.phase.Mercury.fromkeys.rst", "modules/generated/openpnm.phase.Mercury.get.rst", "modules/generated/openpnm.phase.Mercury.get_conduit_data.rst", "modules/generated/openpnm.phase.Mercury.interpolate_data.rst", "modules/generated/openpnm.phase.Mercury.items.rst", "modules/generated/openpnm.phase.Mercury.keys.rst", "modules/generated/openpnm.phase.Mercury.labels.rst", "modules/generated/openpnm.phase.Mercury.num_pores.rst", "modules/generated/openpnm.phase.Mercury.num_throats.rst", "modules/generated/openpnm.phase.Mercury.pop.rst", "modules/generated/openpnm.phase.Mercury.popitem.rst", "modules/generated/openpnm.phase.Mercury.pores.rst", "modules/generated/openpnm.phase.Mercury.props.rst", "modules/generated/openpnm.phase.Mercury.regenerate_models.rst", "modules/generated/openpnm.phase.Mercury.run_model.rst", "modules/generated/openpnm.phase.Mercury.set_label.rst", "modules/generated/openpnm.phase.Mercury.setdefault.rst", "modules/generated/openpnm.phase.Mercury.throats.rst", "modules/generated/openpnm.phase.Mercury.to_indices.rst", "modules/generated/openpnm.phase.Mercury.to_mask.rst", "modules/generated/openpnm.phase.Mercury.update.rst", "modules/generated/openpnm.phase.Mercury.values.rst", "modules/generated/openpnm.phase.Mixture.rst", "modules/generated/openpnm.phase.Mixture.add_comp.rst", "modules/generated/openpnm.phase.Mixture.add_model.rst", "modules/generated/openpnm.phase.Mixture.add_model_collection.rst", "modules/generated/openpnm.phase.Mixture.check_mixture_health.rst", "modules/generated/openpnm.phase.Mixture.clear.rst", "modules/generated/openpnm.phase.Mixture.copy.rst", "modules/generated/openpnm.phase.Mixture.filter_by_label.rst", "modules/generated/openpnm.phase.Mixture.fromkeys.rst", "modules/generated/openpnm.phase.Mixture.get.rst", "modules/generated/openpnm.phase.Mixture.get_comp_vals.rst", "modules/generated/openpnm.phase.Mixture.get_conduit_data.rst", "modules/generated/openpnm.phase.Mixture.get_mix_vals.rst", "modules/generated/openpnm.phase.Mixture.interpolate_data.rst", "modules/generated/openpnm.phase.Mixture.items.rst", "modules/generated/openpnm.phase.Mixture.keys.rst", "modules/generated/openpnm.phase.Mixture.labels.rst", "modules/generated/openpnm.phase.Mixture.num_pores.rst", "modules/generated/openpnm.phase.Mixture.num_throats.rst", "modules/generated/openpnm.phase.Mixture.pop.rst", "modules/generated/openpnm.phase.Mixture.popitem.rst", "modules/generated/openpnm.phase.Mixture.pores.rst", "modules/generated/openpnm.phase.Mixture.props.rst", "modules/generated/openpnm.phase.Mixture.regenerate_models.rst", "modules/generated/openpnm.phase.Mixture.remove_comp.rst", "modules/generated/openpnm.phase.Mixture.run_model.rst", "modules/generated/openpnm.phase.Mixture.set_label.rst", "modules/generated/openpnm.phase.Mixture.setdefault.rst", "modules/generated/openpnm.phase.Mixture.throats.rst", "modules/generated/openpnm.phase.Mixture.to_indices.rst", "modules/generated/openpnm.phase.Mixture.to_mask.rst", "modules/generated/openpnm.phase.Mixture.update.rst", "modules/generated/openpnm.phase.Mixture.values.rst", "modules/generated/openpnm.phase.Phase.rst", "modules/generated/openpnm.phase.Phase.add_model.rst", "modules/generated/openpnm.phase.Phase.add_model_collection.rst", "modules/generated/openpnm.phase.Phase.clear.rst", "modules/generated/openpnm.phase.Phase.copy.rst", "modules/generated/openpnm.phase.Phase.filter_by_label.rst", "modules/generated/openpnm.phase.Phase.fromkeys.rst", "modules/generated/openpnm.phase.Phase.get.rst", "modules/generated/openpnm.phase.Phase.get_conduit_data.rst", "modules/generated/openpnm.phase.Phase.interpolate_data.rst", "modules/generated/openpnm.phase.Phase.items.rst", "modules/generated/openpnm.phase.Phase.keys.rst", "modules/generated/openpnm.phase.Phase.labels.rst", "modules/generated/openpnm.phase.Phase.num_pores.rst", "modules/generated/openpnm.phase.Phase.num_throats.rst", "modules/generated/openpnm.phase.Phase.pop.rst", "modules/generated/openpnm.phase.Phase.popitem.rst", "modules/generated/openpnm.phase.Phase.pores.rst", "modules/generated/openpnm.phase.Phase.props.rst", "modules/generated/openpnm.phase.Phase.regenerate_models.rst", "modules/generated/openpnm.phase.Phase.run_model.rst", "modules/generated/openpnm.phase.Phase.set_label.rst", "modules/generated/openpnm.phase.Phase.setdefault.rst", "modules/generated/openpnm.phase.Phase.throats.rst", "modules/generated/openpnm.phase.Phase.to_indices.rst", "modules/generated/openpnm.phase.Phase.to_mask.rst", "modules/generated/openpnm.phase.Phase.update.rst", "modules/generated/openpnm.phase.Phase.values.rst", "modules/generated/openpnm.phase.Species.rst", "modules/generated/openpnm.phase.Species.add_model.rst", "modules/generated/openpnm.phase.Species.add_model_collection.rst", "modules/generated/openpnm.phase.Species.clear.rst", "modules/generated/openpnm.phase.Species.copy.rst", "modules/generated/openpnm.phase.Species.filter_by_label.rst", "modules/generated/openpnm.phase.Species.fromkeys.rst", "modules/generated/openpnm.phase.Species.get.rst", "modules/generated/openpnm.phase.Species.get_conduit_data.rst", "modules/generated/openpnm.phase.Species.interpolate_data.rst", "modules/generated/openpnm.phase.Species.items.rst", "modules/generated/openpnm.phase.Species.keys.rst", "modules/generated/openpnm.phase.Species.labels.rst", "modules/generated/openpnm.phase.Species.num_pores.rst", "modules/generated/openpnm.phase.Species.num_throats.rst", "modules/generated/openpnm.phase.Species.pop.rst", "modules/generated/openpnm.phase.Species.popitem.rst", "modules/generated/openpnm.phase.Species.pores.rst", "modules/generated/openpnm.phase.Species.props.rst", "modules/generated/openpnm.phase.Species.regenerate_models.rst", "modules/generated/openpnm.phase.Species.run_model.rst", "modules/generated/openpnm.phase.Species.set_label.rst", "modules/generated/openpnm.phase.Species.setdefault.rst", "modules/generated/openpnm.phase.Species.throats.rst", "modules/generated/openpnm.phase.Species.to_indices.rst", "modules/generated/openpnm.phase.Species.to_mask.rst", "modules/generated/openpnm.phase.Species.update.rst", "modules/generated/openpnm.phase.Species.values.rst", "modules/generated/openpnm.phase.StandardGas.rst", "modules/generated/openpnm.phase.StandardGas.add_model.rst", "modules/generated/openpnm.phase.StandardGas.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGas.clear.rst", "modules/generated/openpnm.phase.StandardGas.copy.rst", "modules/generated/openpnm.phase.StandardGas.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGas.fromkeys.rst", "modules/generated/openpnm.phase.StandardGas.get.rst", "modules/generated/openpnm.phase.StandardGas.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGas.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGas.items.rst", "modules/generated/openpnm.phase.StandardGas.keys.rst", "modules/generated/openpnm.phase.StandardGas.labels.rst", "modules/generated/openpnm.phase.StandardGas.num_pores.rst", "modules/generated/openpnm.phase.StandardGas.num_throats.rst", "modules/generated/openpnm.phase.StandardGas.pop.rst", "modules/generated/openpnm.phase.StandardGas.popitem.rst", "modules/generated/openpnm.phase.StandardGas.pores.rst", "modules/generated/openpnm.phase.StandardGas.props.rst", "modules/generated/openpnm.phase.StandardGas.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGas.run_model.rst", "modules/generated/openpnm.phase.StandardGas.set_label.rst", "modules/generated/openpnm.phase.StandardGas.setdefault.rst", "modules/generated/openpnm.phase.StandardGas.throats.rst", "modules/generated/openpnm.phase.StandardGas.to_indices.rst", "modules/generated/openpnm.phase.StandardGas.to_mask.rst", "modules/generated/openpnm.phase.StandardGas.update.rst", "modules/generated/openpnm.phase.StandardGas.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardGasMixture.clear.rst", "modules/generated/openpnm.phase.StandardGasMixture.copy.rst", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardGasMixture.get.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.items.rst", "modules/generated/openpnm.phase.StandardGasMixture.keys.rst", "modules/generated/openpnm.phase.StandardGasMixture.labels.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.pop.rst", "modules/generated/openpnm.phase.StandardGasMixture.popitem.rst", "modules/generated/openpnm.phase.StandardGasMixture.pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.props.rst", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.run_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.set_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardGasMixture.throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardGasMixture.update.rst", "modules/generated/openpnm.phase.StandardGasMixture.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.y.rst", "modules/generated/openpnm.phase.StandardLiquid.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquid.clear.rst", "modules/generated/openpnm.phase.StandardLiquid.copy.rst", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquid.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquid.get.rst", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquid.items.rst", "modules/generated/openpnm.phase.StandardLiquid.keys.rst", "modules/generated/openpnm.phase.StandardLiquid.labels.rst", "modules/generated/openpnm.phase.StandardLiquid.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquid.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquid.pop.rst", "modules/generated/openpnm.phase.StandardLiquid.popitem.rst", "modules/generated/openpnm.phase.StandardLiquid.pores.rst", "modules/generated/openpnm.phase.StandardLiquid.props.rst", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquid.run_model.rst", "modules/generated/openpnm.phase.StandardLiquid.set_label.rst", "modules/generated/openpnm.phase.StandardLiquid.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquid.throats.rst", "modules/generated/openpnm.phase.StandardLiquid.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquid.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquid.update.rst", "modules/generated/openpnm.phase.StandardLiquid.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.clear.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.copy.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.items.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.keys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.labels.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pop.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.props.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.update.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.x.rst", "modules/generated/openpnm.phase.Water.rst", "modules/generated/openpnm.phase.Water.add_model.rst", "modules/generated/openpnm.phase.Water.add_model_collection.rst", "modules/generated/openpnm.phase.Water.clear.rst", "modules/generated/openpnm.phase.Water.copy.rst", "modules/generated/openpnm.phase.Water.filter_by_label.rst", "modules/generated/openpnm.phase.Water.fromkeys.rst", "modules/generated/openpnm.phase.Water.get.rst", "modules/generated/openpnm.phase.Water.get_conduit_data.rst", "modules/generated/openpnm.phase.Water.interpolate_data.rst", "modules/generated/openpnm.phase.Water.items.rst", "modules/generated/openpnm.phase.Water.keys.rst", "modules/generated/openpnm.phase.Water.labels.rst", "modules/generated/openpnm.phase.Water.num_pores.rst", "modules/generated/openpnm.phase.Water.num_throats.rst", "modules/generated/openpnm.phase.Water.pop.rst", "modules/generated/openpnm.phase.Water.popitem.rst", "modules/generated/openpnm.phase.Water.pores.rst", "modules/generated/openpnm.phase.Water.props.rst", "modules/generated/openpnm.phase.Water.regenerate_models.rst", "modules/generated/openpnm.phase.Water.run_model.rst", "modules/generated/openpnm.phase.Water.set_label.rst", "modules/generated/openpnm.phase.Water.setdefault.rst", "modules/generated/openpnm.phase.Water.throats.rst", "modules/generated/openpnm.phase.Water.to_indices.rst", "modules/generated/openpnm.phase.Water.to_mask.rst", "modules/generated/openpnm.phase.Water.update.rst", "modules/generated/openpnm.phase.Water.values.rst", "modules/generated/openpnm.solvers.rst", "modules/generated/openpnm.solvers.BaseSolver.rst", "modules/generated/openpnm.solvers.BaseSolver.solve.rst", "modules/generated/openpnm.solvers.DirectSolver.rst", "modules/generated/openpnm.solvers.DirectSolver.solve.rst", "modules/generated/openpnm.solvers.IterativeSolver.rst", "modules/generated/openpnm.solvers.IterativeSolver.solve.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.solve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.solve.rst", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.rst", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.solve.rst", "modules/generated/openpnm.solvers.ScipyCG.rst", "modules/generated/openpnm.solvers.ScipyCG.solve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.solve.rst", "modules/generated/openpnm.topotools.rst", "modules/generated/openpnm.topotools.add_boundary_pores.rst", "modules/generated/openpnm.topotools.add_reservoir_pore.rst", "modules/generated/openpnm.topotools.bond_percolation.rst", "modules/generated/openpnm.topotools.clone_pores.rst", "modules/generated/openpnm.topotools.connect_pores.rst", "modules/generated/openpnm.topotools.conns_to_am.rst", "modules/generated/openpnm.topotools.dimensionality.rst", "modules/generated/openpnm.topotools.drop_sites.rst", "modules/generated/openpnm.topotools.extend.rst", "modules/generated/openpnm.topotools.filter_pores_by_z.rst", "modules/generated/openpnm.topotools.find_clusters.rst", "modules/generated/openpnm.topotools.find_connected_sites.rst", "modules/generated/openpnm.topotools.find_connecting_bonds.rst", "modules/generated/openpnm.topotools.find_interface_throats.rst", "modules/generated/openpnm.topotools.find_isolated_clusters.rst", "modules/generated/openpnm.topotools.find_neighbor_bonds.rst", "modules/generated/openpnm.topotools.find_neighbor_sites.rst", "modules/generated/openpnm.topotools.find_path.rst", "modules/generated/openpnm.topotools.find_surface_pores.rst", "modules/generated/openpnm.topotools.generate_base_points.rst", "modules/generated/openpnm.topotools.get_domain_area.rst", "modules/generated/openpnm.topotools.get_domain_length.rst", "modules/generated/openpnm.topotools.get_shape.rst", "modules/generated/openpnm.topotools.get_spacing.rst", "modules/generated/openpnm.topotools.hull_centroid.rst", "modules/generated/openpnm.topotools.is_fully_connected.rst", "modules/generated/openpnm.topotools.iscoplanar.rst", "modules/generated/openpnm.topotools.isoutside.rst", "modules/generated/openpnm.topotools.ispercolating.rst", "modules/generated/openpnm.topotools.issymmetric.rst", "modules/generated/openpnm.topotools.istriangular.rst", "modules/generated/openpnm.topotools.istril.rst", "modules/generated/openpnm.topotools.istriu.rst", "modules/generated/openpnm.topotools.label_faces.rst", "modules/generated/openpnm.topotools.merge_networks.rst", "modules/generated/openpnm.topotools.merge_pores.rst", "modules/generated/openpnm.topotools.reduce_coordination.rst", "modules/generated/openpnm.topotools.reflect_base_points.rst", "modules/generated/openpnm.topotools.rotate_coords.rst", "modules/generated/openpnm.topotools.shear_coords.rst", "modules/generated/openpnm.topotools.site_percolation.rst", "modules/generated/openpnm.topotools.stitch.rst", "modules/generated/openpnm.topotools.template_cylinder_annulus.rst", "modules/generated/openpnm.topotools.template_sphere_shell.rst", "modules/generated/openpnm.topotools.tri_to_am.rst", "modules/generated/openpnm.topotools.trim.rst", "modules/generated/openpnm.topotools.trim_disconnected_clusters.rst", "modules/generated/openpnm.topotools.vor_to_am.rst", "modules/generated/openpnm.utils.rst", "modules/generated/openpnm.utils.Docorator.rst", "modules/generated/openpnm.utils.Docorator.__call__.rst", "modules/generated/openpnm.utils.Docorator.dedent.rst", "modules/generated/openpnm.utils.Docorator.dedents.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s.rst", "modules/generated/openpnm.utils.Docorator.delete_params.rst", "modules/generated/openpnm.utils.Docorator.delete_params_s.rst", "modules/generated/openpnm.utils.Docorator.delete_types.rst", "modules/generated/openpnm.utils.Docorator.delete_types_s.rst", "modules/generated/openpnm.utils.Docorator.get_docstring.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summary.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf.rst", "modules/generated/openpnm.utils.Docorator.get_full_description.rst", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf.rst", "modules/generated/openpnm.utils.Docorator.get_sections.rst", "modules/generated/openpnm.utils.Docorator.get_sectionsf.rst", "modules/generated/openpnm.utils.Docorator.get_summary.rst", "modules/generated/openpnm.utils.Docorator.get_summaryf.rst", "modules/generated/openpnm.utils.Docorator.keep_params.rst", "modules/generated/openpnm.utils.Docorator.keep_params_s.rst", "modules/generated/openpnm.utils.Docorator.keep_types.rst", "modules/generated/openpnm.utils.Docorator.keep_types_s.rst", "modules/generated/openpnm.utils.Docorator.save_docstring.rst", "modules/generated/openpnm.utils.Docorator.with_indent.rst", "modules/generated/openpnm.utils.Docorator.with_indents.rst", "modules/generated/openpnm.utils.HealthDict.rst", "modules/generated/openpnm.utils.HealthDict.clear.rst", "modules/generated/openpnm.utils.HealthDict.copy.rst", "modules/generated/openpnm.utils.HealthDict.fromkeys.rst", "modules/generated/openpnm.utils.HealthDict.get.rst", "modules/generated/openpnm.utils.HealthDict.items.rst", "modules/generated/openpnm.utils.HealthDict.keys.rst", "modules/generated/openpnm.utils.HealthDict.pop.rst", "modules/generated/openpnm.utils.HealthDict.popitem.rst", "modules/generated/openpnm.utils.HealthDict.setdefault.rst", "modules/generated/openpnm.utils.HealthDict.update.rst", "modules/generated/openpnm.utils.HealthDict.values.rst", "modules/generated/openpnm.utils.NestedDict.rst", "modules/generated/openpnm.utils.NestedDict.clear.rst", "modules/generated/openpnm.utils.NestedDict.copy.rst", "modules/generated/openpnm.utils.NestedDict.fromkeys.rst", "modules/generated/openpnm.utils.NestedDict.get.rst", "modules/generated/openpnm.utils.NestedDict.items.rst", "modules/generated/openpnm.utils.NestedDict.keys.rst", "modules/generated/openpnm.utils.NestedDict.pop.rst", "modules/generated/openpnm.utils.NestedDict.popitem.rst", "modules/generated/openpnm.utils.NestedDict.setdefault.rst", "modules/generated/openpnm.utils.NestedDict.to_dict.rst", "modules/generated/openpnm.utils.NestedDict.unravel.rst", "modules/generated/openpnm.utils.NestedDict.update.rst", "modules/generated/openpnm.utils.NestedDict.values.rst", "modules/generated/openpnm.utils.PrintableDict.rst", "modules/generated/openpnm.utils.PrintableDict.clear.rst", "modules/generated/openpnm.utils.PrintableDict.copy.rst", "modules/generated/openpnm.utils.PrintableDict.fromkeys.rst", "modules/generated/openpnm.utils.PrintableDict.get.rst", "modules/generated/openpnm.utils.PrintableDict.items.rst", "modules/generated/openpnm.utils.PrintableDict.keys.rst", "modules/generated/openpnm.utils.PrintableDict.pop.rst", "modules/generated/openpnm.utils.PrintableDict.popitem.rst", "modules/generated/openpnm.utils.PrintableDict.setdefault.rst", "modules/generated/openpnm.utils.PrintableDict.update.rst", "modules/generated/openpnm.utils.PrintableDict.values.rst", "modules/generated/openpnm.utils.PrintableList.rst", "modules/generated/openpnm.utils.PrintableList.append.rst", "modules/generated/openpnm.utils.PrintableList.clear.rst", "modules/generated/openpnm.utils.PrintableList.copy.rst", "modules/generated/openpnm.utils.PrintableList.count.rst", "modules/generated/openpnm.utils.PrintableList.extend.rst", "modules/generated/openpnm.utils.PrintableList.index.rst", "modules/generated/openpnm.utils.PrintableList.insert.rst", "modules/generated/openpnm.utils.PrintableList.pop.rst", "modules/generated/openpnm.utils.PrintableList.remove.rst", "modules/generated/openpnm.utils.PrintableList.reverse.rst", "modules/generated/openpnm.utils.PrintableList.sort.rst", "modules/generated/openpnm.utils.Project.rst", "modules/generated/openpnm.utils.Project.append.rst", "modules/generated/openpnm.utils.Project.clear.rst", "modules/generated/openpnm.utils.Project.copy.rst", "modules/generated/openpnm.utils.Project.count.rst", "modules/generated/openpnm.utils.Project.extend.rst", "modules/generated/openpnm.utils.Project.index.rst", "modules/generated/openpnm.utils.Project.insert.rst", "modules/generated/openpnm.utils.Project.pop.rst", "modules/generated/openpnm.utils.Project.remove.rst", "modules/generated/openpnm.utils.Project.reverse.rst", "modules/generated/openpnm.utils.Project.sort.rst", "modules/generated/openpnm.utils.SettingsAttr.rst", "modules/generated/openpnm.utils.TypedList.rst", "modules/generated/openpnm.utils.TypedList.append.rst", "modules/generated/openpnm.utils.TypedList.clear.rst", "modules/generated/openpnm.utils.TypedList.copy.rst", "modules/generated/openpnm.utils.TypedList.count.rst", "modules/generated/openpnm.utils.TypedList.extend.rst", "modules/generated/openpnm.utils.TypedList.index.rst", "modules/generated/openpnm.utils.TypedList.insert.rst", "modules/generated/openpnm.utils.TypedList.pop.rst", "modules/generated/openpnm.utils.TypedList.remove.rst", "modules/generated/openpnm.utils.TypedList.reverse.rst", "modules/generated/openpnm.utils.TypedList.sort.rst", "modules/generated/openpnm.utils.TypedMixin.rst", "modules/generated/openpnm.utils.TypedSet.rst", "modules/generated/openpnm.utils.TypedSet.add.rst", "modules/generated/openpnm.utils.TypedSet.clear.rst", "modules/generated/openpnm.utils.TypedSet.copy.rst", "modules/generated/openpnm.utils.TypedSet.difference.rst", "modules/generated/openpnm.utils.TypedSet.difference_update.rst", "modules/generated/openpnm.utils.TypedSet.discard.rst", "modules/generated/openpnm.utils.TypedSet.intersection.rst", "modules/generated/openpnm.utils.TypedSet.intersection_update.rst", "modules/generated/openpnm.utils.TypedSet.isdisjoint.rst", "modules/generated/openpnm.utils.TypedSet.issubset.rst", "modules/generated/openpnm.utils.TypedSet.issuperset.rst", "modules/generated/openpnm.utils.TypedSet.pop.rst", "modules/generated/openpnm.utils.TypedSet.remove.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update.rst", "modules/generated/openpnm.utils.TypedSet.union.rst", "modules/generated/openpnm.utils.TypedSet.update.rst", "modules/generated/openpnm.utils.Workspace.rst", "modules/generated/openpnm.utils.Workspace.clear.rst", "modules/generated/openpnm.utils.Workspace.close_project.rst", "modules/generated/openpnm.utils.Workspace.copy.rst", "modules/generated/openpnm.utils.Workspace.copy_project.rst", "modules/generated/openpnm.utils.Workspace.fromkeys.rst", "modules/generated/openpnm.utils.Workspace.get.rst", "modules/generated/openpnm.utils.Workspace.items.rst", "modules/generated/openpnm.utils.Workspace.keys.rst", "modules/generated/openpnm.utils.Workspace.load_project.rst", "modules/generated/openpnm.utils.Workspace.load_workspace.rst", "modules/generated/openpnm.utils.Workspace.new_project.rst", "modules/generated/openpnm.utils.Workspace.pop.rst", "modules/generated/openpnm.utils.Workspace.popitem.rst", "modules/generated/openpnm.utils.Workspace.save_project.rst", "modules/generated/openpnm.utils.Workspace.save_workspace.rst", "modules/generated/openpnm.utils.Workspace.setdefault.rst", "modules/generated/openpnm.utils.Workspace.update.rst", "modules/generated/openpnm.utils.Workspace.values.rst", "modules/generated/openpnm.utils.check_data_health.rst", "modules/generated/openpnm.utils.check_network_health.rst", "modules/generated/openpnm.utils.dict_to_struct.rst", "modules/generated/openpnm.utils.flat_list.rst", "modules/generated/openpnm.utils.get_mixture_model_args.rst", "modules/generated/openpnm.utils.get_printable_labels.rst", "modules/generated/openpnm.utils.get_printable_props.rst", "modules/generated/openpnm.utils.ignore_warnings.rst", "modules/generated/openpnm.utils.is_symmetric.rst", "modules/generated/openpnm.utils.is_transient.rst", "modules/generated/openpnm.utils.is_valid_propname.rst", "modules/generated/openpnm.utils.methods_to_table.rst", "modules/generated/openpnm.utils.models_to_table.rst", "modules/generated/openpnm.utils.sanitize_dict.rst", "modules/generated/openpnm.utils.struct_to_dict.rst", "modules/generated/openpnm.visualization.rst", "modules/generated/openpnm.visualization.draw_conduit.rst", "modules/generated/openpnm.visualization.generate_voxel_image.rst", "modules/generated/openpnm.visualization.plot_connections.rst", "modules/generated/openpnm.visualization.plot_coordinates.rst", "modules/generated/openpnm.visualization.plot_networkx.rst", "modules/generated/openpnm.visualization.plot_notebook.rst", "modules/generated/openpnm.visualization.plot_tutorial.rst", "modules/generated/openpnm.visualization.plot_vispy.rst", "modules/generated/openpnm.visualization.set_mpl_style.rst", "modules/index.rst"], "titles": ["Applications", "Examples", "Reference", "10 Steps to Learn OpenPNM", "Predicting absolute permeability", "Adjusting Pore Size Distributions", "Predicting dispersion coefficient", "Finding Effective Diffusivity and Tortuosity of a Network", "Predicting Formation Factor", "Calibrating a Network Using Mercury Intrusion Data", "Predicting Porosity", "Obtaining Relative Diffusivity Curves", "Predicting relative permeability", "Contibuted Examples", "Getting Started", "Pore-Scale Models", "Settings Attribute Machinery", "The Workspace and Projects", "Managing Clustered Networks", "Available Matrix Solvers", "Steady State Transport", "Explanation of Units", "Reactive Transport", "Size Factors and Transport Conductance", "Transient Transport", "Numerical Python Primer", "Generating Networks and Quick Visualization", "Storage of Network Data and Topology", "Network Representation, Queries, and Manipulation", "Assigning Geometric Properties", "Using Labels and Defining Domains", "Creating Phases", "Simulating Single Phase Transport", "Simulating Invasion", "Visualization options", "Pore Network Modeling Framework in Python", "Installation", "algorithms", "AdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Algorithm", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "set_BC", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Drainage", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FourierConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "InvasionPercolation", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "OhmicConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "ReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StokesFlow", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientAdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientFickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientFourierConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Transport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "contrib", "MultiPhase", "add_model", "add_model_collection", "add_phases", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_binary_partition_coef", "set_label", "set_occupancy", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientMultiPhysics", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "run", "set_BC", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "multiphase_diffusion", "core", "Base2", "clear", "copy", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "pop", "popitem", "props", "setdefault", "to_indices", "to_mask", "update", "values", "Domain", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "LabelMixin", "filter_by_label", "labels", "num_pores", "num_throats", "pores", "set_label", "throats", "ModelWrapper", "__call__", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsDict", "clear", "copy", "dependency_graph", "dependency_list", "dependency_map", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsMixin2", "add_model", "add_model_collection", "regenerate_models", "run_model", "ParserMixin", "integrators", "Integrator", "ScipyRK45", "solve", "io", "network_from_csv", "network_from_jsongraph", "network_from_marock", "network_from_networkx", "network_from_pergeos", "network_from_porespy", "network_from_statoil", "network_to_comsol", "network_to_csv", "network_to_jsongraph", "network_to_networkx", "network_to_pandas", "network_to_pergeos", "network_to_salome", "network_to_stl", "print_hdf5", "project_to_csv", "project_to_dict", "project_to_hdf5", "project_to_pandas", "project_to_paraview", "project_to_vtk", "project_to_xdmf", "models", "collections", "geometry", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "network", "phase", "air", "gas", "liquid", "mercury", "water", "physics", "basic", "standard", "geometry", "conduit_lengths", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "diffusive_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "hydraulic_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "pore_cross_sectional_area", "circle", "cone", "cube", "sphere", "square", "pore_seed", "random", "spatially_correlated", "pore_size", "equivalent_diameter", "from_neighbor_throats", "generic_distribution", "largest_sphere", "normal", "random", "weibull", "pore_surface_area", "circle", "cube", "sphere", "square", "pore_volume", "circle", "cube", "effective", "sphere", "square", "throat_capillary_shape_factor", "jenkins_rao", "mason_morrow", "throat_centroid", "pore_coords", "throat_cross_sectional_area", "cuboid", "cylinder", "rectangle", "throat_endpoints", "spheres_and_cylinders", "throat_length", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "throat_perimeter", "cuboid", "cylinder", "rectangle", "throat_seed", "from_neighbor_pores", "random", "throat_size", "equivalent_diameter", "from_neighbor_pores", "generic_distribution", "normal", "random", "weibull", "throat_surface_area", "cuboid", "cylinder", "extrusion", "rectangle", "throat_vector", "pore_to_pore", "throat_volume", "cuboid", "cylinder", "extrusion", "lens", "pendular_ring", "rectangle", "misc", "blank", "clip", "constant", "difference", "fraction", "from_neighbor_pores", "from_neighbor_throats", "generic_distribution", "generic_function", "invert", "linear", "match_histogram", "normal", "normalize", "polynomial", "product", "random", "scaled", "summation", "weibull", "network", "bidirectional_throats", "cluster_number", "cluster_size", "coordination_number", "count_coincident_pores", "distance_to_furthest_neighbor", "distance_to_nearest_neighbor", "distance_to_nearest_pore", "duplicate_throats", "find_coincident_pores", "gabriel_edges", "headless_throats", "isolated_pores", "looped_throats", "pore_to_pore_distance", "reversed_throats", "phase", "chemicals_wrapper", "critical_props", "density", "ideal_gas", "liquid_mixture_COSTALD", "liquid_pure_COSTALD", "mass_to_molar", "water_correlation", "diffusivity", "gas_mixture_ce", "gas_mixture_fesg", "liquid_mixture_tc", "heat_capacity", "gas_mixture_yweighted", "gas_pure_TRC", "liquid_mixture_xweighted", "liquid_pure_rp", "misc", "mix_and_match", "mole_to_mass_fraction", "mixtures", "from_component", "mixing_rule", "mole_summation", "mole_to_mass_fraction", "salinity", "partition_coefficient", "gaseous_species_in_water", "surface_tension", "liquid_mixture_wsd", "liquid_pure_bb", "water_correlation", "thermal_conductivity", "gas_mixture_whz", "gas_pure_gismr", "liquid_mixture_DIPPR9H", "liquid_pure_gismr", "liquid_pure_sr", "water_correlation", "vapor_pressure", "liquid_pure_antoine", "liquid_pure_lk", "water_correlation", "viscosity", "gas_mixture_hz", "gas_pure_gesmr", "gas_pure_st", "liquid_mixture_xweighted", "liquid_pure_ls", "water_correlation", "physics", "ad_dif_conductance", "ad_dif", "capillary_pressure", "purcell", "washburn", "diffusive_conductance", "generic_diffusive", "mixed_diffusion", "ordinary_diffusion", "taylor_aris_diffusion", "electrical_conductance", "generic_electrical", "series_resistors", "hydraulic_conductance", "generic_hydraulic", "hagen_poiseuille", "valvatne_blunt", "meniscus", "general_toroidal", "purcell", "sinusoidal", "multiphase", "conduit_conductance", "late_filling", "source_terms", "butler_volmer_conc", "butler_volmer_voltage", "exponential", "general_symbolic", "linear", "logarithm", "natural_exponential", "natural_logarithm", "power_law", "standard_kinetics", "thermal_conductance", "generic_thermal", "series_resistors", "network", "BodyCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Cubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "CubicTemplate", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Delaunay", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "DelaunayVoronoiDual", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "find_pore_hulls", "find_throat_facets", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Demo", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FaceCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Network", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Voronoi", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "phase", "Air", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "BinaryGas", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "GasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "LiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Mercury", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Mixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Phase", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Species", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGas", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "StandardLiquid", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardLiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Water", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "solvers", "BaseSolver", "solve", "DirectSolver", "solve", "IterativeSolver", "solve", "PETScLinearSolver", "solve", "PardisoSpsolve", "solve", "PyamgRugeStubenSolver", "solve", "ScipyCG", "solve", "ScipySpsolve", "solve", "topotools", "add_boundary_pores", "add_reservoir_pore", "bond_percolation", "clone_pores", "connect_pores", "conns_to_am", "dimensionality", "drop_sites", "extend", "filter_pores_by_z", "find_clusters", "find_connected_sites", "find_connecting_bonds", "find_interface_throats", "find_isolated_clusters", "find_neighbor_bonds", "find_neighbor_sites", "find_path", "find_surface_pores", "generate_base_points", "get_domain_area", "get_domain_length", "get_shape", "get_spacing", "hull_centroid", "is_fully_connected", "iscoplanar", "isoutside", "ispercolating", "issymmetric", "istriangular", "istril", "istriu", "label_faces", "merge_networks", "merge_pores", "reduce_coordination", "reflect_base_points", "rotate_coords", "shear_coords", "site_percolation", "stitch", "template_cylinder_annulus", "template_sphere_shell", "tri_to_am", "trim", "trim_disconnected_clusters", "vor_to_am", "utils", "Docorator", "__call__", "dedent", "dedents", "delete_kwargs", "delete_kwargs_s", "delete_params", "delete_params_s", "delete_types", "delete_types_s", "get_docstring", "get_extended_summary", "get_extended_summaryf", "get_full_description", "get_full_descriptionf", "get_sections", "get_sectionsf", "get_summary", "get_summaryf", "keep_params", "keep_params_s", "keep_types", "keep_types_s", "save_docstring", "with_indent", "with_indents", "HealthDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "NestedDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "to_dict", "unravel", "update", "values", "PrintableDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "PrintableList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "Project", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "SettingsAttr", "TypedList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "TypedMixin", "TypedSet", "add", "clear", "copy", "difference", "difference_update", "discard", "intersection", "intersection_update", "isdisjoint", "issubset", "issuperset", "pop", "remove", "symmetric_difference", "symmetric_difference_update", "union", "update", "Workspace", "clear", "close_project", "copy", "copy_project", "fromkeys", "get", "items", "keys", "load_project", "load_workspace", "new_project", "pop", "popitem", "save_project", "save_workspace", "setdefault", "update", "values", "check_data_health", "check_network_health", "dict_to_struct", "flat_list", "get_mixture_model_args", "get_printable_labels", "get_printable_props", "ignore_warnings", "is_symmetric", "is_transient", "is_valid_propname", "methods_to_table", "models_to_table", "sanitize_dict", "struct_to_dict", "visualization", "draw_conduit", "generate_voxel_image", "plot_connections", "plot_coordinates", "plot_networkx", "plot_notebook", "plot_tutorial", "plot_vispy", "set_mpl_style", "Module Reference"], "terms": {"predict": [0, 1, 23, 31, 920, 1914], "absolut": [0, 1, 2, 12, 29, 647, 1887, 1892], "permeabl": [0, 1, 9, 11, 31], "adjust": [0, 1, 9, 28, 29, 34, 60, 90, 99, 120, 152, 185, 197, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543, 922, 926, 1711, 1749, 1921], "pore": [0, 1, 2, 4, 7, 8, 11, 12, 16, 18, 20, 21, 22, 25, 26, 31, 33, 34, 38, 39, 44, 48, 50, 51, 52, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 76, 80, 82, 83, 84, 89, 90, 91, 93, 94, 95, 98, 99, 100, 103, 107, 109, 110, 111, 117, 120, 121, 122, 123, 125, 126, 127, 130, 131, 136, 140, 142, 143, 144, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 169, 173, 175, 176, 177, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 201, 205, 207, 208, 209, 215, 218, 219, 220, 221, 223, 224, 225, 228, 229, 234, 238, 240, 241, 242, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 261, 262, 267, 271, 273, 274, 275, 280, 281, 283, 284, 285, 286, 287, 289, 290, 291, 294, 295, 300, 304, 306, 307, 308, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 327, 328, 333, 337, 339, 340, 341, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 361, 362, 367, 371, 373, 374, 375, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 400, 404, 406, 407, 408, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 433, 437, 439, 440, 441, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 460, 461, 466, 470, 472, 473, 474, 479, 480, 482, 483, 484, 485, 487, 488, 489, 493, 494, 497, 499, 503, 505, 506, 507, 512, 514, 516, 517, 519, 520, 521, 524, 525, 528, 532, 534, 535, 536, 541, 543, 544, 546, 547, 548, 551, 552, 553, 554, 559, 561, 564, 566, 567, 570, 571, 573, 575, 579, 581, 582, 583, 588, 589, 590, 591, 593, 594, 595, 599, 600, 601, 604, 605, 634, 635, 637, 638, 647, 648, 652, 655, 658, 659, 661, 662, 664, 667, 671, 672, 673, 674, 675, 676, 677, 680, 683, 684, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 741, 743, 744, 745, 746, 747, 749, 751, 752, 753, 754, 756, 757, 758, 759, 760, 762, 764, 765, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 791, 792, 795, 796, 805, 806, 808, 809, 810, 811, 812, 813, 814, 820, 821, 822, 823, 826, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 876, 877, 878, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 916, 918, 919, 920, 922, 923, 924, 926, 927, 929, 930, 932, 940, 941, 943, 944, 945, 947, 949, 950, 951, 952, 953, 954, 955, 956, 961, 962, 964, 965, 966, 967, 972, 973, 974, 975, 977, 978, 979, 982, 983, 984, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1000, 1001, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1038, 1039, 1041, 1042, 1043, 1044, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1059, 1060, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1076, 1077, 1079, 1080, 1081, 1082, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1116, 1117, 1119, 1120, 1121, 1122, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1137, 1138, 1139, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1155, 1156, 1158, 1159, 1160, 1161, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1176, 1177, 1178, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1194, 1195, 1197, 1198, 1199, 1200, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1215, 1216, 1218, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1232, 1233, 1235, 1236, 1237, 1238, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1253, 1254, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1270, 1271, 1273, 1274, 1275, 1276, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1292, 1293, 1295, 1297, 1301, 1303, 1304, 1305, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1321, 1322, 1324, 1325, 1327, 1330, 1332, 1333, 1335, 1336, 1337, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1353, 1354, 1355, 1356, 1358, 1359, 1361, 1364, 1366, 1367, 1369, 1370, 1371, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1387, 1388, 1389, 1390, 1392, 1393, 1395, 1398, 1400, 1401, 1403, 1404, 1405, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1421, 1422, 1423, 1425, 1427, 1431, 1433, 1434, 1435, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1450, 1451, 1452, 1454, 1455, 1457, 1460, 1462, 1463, 1465, 1466, 1467, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1483, 1484, 1486, 1488, 1492, 1494, 1495, 1496, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1511, 1512, 1514, 1516, 1520, 1522, 1523, 1524, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1539, 1540, 1542, 1544, 1548, 1550, 1551, 1552, 1557, 1558, 1559, 1560, 1562, 1563, 1564, 1567, 1568, 1569, 1571, 1572, 1574, 1577, 1579, 1580, 1582, 1583, 1584, 1589, 1590, 1591, 1592, 1593, 1595, 1596, 1597, 1600, 1601, 1602, 1604, 1606, 1610, 1612, 1613, 1614, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1629, 1630, 1631, 1633, 1634, 1636, 1639, 1641, 1642, 1644, 1645, 1646, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1662, 1663, 1664, 1666, 1668, 1672, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1709, 1710, 1712, 1713, 1715, 1717, 1718, 1719, 1723, 1727, 1729, 1730, 1734, 1735, 1742, 1744, 1745, 1748, 1750, 1754, 1897, 1898, 1901, 1902, 1903, 1904, 1907, 1914, 1915, 1916, 1917, 1918, 1919, 1922], "size": [0, 1, 2, 4, 8, 10, 15, 18, 26, 30, 32, 33, 34, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 352, 354, 385, 387, 418, 420, 451, 453, 484, 485, 551, 624, 659, 708, 711, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 745, 748, 796, 798, 822, 826, 831, 838, 910, 911, 912, 913, 915, 916, 918, 919, 940, 941, 982, 1059, 1097, 1253, 1728, 1736, 1746, 1899, 1916, 1917, 1918, 1919], "distribut": [0, 1, 6, 15, 30, 34, 36, 740, 741, 745, 747, 748, 749, 796, 797, 798, 799, 822, 827, 831, 834, 982, 1728, 1745], "dispers": [0, 1], "coeffici": [0, 1, 2, 7, 8, 9, 22, 31, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 460, 515, 703, 704, 705, 706, 707, 709, 710, 712, 715, 717, 829, 862, 863, 864, 867, 893, 931, 933, 934, 935, 936, 937, 1320, 1699], "find": [0, 1, 4, 6, 8, 10, 11, 12, 15, 17, 18, 20, 22, 25, 29, 30, 31, 33, 34, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 494, 524, 571, 606, 635, 647, 742, 746, 747, 749, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 797, 799, 827, 834, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 878, 922, 945, 949, 950, 952, 954, 955, 956, 966, 984, 988, 989, 991, 993, 994, 995, 1005, 1022, 1026, 1027, 1029, 1031, 1032, 1033, 1043, 1060, 1064, 1065, 1067, 1069, 1070, 1071, 1081, 1098, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1121, 1139, 1143, 1144, 1146, 1148, 1149, 1150, 1160, 1178, 1182, 1183, 1185, 1187, 1188, 1189, 1199, 1216, 1220, 1221, 1223, 1225, 1226, 1227, 1237, 1254, 1258, 1259, 1261, 1263, 1264, 1265, 1275, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1511, 1512, 1540, 1569, 1602, 1631, 1664, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1742, 1744, 1745, 1898, 1914, 1915, 1916], "effect": [0, 1, 8, 9, 12, 27, 28, 29, 30, 130, 228, 494, 571, 635, 715, 730, 749, 762, 799, 834, 903, 907, 913, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1861], "diffus": [0, 1, 4, 20, 21, 22, 27, 34, 38, 130, 327, 361, 394, 551, 680, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 741, 862, 863, 864, 905, 907, 910, 911, 912, 913, 915, 916, 924, 940, 941, 1320], "tortuos": [0, 1, 9, 130], "network": [0, 1, 2, 3, 15, 16, 20, 21, 22, 25, 29, 30, 31, 32, 33, 34, 38, 39, 72, 73, 98, 100, 123, 130, 131, 163, 164, 196, 198, 228, 229, 261, 262, 294, 295, 327, 328, 361, 362, 394, 395, 427, 428, 460, 461, 493, 497, 524, 525, 552, 553, 554, 570, 573, 634, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 740, 741, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 760, 762, 763, 765, 767, 768, 769, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 791, 792, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 806, 808, 809, 810, 811, 812, 813, 822, 823, 826, 827, 831, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 905, 907, 910, 911, 912, 913, 915, 916, 918, 919, 920, 923, 932, 940, 941, 943, 944, 947, 949, 950, 952, 953, 954, 955, 956, 966, 982, 983, 986, 988, 989, 991, 992, 993, 994, 995, 1005, 1021, 1024, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1043, 1059, 1062, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1081, 1097, 1100, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1121, 1137, 1138, 1141, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1160, 1176, 1177, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1199, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1275, 1292, 1295, 1320, 1325, 1354, 1359, 1388, 1393, 1422, 1425, 1450, 1455, 1483, 1486, 1511, 1514, 1539, 1542, 1567, 1572, 1601, 1604, 1629, 1634, 1663, 1666, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1734, 1736, 1737, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1834, 1889, 1898, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1922], "format": [0, 1, 6, 7, 9, 20, 26, 27, 30, 32, 34, 495, 572, 624, 636, 644, 646, 647, 649, 651, 659, 662, 666, 700, 715, 730, 815, 943, 946, 949, 950, 959, 961, 982, 985, 988, 989, 998, 1000, 1021, 1023, 1026, 1027, 1036, 1038, 1059, 1061, 1064, 1065, 1074, 1076, 1097, 1099, 1102, 1103, 1114, 1116, 1137, 1140, 1143, 1144, 1153, 1155, 1176, 1179, 1182, 1183, 1192, 1194, 1215, 1217, 1220, 1221, 1230, 1232, 1253, 1255, 1258, 1259, 1268, 1270, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1710, 1714, 1716, 1721, 1753, 1756, 1902, 1903, 1915, 1916], "factor": [0, 1, 2, 4, 7, 9, 29, 32, 34, 551, 671, 672, 673, 674, 675, 676, 677, 708, 711, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 763, 832, 858, 869, 887, 889, 894, 901, 905, 910, 911, 912, 913, 915, 916, 918, 919, 920, 922, 926, 929, 930, 940, 941, 1699, 1748, 1917], "calibr": [0, 1, 33], "us": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 20, 23, 25, 26, 27, 32, 34, 35, 36, 38, 51, 52, 53, 56, 60, 72, 83, 84, 85, 88, 90, 98, 110, 111, 112, 116, 120, 130, 143, 144, 145, 148, 152, 163, 176, 177, 178, 181, 185, 196, 197, 208, 209, 210, 214, 218, 228, 241, 242, 243, 246, 250, 261, 274, 275, 276, 279, 283, 294, 307, 308, 309, 312, 316, 327, 340, 341, 342, 345, 348, 349, 361, 374, 375, 376, 379, 382, 383, 394, 407, 408, 409, 412, 415, 416, 427, 440, 441, 442, 445, 448, 449, 460, 473, 474, 475, 478, 482, 493, 494, 506, 507, 508, 511, 513, 524, 535, 536, 537, 540, 542, 543, 552, 553, 570, 571, 582, 583, 584, 587, 600, 601, 602, 603, 606, 623, 635, 643, 647, 648, 649, 650, 651, 658, 659, 666, 690, 695, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 724, 727, 731, 732, 734, 738, 740, 741, 744, 747, 748, 749, 758, 792, 795, 797, 798, 799, 809, 810, 811, 814, 815, 817, 820, 821, 823, 825, 827, 829, 830, 831, 832, 834, 846, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 875, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 920, 922, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 943, 945, 949, 950, 952, 953, 955, 956, 959, 961, 965, 966, 967, 968, 971, 982, 983, 984, 988, 989, 991, 992, 994, 995, 998, 1000, 1004, 1005, 1006, 1007, 1010, 1021, 1022, 1026, 1027, 1029, 1030, 1032, 1033, 1036, 1038, 1042, 1043, 1044, 1045, 1048, 1059, 1060, 1064, 1065, 1067, 1068, 1070, 1071, 1074, 1076, 1080, 1081, 1082, 1083, 1086, 1097, 1098, 1102, 1103, 1105, 1106, 1108, 1109, 1114, 1116, 1120, 1121, 1122, 1123, 1126, 1137, 1138, 1139, 1143, 1144, 1146, 1147, 1149, 1150, 1153, 1155, 1159, 1160, 1161, 1162, 1165, 1176, 1178, 1182, 1183, 1185, 1186, 1188, 1189, 1192, 1194, 1198, 1199, 1200, 1201, 1204, 1215, 1216, 1220, 1221, 1223, 1224, 1226, 1227, 1230, 1232, 1236, 1237, 1238, 1239, 1242, 1253, 1254, 1258, 1259, 1261, 1262, 1264, 1265, 1268, 1270, 1274, 1275, 1276, 1277, 1280, 1292, 1293, 1304, 1305, 1306, 1309, 1320, 1322, 1332, 1336, 1337, 1338, 1341, 1354, 1356, 1366, 1370, 1371, 1372, 1375, 1388, 1390, 1400, 1404, 1405, 1406, 1409, 1422, 1423, 1434, 1435, 1436, 1439, 1450, 1452, 1462, 1466, 1467, 1468, 1471, 1483, 1484, 1495, 1496, 1497, 1500, 1511, 1512, 1523, 1524, 1525, 1528, 1539, 1540, 1551, 1552, 1553, 1556, 1567, 1569, 1579, 1583, 1584, 1585, 1588, 1601, 1602, 1613, 1614, 1615, 1618, 1629, 1631, 1641, 1645, 1646, 1647, 1650, 1663, 1664, 1675, 1676, 1677, 1680, 1698, 1699, 1700, 1704, 1706, 1709, 1713, 1716, 1720, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1745, 1750, 1751, 1752, 1761, 1762, 1763, 1765, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1834, 1892, 1893, 1901, 1902, 1903, 1904, 1905, 1911, 1915, 1916, 1918, 1919, 1920], "mercuri": [0, 1, 14, 31, 33, 762, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449], "intrus": [0, 1, 14, 33], "data": [0, 1, 3, 6, 7, 14, 15, 16, 20, 25, 28, 31, 32, 33, 34, 38, 39, 47, 48, 57, 72, 73, 79, 80, 89, 98, 99, 100, 106, 107, 117, 130, 131, 139, 140, 149, 163, 164, 172, 173, 182, 196, 198, 204, 205, 211, 215, 228, 229, 237, 238, 247, 261, 262, 270, 271, 280, 294, 295, 303, 304, 313, 327, 328, 336, 337, 346, 361, 362, 370, 371, 380, 394, 395, 403, 404, 413, 427, 428, 436, 437, 446, 460, 461, 469, 470, 479, 493, 494, 497, 502, 503, 512, 524, 525, 531, 532, 541, 552, 553, 554, 558, 559, 564, 570, 571, 573, 578, 579, 588, 623, 635, 646, 647, 648, 651, 652, 656, 658, 659, 661, 662, 663, 664, 665, 666, 667, 823, 828, 874, 880, 922, 929, 930, 943, 945, 947, 949, 950, 959, 960, 961, 962, 972, 982, 984, 986, 988, 989, 998, 999, 1000, 1001, 1011, 1021, 1022, 1024, 1026, 1027, 1036, 1037, 1038, 1039, 1049, 1059, 1060, 1062, 1064, 1065, 1074, 1075, 1076, 1077, 1087, 1097, 1098, 1100, 1102, 1103, 1114, 1115, 1116, 1117, 1127, 1137, 1139, 1141, 1143, 1144, 1153, 1154, 1155, 1156, 1166, 1176, 1178, 1180, 1182, 1183, 1192, 1193, 1194, 1195, 1205, 1215, 1216, 1218, 1220, 1221, 1230, 1231, 1232, 1233, 1243, 1253, 1254, 1256, 1258, 1259, 1268, 1269, 1270, 1271, 1281, 1292, 1293, 1295, 1300, 1301, 1310, 1320, 1322, 1325, 1331, 1333, 1342, 1354, 1356, 1359, 1365, 1367, 1376, 1388, 1390, 1393, 1399, 1401, 1410, 1422, 1423, 1425, 1430, 1431, 1440, 1450, 1452, 1455, 1461, 1463, 1472, 1483, 1484, 1486, 1491, 1492, 1501, 1511, 1512, 1514, 1519, 1520, 1529, 1539, 1540, 1542, 1547, 1548, 1557, 1567, 1569, 1572, 1578, 1580, 1589, 1601, 1602, 1604, 1609, 1610, 1619, 1629, 1631, 1634, 1640, 1642, 1651, 1663, 1664, 1666, 1671, 1672, 1681, 1837, 1846, 1897, 1915], "poros": [0, 1, 7, 9, 26, 130, 1914], "obtain": [0, 1, 9, 12, 20, 23, 26, 27, 33, 745, 796, 822, 846, 955, 956, 959, 961, 994, 995, 998, 1000, 1032, 1033, 1036, 1038, 1070, 1071, 1074, 1076, 1108, 1109, 1114, 1116, 1149, 1150, 1153, 1155, 1188, 1189, 1192, 1194, 1226, 1227, 1230, 1232, 1264, 1265, 1268, 1270, 1332, 1366, 1400, 1462, 1579, 1641, 1724, 1725, 1745, 1878], "rel": [0, 1, 9, 14, 647, 1729, 1730, 1750, 1887, 1892, 1905, 1918], "curv": [0, 1, 5, 9, 12, 14, 33, 1728], "The": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 29, 32, 33, 34, 38, 40, 44, 47, 48, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 74, 76, 79, 80, 83, 84, 85, 88, 89, 90, 91, 93, 95, 101, 103, 106, 107, 110, 111, 112, 116, 117, 119, 120, 122, 123, 125, 127, 130, 132, 136, 139, 140, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 163, 165, 169, 172, 173, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 196, 199, 201, 204, 205, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 225, 228, 230, 234, 237, 238, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 261, 263, 267, 270, 271, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 294, 296, 300, 303, 304, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 327, 329, 333, 336, 337, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 361, 363, 367, 370, 371, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 394, 396, 400, 403, 404, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 427, 429, 433, 436, 437, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 457, 460, 462, 466, 469, 470, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 494, 495, 499, 502, 503, 506, 507, 508, 511, 512, 513, 514, 516, 517, 519, 521, 526, 528, 531, 532, 535, 536, 537, 540, 541, 542, 543, 544, 546, 548, 558, 559, 564, 567, 570, 571, 572, 575, 578, 579, 582, 583, 584, 587, 588, 590, 591, 593, 595, 599, 600, 601, 602, 603, 604, 605, 619, 635, 636, 638, 640, 646, 647, 648, 650, 651, 652, 655, 658, 659, 660, 661, 662, 663, 665, 666, 667, 700, 715, 730, 740, 741, 743, 744, 745, 746, 747, 748, 749, 758, 762, 771, 792, 794, 795, 796, 797, 798, 799, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 838, 840, 845, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 922, 923, 924, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 944, 945, 946, 949, 950, 951, 953, 954, 955, 956, 959, 960, 961, 962, 965, 966, 967, 968, 971, 972, 974, 975, 977, 979, 982, 983, 984, 985, 988, 989, 990, 992, 993, 994, 995, 998, 999, 1000, 1001, 1004, 1005, 1006, 1007, 1010, 1011, 1013, 1014, 1016, 1018, 1021, 1022, 1023, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1048, 1049, 1051, 1052, 1054, 1056, 1059, 1060, 1061, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1086, 1087, 1089, 1090, 1092, 1094, 1097, 1098, 1099, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1123, 1126, 1127, 1129, 1130, 1132, 1134, 1138, 1139, 1140, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1162, 1165, 1166, 1168, 1169, 1171, 1173, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1192, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1204, 1205, 1207, 1208, 1210, 1212, 1215, 1216, 1217, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1242, 1243, 1245, 1246, 1248, 1250, 1253, 1254, 1255, 1258, 1259, 1260, 1262, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1274, 1275, 1276, 1277, 1280, 1281, 1283, 1284, 1286, 1288, 1293, 1294, 1297, 1300, 1301, 1304, 1305, 1306, 1309, 1310, 1312, 1313, 1315, 1317, 1320, 1321, 1322, 1323, 1327, 1330, 1331, 1332, 1333, 1336, 1337, 1338, 1341, 1342, 1344, 1345, 1346, 1348, 1350, 1353, 1355, 1356, 1357, 1361, 1364, 1365, 1366, 1367, 1370, 1371, 1372, 1375, 1376, 1378, 1379, 1380, 1382, 1384, 1387, 1389, 1390, 1391, 1395, 1398, 1399, 1400, 1401, 1404, 1405, 1406, 1409, 1410, 1412, 1413, 1414, 1416, 1418, 1421, 1423, 1424, 1427, 1430, 1431, 1434, 1435, 1436, 1439, 1440, 1442, 1443, 1445, 1447, 1451, 1452, 1453, 1457, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1471, 1472, 1474, 1475, 1476, 1478, 1480, 1484, 1485, 1488, 1491, 1492, 1495, 1496, 1497, 1500, 1501, 1503, 1504, 1506, 1508, 1511, 1512, 1513, 1516, 1519, 1520, 1523, 1524, 1525, 1528, 1529, 1531, 1532, 1534, 1536, 1540, 1541, 1544, 1547, 1548, 1551, 1552, 1553, 1556, 1557, 1559, 1560, 1562, 1564, 1567, 1568, 1569, 1570, 1574, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1588, 1589, 1591, 1592, 1593, 1595, 1597, 1600, 1602, 1603, 1606, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1621, 1622, 1624, 1626, 1629, 1630, 1631, 1632, 1636, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1650, 1651, 1653, 1654, 1655, 1657, 1659, 1662, 1664, 1665, 1668, 1671, 1672, 1675, 1676, 1677, 1680, 1681, 1683, 1684, 1686, 1688, 1691, 1699, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1734, 1736, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1756, 1760, 1762, 1764, 1766, 1769, 1771, 1775, 1777, 1779, 1782, 1833, 1834, 1837, 1845, 1846, 1858, 1878, 1880, 1882, 1887, 1888, 1889, 1892, 1893, 1898, 1899, 1902, 1903, 1911, 1914, 1915, 1916, 1918, 1919], "best": [1, 25, 26, 27, 29, 33, 36, 1059, 1097, 1253], "wai": [1, 6, 9, 11, 12, 18, 25, 26, 28, 29, 30, 31, 32, 33, 746, 753, 763, 853], "learn": [1, 23, 25, 29], "openpnm": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 72, 130, 261, 348, 382, 415, 448, 460, 492, 493, 495, 515, 542, 553, 572, 636, 644, 646, 647, 648, 650, 651, 655, 658, 661, 662, 664, 665, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 740, 741, 743, 745, 746, 747, 748, 749, 751, 753, 756, 757, 758, 759, 760, 763, 765, 767, 768, 769, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 794, 796, 797, 798, 799, 801, 802, 803, 804, 806, 808, 809, 810, 811, 812, 813, 818, 822, 823, 826, 827, 831, 834, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 946, 949, 950, 952, 953, 954, 955, 956, 959, 961, 966, 982, 985, 988, 989, 991, 992, 993, 994, 995, 998, 1000, 1005, 1023, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1036, 1038, 1043, 1061, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1074, 1076, 1081, 1099, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1114, 1116, 1121, 1140, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1153, 1155, 1160, 1179, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1192, 1194, 1199, 1215, 1217, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1230, 1232, 1237, 1255, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1268, 1270, 1275, 1292, 1294, 1323, 1357, 1391, 1424, 1450, 1453, 1483, 1485, 1513, 1541, 1570, 1603, 1632, 1663, 1665, 1710, 1715, 1723, 1758, 1810, 1822, 1834, 1878, 1893, 1902, 1903, 1904, 1907, 1914, 1915, 1916, 1917, 1922], "like": [1, 5, 9, 15, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 49, 60, 81, 90, 108, 120, 141, 152, 174, 185, 206, 218, 239, 250, 272, 283, 305, 316, 338, 349, 372, 383, 405, 416, 438, 449, 471, 482, 504, 533, 543, 560, 580, 612, 613, 627, 628, 648, 853, 905, 943, 963, 982, 1002, 1040, 1059, 1078, 1097, 1118, 1137, 1157, 1176, 1196, 1215, 1234, 1253, 1272, 1302, 1334, 1368, 1402, 1432, 1464, 1493, 1511, 1521, 1549, 1581, 1611, 1643, 1673, 1762, 1766, 1768, 1777, 1779, 1789, 1790, 1801, 1802, 1815, 1816, 1885, 1886], "anyth": [1, 25, 29, 31, 33, 60, 90, 120, 152, 185, 197, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543], "i": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 48, 51, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 76, 78, 80, 83, 87, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100, 103, 105, 107, 110, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 136, 138, 140, 143, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 164, 169, 171, 173, 176, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 203, 205, 208, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 229, 234, 236, 238, 241, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 261, 262, 267, 269, 271, 274, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 295, 300, 302, 304, 307, 311, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 328, 333, 335, 337, 340, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 362, 367, 369, 371, 374, 378, 379, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 395, 400, 402, 404, 407, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 427, 428, 433, 435, 437, 440, 444, 445, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458, 460, 461, 466, 468, 470, 473, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 497, 499, 501, 503, 506, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 525, 528, 530, 532, 535, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 552, 553, 554, 557, 559, 563, 564, 565, 566, 567, 568, 571, 573, 575, 577, 579, 582, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 599, 600, 603, 605, 606, 611, 614, 615, 616, 617, 619, 622, 623, 624, 626, 629, 630, 631, 632, 634, 635, 637, 638, 640, 643, 644, 646, 647, 648, 649, 651, 659, 660, 662, 663, 666, 667, 668, 669, 670, 678, 679, 681, 682, 685, 688, 689, 690, 691, 693, 694, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 724, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 755, 758, 761, 764, 766, 770, 772, 786, 790, 792, 793, 795, 796, 797, 798, 799, 800, 805, 806, 807, 810, 811, 812, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 947, 949, 950, 951, 952, 954, 955, 956, 958, 959, 961, 962, 965, 966, 970, 971, 972, 973, 974, 976, 977, 978, 979, 980, 982, 984, 986, 988, 989, 990, 991, 993, 994, 995, 997, 998, 1000, 1001, 1004, 1005, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1038, 1039, 1042, 1043, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1062, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1074, 1076, 1077, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1100, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1117, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1139, 1141, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1152, 1153, 1155, 1156, 1159, 1160, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1176, 1178, 1180, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1191, 1192, 1194, 1195, 1198, 1199, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1216, 1218, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1229, 1230, 1232, 1233, 1236, 1237, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1256, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1267, 1268, 1270, 1271, 1274, 1275, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1295, 1297, 1299, 1301, 1304, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1320, 1321, 1322, 1325, 1327, 1329, 1332, 1333, 1336, 1340, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1353, 1355, 1356, 1359, 1361, 1363, 1366, 1367, 1370, 1374, 1375, 1376, 1377, 1379, 1381, 1382, 1383, 1384, 1385, 1387, 1389, 1390, 1393, 1395, 1397, 1400, 1401, 1404, 1408, 1409, 1410, 1411, 1413, 1415, 1416, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1434, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1455, 1457, 1459, 1462, 1463, 1466, 1470, 1471, 1472, 1473, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1486, 1488, 1490, 1492, 1495, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1514, 1516, 1518, 1520, 1523, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1537, 1540, 1542, 1544, 1546, 1548, 1551, 1555, 1556, 1557, 1558, 1559, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1572, 1574, 1576, 1579, 1580, 1583, 1587, 1588, 1589, 1590, 1592, 1594, 1595, 1596, 1597, 1598, 1600, 1602, 1604, 1606, 1608, 1610, 1613, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1634, 1636, 1638, 1641, 1642, 1645, 1649, 1650, 1651, 1652, 1654, 1656, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1666, 1668, 1670, 1672, 1675, 1679, 1680, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1689, 1691, 1698, 1699, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1762, 1769, 1771, 1775, 1784, 1788, 1791, 1792, 1793, 1794, 1800, 1803, 1804, 1805, 1808, 1810, 1814, 1817, 1818, 1819, 1820, 1828, 1830, 1831, 1833, 1834, 1837, 1840, 1842, 1843, 1845, 1846, 1853, 1855, 1856, 1858, 1861, 1864, 1866, 1867, 1872, 1873, 1874, 1876, 1878, 1884, 1887, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1901, 1902, 1903, 1905, 1907, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1922], "experi": [1, 9, 33], "In": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 70, 96, 128, 161, 194, 196, 226, 259, 292, 325, 359, 392, 425, 458, 490, 522, 542, 549, 552, 568, 596, 617, 623, 632, 745, 796, 822, 980, 1019, 1057, 1095, 1135, 1174, 1213, 1251, 1289, 1318, 1351, 1385, 1419, 1448, 1481, 1509, 1537, 1565, 1598, 1627, 1660, 1689, 1720, 1794, 1808, 1820, 1834, 1895], "thi": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 51, 56, 59, 60, 61, 67, 68, 70, 72, 83, 88, 90, 91, 93, 94, 96, 98, 99, 110, 116, 120, 122, 123, 125, 126, 128, 130, 143, 148, 151, 152, 153, 158, 159, 161, 163, 176, 181, 184, 185, 186, 191, 192, 194, 196, 197, 208, 214, 218, 220, 221, 223, 224, 226, 228, 241, 246, 249, 250, 251, 256, 257, 259, 261, 274, 279, 282, 283, 284, 289, 290, 292, 294, 307, 312, 315, 316, 317, 322, 323, 325, 327, 340, 345, 349, 350, 356, 357, 359, 361, 374, 379, 383, 384, 389, 390, 392, 394, 407, 412, 416, 417, 422, 423, 425, 427, 440, 445, 449, 450, 455, 456, 458, 460, 473, 478, 481, 482, 483, 487, 488, 490, 492, 493, 494, 506, 511, 513, 516, 517, 519, 520, 522, 524, 535, 540, 543, 544, 546, 547, 549, 551, 552, 553, 566, 568, 570, 571, 582, 587, 589, 591, 593, 594, 596, 598, 600, 603, 604, 605, 606, 617, 619, 623, 632, 634, 635, 637, 640, 644, 646, 647, 648, 651, 652, 658, 659, 662, 663, 664, 667, 668, 669, 670, 678, 679, 681, 682, 685, 688, 689, 690, 695, 698, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 718, 724, 727, 731, 732, 733, 734, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 753, 755, 761, 764, 766, 770, 772, 786, 790, 792, 793, 795, 796, 797, 798, 799, 800, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 846, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 923, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 949, 950, 952, 954, 955, 956, 959, 961, 965, 966, 971, 973, 975, 977, 978, 980, 982, 983, 984, 988, 989, 991, 993, 994, 995, 998, 1000, 1004, 1005, 1010, 1012, 1014, 1016, 1017, 1019, 1021, 1022, 1026, 1027, 1029, 1031, 1032, 1033, 1036, 1038, 1042, 1043, 1048, 1050, 1052, 1054, 1055, 1057, 1059, 1060, 1064, 1065, 1067, 1069, 1070, 1071, 1074, 1076, 1080, 1081, 1086, 1088, 1090, 1092, 1093, 1095, 1097, 1098, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1114, 1116, 1120, 1121, 1126, 1128, 1130, 1132, 1133, 1135, 1137, 1138, 1139, 1143, 1144, 1146, 1148, 1149, 1150, 1153, 1155, 1159, 1160, 1165, 1167, 1169, 1171, 1172, 1174, 1176, 1177, 1178, 1182, 1183, 1185, 1187, 1188, 1189, 1192, 1194, 1198, 1199, 1204, 1206, 1208, 1210, 1211, 1213, 1215, 1216, 1220, 1221, 1223, 1225, 1226, 1227, 1230, 1232, 1236, 1237, 1242, 1244, 1246, 1248, 1249, 1251, 1253, 1254, 1258, 1259, 1261, 1263, 1264, 1265, 1268, 1270, 1274, 1275, 1280, 1282, 1284, 1286, 1287, 1289, 1291, 1292, 1293, 1304, 1309, 1311, 1313, 1315, 1316, 1318, 1320, 1321, 1322, 1324, 1332, 1336, 1341, 1343, 1344, 1346, 1348, 1349, 1351, 1353, 1354, 1355, 1356, 1358, 1366, 1370, 1375, 1377, 1378, 1380, 1382, 1383, 1385, 1387, 1388, 1389, 1390, 1392, 1400, 1404, 1409, 1411, 1412, 1414, 1416, 1417, 1419, 1421, 1422, 1423, 1434, 1439, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1452, 1454, 1462, 1466, 1471, 1473, 1474, 1476, 1478, 1479, 1481, 1483, 1484, 1495, 1500, 1502, 1504, 1506, 1507, 1509, 1511, 1512, 1523, 1528, 1530, 1532, 1534, 1535, 1537, 1539, 1540, 1551, 1556, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1579, 1583, 1588, 1590, 1591, 1593, 1595, 1596, 1598, 1600, 1601, 1602, 1613, 1618, 1620, 1622, 1624, 1625, 1627, 1629, 1630, 1631, 1633, 1641, 1645, 1650, 1652, 1653, 1655, 1657, 1658, 1660, 1662, 1663, 1664, 1675, 1680, 1682, 1684, 1686, 1687, 1689, 1691, 1699, 1708, 1709, 1710, 1711, 1715, 1716, 1720, 1721, 1723, 1724, 1725, 1727, 1728, 1737, 1742, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1764, 1766, 1768, 1769, 1771, 1773, 1775, 1777, 1779, 1784, 1794, 1808, 1820, 1834, 1846, 1861, 1862, 1864, 1865, 1870, 1871, 1878, 1880, 1887, 1892, 1893, 1895, 1898, 1901, 1902, 1903, 1910, 1912, 1915, 1916, 1918], "page": [1, 14, 36], "you": [1, 5, 7, 14, 15, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 587, 603, 643, 971, 982, 1010, 1048, 1086, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1713, 1777, 1779, 1904, 1916], "can": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 51, 56, 60, 72, 83, 88, 90, 98, 110, 116, 118, 120, 130, 143, 148, 152, 163, 176, 181, 185, 196, 208, 214, 218, 228, 241, 246, 250, 261, 274, 279, 283, 294, 307, 312, 316, 327, 340, 345, 348, 349, 361, 374, 379, 382, 383, 394, 407, 412, 415, 416, 427, 440, 445, 448, 449, 460, 473, 478, 482, 493, 506, 511, 513, 524, 535, 540, 542, 543, 553, 570, 582, 587, 600, 603, 623, 643, 647, 648, 650, 651, 662, 664, 665, 745, 746, 747, 749, 796, 797, 799, 822, 823, 826, 827, 829, 834, 846, 853, 864, 878, 905, 922, 929, 930, 943, 944, 953, 965, 971, 982, 983, 992, 1004, 1010, 1021, 1030, 1042, 1048, 1059, 1068, 1080, 1086, 1097, 1106, 1120, 1126, 1137, 1138, 1147, 1159, 1165, 1176, 1177, 1186, 1198, 1204, 1215, 1224, 1236, 1242, 1253, 1262, 1274, 1280, 1292, 1304, 1309, 1320, 1321, 1336, 1341, 1344, 1354, 1355, 1370, 1375, 1378, 1388, 1389, 1404, 1409, 1412, 1422, 1434, 1439, 1450, 1451, 1466, 1471, 1474, 1483, 1495, 1500, 1511, 1523, 1528, 1539, 1551, 1556, 1567, 1568, 1583, 1588, 1591, 1601, 1613, 1618, 1629, 1630, 1645, 1650, 1653, 1663, 1675, 1680, 1699, 1716, 1719, 1728, 1736, 1742, 1744, 1746, 1747, 1748, 1777, 1779, 1833, 1834, 1845, 1858, 1887, 1892, 1893, 1915, 1918], "lot": [1, 23, 29, 30, 33, 1059, 1097, 1253, 1728, 1746, 1904], "help": [1, 9, 17, 25, 26, 28, 29, 30, 619, 1021, 1059, 1097, 1253, 1728, 1746, 1750], "get": [1, 5, 9, 13, 15, 17, 18, 22, 23, 25, 27, 28, 29, 30, 32, 36, 211, 643, 746, 856, 857, 858, 859, 860, 862, 863, 864, 867, 869, 878, 880, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 898, 899, 901, 902, 1330, 1332, 1353, 1354, 1364, 1366, 1387, 1388, 1398, 1400, 1421, 1460, 1462, 1577, 1579, 1600, 1639, 1641, 1662, 1768, 1769, 1771, 1775, 1902, 1903, 1904], "start": [1, 5, 9, 12, 15, 16, 22, 23, 25, 26, 28, 29, 31, 32, 33, 36, 219, 514, 590, 638, 740, 746, 748, 798, 831, 974, 1013, 1051, 1089, 1129, 1168, 1207, 1245, 1283, 1312, 1345, 1379, 1413, 1442, 1475, 1503, 1531, 1559, 1592, 1621, 1654, 1683, 1736, 1828, 1840, 1853, 1907], "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 48, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 73, 76, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 99, 100, 103, 107, 109, 110, 111, 112, 115, 116, 117, 120, 121, 122, 123, 125, 131, 136, 140, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 164, 169, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 197, 198, 201, 205, 207, 208, 209, 210, 213, 214, 215, 218, 219, 220, 221, 223, 228, 229, 234, 238, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254, 256, 261, 262, 267, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 295, 300, 304, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 328, 333, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 362, 367, 371, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 395, 400, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 428, 433, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 455, 461, 466, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 492, 494, 495, 497, 499, 503, 505, 506, 507, 508, 510, 511, 512, 513, 516, 519, 525, 528, 532, 534, 535, 536, 537, 539, 540, 541, 543, 544, 546, 552, 554, 559, 561, 563, 564, 571, 572, 573, 575, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 593, 598, 599, 600, 601, 602, 603, 604, 605, 615, 619, 623, 630, 635, 636, 637, 647, 648, 651, 659, 662, 663, 664, 666, 667, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 709, 710, 715, 716, 717, 719, 720, 721, 722, 723, 724, 729, 730, 731, 732, 739, 740, 741, 743, 744, 746, 748, 751, 752, 753, 754, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 792, 794, 795, 798, 811, 812, 814, 818, 820, 821, 825, 829, 831, 840, 845, 846, 848, 849, 851, 853, 860, 864, 875, 878, 880, 884, 891, 893, 900, 902, 907, 922, 923, 926, 932, 943, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 959, 961, 962, 964, 965, 966, 967, 968, 970, 971, 972, 973, 975, 977, 982, 983, 984, 985, 986, 988, 989, 990, 991, 992, 993, 994, 995, 998, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1016, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1052, 1054, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1074, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1090, 1092, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1132, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1153, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1169, 1171, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1208, 1210, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1230, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1246, 1248, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1286, 1293, 1294, 1295, 1297, 1301, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1313, 1315, 1322, 1323, 1324, 1325, 1327, 1332, 1333, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1346, 1348, 1356, 1357, 1358, 1359, 1361, 1366, 1367, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1380, 1382, 1390, 1391, 1392, 1393, 1395, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1414, 1416, 1423, 1424, 1425, 1427, 1431, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1443, 1445, 1452, 1453, 1454, 1455, 1457, 1462, 1463, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1476, 1478, 1484, 1485, 1486, 1488, 1492, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1504, 1506, 1511, 1512, 1513, 1514, 1516, 1520, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1534, 1540, 1541, 1542, 1544, 1548, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1560, 1562, 1567, 1569, 1570, 1571, 1572, 1574, 1579, 1580, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1593, 1595, 1602, 1603, 1604, 1606, 1610, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1622, 1624, 1629, 1631, 1632, 1633, 1634, 1636, 1641, 1642, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1655, 1657, 1664, 1665, 1666, 1668, 1672, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1684, 1686, 1699, 1709, 1711, 1712, 1713, 1714, 1719, 1720, 1721, 1723, 1724, 1725, 1727, 1728, 1734, 1735, 1736, 1737, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1753, 1755, 1756, 1792, 1804, 1818, 1834, 1837, 1846, 1864, 1867, 1874, 1876, 1891, 1893, 1897, 1898, 1902, 1903, 1904, 1910, 1914, 1915, 1916, 1918], "categor": [1, 662], "follow": [1, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 70, 96, 99, 128, 130, 161, 194, 226, 259, 292, 325, 359, 392, 425, 458, 490, 494, 522, 549, 568, 571, 596, 617, 632, 635, 662, 741, 745, 747, 749, 796, 797, 799, 822, 823, 827, 834, 920, 922, 929, 930, 931, 933, 934, 935, 936, 937, 938, 945, 980, 984, 1019, 1022, 1057, 1060, 1095, 1098, 1135, 1139, 1174, 1178, 1213, 1216, 1251, 1254, 1289, 1293, 1318, 1322, 1351, 1356, 1385, 1390, 1419, 1423, 1448, 1452, 1481, 1484, 1509, 1512, 1537, 1540, 1565, 1569, 1598, 1602, 1627, 1631, 1660, 1664, 1689, 1713, 1728, 1736, 1746, 1773, 1794, 1808, 1820, 1895, 1898], "categori": 1, "creat": [1, 2, 3, 5, 6, 9, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 33, 34, 45, 61, 77, 91, 104, 122, 137, 153, 170, 186, 202, 220, 235, 251, 268, 284, 301, 317, 334, 350, 368, 384, 401, 417, 434, 450, 467, 483, 493, 500, 516, 529, 544, 556, 576, 591, 604, 610, 624, 625, 648, 651, 663, 740, 741, 748, 798, 831, 927, 949, 950, 957, 959, 961, 975, 982, 988, 989, 996, 998, 1000, 1014, 1021, 1026, 1027, 1034, 1036, 1038, 1052, 1064, 1065, 1072, 1074, 1076, 1090, 1097, 1102, 1103, 1112, 1114, 1116, 1130, 1143, 1144, 1151, 1153, 1155, 1169, 1182, 1183, 1190, 1192, 1194, 1208, 1215, 1220, 1221, 1228, 1230, 1232, 1246, 1258, 1259, 1266, 1268, 1270, 1284, 1292, 1298, 1313, 1328, 1346, 1354, 1362, 1380, 1388, 1396, 1414, 1422, 1428, 1443, 1450, 1458, 1476, 1489, 1504, 1517, 1532, 1545, 1560, 1575, 1593, 1607, 1622, 1637, 1655, 1663, 1669, 1684, 1728, 1750, 1764, 1766, 1777, 1779, 1787, 1799, 1813, 1834, 1837, 1883, 1889, 1915, 1916, 1917, 1920], "cubic": [1, 5, 6, 7, 8, 9, 11, 12, 15, 17, 20, 21, 22, 28, 29, 30, 31, 34, 741, 745, 757, 760, 796, 822, 823, 932, 943, 949, 950, 952, 953, 954, 955, 956, 966, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1043, 1059, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1081, 1097, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1121, 1137, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1160, 1176, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1199, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1237, 1253, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1275, 1728, 1731, 1732, 1736, 1742, 1751, 1752, 1915, 1916], "defin": [1, 3, 4, 7, 9, 16, 21, 22, 23, 25, 28, 29, 31, 34, 72, 515, 622, 643, 690, 691, 693, 696, 700, 746, 771, 929, 930, 943, 944, 982, 983, 1059, 1097, 1110, 1111, 1137, 1138, 1176, 1177, 1215, 1253, 1722, 1723, 1742, 1834], "phase": [1, 3, 16, 17, 18, 20, 21, 22, 28, 29, 30, 33, 34, 211, 219, 221, 493, 496, 513, 515, 517, 551, 552, 570, 634, 659, 661, 663, 664, 666, 667, 825, 829, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 916, 918, 919, 920, 922, 923, 924, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 1292, 1422, 1450, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1539, 1601, 1663, 1834, 1901, 1914], "perform": [1, 25, 27, 28, 29, 32, 33, 35, 51, 52, 53, 56, 67, 83, 84, 85, 88, 93, 110, 111, 112, 116, 125, 143, 144, 145, 148, 158, 176, 177, 178, 181, 191, 208, 209, 210, 214, 217, 223, 241, 242, 243, 246, 256, 261, 274, 275, 276, 279, 289, 307, 308, 309, 312, 322, 327, 340, 341, 342, 345, 356, 374, 375, 376, 379, 389, 407, 408, 409, 412, 422, 440, 441, 442, 445, 455, 473, 474, 475, 478, 487, 506, 507, 508, 511, 519, 535, 536, 537, 540, 546, 582, 583, 584, 587, 593, 600, 601, 602, 603, 605, 746, 954, 965, 967, 968, 971, 977, 993, 1004, 1006, 1007, 1010, 1016, 1031, 1042, 1044, 1045, 1048, 1054, 1059, 1069, 1080, 1082, 1083, 1086, 1092, 1097, 1107, 1120, 1122, 1123, 1126, 1132, 1148, 1159, 1161, 1162, 1165, 1171, 1187, 1198, 1200, 1201, 1204, 1210, 1225, 1236, 1238, 1239, 1242, 1248, 1253, 1263, 1274, 1276, 1277, 1280, 1286, 1304, 1305, 1306, 1309, 1315, 1336, 1337, 1338, 1341, 1348, 1370, 1371, 1372, 1375, 1382, 1404, 1405, 1406, 1409, 1416, 1434, 1435, 1436, 1439, 1445, 1466, 1467, 1468, 1471, 1478, 1495, 1496, 1497, 1500, 1506, 1523, 1524, 1525, 1528, 1534, 1551, 1552, 1553, 1556, 1562, 1583, 1584, 1585, 1588, 1595, 1613, 1614, 1615, 1618, 1624, 1645, 1646, 1647, 1650, 1657, 1675, 1676, 1677, 1680, 1686, 1719, 1727, 1748, 1750, 1922], "drainag": [1, 9, 11, 12, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "simul": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 17, 18, 20, 22, 23, 26, 31, 34, 35, 38, 98, 119, 130, 163, 228, 261, 294, 327, 361, 394, 427, 524, 758, 804, 857, 1511, 1834, 1922], "calcul": [1, 5, 6, 9, 21, 23, 30, 34, 58, 130, 150, 183, 228, 248, 281, 314, 347, 381, 414, 447, 460, 480, 515, 551, 623, 659, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 733, 734, 735, 736, 737, 738, 740, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 764, 765, 766, 767, 768, 769, 792, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 838, 852, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 905, 907, 908, 910, 911, 912, 913, 915, 916, 918, 919, 920, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 982, 1320, 1324, 1358, 1392, 1454, 1483, 1571, 1633, 1914], "10": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 197, 671, 672, 673, 674, 675, 676, 677, 746, 887, 889, 929, 930, 934, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1905, 1915, 1916], "step": [1, 4, 6, 8, 11, 12, 16, 20, 27, 28, 29, 31, 33, 36, 99, 119, 217, 348, 382, 415, 448, 494, 542, 571, 635, 650, 746, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1727, 1750], "numer": [1, 3, 18, 20, 22, 28, 29, 30, 31, 39, 50, 57, 68, 73, 82, 89, 94, 100, 109, 117, 126, 131, 142, 149, 159, 164, 175, 182, 192, 198, 207, 215, 224, 229, 240, 247, 257, 262, 273, 280, 290, 295, 306, 313, 323, 328, 339, 346, 357, 362, 373, 380, 390, 395, 406, 413, 423, 428, 439, 446, 456, 461, 472, 479, 488, 497, 505, 512, 520, 525, 534, 541, 547, 554, 561, 564, 566, 573, 581, 588, 594, 648, 651, 662, 817, 819, 856, 857, 858, 859, 860, 862, 863, 864, 867, 869, 872, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 901, 902, 932, 947, 964, 972, 978, 986, 1003, 1011, 1017, 1024, 1041, 1049, 1055, 1062, 1079, 1087, 1093, 1100, 1119, 1127, 1133, 1141, 1158, 1166, 1172, 1180, 1197, 1205, 1211, 1218, 1235, 1243, 1249, 1256, 1273, 1281, 1287, 1295, 1303, 1310, 1316, 1325, 1335, 1342, 1349, 1359, 1369, 1376, 1383, 1393, 1403, 1410, 1417, 1425, 1433, 1440, 1446, 1455, 1465, 1472, 1479, 1486, 1494, 1501, 1507, 1514, 1522, 1529, 1535, 1542, 1550, 1557, 1563, 1572, 1582, 1589, 1596, 1604, 1612, 1619, 1625, 1634, 1644, 1651, 1658, 1666, 1674, 1681, 1687, 1902, 1903], "python": [1, 3, 5, 16, 17, 27, 28, 29, 31, 33, 34, 36, 552, 853, 943, 955, 982, 994, 1032, 1059, 1070, 1097, 1108, 1137, 1149, 1176, 1188, 1215, 1226, 1253, 1264, 1511, 1698, 1720, 1724, 1725, 1887, 1892, 1904, 1910], "primer": [1, 3, 26], "gener": [1, 3, 4, 5, 7, 9, 10, 13, 14, 15, 16, 21, 22, 27, 28, 29, 30, 31, 34, 48, 50, 69, 72, 80, 82, 95, 107, 109, 127, 140, 142, 160, 173, 175, 193, 205, 207, 225, 238, 240, 258, 271, 273, 291, 304, 306, 324, 337, 339, 358, 371, 373, 391, 404, 406, 424, 437, 439, 457, 470, 472, 489, 494, 503, 505, 521, 532, 534, 548, 559, 561, 567, 571, 579, 581, 595, 619, 635, 662, 739, 740, 741, 748, 798, 814, 826, 831, 922, 923, 929, 930, 932, 943, 945, 949, 955, 962, 964, 979, 982, 984, 988, 994, 1001, 1003, 1018, 1021, 1022, 1026, 1032, 1039, 1041, 1056, 1059, 1060, 1064, 1070, 1077, 1079, 1094, 1097, 1098, 1102, 1108, 1117, 1119, 1134, 1137, 1139, 1143, 1149, 1156, 1158, 1173, 1176, 1178, 1182, 1188, 1195, 1197, 1212, 1215, 1216, 1220, 1226, 1233, 1235, 1250, 1253, 1254, 1258, 1264, 1271, 1273, 1288, 1293, 1301, 1303, 1317, 1322, 1333, 1335, 1350, 1356, 1367, 1369, 1384, 1390, 1401, 1403, 1418, 1423, 1431, 1433, 1447, 1452, 1463, 1465, 1480, 1484, 1492, 1494, 1508, 1511, 1512, 1520, 1522, 1536, 1540, 1548, 1550, 1564, 1569, 1580, 1582, 1597, 1602, 1610, 1612, 1626, 1631, 1642, 1644, 1659, 1664, 1672, 1674, 1688, 1720, 1724, 1725, 1727, 1728, 1745, 1751, 1752, 1837, 1882, 1889, 1901, 1914, 1918, 1919], "quick": [1, 3, 5, 14, 25, 1915], "visual": [1, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 623, 666, 982, 1915, 1916, 1918], "storag": [1, 3, 28, 30, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "topologi": [1, 3, 5, 26, 28, 982, 1215, 1915], "represent": [1, 3, 20, 648, 932, 1753, 1756], "queri": [1, 3, 30, 31, 33, 51, 56, 67, 83, 88, 93, 110, 116, 125, 143, 148, 158, 176, 181, 191, 208, 214, 223, 241, 246, 256, 274, 279, 289, 307, 312, 322, 340, 345, 356, 374, 379, 389, 407, 412, 422, 440, 445, 455, 473, 478, 487, 506, 511, 519, 535, 540, 546, 582, 587, 593, 600, 603, 605, 965, 971, 977, 1004, 1010, 1016, 1042, 1048, 1054, 1080, 1086, 1092, 1120, 1126, 1132, 1159, 1165, 1171, 1198, 1204, 1210, 1215, 1236, 1242, 1248, 1274, 1280, 1286, 1304, 1309, 1315, 1336, 1341, 1348, 1370, 1375, 1382, 1404, 1409, 1416, 1434, 1439, 1445, 1466, 1471, 1478, 1495, 1500, 1506, 1523, 1528, 1534, 1551, 1556, 1562, 1583, 1588, 1595, 1613, 1618, 1624, 1645, 1650, 1657, 1675, 1680, 1686], "manipul": [1, 3, 26, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 587, 603, 971, 1010, 1048, 1086, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680], "assign": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 21, 22, 26, 27, 28, 30, 33, 34, 44, 51, 52, 53, 56, 63, 65, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 154, 156, 158, 169, 176, 177, 178, 181, 187, 189, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 252, 254, 256, 267, 274, 275, 276, 279, 285, 287, 289, 300, 307, 308, 309, 312, 318, 320, 322, 333, 340, 341, 342, 345, 352, 354, 356, 367, 374, 375, 376, 379, 385, 387, 389, 400, 407, 408, 409, 412, 418, 420, 422, 433, 440, 441, 442, 445, 451, 453, 455, 466, 473, 474, 475, 478, 484, 485, 487, 499, 506, 507, 508, 511, 519, 528, 535, 536, 537, 540, 546, 552, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 606, 619, 648, 746, 837, 929, 930, 943, 951, 965, 967, 968, 971, 977, 982, 990, 1004, 1006, 1007, 1010, 1016, 1028, 1042, 1044, 1045, 1048, 1054, 1059, 1066, 1080, 1082, 1083, 1086, 1092, 1097, 1104, 1120, 1122, 1123, 1126, 1132, 1137, 1145, 1159, 1161, 1162, 1165, 1171, 1176, 1184, 1198, 1200, 1201, 1204, 1210, 1215, 1222, 1236, 1238, 1239, 1242, 1248, 1253, 1260, 1274, 1276, 1277, 1280, 1286, 1297, 1304, 1305, 1306, 1309, 1315, 1321, 1327, 1336, 1337, 1338, 1341, 1348, 1355, 1361, 1370, 1371, 1372, 1375, 1382, 1389, 1395, 1404, 1405, 1406, 1409, 1416, 1427, 1434, 1435, 1436, 1439, 1445, 1451, 1457, 1466, 1467, 1468, 1471, 1478, 1488, 1495, 1496, 1497, 1500, 1506, 1516, 1523, 1524, 1525, 1528, 1534, 1544, 1551, 1552, 1553, 1556, 1562, 1568, 1574, 1583, 1584, 1585, 1588, 1595, 1606, 1613, 1614, 1615, 1618, 1624, 1630, 1636, 1645, 1646, 1647, 1650, 1657, 1668, 1675, 1676, 1677, 1680, 1686, 1711, 1749, 1755, 1846, 1918], "geometr": [1, 3, 4, 5, 10, 11, 12, 14, 15, 23, 27, 31, 32, 33, 647, 688, 715, 730, 920, 1137], "properti": [1, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 18, 20, 21, 22, 23, 25, 26, 28, 30, 32, 33, 34, 38, 39, 47, 57, 64, 72, 73, 79, 89, 98, 100, 106, 117, 130, 131, 139, 149, 155, 163, 164, 172, 182, 188, 196, 198, 204, 215, 228, 229, 237, 247, 253, 261, 262, 270, 280, 286, 294, 295, 303, 313, 319, 327, 328, 336, 346, 353, 361, 362, 370, 380, 386, 394, 395, 403, 413, 419, 427, 428, 436, 446, 452, 460, 461, 469, 479, 494, 497, 502, 512, 513, 524, 525, 531, 541, 554, 558, 564, 571, 573, 578, 588, 635, 648, 651, 655, 662, 664, 666, 688, 740, 744, 745, 747, 748, 749, 792, 795, 796, 797, 798, 799, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 852, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 922, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 945, 947, 960, 972, 984, 986, 999, 1011, 1022, 1024, 1037, 1049, 1060, 1062, 1075, 1087, 1098, 1100, 1115, 1127, 1137, 1139, 1141, 1154, 1166, 1178, 1180, 1193, 1205, 1215, 1216, 1218, 1231, 1243, 1254, 1256, 1269, 1281, 1293, 1295, 1300, 1310, 1320, 1322, 1325, 1330, 1331, 1332, 1342, 1356, 1359, 1364, 1365, 1366, 1376, 1390, 1393, 1398, 1399, 1400, 1410, 1423, 1425, 1430, 1440, 1452, 1455, 1460, 1461, 1462, 1472, 1483, 1484, 1486, 1491, 1501, 1512, 1514, 1519, 1529, 1540, 1542, 1547, 1557, 1567, 1569, 1572, 1577, 1578, 1579, 1589, 1602, 1604, 1609, 1619, 1629, 1631, 1634, 1639, 1640, 1641, 1651, 1664, 1666, 1671, 1681, 1837, 1903, 1907, 1915, 1916, 1918], "label": [1, 3, 5, 6, 7, 9, 11, 12, 14, 18, 22, 26, 28, 29, 31, 32, 33, 39, 44, 50, 52, 53, 56, 61, 67, 73, 76, 82, 84, 85, 88, 91, 93, 100, 103, 109, 111, 112, 116, 122, 125, 131, 136, 142, 144, 145, 148, 153, 158, 164, 169, 175, 177, 178, 181, 186, 191, 198, 201, 207, 209, 210, 214, 220, 223, 229, 234, 240, 242, 243, 246, 251, 256, 262, 267, 273, 275, 276, 279, 284, 289, 295, 300, 306, 308, 309, 312, 317, 322, 328, 333, 339, 341, 342, 345, 350, 356, 362, 367, 373, 375, 376, 379, 384, 389, 395, 400, 406, 408, 409, 412, 417, 422, 428, 433, 439, 441, 442, 445, 450, 455, 461, 466, 472, 474, 475, 478, 483, 487, 494, 495, 497, 499, 505, 507, 508, 511, 514, 516, 519, 525, 528, 534, 536, 537, 540, 544, 546, 552, 554, 561, 571, 572, 573, 575, 581, 583, 584, 587, 590, 591, 593, 598, 599, 601, 602, 603, 604, 605, 635, 636, 638, 662, 664, 943, 944, 945, 946, 947, 951, 955, 956, 964, 967, 968, 971, 974, 975, 977, 983, 984, 985, 986, 990, 994, 995, 1003, 1006, 1007, 1010, 1013, 1014, 1016, 1022, 1023, 1024, 1028, 1032, 1033, 1041, 1044, 1045, 1048, 1051, 1052, 1054, 1060, 1061, 1062, 1066, 1070, 1071, 1079, 1082, 1083, 1086, 1089, 1090, 1092, 1097, 1098, 1099, 1100, 1104, 1108, 1109, 1119, 1122, 1123, 1126, 1129, 1130, 1132, 1138, 1139, 1140, 1141, 1145, 1149, 1150, 1158, 1161, 1162, 1165, 1168, 1169, 1171, 1176, 1177, 1178, 1179, 1180, 1184, 1188, 1189, 1197, 1200, 1201, 1204, 1207, 1208, 1210, 1216, 1217, 1218, 1222, 1226, 1227, 1235, 1238, 1239, 1242, 1245, 1246, 1248, 1254, 1255, 1256, 1260, 1264, 1265, 1273, 1276, 1277, 1280, 1283, 1284, 1286, 1293, 1294, 1295, 1297, 1303, 1305, 1306, 1309, 1312, 1313, 1315, 1322, 1323, 1325, 1327, 1335, 1337, 1338, 1341, 1345, 1346, 1348, 1356, 1357, 1359, 1361, 1369, 1371, 1372, 1375, 1379, 1380, 1382, 1390, 1391, 1393, 1395, 1403, 1405, 1406, 1409, 1413, 1414, 1416, 1423, 1424, 1425, 1427, 1433, 1435, 1436, 1439, 1442, 1443, 1445, 1452, 1453, 1455, 1457, 1465, 1467, 1468, 1471, 1475, 1476, 1478, 1484, 1485, 1486, 1488, 1494, 1496, 1497, 1500, 1503, 1504, 1506, 1512, 1513, 1514, 1516, 1522, 1524, 1525, 1528, 1531, 1532, 1534, 1540, 1541, 1542, 1544, 1550, 1552, 1553, 1556, 1559, 1560, 1562, 1569, 1570, 1572, 1574, 1582, 1584, 1585, 1588, 1592, 1593, 1595, 1602, 1603, 1604, 1606, 1612, 1614, 1615, 1618, 1621, 1622, 1624, 1631, 1632, 1634, 1636, 1644, 1646, 1647, 1650, 1654, 1655, 1657, 1664, 1665, 1666, 1668, 1674, 1676, 1677, 1680, 1683, 1684, 1686, 1709, 1711, 1712, 1713, 1717, 1719, 1727, 1742, 1744, 1749, 1750, 1755, 1902, 1911, 1914, 1915, 1916, 1917, 1919], "domain": [1, 3, 4, 7, 8, 14, 23, 29, 31, 33, 38, 72, 98, 121, 130, 163, 196, 221, 228, 261, 294, 327, 361, 394, 427, 460, 493, 494, 495, 514, 524, 552, 553, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 606, 635, 636, 638, 943, 945, 946, 974, 982, 984, 985, 1013, 1021, 1022, 1023, 1051, 1059, 1060, 1061, 1089, 1097, 1098, 1099, 1129, 1137, 1139, 1140, 1168, 1176, 1178, 1179, 1207, 1215, 1216, 1217, 1245, 1253, 1254, 1255, 1283, 1292, 1293, 1294, 1312, 1320, 1322, 1323, 1345, 1354, 1356, 1357, 1379, 1388, 1390, 1391, 1413, 1422, 1423, 1424, 1442, 1450, 1452, 1453, 1475, 1483, 1484, 1485, 1503, 1511, 1512, 1513, 1531, 1539, 1540, 1541, 1559, 1567, 1569, 1570, 1592, 1601, 1602, 1603, 1621, 1629, 1631, 1632, 1654, 1663, 1664, 1665, 1683, 1727, 1728, 1730, 1736, 1746], "singl": [1, 2, 3, 6, 11, 12, 17, 18, 25, 27, 28, 30, 31, 33, 34, 58, 60, 90, 120, 150, 152, 183, 185, 218, 248, 250, 281, 283, 314, 316, 347, 349, 381, 383, 414, 416, 447, 449, 480, 482, 493, 543, 651, 662, 664, 666, 920, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1511, 1710, 1714, 1727, 1744, 1893, 1900, 1915, 1916], "transport": [1, 2, 3, 4, 6, 7, 8, 11, 15, 18, 26, 27, 29, 33, 261, 327, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 878, 903, 926, 982, 1922], "invas": [1, 3, 11, 99, 196, 197, 219], "option": [1, 3, 20, 25, 26, 27, 29, 31, 33, 36, 39, 44, 48, 50, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 67, 73, 76, 80, 82, 83, 84, 85, 88, 90, 91, 93, 100, 103, 107, 109, 110, 111, 112, 116, 120, 121, 122, 123, 125, 131, 136, 140, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 164, 169, 173, 175, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 198, 201, 205, 207, 208, 209, 210, 214, 218, 219, 220, 221, 223, 229, 234, 238, 240, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 256, 261, 262, 267, 271, 273, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 295, 300, 304, 306, 307, 308, 309, 312, 314, 316, 317, 318, 319, 320, 322, 328, 333, 337, 339, 340, 341, 342, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 362, 367, 371, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 389, 395, 400, 404, 406, 407, 408, 409, 412, 414, 415, 416, 417, 418, 419, 420, 422, 428, 433, 437, 439, 440, 441, 442, 445, 447, 448, 449, 450, 451, 452, 453, 455, 461, 466, 470, 472, 473, 474, 475, 478, 480, 482, 483, 484, 485, 487, 494, 497, 499, 503, 505, 506, 507, 508, 511, 516, 519, 525, 528, 532, 534, 535, 536, 537, 540, 542, 543, 544, 546, 554, 559, 561, 571, 573, 575, 579, 581, 582, 583, 584, 587, 591, 593, 599, 600, 601, 602, 603, 604, 605, 622, 624, 635, 650, 659, 662, 663, 666, 667, 741, 743, 744, 758, 792, 794, 795, 820, 821, 838, 853, 875, 900, 922, 926, 943, 945, 947, 949, 950, 951, 952, 955, 956, 959, 961, 962, 964, 965, 966, 967, 968, 971, 975, 977, 982, 984, 986, 988, 989, 990, 991, 994, 995, 998, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1010, 1014, 1016, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1032, 1033, 1036, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1048, 1052, 1054, 1059, 1060, 1062, 1064, 1065, 1066, 1067, 1070, 1071, 1074, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1086, 1090, 1092, 1097, 1098, 1100, 1102, 1103, 1104, 1105, 1108, 1109, 1114, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1126, 1130, 1132, 1137, 1139, 1141, 1143, 1144, 1145, 1146, 1149, 1150, 1153, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1165, 1169, 1171, 1176, 1178, 1180, 1182, 1183, 1184, 1185, 1188, 1189, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1204, 1208, 1210, 1215, 1216, 1218, 1220, 1221, 1222, 1223, 1226, 1227, 1230, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1242, 1246, 1248, 1253, 1254, 1256, 1258, 1259, 1260, 1261, 1264, 1265, 1268, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1280, 1284, 1286, 1293, 1295, 1297, 1301, 1303, 1304, 1305, 1306, 1309, 1313, 1315, 1322, 1325, 1327, 1332, 1333, 1335, 1336, 1337, 1338, 1341, 1346, 1348, 1353, 1356, 1359, 1361, 1366, 1367, 1369, 1370, 1371, 1372, 1375, 1380, 1382, 1387, 1390, 1393, 1395, 1400, 1401, 1403, 1404, 1405, 1406, 1409, 1414, 1416, 1421, 1423, 1425, 1427, 1431, 1433, 1434, 1435, 1436, 1439, 1443, 1445, 1452, 1455, 1457, 1462, 1463, 1465, 1466, 1467, 1468, 1471, 1476, 1478, 1484, 1486, 1488, 1492, 1494, 1495, 1496, 1497, 1500, 1504, 1506, 1511, 1512, 1514, 1516, 1520, 1522, 1523, 1524, 1525, 1528, 1532, 1534, 1540, 1542, 1544, 1548, 1550, 1551, 1552, 1553, 1556, 1560, 1562, 1569, 1572, 1574, 1579, 1580, 1582, 1583, 1584, 1585, 1588, 1593, 1595, 1600, 1602, 1604, 1606, 1610, 1612, 1613, 1614, 1615, 1618, 1622, 1624, 1631, 1634, 1636, 1641, 1642, 1644, 1645, 1646, 1647, 1650, 1655, 1657, 1662, 1664, 1666, 1668, 1672, 1674, 1675, 1676, 1677, 1680, 1684, 1686, 1699, 1712, 1714, 1717, 1720, 1721, 1724, 1725, 1726, 1734, 1736, 1744, 1747, 1750, 1751, 1752, 1777, 1882, 1889, 1892, 1902, 1903, 1915, 1916, 1917], "applic": [1, 20, 21, 23, 25, 29, 33, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 506, 535, 582, 600, 965, 1004, 1042, 1059, 1080, 1120, 1159, 1198, 1236, 1253, 1274, 1304, 1336, 1370, 1404, 1434, 1466, 1495, 1523, 1551, 1583, 1613, 1645, 1675], "refer": [1, 7, 17, 18, 25, 26, 27, 29, 31, 32, 33, 65, 156, 189, 197, 254, 287, 320, 348, 354, 382, 387, 415, 420, 448, 453, 485, 542, 552, 647, 651, 741, 747, 749, 762, 763, 797, 799, 827, 834, 846, 853, 860, 863, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 901, 902, 907, 920, 923, 924, 929, 930, 1773, 1837], "scale": [1, 2, 4, 5, 6, 9, 10, 11, 12, 14, 18, 21, 27, 30, 31, 34, 38, 39, 50, 72, 73, 82, 98, 100, 109, 130, 131, 142, 163, 164, 175, 196, 198, 207, 228, 229, 240, 261, 262, 273, 294, 295, 306, 327, 328, 339, 361, 362, 373, 394, 395, 406, 427, 428, 439, 460, 461, 472, 493, 494, 497, 505, 524, 525, 534, 552, 553, 554, 561, 570, 571, 573, 581, 634, 635, 647, 658, 667, 671, 672, 673, 674, 675, 676, 677, 688, 745, 747, 749, 796, 797, 799, 814, 822, 827, 828, 834, 883, 920, 922, 943, 945, 947, 964, 982, 984, 986, 1003, 1021, 1022, 1024, 1041, 1059, 1060, 1062, 1079, 1097, 1098, 1100, 1119, 1137, 1139, 1141, 1158, 1176, 1178, 1180, 1197, 1215, 1216, 1218, 1235, 1253, 1254, 1256, 1273, 1292, 1293, 1295, 1303, 1320, 1322, 1325, 1335, 1354, 1356, 1359, 1369, 1388, 1390, 1393, 1403, 1422, 1423, 1425, 1433, 1450, 1452, 1455, 1465, 1483, 1484, 1486, 1494, 1511, 1512, 1514, 1522, 1539, 1540, 1542, 1550, 1567, 1569, 1572, 1582, 1601, 1602, 1604, 1612, 1629, 1631, 1634, 1644, 1663, 1664, 1666, 1674, 1699, 1904, 1915, 1916, 1917, 1918], "model": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 21, 22, 26, 27, 33, 34, 38, 39, 50, 64, 72, 73, 82, 98, 100, 109, 130, 131, 142, 155, 163, 164, 175, 188, 196, 198, 207, 228, 229, 240, 253, 261, 262, 273, 286, 294, 295, 306, 319, 327, 328, 339, 353, 361, 362, 373, 386, 394, 395, 406, 419, 427, 428, 439, 452, 460, 461, 472, 493, 494, 495, 497, 505, 513, 514, 515, 524, 525, 534, 552, 553, 554, 561, 570, 571, 572, 573, 581, 589, 590, 606, 619, 623, 634, 635, 636, 637, 638, 658, 667, 671, 672, 673, 674, 675, 676, 677, 680, 683, 684, 686, 687, 688, 690, 695, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 724, 727, 731, 732, 734, 738, 740, 741, 744, 745, 746, 747, 748, 749, 792, 795, 796, 797, 798, 799, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 830, 831, 832, 833, 834, 835, 852, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 922, 923, 924, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 945, 946, 947, 964, 973, 974, 982, 984, 985, 986, 1003, 1012, 1013, 1021, 1022, 1023, 1024, 1041, 1050, 1051, 1059, 1060, 1061, 1062, 1079, 1088, 1089, 1097, 1098, 1099, 1100, 1119, 1128, 1129, 1137, 1139, 1140, 1141, 1158, 1167, 1168, 1176, 1178, 1179, 1180, 1197, 1206, 1207, 1215, 1216, 1217, 1218, 1235, 1244, 1245, 1253, 1254, 1255, 1256, 1273, 1282, 1283, 1292, 1293, 1294, 1295, 1303, 1311, 1312, 1320, 1322, 1323, 1325, 1335, 1343, 1345, 1354, 1356, 1357, 1359, 1369, 1377, 1379, 1388, 1390, 1391, 1393, 1403, 1411, 1413, 1422, 1423, 1424, 1425, 1433, 1441, 1442, 1450, 1452, 1453, 1455, 1465, 1473, 1475, 1483, 1484, 1485, 1486, 1494, 1502, 1503, 1511, 1512, 1513, 1514, 1522, 1530, 1531, 1539, 1540, 1541, 1542, 1550, 1558, 1559, 1567, 1569, 1570, 1572, 1582, 1590, 1592, 1601, 1602, 1603, 1604, 1612, 1620, 1621, 1629, 1631, 1632, 1634, 1644, 1652, 1654, 1663, 1664, 1665, 1666, 1674, 1682, 1683, 1901, 1904, 1908, 1909, 1914], "set": [1, 2, 6, 7, 9, 10, 11, 12, 14, 15, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 45, 49, 51, 58, 59, 60, 61, 64, 72, 77, 81, 83, 90, 91, 98, 99, 104, 108, 110, 120, 122, 130, 137, 141, 143, 150, 151, 152, 153, 155, 163, 170, 174, 176, 183, 184, 185, 186, 188, 196, 197, 202, 206, 208, 218, 220, 228, 235, 239, 241, 248, 249, 250, 251, 253, 261, 268, 272, 274, 281, 282, 283, 284, 286, 294, 301, 305, 307, 314, 315, 316, 317, 319, 327, 334, 338, 340, 347, 349, 350, 353, 361, 368, 372, 374, 381, 383, 384, 386, 394, 401, 405, 407, 414, 416, 417, 419, 427, 434, 438, 440, 447, 449, 450, 452, 460, 467, 471, 473, 480, 481, 482, 483, 493, 496, 500, 504, 506, 515, 516, 517, 524, 529, 533, 535, 543, 544, 553, 556, 560, 570, 576, 580, 582, 591, 600, 604, 610, 612, 613, 625, 627, 628, 651, 659, 747, 749, 797, 799, 827, 834, 926, 943, 949, 950, 955, 956, 957, 963, 965, 975, 982, 988, 989, 994, 995, 996, 1002, 1004, 1014, 1021, 1026, 1027, 1032, 1033, 1034, 1040, 1042, 1052, 1059, 1064, 1065, 1070, 1071, 1072, 1078, 1080, 1090, 1097, 1102, 1103, 1108, 1109, 1112, 1118, 1120, 1130, 1137, 1143, 1144, 1149, 1150, 1151, 1157, 1159, 1169, 1176, 1182, 1183, 1188, 1189, 1190, 1196, 1198, 1208, 1215, 1220, 1221, 1226, 1227, 1228, 1234, 1236, 1246, 1253, 1258, 1259, 1264, 1265, 1266, 1272, 1274, 1284, 1292, 1298, 1302, 1304, 1313, 1320, 1328, 1334, 1336, 1346, 1353, 1354, 1362, 1368, 1370, 1380, 1387, 1388, 1396, 1402, 1404, 1414, 1421, 1422, 1428, 1432, 1434, 1443, 1450, 1458, 1464, 1466, 1476, 1483, 1489, 1493, 1495, 1504, 1511, 1517, 1521, 1523, 1532, 1539, 1545, 1549, 1551, 1560, 1567, 1575, 1581, 1583, 1593, 1600, 1601, 1607, 1611, 1613, 1622, 1629, 1637, 1643, 1645, 1655, 1662, 1663, 1669, 1673, 1675, 1684, 1719, 1720, 1722, 1724, 1725, 1726, 1728, 1736, 1746, 1750, 1753, 1755, 1756, 1787, 1789, 1790, 1799, 1801, 1802, 1813, 1815, 1816, 1833, 1837, 1845, 1846, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1883, 1885, 1886, 1908, 1909, 1916], "attribut": [1, 2, 4, 15, 17, 20, 25, 27, 29, 30, 33, 38, 59, 72, 98, 130, 151, 163, 184, 196, 228, 249, 261, 282, 294, 315, 327, 361, 394, 427, 460, 481, 493, 524, 552, 553, 570, 589, 606, 619, 634, 637, 658, 667, 853, 943, 973, 982, 1012, 1021, 1050, 1059, 1088, 1097, 1128, 1137, 1167, 1176, 1206, 1215, 1244, 1253, 1282, 1292, 1311, 1320, 1343, 1354, 1377, 1388, 1411, 1422, 1441, 1450, 1473, 1483, 1502, 1511, 1530, 1539, 1558, 1567, 1590, 1601, 1620, 1629, 1652, 1663, 1682, 1759, 1760, 1762, 1769, 1771, 1773, 1775, 1784, 1834, 1847, 1859, 1860, 1897, 1909], "machineri": [1, 2], "workspac": [1, 2, 9, 10, 12, 23, 658, 1757, 1834, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896], "project": [1, 2, 5, 34, 35, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 493, 524, 553, 570, 646, 651, 658, 661, 662, 663, 664, 665, 666, 667, 943, 982, 1021, 1059, 1097, 1137, 1176, 1215, 1253, 1292, 1320, 1354, 1388, 1422, 1450, 1483, 1511, 1539, 1567, 1601, 1629, 1663, 1710, 1757, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1878, 1880, 1882, 1887, 1888, 1889, 1892, 1893], "manag": [1, 2, 30, 552, 924], "cluster": [1, 2, 33, 99, 837, 838, 1711, 1719, 1723, 1734, 1737, 1744, 1749, 1755, 1898], "avail": [1, 2, 7, 10, 21, 23, 25, 31, 32, 33, 34, 36, 495, 542, 572, 636, 651, 878, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1698, 1721], "matrix": [1, 2, 18, 22, 25, 27, 29, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 460, 943, 949, 950, 959, 961, 982, 988, 989, 998, 1000, 1021, 1026, 1027, 1036, 1038, 1059, 1064, 1065, 1074, 1076, 1097, 1102, 1103, 1114, 1116, 1137, 1143, 1144, 1153, 1155, 1176, 1182, 1183, 1192, 1194, 1215, 1220, 1221, 1230, 1232, 1253, 1258, 1259, 1268, 1270, 1698, 1699, 1714, 1716, 1721, 1738, 1739, 1740, 1741, 1747, 1748, 1753, 1756, 1905], "solver": [1, 2, 16, 18, 20, 22, 23, 59, 151, 184, 249, 282, 315, 481, 640, 1692, 1694, 1696, 1698, 1699, 1702], "steadi": [1, 2, 23, 34, 261, 327, 460, 659, 667], "state": [1, 2, 9, 23, 27, 32, 33, 34, 261, 460, 659, 665, 667, 857, 858, 926, 1324, 1358, 1392, 1454, 1571, 1633], "explan": [1, 2, 1796, 1881, 1919], "unit": [1, 2, 7, 647, 806, 853, 856, 857, 858, 859, 860, 862, 863, 864, 867, 869, 878, 880, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 898, 899, 901, 902, 929, 930, 943, 1176], "reactiv": [1, 2], "conduct": [1, 2, 4, 6, 8, 16, 18, 20, 22, 27, 163, 228, 551, 888, 889, 890, 891, 903, 905, 910, 911, 912, 913, 915, 916, 918, 919, 920, 926, 930, 940, 941, 1059, 1253], "transient": [1, 2, 327, 348, 361, 382, 394, 415, 427, 448, 524, 542, 659, 667, 758], "softwar": [2, 26, 34, 647, 649], "illustr": [2, 5, 22, 25, 26, 27, 28, 29, 31, 32, 33, 745, 747, 749, 796, 797, 799, 822, 827, 834, 1750], "problem": [2, 9, 10, 11, 22, 25, 27, 28, 29, 327, 905, 1898], "fix": [2, 9, 13, 29, 31, 33, 853, 1898], "appli": [2, 10, 22, 23, 27, 29, 30, 32, 33, 34, 44, 51, 60, 61, 62, 63, 64, 65, 76, 83, 90, 91, 99, 103, 110, 119, 120, 121, 122, 123, 130, 136, 143, 152, 153, 154, 155, 156, 169, 176, 185, 186, 187, 188, 189, 201, 208, 218, 219, 220, 221, 234, 241, 250, 251, 252, 253, 254, 267, 274, 283, 284, 285, 286, 287, 300, 307, 316, 317, 318, 319, 320, 333, 340, 349, 350, 351, 352, 353, 354, 367, 374, 383, 384, 385, 386, 387, 400, 407, 416, 417, 418, 419, 420, 433, 440, 449, 450, 451, 452, 453, 466, 473, 482, 483, 484, 485, 494, 495, 499, 506, 516, 528, 535, 543, 544, 552, 571, 572, 575, 582, 591, 599, 600, 604, 635, 636, 817, 823, 853, 875, 900, 920, 929, 930, 945, 946, 949, 950, 951, 955, 956, 965, 966, 975, 984, 985, 988, 989, 990, 994, 995, 1004, 1005, 1014, 1022, 1023, 1026, 1027, 1028, 1032, 1033, 1042, 1043, 1052, 1060, 1061, 1064, 1065, 1066, 1070, 1071, 1080, 1081, 1090, 1098, 1099, 1102, 1103, 1104, 1108, 1109, 1120, 1121, 1130, 1139, 1140, 1143, 1144, 1145, 1149, 1150, 1159, 1160, 1169, 1178, 1179, 1182, 1183, 1184, 1188, 1189, 1198, 1199, 1208, 1216, 1217, 1220, 1221, 1222, 1226, 1227, 1236, 1237, 1246, 1254, 1255, 1258, 1259, 1260, 1264, 1265, 1274, 1275, 1284, 1293, 1294, 1297, 1304, 1313, 1321, 1322, 1323, 1327, 1332, 1336, 1346, 1355, 1356, 1357, 1361, 1366, 1370, 1380, 1389, 1390, 1391, 1395, 1400, 1404, 1414, 1423, 1424, 1427, 1434, 1443, 1451, 1452, 1453, 1457, 1462, 1466, 1476, 1484, 1485, 1488, 1495, 1504, 1512, 1513, 1516, 1523, 1532, 1540, 1541, 1544, 1551, 1560, 1568, 1569, 1570, 1574, 1579, 1583, 1593, 1602, 1603, 1606, 1613, 1622, 1630, 1631, 1632, 1636, 1641, 1645, 1655, 1664, 1665, 1668, 1675, 1684, 1709, 1712, 1713, 1717, 1724, 1725, 1727, 1736, 1742, 1744, 1750, 1833, 1845, 1858], "valu": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 28, 29, 30, 32, 33, 34, 42, 44, 45, 46, 48, 55, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 76, 77, 78, 80, 87, 88, 90, 92, 93, 94, 95, 103, 104, 105, 107, 115, 116, 120, 121, 123, 124, 125, 126, 127, 134, 136, 137, 138, 140, 147, 148, 150, 152, 154, 156, 157, 158, 159, 160, 167, 169, 170, 171, 173, 180, 181, 183, 185, 187, 189, 190, 191, 192, 193, 197, 201, 202, 203, 205, 213, 214, 218, 219, 221, 222, 223, 224, 225, 232, 234, 235, 236, 238, 245, 246, 248, 250, 252, 254, 255, 256, 257, 258, 265, 267, 268, 269, 271, 278, 279, 281, 283, 285, 287, 288, 289, 290, 291, 298, 300, 301, 302, 304, 311, 312, 314, 316, 318, 320, 321, 322, 323, 324, 331, 333, 334, 335, 337, 344, 345, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 365, 367, 368, 369, 371, 378, 379, 381, 382, 383, 385, 387, 388, 389, 390, 391, 398, 400, 401, 402, 404, 411, 412, 414, 415, 416, 418, 420, 421, 422, 423, 424, 431, 433, 434, 435, 437, 444, 445, 447, 448, 449, 451, 453, 454, 455, 456, 457, 464, 466, 467, 468, 470, 477, 478, 480, 482, 484, 485, 486, 487, 488, 489, 494, 499, 500, 501, 503, 510, 511, 517, 518, 519, 520, 521, 528, 529, 530, 532, 539, 540, 542, 543, 545, 546, 547, 548, 552, 556, 557, 559, 563, 565, 566, 567, 571, 575, 576, 577, 579, 586, 587, 592, 593, 594, 595, 599, 603, 605, 610, 611, 615, 616, 619, 625, 626, 630, 631, 635, 643, 647, 659, 666, 683, 684, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 740, 741, 743, 744, 745, 746, 747, 748, 749, 751, 753, 756, 757, 758, 759, 760, 763, 764, 765, 767, 768, 769, 771, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 792, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 846, 853, 856, 857, 858, 859, 860, 862, 863, 864, 867, 869, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 922, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 945, 949, 950, 951, 953, 957, 958, 959, 961, 962, 966, 970, 971, 976, 977, 978, 979, 982, 984, 988, 989, 990, 992, 996, 997, 998, 1000, 1001, 1005, 1009, 1010, 1015, 1016, 1017, 1018, 1021, 1022, 1026, 1027, 1028, 1030, 1034, 1035, 1036, 1038, 1039, 1043, 1047, 1048, 1053, 1054, 1055, 1056, 1059, 1060, 1064, 1065, 1066, 1068, 1072, 1073, 1074, 1076, 1077, 1081, 1085, 1086, 1091, 1092, 1093, 1094, 1097, 1098, 1102, 1103, 1104, 1106, 1112, 1113, 1114, 1116, 1117, 1121, 1125, 1126, 1131, 1132, 1133, 1134, 1137, 1139, 1143, 1144, 1145, 1147, 1151, 1152, 1153, 1155, 1156, 1160, 1164, 1165, 1170, 1171, 1172, 1173, 1176, 1178, 1182, 1183, 1184, 1186, 1190, 1191, 1192, 1194, 1195, 1199, 1203, 1204, 1209, 1210, 1211, 1212, 1215, 1216, 1220, 1221, 1222, 1224, 1228, 1229, 1230, 1232, 1233, 1237, 1241, 1242, 1247, 1248, 1249, 1250, 1253, 1254, 1258, 1259, 1260, 1262, 1266, 1267, 1268, 1270, 1271, 1275, 1279, 1280, 1285, 1286, 1287, 1288, 1292, 1293, 1297, 1298, 1299, 1301, 1308, 1309, 1314, 1315, 1316, 1317, 1321, 1322, 1324, 1327, 1328, 1329, 1330, 1332, 1333, 1340, 1341, 1347, 1348, 1349, 1350, 1355, 1356, 1358, 1361, 1362, 1363, 1364, 1366, 1367, 1374, 1375, 1381, 1382, 1383, 1384, 1389, 1390, 1392, 1395, 1396, 1397, 1398, 1400, 1401, 1408, 1409, 1415, 1416, 1417, 1418, 1422, 1423, 1427, 1428, 1429, 1431, 1438, 1439, 1444, 1445, 1446, 1447, 1451, 1452, 1454, 1457, 1458, 1459, 1460, 1462, 1463, 1470, 1471, 1477, 1478, 1479, 1480, 1484, 1488, 1489, 1490, 1492, 1499, 1500, 1505, 1506, 1507, 1508, 1512, 1516, 1517, 1518, 1520, 1527, 1528, 1533, 1534, 1535, 1536, 1540, 1544, 1545, 1546, 1548, 1555, 1556, 1561, 1562, 1563, 1564, 1568, 1569, 1571, 1574, 1575, 1576, 1577, 1579, 1580, 1587, 1588, 1594, 1595, 1596, 1597, 1602, 1606, 1607, 1608, 1610, 1617, 1618, 1623, 1624, 1625, 1626, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1641, 1642, 1649, 1650, 1656, 1657, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1672, 1679, 1680, 1685, 1686, 1687, 1688, 1709, 1711, 1714, 1715, 1716, 1721, 1723, 1735, 1736, 1737, 1745, 1748, 1749, 1751, 1752, 1784, 1787, 1788, 1792, 1793, 1799, 1800, 1804, 1805, 1810, 1813, 1814, 1818, 1819, 1826, 1828, 1831, 1833, 1838, 1840, 1843, 1845, 1846, 1848, 1851, 1853, 1854, 1856, 1858, 1883, 1884, 1891, 1894, 1908, 1909, 1915, 1916, 1917, 1918, 1919], "rate": [2, 4, 6, 7, 8, 12, 14, 18, 22, 23, 32, 41, 60, 63, 90, 120, 130, 133, 152, 154, 166, 185, 187, 218, 231, 250, 252, 264, 283, 285, 297, 316, 318, 330, 349, 352, 364, 383, 385, 397, 416, 418, 430, 449, 451, 463, 482, 484, 543, 903, 927, 929, 930, 931, 933, 934, 935, 936, 937, 938, 1915], "boundari": [2, 4, 7, 8, 9, 10, 12, 14, 18, 23, 30, 33, 40, 60, 62, 63, 64, 65, 74, 90, 101, 120, 121, 123, 130, 132, 152, 154, 155, 156, 165, 185, 187, 188, 189, 199, 218, 219, 221, 230, 250, 252, 253, 254, 263, 283, 285, 286, 287, 296, 316, 318, 319, 320, 329, 349, 351, 352, 353, 354, 363, 383, 385, 386, 387, 396, 416, 418, 419, 420, 429, 449, 451, 452, 453, 462, 482, 484, 485, 526, 543, 944, 983, 1138, 1177, 1709, 1728, 1734, 1736, 1915, 1916], "condit": [2, 4, 8, 9, 12, 14, 18, 22, 23, 30, 33, 40, 60, 62, 63, 64, 65, 74, 90, 101, 120, 121, 123, 130, 132, 152, 154, 155, 156, 165, 185, 187, 188, 189, 199, 218, 219, 221, 230, 250, 252, 253, 254, 263, 283, 285, 286, 287, 296, 316, 318, 319, 320, 329, 348, 349, 351, 352, 353, 354, 363, 382, 383, 385, 386, 387, 396, 415, 416, 418, 419, 420, 429, 448, 449, 451, 452, 453, 462, 482, 484, 485, 526, 542, 543, 846, 853, 857, 864, 1734], "solv": [2, 4, 7, 18, 22, 23, 29, 32, 62, 351, 929, 930, 1698, 1700, 1704, 1706], "system": [2, 18, 22, 23, 493, 551, 643, 929, 930, 1693, 1695, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1707, 1728, 1746], "equat": [2, 4, 6, 9, 18, 21, 22, 23, 32, 33, 862, 867, 893, 907, 908, 923, 924, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 1693, 1695, 1697, 1701, 1703, 1705, 1707], "spars": [2, 33, 943, 949, 950, 959, 961, 982, 988, 989, 998, 1000, 1021, 1026, 1027, 1036, 1038, 1059, 1064, 1065, 1074, 1076, 1097, 1102, 1103, 1114, 1116, 1137, 1143, 1144, 1153, 1155, 1176, 1182, 1183, 1192, 1194, 1215, 1220, 1221, 1230, 1232, 1253, 1258, 1259, 1268, 1270, 1691, 1698, 1704, 1706, 1711, 1714, 1716, 1721, 1726, 1738, 1739, 1740, 1741, 1749, 1753, 1756, 1905], "matric": [2, 18, 59, 151, 184, 249, 282, 315, 481, 1215], "pressur": [2, 4, 6, 9, 11, 12, 14, 16, 20, 22, 23, 31, 32, 33, 99, 113, 119, 196, 211, 762, 763, 853, 856, 860, 862, 863, 883, 884, 887, 889, 891, 893, 894, 895, 898, 899, 901, 902, 905, 907, 908, 913, 922, 923, 924, 927], "v": [2, 6, 28, 29, 31, 70, 96, 128, 161, 194, 211, 226, 259, 292, 325, 359, 392, 425, 458, 490, 522, 549, 568, 596, 617, 632, 929, 930, 980, 1019, 1057, 1095, 1135, 1174, 1213, 1251, 1289, 1318, 1351, 1385, 1419, 1448, 1481, 1509, 1537, 1565, 1598, 1627, 1660, 1689, 1794, 1808, 1820, 1895], "gaug": 2, "convers": [2, 1834], "packag": [2, 12, 16, 25, 31, 33, 35, 647, 650, 659, 853, 893, 1320, 1511, 1567, 1629, 1922], "challeng": [2, 10, 33], "sourc": [2, 10, 34, 35, 36, 38, 62, 64, 72, 74, 90, 98, 99, 113, 118, 119, 121, 123, 130, 155, 163, 188, 196, 197, 211, 216, 217, 219, 221, 228, 253, 261, 283, 286, 294, 319, 327, 353, 361, 386, 394, 419, 427, 448, 452, 460, 463, 464, 480, 481, 484, 485, 493, 496, 513, 515, 517, 524, 542, 551, 553, 554, 558, 559, 561, 562, 564, 566, 567, 570, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 619, 622, 623, 624, 632, 634, 635, 636, 637, 638, 639, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 740, 741, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 760, 762, 763, 765, 767, 768, 769, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 791, 792, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 806, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 916, 918, 919, 920, 922, 923, 924, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 944, 982, 983, 1021, 1059, 1097, 1110, 1111, 1137, 1176, 1177, 1215, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1230, 1232, 1237, 1253, 1292, 1320, 1354, 1387, 1388, 1421, 1422, 1450, 1451, 1454, 1460, 1462, 1473, 1474, 1483, 1511, 1539, 1567, 1601, 1629, 1663, 1692, 1693, 1694, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1784, 1796, 1802, 1806, 1807, 1810, 1822, 1834, 1837, 1846, 1847, 1848, 1852, 1854, 1859, 1860, 1861, 1878, 1880, 1881, 1882, 1887, 1888, 1889, 1892, 1893, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "term": [2, 11, 23, 30, 32, 33, 64, 155, 188, 253, 261, 286, 319, 353, 386, 419, 452, 647, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 982], "function": [2, 5, 6, 9, 10, 15, 17, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 51, 60, 68, 83, 90, 94, 99, 110, 120, 126, 143, 152, 159, 176, 185, 192, 197, 208, 218, 224, 241, 250, 257, 274, 283, 290, 307, 316, 323, 340, 348, 349, 357, 374, 382, 383, 390, 407, 415, 416, 423, 440, 448, 449, 456, 473, 482, 488, 492, 494, 506, 520, 535, 542, 543, 547, 552, 566, 570, 571, 582, 589, 594, 598, 600, 606, 607, 634, 635, 637, 643, 662, 671, 672, 673, 674, 675, 676, 677, 680, 683, 684, 686, 687, 689, 703, 718, 733, 739, 742, 746, 747, 749, 750, 753, 755, 761, 764, 766, 770, 772, 786, 790, 793, 797, 799, 800, 805, 807, 814, 823, 825, 827, 829, 834, 835, 852, 853, 855, 857, 861, 865, 870, 873, 878, 879, 881, 885, 892, 896, 904, 905, 906, 909, 914, 917, 920, 921, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 945, 965, 973, 978, 984, 1004, 1012, 1017, 1022, 1042, 1050, 1055, 1060, 1080, 1088, 1093, 1098, 1120, 1128, 1133, 1139, 1159, 1167, 1172, 1178, 1198, 1206, 1211, 1215, 1216, 1236, 1244, 1249, 1254, 1274, 1282, 1287, 1293, 1304, 1311, 1316, 1320, 1322, 1336, 1343, 1349, 1356, 1370, 1377, 1383, 1390, 1404, 1411, 1417, 1423, 1434, 1441, 1446, 1452, 1466, 1473, 1479, 1484, 1495, 1502, 1507, 1512, 1523, 1530, 1535, 1540, 1551, 1558, 1563, 1567, 1569, 1583, 1590, 1596, 1602, 1613, 1620, 1625, 1629, 1631, 1645, 1652, 1658, 1664, 1675, 1682, 1687, 1710, 1711, 1713, 1715, 1727, 1728, 1742, 1748, 1749, 1755, 1759, 1765, 1767, 1768, 1777, 1778, 1779, 1780, 1833, 1845, 1846, 1858, 1878, 1902, 1903, 1912, 1916], "how": [2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 44, 48, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 67, 76, 80, 83, 84, 85, 88, 90, 91, 93, 103, 107, 110, 111, 112, 116, 120, 121, 122, 123, 125, 136, 140, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 169, 173, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 201, 205, 208, 209, 210, 214, 218, 219, 220, 221, 223, 234, 238, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 256, 267, 271, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 300, 304, 307, 308, 309, 312, 314, 316, 317, 318, 319, 320, 322, 333, 337, 340, 341, 342, 345, 347, 349, 350, 351, 352, 353, 354, 356, 367, 371, 374, 375, 376, 379, 381, 383, 384, 385, 386, 387, 389, 400, 404, 407, 408, 409, 412, 414, 416, 417, 418, 419, 420, 422, 433, 437, 440, 441, 442, 445, 447, 449, 450, 451, 452, 453, 455, 466, 470, 473, 474, 475, 478, 480, 482, 483, 484, 485, 487, 494, 499, 503, 506, 507, 508, 511, 516, 519, 528, 532, 535, 536, 537, 540, 543, 544, 546, 559, 571, 575, 579, 582, 583, 584, 587, 591, 593, 599, 600, 601, 602, 603, 604, 605, 635, 662, 744, 792, 795, 820, 821, 823, 826, 926, 945, 951, 962, 965, 967, 968, 971, 975, 977, 984, 990, 1001, 1004, 1006, 1007, 1010, 1014, 1016, 1022, 1028, 1039, 1042, 1044, 1045, 1048, 1052, 1054, 1060, 1066, 1077, 1080, 1082, 1083, 1086, 1090, 1092, 1098, 1104, 1117, 1120, 1122, 1123, 1126, 1130, 1132, 1139, 1145, 1156, 1159, 1161, 1162, 1165, 1169, 1171, 1178, 1184, 1195, 1198, 1200, 1201, 1204, 1208, 1210, 1216, 1222, 1233, 1236, 1238, 1239, 1242, 1246, 1248, 1254, 1260, 1271, 1274, 1276, 1277, 1280, 1284, 1286, 1293, 1297, 1301, 1304, 1305, 1306, 1309, 1313, 1315, 1322, 1327, 1333, 1336, 1337, 1338, 1341, 1346, 1348, 1356, 1361, 1367, 1370, 1371, 1372, 1375, 1380, 1382, 1390, 1395, 1401, 1404, 1405, 1406, 1409, 1414, 1416, 1423, 1427, 1431, 1434, 1435, 1436, 1439, 1443, 1445, 1452, 1457, 1463, 1466, 1467, 1468, 1471, 1476, 1478, 1484, 1488, 1492, 1495, 1496, 1497, 1500, 1504, 1506, 1512, 1516, 1520, 1523, 1524, 1525, 1528, 1532, 1534, 1540, 1544, 1548, 1551, 1552, 1553, 1556, 1560, 1562, 1569, 1574, 1580, 1583, 1584, 1585, 1588, 1593, 1595, 1602, 1606, 1610, 1613, 1614, 1615, 1618, 1622, 1624, 1631, 1636, 1642, 1645, 1646, 1647, 1650, 1655, 1657, 1664, 1668, 1672, 1675, 1676, 1677, 1680, 1684, 1686, 1736, 1915], "work": [2, 5, 6, 7, 9, 13, 15, 18, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 513, 623, 647, 651, 666, 741, 747, 749, 797, 799, 827, 834, 846, 853, 1059, 1253, 1320, 1353, 1387, 1421, 1511, 1600, 1662, 1713, 1744, 1764, 1766, 1777, 1779, 1822, 1887, 1892, 1918], "conduit": [2, 4, 6, 11, 12, 20, 32, 551, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 905, 910, 911, 912, 913, 915, 916, 918, 919, 920, 926, 940, 941], "shape": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 26, 27, 28, 29, 31, 32, 33, 34, 652, 689, 703, 704, 705, 706, 707, 709, 710, 712, 715, 717, 718, 733, 743, 745, 749, 755, 763, 772, 794, 796, 799, 803, 807, 809, 810, 813, 822, 823, 834, 905, 920, 932, 943, 949, 950, 952, 953, 954, 955, 956, 966, 982, 988, 989, 991, 992, 993, 994, 995, 1005, 1021, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1043, 1059, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1081, 1097, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1121, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1160, 1176, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1199, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1237, 1253, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1275, 1714, 1717, 1728, 1731, 1736, 1737, 1742, 1746, 1751, 1752, 1810, 1914, 1915, 1916], "built": [2, 5, 7, 20, 25, 659, 1539, 1601], "deriv": [2, 22, 552], "arbitrari": [2, 26, 27, 803, 823, 1021, 1059, 1253, 1872, 1900], "throat": [2, 4, 6, 7, 11, 12, 14, 15, 16, 18, 20, 22, 25, 26, 31, 32, 33, 34, 38, 39, 44, 47, 48, 51, 53, 56, 57, 58, 61, 68, 69, 72, 73, 76, 79, 80, 83, 85, 88, 89, 91, 94, 95, 98, 99, 100, 103, 106, 107, 110, 112, 116, 117, 122, 126, 127, 130, 131, 136, 139, 140, 143, 145, 148, 149, 150, 153, 159, 160, 163, 164, 169, 172, 173, 176, 178, 181, 182, 183, 186, 192, 193, 196, 197, 198, 201, 204, 205, 208, 210, 214, 215, 220, 224, 225, 228, 229, 234, 237, 238, 241, 243, 246, 247, 248, 251, 257, 258, 261, 262, 267, 270, 271, 274, 276, 279, 280, 281, 284, 290, 291, 294, 295, 300, 303, 304, 307, 309, 312, 313, 314, 317, 323, 324, 327, 328, 333, 336, 337, 340, 342, 345, 346, 347, 350, 357, 358, 361, 362, 367, 370, 371, 374, 376, 379, 380, 381, 384, 390, 391, 394, 395, 400, 403, 404, 407, 409, 412, 413, 414, 417, 423, 424, 427, 428, 433, 436, 437, 440, 442, 445, 446, 447, 450, 456, 457, 460, 461, 466, 469, 470, 473, 475, 478, 479, 480, 483, 488, 489, 493, 497, 499, 502, 503, 506, 508, 511, 512, 516, 517, 520, 521, 524, 525, 528, 531, 532, 535, 537, 540, 541, 544, 547, 548, 551, 552, 553, 554, 558, 559, 564, 566, 567, 570, 573, 575, 578, 579, 582, 584, 587, 588, 591, 594, 595, 599, 600, 602, 603, 604, 647, 648, 652, 655, 659, 661, 662, 664, 671, 672, 673, 674, 675, 676, 677, 683, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 744, 751, 752, 753, 754, 758, 762, 763, 765, 767, 768, 769, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 794, 796, 797, 799, 801, 802, 803, 804, 806, 808, 809, 810, 811, 812, 813, 821, 826, 832, 844, 846, 847, 848, 849, 851, 871, 880, 905, 907, 908, 910, 911, 912, 913, 915, 916, 918, 919, 920, 922, 923, 924, 926, 927, 940, 941, 943, 947, 949, 950, 951, 952, 953, 956, 959, 960, 962, 965, 968, 971, 972, 975, 978, 979, 982, 986, 988, 989, 990, 991, 992, 995, 998, 999, 1001, 1004, 1007, 1010, 1011, 1014, 1017, 1018, 1021, 1024, 1026, 1027, 1028, 1029, 1030, 1033, 1036, 1037, 1039, 1042, 1045, 1048, 1049, 1052, 1055, 1056, 1059, 1062, 1064, 1065, 1066, 1067, 1068, 1071, 1074, 1075, 1077, 1080, 1083, 1086, 1087, 1090, 1093, 1094, 1097, 1100, 1102, 1103, 1104, 1105, 1106, 1109, 1111, 1114, 1115, 1117, 1120, 1123, 1126, 1127, 1130, 1133, 1134, 1137, 1141, 1143, 1144, 1145, 1146, 1147, 1150, 1153, 1154, 1156, 1159, 1162, 1165, 1166, 1169, 1172, 1173, 1176, 1180, 1182, 1183, 1184, 1185, 1186, 1189, 1192, 1193, 1195, 1198, 1201, 1204, 1205, 1208, 1211, 1212, 1215, 1218, 1220, 1221, 1222, 1223, 1224, 1227, 1230, 1231, 1233, 1236, 1239, 1242, 1243, 1246, 1249, 1250, 1253, 1256, 1258, 1259, 1260, 1261, 1262, 1265, 1268, 1269, 1271, 1274, 1277, 1280, 1281, 1284, 1287, 1288, 1292, 1295, 1297, 1300, 1301, 1304, 1306, 1309, 1310, 1313, 1316, 1317, 1320, 1325, 1327, 1331, 1333, 1336, 1338, 1341, 1342, 1346, 1349, 1350, 1354, 1359, 1361, 1365, 1367, 1370, 1372, 1375, 1376, 1380, 1383, 1384, 1388, 1393, 1395, 1399, 1401, 1404, 1406, 1409, 1410, 1414, 1417, 1418, 1422, 1425, 1427, 1430, 1431, 1434, 1436, 1439, 1440, 1443, 1446, 1447, 1450, 1455, 1457, 1461, 1463, 1466, 1468, 1471, 1472, 1476, 1479, 1480, 1483, 1486, 1488, 1491, 1492, 1495, 1497, 1500, 1501, 1504, 1507, 1508, 1511, 1514, 1516, 1519, 1520, 1523, 1525, 1528, 1529, 1532, 1535, 1536, 1539, 1542, 1544, 1547, 1548, 1551, 1553, 1556, 1557, 1560, 1563, 1564, 1567, 1572, 1574, 1578, 1580, 1583, 1585, 1588, 1589, 1593, 1596, 1597, 1601, 1604, 1606, 1609, 1610, 1613, 1615, 1618, 1619, 1622, 1625, 1626, 1629, 1634, 1636, 1640, 1642, 1645, 1647, 1650, 1651, 1655, 1658, 1659, 1663, 1666, 1668, 1671, 1672, 1675, 1677, 1680, 1681, 1684, 1687, 1688, 1710, 1713, 1717, 1719, 1723, 1744, 1745, 1750, 1754, 1897, 1898, 1907, 1913, 1914, 1915, 1916, 1917, 1918, 1919], "element": [2, 16, 20, 25, 27, 29, 30, 32, 33, 51, 57, 83, 89, 110, 117, 143, 149, 176, 182, 208, 215, 241, 247, 274, 280, 307, 313, 340, 346, 374, 380, 407, 413, 440, 446, 473, 479, 506, 512, 535, 541, 564, 582, 588, 600, 643, 659, 662, 671, 672, 673, 674, 675, 676, 677, 700, 715, 730, 740, 741, 748, 798, 818, 826, 829, 831, 833, 926, 927, 949, 953, 965, 966, 972, 988, 992, 1004, 1005, 1011, 1026, 1030, 1042, 1043, 1049, 1064, 1068, 1080, 1081, 1087, 1102, 1106, 1120, 1121, 1127, 1143, 1147, 1159, 1160, 1166, 1182, 1186, 1198, 1199, 1205, 1220, 1224, 1236, 1237, 1243, 1258, 1262, 1274, 1275, 1281, 1304, 1310, 1336, 1342, 1370, 1376, 1404, 1410, 1434, 1440, 1466, 1472, 1495, 1501, 1523, 1529, 1551, 1557, 1583, 1589, 1613, 1619, 1645, 1651, 1675, 1681, 1711, 1713, 1721, 1749, 1827, 1833, 1839, 1845, 1847, 1852, 1858, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1872, 1873, 1874, 1876], "tutori": [3, 9, 18, 25, 26, 27, 29, 30, 31, 1919], "exampl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 25, 26, 29, 31, 34, 745, 747, 749, 796, 797, 799, 822, 823, 827, 834, 932, 949, 950, 952, 953, 954, 955, 956, 966, 988, 989, 991, 992, 993, 994, 995, 1005, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1043, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1081, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1121, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1160, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1199, 1215, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1237, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1275, 1713, 1750, 1764, 1766, 1777, 1779, 1810, 1822, 1904, 1915, 1916], "explain": [4, 10, 14, 18, 20, 22, 27, 29, 31, 1916], "permeabilti": 4, "note": [4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 51, 52, 53, 56, 60, 62, 64, 68, 83, 84, 85, 88, 90, 94, 99, 110, 111, 112, 116, 120, 126, 130, 143, 144, 145, 148, 152, 155, 159, 176, 177, 178, 181, 185, 188, 192, 196, 197, 208, 209, 210, 214, 218, 224, 241, 242, 243, 246, 250, 253, 257, 261, 274, 275, 276, 279, 283, 286, 290, 307, 308, 309, 312, 316, 319, 323, 340, 341, 342, 345, 349, 351, 353, 357, 374, 375, 376, 379, 383, 386, 390, 407, 408, 409, 412, 416, 419, 423, 427, 440, 441, 442, 445, 449, 452, 456, 473, 474, 475, 478, 482, 488, 493, 494, 495, 506, 507, 508, 511, 520, 535, 536, 537, 540, 543, 547, 551, 566, 571, 572, 582, 583, 584, 587, 589, 594, 600, 601, 602, 603, 623, 635, 636, 637, 647, 648, 649, 651, 652, 658, 659, 665, 667, 690, 695, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 738, 741, 746, 749, 751, 753, 799, 806, 808, 809, 810, 811, 812, 813, 817, 829, 834, 846, 853, 857, 860, 867, 876, 878, 880, 884, 891, 893, 895, 902, 905, 907, 908, 915, 916, 923, 924, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 943, 945, 946, 949, 950, 953, 955, 956, 959, 961, 965, 966, 967, 968, 971, 973, 978, 982, 984, 985, 988, 989, 992, 994, 995, 998, 1000, 1004, 1005, 1006, 1007, 1010, 1012, 1017, 1021, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1036, 1038, 1042, 1043, 1044, 1045, 1048, 1050, 1055, 1059, 1060, 1061, 1064, 1065, 1068, 1070, 1071, 1074, 1076, 1080, 1081, 1082, 1083, 1086, 1088, 1093, 1097, 1098, 1099, 1102, 1103, 1106, 1108, 1109, 1110, 1111, 1114, 1116, 1120, 1121, 1122, 1123, 1126, 1128, 1133, 1139, 1140, 1143, 1144, 1147, 1149, 1150, 1153, 1155, 1159, 1160, 1161, 1162, 1165, 1167, 1172, 1176, 1178, 1179, 1182, 1183, 1186, 1188, 1189, 1192, 1194, 1198, 1199, 1200, 1201, 1204, 1206, 1211, 1216, 1217, 1220, 1221, 1224, 1226, 1227, 1230, 1232, 1236, 1237, 1238, 1239, 1242, 1244, 1249, 1253, 1254, 1255, 1258, 1259, 1262, 1264, 1265, 1268, 1270, 1274, 1275, 1276, 1277, 1280, 1282, 1287, 1293, 1294, 1304, 1305, 1306, 1309, 1311, 1316, 1321, 1322, 1323, 1336, 1337, 1338, 1341, 1343, 1344, 1349, 1353, 1355, 1356, 1357, 1370, 1371, 1372, 1375, 1377, 1378, 1383, 1387, 1389, 1390, 1391, 1404, 1405, 1406, 1409, 1411, 1412, 1417, 1421, 1423, 1424, 1434, 1435, 1436, 1439, 1441, 1446, 1451, 1452, 1453, 1466, 1467, 1468, 1471, 1473, 1474, 1479, 1484, 1485, 1495, 1496, 1497, 1500, 1502, 1507, 1512, 1513, 1523, 1524, 1525, 1528, 1530, 1535, 1540, 1541, 1551, 1552, 1553, 1556, 1558, 1563, 1568, 1569, 1570, 1583, 1584, 1585, 1588, 1590, 1591, 1596, 1600, 1602, 1603, 1613, 1614, 1615, 1618, 1620, 1625, 1630, 1631, 1632, 1645, 1646, 1647, 1650, 1652, 1653, 1658, 1662, 1664, 1665, 1675, 1676, 1677, 1680, 1682, 1687, 1698, 1699, 1711, 1713, 1715, 1717, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1736, 1744, 1745, 1748, 1749, 1750, 1755, 1762, 1773, 1837, 1878, 1887, 1892, 1893, 1898, 1902, 1903, 1914, 1915, 1916, 1918], "calcualt": [4, 853], "an": [4, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 50, 60, 64, 68, 71, 72, 79, 80, 82, 90, 94, 97, 106, 107, 109, 119, 120, 121, 123, 126, 129, 130, 139, 140, 142, 152, 155, 159, 162, 172, 173, 175, 185, 188, 192, 195, 197, 204, 205, 207, 218, 219, 221, 224, 227, 237, 238, 240, 250, 253, 257, 260, 261, 270, 271, 273, 283, 286, 290, 293, 303, 304, 306, 316, 319, 323, 326, 336, 337, 339, 348, 349, 353, 357, 360, 370, 371, 373, 382, 383, 386, 390, 393, 403, 404, 406, 415, 416, 419, 423, 426, 436, 437, 439, 448, 449, 452, 456, 459, 460, 469, 470, 472, 482, 488, 491, 493, 502, 503, 505, 520, 523, 531, 532, 534, 542, 543, 547, 550, 552, 553, 558, 559, 561, 566, 569, 578, 579, 581, 594, 597, 618, 619, 623, 633, 646, 647, 648, 650, 651, 658, 659, 660, 661, 662, 663, 664, 665, 740, 741, 745, 748, 762, 771, 796, 798, 803, 806, 814, 817, 822, 823, 831, 832, 838, 845, 846, 853, 856, 857, 874, 875, 876, 877, 897, 900, 901, 907, 923, 926, 927, 949, 950, 953, 954, 955, 960, 962, 964, 966, 978, 981, 988, 989, 992, 993, 994, 999, 1001, 1003, 1005, 1017, 1020, 1021, 1026, 1027, 1030, 1031, 1032, 1037, 1039, 1041, 1043, 1055, 1058, 1059, 1064, 1065, 1068, 1069, 1070, 1075, 1077, 1079, 1081, 1093, 1096, 1097, 1102, 1103, 1106, 1107, 1108, 1115, 1117, 1119, 1121, 1133, 1136, 1143, 1144, 1147, 1148, 1149, 1154, 1156, 1158, 1160, 1172, 1175, 1182, 1183, 1186, 1187, 1188, 1193, 1195, 1197, 1199, 1211, 1214, 1215, 1220, 1221, 1224, 1225, 1226, 1231, 1233, 1235, 1237, 1249, 1252, 1253, 1258, 1259, 1262, 1263, 1264, 1269, 1271, 1273, 1275, 1287, 1290, 1292, 1300, 1301, 1303, 1316, 1319, 1321, 1324, 1331, 1332, 1333, 1335, 1349, 1352, 1355, 1358, 1365, 1366, 1367, 1369, 1383, 1386, 1389, 1392, 1399, 1400, 1401, 1403, 1417, 1420, 1430, 1431, 1433, 1446, 1449, 1450, 1451, 1454, 1461, 1462, 1463, 1465, 1479, 1482, 1483, 1491, 1492, 1494, 1507, 1510, 1519, 1520, 1522, 1535, 1538, 1547, 1548, 1550, 1563, 1566, 1567, 1568, 1571, 1578, 1579, 1580, 1582, 1596, 1599, 1609, 1610, 1612, 1625, 1628, 1629, 1630, 1633, 1640, 1641, 1642, 1644, 1658, 1661, 1663, 1671, 1672, 1674, 1687, 1690, 1699, 1710, 1711, 1716, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1731, 1732, 1736, 1737, 1742, 1749, 1751, 1752, 1755, 1760, 1764, 1766, 1773, 1779, 1782, 1795, 1809, 1821, 1834, 1861, 1866, 1872, 1873, 1882, 1889, 1896, 1897, 1908, 1909, 1910, 1915, 1916, 1918], "extract": [4, 7, 8, 9, 11, 18, 23, 26, 27, 29, 30, 34, 494, 571, 635, 647, 648, 650, 651, 905, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1769, 1771, 1773, 1775, 1777, 1779, 1893], "from": [4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 22, 23, 26, 27, 28, 30, 31, 33, 34, 39, 45, 60, 61, 64, 70, 73, 77, 90, 91, 96, 100, 104, 120, 121, 122, 123, 128, 131, 137, 152, 153, 155, 161, 164, 170, 185, 186, 188, 194, 198, 202, 218, 219, 220, 221, 226, 229, 235, 250, 251, 253, 259, 262, 268, 283, 284, 286, 292, 295, 301, 316, 317, 319, 325, 328, 334, 349, 350, 353, 359, 362, 368, 383, 384, 386, 392, 395, 401, 416, 417, 419, 425, 428, 434, 449, 450, 452, 458, 461, 467, 482, 483, 490, 492, 497, 500, 516, 522, 525, 529, 543, 544, 549, 552, 554, 556, 568, 570, 573, 576, 591, 596, 604, 608, 610, 617, 619, 620, 625, 632, 645, 647, 648, 649, 651, 652, 659, 662, 663, 667, 743, 744, 745, 747, 749, 755, 756, 757, 759, 760, 794, 796, 797, 799, 806, 810, 811, 818, 821, 822, 827, 834, 851, 859, 864, 867, 871, 874, 877, 878, 893, 924, 927, 932, 944, 947, 957, 975, 980, 982, 983, 986, 996, 1014, 1019, 1021, 1024, 1034, 1052, 1057, 1062, 1072, 1090, 1095, 1100, 1110, 1111, 1112, 1130, 1135, 1138, 1141, 1151, 1169, 1174, 1177, 1180, 1190, 1208, 1213, 1218, 1228, 1246, 1251, 1256, 1266, 1284, 1289, 1295, 1298, 1313, 1318, 1325, 1328, 1330, 1344, 1346, 1351, 1359, 1362, 1364, 1378, 1380, 1385, 1393, 1396, 1398, 1412, 1414, 1419, 1425, 1428, 1443, 1448, 1455, 1458, 1460, 1474, 1476, 1481, 1486, 1489, 1504, 1509, 1511, 1514, 1517, 1532, 1537, 1542, 1545, 1560, 1565, 1567, 1572, 1575, 1577, 1591, 1593, 1598, 1604, 1607, 1622, 1627, 1629, 1634, 1637, 1639, 1653, 1655, 1660, 1666, 1669, 1684, 1689, 1699, 1710, 1714, 1716, 1717, 1725, 1736, 1745, 1753, 1754, 1755, 1756, 1759, 1762, 1764, 1766, 1769, 1771, 1773, 1775, 1777, 1779, 1785, 1787, 1794, 1797, 1799, 1808, 1810, 1811, 1813, 1820, 1822, 1824, 1827, 1836, 1839, 1849, 1852, 1862, 1865, 1866, 1873, 1878, 1879, 1880, 1883, 1887, 1888, 1895, 1898, 1899, 1904, 1914, 1916, 1918], "porespi": [4, 7, 8, 9, 10, 650], "similar": [4, 6, 7, 8, 10, 11, 12, 23, 29, 31, 33, 763], "algorithm": [4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 22, 23, 34, 38, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 118, 120, 130, 151, 152, 163, 184, 185, 196, 217, 218, 228, 249, 250, 261, 282, 283, 294, 315, 316, 327, 348, 349, 361, 382, 383, 394, 415, 416, 427, 448, 449, 460, 481, 482, 524, 542, 543, 552, 570, 647, 878, 927, 929, 930, 1726, 1834, 1892, 1906], "import": [4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 646, 745, 747, 749, 796, 797, 799, 806, 822, 823, 827, 834, 920, 932, 949, 950, 952, 953, 954, 955, 956, 966, 988, 989, 991, 992, 993, 994, 995, 1005, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1043, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1081, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1121, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1160, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1199, 1215, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1237, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1275, 1757, 1777, 1779, 1810, 1822, 1904, 1915, 1916, 1918], "numpi": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 56, 59, 67, 88, 93, 116, 125, 148, 151, 158, 181, 184, 191, 214, 223, 246, 249, 256, 279, 282, 289, 312, 315, 322, 345, 348, 356, 379, 382, 389, 412, 415, 422, 445, 448, 455, 478, 481, 487, 511, 519, 540, 542, 546, 587, 593, 603, 605, 643, 737, 740, 741, 745, 746, 747, 748, 749, 753, 759, 765, 783, 788, 794, 796, 797, 798, 799, 802, 806, 809, 822, 823, 827, 831, 834, 840, 859, 880, 882, 883, 884, 890, 891, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 927, 932, 940, 941, 953, 955, 971, 977, 992, 994, 1010, 1016, 1030, 1032, 1048, 1054, 1068, 1070, 1086, 1092, 1106, 1108, 1126, 1132, 1147, 1149, 1165, 1171, 1186, 1188, 1204, 1210, 1215, 1224, 1226, 1242, 1248, 1262, 1264, 1280, 1286, 1309, 1315, 1341, 1348, 1375, 1382, 1409, 1416, 1439, 1445, 1471, 1478, 1500, 1506, 1528, 1534, 1556, 1562, 1588, 1595, 1618, 1624, 1650, 1657, 1680, 1686, 1699, 1720, 1724, 1725, 1733, 1751, 1752, 1773, 1810, 1899, 1902, 1903, 1904, 1911], "np": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 52, 56, 60, 68, 69, 72, 84, 88, 90, 94, 95, 98, 99, 111, 116, 120, 126, 127, 130, 144, 148, 152, 159, 160, 163, 177, 181, 185, 192, 193, 196, 209, 214, 218, 224, 225, 228, 242, 246, 250, 257, 258, 261, 275, 279, 283, 290, 291, 294, 308, 312, 316, 323, 324, 327, 341, 345, 349, 357, 358, 361, 375, 379, 383, 390, 391, 394, 408, 412, 416, 423, 424, 427, 441, 445, 449, 456, 457, 460, 474, 478, 482, 488, 489, 493, 494, 507, 511, 520, 521, 524, 536, 540, 543, 547, 548, 553, 566, 567, 570, 571, 583, 587, 594, 595, 601, 603, 635, 741, 745, 796, 822, 823, 838, 840, 897, 901, 932, 943, 945, 949, 950, 966, 967, 971, 978, 979, 982, 984, 988, 989, 1005, 1006, 1010, 1017, 1018, 1021, 1022, 1026, 1027, 1043, 1044, 1048, 1055, 1056, 1059, 1060, 1064, 1065, 1081, 1082, 1086, 1093, 1094, 1097, 1098, 1102, 1103, 1121, 1122, 1126, 1133, 1134, 1137, 1139, 1143, 1144, 1160, 1161, 1165, 1172, 1173, 1176, 1178, 1182, 1183, 1199, 1200, 1204, 1211, 1212, 1215, 1216, 1220, 1221, 1237, 1238, 1242, 1249, 1250, 1253, 1254, 1258, 1259, 1275, 1276, 1280, 1287, 1288, 1292, 1293, 1305, 1309, 1316, 1317, 1320, 1321, 1322, 1337, 1341, 1349, 1350, 1354, 1355, 1356, 1371, 1375, 1383, 1384, 1388, 1389, 1390, 1405, 1409, 1417, 1418, 1422, 1423, 1435, 1439, 1446, 1447, 1450, 1451, 1452, 1467, 1471, 1479, 1480, 1483, 1484, 1496, 1500, 1507, 1508, 1511, 1512, 1524, 1528, 1535, 1536, 1539, 1540, 1552, 1556, 1563, 1564, 1567, 1568, 1569, 1584, 1588, 1596, 1597, 1601, 1602, 1614, 1618, 1625, 1626, 1629, 1630, 1631, 1646, 1650, 1658, 1659, 1663, 1664, 1676, 1680, 1687, 1688, 1698, 1719, 1723, 1733, 1904], "op": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 745, 796, 822, 823, 932, 949, 950, 952, 953, 954, 955, 956, 966, 988, 989, 991, 992, 993, 994, 995, 1005, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1043, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1081, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1121, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1160, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1199, 1215, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1237, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1275, 1745, 1915, 1916], "set_mpl_styl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34], "seed": [4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 18, 21, 26, 27, 29, 30, 32, 33, 34, 671, 672, 673, 674, 675, 676, 677, 740, 741, 745, 747, 748, 749, 791, 792, 796, 797, 798, 799, 822, 827, 831, 834], "matplotlib": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 21, 26, 28, 29, 30, 33, 34, 624, 745, 747, 749, 796, 797, 799, 822, 827, 834, 1915, 1916, 1917, 1921], "inlin": [4, 6, 7, 8, 10, 11, 12, 21, 34], "set_printopt": [4, 6, 7, 8, 9, 10, 11, 12, 21], "precis": [4, 6, 7, 8, 9, 10, 11, 12, 21], "5": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 648, 671, 672, 673, 674, 675, 676, 677, 683, 713, 728, 746, 749, 799, 823, 834, 853, 863, 895, 902, 929, 930, 931, 932, 934, 935, 936, 949, 950, 952, 953, 954, 955, 956, 966, 988, 989, 991, 992, 993, 994, 995, 1005, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1043, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1081, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1121, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1160, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1199, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1237, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1275, 1713, 1904, 1918], "pn": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 745, 796, 822, 823, 829, 932, 949, 950, 952, 953, 954, 955, 956, 966, 988, 989, 991, 992, 993, 994, 995, 1005, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1043, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1081, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1121, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1160, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1199, 1215, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1237, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1275, 1915, 1916], "15": [4, 5, 7, 8, 9, 10, 11, 12, 14, 18, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34], "space": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 21, 26, 27, 29, 30, 32, 33, 34, 130, 647, 905, 932, 943, 944, 982, 983, 1021, 1138, 1176, 1177, 1732, 1782], "1e": [4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 21, 22, 26, 29, 32, 33, 34, 642, 840, 845, 926, 1696, 1698, 1702, 1704, 1905], "6": [4, 5, 7, 8, 9, 10, 11, 12, 14, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 680, 683, 926, 929, 930, 931, 934, 955, 966, 982, 994, 1005, 1032, 1043, 1070, 1081, 1108, 1121, 1149, 1160, 1188, 1199, 1226, 1237, 1264, 1275, 1727, 1746], "add_model_collect": [4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 21, 29, 34], "collect": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 21, 34, 495, 572, 636, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "geometri": [4, 6, 8, 9, 10, 11, 12, 14, 20, 21, 23, 29, 30, 34, 552, 652, 745, 746, 796, 822, 1097, 1710], "spheres_and_cylind": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 21, 23, 29, 34], "regenerate_model": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 21, 29, 31, 34, 494, 552, 571, 635, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664], "It": [4, 5, 7, 9, 11, 13, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 60, 90, 120, 152, 185, 197, 218, 250, 283, 316, 349, 383, 416, 449, 482, 513, 543, 634, 647, 741, 853, 1059, 1253, 1736, 1745, 1751, 1752, 1761, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1778, 1780, 1781, 1783, 1878, 1898, 1918], "assum": [4, 6, 7, 9, 10, 11, 12, 23, 25, 26, 28, 29, 30, 32, 33, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 493, 543, 551, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 743, 746, 751, 752, 753, 754, 755, 756, 757, 759, 760, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 794, 853, 878, 905, 907, 908, 929, 930, 932, 949, 982, 988, 1021, 1026, 1064, 1102, 1111, 1143, 1182, 1220, 1258, 1709, 1714, 1737, 1742], "flowsthrough": 4, "porou": [4, 6, 7, 8, 9, 11, 12, 23, 26, 33, 35, 130, 1922], "medium": [4, 6, 8, 11, 12, 23, 926], "As": [4, 11, 12, 14, 15, 16, 18, 21, 22, 23, 27, 29, 30, 31, 32, 34, 853], "fluid": [4, 6, 7, 9, 11, 12, 20, 23, 32, 33, 99, 121, 123, 196, 219, 221, 905, 927], "ani": [4, 5, 7, 8, 9, 17, 18, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 36, 44, 51, 52, 53, 56, 60, 67, 76, 83, 84, 85, 88, 90, 93, 103, 110, 111, 112, 116, 120, 121, 123, 125, 136, 143, 144, 145, 148, 152, 158, 169, 176, 177, 178, 181, 185, 191, 201, 208, 209, 210, 214, 218, 219, 221, 223, 234, 241, 242, 243, 246, 250, 256, 267, 274, 275, 276, 279, 283, 289, 300, 307, 308, 309, 312, 316, 322, 333, 340, 341, 342, 345, 349, 356, 367, 374, 375, 376, 379, 383, 389, 400, 407, 408, 409, 412, 416, 422, 433, 440, 441, 442, 445, 449, 455, 466, 473, 474, 475, 478, 482, 487, 499, 506, 507, 508, 511, 517, 519, 528, 535, 536, 537, 540, 543, 546, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 648, 658, 659, 662, 667, 746, 823, 845, 846, 847, 848, 849, 851, 853, 926, 951, 952, 955, 956, 965, 966, 967, 968, 971, 977, 982, 990, 991, 994, 995, 1004, 1005, 1006, 1007, 1010, 1016, 1028, 1029, 1032, 1033, 1042, 1043, 1044, 1045, 1048, 1054, 1066, 1067, 1070, 1071, 1080, 1081, 1082, 1083, 1086, 1092, 1104, 1105, 1108, 1109, 1120, 1121, 1122, 1123, 1126, 1132, 1145, 1146, 1149, 1150, 1159, 1160, 1161, 1162, 1165, 1171, 1184, 1185, 1188, 1189, 1198, 1199, 1200, 1201, 1204, 1210, 1222, 1223, 1226, 1227, 1236, 1237, 1238, 1239, 1242, 1248, 1260, 1261, 1264, 1265, 1274, 1275, 1276, 1277, 1280, 1286, 1297, 1304, 1305, 1306, 1309, 1315, 1327, 1336, 1337, 1338, 1341, 1348, 1361, 1370, 1371, 1372, 1375, 1382, 1395, 1404, 1405, 1406, 1409, 1416, 1427, 1434, 1435, 1436, 1439, 1445, 1457, 1466, 1467, 1468, 1471, 1478, 1483, 1488, 1495, 1496, 1497, 1500, 1506, 1516, 1523, 1524, 1525, 1528, 1534, 1544, 1551, 1552, 1553, 1556, 1562, 1574, 1583, 1584, 1585, 1588, 1595, 1606, 1613, 1614, 1615, 1618, 1624, 1636, 1645, 1646, 1647, 1650, 1657, 1668, 1675, 1676, 1677, 1680, 1686, 1711, 1715, 1720, 1723, 1724, 1725, 1727, 1743, 1744, 1748, 1755, 1834, 1880, 1887, 1902, 1903, 1908, 1909], "other": [4, 5, 6, 7, 9, 10, 11, 12, 17, 18, 23, 25, 27, 29, 31, 32, 33, 34, 60, 62, 90, 120, 121, 123, 152, 185, 218, 219, 221, 250, 283, 316, 349, 351, 383, 416, 449, 482, 494, 543, 552, 571, 635, 643, 644, 658, 659, 664, 666, 667, 740, 744, 745, 747, 748, 749, 792, 795, 796, 797, 798, 799, 814, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 840, 846, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 944, 945, 954, 959, 961, 983, 984, 993, 998, 1000, 1021, 1022, 1031, 1036, 1038, 1060, 1069, 1074, 1076, 1098, 1107, 1114, 1116, 1138, 1139, 1148, 1153, 1155, 1176, 1177, 1178, 1187, 1192, 1194, 1216, 1225, 1230, 1232, 1254, 1263, 1268, 1270, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1712, 1716, 1735, 1743, 1748, 1750, 1773, 1834, 1864, 1877, 1898, 1915, 1916], "viscos": [4, 6, 12, 14, 21, 23, 31, 680, 683, 684, 853, 864, 886, 897, 898, 899, 900, 901, 902, 918, 919, 920, 1330, 1332, 1364, 1366, 1398, 1400, 1460, 1462, 1577, 1579, 1639, 1641, 1901, 1902, 1903], "found": [4, 5, 6, 9, 10, 11, 12, 14, 17, 18, 23, 25, 26, 27, 28, 29, 30, 32, 33, 614, 629, 744, 811, 812, 821, 845, 893, 952, 953, 954, 955, 956, 966, 991, 992, 993, 994, 995, 1005, 1029, 1030, 1031, 1032, 1033, 1043, 1067, 1068, 1069, 1070, 1071, 1081, 1105, 1106, 1107, 1108, 1109, 1110, 1121, 1146, 1147, 1148, 1149, 1150, 1160, 1185, 1186, 1187, 1188, 1189, 1199, 1223, 1224, 1225, 1226, 1227, 1237, 1261, 1262, 1263, 1264, 1265, 1275, 1699, 1710, 1720, 1724, 1725, 1726, 1727, 1742, 1755, 1791, 1803, 1817, 1890], "To": [4, 5, 6, 7, 8, 9, 11, 12, 21, 23, 25, 28, 29, 31, 32, 33, 34, 36, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 587, 603, 658, 959, 961, 971, 998, 1000, 1010, 1036, 1038, 1048, 1074, 1076, 1086, 1114, 1116, 1126, 1153, 1155, 1165, 1192, 1194, 1204, 1230, 1232, 1242, 1268, 1270, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1728, 1750, 1777, 1779, 1915, 1916], "hydraul": [4, 12, 32, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 905, 913, 918, 919, 920], "must": [4, 6, 7, 9, 11, 12, 16, 20, 23, 25, 28, 29, 30, 31, 33, 63, 65, 68, 94, 126, 154, 156, 159, 187, 189, 192, 197, 221, 224, 252, 254, 257, 285, 287, 290, 318, 320, 323, 352, 354, 357, 385, 387, 390, 418, 420, 423, 427, 451, 453, 456, 484, 485, 488, 520, 547, 566, 594, 651, 663, 666, 829, 853, 860, 884, 891, 895, 902, 929, 930, 932, 944, 953, 978, 992, 1017, 1030, 1055, 1068, 1093, 1106, 1133, 1147, 1172, 1177, 1186, 1211, 1224, 1249, 1262, 1287, 1316, 1349, 1383, 1417, 1446, 1479, 1483, 1507, 1511, 1535, 1563, 1596, 1625, 1658, 1687, 1698, 1709, 1717, 1721, 1736, 1747, 1748, 1755, 1762, 1773, 1873, 1899], "here": [4, 5, 6, 7, 9, 11, 12, 16, 17, 25, 26, 27, 28, 29, 30, 31, 34, 649, 806, 880, 929, 930, 966, 1005, 1043, 1081, 1121, 1160, 1199, 1237, 1275, 1699, 1769, 1771, 1916], "basic": [4, 7, 8, 9, 11, 12, 16, 17, 25, 26, 27, 28, 31, 34, 348, 382, 415, 448, 542, 741, 875, 900, 908, 1332, 1366, 1400, 1462, 1579, 1641, 1897], "includ": [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 51, 52, 53, 56, 60, 76, 83, 84, 85, 88, 90, 103, 110, 111, 112, 116, 120, 121, 123, 136, 143, 144, 145, 148, 152, 169, 176, 177, 178, 181, 185, 201, 208, 209, 210, 214, 218, 219, 221, 234, 241, 242, 243, 246, 250, 267, 274, 275, 276, 279, 283, 300, 307, 308, 309, 312, 316, 333, 340, 341, 342, 345, 349, 367, 374, 375, 376, 379, 383, 400, 407, 408, 409, 412, 416, 433, 440, 441, 442, 445, 449, 466, 473, 474, 475, 478, 482, 492, 499, 506, 507, 508, 511, 513, 528, 535, 536, 537, 540, 543, 575, 582, 583, 584, 587, 599, 600, 601, 602, 603, 663, 667, 853, 903, 951, 954, 955, 965, 967, 968, 971, 990, 993, 994, 1004, 1006, 1007, 1010, 1028, 1031, 1032, 1042, 1044, 1045, 1048, 1066, 1069, 1070, 1080, 1082, 1083, 1086, 1104, 1107, 1108, 1120, 1122, 1123, 1126, 1145, 1148, 1149, 1159, 1161, 1162, 1165, 1184, 1187, 1188, 1198, 1200, 1201, 1204, 1222, 1225, 1226, 1236, 1238, 1239, 1242, 1260, 1263, 1264, 1274, 1276, 1277, 1280, 1297, 1304, 1305, 1306, 1309, 1327, 1336, 1337, 1338, 1341, 1361, 1370, 1371, 1372, 1375, 1395, 1404, 1405, 1406, 1409, 1427, 1434, 1435, 1436, 1439, 1457, 1466, 1467, 1468, 1471, 1488, 1495, 1496, 1497, 1500, 1516, 1523, 1524, 1525, 1528, 1544, 1551, 1552, 1553, 1556, 1574, 1583, 1584, 1585, 1588, 1606, 1613, 1614, 1615, 1618, 1636, 1645, 1646, 1647, 1650, 1668, 1675, 1676, 1677, 1680, 1726, 1887, 1892, 1908, 1909], "generic_hydraul": [4, 14, 18, 32, 686, 687], "1": [4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 99, 197, 515, 517, 647, 648, 666, 680, 683, 690, 691, 693, 696, 700, 706, 715, 716, 721, 730, 731, 740, 741, 748, 749, 763, 792, 798, 799, 818, 828, 830, 831, 834, 846, 853, 860, 863, 875, 876, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 907, 915, 916, 920, 923, 924, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 944, 949, 950, 952, 953, 954, 955, 956, 959, 966, 982, 983, 988, 989, 991, 992, 993, 994, 995, 998, 1005, 1021, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1036, 1043, 1059, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1074, 1081, 1097, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1114, 1121, 1138, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1153, 1160, 1177, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1192, 1199, 1215, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1230, 1237, 1253, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1268, 1275, 1332, 1366, 1400, 1462, 1579, 1641, 1709, 1710, 1711, 1713, 1714, 1715, 1719, 1726, 1728, 1733, 1736, 1744, 1746, 1748, 1749, 1751, 1752, 1753, 1755, 1756, 1773, 1777, 1779, 1810, 1822, 1830, 1842, 1855, 1904, 1914, 1915, 1916, 1917, 1918], "0": [4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 62, 68, 94, 99, 126, 159, 192, 196, 224, 257, 290, 323, 351, 357, 390, 423, 456, 488, 496, 520, 547, 566, 594, 648, 659, 666, 671, 672, 673, 674, 675, 676, 677, 680, 683, 684, 740, 741, 745, 746, 747, 748, 749, 792, 796, 797, 798, 799, 816, 818, 822, 827, 828, 829, 830, 831, 834, 860, 876, 878, 884, 891, 895, 902, 923, 924, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 949, 950, 952, 953, 954, 955, 956, 966, 978, 988, 989, 991, 992, 993, 994, 995, 1005, 1017, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1043, 1055, 1059, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1081, 1093, 1097, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1121, 1133, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1160, 1172, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1199, 1211, 1215, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1237, 1249, 1253, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1275, 1287, 1316, 1349, 1383, 1417, 1446, 1479, 1507, 1535, 1563, 1596, 1625, 1658, 1687, 1709, 1710, 1713, 1728, 1736, 1737, 1742, 1746, 1747, 1748, 1751, 1752, 1761, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1828, 1840, 1853, 1904, 1914, 1915, 1916, 1917, 1918], "physic": [4, 6, 8, 11, 12, 14, 16, 18, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 542, 552, 878, 905, 932], "02": [4, 6, 7, 8, 18, 34, 197], "17": [4, 5, 6, 7, 9, 14, 18, 23, 26, 27, 29, 30, 32, 33, 680], "38": [4, 9, 26, 33, 762], "warn": [4, 5, 6, 8, 18, 34, 666, 1760, 1782, 1904], "entry_pressur": [4, 7, 9, 14, 33, 34, 686, 687], "wa": [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 22, 27, 28, 29, 30, 31, 32, 33, 34, 68, 69, 94, 95, 126, 127, 159, 160, 192, 193, 224, 225, 257, 258, 290, 291, 323, 324, 357, 358, 390, 391, 423, 424, 456, 457, 488, 489, 494, 520, 521, 547, 548, 552, 566, 567, 571, 594, 595, 635, 647, 664, 812, 945, 978, 979, 984, 1017, 1018, 1022, 1055, 1056, 1060, 1093, 1094, 1098, 1133, 1134, 1139, 1172, 1173, 1178, 1211, 1212, 1216, 1249, 1250, 1254, 1287, 1288, 1293, 1316, 1317, 1322, 1349, 1350, 1356, 1383, 1384, 1390, 1417, 1418, 1423, 1446, 1447, 1452, 1479, 1480, 1484, 1507, 1508, 1512, 1535, 1536, 1540, 1563, 1564, 1569, 1596, 1597, 1602, 1625, 1626, 1631, 1658, 1659, 1664, 1687, 1688, 1726], "run": [4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 22, 29, 31, 32, 33, 34, 38, 72, 98, 118, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 494, 513, 514, 524, 552, 571, 589, 590, 606, 634, 635, 637, 638, 647, 740, 746, 748, 798, 823, 831, 945, 973, 974, 984, 1012, 1013, 1022, 1050, 1051, 1060, 1088, 1089, 1098, 1128, 1129, 1139, 1167, 1168, 1178, 1206, 1207, 1216, 1244, 1245, 1254, 1282, 1283, 1293, 1311, 1312, 1322, 1343, 1345, 1356, 1377, 1379, 1390, 1411, 1413, 1423, 1441, 1442, 1452, 1473, 1475, 1484, 1502, 1503, 1512, 1530, 1531, 1540, 1558, 1559, 1569, 1590, 1592, 1602, 1620, 1621, 1631, 1652, 1654, 1664, 1682, 1683, 1698, 1901], "sinc": [4, 5, 6, 7, 8, 9, 10, 15, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 99, 513, 589, 637, 648, 659, 857, 944, 955, 973, 982, 983, 994, 1012, 1032, 1050, 1059, 1070, 1088, 1108, 1128, 1138, 1149, 1167, 1177, 1188, 1206, 1226, 1244, 1253, 1264, 1282, 1311, 1320, 1343, 1377, 1411, 1441, 1473, 1502, 1530, 1558, 1590, 1620, 1652, 1682, 1720, 1724, 1725, 1747, 1748, 1761, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1778, 1780, 1781, 1783, 1834, 1919], "miss": [4, 6, 28, 34, 923, 1747], "_model": [4, 6, 34], "py": [4, 6, 8, 18, 34, 658, 1698], "480": [4, 6, 9, 34], "surface_tens": [4, 11, 12, 14, 31, 33, 34, 683, 684, 882, 907, 908, 922, 923, 924], "diffusive_conduct": [4, 7, 11, 20, 22, 686, 687, 905], "x": [4, 5, 6, 8, 9, 10, 11, 12, 18, 20, 22, 23, 26, 27, 31, 38, 59, 130, 151, 163, 184, 228, 249, 261, 282, 294, 315, 327, 361, 394, 427, 460, 481, 648, 741, 826, 922, 924, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 1059, 1097, 1215, 1253, 1388, 1709, 1711, 1714, 1715, 1726, 1727, 1728, 1736, 1737, 1746, 1747, 1748, 1749, 1901, 1904], "direct": [4, 7, 8, 10, 11, 12, 15, 20, 27, 30, 33, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 552, 741, 806, 943, 955, 959, 982, 994, 998, 1021, 1032, 1036, 1070, 1074, 1108, 1114, 1149, 1153, 1176, 1188, 1192, 1226, 1230, 1264, 1268, 1694, 1699, 1709, 1731, 1732, 1748], "constant": [4, 8, 22, 27, 50, 63, 65, 82, 109, 142, 154, 156, 175, 187, 189, 207, 240, 252, 254, 273, 285, 287, 306, 318, 320, 339, 352, 354, 373, 385, 387, 406, 418, 420, 439, 451, 453, 472, 484, 485, 494, 505, 513, 534, 561, 571, 581, 635, 683, 684, 853, 880, 905, 929, 930, 945, 964, 984, 1003, 1022, 1041, 1060, 1079, 1098, 1119, 1139, 1158, 1178, 1197, 1216, 1235, 1254, 1273, 1293, 1303, 1322, 1335, 1356, 1369, 1390, 1403, 1423, 1433, 1452, 1465, 1484, 1494, 1511, 1512, 1522, 1540, 1550, 1569, 1582, 1602, 1612, 1631, 1644, 1664, 1674], "left": [4, 5, 7, 8, 9, 10, 11, 12, 14, 18, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 494, 506, 535, 571, 582, 600, 635, 944, 945, 965, 983, 984, 1004, 1022, 1042, 1060, 1080, 1098, 1120, 1138, 1139, 1159, 1177, 1178, 1198, 1216, 1236, 1254, 1274, 1293, 1304, 1322, 1336, 1356, 1370, 1390, 1404, 1423, 1434, 1452, 1466, 1484, 1495, 1512, 1523, 1540, 1551, 1569, 1583, 1602, 1613, 1631, 1645, 1664, 1675], "right": [4, 5, 7, 8, 9, 10, 11, 12, 14, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 460, 944, 983, 1138, 1177, 1699], "side": [4, 8, 9, 10, 20, 23, 30, 32, 33, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 460, 1253, 1699], "procedur": [4, 7, 8, 11, 12, 197], "y": [4, 8, 9, 11, 12, 22, 26, 27, 31, 197, 643, 648, 826, 922, 932, 1059, 1097, 1215, 1253, 1354, 1728, 1736, 1746, 1747, 1748], "z": [4, 8, 11, 12, 26, 31, 648, 875, 900, 1059, 1097, 1215, 1253, 1332, 1366, 1400, 1462, 1579, 1641, 1709, 1718, 1728, 1736, 1745, 1746, 1747, 1748, 1751, 1919], "inlet": [4, 6, 7, 8, 9, 10, 11, 12, 33, 34, 219, 1710, 1723, 1729, 1730, 1734, 1737, 1755], "outlet": [4, 6, 7, 8, 10, 11, 12, 33, 34, 99, 123, 197, 221, 1710, 1729, 1730, 1734, 1737], "stokesflow": [4, 6, 12, 14, 16, 18, 23, 32, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326], "set_value_bc": [4, 6, 7, 8, 11, 12, 14, 18, 22, 32, 34, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543], "updat": [4, 5, 6, 11, 12, 22, 28, 29, 34, 36, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 516, 544, 591, 604, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684, 1716, 1868, 1875], "soln": [4, 6, 32, 34, 59, 151, 184, 249, 282, 315, 481, 643, 929, 930], "solut": [4, 6, 22, 23, 33, 38, 59, 130, 151, 163, 184, 228, 249, 261, 282, 294, 315, 327, 348, 361, 382, 394, 415, 427, 448, 460, 481, 542, 643, 864, 878, 929, 930, 1699], "dict": [4, 22, 27, 30, 31, 32, 39, 55, 70, 72, 73, 87, 96, 100, 115, 128, 130, 131, 147, 161, 164, 180, 194, 198, 213, 226, 229, 245, 259, 261, 262, 278, 292, 295, 311, 325, 328, 344, 359, 362, 378, 392, 395, 411, 425, 428, 444, 458, 460, 461, 477, 490, 493, 495, 497, 510, 515, 522, 525, 539, 549, 552, 553, 554, 563, 568, 572, 573, 586, 596, 615, 617, 630, 632, 636, 646, 647, 648, 650, 655, 664, 745, 747, 749, 796, 797, 799, 818, 822, 827, 834, 838, 840, 845, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 872, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 901, 902, 922, 929, 930, 931, 933, 934, 935, 936, 937, 938, 943, 946, 947, 970, 980, 982, 985, 986, 1009, 1019, 1023, 1024, 1047, 1057, 1059, 1061, 1062, 1085, 1095, 1097, 1099, 1100, 1125, 1135, 1137, 1140, 1141, 1164, 1174, 1176, 1179, 1180, 1203, 1213, 1215, 1217, 1218, 1241, 1251, 1253, 1255, 1256, 1279, 1289, 1292, 1294, 1295, 1308, 1318, 1323, 1324, 1325, 1330, 1340, 1351, 1357, 1358, 1359, 1364, 1374, 1385, 1391, 1392, 1393, 1398, 1408, 1419, 1424, 1425, 1438, 1448, 1450, 1453, 1454, 1455, 1460, 1470, 1481, 1483, 1485, 1486, 1499, 1509, 1513, 1514, 1527, 1537, 1541, 1542, 1555, 1565, 1570, 1571, 1572, 1577, 1587, 1598, 1603, 1604, 1617, 1627, 1632, 1633, 1634, 1639, 1649, 1660, 1663, 1665, 1666, 1679, 1689, 1715, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1731, 1732, 1736, 1773, 1784, 1792, 1794, 1804, 1808, 1810, 1818, 1820, 1891, 1895, 1897, 1898, 1899, 1902, 1903, 1910, 1911, 1915, 1916], "quantiti": [4, 7, 16, 20, 22, 32, 34, 62, 351, 929, 930, 931, 933, 934, 935, 936, 937, 938], "kei": [4, 5, 15, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 45, 46, 47, 51, 55, 57, 66, 70, 77, 78, 79, 83, 87, 89, 92, 96, 104, 105, 106, 110, 115, 117, 124, 128, 137, 138, 139, 143, 147, 149, 157, 161, 170, 171, 172, 176, 180, 182, 190, 194, 202, 203, 204, 208, 213, 215, 222, 226, 235, 236, 237, 241, 245, 247, 255, 259, 268, 269, 270, 274, 278, 280, 288, 292, 301, 302, 303, 307, 311, 313, 321, 325, 334, 335, 336, 340, 344, 346, 355, 359, 368, 369, 370, 374, 378, 380, 388, 392, 401, 402, 403, 407, 411, 413, 421, 425, 434, 435, 436, 440, 444, 446, 454, 458, 467, 468, 469, 473, 477, 479, 486, 490, 500, 501, 502, 506, 510, 512, 518, 522, 529, 530, 531, 535, 539, 541, 545, 549, 556, 557, 558, 563, 564, 565, 568, 576, 577, 578, 582, 586, 588, 592, 596, 600, 610, 611, 614, 615, 616, 617, 619, 625, 626, 629, 630, 631, 632, 662, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 743, 744, 745, 746, 747, 749, 751, 753, 756, 757, 758, 759, 760, 763, 767, 768, 769, 771, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 792, 794, 795, 796, 797, 799, 801, 802, 803, 804, 808, 809, 810, 811, 812, 813, 818, 819, 820, 821, 822, 823, 824, 825, 827, 829, 832, 833, 834, 838, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 875, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 957, 958, 960, 965, 970, 972, 976, 980, 982, 996, 997, 999, 1004, 1009, 1011, 1015, 1019, 1034, 1035, 1037, 1042, 1047, 1049, 1053, 1057, 1059, 1072, 1073, 1075, 1080, 1085, 1087, 1091, 1095, 1097, 1112, 1113, 1115, 1120, 1125, 1127, 1131, 1135, 1137, 1151, 1152, 1154, 1159, 1164, 1166, 1170, 1174, 1176, 1190, 1191, 1193, 1198, 1203, 1205, 1209, 1213, 1215, 1228, 1229, 1231, 1236, 1241, 1243, 1247, 1251, 1253, 1266, 1267, 1269, 1274, 1279, 1281, 1285, 1289, 1298, 1299, 1300, 1304, 1308, 1310, 1314, 1318, 1328, 1329, 1330, 1331, 1336, 1340, 1342, 1347, 1351, 1353, 1362, 1363, 1364, 1365, 1370, 1374, 1376, 1381, 1385, 1387, 1396, 1397, 1398, 1399, 1404, 1408, 1410, 1415, 1419, 1421, 1428, 1429, 1430, 1434, 1438, 1440, 1444, 1448, 1458, 1459, 1460, 1461, 1466, 1470, 1472, 1477, 1481, 1489, 1490, 1491, 1495, 1499, 1501, 1505, 1509, 1517, 1518, 1519, 1523, 1527, 1529, 1533, 1537, 1545, 1546, 1547, 1551, 1555, 1557, 1561, 1565, 1575, 1576, 1577, 1578, 1583, 1587, 1589, 1594, 1598, 1600, 1607, 1608, 1609, 1613, 1617, 1619, 1623, 1627, 1637, 1638, 1639, 1640, 1645, 1649, 1651, 1656, 1660, 1662, 1669, 1670, 1671, 1675, 1679, 1681, 1685, 1689, 1760, 1762, 1764, 1766, 1769, 1771, 1775, 1777, 1779, 1782, 1787, 1788, 1791, 1792, 1793, 1794, 1799, 1800, 1803, 1804, 1805, 1808, 1810, 1813, 1814, 1817, 1818, 1819, 1820, 1833, 1845, 1858, 1883, 1884, 1890, 1891, 1894, 1895, 1898, 1899, 1902, 1903, 1911, 1915, 1916], "e": [4, 7, 9, 12, 16, 17, 18, 25, 27, 28, 29, 30, 31, 33, 36, 39, 48, 57, 62, 70, 73, 80, 89, 96, 100, 107, 117, 128, 131, 140, 149, 161, 164, 173, 182, 194, 198, 205, 215, 226, 229, 238, 247, 259, 262, 271, 280, 292, 295, 304, 313, 325, 328, 337, 346, 348, 351, 359, 362, 371, 380, 382, 392, 395, 404, 413, 415, 425, 428, 437, 446, 448, 458, 461, 470, 479, 490, 494, 497, 503, 512, 522, 525, 532, 541, 542, 549, 554, 559, 564, 568, 571, 573, 579, 588, 596, 617, 622, 623, 632, 635, 648, 662, 663, 690, 695, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 724, 727, 731, 732, 734, 738, 740, 745, 747, 748, 749, 796, 797, 798, 799, 822, 826, 827, 831, 834, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 944, 945, 947, 962, 972, 980, 982, 983, 984, 986, 1001, 1011, 1019, 1022, 1024, 1039, 1049, 1057, 1060, 1062, 1077, 1087, 1095, 1097, 1098, 1100, 1117, 1127, 1135, 1138, 1139, 1141, 1156, 1166, 1174, 1176, 1177, 1178, 1180, 1195, 1205, 1213, 1216, 1218, 1233, 1243, 1251, 1254, 1256, 1271, 1281, 1289, 1293, 1295, 1301, 1310, 1318, 1320, 1322, 1325, 1333, 1342, 1351, 1353, 1356, 1359, 1367, 1376, 1385, 1387, 1390, 1393, 1401, 1410, 1419, 1421, 1423, 1425, 1431, 1440, 1448, 1452, 1455, 1463, 1472, 1481, 1484, 1486, 1492, 1501, 1509, 1512, 1514, 1520, 1529, 1537, 1540, 1542, 1548, 1557, 1565, 1569, 1572, 1580, 1589, 1598, 1600, 1602, 1604, 1610, 1619, 1627, 1631, 1634, 1642, 1651, 1660, 1662, 1664, 1666, 1672, 1681, 1689, 1699, 1716, 1734, 1737, 1762, 1764, 1771, 1777, 1794, 1808, 1820, 1833, 1845, 1858, 1864, 1867, 1874, 1876, 1882, 1889, 1895, 1907, 1915, 1916], "ndarrai": [4, 27, 31, 47, 48, 59, 68, 69, 79, 80, 94, 95, 106, 107, 119, 121, 123, 126, 127, 139, 140, 151, 159, 160, 172, 173, 184, 192, 193, 204, 205, 219, 221, 224, 225, 237, 238, 249, 257, 258, 270, 271, 282, 290, 291, 303, 304, 315, 323, 324, 336, 337, 348, 357, 358, 370, 371, 382, 390, 391, 403, 404, 415, 423, 424, 436, 437, 448, 456, 457, 469, 470, 481, 488, 489, 502, 503, 517, 520, 521, 531, 532, 542, 547, 548, 558, 559, 566, 567, 578, 579, 594, 595, 643, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 741, 743, 744, 745, 746, 749, 751, 753, 756, 757, 758, 759, 760, 763, 765, 767, 768, 769, 771, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 792, 794, 795, 796, 799, 801, 802, 803, 804, 806, 808, 809, 810, 811, 812, 813, 817, 820, 821, 822, 823, 825, 826, 829, 830, 832, 834, 838, 840, 846, 856, 857, 858, 859, 860, 862, 863, 864, 867, 869, 871, 877, 878, 880, 882, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 927, 940, 941, 952, 953, 960, 962, 978, 979, 991, 992, 999, 1001, 1017, 1018, 1029, 1030, 1037, 1039, 1055, 1056, 1067, 1068, 1075, 1077, 1093, 1094, 1105, 1106, 1115, 1117, 1133, 1134, 1146, 1147, 1154, 1156, 1172, 1173, 1185, 1186, 1193, 1195, 1211, 1212, 1223, 1224, 1231, 1233, 1249, 1250, 1261, 1262, 1269, 1271, 1287, 1288, 1300, 1301, 1316, 1317, 1321, 1331, 1332, 1333, 1349, 1350, 1353, 1355, 1365, 1366, 1367, 1383, 1384, 1387, 1389, 1399, 1400, 1401, 1417, 1418, 1421, 1430, 1431, 1446, 1447, 1451, 1461, 1462, 1463, 1479, 1480, 1491, 1492, 1507, 1508, 1519, 1520, 1535, 1536, 1547, 1548, 1563, 1564, 1568, 1578, 1579, 1580, 1596, 1597, 1600, 1609, 1610, 1625, 1626, 1630, 1640, 1641, 1642, 1658, 1659, 1662, 1671, 1672, 1687, 1688, 1699, 1711, 1713, 1714, 1716, 1719, 1721, 1722, 1723, 1725, 1726, 1731, 1732, 1733, 1736, 1745, 1746, 1747, 1748, 1749, 1755, 1905, 1914, 1915, 1916, 1918], "last": [4, 10, 25, 27, 36, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 510, 539, 563, 586, 615, 630, 949, 970, 988, 1009, 1026, 1047, 1064, 1085, 1102, 1125, 1143, 1164, 1182, 1203, 1220, 1241, 1258, 1279, 1308, 1340, 1374, 1408, 1438, 1470, 1499, 1527, 1555, 1587, 1617, 1649, 1679, 1792, 1804, 1818, 1830, 1842, 1855, 1891], "line": [4, 9, 10, 14, 15, 28, 29, 30, 31, 1771, 1822, 1915, 1916, 1918, 1919], "cell": [4, 5, 10, 25, 29, 33, 34, 741, 943, 1176, 1253], "abov": [4, 5, 6, 9, 10, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 816, 1727, 1746, 1771, 1887, 1892], "new": [4, 5, 7, 9, 14, 16, 17, 18, 20, 22, 25, 27, 28, 29, 30, 31, 33, 36, 45, 77, 104, 137, 170, 196, 202, 235, 268, 301, 334, 368, 401, 434, 467, 500, 529, 556, 576, 610, 625, 741, 853, 880, 957, 996, 1034, 1072, 1112, 1151, 1190, 1228, 1266, 1298, 1328, 1362, 1396, 1428, 1458, 1489, 1517, 1545, 1575, 1607, 1637, 1669, 1710, 1712, 1713, 1717, 1744, 1746, 1748, 1750, 1764, 1766, 1777, 1779, 1787, 1799, 1813, 1837, 1864, 1867, 1874, 1876, 1882, 1883, 1889, 1915, 1916], "comput": [4, 9, 15, 22, 23, 27, 28, 30, 31, 32, 33, 34, 35, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 494, 503, 532, 559, 571, 579, 589, 635, 637, 647, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 771, 853, 857, 858, 875, 876, 877, 882, 883, 897, 900, 901, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 927, 940, 941, 945, 962, 973, 984, 1001, 1012, 1022, 1039, 1050, 1060, 1077, 1088, 1098, 1117, 1128, 1139, 1156, 1167, 1178, 1195, 1206, 1216, 1233, 1244, 1254, 1271, 1282, 1293, 1301, 1311, 1320, 1322, 1333, 1343, 1356, 1367, 1377, 1390, 1401, 1411, 1423, 1431, 1441, 1452, 1463, 1473, 1484, 1492, 1502, 1512, 1520, 1530, 1540, 1548, 1558, 1567, 1569, 1580, 1590, 1602, 1610, 1620, 1629, 1631, 1642, 1652, 1664, 1672, 1682, 1698, 1733, 1755], "we": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 853, 929, 930], "visul": 4, "ax": [4, 5, 6, 7, 8, 9, 14, 18, 26, 28, 29, 30, 33, 34, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 460, 624, 1693, 1695, 1697, 1698, 1699, 1701, 1703, 1705, 1707, 1715, 1915, 1916, 1917], "plot_connect": [4, 5, 7, 18, 26, 28, 33, 34, 1916], "plot_coordin": [4, 7, 8, 18, 26, 28, 33, 34, 1915], "color_bi": [4, 7, 8, 18, 26, 33, 34, 1915, 1916], "darci": [4, 14], "": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 40, 44, 49, 56, 59, 60, 67, 71, 73, 74, 76, 81, 88, 90, 93, 97, 100, 101, 103, 108, 116, 118, 120, 125, 129, 130, 131, 132, 136, 141, 148, 151, 152, 158, 162, 164, 165, 169, 174, 181, 184, 185, 191, 195, 198, 199, 201, 206, 214, 218, 223, 227, 229, 230, 234, 239, 246, 249, 250, 256, 260, 262, 263, 267, 272, 279, 282, 283, 289, 293, 295, 296, 300, 305, 312, 315, 316, 322, 326, 328, 329, 333, 338, 345, 349, 356, 360, 362, 363, 367, 372, 379, 383, 389, 393, 395, 396, 400, 405, 412, 416, 422, 426, 428, 429, 433, 438, 445, 449, 455, 459, 461, 462, 466, 471, 478, 481, 482, 487, 491, 497, 499, 504, 511, 519, 523, 525, 526, 528, 533, 540, 543, 546, 550, 551, 552, 554, 560, 569, 573, 575, 580, 587, 589, 593, 597, 599, 603, 605, 612, 613, 618, 619, 623, 627, 628, 633, 637, 642, 643, 647, 648, 651, 663, 664, 666, 715, 730, 740, 745, 746, 747, 748, 749, 752, 754, 762, 796, 797, 798, 799, 822, 826, 827, 831, 834, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 916, 918, 919, 920, 922, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 947, 949, 950, 951, 954, 955, 956, 959, 961, 963, 971, 973, 977, 981, 986, 988, 989, 990, 993, 994, 995, 998, 1000, 1002, 1010, 1012, 1016, 1020, 1024, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1038, 1040, 1048, 1050, 1054, 1058, 1062, 1064, 1065, 1066, 1069, 1070, 1071, 1074, 1076, 1078, 1086, 1088, 1092, 1096, 1100, 1102, 1103, 1104, 1107, 1108, 1109, 1114, 1116, 1118, 1126, 1128, 1132, 1136, 1141, 1143, 1144, 1145, 1148, 1149, 1150, 1153, 1155, 1157, 1165, 1167, 1171, 1175, 1180, 1182, 1183, 1184, 1187, 1188, 1189, 1192, 1194, 1196, 1204, 1206, 1210, 1214, 1218, 1220, 1221, 1222, 1225, 1226, 1227, 1230, 1232, 1234, 1242, 1244, 1248, 1252, 1256, 1258, 1259, 1260, 1263, 1264, 1265, 1268, 1270, 1272, 1280, 1282, 1286, 1290, 1295, 1297, 1302, 1309, 1311, 1315, 1319, 1325, 1327, 1334, 1341, 1343, 1344, 1348, 1352, 1359, 1361, 1368, 1375, 1377, 1378, 1382, 1386, 1393, 1395, 1402, 1409, 1411, 1412, 1416, 1420, 1422, 1425, 1427, 1432, 1439, 1441, 1445, 1449, 1455, 1457, 1464, 1471, 1473, 1474, 1478, 1482, 1486, 1488, 1493, 1500, 1502, 1506, 1510, 1514, 1516, 1521, 1528, 1530, 1534, 1538, 1542, 1544, 1549, 1556, 1558, 1562, 1566, 1572, 1574, 1581, 1588, 1590, 1591, 1595, 1599, 1604, 1606, 1611, 1618, 1620, 1624, 1628, 1634, 1636, 1643, 1650, 1652, 1653, 1657, 1661, 1666, 1668, 1673, 1680, 1682, 1686, 1690, 1702, 1726, 1743, 1747, 1748, 1750, 1751, 1752, 1753, 1756, 1758, 1759, 1760, 1762, 1766, 1768, 1769, 1771, 1773, 1775, 1777, 1779, 1782, 1789, 1790, 1795, 1801, 1802, 1809, 1815, 1816, 1821, 1834, 1885, 1886, 1888, 1896, 1899, 1907, 1911, 1916, 1921], "law": [4, 7, 14, 20, 22, 23, 130, 715, 856, 880, 895], "k_": [4, 12], "ab": [4, 7, 8, 11, 12, 20, 715], "frac": [4, 6, 7, 8, 9, 11, 12, 20, 22, 23, 32, 715, 730, 880, 908, 920, 924, 929, 930], "q": [4, 14, 23, 29, 32, 33, 730, 745, 747, 749, 796, 797, 799, 822, 827, 834], "A": [4, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 20, 22, 23, 27, 28, 29, 30, 31, 33, 34, 35, 38, 44, 51, 56, 59, 61, 67, 68, 69, 76, 83, 88, 91, 93, 94, 95, 98, 99, 103, 110, 116, 122, 125, 126, 127, 130, 136, 143, 148, 151, 153, 158, 159, 160, 163, 169, 176, 181, 184, 186, 191, 192, 193, 196, 201, 208, 214, 220, 223, 224, 225, 228, 234, 241, 246, 249, 251, 256, 257, 258, 261, 267, 274, 279, 282, 284, 289, 290, 291, 294, 300, 307, 312, 315, 317, 322, 323, 324, 327, 333, 340, 345, 350, 356, 357, 358, 361, 367, 374, 379, 384, 389, 390, 391, 394, 400, 407, 412, 417, 422, 423, 424, 427, 433, 440, 445, 450, 455, 456, 457, 460, 466, 473, 478, 481, 483, 487, 488, 489, 493, 499, 506, 511, 516, 519, 520, 521, 524, 528, 535, 540, 544, 546, 547, 548, 553, 566, 567, 575, 582, 587, 591, 593, 594, 595, 599, 600, 603, 604, 605, 647, 655, 662, 663, 666, 667, 690, 691, 693, 696, 700, 715, 730, 737, 740, 741, 743, 746, 748, 749, 765, 783, 788, 794, 798, 799, 802, 806, 809, 818, 823, 829, 831, 834, 840, 859, 864, 880, 882, 883, 884, 890, 891, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 922, 924, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 951, 954, 965, 971, 975, 977, 978, 979, 982, 990, 993, 1004, 1010, 1014, 1016, 1017, 1018, 1028, 1031, 1042, 1048, 1052, 1054, 1055, 1056, 1059, 1066, 1069, 1080, 1086, 1090, 1092, 1093, 1094, 1097, 1104, 1107, 1120, 1126, 1130, 1132, 1133, 1134, 1137, 1145, 1148, 1159, 1165, 1169, 1171, 1172, 1173, 1176, 1184, 1187, 1198, 1204, 1208, 1210, 1211, 1212, 1215, 1222, 1225, 1236, 1242, 1246, 1248, 1249, 1250, 1253, 1260, 1263, 1274, 1280, 1284, 1286, 1287, 1288, 1297, 1304, 1309, 1313, 1315, 1316, 1317, 1320, 1324, 1327, 1330, 1336, 1341, 1346, 1348, 1349, 1350, 1358, 1361, 1364, 1370, 1375, 1380, 1382, 1383, 1384, 1392, 1395, 1398, 1404, 1409, 1414, 1416, 1417, 1418, 1427, 1434, 1439, 1443, 1445, 1446, 1447, 1450, 1454, 1457, 1460, 1466, 1471, 1476, 1478, 1479, 1480, 1488, 1495, 1500, 1504, 1506, 1507, 1508, 1511, 1516, 1523, 1528, 1532, 1534, 1535, 1536, 1539, 1544, 1551, 1556, 1560, 1562, 1563, 1564, 1567, 1571, 1574, 1577, 1583, 1588, 1593, 1595, 1596, 1597, 1601, 1606, 1613, 1618, 1622, 1624, 1625, 1626, 1629, 1633, 1636, 1639, 1645, 1650, 1655, 1657, 1658, 1659, 1668, 1675, 1680, 1684, 1686, 1687, 1688, 1699, 1701, 1703, 1705, 1707, 1709, 1711, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1733, 1735, 1736, 1737, 1738, 1745, 1747, 1748, 1749, 1751, 1752, 1753, 1756, 1769, 1771, 1773, 1775, 1777, 1779, 1834, 1837, 1846, 1847, 1860, 1882, 1897, 1898, 1899, 1902, 1903, 1911, 1915, 1916, 1918, 1919], "mu": [4, 14, 23, 31, 32, 730, 853, 864, 897, 901, 902, 1901], "l": [4, 6, 7, 8, 10, 14, 20, 23, 25, 32, 130, 715, 730, 878, 880], "delta": [4, 7, 20, 23, 32, 130, 715, 730], "p": [4, 10, 18, 23, 26, 28, 30, 32, 33, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 493, 494, 524, 553, 570, 571, 635, 730, 856, 862, 863, 927, 943, 945, 952, 954, 955, 982, 984, 991, 993, 994, 1021, 1022, 1029, 1031, 1032, 1059, 1060, 1067, 1069, 1070, 1097, 1098, 1105, 1107, 1108, 1137, 1139, 1146, 1148, 1149, 1176, 1178, 1185, 1187, 1188, 1215, 1216, 1223, 1225, 1226, 1253, 1254, 1261, 1263, 1264, 1292, 1293, 1320, 1322, 1354, 1356, 1388, 1390, 1422, 1423, 1450, 1452, 1483, 1484, 1511, 1512, 1539, 1540, 1567, 1569, 1601, 1602, 1629, 1631, 1663, 1664, 1916], "where": [4, 6, 11, 12, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 56, 60, 61, 62, 63, 64, 65, 67, 68, 69, 88, 90, 91, 93, 94, 95, 116, 120, 122, 125, 126, 127, 148, 152, 153, 154, 155, 156, 158, 159, 160, 181, 185, 186, 187, 188, 189, 191, 192, 193, 214, 218, 220, 223, 224, 225, 246, 250, 251, 252, 253, 254, 256, 257, 258, 279, 283, 284, 285, 286, 287, 289, 290, 291, 312, 316, 317, 318, 319, 320, 322, 323, 324, 345, 349, 350, 351, 352, 353, 354, 356, 357, 358, 379, 383, 384, 385, 386, 387, 389, 390, 391, 412, 416, 417, 418, 419, 420, 422, 423, 424, 445, 449, 450, 451, 452, 453, 455, 456, 457, 478, 482, 483, 484, 485, 487, 488, 489, 494, 511, 516, 519, 520, 521, 540, 543, 544, 546, 547, 548, 552, 566, 567, 571, 587, 591, 593, 594, 595, 603, 604, 605, 635, 648, 652, 694, 696, 745, 746, 796, 822, 829, 851, 915, 916, 920, 924, 929, 930, 944, 945, 954, 955, 956, 971, 975, 977, 978, 979, 983, 984, 993, 994, 995, 1010, 1014, 1016, 1017, 1018, 1022, 1031, 1032, 1033, 1048, 1052, 1054, 1055, 1056, 1060, 1069, 1070, 1071, 1086, 1090, 1092, 1093, 1094, 1098, 1107, 1108, 1109, 1126, 1130, 1132, 1133, 1134, 1138, 1139, 1148, 1149, 1150, 1165, 1169, 1171, 1172, 1173, 1177, 1178, 1187, 1188, 1189, 1204, 1208, 1210, 1211, 1212, 1216, 1225, 1226, 1227, 1242, 1246, 1248, 1249, 1250, 1254, 1263, 1264, 1265, 1280, 1284, 1286, 1287, 1288, 1293, 1309, 1313, 1315, 1316, 1317, 1322, 1324, 1341, 1346, 1348, 1349, 1350, 1356, 1358, 1375, 1380, 1382, 1383, 1384, 1390, 1392, 1409, 1414, 1416, 1417, 1418, 1423, 1439, 1443, 1445, 1446, 1447, 1452, 1454, 1471, 1476, 1478, 1479, 1480, 1484, 1500, 1504, 1506, 1507, 1508, 1512, 1528, 1532, 1534, 1535, 1536, 1540, 1556, 1560, 1562, 1563, 1564, 1567, 1569, 1571, 1588, 1593, 1595, 1596, 1597, 1602, 1618, 1622, 1624, 1625, 1626, 1629, 1631, 1633, 1650, 1655, 1657, 1658, 1659, 1664, 1680, 1684, 1686, 1687, 1688, 1698, 1717, 1748, 1904], "area": [4, 8, 23, 32, 647, 715, 730, 734, 735, 736, 737, 738, 741, 751, 752, 753, 754, 767, 768, 769, 794, 801, 802, 803, 804, 810, 905, 913, 920, 929, 930, 982, 1729, 1730, 1916], "distanc": [4, 10, 29, 741, 746, 812, 840, 841, 842, 843, 845, 850, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1709, 1710, 1744], "between": [4, 5, 6, 10, 18, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 552, 644, 659, 771, 805, 806, 811, 812, 819, 828, 841, 842, 846, 850, 929, 930, 943, 982, 1021, 1059, 1097, 1111, 1176, 1215, 1712, 1713, 1722, 1726, 1727, 1728, 1732, 1902, 1903], "differ": [4, 7, 9, 10, 11, 20, 21, 23, 25, 26, 27, 29, 31, 32, 34, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543, 651, 662, 664, 675, 689, 740, 746, 748, 798, 831, 853, 905, 920, 929, 930, 1097, 1699, 1874, 1875, 1915, 1916], "were": [4, 5, 8, 9, 17, 21, 25, 26, 28, 29, 30, 31, 39, 50, 73, 82, 99, 100, 109, 131, 142, 164, 175, 198, 207, 229, 240, 262, 273, 295, 306, 328, 339, 362, 373, 395, 406, 428, 439, 461, 472, 497, 505, 525, 534, 554, 561, 573, 581, 745, 796, 811, 822, 845, 947, 952, 954, 956, 964, 986, 991, 993, 995, 1003, 1024, 1029, 1031, 1033, 1041, 1062, 1067, 1069, 1071, 1079, 1100, 1105, 1107, 1109, 1119, 1141, 1146, 1148, 1150, 1158, 1180, 1185, 1187, 1189, 1197, 1218, 1223, 1225, 1227, 1235, 1256, 1261, 1263, 1265, 1273, 1295, 1303, 1325, 1335, 1359, 1369, 1393, 1403, 1425, 1433, 1455, 1465, 1486, 1494, 1514, 1522, 1542, 1550, 1572, 1582, 1604, 1612, 1634, 1644, 1666, 1674, 1712, 1716], "have": [4, 5, 7, 9, 11, 12, 15, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 44, 60, 64, 76, 90, 103, 120, 136, 152, 155, 169, 185, 188, 201, 218, 234, 250, 253, 267, 283, 286, 300, 316, 319, 333, 349, 353, 367, 383, 386, 400, 416, 419, 433, 449, 452, 466, 482, 499, 528, 543, 575, 599, 652, 689, 703, 718, 746, 772, 853, 944, 951, 952, 955, 956, 966, 983, 990, 991, 994, 995, 1005, 1028, 1029, 1032, 1033, 1043, 1059, 1066, 1067, 1070, 1071, 1081, 1097, 1104, 1105, 1108, 1109, 1121, 1138, 1145, 1146, 1149, 1150, 1160, 1177, 1184, 1185, 1188, 1189, 1199, 1215, 1222, 1223, 1226, 1227, 1237, 1253, 1260, 1261, 1264, 1265, 1275, 1297, 1327, 1361, 1395, 1427, 1457, 1488, 1516, 1544, 1574, 1606, 1636, 1668, 1715, 1720, 1724, 1725, 1728, 1746, 1847, 1860, 1869, 1915], "simplifi": [4, 9, 23], "nbval_ignore_output": [4, 8], "mode": [4, 5, 6, 8, 9, 11, 12, 15, 18, 28, 29, 31, 33, 36, 39, 44, 48, 50, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 67, 73, 76, 80, 82, 83, 84, 85, 88, 90, 91, 93, 100, 103, 107, 109, 110, 111, 112, 116, 120, 121, 122, 123, 125, 131, 136, 140, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 164, 169, 173, 175, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 198, 201, 205, 207, 208, 209, 210, 214, 218, 219, 220, 221, 223, 229, 234, 238, 240, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 256, 262, 267, 271, 273, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 295, 300, 304, 306, 307, 308, 309, 312, 314, 316, 317, 318, 319, 320, 322, 328, 333, 337, 339, 340, 341, 342, 345, 347, 349, 350, 351, 352, 353, 354, 356, 362, 367, 371, 373, 374, 375, 376, 379, 381, 383, 384, 385, 386, 387, 389, 395, 400, 404, 406, 407, 408, 409, 412, 414, 416, 417, 418, 419, 420, 422, 428, 433, 437, 439, 440, 441, 442, 445, 447, 449, 450, 451, 452, 453, 455, 461, 466, 470, 472, 473, 474, 475, 478, 480, 482, 483, 484, 485, 487, 497, 499, 503, 505, 506, 507, 508, 511, 516, 519, 525, 528, 532, 534, 535, 536, 537, 540, 543, 544, 546, 554, 559, 561, 573, 575, 579, 581, 582, 583, 584, 587, 591, 593, 599, 600, 601, 602, 603, 604, 605, 671, 672, 673, 674, 675, 676, 677, 744, 791, 792, 795, 820, 821, 875, 900, 922, 923, 924, 926, 947, 951, 952, 955, 956, 962, 964, 965, 966, 967, 968, 971, 975, 977, 986, 990, 991, 994, 995, 1001, 1003, 1004, 1005, 1006, 1007, 1010, 1014, 1016, 1024, 1028, 1029, 1032, 1033, 1039, 1041, 1042, 1043, 1044, 1045, 1048, 1052, 1054, 1062, 1066, 1067, 1070, 1071, 1077, 1079, 1080, 1081, 1082, 1083, 1086, 1090, 1092, 1100, 1104, 1105, 1108, 1109, 1117, 1119, 1120, 1121, 1122, 1123, 1126, 1130, 1132, 1141, 1145, 1146, 1149, 1150, 1156, 1158, 1159, 1160, 1161, 1162, 1165, 1169, 1171, 1180, 1184, 1185, 1188, 1189, 1195, 1197, 1198, 1199, 1200, 1201, 1204, 1208, 1210, 1218, 1222, 1223, 1226, 1227, 1233, 1235, 1236, 1237, 1238, 1239, 1242, 1246, 1248, 1256, 1260, 1261, 1264, 1265, 1271, 1273, 1274, 1275, 1276, 1277, 1280, 1284, 1286, 1295, 1297, 1301, 1303, 1304, 1305, 1306, 1309, 1313, 1315, 1325, 1327, 1332, 1333, 1335, 1336, 1337, 1338, 1341, 1346, 1348, 1359, 1361, 1366, 1367, 1369, 1370, 1371, 1372, 1375, 1380, 1382, 1393, 1395, 1400, 1401, 1403, 1404, 1405, 1406, 1409, 1414, 1416, 1425, 1427, 1431, 1433, 1434, 1435, 1436, 1439, 1443, 1445, 1455, 1457, 1462, 1463, 1465, 1466, 1467, 1468, 1471, 1476, 1478, 1486, 1488, 1492, 1494, 1495, 1496, 1497, 1500, 1504, 1506, 1514, 1516, 1520, 1522, 1523, 1524, 1525, 1528, 1532, 1534, 1542, 1544, 1548, 1550, 1551, 1552, 1553, 1556, 1560, 1562, 1572, 1574, 1579, 1580, 1582, 1583, 1584, 1585, 1588, 1593, 1595, 1604, 1606, 1610, 1612, 1613, 1614, 1615, 1618, 1622, 1624, 1634, 1636, 1641, 1642, 1644, 1645, 1646, 1647, 1650, 1655, 1657, 1666, 1668, 1672, 1674, 1675, 1676, 1677, 1680, 1684, 1686, 1712, 1750, 1915], "group": [4, 8, 11, 12, 22, 36, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 647, 651, 1713], "topotool": [4, 8, 10, 18, 26, 28, 982, 1745], "get_domain_area": [4, 8, 10], "get_domain_length": [4, 8, 10], "k": [4, 5, 9, 14, 18, 21, 22, 23, 27, 28, 29, 31, 32, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 458, 490, 493, 522, 549, 568, 596, 617, 632, 856, 857, 858, 860, 862, 863, 864, 867, 869, 878, 880, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 898, 899, 901, 902, 929, 930, 959, 980, 998, 1019, 1036, 1057, 1074, 1095, 1114, 1135, 1153, 1174, 1192, 1213, 1230, 1251, 1268, 1289, 1318, 1351, 1385, 1419, 1448, 1481, 1509, 1537, 1565, 1598, 1627, 1660, 1689, 1794, 1808, 1820, 1895], "delta_p": 4, "print": [4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 606, 659, 660, 952, 953, 954, 955, 956, 966, 991, 992, 993, 994, 995, 1005, 1029, 1030, 1031, 1032, 1033, 1043, 1067, 1068, 1069, 1070, 1071, 1081, 1105, 1106, 1107, 1108, 1109, 1121, 1146, 1147, 1148, 1149, 1150, 1160, 1185, 1186, 1187, 1188, 1189, 1199, 1215, 1223, 1224, 1225, 1226, 1227, 1237, 1261, 1262, 1263, 1264, 1265, 1275, 1567, 1629, 1777, 1779, 1810, 1822, 1834, 1902, 1903], "f": [4, 5, 7, 8, 9, 10, 21, 22, 29, 31, 33, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 458, 490, 522, 549, 568, 596, 617, 632, 660, 663, 853, 929, 930, 980, 1019, 1057, 1059, 1095, 1097, 1135, 1174, 1213, 1251, 1253, 1289, 1318, 1351, 1385, 1419, 1448, 1481, 1509, 1537, 1565, 1598, 1627, 1660, 1689, 1728, 1746, 1794, 1808, 1820, 1895], "98e": 4, "12": [4, 5, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 33, 683, 1919], "1000": [4, 14, 21, 745, 796, 822, 922, 923, 924, 1696, 1698, 1702, 1704], "2f": [4, 8, 10], "md": 4, "40": [4, 6, 9, 10, 12, 30, 32, 33, 884, 920], "attempt": [4, 7, 8, 9, 18, 27, 31, 32, 64, 155, 188, 253, 286, 319, 353, 386, 419, 452, 1511], "estim": [4, 8, 9, 10, 21, 31, 863, 864], "low": [4, 8, 9, 29, 740, 748, 798, 831, 880, 1324, 1358, 1392, 1454, 1571, 1633], "_topotool": [4, 8], "1046": [4, 8], "length": [4, 5, 6, 7, 8, 9, 10, 14, 18, 20, 23, 25, 26, 28, 32, 56, 60, 67, 68, 69, 88, 90, 93, 94, 95, 116, 120, 125, 126, 127, 148, 152, 158, 159, 160, 181, 185, 191, 192, 193, 214, 218, 223, 224, 225, 246, 250, 256, 257, 258, 279, 283, 289, 290, 291, 312, 316, 322, 323, 324, 345, 349, 356, 357, 358, 379, 383, 389, 390, 391, 412, 416, 422, 423, 424, 445, 449, 455, 456, 457, 478, 482, 487, 488, 489, 494, 511, 519, 520, 521, 540, 543, 546, 547, 548, 566, 567, 571, 587, 593, 594, 595, 603, 605, 635, 647, 648, 664, 671, 672, 673, 674, 675, 676, 677, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 715, 730, 740, 743, 744, 745, 747, 748, 749, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 792, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 808, 809, 810, 811, 812, 813, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 840, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 922, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 945, 953, 966, 971, 977, 978, 979, 982, 984, 992, 1005, 1010, 1016, 1017, 1018, 1022, 1030, 1043, 1048, 1054, 1055, 1056, 1060, 1068, 1081, 1086, 1092, 1093, 1094, 1098, 1106, 1121, 1126, 1132, 1133, 1134, 1139, 1147, 1160, 1165, 1171, 1172, 1173, 1178, 1186, 1199, 1204, 1210, 1211, 1212, 1216, 1224, 1237, 1242, 1248, 1249, 1250, 1254, 1262, 1275, 1280, 1286, 1287, 1288, 1293, 1309, 1315, 1316, 1317, 1322, 1341, 1348, 1349, 1350, 1356, 1375, 1382, 1383, 1384, 1390, 1409, 1416, 1417, 1418, 1423, 1439, 1445, 1446, 1447, 1452, 1471, 1478, 1479, 1480, 1484, 1500, 1506, 1507, 1508, 1512, 1528, 1534, 1535, 1536, 1540, 1556, 1562, 1563, 1564, 1569, 1588, 1595, 1596, 1597, 1602, 1618, 1624, 1625, 1626, 1631, 1650, 1657, 1658, 1659, 1664, 1680, 1686, 1687, 1688, 1721, 1723, 1730, 1737, 1750], "could": [4, 7, 8, 9, 10, 18, 20, 22, 27, 29, 31, 33, 811, 812, 1110, 1111], "1090": [4, 8], "ad": [4, 5, 6, 7, 8, 10, 11, 12, 17, 18, 22, 25, 26, 27, 30, 33, 36, 61, 91, 122, 153, 186, 196, 220, 251, 261, 284, 317, 348, 350, 382, 384, 415, 417, 448, 450, 483, 494, 515, 516, 542, 544, 552, 570, 571, 591, 604, 634, 635, 643, 688, 745, 758, 796, 812, 822, 944, 945, 975, 983, 984, 1014, 1022, 1052, 1059, 1060, 1090, 1098, 1130, 1137, 1138, 1139, 1169, 1177, 1178, 1208, 1216, 1246, 1253, 1254, 1284, 1293, 1313, 1322, 1346, 1356, 1380, 1390, 1414, 1423, 1443, 1452, 1476, 1484, 1504, 1512, 1532, 1540, 1560, 1569, 1593, 1602, 1622, 1631, 1655, 1664, 1684, 1710, 1712, 1713, 1717, 1727, 1743, 1887, 1897], "07": [4, 7], "method": [4, 5, 7, 9, 10, 16, 22, 23, 26, 27, 29, 31, 33, 34, 38, 59, 60, 70, 72, 90, 96, 98, 120, 128, 130, 151, 152, 161, 163, 184, 185, 194, 196, 197, 218, 226, 228, 249, 250, 259, 261, 282, 283, 292, 294, 315, 316, 325, 327, 349, 359, 361, 383, 392, 394, 416, 425, 427, 449, 458, 460, 481, 482, 490, 493, 513, 517, 522, 524, 543, 549, 551, 552, 553, 568, 570, 596, 598, 617, 619, 632, 634, 642, 658, 667, 747, 749, 797, 799, 810, 827, 834, 857, 858, 880, 887, 889, 926, 943, 949, 950, 959, 961, 966, 980, 982, 988, 989, 998, 1000, 1005, 1019, 1021, 1026, 1027, 1036, 1038, 1043, 1057, 1059, 1064, 1065, 1074, 1076, 1081, 1095, 1097, 1102, 1103, 1111, 1114, 1116, 1121, 1135, 1137, 1143, 1144, 1153, 1155, 1160, 1174, 1176, 1182, 1183, 1192, 1194, 1199, 1213, 1215, 1220, 1221, 1230, 1232, 1237, 1251, 1253, 1258, 1259, 1268, 1270, 1275, 1289, 1292, 1318, 1320, 1321, 1344, 1351, 1353, 1354, 1355, 1378, 1385, 1387, 1388, 1389, 1412, 1419, 1421, 1422, 1448, 1450, 1451, 1474, 1481, 1483, 1509, 1511, 1537, 1539, 1565, 1567, 1568, 1591, 1598, 1600, 1601, 1627, 1629, 1630, 1653, 1660, 1662, 1663, 1689, 1692, 1694, 1696, 1698, 1699, 1700, 1702, 1704, 1706, 1709, 1713, 1719, 1727, 1738, 1744, 1745, 1750, 1751, 1752, 1758, 1761, 1763, 1764, 1766, 1768, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1779, 1781, 1783, 1784, 1794, 1796, 1808, 1820, 1860, 1878, 1895, 1898, 1902, 1903, 1908, 1914, 1915, 1916, 1918], "base": [4, 5, 6, 11, 18, 21, 23, 26, 29, 31, 33, 34, 36, 641, 642, 648, 659, 744, 792, 795, 816, 817, 819, 820, 821, 823, 824, 825, 828, 829, 830, 832, 833, 871, 895, 926, 927, 929, 930, 1059, 1097, 1253, 1692, 1694, 1696, 1699, 1702, 1728, 1755, 1762, 1766, 1768, 1769, 1771, 1773, 1775, 1777, 1779, 1859, 1897, 1898, 1908, 1909], "scipi": [4, 6, 9, 20, 27, 28, 33, 36, 642, 745, 747, 749, 796, 797, 799, 822, 827, 834, 949, 988, 1026, 1059, 1064, 1102, 1143, 1182, 1220, 1253, 1258, 1704, 1706, 1711, 1714, 1716, 1721, 1726, 1749, 1753, 1756], "convexhul": 4, "approxim": [4, 9, 10, 12, 23, 31, 713, 728], "both": [4, 9, 11, 15, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 51, 57, 83, 89, 110, 117, 143, 149, 176, 182, 208, 215, 241, 247, 274, 280, 307, 313, 340, 346, 374, 380, 407, 413, 440, 446, 473, 479, 492, 506, 512, 535, 541, 564, 582, 588, 600, 849, 853, 863, 926, 929, 930, 965, 972, 1004, 1011, 1042, 1049, 1080, 1087, 1120, 1127, 1159, 1166, 1198, 1205, 1236, 1243, 1274, 1281, 1304, 1310, 1336, 1342, 1370, 1376, 1404, 1410, 1434, 1440, 1466, 1472, 1495, 1501, 1523, 1529, 1551, 1557, 1583, 1589, 1613, 1619, 1645, 1651, 1675, 1681, 1714, 1720, 1724, 1725, 1737, 1749, 1755, 1867, 1915, 1916], "without": [4, 16, 18, 29, 30, 31, 32, 33, 746, 1215, 1743, 1744, 1764, 1766, 1915], "necessarili": [4, 9, 15], "locat": [4, 5, 7, 9, 10, 14, 18, 20, 22, 25, 26, 27, 28, 29, 31, 32, 33, 44, 51, 52, 53, 56, 60, 61, 63, 64, 65, 67, 69, 76, 83, 84, 85, 88, 90, 91, 93, 95, 103, 110, 111, 112, 116, 120, 121, 122, 123, 125, 127, 136, 143, 144, 145, 148, 152, 153, 154, 155, 156, 158, 160, 169, 176, 177, 178, 181, 185, 186, 187, 188, 189, 191, 193, 201, 208, 209, 210, 214, 218, 219, 220, 221, 223, 225, 234, 241, 242, 243, 246, 250, 251, 252, 253, 254, 256, 258, 267, 274, 275, 276, 279, 283, 284, 285, 286, 287, 289, 291, 300, 307, 308, 309, 312, 316, 317, 318, 319, 320, 322, 324, 333, 340, 341, 342, 345, 349, 350, 352, 353, 354, 356, 358, 367, 374, 375, 376, 379, 383, 384, 385, 386, 387, 389, 391, 400, 407, 408, 409, 412, 416, 417, 418, 419, 420, 422, 424, 433, 440, 441, 442, 445, 449, 450, 451, 452, 453, 455, 457, 466, 473, 474, 475, 478, 482, 483, 484, 485, 487, 489, 494, 495, 499, 506, 507, 508, 511, 514, 516, 517, 519, 521, 528, 535, 536, 537, 540, 543, 544, 546, 548, 552, 567, 571, 572, 575, 582, 583, 584, 587, 590, 591, 593, 595, 599, 600, 601, 602, 603, 604, 605, 635, 636, 638, 647, 651, 746, 811, 812, 863, 943, 945, 946, 949, 950, 951, 952, 959, 961, 965, 967, 968, 971, 974, 975, 977, 979, 984, 985, 988, 989, 990, 991, 998, 1000, 1004, 1006, 1007, 1010, 1013, 1014, 1016, 1018, 1021, 1022, 1023, 1026, 1027, 1028, 1029, 1036, 1038, 1042, 1044, 1045, 1048, 1051, 1052, 1054, 1056, 1060, 1061, 1064, 1065, 1066, 1067, 1074, 1076, 1080, 1082, 1083, 1086, 1089, 1090, 1092, 1094, 1098, 1099, 1102, 1103, 1104, 1105, 1114, 1116, 1120, 1122, 1123, 1126, 1129, 1130, 1132, 1134, 1139, 1140, 1143, 1144, 1145, 1146, 1153, 1155, 1159, 1161, 1162, 1165, 1168, 1169, 1171, 1173, 1176, 1178, 1179, 1182, 1183, 1184, 1185, 1192, 1194, 1198, 1200, 1201, 1204, 1207, 1208, 1210, 1212, 1215, 1216, 1217, 1220, 1221, 1222, 1223, 1230, 1232, 1236, 1238, 1239, 1242, 1245, 1246, 1248, 1250, 1254, 1255, 1258, 1259, 1260, 1261, 1268, 1270, 1274, 1276, 1277, 1280, 1283, 1284, 1286, 1288, 1293, 1294, 1297, 1304, 1305, 1306, 1309, 1312, 1313, 1315, 1317, 1322, 1323, 1324, 1327, 1336, 1337, 1338, 1341, 1345, 1346, 1348, 1350, 1356, 1357, 1358, 1361, 1370, 1371, 1372, 1375, 1379, 1380, 1382, 1384, 1390, 1391, 1392, 1395, 1404, 1405, 1406, 1409, 1413, 1414, 1416, 1418, 1423, 1424, 1427, 1434, 1435, 1436, 1439, 1442, 1443, 1445, 1447, 1452, 1453, 1454, 1457, 1466, 1467, 1468, 1471, 1475, 1476, 1478, 1480, 1484, 1485, 1488, 1495, 1496, 1497, 1500, 1503, 1504, 1506, 1508, 1512, 1513, 1516, 1523, 1524, 1525, 1528, 1531, 1532, 1534, 1536, 1540, 1541, 1544, 1551, 1552, 1553, 1556, 1559, 1560, 1562, 1564, 1569, 1570, 1571, 1574, 1583, 1584, 1585, 1588, 1592, 1593, 1595, 1597, 1602, 1603, 1606, 1613, 1614, 1615, 1618, 1621, 1622, 1624, 1626, 1631, 1632, 1633, 1636, 1645, 1646, 1647, 1650, 1654, 1655, 1657, 1659, 1664, 1665, 1668, 1675, 1676, 1677, 1680, 1683, 1684, 1686, 1688, 1709, 1716, 1719, 1721, 1744], "almost": [4, 23, 25, 28, 29], "flat": [4, 660, 1253, 1822, 1900], "plane": [4, 10, 694, 696], "2": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 55, 87, 99, 115, 147, 180, 213, 228, 245, 278, 311, 344, 378, 411, 444, 477, 510, 513, 515, 539, 563, 586, 615, 630, 643, 648, 671, 672, 673, 674, 675, 676, 677, 683, 690, 691, 693, 696, 700, 715, 730, 745, 762, 771, 796, 822, 863, 884, 895, 907, 908, 915, 916, 920, 923, 924, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 944, 949, 952, 953, 954, 955, 966, 970, 983, 988, 991, 992, 993, 994, 1005, 1009, 1026, 1029, 1030, 1031, 1032, 1043, 1047, 1059, 1064, 1067, 1068, 1069, 1070, 1081, 1085, 1097, 1102, 1105, 1106, 1107, 1108, 1121, 1125, 1138, 1143, 1146, 1147, 1148, 1149, 1160, 1164, 1177, 1182, 1185, 1186, 1187, 1188, 1199, 1203, 1215, 1220, 1223, 1224, 1225, 1226, 1237, 1241, 1253, 1258, 1261, 1262, 1263, 1264, 1275, 1279, 1308, 1320, 1340, 1374, 1408, 1438, 1470, 1499, 1527, 1555, 1587, 1617, 1649, 1679, 1711, 1713, 1714, 1717, 1721, 1726, 1728, 1737, 1744, 1746, 1749, 1777, 1792, 1804, 1810, 1818, 1822, 1887, 1891, 1892, 1914, 1916, 1919], "ha": [4, 5, 6, 7, 9, 13, 15, 16, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 70, 76, 96, 103, 128, 136, 161, 169, 194, 201, 226, 234, 259, 267, 292, 300, 325, 333, 359, 367, 392, 400, 425, 433, 458, 466, 490, 499, 522, 528, 549, 552, 568, 570, 575, 596, 599, 617, 623, 632, 694, 696, 733, 857, 920, 929, 930, 949, 950, 951, 980, 988, 989, 990, 1019, 1026, 1027, 1028, 1057, 1064, 1065, 1066, 1095, 1102, 1103, 1104, 1135, 1143, 1144, 1145, 1174, 1182, 1183, 1184, 1213, 1215, 1220, 1221, 1222, 1251, 1258, 1259, 1260, 1289, 1297, 1318, 1320, 1327, 1351, 1354, 1361, 1385, 1388, 1395, 1419, 1427, 1448, 1457, 1481, 1488, 1509, 1516, 1537, 1544, 1565, 1567, 1574, 1598, 1606, 1627, 1629, 1636, 1660, 1668, 1689, 1755, 1762, 1794, 1808, 1810, 1820, 1822, 1861, 1895, 1908, 1909, 1918], "spheric": [4, 9, 10, 23, 26, 29, 32, 34, 756, 759, 771, 808, 809, 810, 811, 812, 813, 1059, 1253, 1728, 1736, 1752], "cylindr": [4, 9, 10, 23, 26, 32, 713, 728, 768, 802, 809, 811, 812, 905, 908, 923, 1059, 1253, 1728, 1736], "each": [4, 5, 6, 9, 10, 11, 12, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 48, 58, 60, 63, 65, 79, 80, 90, 106, 107, 120, 139, 140, 150, 152, 154, 156, 172, 173, 183, 185, 187, 189, 204, 205, 218, 219, 221, 237, 238, 248, 250, 252, 254, 270, 271, 281, 283, 285, 287, 303, 304, 314, 316, 318, 320, 336, 337, 347, 349, 352, 354, 370, 371, 381, 383, 385, 387, 403, 404, 414, 416, 418, 420, 436, 437, 447, 449, 451, 453, 469, 470, 480, 482, 484, 485, 493, 494, 502, 503, 517, 531, 532, 542, 543, 552, 558, 559, 571, 578, 579, 619, 635, 648, 651, 664, 700, 713, 715, 728, 730, 740, 741, 746, 748, 771, 798, 826, 831, 837, 838, 839, 841, 842, 845, 850, 853, 857, 862, 863, 864, 871, 872, 875, 876, 877, 882, 886, 888, 897, 900, 901, 926, 927, 943, 944, 945, 949, 950, 952, 953, 954, 955, 956, 959, 960, 961, 962, 966, 982, 983, 984, 988, 989, 991, 992, 993, 994, 995, 998, 999, 1000, 1001, 1005, 1021, 1022, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1043, 1060, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1077, 1081, 1097, 1098, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1117, 1121, 1138, 1139, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1153, 1154, 1155, 1156, 1160, 1176, 1177, 1178, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1192, 1193, 1194, 1195, 1199, 1215, 1216, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1237, 1253, 1254, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1275, 1293, 1300, 1301, 1321, 1322, 1324, 1330, 1331, 1333, 1355, 1356, 1358, 1364, 1365, 1367, 1389, 1390, 1392, 1398, 1399, 1401, 1423, 1430, 1431, 1451, 1452, 1454, 1460, 1461, 1463, 1484, 1491, 1492, 1512, 1519, 1520, 1540, 1547, 1548, 1568, 1569, 1571, 1577, 1578, 1580, 1602, 1609, 1610, 1630, 1631, 1633, 1639, 1640, 1642, 1664, 1671, 1672, 1711, 1712, 1713, 1715, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1731, 1732, 1735, 1736, 1742, 1745, 1747, 1748, 1749, 1750, 1755, 1773, 1822, 1833, 1845, 1858, 1893, 1898, 1899, 1902, 1903, 1914, 1915, 1916], "necessari": [4, 6, 9, 17, 22, 23, 27, 29, 33, 740, 744, 745, 747, 748, 749, 792, 795, 796, 797, 798, 799, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 1750, 1887, 1910], "accordingli": [4, 1716], "These": [4, 7, 11, 15, 18, 25, 26, 27, 28, 29, 31, 33, 34, 65, 156, 189, 254, 287, 320, 354, 387, 420, 453, 485, 492, 647, 688, 932, 943, 953, 992, 1030, 1068, 1106, 1147, 1176, 1186, 1215, 1224, 1253, 1262, 1717, 1915, 1916], "altern": [4, 9, 25, 31, 929, 930], "add_model": [4, 5, 6, 9, 10, 11, 12, 14, 18, 21, 22, 29, 30, 31, 32, 33, 495, 572, 636, 745, 796, 822, 823, 932, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "choos": [4, 7, 11], "hydraulic_size_factor": [4, 5, 7, 14, 18, 23, 27, 29, 32, 671, 672, 673, 674, 675, 676, 677, 918, 919], "For": [4, 5, 7, 9, 10, 11, 12, 15, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 453, 484, 485, 494, 552, 571, 635, 749, 799, 834, 853, 929, 930, 945, 982, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1511, 1512, 1540, 1569, 1602, 1631, 1664, 1709, 1727, 1736, 1744, 1846, 1918], "more": [4, 7, 9, 12, 14, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 51, 52, 53, 56, 60, 67, 76, 83, 84, 85, 88, 90, 93, 103, 110, 111, 112, 116, 120, 125, 136, 143, 144, 145, 148, 152, 158, 169, 176, 177, 178, 181, 185, 191, 196, 201, 208, 209, 210, 214, 218, 223, 234, 241, 242, 243, 246, 250, 256, 267, 274, 275, 276, 279, 283, 289, 300, 307, 308, 309, 312, 316, 322, 333, 340, 341, 342, 345, 349, 356, 367, 374, 375, 376, 379, 383, 389, 400, 407, 408, 409, 412, 416, 422, 433, 440, 441, 442, 445, 449, 455, 466, 473, 474, 475, 478, 482, 487, 494, 495, 499, 506, 507, 508, 511, 513, 519, 528, 535, 536, 537, 540, 543, 546, 551, 571, 572, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 635, 636, 649, 749, 799, 834, 929, 930, 945, 946, 951, 952, 955, 956, 965, 966, 967, 968, 971, 977, 982, 984, 985, 990, 991, 994, 995, 1004, 1005, 1006, 1007, 1010, 1016, 1022, 1023, 1028, 1029, 1032, 1033, 1042, 1043, 1044, 1045, 1048, 1054, 1060, 1061, 1066, 1067, 1070, 1071, 1080, 1081, 1082, 1083, 1086, 1092, 1098, 1099, 1104, 1105, 1108, 1109, 1120, 1121, 1122, 1123, 1126, 1132, 1139, 1140, 1145, 1146, 1149, 1150, 1159, 1160, 1161, 1162, 1165, 1171, 1178, 1179, 1184, 1185, 1188, 1189, 1198, 1199, 1200, 1201, 1204, 1210, 1216, 1217, 1222, 1223, 1226, 1227, 1236, 1237, 1238, 1239, 1242, 1248, 1253, 1254, 1255, 1260, 1261, 1264, 1265, 1274, 1275, 1276, 1277, 1280, 1286, 1293, 1294, 1297, 1304, 1305, 1306, 1309, 1315, 1322, 1323, 1327, 1336, 1337, 1338, 1341, 1348, 1356, 1357, 1361, 1370, 1371, 1372, 1375, 1382, 1390, 1391, 1395, 1404, 1405, 1406, 1409, 1416, 1423, 1424, 1427, 1434, 1435, 1436, 1439, 1445, 1452, 1453, 1457, 1466, 1467, 1468, 1471, 1478, 1484, 1485, 1488, 1495, 1496, 1497, 1500, 1506, 1512, 1513, 1516, 1523, 1524, 1525, 1528, 1534, 1540, 1541, 1544, 1551, 1552, 1553, 1556, 1562, 1569, 1570, 1574, 1583, 1584, 1585, 1588, 1595, 1602, 1603, 1606, 1613, 1614, 1615, 1618, 1624, 1631, 1632, 1636, 1645, 1646, 1647, 1650, 1657, 1664, 1665, 1668, 1675, 1676, 1677, 1680, 1686, 1720, 1724, 1725, 1727, 1784, 1864, 1887, 1892, 1908, 1909], "inform": [4, 5, 7, 9, 11, 15, 25, 27, 28, 31, 32, 33, 495, 551, 572, 636, 749, 799, 834, 922, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1887, 1892, 1902, 1903], "see": [4, 9, 12, 15, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 61, 62, 63, 65, 91, 122, 153, 154, 156, 186, 187, 189, 220, 251, 252, 254, 284, 285, 287, 317, 318, 320, 350, 351, 352, 354, 384, 385, 387, 417, 418, 420, 450, 451, 453, 483, 484, 485, 494, 495, 516, 544, 551, 571, 572, 591, 604, 635, 636, 649, 659, 867, 915, 916, 945, 946, 975, 984, 985, 1014, 1022, 1023, 1052, 1060, 1061, 1090, 1098, 1099, 1130, 1139, 1140, 1169, 1178, 1179, 1208, 1216, 1217, 1246, 1253, 1254, 1255, 1284, 1293, 1294, 1313, 1322, 1323, 1346, 1356, 1357, 1380, 1390, 1391, 1414, 1423, 1424, 1443, 1452, 1453, 1476, 1484, 1485, 1504, 1512, 1513, 1532, 1540, 1541, 1560, 1569, 1570, 1593, 1602, 1603, 1622, 1631, 1632, 1655, 1664, 1665, 1684, 1719, 1728, 1764, 1766, 1887, 1892], "notebook": [4, 7, 15, 16, 20, 21, 22, 23, 24, 26, 31, 32, 33, 1918], "show": [5, 6, 7, 8, 9, 26, 27, 28, 29, 31, 33, 34, 745, 747, 749, 796, 797, 799, 822, 823, 827, 834, 1915, 1916], "your": [5, 17, 18, 29, 30, 36], "veri": [5, 17, 20, 25, 26, 27, 28, 29, 30, 32, 36, 196, 853, 880, 955, 956, 994, 995, 1032, 1033, 1070, 1071, 1108, 1109, 1149, 1150, 1188, 1189, 1226, 1227, 1264, 1265, 1724, 1725, 1757], "own": [5, 15, 18, 26, 29, 30, 882, 883], "custom": [5, 6, 9, 15, 16, 25, 744, 792, 795, 820, 821, 823, 1758, 1846], "describ": [5, 20, 22, 23, 27, 28, 29, 30, 907, 923, 1021], "next": [5, 7, 9, 11, 12, 15, 26, 27, 29, 33, 34, 196, 818], "add": [5, 6, 7, 10, 15, 16, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 35, 60, 61, 62, 63, 64, 65, 90, 91, 120, 121, 122, 123, 152, 153, 154, 155, 156, 185, 186, 187, 188, 189, 218, 219, 220, 221, 250, 251, 252, 253, 254, 283, 284, 285, 286, 287, 316, 317, 318, 319, 320, 349, 350, 351, 352, 353, 354, 383, 384, 385, 386, 387, 416, 417, 418, 419, 420, 449, 450, 451, 452, 453, 482, 483, 484, 485, 494, 495, 496, 516, 543, 544, 552, 571, 572, 591, 598, 604, 635, 636, 745, 796, 822, 944, 945, 946, 975, 983, 984, 985, 1014, 1022, 1023, 1052, 1060, 1061, 1090, 1098, 1099, 1130, 1138, 1139, 1140, 1169, 1177, 1178, 1179, 1208, 1216, 1217, 1246, 1254, 1255, 1284, 1293, 1294, 1313, 1321, 1322, 1323, 1346, 1355, 1356, 1357, 1380, 1389, 1390, 1391, 1414, 1423, 1424, 1443, 1451, 1452, 1453, 1476, 1483, 1484, 1485, 1504, 1512, 1513, 1532, 1540, 1541, 1560, 1568, 1569, 1570, 1593, 1602, 1603, 1622, 1630, 1631, 1632, 1655, 1664, 1665, 1684, 1710, 1712, 1717, 1743, 1784], "weibul": [5, 9, 14, 747, 797, 827], "might": [5, 9, 15, 26, 27, 28, 31, 32, 643, 666, 811, 812, 817, 955, 956, 994, 995, 1032, 1033, 1070, 1071, 1108, 1109, 1149, 1150, 1188, 1189, 1226, 1227, 1264, 1265, 1720, 1724, 1725, 1727, 1750, 1878], "our": [5, 7, 9, 15, 18, 20, 22, 23, 25, 26, 29, 31, 33, 36], "histogram": [5, 14, 34, 826], "pyplot": [5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 26, 28, 29, 30, 33, 34, 745, 747, 749, 796, 797, 799, 822, 827, 834, 1915, 1916], "plt": [5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 26, 28, 29, 30, 33, 34, 745, 747, 749, 796, 797, 799, 822, 827, 834, 1915, 1916], "spst": [5, 9, 29], "standard": [5, 6, 22, 26, 28, 30, 31, 33, 659, 747, 797, 827, 949, 950, 988, 989, 1021, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259, 1539, 1601, 1784, 1887, 1892], "lattic": [5, 9, 943, 982, 983, 1021, 1138, 1176], "given": [5, 6, 11, 12, 16, 17, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 50, 51, 52, 53, 56, 58, 60, 61, 63, 64, 65, 67, 69, 74, 76, 82, 83, 84, 85, 88, 90, 91, 93, 95, 101, 103, 109, 110, 111, 112, 116, 120, 121, 122, 123, 125, 127, 132, 136, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 160, 165, 169, 175, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 193, 199, 201, 207, 208, 209, 210, 214, 217, 218, 219, 220, 221, 223, 225, 230, 234, 240, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 256, 258, 263, 267, 273, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 291, 296, 300, 306, 307, 308, 309, 312, 314, 316, 317, 318, 319, 320, 322, 324, 329, 333, 339, 340, 341, 342, 345, 347, 349, 350, 352, 353, 354, 356, 358, 363, 367, 373, 374, 375, 376, 379, 381, 383, 384, 385, 386, 387, 389, 391, 396, 400, 406, 407, 408, 409, 412, 414, 416, 417, 418, 419, 420, 422, 424, 429, 433, 439, 440, 441, 442, 445, 447, 449, 450, 451, 452, 453, 455, 457, 462, 466, 472, 473, 474, 475, 478, 480, 482, 483, 484, 485, 487, 489, 493, 494, 499, 505, 506, 507, 508, 511, 513, 516, 519, 521, 526, 528, 534, 535, 536, 537, 540, 543, 544, 546, 548, 552, 561, 567, 571, 575, 581, 582, 583, 584, 587, 589, 591, 593, 595, 599, 600, 601, 602, 603, 604, 605, 614, 629, 635, 637, 646, 651, 652, 654, 659, 660, 662, 666, 667, 745, 746, 747, 749, 796, 797, 799, 816, 817, 822, 823, 824, 825, 826, 827, 828, 829, 833, 834, 860, 867, 871, 874, 876, 884, 891, 895, 902, 908, 922, 926, 927, 929, 930, 931, 933, 934, 935, 936, 937, 938, 943, 944, 945, 951, 952, 954, 955, 956, 964, 965, 966, 967, 968, 971, 973, 975, 977, 979, 982, 983, 984, 990, 991, 993, 994, 995, 1003, 1004, 1005, 1006, 1007, 1010, 1012, 1014, 1016, 1018, 1021, 1022, 1028, 1029, 1031, 1032, 1033, 1041, 1042, 1043, 1044, 1045, 1048, 1050, 1052, 1054, 1056, 1059, 1060, 1066, 1067, 1069, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1086, 1088, 1090, 1092, 1094, 1097, 1098, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1119, 1120, 1121, 1122, 1123, 1126, 1128, 1130, 1132, 1134, 1137, 1138, 1139, 1145, 1146, 1148, 1149, 1150, 1158, 1159, 1160, 1161, 1162, 1165, 1167, 1169, 1171, 1173, 1176, 1177, 1178, 1184, 1185, 1187, 1188, 1189, 1197, 1198, 1199, 1200, 1201, 1204, 1206, 1208, 1210, 1212, 1215, 1216, 1222, 1223, 1225, 1226, 1227, 1235, 1236, 1237, 1238, 1239, 1242, 1244, 1246, 1248, 1250, 1253, 1254, 1260, 1261, 1263, 1264, 1265, 1273, 1274, 1275, 1276, 1277, 1280, 1282, 1284, 1286, 1288, 1293, 1297, 1303, 1304, 1305, 1306, 1309, 1311, 1313, 1315, 1317, 1321, 1322, 1327, 1332, 1335, 1336, 1337, 1338, 1341, 1343, 1344, 1346, 1348, 1350, 1353, 1355, 1356, 1361, 1366, 1369, 1370, 1371, 1372, 1375, 1377, 1378, 1380, 1382, 1384, 1387, 1389, 1390, 1395, 1400, 1403, 1404, 1405, 1406, 1409, 1411, 1412, 1414, 1416, 1418, 1421, 1423, 1427, 1433, 1434, 1435, 1436, 1439, 1441, 1443, 1445, 1447, 1450, 1451, 1452, 1457, 1462, 1465, 1466, 1467, 1468, 1471, 1473, 1474, 1476, 1478, 1480, 1484, 1488, 1494, 1495, 1496, 1497, 1500, 1502, 1504, 1506, 1508, 1511, 1512, 1516, 1522, 1523, 1524, 1525, 1528, 1530, 1532, 1534, 1536, 1540, 1544, 1550, 1551, 1552, 1553, 1556, 1558, 1560, 1562, 1564, 1568, 1569, 1574, 1579, 1582, 1583, 1584, 1585, 1588, 1590, 1591, 1593, 1595, 1597, 1600, 1602, 1606, 1612, 1613, 1614, 1615, 1618, 1620, 1622, 1624, 1626, 1630, 1631, 1636, 1641, 1644, 1645, 1646, 1647, 1650, 1652, 1653, 1655, 1657, 1659, 1662, 1664, 1668, 1674, 1675, 1676, 1677, 1680, 1682, 1684, 1686, 1688, 1693, 1695, 1697, 1701, 1703, 1705, 1707, 1709, 1710, 1711, 1714, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1733, 1734, 1735, 1736, 1737, 1743, 1744, 1746, 1747, 1748, 1749, 1753, 1755, 1756, 1764, 1766, 1773, 1775, 1777, 1779, 1791, 1803, 1817, 1833, 1834, 1837, 1845, 1858, 1889, 1890, 1892, 1900, 1910, 1913, 1914, 1915, 1916, 1917, 1918], "yet": [5, 9, 22, 27, 36, 494, 571, 635, 945, 984, 1022, 1059, 1060, 1098, 1139, 1178, 1216, 1253, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1898], "onli": [5, 6, 9, 11, 12, 13, 16, 17, 18, 23, 26, 27, 28, 29, 30, 31, 32, 33, 44, 50, 51, 52, 53, 56, 67, 76, 82, 83, 84, 85, 88, 93, 103, 109, 110, 111, 112, 116, 123, 125, 136, 142, 143, 144, 145, 148, 158, 169, 175, 176, 177, 178, 181, 191, 201, 207, 208, 209, 210, 214, 223, 234, 240, 241, 242, 243, 246, 256, 267, 273, 274, 275, 276, 279, 289, 300, 306, 307, 308, 309, 312, 322, 333, 339, 340, 341, 342, 345, 356, 367, 373, 374, 375, 376, 379, 389, 400, 406, 407, 408, 409, 412, 422, 433, 439, 440, 441, 442, 445, 455, 466, 472, 473, 474, 475, 478, 487, 493, 494, 499, 505, 506, 507, 508, 511, 519, 528, 534, 535, 536, 537, 540, 546, 561, 571, 575, 581, 582, 583, 584, 587, 589, 593, 599, 600, 601, 602, 603, 605, 622, 635, 637, 652, 658, 666, 667, 690, 695, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 724, 727, 731, 732, 734, 738, 741, 804, 846, 853, 857, 878, 926, 929, 930, 945, 949, 950, 951, 952, 955, 956, 959, 961, 964, 965, 966, 967, 968, 971, 973, 977, 982, 984, 988, 989, 990, 991, 994, 995, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1010, 1012, 1016, 1022, 1026, 1027, 1028, 1029, 1032, 1033, 1036, 1038, 1041, 1042, 1043, 1044, 1045, 1048, 1050, 1054, 1059, 1060, 1064, 1065, 1066, 1067, 1070, 1071, 1074, 1076, 1079, 1080, 1081, 1082, 1083, 1086, 1088, 1092, 1097, 1098, 1102, 1103, 1104, 1105, 1108, 1109, 1114, 1116, 1119, 1120, 1121, 1122, 1123, 1126, 1128, 1132, 1139, 1143, 1144, 1145, 1146, 1149, 1150, 1153, 1155, 1158, 1159, 1160, 1161, 1162, 1165, 1167, 1171, 1178, 1182, 1183, 1184, 1185, 1188, 1189, 1192, 1194, 1197, 1198, 1199, 1200, 1201, 1204, 1206, 1210, 1216, 1220, 1221, 1222, 1223, 1226, 1227, 1230, 1232, 1235, 1236, 1237, 1238, 1239, 1242, 1244, 1248, 1254, 1258, 1259, 1260, 1261, 1264, 1265, 1268, 1270, 1273, 1274, 1275, 1276, 1277, 1280, 1282, 1286, 1293, 1297, 1303, 1304, 1305, 1306, 1309, 1311, 1315, 1320, 1322, 1327, 1335, 1336, 1337, 1338, 1341, 1343, 1348, 1356, 1361, 1369, 1370, 1371, 1372, 1375, 1377, 1382, 1390, 1395, 1403, 1404, 1405, 1406, 1409, 1411, 1416, 1423, 1427, 1433, 1434, 1435, 1436, 1439, 1441, 1445, 1452, 1457, 1465, 1466, 1467, 1468, 1471, 1473, 1478, 1484, 1488, 1494, 1495, 1496, 1497, 1500, 1502, 1506, 1512, 1516, 1522, 1523, 1524, 1525, 1528, 1530, 1534, 1540, 1544, 1550, 1551, 1552, 1553, 1556, 1558, 1562, 1569, 1574, 1582, 1583, 1584, 1585, 1588, 1590, 1595, 1602, 1606, 1612, 1613, 1614, 1615, 1618, 1620, 1624, 1631, 1636, 1644, 1645, 1646, 1647, 1650, 1652, 1657, 1664, 1668, 1674, 1675, 1676, 1677, 1680, 1682, 1686, 1712, 1720, 1724, 1725, 1734, 1745, 1773, 1777, 1779, 1822, 1834, 1898, 1902, 1903, 1915, 1916, 1918], "dictat": [5, 20, 33, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 494, 503, 532, 559, 571, 579, 635, 945, 962, 984, 1001, 1022, 1039, 1060, 1077, 1098, 1117, 1139, 1156, 1178, 1195, 1216, 1233, 1254, 1271, 1293, 1301, 1322, 1333, 1356, 1367, 1390, 1401, 1423, 1431, 1452, 1463, 1484, 1492, 1512, 1520, 1540, 1548, 1569, 1580, 1602, 1610, 1631, 1642, 1664, 1672], "upper": [5, 27, 28, 29, 828, 949, 959, 988, 998, 1026, 1036, 1064, 1074, 1102, 1114, 1143, 1153, 1182, 1192, 1220, 1230, 1258, 1268, 1714, 1739, 1741, 1753, 1756], "limit": [5, 9, 12, 15, 23, 25, 26, 29, 33, 746, 816, 828, 926, 1750], "don": [5, 7, 10, 15, 17, 18, 23, 29, 36], "t": [5, 6, 7, 9, 10, 15, 17, 18, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 493, 517, 524, 553, 570, 643, 853, 856, 857, 858, 860, 862, 863, 864, 867, 869, 878, 880, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 898, 899, 901, 902, 920, 929, 930, 943, 953, 956, 982, 992, 995, 1021, 1030, 1033, 1059, 1068, 1071, 1097, 1106, 1109, 1137, 1147, 1150, 1176, 1186, 1189, 1215, 1224, 1227, 1253, 1262, 1265, 1292, 1320, 1354, 1388, 1422, 1450, 1483, 1511, 1539, 1567, 1601, 1629, 1663, 1914, 1915], "want": [5, 7, 9, 15, 16, 20, 25, 28, 29, 30, 32, 36, 1713, 1904, 1916], "exce": [5, 33], "overlap": [5, 9, 28, 29, 30, 746, 811, 812], "neighbor": [5, 6, 9, 20, 23, 29, 33, 48, 80, 99, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 739, 741, 744, 746, 751, 752, 753, 754, 792, 795, 820, 821, 839, 841, 842, 943, 952, 954, 955, 956, 962, 966, 982, 991, 993, 994, 995, 1001, 1005, 1029, 1031, 1032, 1033, 1039, 1043, 1067, 1069, 1070, 1071, 1077, 1081, 1097, 1105, 1107, 1108, 1109, 1117, 1121, 1146, 1148, 1149, 1150, 1156, 1160, 1176, 1185, 1187, 1188, 1189, 1195, 1199, 1223, 1225, 1226, 1227, 1233, 1237, 1261, 1263, 1264, 1265, 1271, 1275, 1301, 1333, 1367, 1401, 1431, 1463, 1492, 1520, 1548, 1580, 1610, 1642, 1672, 1718, 1720, 1724, 1725, 1744, 1748], "caus": [5, 18, 29, 33, 1744], "paradox": [5, 746], "neg": [5, 9, 29, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 1714], "ll": [5, 9, 15, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36], "larg": [5, 9, 17, 18, 20, 28, 29, 33, 811, 812, 955, 956, 994, 995, 1032, 1033, 1070, 1071, 1108, 1109, 1110, 1111, 1149, 1150, 1188, 1189, 1226, 1227, 1264, 1265, 1724, 1725], "so": [5, 9, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 57, 60, 64, 89, 90, 117, 118, 120, 149, 152, 155, 182, 185, 188, 196, 215, 218, 219, 221, 247, 250, 253, 280, 283, 286, 313, 316, 319, 346, 349, 353, 380, 383, 386, 413, 416, 419, 446, 449, 452, 479, 482, 512, 541, 543, 552, 564, 588, 598, 648, 651, 666, 746, 829, 853, 857, 949, 954, 972, 988, 993, 1011, 1026, 1031, 1049, 1059, 1064, 1069, 1087, 1097, 1102, 1107, 1110, 1111, 1127, 1143, 1148, 1166, 1182, 1187, 1205, 1220, 1225, 1243, 1253, 1258, 1263, 1281, 1310, 1342, 1376, 1410, 1440, 1472, 1501, 1529, 1557, 1589, 1619, 1651, 1681, 1711, 1717, 1721, 1727, 1728, 1744, 1746, 1748, 1749, 1750, 1753, 1756, 1878, 1880, 1902, 1903, 1915, 1916], "do": [5, 6, 7, 9, 11, 12, 18, 23, 25, 27, 28, 29, 30, 31, 32, 33, 64, 155, 188, 253, 286, 319, 353, 386, 419, 452, 853, 1059, 1253, 1866, 1916], "need": [5, 7, 9, 10, 11, 12, 15, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 524, 552, 648, 853, 905, 1710, 1721], "express": [5, 23, 27, 32], "scientif": [5, 25], "notat": [5, 20, 23, 29, 30], "below": [5, 7, 9, 10, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 646, 816, 840, 845, 853, 1746, 1750], "25": [5, 9, 18, 29, 30, 32, 33, 35, 119, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1904, 1914], "under": [5, 7, 22, 23, 29, 634, 662, 1769, 1771, 1775, 1898], "fig": [5, 6, 7, 8, 9, 14, 28, 29, 30, 747, 797, 827, 1915, 1916, 1918], "readi": [5, 7, 13, 20, 22, 35, 492], "object": [5, 7, 9, 14, 15, 16, 17, 22, 25, 26, 27, 29, 30, 33, 34, 38, 39, 49, 51, 57, 59, 61, 71, 72, 73, 81, 83, 89, 91, 97, 98, 99, 100, 108, 110, 117, 122, 129, 130, 131, 141, 143, 149, 151, 153, 162, 163, 164, 174, 176, 182, 184, 186, 195, 196, 197, 198, 206, 208, 215, 220, 227, 228, 229, 239, 241, 247, 249, 251, 260, 261, 262, 272, 274, 280, 282, 284, 293, 294, 295, 305, 307, 313, 315, 317, 326, 327, 328, 338, 340, 346, 348, 350, 360, 361, 362, 372, 374, 380, 382, 384, 393, 394, 395, 405, 407, 413, 415, 417, 426, 427, 428, 438, 440, 446, 448, 450, 459, 460, 461, 471, 473, 479, 481, 483, 491, 493, 494, 496, 497, 504, 506, 512, 513, 516, 523, 524, 525, 533, 535, 541, 542, 544, 550, 552, 553, 554, 560, 564, 569, 570, 571, 573, 580, 582, 588, 589, 591, 597, 600, 604, 606, 612, 613, 618, 619, 622, 624, 627, 628, 633, 634, 635, 637, 648, 652, 655, 658, 659, 661, 662, 663, 664, 667, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 740, 741, 743, 744, 745, 746, 747, 748, 749, 751, 753, 756, 757, 758, 759, 760, 763, 765, 767, 768, 769, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 792, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 806, 808, 809, 810, 811, 812, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 945, 947, 959, 961, 963, 965, 972, 973, 975, 981, 982, 984, 986, 998, 1000, 1002, 1004, 1011, 1012, 1014, 1020, 1021, 1022, 1024, 1036, 1038, 1040, 1042, 1049, 1050, 1052, 1058, 1059, 1060, 1062, 1074, 1076, 1078, 1080, 1087, 1088, 1090, 1096, 1097, 1098, 1100, 1114, 1116, 1118, 1120, 1127, 1128, 1130, 1136, 1137, 1139, 1141, 1153, 1155, 1157, 1159, 1166, 1167, 1169, 1175, 1176, 1178, 1180, 1192, 1194, 1196, 1198, 1205, 1206, 1208, 1214, 1215, 1216, 1218, 1230, 1232, 1234, 1236, 1243, 1244, 1246, 1252, 1253, 1254, 1256, 1268, 1270, 1272, 1274, 1281, 1282, 1284, 1290, 1292, 1293, 1295, 1302, 1304, 1310, 1311, 1313, 1319, 1320, 1321, 1322, 1324, 1325, 1334, 1336, 1342, 1343, 1344, 1346, 1352, 1354, 1355, 1356, 1358, 1359, 1368, 1370, 1376, 1377, 1378, 1380, 1386, 1388, 1389, 1390, 1392, 1393, 1402, 1404, 1410, 1411, 1412, 1414, 1420, 1422, 1423, 1425, 1432, 1434, 1440, 1441, 1443, 1449, 1450, 1451, 1452, 1454, 1455, 1464, 1466, 1472, 1473, 1474, 1476, 1482, 1483, 1484, 1486, 1493, 1495, 1501, 1502, 1504, 1510, 1511, 1512, 1514, 1521, 1523, 1529, 1530, 1532, 1538, 1539, 1540, 1542, 1549, 1551, 1557, 1558, 1560, 1566, 1567, 1568, 1569, 1571, 1572, 1581, 1583, 1589, 1590, 1591, 1593, 1599, 1601, 1602, 1604, 1611, 1613, 1619, 1620, 1622, 1628, 1629, 1630, 1631, 1633, 1634, 1643, 1645, 1651, 1652, 1653, 1655, 1661, 1663, 1664, 1666, 1673, 1675, 1681, 1682, 1684, 1690, 1699, 1710, 1712, 1729, 1730, 1743, 1753, 1756, 1789, 1790, 1795, 1801, 1802, 1809, 1815, 1816, 1821, 1823, 1829, 1834, 1835, 1837, 1841, 1846, 1848, 1854, 1878, 1880, 1882, 1885, 1886, 1887, 1889, 1892, 1896, 1897, 1902, 1903, 1905, 1908, 1909, 1915, 1916, 1917, 1918, 1919], "dictionari": [5, 15, 22, 28, 29, 30, 31, 32, 33, 39, 45, 46, 47, 57, 66, 73, 77, 78, 79, 89, 92, 100, 104, 105, 106, 117, 124, 131, 137, 138, 139, 149, 157, 164, 170, 171, 172, 182, 190, 198, 202, 203, 204, 215, 222, 229, 235, 236, 237, 247, 255, 262, 268, 269, 270, 280, 288, 295, 301, 302, 303, 313, 321, 328, 334, 335, 336, 346, 355, 362, 368, 369, 370, 380, 388, 395, 401, 402, 403, 413, 421, 428, 434, 435, 436, 446, 454, 461, 467, 468, 469, 479, 486, 495, 497, 500, 501, 502, 512, 518, 525, 529, 530, 531, 541, 545, 552, 553, 554, 556, 557, 558, 564, 565, 572, 573, 576, 577, 578, 588, 592, 610, 611, 616, 619, 625, 626, 631, 636, 646, 647, 648, 650, 662, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 743, 744, 745, 746, 747, 749, 751, 753, 756, 757, 758, 759, 760, 763, 767, 768, 769, 771, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 792, 794, 795, 796, 797, 799, 801, 802, 803, 804, 808, 809, 810, 811, 812, 813, 819, 820, 821, 822, 823, 824, 825, 827, 829, 832, 833, 834, 856, 857, 858, 859, 860, 862, 863, 864, 867, 869, 871, 875, 878, 880, 882, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 922, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 946, 947, 957, 958, 960, 972, 976, 985, 986, 996, 997, 999, 1011, 1015, 1023, 1024, 1034, 1035, 1037, 1049, 1053, 1061, 1062, 1072, 1073, 1075, 1087, 1091, 1099, 1100, 1112, 1113, 1115, 1127, 1131, 1140, 1141, 1151, 1152, 1154, 1166, 1170, 1179, 1180, 1190, 1191, 1193, 1205, 1209, 1217, 1218, 1228, 1229, 1231, 1243, 1247, 1255, 1256, 1266, 1267, 1269, 1281, 1285, 1294, 1295, 1298, 1299, 1300, 1310, 1314, 1321, 1323, 1325, 1328, 1329, 1330, 1331, 1342, 1347, 1353, 1355, 1357, 1359, 1362, 1363, 1364, 1365, 1376, 1381, 1387, 1389, 1391, 1393, 1396, 1397, 1398, 1399, 1410, 1415, 1421, 1424, 1425, 1428, 1429, 1430, 1440, 1444, 1451, 1453, 1455, 1458, 1459, 1460, 1461, 1472, 1477, 1485, 1486, 1489, 1490, 1491, 1501, 1505, 1513, 1514, 1517, 1518, 1519, 1529, 1533, 1541, 1542, 1545, 1546, 1547, 1557, 1561, 1568, 1570, 1572, 1575, 1576, 1577, 1578, 1589, 1594, 1600, 1603, 1604, 1607, 1608, 1609, 1619, 1623, 1630, 1632, 1634, 1637, 1638, 1639, 1640, 1651, 1656, 1662, 1665, 1666, 1669, 1670, 1671, 1681, 1685, 1718, 1720, 1721, 1722, 1724, 1725, 1726, 1731, 1732, 1736, 1764, 1766, 1777, 1779, 1784, 1787, 1788, 1793, 1799, 1800, 1805, 1813, 1814, 1819, 1878, 1883, 1884, 1894, 1897, 1898, 1899, 1902, 1903, 1910, 1911, 1915, 1916], "contain": [5, 7, 9, 13, 16, 17, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 47, 48, 50, 51, 56, 57, 67, 68, 79, 80, 82, 83, 88, 89, 93, 94, 99, 106, 107, 109, 110, 116, 117, 125, 126, 139, 140, 142, 143, 148, 149, 158, 159, 172, 173, 175, 176, 181, 182, 191, 192, 204, 205, 207, 208, 214, 215, 223, 224, 237, 238, 240, 241, 246, 247, 256, 257, 270, 271, 273, 274, 279, 280, 289, 290, 303, 304, 306, 307, 312, 313, 322, 323, 336, 337, 339, 340, 345, 346, 348, 356, 357, 370, 371, 373, 374, 379, 380, 382, 389, 390, 403, 404, 406, 407, 412, 413, 415, 422, 423, 436, 437, 439, 440, 445, 446, 448, 455, 456, 469, 470, 472, 473, 478, 479, 487, 488, 492, 493, 502, 503, 505, 506, 511, 512, 519, 520, 531, 532, 534, 535, 540, 541, 542, 546, 547, 551, 552, 558, 559, 561, 564, 566, 578, 579, 581, 582, 587, 588, 593, 594, 600, 603, 605, 619, 624, 640, 644, 646, 648, 651, 652, 658, 659, 662, 663, 664, 665, 666, 667, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 763, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 817, 818, 820, 821, 822, 823, 825, 827, 829, 830, 832, 834, 835, 838, 840, 846, 852, 856, 857, 858, 859, 860, 862, 863, 864, 867, 869, 871, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 922, 926, 927, 929, 930, 931, 933, 934, 935, 936, 937, 938, 940, 941, 949, 950, 952, 953, 954, 955, 956, 960, 962, 964, 965, 971, 972, 977, 978, 988, 989, 991, 992, 993, 994, 995, 999, 1001, 1003, 1004, 1010, 1011, 1016, 1017, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1037, 1039, 1041, 1042, 1048, 1049, 1054, 1055, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1075, 1077, 1079, 1080, 1086, 1087, 1092, 1093, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1115, 1117, 1119, 1120, 1126, 1127, 1132, 1133, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1154, 1156, 1158, 1159, 1165, 1166, 1171, 1172, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1193, 1195, 1197, 1198, 1204, 1205, 1210, 1211, 1215, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1231, 1233, 1235, 1236, 1242, 1243, 1248, 1249, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1269, 1271, 1273, 1274, 1280, 1281, 1286, 1287, 1300, 1301, 1303, 1304, 1309, 1310, 1315, 1316, 1324, 1331, 1333, 1335, 1336, 1341, 1342, 1348, 1349, 1358, 1365, 1367, 1369, 1370, 1375, 1376, 1382, 1383, 1392, 1399, 1401, 1403, 1404, 1409, 1410, 1416, 1417, 1430, 1431, 1433, 1434, 1439, 1440, 1445, 1446, 1454, 1461, 1463, 1465, 1466, 1471, 1472, 1478, 1479, 1491, 1492, 1494, 1495, 1500, 1501, 1506, 1507, 1519, 1520, 1522, 1523, 1528, 1529, 1534, 1535, 1547, 1548, 1550, 1551, 1556, 1557, 1562, 1563, 1571, 1578, 1580, 1582, 1583, 1588, 1589, 1595, 1596, 1609, 1610, 1612, 1613, 1618, 1619, 1624, 1625, 1633, 1640, 1642, 1644, 1645, 1650, 1651, 1657, 1658, 1671, 1672, 1674, 1675, 1680, 1681, 1686, 1687, 1691, 1708, 1711, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1729, 1730, 1731, 1732, 1733, 1749, 1751, 1752, 1755, 1757, 1810, 1822, 1834, 1837, 1870, 1871, 1878, 1888, 1893, 1898, 1902, 1903, 1915, 1916, 1918], "everyth": [5, 7], "pro": 5, "tip": 5, "store": [5, 9, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 59, 72, 98, 130, 151, 163, 184, 196, 228, 249, 261, 282, 294, 315, 327, 348, 361, 382, 394, 415, 427, 448, 460, 481, 493, 494, 524, 542, 552, 553, 570, 571, 589, 634, 635, 637, 643, 647, 651, 661, 662, 746, 806, 829, 880, 932, 943, 945, 959, 961, 973, 982, 984, 998, 1000, 1012, 1021, 1022, 1036, 1038, 1050, 1059, 1060, 1074, 1076, 1088, 1097, 1098, 1114, 1116, 1128, 1137, 1139, 1153, 1155, 1167, 1176, 1178, 1192, 1194, 1206, 1215, 1216, 1230, 1232, 1244, 1253, 1254, 1268, 1270, 1282, 1292, 1293, 1311, 1320, 1322, 1343, 1354, 1356, 1377, 1388, 1390, 1411, 1422, 1423, 1441, 1450, 1452, 1473, 1483, 1484, 1502, 1511, 1512, 1530, 1539, 1540, 1558, 1567, 1569, 1590, 1601, 1602, 1620, 1629, 1631, 1652, 1663, 1664, 1682, 1762, 1769, 1771, 1775, 1834, 1837, 1878], "geo": [5, 7, 14, 745, 796, 822], "rememb": [5, 9], "just": [5, 6, 9, 14, 15, 16, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 456, 488, 520, 547, 566, 594, 966, 978, 1005, 1017, 1043, 1055, 1081, 1093, 1121, 1133, 1160, 1172, 1199, 1211, 1237, 1249, 1275, 1287, 1316, 1321, 1344, 1349, 1355, 1378, 1383, 1389, 1412, 1417, 1446, 1451, 1474, 1479, 1507, 1535, 1563, 1568, 1591, 1596, 1625, 1630, 1653, 1658, 1687, 1736, 1777, 1779, 1898, 1908, 1909, 1910], "mean": [5, 7, 9, 14, 16, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 44, 48, 51, 52, 53, 56, 58, 60, 62, 64, 67, 76, 80, 83, 84, 85, 88, 90, 93, 103, 107, 110, 111, 112, 116, 120, 121, 123, 125, 136, 140, 143, 144, 145, 148, 150, 152, 155, 158, 169, 173, 176, 177, 178, 181, 183, 185, 188, 191, 196, 201, 205, 208, 209, 210, 214, 218, 219, 221, 223, 234, 238, 241, 242, 243, 246, 248, 250, 253, 256, 267, 271, 274, 275, 276, 279, 281, 283, 286, 289, 300, 304, 307, 308, 309, 312, 314, 316, 319, 322, 333, 337, 340, 341, 342, 345, 347, 349, 351, 353, 356, 367, 371, 374, 375, 376, 379, 381, 383, 386, 389, 400, 404, 407, 408, 409, 412, 414, 416, 419, 422, 433, 437, 440, 441, 442, 445, 447, 449, 452, 455, 466, 470, 473, 474, 475, 478, 480, 482, 487, 499, 503, 506, 507, 508, 511, 519, 528, 532, 535, 536, 537, 540, 543, 546, 559, 575, 579, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 623, 651, 662, 666, 740, 744, 746, 747, 748, 792, 795, 797, 798, 820, 821, 827, 831, 845, 846, 853, 926, 951, 952, 955, 956, 962, 965, 966, 967, 968, 971, 977, 990, 991, 994, 995, 1001, 1004, 1005, 1006, 1007, 1010, 1016, 1028, 1029, 1032, 1033, 1039, 1042, 1043, 1044, 1045, 1048, 1054, 1066, 1067, 1070, 1071, 1077, 1080, 1081, 1082, 1083, 1086, 1092, 1104, 1105, 1108, 1109, 1117, 1120, 1121, 1122, 1123, 1126, 1132, 1145, 1146, 1149, 1150, 1156, 1159, 1160, 1161, 1162, 1165, 1171, 1184, 1185, 1188, 1189, 1195, 1198, 1199, 1200, 1201, 1204, 1210, 1222, 1223, 1226, 1227, 1233, 1236, 1237, 1238, 1239, 1242, 1248, 1253, 1260, 1261, 1264, 1265, 1271, 1274, 1275, 1276, 1277, 1280, 1286, 1297, 1301, 1304, 1305, 1306, 1309, 1315, 1327, 1333, 1336, 1337, 1338, 1341, 1348, 1361, 1367, 1370, 1371, 1372, 1375, 1382, 1395, 1401, 1404, 1405, 1406, 1409, 1416, 1427, 1431, 1434, 1435, 1436, 1439, 1445, 1457, 1463, 1466, 1467, 1468, 1471, 1478, 1488, 1492, 1495, 1496, 1497, 1500, 1506, 1516, 1520, 1523, 1524, 1525, 1528, 1534, 1544, 1548, 1551, 1552, 1553, 1556, 1562, 1574, 1580, 1583, 1584, 1585, 1588, 1595, 1606, 1610, 1613, 1614, 1615, 1618, 1624, 1636, 1642, 1645, 1646, 1647, 1650, 1657, 1668, 1672, 1675, 1676, 1677, 1680, 1686, 1745, 1748, 1837], "treat": [5, 22, 219, 221, 598, 1720, 1724, 1725, 1736, 1755], "list": [5, 16, 18, 22, 27, 28, 29, 30, 31, 33, 40, 44, 51, 52, 53, 56, 57, 60, 61, 67, 74, 76, 83, 84, 85, 88, 89, 90, 91, 93, 101, 103, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 132, 136, 143, 144, 145, 148, 149, 152, 153, 158, 165, 169, 176, 177, 178, 181, 182, 185, 186, 191, 196, 199, 201, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 230, 234, 241, 242, 243, 246, 247, 250, 251, 256, 263, 267, 274, 275, 276, 279, 280, 283, 284, 289, 296, 300, 307, 308, 309, 312, 313, 316, 317, 322, 329, 333, 340, 341, 342, 345, 346, 349, 350, 356, 363, 367, 374, 375, 376, 379, 380, 383, 384, 389, 396, 400, 407, 408, 409, 412, 413, 416, 417, 422, 429, 433, 440, 441, 442, 445, 446, 449, 450, 455, 462, 466, 473, 474, 475, 478, 479, 482, 483, 487, 493, 496, 499, 506, 507, 508, 511, 512, 513, 515, 516, 519, 526, 528, 535, 536, 537, 540, 541, 543, 544, 546, 564, 575, 582, 583, 584, 587, 588, 589, 591, 593, 599, 600, 601, 602, 603, 604, 605, 623, 637, 648, 659, 661, 662, 663, 664, 666, 667, 706, 716, 721, 731, 740, 741, 748, 798, 818, 829, 830, 831, 833, 845, 853, 864, 867, 871, 908, 922, 943, 944, 951, 952, 953, 954, 955, 956, 965, 967, 968, 971, 972, 973, 975, 977, 982, 983, 990, 991, 992, 993, 994, 995, 1004, 1006, 1007, 1010, 1011, 1012, 1014, 1016, 1021, 1028, 1029, 1030, 1031, 1032, 1033, 1042, 1044, 1045, 1048, 1049, 1050, 1052, 1054, 1059, 1066, 1067, 1068, 1069, 1070, 1071, 1080, 1082, 1083, 1086, 1087, 1088, 1090, 1092, 1097, 1104, 1105, 1106, 1107, 1108, 1109, 1120, 1122, 1123, 1126, 1127, 1128, 1130, 1132, 1137, 1138, 1145, 1146, 1147, 1148, 1149, 1150, 1159, 1161, 1162, 1165, 1166, 1167, 1169, 1171, 1176, 1177, 1184, 1185, 1186, 1187, 1188, 1189, 1198, 1200, 1201, 1204, 1205, 1206, 1208, 1210, 1215, 1222, 1223, 1224, 1225, 1226, 1227, 1236, 1238, 1239, 1242, 1243, 1244, 1246, 1248, 1253, 1260, 1261, 1262, 1263, 1264, 1265, 1274, 1276, 1277, 1280, 1281, 1282, 1284, 1286, 1297, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1315, 1324, 1327, 1336, 1337, 1338, 1341, 1342, 1343, 1346, 1348, 1358, 1361, 1370, 1371, 1372, 1375, 1376, 1377, 1380, 1382, 1392, 1395, 1404, 1405, 1406, 1409, 1410, 1411, 1414, 1416, 1427, 1434, 1435, 1436, 1439, 1440, 1441, 1443, 1445, 1450, 1454, 1457, 1466, 1467, 1468, 1471, 1472, 1473, 1476, 1478, 1488, 1495, 1496, 1497, 1500, 1501, 1502, 1504, 1506, 1516, 1523, 1524, 1525, 1528, 1529, 1530, 1532, 1534, 1544, 1551, 1552, 1553, 1556, 1557, 1558, 1560, 1562, 1571, 1574, 1583, 1584, 1585, 1588, 1589, 1590, 1593, 1595, 1606, 1613, 1614, 1615, 1618, 1619, 1620, 1622, 1624, 1633, 1636, 1645, 1646, 1647, 1650, 1651, 1652, 1655, 1657, 1668, 1675, 1676, 1677, 1680, 1681, 1682, 1684, 1686, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1726, 1728, 1735, 1736, 1743, 1744, 1745, 1746, 1749, 1750, 1773, 1784, 1822, 1823, 1824, 1825, 1827, 1830, 1833, 1834, 1835, 1836, 1837, 1839, 1842, 1845, 1847, 1848, 1849, 1850, 1852, 1855, 1858, 1859, 1878, 1882, 1889, 1897, 1898, 1900, 1902, 1903, 1908, 1909, 1915, 1916, 1917, 1919], "quickli": [5, 9, 20, 25, 26], "view": [5, 7, 16, 17, 27, 31, 49, 71, 81, 97, 108, 129, 141, 162, 174, 195, 206, 227, 239, 260, 272, 293, 305, 326, 338, 360, 372, 393, 405, 426, 438, 459, 471, 491, 504, 523, 533, 550, 560, 569, 580, 597, 612, 613, 618, 627, 628, 633, 660, 963, 981, 1002, 1020, 1040, 1058, 1078, 1096, 1118, 1136, 1157, 1175, 1196, 1214, 1234, 1252, 1272, 1290, 1302, 1319, 1334, 1352, 1368, 1386, 1402, 1420, 1432, 1449, 1464, 1482, 1493, 1510, 1521, 1538, 1549, 1566, 1567, 1581, 1599, 1611, 1628, 1629, 1643, 1661, 1673, 1690, 1789, 1790, 1795, 1801, 1802, 1809, 1815, 1816, 1821, 1834, 1885, 1886, 1896], "alreadi": [5, 9, 12, 15, 28, 30, 31, 32, 33, 60, 64, 90, 120, 121, 123, 152, 155, 185, 188, 218, 219, 221, 250, 253, 283, 286, 316, 319, 349, 353, 383, 386, 416, 419, 449, 452, 482, 543, 746, 944, 959, 961, 983, 998, 1000, 1036, 1038, 1074, 1076, 1114, 1116, 1137, 1138, 1153, 1155, 1177, 1192, 1194, 1230, 1232, 1268, 1270, 1721, 1861], "dict_kei": [5, 25, 31, 32], "max_siz": [5, 7, 14, 18, 27, 29, 32, 671, 672, 673, 674, 675, 676, 677], "diamet": [5, 7, 8, 9, 10, 14, 15, 18, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 494, 514, 571, 589, 590, 635, 637, 638, 648, 671, 672, 673, 674, 675, 676, 677, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 743, 746, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 767, 768, 769, 771, 773, 774, 775, 776, 777, 778, 782, 783, 784, 785, 787, 788, 789, 794, 795, 801, 802, 808, 809, 811, 812, 813, 907, 908, 911, 922, 923, 924, 945, 973, 974, 984, 1012, 1013, 1022, 1050, 1051, 1060, 1088, 1089, 1098, 1128, 1129, 1139, 1167, 1168, 1178, 1206, 1207, 1216, 1244, 1245, 1254, 1282, 1283, 1293, 1311, 1312, 1322, 1343, 1345, 1356, 1377, 1379, 1390, 1411, 1413, 1423, 1441, 1442, 1452, 1473, 1475, 1484, 1502, 1503, 1512, 1530, 1531, 1540, 1558, 1559, 1569, 1590, 1592, 1602, 1620, 1621, 1631, 1652, 1654, 1664, 1682, 1683, 1916], "volum": [5, 7, 9, 11, 12, 14, 18, 21, 27, 29, 30, 32, 33, 589, 637, 647, 671, 672, 673, 674, 675, 676, 677, 694, 696, 743, 756, 757, 758, 759, 760, 808, 809, 810, 811, 812, 813, 857, 858, 864, 927, 973, 1012, 1050, 1088, 1128, 1167, 1206, 1244, 1282, 1311, 1343, 1377, 1411, 1441, 1473, 1502, 1530, 1558, 1590, 1620, 1652, 1682], "cross_sectional_area": [5, 6, 7, 14, 18, 27, 29, 32, 671, 672, 673, 674, 675, 676, 677, 751, 752, 753, 754, 762, 763, 794, 810, 913, 920], "total_volum": [5, 7, 9, 10, 14, 18, 27, 29, 32, 675], "lens_volum": [5, 7, 9, 14, 18, 27, 29, 32, 675], "diffusive_size_factor": [5, 7, 14, 18, 23, 27, 29, 32, 551, 671, 672, 673, 674, 675, 676, 677, 910, 911, 912, 913, 915, 916, 940, 941], "return": [5, 6, 9, 11, 12, 15, 17, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 38, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 66, 67, 68, 69, 72, 76, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 124, 125, 126, 127, 130, 136, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 157, 158, 159, 160, 163, 169, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 196, 197, 201, 203, 204, 205, 207, 208, 209, 210, 213, 214, 215, 222, 223, 224, 225, 228, 234, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 255, 256, 257, 258, 261, 267, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 282, 288, 289, 290, 291, 294, 300, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 321, 322, 323, 324, 327, 333, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 355, 356, 357, 358, 361, 367, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 388, 389, 390, 391, 394, 400, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 415, 421, 422, 423, 424, 427, 433, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 454, 455, 456, 457, 460, 466, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 486, 487, 488, 489, 494, 499, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 517, 518, 519, 520, 521, 524, 528, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 545, 546, 547, 548, 551, 557, 558, 559, 561, 563, 564, 565, 566, 567, 571, 575, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 592, 593, 594, 595, 599, 600, 601, 602, 603, 605, 606, 611, 614, 615, 616, 622, 623, 626, 629, 630, 631, 635, 643, 646, 647, 648, 650, 651, 655, 662, 663, 664, 700, 715, 730, 737, 740, 741, 743, 744, 745, 746, 748, 749, 753, 759, 765, 771, 783, 788, 792, 794, 795, 796, 798, 799, 802, 806, 809, 817, 820, 821, 822, 823, 825, 826, 829, 830, 831, 832, 834, 838, 840, 845, 846, 857, 859, 863, 871, 874, 876, 877, 878, 880, 882, 883, 884, 890, 891, 897, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 916, 918, 919, 920, 922, 926, 927, 929, 930, 931, 933, 934, 935, 936, 937, 938, 940, 941, 943, 945, 949, 950, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 970, 971, 972, 976, 977, 978, 979, 982, 984, 988, 989, 990, 991, 992, 993, 994, 995, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1015, 1016, 1017, 1018, 1021, 1022, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1059, 1060, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1091, 1092, 1093, 1094, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1131, 1132, 1133, 1134, 1137, 1139, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1176, 1178, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1209, 1210, 1211, 1212, 1215, 1216, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1253, 1254, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1293, 1297, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1314, 1315, 1316, 1317, 1322, 1324, 1327, 1329, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1347, 1348, 1349, 1350, 1353, 1356, 1358, 1361, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1381, 1382, 1383, 1384, 1387, 1390, 1392, 1395, 1397, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1415, 1416, 1417, 1418, 1421, 1423, 1427, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1444, 1445, 1446, 1447, 1452, 1454, 1457, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1477, 1478, 1479, 1480, 1484, 1488, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1505, 1506, 1507, 1508, 1512, 1516, 1518, 1519, 1520, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1533, 1534, 1535, 1536, 1540, 1544, 1546, 1547, 1548, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1561, 1562, 1563, 1564, 1569, 1571, 1574, 1576, 1577, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1594, 1595, 1596, 1597, 1600, 1602, 1606, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1623, 1624, 1625, 1626, 1631, 1633, 1636, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1656, 1657, 1658, 1659, 1662, 1664, 1668, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1685, 1686, 1687, 1688, 1699, 1710, 1711, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1755, 1756, 1769, 1771, 1773, 1775, 1779, 1782, 1784, 1788, 1791, 1792, 1793, 1800, 1803, 1804, 1805, 1814, 1817, 1818, 1819, 1825, 1826, 1828, 1830, 1833, 1837, 1838, 1840, 1842, 1845, 1850, 1851, 1853, 1855, 1858, 1863, 1864, 1867, 1869, 1872, 1874, 1876, 1882, 1884, 1889, 1890, 1891, 1894, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1911, 1914, 1915, 1916, 1918, 1919], "argument": [5, 15, 25, 26, 27, 28, 31, 39, 56, 61, 64, 67, 73, 88, 91, 93, 100, 116, 122, 125, 131, 148, 153, 155, 158, 164, 181, 186, 188, 191, 198, 214, 220, 223, 229, 246, 251, 253, 256, 262, 279, 284, 286, 289, 295, 312, 317, 319, 322, 328, 345, 350, 353, 356, 362, 379, 384, 386, 389, 395, 412, 417, 419, 422, 428, 445, 450, 452, 455, 461, 478, 483, 487, 494, 497, 511, 515, 516, 519, 525, 540, 544, 546, 554, 571, 573, 587, 591, 593, 603, 604, 605, 635, 643, 647, 662, 745, 796, 822, 823, 830, 853, 905, 932, 945, 947, 949, 950, 954, 966, 971, 975, 977, 984, 986, 988, 989, 993, 1005, 1010, 1014, 1016, 1021, 1022, 1024, 1026, 1027, 1031, 1043, 1048, 1052, 1054, 1060, 1062, 1064, 1065, 1069, 1081, 1086, 1090, 1092, 1098, 1100, 1102, 1103, 1107, 1121, 1126, 1130, 1132, 1139, 1141, 1143, 1144, 1148, 1160, 1165, 1169, 1171, 1178, 1180, 1182, 1183, 1187, 1199, 1204, 1208, 1210, 1216, 1218, 1220, 1221, 1225, 1237, 1242, 1246, 1248, 1254, 1256, 1258, 1259, 1263, 1275, 1280, 1284, 1286, 1293, 1295, 1309, 1313, 1315, 1322, 1325, 1341, 1346, 1348, 1356, 1359, 1375, 1380, 1382, 1390, 1393, 1409, 1414, 1416, 1423, 1425, 1439, 1443, 1445, 1452, 1455, 1471, 1476, 1478, 1484, 1486, 1500, 1504, 1506, 1512, 1514, 1528, 1532, 1534, 1540, 1542, 1556, 1560, 1562, 1569, 1572, 1588, 1593, 1595, 1602, 1604, 1618, 1622, 1624, 1631, 1634, 1650, 1655, 1657, 1664, 1666, 1680, 1684, 1686, 1719, 1736, 1748, 1762, 1779, 1834, 1915, 1916], "misc": [5, 9, 29, 31, 823], "_basic_math": 5, "product": [5, 29, 671, 672, 673, 674, 675, 676, 677], "target": [5, 6, 606, 619, 744, 745, 747, 749, 792, 795, 796, 797, 799, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 832, 833, 834, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 922, 926, 927, 938, 940, 941, 1745], "prop": [5, 9, 27, 29, 31, 39, 50, 51, 73, 82, 83, 100, 109, 110, 131, 142, 143, 164, 175, 176, 198, 207, 208, 229, 240, 241, 262, 273, 274, 295, 306, 307, 328, 339, 340, 362, 373, 374, 395, 406, 407, 428, 439, 440, 461, 472, 473, 497, 505, 506, 525, 534, 535, 554, 561, 573, 581, 582, 600, 671, 672, 673, 674, 675, 676, 677, 680, 683, 744, 791, 792, 795, 816, 818, 820, 821, 823, 824, 825, 828, 829, 830, 832, 833, 871, 874, 875, 900, 947, 964, 965, 986, 1003, 1004, 1024, 1041, 1042, 1062, 1079, 1080, 1100, 1119, 1120, 1141, 1158, 1159, 1180, 1197, 1198, 1215, 1218, 1235, 1236, 1256, 1273, 1274, 1295, 1303, 1304, 1325, 1335, 1336, 1359, 1369, 1370, 1393, 1403, 1404, 1425, 1433, 1434, 1455, 1465, 1466, 1486, 1494, 1495, 1514, 1522, 1523, 1542, 1550, 1551, 1572, 1582, 1583, 1604, 1612, 1613, 1634, 1644, 1645, 1666, 1674, 1675], "final": [5, 15, 20, 23, 25, 32, 33, 34, 1097, 1699, 1766, 1779, 1918], "forget": [5, 20], "els": [5, 29, 46, 66, 78, 92, 105, 124, 138, 157, 171, 190, 197, 203, 222, 236, 255, 269, 288, 302, 321, 335, 355, 369, 388, 402, 421, 435, 454, 468, 486, 501, 518, 530, 545, 557, 565, 577, 592, 611, 616, 626, 631, 958, 976, 997, 1015, 1035, 1053, 1073, 1091, 1113, 1131, 1152, 1170, 1191, 1209, 1229, 1247, 1267, 1285, 1299, 1314, 1329, 1347, 1363, 1381, 1397, 1415, 1429, 1444, 1459, 1477, 1490, 1505, 1518, 1533, 1546, 1561, 1576, 1594, 1608, 1623, 1638, 1656, 1670, 1685, 1784, 1788, 1793, 1800, 1805, 1814, 1819, 1884, 1894], "appear": [5, 17, 22, 27, 29, 31, 1773, 1775, 1915, 1916], "been": [5, 6, 7, 9, 12, 13, 18, 20, 25, 27, 28, 29, 30, 31, 32, 33, 44, 64, 76, 103, 136, 155, 169, 188, 201, 234, 253, 267, 286, 300, 319, 333, 353, 367, 386, 400, 419, 433, 452, 466, 499, 528, 575, 599, 746, 920, 951, 990, 1028, 1066, 1104, 1145, 1184, 1222, 1260, 1297, 1327, 1361, 1395, 1427, 1457, 1488, 1516, 1544, 1574, 1606, 1636, 1668, 1720], "net": [5, 7, 9, 14, 17, 18, 20, 22, 23, 26, 28, 29, 30, 32, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 929, 930, 1916], "0x7f67083f02c0": 5, "valid": [5, 7, 9, 14, 18, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 456, 488, 520, 547, 566, 594, 860, 878, 884, 891, 895, 902, 978, 1017, 1055, 1093, 1133, 1172, 1211, 1249, 1287, 1316, 1349, 1383, 1417, 1446, 1479, 1507, 1535, 1563, 1596, 1625, 1658, 1687, 1907, 1914], "coord": [5, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 461, 497, 525, 554, 573, 648, 693, 694, 695, 696, 697, 698, 707, 708, 709, 710, 711, 712, 722, 723, 724, 725, 726, 727, 776, 777, 778, 779, 780, 781, 943, 947, 982, 986, 1021, 1024, 1059, 1062, 1097, 1100, 1137, 1141, 1176, 1180, 1215, 1218, 1253, 1256, 1295, 1325, 1359, 1393, 1425, 1455, 1486, 1514, 1542, 1572, 1604, 1634, 1666, 1717, 1735, 1747, 1748], "625": [5, 33], "3": [5, 6, 7, 9, 10, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 47, 79, 99, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 494, 502, 531, 558, 571, 578, 635, 647, 648, 680, 683, 700, 715, 730, 745, 771, 796, 806, 822, 858, 859, 863, 891, 893, 927, 929, 930, 931, 932, 934, 935, 936, 937, 945, 954, 955, 960, 966, 984, 993, 994, 999, 1005, 1022, 1031, 1032, 1037, 1043, 1060, 1069, 1070, 1075, 1081, 1097, 1098, 1107, 1108, 1115, 1121, 1139, 1148, 1149, 1154, 1160, 1178, 1187, 1188, 1193, 1199, 1215, 1216, 1225, 1226, 1231, 1237, 1254, 1263, 1264, 1269, 1275, 1293, 1300, 1322, 1331, 1356, 1365, 1390, 1399, 1423, 1430, 1452, 1461, 1484, 1491, 1512, 1519, 1540, 1547, 1569, 1578, 1602, 1609, 1631, 1640, 1664, 1671, 1709, 1713, 1715, 1717, 1727, 1733, 1735, 1747, 1748, 1760, 1761, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1777, 1778, 1780, 1781, 1782, 1783, 1822, 1915, 1916], "conn": [5, 6, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 33, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 461, 497, 525, 554, 573, 648, 806, 943, 947, 982, 986, 1021, 1024, 1059, 1062, 1097, 1100, 1137, 1141, 1176, 1180, 1215, 1218, 1253, 1256, 1295, 1325, 1359, 1393, 1425, 1455, 1486, 1514, 1542, 1572, 1604, 1634, 1666, 1711, 1714, 1717, 1737, 1749], "1200": [5, 33], "4": [5, 6, 7, 9, 10, 14, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 648, 651, 920, 931, 934, 935, 936, 954, 966, 993, 1005, 1031, 1043, 1069, 1081, 1107, 1121, 1148, 1160, 1187, 1199, 1215, 1225, 1237, 1263, 1275, 1761, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1783], "coordination_numb": [5, 7, 14, 15, 18, 27, 29, 30, 32], "7": [5, 6, 7, 9, 14, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 659, 671, 672, 673, 674, 675, 676, 677, 680, 920, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1713], "8": [5, 7, 9, 14, 15, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 513, 730, 860, 880, 891, 929, 930], "9": [5, 6, 7, 8, 9, 11, 14, 15, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 680, 683, 740, 748, 798, 831, 924, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1713], "11": [5, 7, 8, 9, 14, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 680], "13": [5, 7, 9, 14, 18, 23, 26, 27, 28, 29, 30, 32, 33], "14": [5, 7, 9, 14, 18, 23, 26, 27, 28, 29, 30, 32, 33, 680, 982], "16": [5, 7, 9, 14, 18, 23, 26, 27, 29, 30, 32, 33, 680], "18": [5, 7, 8, 9, 14, 18, 23, 26, 27, 29, 30, 32, 33, 35, 863, 982], "xmin": [5, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 816, 828, 922], "xmax": [5, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 816, 828, 922], "ymin": [5, 7, 9, 14, 18, 22, 26, 28, 29, 30, 32], "ymax": [5, 7, 9, 14, 18, 22, 26, 28, 29, 30, 32], "surfac": [5, 7, 9, 11, 12, 14, 18, 22, 26, 27, 28, 30, 32, 33, 34, 659, 751, 752, 753, 754, 763, 794, 801, 802, 803, 804, 810, 864, 882, 883, 884, 907, 908, 922, 1059, 1253, 1709, 1727, 1728, 1742, 1746], "96": [5, 26, 33], "front": [5, 6, 7, 9, 14, 18, 22, 26, 28, 29, 30, 32, 983, 1138], "back": [5, 6, 7, 9, 14, 18, 22, 26, 27, 28, 29, 30, 32, 741, 743, 794, 817, 922, 983, 1138], "hist": [5, 9, 14, 29, 745, 747, 749, 796, 797, 799, 822, 827, 834], "ax1": 5, "ax2": 5, "subplot": [5, 6, 7, 8, 9, 14, 18, 28, 29, 30, 1915, 1916], "figsiz": [5, 7, 8, 11, 12, 18, 28, 29, 30, 624], "bin": [5, 9, 745, 747, 749, 796, 797, 799, 822, 827, 834], "edgecolor": [5, 9, 14, 18, 29], "set_titl": 5, "two": [5, 9, 10, 11, 14, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 36, 99, 515, 647, 648, 664, 694, 696, 740, 748, 798, 819, 831, 840, 845, 846, 920, 929, 930, 952, 955, 956, 966, 991, 994, 995, 1005, 1029, 1032, 1033, 1043, 1067, 1070, 1071, 1081, 1097, 1105, 1108, 1109, 1121, 1146, 1149, 1150, 1160, 1185, 1188, 1189, 1199, 1215, 1223, 1226, 1227, 1237, 1261, 1264, 1265, 1275, 1713, 1720, 1722, 1724, 1725, 1737, 1749, 1757, 1775, 1777, 1779, 1833, 1845, 1858, 1864, 1867, 1869, 1874], "approach": [5, 9, 17, 28, 29, 30, 33, 36, 741, 857, 907, 908, 923], "first": [5, 6, 7, 9, 11, 12, 14, 16, 17, 18, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 36, 55, 87, 115, 130, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 510, 513, 539, 563, 586, 615, 630, 818, 864, 949, 970, 988, 1009, 1026, 1047, 1064, 1085, 1102, 1125, 1143, 1164, 1182, 1203, 1220, 1241, 1258, 1279, 1308, 1340, 1374, 1408, 1438, 1470, 1499, 1527, 1555, 1587, 1617, 1649, 1679, 1713, 1722, 1745, 1792, 1804, 1818, 1828, 1831, 1840, 1843, 1853, 1856, 1891], "most": [5, 7, 10, 15, 18, 25, 28, 31, 32, 33, 196, 853, 908, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "simpl": [5, 7, 9, 23, 25, 26, 27, 28, 30, 31, 32, 943, 982, 1021, 1176, 1810, 1822], "straight": [5, 805, 806], "forward": 5, "modul": [5, 10, 22, 26, 27, 29, 32, 37, 348, 382, 415, 448, 492, 542, 552, 640, 644, 668, 669, 670, 678, 679, 681, 682, 685, 688, 689, 703, 718, 733, 739, 742, 747, 749, 750, 755, 761, 764, 766, 770, 772, 786, 790, 793, 797, 799, 800, 805, 807, 814, 827, 834, 835, 852, 854, 855, 861, 865, 870, 873, 879, 881, 885, 892, 896, 903, 904, 906, 909, 914, 917, 921, 925, 928, 939, 942, 1291, 1691, 1708, 1726, 1753, 1756, 1757, 1912], "second": [5, 7, 9, 18, 22, 23, 25, 31, 650, 1713, 1722, 1750, 1777, 1779], "latter": [5, 745, 796, 822, 929, 930, 1720], "recommend": [5, 29, 30, 36, 647, 1744], "let": [5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 650], "fetch": [5, 9, 16, 27, 29, 31, 32, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 502, 531, 558, 578, 853, 874, 960, 999, 1037, 1075, 1115, 1154, 1193, 1231, 1269, 1300, 1330, 1331, 1332, 1364, 1365, 1366, 1398, 1399, 1400, 1430, 1460, 1461, 1462, 1491, 1519, 1547, 1577, 1578, 1579, 1609, 1639, 1640, 1641, 1671], "statist": [5, 9, 15, 29], "case": [5, 9, 10, 17, 20, 23, 28, 30, 31, 32, 33, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 458, 490, 522, 542, 549, 568, 596, 617, 623, 632, 745, 746, 796, 822, 853, 929, 930, 980, 1019, 1057, 1095, 1135, 1174, 1213, 1251, 1289, 1318, 1351, 1385, 1419, 1448, 1481, 1509, 1537, 1565, 1598, 1627, 1660, 1689, 1713, 1720, 1744, 1794, 1808, 1820, 1834, 1895], "weibull_min": [5, 9, 29, 745, 749, 796, 799, 822, 834], "genert": 5, "number": [5, 9, 13, 15, 18, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 52, 53, 72, 84, 85, 98, 111, 112, 119, 130, 144, 145, 163, 177, 178, 196, 209, 210, 217, 228, 242, 243, 261, 275, 276, 294, 308, 309, 327, 341, 342, 361, 375, 376, 394, 408, 409, 427, 441, 442, 460, 474, 475, 493, 507, 508, 524, 536, 537, 553, 570, 583, 584, 601, 602, 648, 713, 728, 740, 741, 743, 746, 747, 748, 749, 797, 798, 799, 814, 826, 827, 831, 834, 837, 838, 839, 840, 922, 929, 930, 943, 952, 966, 967, 968, 982, 991, 1005, 1006, 1007, 1021, 1029, 1043, 1044, 1045, 1059, 1067, 1081, 1082, 1083, 1097, 1105, 1121, 1122, 1123, 1137, 1146, 1160, 1161, 1162, 1176, 1185, 1199, 1200, 1201, 1215, 1223, 1237, 1238, 1239, 1253, 1261, 1275, 1276, 1277, 1292, 1305, 1306, 1320, 1337, 1338, 1354, 1371, 1372, 1388, 1405, 1406, 1422, 1435, 1436, 1450, 1467, 1468, 1483, 1496, 1497, 1511, 1524, 1525, 1539, 1552, 1553, 1567, 1584, 1585, 1601, 1614, 1615, 1629, 1646, 1647, 1663, 1676, 1677, 1698, 1711, 1714, 1717, 1718, 1719, 1721, 1728, 1737, 1745, 1749, 1751, 1752, 1755, 1757, 1779, 1782, 1826, 1838, 1851, 1898, 1913, 1914], "rv": [5, 9, 29], "arrai": [5, 18, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 47, 48, 50, 56, 59, 60, 61, 67, 68, 69, 79, 80, 82, 88, 90, 91, 93, 94, 95, 106, 107, 109, 116, 119, 120, 122, 125, 126, 127, 139, 140, 142, 148, 151, 152, 153, 158, 159, 160, 172, 173, 175, 181, 184, 185, 186, 191, 192, 193, 197, 204, 205, 207, 214, 218, 220, 223, 224, 225, 237, 238, 240, 246, 249, 250, 251, 256, 257, 258, 270, 271, 273, 279, 282, 283, 284, 289, 290, 291, 303, 304, 306, 312, 315, 316, 317, 322, 323, 324, 336, 337, 339, 345, 348, 349, 350, 356, 357, 358, 370, 371, 373, 379, 382, 383, 384, 389, 390, 391, 403, 404, 406, 412, 415, 416, 417, 422, 423, 424, 436, 437, 439, 445, 448, 449, 450, 455, 456, 457, 469, 470, 472, 478, 481, 482, 483, 487, 488, 489, 494, 502, 503, 505, 511, 516, 519, 520, 521, 531, 532, 534, 540, 542, 543, 544, 546, 547, 548, 558, 559, 561, 566, 567, 571, 578, 579, 581, 587, 591, 593, 594, 595, 598, 603, 604, 605, 635, 643, 662, 666, 700, 715, 730, 740, 741, 744, 745, 746, 747, 748, 749, 771, 792, 795, 796, 797, 798, 799, 806, 814, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 838, 840, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 945, 949, 950, 952, 954, 955, 956, 960, 962, 964, 966, 971, 975, 977, 978, 979, 984, 988, 989, 991, 993, 994, 995, 999, 1001, 1003, 1005, 1010, 1014, 1016, 1017, 1018, 1021, 1022, 1026, 1027, 1029, 1031, 1032, 1033, 1037, 1039, 1041, 1043, 1048, 1052, 1054, 1055, 1056, 1059, 1060, 1064, 1065, 1067, 1069, 1070, 1071, 1075, 1077, 1079, 1081, 1086, 1090, 1092, 1093, 1094, 1097, 1098, 1102, 1103, 1105, 1107, 1108, 1109, 1115, 1117, 1119, 1121, 1126, 1130, 1132, 1133, 1134, 1139, 1143, 1144, 1146, 1148, 1149, 1150, 1154, 1156, 1158, 1160, 1165, 1169, 1171, 1172, 1173, 1178, 1182, 1183, 1185, 1187, 1188, 1189, 1193, 1195, 1197, 1199, 1204, 1208, 1210, 1211, 1212, 1215, 1216, 1220, 1221, 1223, 1225, 1226, 1227, 1231, 1233, 1235, 1237, 1242, 1246, 1248, 1249, 1250, 1253, 1254, 1258, 1259, 1261, 1263, 1264, 1265, 1269, 1271, 1273, 1275, 1280, 1284, 1286, 1287, 1288, 1293, 1300, 1301, 1303, 1309, 1313, 1315, 1316, 1317, 1322, 1331, 1333, 1335, 1341, 1346, 1348, 1349, 1350, 1356, 1365, 1367, 1369, 1375, 1380, 1382, 1383, 1384, 1390, 1399, 1401, 1403, 1409, 1414, 1416, 1417, 1418, 1423, 1430, 1431, 1433, 1439, 1443, 1445, 1446, 1447, 1452, 1461, 1463, 1465, 1471, 1476, 1478, 1479, 1480, 1484, 1491, 1492, 1494, 1500, 1504, 1506, 1507, 1508, 1512, 1519, 1520, 1522, 1528, 1532, 1534, 1535, 1536, 1540, 1547, 1548, 1550, 1556, 1560, 1562, 1563, 1564, 1569, 1578, 1580, 1582, 1588, 1593, 1595, 1596, 1597, 1602, 1609, 1610, 1612, 1618, 1622, 1624, 1625, 1626, 1631, 1640, 1642, 1644, 1650, 1655, 1657, 1658, 1659, 1664, 1671, 1672, 1674, 1680, 1684, 1686, 1687, 1688, 1699, 1709, 1711, 1714, 1715, 1716, 1717, 1719, 1720, 1723, 1724, 1725, 1726, 1727, 1728, 1731, 1732, 1733, 1736, 1737, 1745, 1746, 1749, 1751, 1752, 1755, 1810, 1897, 1899, 1902, 1903, 1904, 1911, 1915, 1916, 1918], "put": [5, 15, 28, 29, 197, 552, 664, 1747], "one": [5, 8, 9, 15, 17, 18, 23, 25, 27, 28, 29, 30, 31, 32, 33, 44, 51, 52, 53, 56, 60, 67, 76, 83, 84, 85, 88, 90, 93, 103, 110, 111, 112, 116, 120, 125, 136, 143, 144, 145, 148, 152, 158, 169, 176, 177, 178, 181, 185, 191, 201, 208, 209, 210, 214, 218, 223, 234, 241, 242, 243, 246, 250, 256, 267, 274, 275, 276, 279, 283, 289, 300, 307, 308, 309, 312, 316, 322, 333, 340, 341, 342, 345, 349, 356, 367, 374, 375, 376, 379, 383, 389, 400, 407, 408, 409, 412, 416, 422, 433, 440, 441, 442, 445, 449, 455, 466, 473, 474, 475, 478, 482, 487, 499, 506, 507, 508, 511, 519, 528, 535, 536, 537, 540, 543, 546, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 623, 651, 664, 809, 846, 863, 943, 951, 952, 955, 956, 959, 961, 965, 966, 967, 968, 971, 977, 982, 990, 991, 994, 995, 998, 1000, 1004, 1005, 1006, 1007, 1010, 1016, 1021, 1028, 1029, 1032, 1033, 1036, 1038, 1042, 1043, 1044, 1045, 1048, 1054, 1059, 1066, 1067, 1070, 1071, 1074, 1076, 1080, 1081, 1082, 1083, 1086, 1092, 1097, 1104, 1105, 1108, 1109, 1114, 1116, 1120, 1121, 1122, 1123, 1126, 1132, 1137, 1145, 1146, 1149, 1150, 1153, 1155, 1159, 1160, 1161, 1162, 1165, 1171, 1176, 1184, 1185, 1188, 1189, 1192, 1194, 1198, 1199, 1200, 1201, 1204, 1210, 1215, 1222, 1223, 1226, 1227, 1230, 1232, 1236, 1237, 1238, 1239, 1242, 1248, 1253, 1260, 1261, 1264, 1265, 1268, 1270, 1274, 1275, 1276, 1277, 1280, 1286, 1297, 1304, 1305, 1306, 1309, 1315, 1327, 1336, 1337, 1338, 1341, 1348, 1361, 1370, 1371, 1372, 1375, 1382, 1395, 1404, 1405, 1406, 1409, 1416, 1427, 1434, 1435, 1436, 1439, 1445, 1457, 1466, 1467, 1468, 1471, 1478, 1488, 1495, 1496, 1497, 1500, 1506, 1511, 1516, 1523, 1524, 1525, 1528, 1534, 1544, 1551, 1552, 1553, 1556, 1562, 1574, 1583, 1584, 1585, 1588, 1595, 1606, 1613, 1614, 1615, 1618, 1624, 1636, 1645, 1646, 1647, 1650, 1657, 1668, 1675, 1676, 1677, 1680, 1686, 1711, 1714, 1720, 1724, 1725, 1727, 1743, 1748, 1749, 1750, 1784, 1834, 1874, 1878, 1882, 1889, 1893, 1915], "c": [5, 6, 7, 9, 25, 26, 28, 29, 33, 36, 745, 749, 796, 799, 818, 822, 834, 863, 927, 929, 930, 932, 1747, 1748, 1777, 1779, 1887, 1892], "loc": [5, 9, 14, 29, 30, 745, 747, 749, 796, 797, 799, 822, 827, 834], "random_st": 5, "none": [5, 15, 27, 29, 30, 32, 39, 44, 45, 46, 50, 51, 52, 53, 56, 59, 60, 61, 63, 65, 66, 67, 69, 70, 73, 76, 77, 78, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 100, 103, 104, 105, 109, 110, 111, 112, 113, 116, 120, 122, 124, 125, 127, 128, 131, 136, 137, 138, 142, 143, 144, 145, 148, 151, 152, 153, 154, 156, 157, 158, 160, 161, 164, 169, 170, 171, 175, 176, 177, 178, 181, 184, 185, 186, 187, 189, 190, 191, 193, 194, 198, 201, 202, 203, 207, 208, 209, 210, 214, 218, 219, 220, 221, 222, 223, 225, 226, 229, 234, 235, 236, 240, 241, 242, 243, 246, 249, 250, 251, 252, 254, 255, 256, 258, 259, 262, 267, 268, 269, 273, 274, 275, 276, 279, 282, 283, 284, 285, 287, 288, 289, 291, 292, 295, 300, 301, 302, 306, 307, 308, 309, 312, 315, 316, 317, 318, 320, 321, 322, 324, 325, 328, 333, 334, 335, 339, 340, 341, 342, 345, 348, 349, 350, 352, 354, 355, 356, 358, 359, 362, 367, 368, 369, 373, 374, 375, 376, 379, 382, 383, 384, 385, 387, 388, 389, 391, 392, 395, 400, 401, 402, 406, 407, 408, 409, 412, 415, 416, 417, 418, 420, 421, 422, 424, 425, 428, 433, 434, 435, 439, 440, 441, 442, 445, 448, 449, 450, 451, 453, 454, 455, 457, 458, 461, 466, 467, 468, 472, 473, 474, 475, 478, 481, 482, 483, 484, 485, 486, 487, 489, 490, 497, 499, 500, 501, 505, 506, 507, 508, 511, 513, 514, 516, 518, 519, 521, 522, 525, 528, 529, 530, 534, 535, 536, 537, 540, 542, 543, 544, 545, 546, 548, 549, 554, 556, 557, 561, 565, 567, 568, 573, 575, 576, 577, 581, 582, 583, 584, 587, 589, 590, 591, 592, 593, 595, 596, 599, 600, 601, 602, 603, 604, 605, 608, 610, 611, 616, 617, 620, 624, 625, 626, 631, 632, 637, 638, 642, 652, 658, 659, 662, 663, 666, 667, 671, 672, 673, 674, 675, 676, 677, 740, 741, 748, 792, 798, 827, 831, 838, 922, 923, 924, 947, 949, 950, 951, 953, 957, 958, 964, 965, 967, 968, 971, 973, 974, 975, 976, 977, 979, 980, 983, 986, 988, 989, 990, 992, 996, 997, 1003, 1004, 1006, 1007, 1010, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1024, 1026, 1027, 1028, 1030, 1034, 1035, 1041, 1042, 1044, 1045, 1048, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1062, 1064, 1065, 1066, 1068, 1072, 1073, 1079, 1080, 1082, 1083, 1086, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1100, 1102, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1119, 1120, 1122, 1123, 1126, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1138, 1141, 1143, 1144, 1145, 1147, 1151, 1152, 1158, 1159, 1161, 1162, 1165, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1180, 1182, 1183, 1184, 1186, 1190, 1191, 1197, 1198, 1200, 1201, 1204, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1218, 1220, 1221, 1222, 1224, 1228, 1229, 1235, 1236, 1238, 1239, 1242, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1256, 1258, 1259, 1260, 1262, 1266, 1267, 1273, 1274, 1276, 1277, 1280, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1295, 1297, 1298, 1299, 1303, 1304, 1305, 1306, 1309, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1325, 1327, 1328, 1329, 1335, 1336, 1337, 1338, 1341, 1345, 1346, 1347, 1348, 1350, 1351, 1353, 1359, 1361, 1362, 1363, 1369, 1370, 1371, 1372, 1375, 1379, 1380, 1381, 1382, 1384, 1385, 1387, 1393, 1395, 1396, 1397, 1403, 1404, 1405, 1406, 1409, 1413, 1414, 1415, 1416, 1418, 1419, 1421, 1425, 1427, 1428, 1429, 1433, 1434, 1435, 1436, 1439, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1455, 1457, 1458, 1459, 1465, 1466, 1467, 1468, 1471, 1475, 1476, 1477, 1478, 1480, 1481, 1486, 1488, 1489, 1490, 1494, 1495, 1496, 1497, 1500, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1514, 1516, 1517, 1518, 1522, 1523, 1524, 1525, 1528, 1530, 1531, 1532, 1533, 1534, 1536, 1537, 1542, 1544, 1545, 1546, 1550, 1551, 1552, 1553, 1556, 1558, 1559, 1560, 1561, 1562, 1564, 1565, 1572, 1574, 1575, 1576, 1582, 1583, 1584, 1585, 1588, 1592, 1593, 1594, 1595, 1597, 1598, 1600, 1604, 1606, 1607, 1608, 1612, 1613, 1614, 1615, 1618, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1634, 1636, 1637, 1638, 1644, 1645, 1646, 1647, 1650, 1654, 1655, 1656, 1657, 1659, 1660, 1662, 1666, 1668, 1669, 1670, 1674, 1675, 1676, 1677, 1680, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1699, 1703, 1709, 1714, 1726, 1727, 1729, 1730, 1734, 1750, 1762, 1768, 1769, 1771, 1773, 1775, 1785, 1787, 1788, 1793, 1794, 1797, 1799, 1800, 1805, 1806, 1808, 1811, 1813, 1814, 1819, 1820, 1833, 1837, 1845, 1858, 1879, 1882, 1883, 1884, 1889, 1892, 1893, 1894, 1895, 1914, 1915, 1916, 1917, 1919, 1920], "would": [5, 6, 9, 10, 17, 18, 20, 22, 25, 26, 28, 30, 31, 741, 846, 927, 1750, 1914], "overwrit": [5, 25, 30, 31, 33, 60, 61, 90, 91, 120, 121, 122, 123, 152, 153, 185, 186, 218, 219, 220, 221, 250, 251, 283, 284, 316, 317, 349, 350, 383, 384, 416, 417, 449, 450, 482, 483, 516, 543, 544, 591, 604, 853, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684], "exist": [5, 10, 11, 12, 14, 22, 28, 29, 30, 31, 32, 34, 56, 60, 61, 64, 67, 88, 90, 91, 93, 116, 120, 121, 122, 123, 125, 148, 152, 153, 155, 158, 181, 185, 186, 188, 191, 214, 218, 219, 220, 221, 223, 246, 250, 251, 253, 256, 279, 283, 284, 286, 289, 312, 316, 317, 319, 322, 345, 349, 350, 353, 356, 379, 383, 384, 386, 389, 412, 416, 417, 419, 422, 445, 449, 450, 452, 455, 478, 482, 483, 487, 493, 494, 511, 516, 519, 540, 543, 544, 546, 571, 587, 591, 593, 603, 604, 605, 635, 832, 847, 853, 945, 971, 975, 977, 984, 1010, 1014, 1016, 1022, 1048, 1052, 1054, 1060, 1086, 1090, 1092, 1098, 1126, 1130, 1132, 1139, 1165, 1169, 1171, 1178, 1204, 1208, 1210, 1216, 1242, 1246, 1248, 1254, 1280, 1284, 1286, 1293, 1309, 1313, 1315, 1322, 1341, 1346, 1348, 1356, 1375, 1380, 1382, 1390, 1409, 1414, 1416, 1423, 1439, 1443, 1445, 1452, 1471, 1476, 1478, 1484, 1500, 1504, 1506, 1512, 1528, 1532, 1534, 1540, 1556, 1560, 1562, 1569, 1588, 1593, 1595, 1602, 1618, 1622, 1624, 1631, 1650, 1655, 1657, 1664, 1680, 1684, 1686, 1715, 1717, 1737, 1882, 1887], "now": [5, 6, 7, 9, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 745, 796, 822], "advantag": [5, 9, 30, 982], "regener": [5, 9, 15, 21, 22, 29, 30, 31, 494, 495, 513, 514, 571, 572, 590, 635, 636, 638, 823, 945, 946, 974, 984, 985, 1013, 1022, 1023, 1051, 1060, 1061, 1089, 1098, 1099, 1129, 1139, 1140, 1168, 1178, 1179, 1207, 1216, 1217, 1245, 1254, 1255, 1283, 1293, 1294, 1312, 1322, 1323, 1345, 1356, 1357, 1379, 1390, 1391, 1413, 1423, 1424, 1442, 1452, 1453, 1475, 1484, 1485, 1503, 1512, 1513, 1531, 1540, 1541, 1559, 1569, 1570, 1592, 1602, 1603, 1621, 1631, 1632, 1654, 1664, 1665, 1683], "programmat": [5, 16], "b": [5, 9, 18, 20, 22, 25, 33, 35, 38, 59, 130, 151, 163, 184, 228, 249, 261, 282, 294, 315, 327, 361, 394, 427, 460, 481, 647, 683, 762, 818, 825, 864, 920, 932, 938, 955, 956, 994, 995, 1032, 1033, 1070, 1071, 1108, 1109, 1149, 1150, 1188, 1189, 1226, 1227, 1264, 1265, 1693, 1695, 1697, 1698, 1699, 1701, 1703, 1705, 1707, 1724, 1747, 1748, 1777, 1915, 1916, 1918, 1919], "save": [5, 6, 16, 17, 30, 34, 650, 652, 658, 659, 661, 665, 666, 667, 959, 961, 998, 1000, 1036, 1038, 1074, 1076, 1114, 1116, 1153, 1155, 1192, 1194, 1215, 1230, 1232, 1268, 1270, 1721, 1768, 1773, 1880, 1888, 1892, 1893], "file": [5, 13, 26, 34, 36, 645, 646, 647, 649, 650, 651, 652, 653, 654, 658, 659, 660, 661, 663, 664, 665, 666, 667, 1710, 1878, 1887, 1892, 1893], "retain": [5, 33], "chang": [5, 9, 14, 23, 25, 27, 29, 31, 32, 34, 36, 62, 351, 492, 1880, 1914], "paramet": [5, 7, 9, 11, 12, 15, 21, 23, 27, 29, 30, 31, 34, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 100, 101, 103, 106, 107, 109, 110, 111, 112, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 136, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 164, 165, 169, 172, 173, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 198, 199, 201, 204, 205, 207, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 224, 225, 229, 230, 234, 237, 238, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 261, 262, 263, 267, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 295, 296, 300, 303, 304, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 328, 329, 333, 336, 337, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 362, 363, 367, 370, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 395, 396, 400, 403, 404, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 429, 433, 436, 437, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 460, 461, 462, 466, 469, 470, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 493, 494, 495, 496, 497, 499, 502, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 525, 526, 528, 531, 532, 534, 535, 536, 537, 540, 541, 542, 543, 544, 546, 547, 548, 551, 552, 553, 554, 558, 559, 561, 564, 566, 567, 571, 572, 573, 575, 578, 579, 581, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 599, 600, 601, 602, 603, 604, 605, 619, 622, 624, 635, 636, 637, 638, 643, 646, 647, 648, 650, 651, 652, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 740, 741, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 760, 762, 763, 765, 767, 768, 769, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 792, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 806, 808, 809, 810, 811, 812, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 838, 840, 845, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 916, 918, 919, 920, 922, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 959, 960, 961, 962, 964, 965, 966, 967, 968, 971, 972, 973, 974, 975, 977, 978, 979, 982, 983, 984, 985, 986, 988, 989, 990, 991, 992, 993, 994, 995, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1292, 1293, 1294, 1295, 1297, 1300, 1301, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1321, 1322, 1323, 1325, 1327, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1353, 1355, 1356, 1357, 1359, 1361, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1387, 1389, 1390, 1391, 1393, 1395, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1450, 1451, 1452, 1453, 1455, 1457, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1483, 1484, 1485, 1486, 1488, 1491, 1492, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1511, 1512, 1513, 1514, 1516, 1519, 1520, 1522, 1523, 1524, 1525, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1540, 1541, 1542, 1544, 1547, 1548, 1550, 1551, 1552, 1553, 1556, 1557, 1558, 1559, 1560, 1562, 1563, 1564, 1568, 1569, 1570, 1572, 1574, 1577, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1588, 1589, 1590, 1591, 1592, 1593, 1595, 1596, 1597, 1600, 1602, 1603, 1604, 1606, 1609, 1610, 1612, 1613, 1614, 1615, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1630, 1631, 1632, 1634, 1636, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1662, 1663, 1664, 1665, 1666, 1668, 1671, 1672, 1674, 1675, 1676, 1677, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1699, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1759, 1760, 1762, 1764, 1766, 1769, 1771, 1773, 1775, 1777, 1779, 1782, 1837, 1880, 1882, 1887, 1888, 1889, 1892, 1893, 1897, 1899, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1920], "parametr": 5, "studi": [5, 9, 28, 33], "easili": [5, 7, 16, 29, 33, 36, 196], "hard": [5, 9, 17], "code": [5, 12, 13, 14, 16, 17, 22, 25, 27, 29, 33, 34, 651, 745, 747, 749, 796, 797, 799, 822, 827, 834, 853], "previous": [5, 30, 36], "pore_s": [5, 9, 14, 29, 30, 745, 796, 822, 1920], "propnam": [5, 6, 7, 9, 10, 11, 12, 14, 18, 21, 22, 27, 29, 30, 31, 32, 33, 47, 48, 64, 79, 80, 106, 107, 139, 140, 155, 172, 173, 188, 204, 205, 237, 238, 253, 270, 271, 286, 303, 304, 319, 336, 337, 353, 370, 371, 386, 403, 404, 419, 436, 437, 452, 469, 470, 494, 502, 503, 513, 514, 531, 532, 558, 559, 571, 578, 579, 589, 590, 606, 635, 637, 638, 662, 745, 796, 822, 823, 932, 945, 960, 962, 973, 974, 984, 999, 1001, 1012, 1013, 1022, 1037, 1039, 1050, 1051, 1060, 1075, 1077, 1088, 1089, 1098, 1115, 1117, 1128, 1129, 1139, 1154, 1156, 1167, 1168, 1178, 1193, 1195, 1206, 1207, 1216, 1231, 1233, 1244, 1245, 1254, 1269, 1271, 1282, 1283, 1293, 1300, 1301, 1311, 1312, 1322, 1330, 1331, 1332, 1333, 1343, 1345, 1356, 1364, 1365, 1366, 1367, 1377, 1379, 1390, 1398, 1399, 1400, 1401, 1411, 1413, 1423, 1430, 1431, 1441, 1442, 1452, 1460, 1461, 1462, 1463, 1473, 1475, 1484, 1491, 1492, 1502, 1503, 1512, 1519, 1520, 1530, 1531, 1540, 1547, 1548, 1558, 1559, 1569, 1577, 1578, 1579, 1580, 1590, 1592, 1602, 1609, 1610, 1620, 1621, 1631, 1639, 1640, 1641, 1642, 1652, 1654, 1664, 1671, 1672, 1682, 1683, 1907], "revers": [5, 9, 197, 1833, 1845, 1858], "look": [5, 7, 9, 17, 18, 22, 23, 25, 28, 29, 30, 31, 32, 36, 196, 746, 853, 871, 893, 982, 1715, 1773, 1784, 1887, 1892], "up": [5, 7, 9, 10, 17, 23, 27, 28, 29, 31, 33, 36, 196, 493, 853, 871, 878, 893], "random": [5, 6, 7, 8, 11, 12, 15, 20, 21, 22, 27, 29, 30, 31, 33, 34, 671, 672, 673, 674, 675, 676, 677, 741, 745, 747, 749, 796, 797, 799, 811, 812, 814, 822, 823, 827, 834, 907, 932, 949, 950, 982, 988, 989, 1026, 1027, 1059, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1253, 1258, 1259, 1742, 1745, 1779], "correspond": [5, 8, 18, 21, 27, 28, 29, 30, 31, 32, 33, 494, 571, 619, 635, 651, 659, 662, 749, 799, 806, 826, 829, 834, 845, 853, 857, 878, 945, 949, 950, 953, 955, 956, 984, 988, 989, 992, 994, 995, 1022, 1026, 1027, 1030, 1032, 1033, 1060, 1064, 1065, 1068, 1070, 1071, 1097, 1098, 1102, 1103, 1106, 1108, 1109, 1139, 1143, 1144, 1147, 1149, 1150, 1178, 1182, 1183, 1186, 1188, 1189, 1216, 1220, 1221, 1224, 1226, 1227, 1254, 1258, 1259, 1262, 1264, 1265, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1713, 1719, 1721, 1746, 1755, 1914, 1917], "determin": [5, 7, 8, 9, 20, 22, 28, 32, 33, 659, 853, 922, 926, 929, 930, 982, 1715, 1729, 1730, 1731, 1732, 1735, 1737, 1905], "cumul": [5, 9, 28, 29, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480], "probabl": [5, 9, 17, 28, 29, 31, 33], "allow": [5, 25, 26, 29, 31, 552, 648, 659, 741, 823, 853, 1354, 1388, 1511, 1727, 1878], "user": [5, 6, 11, 12, 13, 15, 16, 25, 26, 27, 30, 31, 34, 492, 650, 666, 823, 943, 982, 1059, 1097, 1137, 1176, 1215, 1253, 1483, 1727], "instanc": [5, 9, 16, 17, 25, 26, 27, 28, 29, 30, 31, 494, 571, 635, 853, 944, 945, 983, 984, 1022, 1060, 1098, 1138, 1139, 1177, 1178, 1215, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1511, 1512, 1540, 1567, 1569, 1602, 1629, 1631, 1664, 1699, 1709, 1727, 1744, 1834, 1846, 1878, 1915], "spatial": [5, 9, 741, 840, 845, 954, 993, 1031, 1069, 1107, 1148, 1187, 1215, 1225, 1263, 1728, 1753, 1756], "correl": [5, 9, 739, 741, 825, 863, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 894, 897, 898, 899, 901, 902], "origin": [5, 6, 10, 22, 33, 34, 926, 1736, 1746, 1764, 1766, 1777, 1779, 1837], "make": [5, 6, 7, 9, 15, 16, 17, 18, 22, 25, 26, 28, 29, 30, 31, 32, 51, 52, 53, 56, 83, 84, 85, 88, 110, 111, 112, 116, 143, 144, 145, 148, 176, 177, 178, 181, 208, 209, 210, 214, 241, 242, 243, 246, 274, 275, 276, 279, 307, 308, 309, 312, 340, 341, 342, 345, 374, 375, 376, 379, 407, 408, 409, 412, 440, 441, 442, 445, 473, 474, 475, 478, 493, 506, 507, 508, 511, 535, 536, 537, 540, 582, 583, 584, 587, 600, 601, 602, 603, 846, 920, 922, 932, 965, 967, 968, 971, 1004, 1006, 1007, 1010, 1042, 1044, 1045, 1048, 1080, 1082, 1083, 1086, 1120, 1122, 1123, 1126, 1159, 1161, 1162, 1165, 1198, 1200, 1201, 1204, 1236, 1238, 1239, 1242, 1253, 1274, 1276, 1277, 1280, 1304, 1305, 1306, 1309, 1336, 1337, 1338, 1341, 1370, 1371, 1372, 1375, 1404, 1405, 1406, 1409, 1434, 1435, 1436, 1439, 1466, 1467, 1468, 1471, 1495, 1496, 1497, 1500, 1523, 1524, 1525, 1528, 1551, 1552, 1553, 1556, 1583, 1584, 1585, 1588, 1613, 1614, 1615, 1618, 1645, 1646, 1647, 1650, 1675, 1676, 1677, 1680, 1710, 1713, 1743, 1750, 1751, 1752, 1882, 1915], "sure": [5, 7, 20, 29, 36, 1713], "afterward": 5, "pore_se": [5, 9, 15, 29, 30, 745, 796, 822], "num_rang": [5, 9, 15, 29, 30, 671, 672, 673, 674, 675, 676, 677, 740, 748, 792, 798, 831], "99": [5, 26, 29, 33], "ve": [5, 18, 36], "settl": 5, "should": [5, 7, 9, 10, 15, 18, 22, 25, 27, 28, 29, 32, 33, 36, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 85, 88, 89, 90, 91, 93, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 189, 191, 208, 209, 210, 214, 215, 218, 219, 220, 223, 241, 242, 243, 246, 247, 248, 250, 251, 252, 253, 254, 256, 274, 275, 276, 279, 280, 281, 283, 284, 285, 286, 287, 289, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 322, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 374, 375, 376, 379, 380, 381, 383, 384, 385, 386, 387, 389, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 422, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 455, 473, 474, 475, 478, 479, 480, 482, 483, 484, 485, 487, 494, 495, 506, 507, 508, 511, 512, 514, 516, 519, 535, 536, 537, 540, 541, 543, 544, 546, 564, 571, 572, 582, 583, 584, 587, 588, 590, 591, 593, 600, 601, 602, 603, 604, 605, 619, 623, 635, 636, 638, 647, 648, 660, 662, 690, 695, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 724, 727, 731, 732, 734, 738, 741, 745, 796, 811, 812, 822, 832, 833, 846, 853, 926, 929, 930, 945, 946, 954, 965, 967, 968, 971, 972, 974, 975, 977, 983, 984, 985, 993, 1004, 1006, 1007, 1010, 1011, 1013, 1014, 1016, 1022, 1023, 1031, 1042, 1044, 1045, 1048, 1049, 1051, 1052, 1054, 1059, 1060, 1061, 1069, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1092, 1097, 1098, 1099, 1107, 1110, 1111, 1120, 1122, 1123, 1126, 1127, 1129, 1130, 1132, 1138, 1139, 1140, 1148, 1159, 1161, 1162, 1165, 1166, 1168, 1169, 1171, 1178, 1179, 1187, 1198, 1200, 1201, 1204, 1205, 1207, 1208, 1210, 1216, 1217, 1225, 1236, 1238, 1239, 1242, 1243, 1245, 1246, 1248, 1253, 1254, 1255, 1263, 1274, 1276, 1277, 1280, 1281, 1283, 1284, 1286, 1293, 1294, 1304, 1305, 1306, 1309, 1310, 1312, 1313, 1315, 1322, 1323, 1336, 1337, 1338, 1341, 1342, 1345, 1346, 1348, 1356, 1357, 1370, 1371, 1372, 1375, 1376, 1379, 1380, 1382, 1390, 1391, 1404, 1405, 1406, 1409, 1410, 1413, 1414, 1416, 1423, 1424, 1434, 1435, 1436, 1439, 1440, 1442, 1443, 1445, 1452, 1453, 1466, 1467, 1468, 1471, 1472, 1475, 1476, 1478, 1484, 1485, 1495, 1496, 1497, 1500, 1501, 1503, 1504, 1506, 1512, 1513, 1523, 1524, 1525, 1528, 1529, 1531, 1532, 1534, 1540, 1541, 1551, 1552, 1553, 1556, 1557, 1559, 1560, 1562, 1569, 1570, 1583, 1584, 1585, 1588, 1589, 1592, 1593, 1595, 1602, 1603, 1613, 1614, 1615, 1618, 1619, 1621, 1622, 1624, 1631, 1632, 1645, 1646, 1647, 1650, 1651, 1654, 1655, 1657, 1664, 1665, 1675, 1676, 1677, 1680, 1681, 1683, 1684, 1686, 1709, 1710, 1713, 1717, 1721, 1728, 1736, 1743, 1744, 1746, 1748, 1754, 1782, 1898, 1916, 1918, 1919], "alwai": [5, 27, 29, 33, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 1747, 1748], "less": [5, 10, 27, 29, 812, 1914], "than": [5, 6, 9, 18, 23, 26, 27, 29, 30, 31, 33, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 99, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 455, 466, 473, 474, 475, 478, 487, 499, 506, 507, 508, 511, 513, 519, 528, 535, 536, 537, 540, 546, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 664, 857, 860, 884, 902, 951, 955, 959, 961, 965, 967, 968, 971, 977, 990, 994, 998, 1000, 1004, 1006, 1007, 1010, 1016, 1028, 1032, 1036, 1038, 1042, 1044, 1045, 1048, 1054, 1066, 1070, 1074, 1076, 1080, 1082, 1083, 1086, 1092, 1104, 1108, 1114, 1116, 1120, 1122, 1123, 1126, 1132, 1145, 1149, 1153, 1155, 1159, 1161, 1162, 1165, 1171, 1184, 1188, 1192, 1194, 1198, 1200, 1201, 1204, 1210, 1222, 1226, 1230, 1232, 1236, 1238, 1239, 1242, 1248, 1260, 1264, 1268, 1270, 1274, 1276, 1277, 1280, 1286, 1297, 1304, 1305, 1306, 1309, 1315, 1327, 1336, 1337, 1338, 1341, 1348, 1361, 1370, 1371, 1372, 1375, 1382, 1395, 1404, 1405, 1406, 1409, 1416, 1427, 1434, 1435, 1436, 1439, 1445, 1457, 1466, 1467, 1468, 1471, 1478, 1488, 1495, 1496, 1497, 1500, 1506, 1516, 1523, 1524, 1525, 1528, 1534, 1544, 1551, 1552, 1553, 1556, 1562, 1574, 1583, 1584, 1585, 1588, 1595, 1606, 1613, 1614, 1615, 1618, 1624, 1636, 1645, 1646, 1647, 1650, 1657, 1668, 1675, 1676, 1677, 1680, 1686, 1720, 1724, 1725], "equal": [5, 6, 22, 25, 27, 817, 924, 929, 930, 982, 1737, 1833, 1845, 1858], "thei": [5, 9, 10, 11, 12, 13, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 99, 623, 647, 666, 741, 746, 751, 752, 753, 754, 853, 929, 930, 932, 943, 944, 952, 954, 956, 982, 983, 991, 993, 995, 1029, 1031, 1033, 1067, 1069, 1071, 1097, 1105, 1107, 1109, 1138, 1146, 1148, 1150, 1176, 1177, 1185, 1187, 1189, 1215, 1223, 1225, 1227, 1253, 1261, 1263, 1265, 1324, 1358, 1392, 1454, 1483, 1511, 1571, 1633, 1711, 1737, 1742, 1744, 1748, 1749, 1837, 1846, 1915], "connect": [5, 9, 18, 22, 23, 26, 27, 29, 32, 33, 34, 99, 648, 805, 806, 811, 812, 843, 844, 846, 848, 849, 851, 922, 924, 943, 949, 950, 952, 953, 954, 982, 988, 989, 991, 992, 993, 1021, 1026, 1027, 1029, 1030, 1031, 1059, 1064, 1065, 1067, 1068, 1069, 1097, 1102, 1103, 1105, 1106, 1107, 1111, 1137, 1143, 1144, 1146, 1147, 1148, 1176, 1182, 1183, 1185, 1186, 1187, 1215, 1220, 1221, 1223, 1224, 1225, 1253, 1258, 1259, 1261, 1262, 1263, 1710, 1711, 1712, 1713, 1714, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1734, 1737, 1743, 1744, 1745, 1749, 1750, 1755, 1915, 1916], "otherwis": [5, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 456, 488, 520, 547, 566, 594, 614, 629, 664, 875, 900, 954, 966, 978, 993, 1005, 1017, 1031, 1043, 1055, 1069, 1081, 1093, 1107, 1121, 1133, 1148, 1160, 1172, 1187, 1199, 1211, 1225, 1237, 1249, 1263, 1275, 1287, 1316, 1332, 1349, 1366, 1383, 1400, 1417, 1446, 1462, 1479, 1507, 1535, 1563, 1579, 1596, 1625, 1641, 1658, 1687, 1737, 1769, 1771, 1775, 1791, 1803, 1810, 1817, 1890, 1897, 1905, 1915, 1916], "re": [5, 9, 15, 17, 18, 27, 29, 31, 36, 118, 513, 740, 748, 798, 828, 831, 853], "realli": [5, 9, 25, 27, 28, 29, 30, 33], "break": [5, 17, 27, 33], "happen": [5, 9, 15, 29, 30, 31, 32, 811, 812], "d": [5, 7, 20, 23, 25, 27, 28, 31, 43, 49, 70, 71, 75, 81, 96, 97, 102, 108, 128, 129, 135, 141, 161, 162, 168, 174, 194, 195, 200, 206, 226, 227, 233, 239, 259, 260, 266, 272, 292, 293, 299, 305, 325, 326, 332, 338, 359, 360, 366, 372, 392, 393, 399, 405, 425, 426, 432, 438, 458, 459, 465, 471, 490, 491, 498, 504, 522, 523, 527, 533, 549, 550, 555, 560, 568, 569, 574, 580, 596, 597, 608, 609, 612, 613, 617, 618, 620, 621, 627, 628, 632, 633, 647, 863, 891, 920, 948, 963, 980, 981, 987, 1002, 1019, 1020, 1025, 1040, 1057, 1058, 1059, 1063, 1078, 1095, 1096, 1101, 1118, 1135, 1136, 1142, 1157, 1174, 1175, 1181, 1196, 1213, 1214, 1219, 1234, 1251, 1252, 1253, 1257, 1272, 1289, 1290, 1296, 1302, 1318, 1319, 1326, 1334, 1351, 1352, 1360, 1368, 1385, 1386, 1394, 1402, 1419, 1420, 1426, 1432, 1448, 1449, 1456, 1464, 1481, 1482, 1487, 1493, 1509, 1510, 1515, 1521, 1537, 1538, 1543, 1549, 1565, 1566, 1573, 1581, 1598, 1599, 1605, 1611, 1627, 1628, 1635, 1643, 1660, 1661, 1667, 1673, 1689, 1690, 1736, 1777, 1779, 1785, 1786, 1789, 1790, 1794, 1795, 1797, 1798, 1801, 1802, 1808, 1809, 1810, 1811, 1812, 1815, 1816, 1820, 1821, 1879, 1885, 1886, 1895, 1896, 1899, 1911], "check": [5, 25, 27, 32, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 456, 488, 520, 547, 566, 594, 853, 978, 1017, 1055, 1093, 1133, 1172, 1211, 1249, 1287, 1316, 1324, 1349, 1358, 1383, 1392, 1417, 1446, 1454, 1479, 1507, 1535, 1563, 1571, 1596, 1625, 1633, 1658, 1687, 1727, 1734, 1735, 1738, 1784, 1897, 1898, 1905, 1907, 1915, 1916], "consist": [5, 10, 23, 27, 32, 493, 647, 651, 715, 730, 1450, 1846], "result": [5, 6, 9, 10, 11, 18, 20, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 36, 51, 56, 60, 64, 83, 88, 90, 110, 116, 118, 120, 143, 148, 152, 155, 176, 181, 185, 188, 208, 214, 218, 219, 221, 241, 246, 250, 253, 274, 279, 283, 286, 307, 312, 316, 319, 340, 345, 349, 353, 374, 379, 383, 386, 407, 412, 416, 419, 440, 445, 449, 452, 473, 478, 482, 494, 506, 511, 514, 535, 540, 543, 571, 582, 587, 590, 600, 603, 635, 638, 659, 660, 762, 792, 795, 818, 820, 823, 945, 952, 955, 956, 965, 971, 974, 982, 984, 991, 994, 995, 1004, 1010, 1013, 1022, 1029, 1032, 1033, 1042, 1048, 1051, 1059, 1060, 1067, 1070, 1071, 1080, 1086, 1089, 1097, 1098, 1105, 1108, 1109, 1120, 1126, 1129, 1139, 1146, 1149, 1150, 1159, 1165, 1168, 1178, 1185, 1188, 1189, 1198, 1204, 1207, 1216, 1223, 1226, 1227, 1236, 1242, 1245, 1253, 1254, 1261, 1264, 1265, 1274, 1280, 1283, 1293, 1304, 1309, 1312, 1322, 1336, 1341, 1345, 1356, 1370, 1375, 1379, 1390, 1404, 1409, 1413, 1423, 1434, 1439, 1442, 1452, 1466, 1471, 1475, 1484, 1495, 1500, 1503, 1512, 1523, 1528, 1531, 1540, 1551, 1556, 1559, 1569, 1583, 1588, 1592, 1602, 1613, 1618, 1621, 1631, 1645, 1650, 1654, 1664, 1675, 1680, 1683, 1720, 1724, 1725, 1728, 1735, 1746, 1751, 1752, 1762, 1766, 1779, 1810, 1822, 1834], "carefulli": [5, 32, 33, 1744], "ensur": [5, 6, 8, 9, 10, 16, 27, 29, 31, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 456, 488, 520, 547, 566, 589, 594, 623, 637, 853, 973, 978, 1012, 1017, 1050, 1055, 1088, 1093, 1128, 1133, 1167, 1172, 1206, 1211, 1244, 1249, 1282, 1287, 1311, 1316, 1343, 1349, 1377, 1383, 1411, 1417, 1441, 1446, 1473, 1479, 1502, 1507, 1530, 1535, 1558, 1563, 1590, 1596, 1620, 1625, 1652, 1658, 1682, 1687, 1846, 1910], "thoat": 5, "smaller": [5, 9, 29], "provid": [5, 9, 10, 21, 28, 29, 30, 31, 32, 33, 35, 39, 40, 49, 60, 71, 73, 74, 81, 90, 97, 100, 101, 108, 120, 129, 131, 132, 141, 152, 162, 164, 165, 174, 185, 195, 198, 199, 206, 218, 219, 221, 227, 229, 230, 239, 250, 260, 262, 263, 272, 283, 293, 295, 296, 305, 316, 326, 328, 329, 338, 349, 360, 362, 363, 372, 383, 393, 395, 396, 405, 416, 426, 428, 429, 438, 449, 459, 461, 462, 471, 482, 491, 497, 504, 523, 525, 526, 533, 543, 550, 554, 560, 569, 573, 580, 597, 606, 612, 613, 618, 627, 628, 633, 634, 651, 740, 744, 745, 746, 747, 748, 749, 792, 795, 796, 797, 798, 799, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 838, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 947, 963, 981, 986, 1002, 1020, 1021, 1024, 1040, 1058, 1062, 1078, 1096, 1100, 1118, 1136, 1141, 1157, 1175, 1180, 1196, 1214, 1218, 1234, 1252, 1256, 1272, 1290, 1295, 1302, 1319, 1325, 1334, 1352, 1353, 1359, 1368, 1386, 1387, 1393, 1402, 1420, 1421, 1425, 1432, 1449, 1455, 1464, 1482, 1486, 1493, 1510, 1511, 1514, 1521, 1538, 1542, 1549, 1566, 1572, 1581, 1599, 1600, 1604, 1611, 1628, 1634, 1643, 1661, 1662, 1666, 1673, 1690, 1721, 1726, 1727, 1789, 1790, 1795, 1801, 1802, 1809, 1815, 1816, 1821, 1834, 1878, 1885, 1886, 1893, 1896, 1902, 1903, 1914, 1915, 1916, 1919], "call": [5, 7, 9, 10, 12, 15, 17, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 59, 60, 68, 90, 94, 120, 126, 151, 152, 159, 184, 185, 192, 218, 224, 249, 250, 257, 282, 283, 290, 315, 316, 323, 348, 349, 357, 382, 383, 390, 415, 416, 423, 448, 449, 456, 481, 482, 488, 494, 520, 542, 543, 547, 552, 566, 571, 589, 594, 607, 619, 623, 635, 637, 749, 799, 834, 853, 945, 973, 978, 984, 1012, 1017, 1022, 1050, 1055, 1060, 1088, 1093, 1098, 1128, 1133, 1139, 1167, 1172, 1178, 1206, 1211, 1216, 1244, 1249, 1254, 1282, 1287, 1293, 1311, 1316, 1322, 1343, 1344, 1349, 1356, 1377, 1378, 1383, 1390, 1411, 1412, 1417, 1423, 1441, 1446, 1452, 1473, 1474, 1479, 1484, 1502, 1507, 1512, 1530, 1535, 1540, 1558, 1563, 1569, 1590, 1591, 1596, 1602, 1620, 1625, 1631, 1652, 1653, 1658, 1664, 1682, 1687, 1915, 1916, 1918], "from_neighbor_por": [5, 9, 29, 30, 671, 672, 673, 674, 675, 676, 677], "either": [5, 12, 18, 20, 22, 25, 27, 28, 29, 31, 32, 33, 36, 68, 70, 94, 96, 99, 126, 128, 159, 161, 192, 194, 224, 226, 257, 259, 290, 292, 323, 325, 357, 359, 390, 392, 423, 425, 427, 456, 458, 488, 490, 520, 522, 547, 549, 566, 568, 594, 596, 617, 632, 650, 745, 796, 822, 826, 864, 926, 978, 980, 1017, 1019, 1055, 1057, 1059, 1093, 1095, 1097, 1133, 1135, 1172, 1174, 1211, 1213, 1249, 1251, 1253, 1287, 1289, 1316, 1318, 1321, 1344, 1349, 1351, 1355, 1378, 1383, 1385, 1389, 1412, 1417, 1419, 1446, 1448, 1451, 1474, 1479, 1481, 1507, 1509, 1535, 1537, 1563, 1565, 1568, 1591, 1596, 1598, 1625, 1627, 1630, 1653, 1658, 1660, 1687, 1689, 1709, 1716, 1719, 1721, 1723, 1736, 1739, 1762, 1773, 1794, 1808, 1820, 1834, 1876, 1895, 1915, 1916], "minimum": [5, 9, 29, 744, 792, 795, 820, 821, 927, 1742, 1745], "mayb": 5, "also": [5, 6, 9, 10, 14, 15, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 197, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 455, 466, 473, 474, 475, 478, 487, 494, 499, 506, 507, 508, 511, 519, 528, 535, 536, 537, 540, 546, 552, 570, 571, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 635, 740, 744, 745, 746, 747, 748, 749, 792, 795, 796, 797, 798, 799, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 945, 951, 952, 955, 956, 965, 966, 967, 968, 971, 977, 982, 984, 990, 991, 994, 995, 1004, 1005, 1006, 1007, 1010, 1016, 1022, 1028, 1029, 1032, 1033, 1042, 1043, 1044, 1045, 1048, 1054, 1059, 1060, 1066, 1067, 1070, 1071, 1080, 1081, 1082, 1083, 1086, 1092, 1098, 1104, 1105, 1108, 1109, 1120, 1121, 1122, 1123, 1126, 1132, 1139, 1145, 1146, 1149, 1150, 1159, 1160, 1161, 1162, 1165, 1171, 1178, 1184, 1185, 1188, 1189, 1198, 1199, 1200, 1201, 1204, 1210, 1216, 1222, 1223, 1226, 1227, 1236, 1237, 1238, 1239, 1242, 1248, 1253, 1254, 1260, 1261, 1264, 1265, 1274, 1275, 1276, 1277, 1280, 1286, 1293, 1297, 1304, 1305, 1306, 1309, 1315, 1322, 1327, 1336, 1337, 1338, 1341, 1348, 1353, 1356, 1361, 1370, 1371, 1372, 1375, 1382, 1387, 1390, 1395, 1404, 1405, 1406, 1409, 1416, 1423, 1427, 1434, 1435, 1436, 1439, 1445, 1452, 1457, 1466, 1467, 1468, 1471, 1478, 1484, 1488, 1495, 1496, 1497, 1500, 1506, 1511, 1512, 1516, 1523, 1524, 1525, 1528, 1534, 1540, 1544, 1551, 1552, 1553, 1556, 1562, 1567, 1569, 1574, 1583, 1584, 1585, 1588, 1595, 1600, 1602, 1606, 1613, 1614, 1615, 1618, 1624, 1629, 1631, 1636, 1645, 1646, 1647, 1650, 1657, 1664, 1668, 1675, 1676, 1677, 1680, 1686, 1711, 1713, 1720, 1724, 1725, 1736, 1744, 1755, 1759, 1837, 1887, 1892, 1898], "down": [5, 17, 23, 27, 33], "distinct": 5, "demonstr": [5, 11, 16, 21, 28, 29, 30, 31, 32, 33, 34], "min": [5, 9, 29, 30, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 671, 672, 673, 674, 675, 676, 677, 744, 791, 792, 795, 820, 821, 962, 1001, 1039, 1077, 1117, 1156, 1195, 1233, 1271, 1301, 1333, 1367, 1401, 1431, 1463, 1492, 1520, 1548, 1580, 1610, 1642, 1672], "throat_siz": [5, 9, 29, 30, 1920], "diameter_2": [5, 9], "carefuli": 5, "chosen": [5, 9, 31, 1744], "reason": [5, 9, 10, 15, 16, 17, 21, 23, 25, 28, 29, 31, 32], "mention": [5, 22], "If": [5, 9, 17, 20, 22, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 50, 51, 52, 53, 56, 58, 60, 62, 63, 65, 67, 69, 70, 73, 74, 82, 83, 84, 85, 88, 90, 93, 95, 96, 100, 101, 109, 110, 111, 112, 116, 120, 121, 123, 125, 127, 128, 131, 132, 142, 143, 144, 145, 148, 150, 152, 154, 156, 158, 160, 161, 164, 165, 175, 176, 177, 178, 181, 183, 185, 187, 189, 191, 193, 194, 198, 199, 207, 208, 209, 210, 214, 218, 219, 221, 223, 225, 226, 229, 230, 240, 241, 242, 243, 246, 248, 250, 252, 254, 256, 258, 259, 262, 263, 273, 274, 275, 276, 279, 281, 283, 285, 287, 289, 291, 292, 295, 296, 306, 307, 308, 309, 312, 314, 316, 318, 320, 322, 324, 325, 328, 329, 339, 340, 341, 342, 345, 347, 348, 349, 351, 352, 354, 356, 358, 359, 362, 363, 373, 374, 375, 376, 379, 381, 382, 383, 385, 387, 389, 391, 392, 395, 396, 406, 407, 408, 409, 412, 414, 415, 416, 418, 420, 422, 424, 425, 428, 429, 439, 440, 441, 442, 445, 447, 448, 449, 451, 453, 455, 457, 458, 461, 462, 472, 473, 474, 475, 478, 480, 482, 484, 485, 487, 489, 490, 494, 497, 505, 506, 507, 508, 511, 513, 519, 521, 522, 525, 526, 534, 535, 536, 537, 540, 542, 543, 546, 548, 549, 554, 561, 567, 568, 571, 573, 581, 582, 583, 584, 587, 589, 593, 595, 596, 600, 601, 602, 603, 605, 614, 617, 629, 632, 635, 637, 643, 651, 662, 664, 666, 746, 792, 795, 818, 820, 838, 856, 857, 858, 859, 860, 862, 863, 864, 867, 869, 875, 878, 880, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 898, 899, 900, 901, 902, 908, 922, 926, 932, 943, 945, 947, 949, 950, 952, 954, 955, 956, 959, 961, 964, 965, 966, 967, 968, 971, 973, 977, 979, 980, 982, 984, 986, 988, 989, 991, 993, 994, 995, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1010, 1012, 1016, 1018, 1019, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1033, 1036, 1038, 1041, 1042, 1043, 1044, 1045, 1048, 1050, 1054, 1056, 1057, 1059, 1060, 1062, 1064, 1065, 1067, 1069, 1070, 1071, 1074, 1076, 1079, 1080, 1081, 1082, 1083, 1086, 1088, 1092, 1094, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1114, 1116, 1119, 1120, 1121, 1122, 1123, 1126, 1128, 1132, 1134, 1135, 1137, 1139, 1141, 1143, 1144, 1146, 1148, 1149, 1150, 1153, 1155, 1158, 1159, 1160, 1161, 1162, 1165, 1167, 1171, 1173, 1174, 1176, 1178, 1180, 1182, 1183, 1185, 1187, 1188, 1189, 1192, 1194, 1197, 1198, 1199, 1200, 1201, 1204, 1206, 1210, 1212, 1213, 1215, 1216, 1218, 1220, 1221, 1223, 1225, 1226, 1227, 1230, 1232, 1235, 1236, 1237, 1238, 1239, 1242, 1244, 1248, 1250, 1251, 1253, 1254, 1256, 1258, 1259, 1261, 1263, 1264, 1265, 1268, 1270, 1273, 1274, 1275, 1276, 1277, 1280, 1282, 1286, 1288, 1289, 1293, 1295, 1303, 1304, 1305, 1306, 1309, 1311, 1315, 1317, 1318, 1322, 1325, 1332, 1335, 1336, 1337, 1338, 1341, 1343, 1348, 1350, 1351, 1353, 1356, 1359, 1366, 1369, 1370, 1371, 1372, 1375, 1377, 1382, 1384, 1385, 1387, 1390, 1393, 1400, 1403, 1404, 1405, 1406, 1409, 1411, 1416, 1418, 1419, 1421, 1423, 1425, 1433, 1434, 1435, 1436, 1439, 1441, 1445, 1447, 1448, 1452, 1455, 1462, 1465, 1466, 1467, 1468, 1471, 1473, 1478, 1480, 1481, 1484, 1486, 1494, 1495, 1496, 1497, 1500, 1502, 1506, 1508, 1509, 1511, 1512, 1514, 1522, 1523, 1524, 1525, 1528, 1530, 1534, 1536, 1537, 1540, 1542, 1550, 1551, 1552, 1553, 1556, 1558, 1562, 1564, 1565, 1569, 1572, 1579, 1582, 1583, 1584, 1585, 1588, 1590, 1595, 1597, 1598, 1600, 1602, 1604, 1612, 1613, 1614, 1615, 1618, 1620, 1624, 1626, 1627, 1631, 1634, 1641, 1644, 1645, 1646, 1647, 1650, 1652, 1657, 1659, 1660, 1662, 1664, 1666, 1674, 1675, 1676, 1677, 1680, 1682, 1686, 1688, 1689, 1709, 1713, 1714, 1719, 1720, 1723, 1724, 1725, 1726, 1727, 1728, 1734, 1736, 1737, 1747, 1748, 1749, 1750, 1769, 1771, 1775, 1784, 1791, 1794, 1803, 1808, 1810, 1817, 1820, 1833, 1837, 1845, 1858, 1866, 1873, 1882, 1889, 1890, 1892, 1893, 1895, 1902, 1903, 1914, 1915, 1916, 1918, 1919], "some": [5, 9, 10, 11, 18, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 552, 606, 643, 832, 853, 927, 929, 930, 1215, 1511, 1727, 1748, 1750], "unhappi": 5, "reduc": [5, 10, 30, 33, 130, 1714], "small": [5, 9, 13, 18, 20, 26, 28, 29, 33, 659, 1915, 1916, 1918], "after": [5, 6, 7, 23, 29, 31, 33, 34, 666, 746, 1716, 1755], "power": [5, 22, 29, 30, 33, 741, 875, 900, 1332, 1366, 1400, 1462, 1579, 1641], "util": [5, 29, 31, 1810, 1822, 1904], "properli": [5, 6, 9, 36], "instead": [5, 9, 15, 18, 20, 23, 25, 28, 29, 30, 31, 32, 1761, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1778, 1780, 1781, 1783], "essenti": [5, 27, 28, 29, 30, 552, 648, 1711, 1728, 1748, 1749], "done": [5, 7, 9, 16, 17, 20, 25, 26, 27, 28, 29, 32, 33, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 663, 853, 962, 1001, 1039, 1077, 1117, 1156, 1195, 1233, 1271, 1301, 1333, 1367, 1401, 1431, 1463, 1492, 1520, 1548, 1580, 1610, 1642, 1672], "plot": [5, 6, 9, 11, 12, 26, 28, 29, 30, 33, 1915, 1916, 1917, 1918, 1919, 1920], "itself": [5, 17, 28, 29, 59, 151, 184, 249, 282, 315, 481, 606, 1714, 1833, 1845, 1858, 1868, 1875, 1877], "ahould": 5, "ideal": [5, 25, 853, 856], "paraview": [5, 26, 36, 665, 666, 1915, 1918], "plot_networkx": 5, "ig": 5, "fri": 6, "combarn": 6, "1971": 6, "longitudin": 6, "c_": [6, 22, 130, 929, 930], "erfc": 6, "bigl": 6, "ut": 6, "d_": [6, 7, 8, 11, 20, 23, 130, 715], "bigr": 6, "exp": [6, 929, 930, 935], "ux": 6, "time": [6, 7, 9, 17, 23, 25, 27, 28, 29, 30, 33, 34, 196, 348, 382, 415, 448, 494, 542, 571, 635, 643, 740, 748, 798, 831, 945, 984, 1022, 1060, 1097, 1098, 1139, 1178, 1215, 1216, 1253, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1721, 1893], "u": [6, 9, 25, 26, 28], "averag": [6, 7, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 741, 764, 765, 866, 868, 871, 924, 962, 1001, 1039, 1077, 1117, 1156, 1195, 1233, 1271, 1301, 1333, 1367, 1401, 1431, 1463, 1492, 1520, 1548, 1580, 1610, 1642, 1672, 1745], "veloc": 6, "concentr": [6, 7, 8, 20, 22, 23, 27, 34, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 515, 543, 878, 880, 929, 930, 1916], "complementari": [6, 26], "error": [6, 10, 22, 25, 27, 29, 31, 64, 155, 188, 253, 286, 319, 353, 386, 419, 452], "implement": [6, 11, 16, 22, 27, 31, 228, 460, 642, 853, 923, 924], "fit": [6, 7, 9, 31], "special": [6, 10, 29, 32, 33, 1511], "optim": [6, 196, 1110, 1111], "curve_fit": 6, "2d": [6, 30, 652, 690, 695, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 724, 727, 731, 732, 734, 738, 789, 804, 982, 1059, 1097, 1253, 1715, 1728, 1736, 1747, 1751, 1917, 1919], "3d": [6, 30, 659, 741, 1059, 1097, 1253, 1715, 1728, 1736, 1747, 1748, 1915, 1916, 1918], "well": [6, 7, 9, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 62, 351, 492, 647, 931, 933, 934, 935, 936, 937, 938, 959, 961, 998, 1000, 1036, 1038, 1074, 1076, 1111, 1114, 1116, 1153, 1155, 1192, 1194, 1230, 1232, 1268, 1270, 1728, 1757, 1916, 1917], "etc": [6, 7, 11, 12, 16, 23, 27, 30, 32, 34, 36, 830, 853, 1742, 1921], "entri": [6, 11, 12, 16, 18, 20, 22, 28, 29, 33, 196, 619, 829, 853, 907, 908, 922, 959, 998, 1036, 1074, 1114, 1153, 1192, 1230, 1268, 1784, 1897, 1905], "water": [6, 8, 9, 11, 12, 14, 16, 18, 21, 32, 33, 860, 878, 880, 884, 891, 895, 902, 920, 924, 932, 1511, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690], "55": [6, 18, 33], "electrical_conduct": [6, 687, 915, 916], "accumul": 6, "mass": [6, 18, 20, 22, 23, 32, 856, 859, 872, 877, 929], "occur": [6, 9, 17, 18, 27, 29, 31, 32, 33, 130, 196, 1747], "order": [6, 22, 27, 28, 29, 31, 33, 55, 60, 87, 90, 115, 120, 147, 152, 180, 185, 196, 213, 218, 219, 221, 245, 250, 278, 283, 311, 316, 344, 349, 378, 383, 411, 416, 444, 449, 477, 482, 510, 539, 543, 563, 586, 589, 615, 619, 623, 630, 637, 829, 922, 952, 956, 970, 973, 991, 995, 1009, 1012, 1029, 1033, 1047, 1050, 1067, 1071, 1085, 1088, 1105, 1109, 1125, 1128, 1146, 1150, 1164, 1167, 1185, 1189, 1203, 1206, 1223, 1227, 1241, 1244, 1261, 1265, 1279, 1282, 1308, 1311, 1340, 1343, 1374, 1377, 1408, 1411, 1438, 1441, 1470, 1473, 1499, 1502, 1527, 1530, 1555, 1558, 1587, 1590, 1617, 1620, 1649, 1652, 1679, 1682, 1727, 1745, 1792, 1804, 1818, 1833, 1845, 1858, 1891], "surround": [6, 9, 907], "its": [6, 10, 11, 16, 23, 26, 29, 30, 31, 33, 34, 99, 841, 842, 846, 853, 864, 882, 883, 1097, 1712], "def": [6, 11, 12, 15, 25, 31, 1777, 1779, 1904], "effective_pore_volum": 6, "throat_volum": [6, 9, 10, 29, 758], "pore_volum": [6, 9, 10, 29, 30, 743, 758], "pvol": 6, "tvol": 6, "vtot": 6, "sum": [6, 7, 9, 10, 11, 12, 25, 28, 29, 32, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 744, 792, 795, 820, 821, 833, 876, 966, 1005, 1043, 1081, 1121, 1160, 1199, 1237, 1275], "assert": 6, "isclos": 6, "total": [6, 10, 14, 18, 23, 26, 29, 32, 130, 876, 966, 1005, 1043, 1081, 1121, 1160, 1199, 1237, 1275, 1710], "effective_volum": 6, "field": [6, 1899, 1911], "therefor": [6, 8, 10, 11, 12, 21, 23, 27, 33, 647, 694, 696, 929, 930], "netwok": 6, "prior": [6, 16, 33, 1059, 1097, 1253], "advectiondiffus": [6, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "algorthim": 6, "sf": [6, 14, 23, 32], "50": [6, 9, 10, 23, 28, 29, 31, 33, 745, 747, 749, 796, 797, 799, 822, 827, 834], "rang": [6, 9, 11, 12, 15, 25, 29, 33, 35, 1728, 1830, 1842, 1855], "timestep": 6, "tell": [6, 17, 18, 22, 25, 28, 29, 33], "rather": [6, 16, 22, 29, 33, 857, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1720, 1724, 1725], "default": [6, 21, 25, 30, 31, 32, 34, 36, 39, 44, 46, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 78, 83, 89, 90, 91, 92, 100, 103, 105, 110, 117, 120, 121, 122, 123, 124, 131, 136, 138, 143, 149, 150, 152, 153, 154, 155, 156, 157, 164, 169, 171, 176, 182, 183, 185, 186, 187, 188, 189, 190, 198, 201, 203, 208, 215, 218, 219, 220, 221, 222, 228, 229, 234, 236, 241, 247, 248, 250, 251, 252, 253, 254, 255, 262, 267, 269, 274, 280, 281, 283, 284, 285, 286, 287, 288, 295, 300, 302, 307, 313, 314, 316, 317, 318, 319, 320, 321, 328, 333, 335, 340, 346, 347, 349, 350, 351, 352, 353, 354, 355, 362, 367, 369, 374, 380, 381, 383, 384, 385, 386, 387, 388, 395, 400, 402, 407, 413, 414, 416, 417, 418, 419, 420, 421, 428, 433, 435, 440, 446, 447, 449, 450, 451, 452, 453, 454, 461, 466, 468, 473, 479, 480, 482, 483, 484, 485, 486, 494, 495, 497, 499, 501, 506, 512, 513, 516, 518, 525, 528, 530, 535, 541, 543, 544, 545, 554, 557, 564, 565, 571, 572, 573, 575, 577, 582, 588, 591, 592, 599, 600, 604, 611, 614, 616, 622, 626, 629, 631, 635, 636, 647, 654, 659, 660, 662, 663, 664, 666, 667, 740, 743, 744, 746, 748, 792, 794, 795, 798, 817, 820, 821, 831, 853, 875, 900, 922, 926, 943, 945, 946, 947, 949, 950, 951, 952, 954, 955, 956, 958, 959, 961, 965, 966, 972, 975, 976, 982, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 997, 998, 1000, 1004, 1005, 1011, 1014, 1015, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1038, 1042, 1043, 1049, 1052, 1053, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1074, 1076, 1080, 1081, 1087, 1090, 1091, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1113, 1114, 1116, 1120, 1121, 1127, 1130, 1131, 1137, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1152, 1153, 1155, 1159, 1160, 1166, 1169, 1170, 1176, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1191, 1192, 1194, 1198, 1199, 1205, 1208, 1209, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1229, 1230, 1232, 1236, 1237, 1243, 1246, 1247, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1267, 1268, 1270, 1274, 1275, 1281, 1284, 1285, 1293, 1294, 1295, 1297, 1299, 1304, 1310, 1313, 1314, 1322, 1323, 1325, 1327, 1329, 1332, 1336, 1342, 1346, 1347, 1356, 1357, 1359, 1361, 1363, 1366, 1370, 1376, 1380, 1381, 1390, 1391, 1393, 1395, 1397, 1400, 1404, 1410, 1414, 1415, 1423, 1424, 1425, 1427, 1429, 1434, 1440, 1443, 1444, 1452, 1453, 1455, 1457, 1459, 1462, 1466, 1472, 1476, 1477, 1484, 1485, 1486, 1488, 1490, 1495, 1501, 1504, 1505, 1512, 1513, 1514, 1516, 1518, 1523, 1529, 1532, 1533, 1540, 1541, 1542, 1544, 1546, 1551, 1557, 1560, 1561, 1569, 1570, 1572, 1574, 1576, 1579, 1583, 1589, 1593, 1594, 1602, 1603, 1604, 1606, 1608, 1613, 1619, 1622, 1623, 1631, 1632, 1634, 1636, 1638, 1641, 1645, 1651, 1655, 1656, 1664, 1665, 1666, 1668, 1670, 1675, 1681, 1684, 1685, 1699, 1709, 1712, 1713, 1714, 1720, 1724, 1725, 1727, 1728, 1742, 1746, 1750, 1788, 1791, 1793, 1800, 1803, 1805, 1814, 1817, 1819, 1830, 1842, 1855, 1884, 1890, 1894, 1915, 1916], "which": [6, 7, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 50, 58, 72, 73, 76, 82, 99, 100, 103, 109, 121, 123, 130, 131, 136, 142, 150, 164, 169, 175, 183, 196, 198, 201, 207, 219, 221, 229, 234, 240, 248, 261, 262, 267, 273, 281, 295, 300, 306, 314, 328, 333, 339, 347, 348, 362, 367, 373, 381, 382, 395, 400, 406, 414, 415, 427, 428, 433, 439, 447, 448, 460, 461, 466, 472, 480, 493, 494, 495, 497, 499, 505, 514, 515, 525, 528, 534, 542, 552, 553, 554, 561, 571, 572, 573, 575, 581, 590, 599, 606, 619, 623, 624, 635, 636, 638, 643, 647, 659, 662, 664, 666, 715, 730, 740, 744, 745, 746, 747, 748, 749, 792, 795, 796, 797, 798, 799, 811, 812, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 838, 840, 845, 846, 848, 853, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 945, 946, 947, 949, 950, 951, 953, 954, 964, 974, 982, 984, 985, 986, 988, 989, 990, 992, 993, 1003, 1013, 1022, 1023, 1024, 1026, 1027, 1028, 1030, 1031, 1041, 1051, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1068, 1069, 1079, 1089, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1106, 1107, 1119, 1129, 1139, 1140, 1141, 1143, 1144, 1145, 1147, 1148, 1158, 1168, 1176, 1178, 1179, 1180, 1182, 1183, 1184, 1186, 1187, 1197, 1207, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1224, 1225, 1235, 1245, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1262, 1263, 1273, 1283, 1292, 1293, 1294, 1295, 1297, 1303, 1312, 1321, 1322, 1323, 1325, 1327, 1335, 1345, 1354, 1355, 1356, 1357, 1359, 1361, 1369, 1379, 1388, 1389, 1390, 1391, 1393, 1395, 1403, 1413, 1423, 1424, 1425, 1427, 1433, 1442, 1450, 1451, 1452, 1453, 1455, 1457, 1465, 1475, 1483, 1484, 1485, 1486, 1488, 1494, 1503, 1511, 1512, 1513, 1514, 1516, 1522, 1531, 1540, 1541, 1542, 1544, 1550, 1559, 1568, 1569, 1570, 1572, 1574, 1582, 1592, 1602, 1603, 1604, 1606, 1612, 1621, 1630, 1631, 1632, 1634, 1636, 1644, 1654, 1663, 1664, 1665, 1666, 1668, 1674, 1683, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1720, 1723, 1726, 1727, 1728, 1736, 1737, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1754, 1764, 1766, 1769, 1771, 1775, 1777, 1779, 1782, 1834, 1887, 1892, 1897, 1898, 1914], "interv": [6, 348, 382, 415, 448, 542, 643], "through": [6, 7, 8, 12, 14, 17, 20, 29, 32, 33, 36, 58, 130, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 1110, 1111], "integr": [6, 23, 32, 348, 382, 415, 448, 542, 642, 643], "span": [6, 348, 382, 415, 448, 542, 1737, 1745], "tspan": [6, 348, 382, 415, 448, 542, 643], "mod": [6, 29], "ad_dif_conduct": [6, 687], "ad_dif": [6, 687], "s_scheme": [6, 905], "powerlaw": [6, 905], "transientadvectiondiffus": [6, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360], "_updat": [6, 11, 12], "set_outflow_bc": 6, "100": [6, 7, 8, 9, 10, 14, 18, 25, 26, 33, 956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265], "saveat": [6, 348, 382, 415, 448, 542, 643], "x0": [6, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 542, 643, 1699, 1703], "ps_front": 6, "ts_front": 6, "find_neighbor_throat": [6, 28, 30, 33, 966, 1005, 1043, 1081, 1121, 1160, 1199, 1215, 1237, 1275], "xor": [6, 28, 30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 455, 466, 473, 474, 475, 478, 487, 499, 506, 507, 508, 511, 519, 528, 535, 536, 537, 540, 546, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 951, 952, 955, 956, 965, 966, 967, 968, 971, 977, 990, 991, 994, 995, 1004, 1005, 1006, 1007, 1010, 1016, 1028, 1029, 1032, 1033, 1042, 1043, 1044, 1045, 1048, 1054, 1066, 1067, 1070, 1071, 1080, 1081, 1082, 1083, 1086, 1092, 1104, 1105, 1108, 1109, 1120, 1121, 1122, 1123, 1126, 1132, 1145, 1146, 1149, 1150, 1159, 1160, 1161, 1162, 1165, 1171, 1184, 1185, 1188, 1189, 1198, 1199, 1200, 1201, 1204, 1210, 1222, 1223, 1226, 1227, 1236, 1237, 1238, 1239, 1242, 1248, 1260, 1261, 1264, 1265, 1274, 1275, 1276, 1277, 1280, 1286, 1297, 1304, 1305, 1306, 1309, 1315, 1327, 1336, 1337, 1338, 1341, 1348, 1361, 1370, 1371, 1372, 1375, 1382, 1395, 1404, 1405, 1406, 1409, 1416, 1427, 1434, 1435, 1436, 1439, 1445, 1457, 1466, 1467, 1468, 1471, 1478, 1488, 1495, 1496, 1497, 1500, 1506, 1516, 1523, 1524, 1525, 1528, 1534, 1544, 1551, 1552, 1553, 1556, 1562, 1574, 1583, 1584, 1585, 1588, 1595, 1606, 1613, 1614, 1615, 1618, 1624, 1636, 1645, 1646, 1647, 1650, 1657, 1668, 1675, 1676, 1677, 1680, 1686, 1720, 1724, 1725], "count": [6, 9, 29, 52, 53, 84, 85, 111, 112, 144, 145, 177, 178, 209, 210, 242, 243, 275, 276, 308, 309, 341, 342, 375, 376, 408, 409, 441, 442, 474, 475, 507, 508, 536, 537, 583, 584, 601, 602, 647, 840, 952, 955, 956, 966, 967, 968, 991, 994, 995, 1005, 1006, 1007, 1029, 1032, 1033, 1043, 1044, 1045, 1067, 1070, 1071, 1081, 1082, 1083, 1105, 1108, 1109, 1121, 1122, 1123, 1146, 1149, 1150, 1160, 1161, 1162, 1185, 1188, 1189, 1199, 1200, 1201, 1223, 1226, 1227, 1237, 1238, 1239, 1261, 1264, 1265, 1275, 1276, 1277, 1305, 1306, 1337, 1338, 1371, 1372, 1405, 1406, 1435, 1436, 1467, 1468, 1496, 1497, 1524, 1525, 1552, 1553, 1584, 1585, 1614, 1615, 1646, 1647, 1676, 1677, 1742], "c_avg": 6, "ti": 6, "c_front": 6, "q_front": 6, "append": [6, 11, 12, 25, 30, 31, 1717, 1750, 1827, 1839, 1852], "o": [6, 11, 12, 14, 30, 33, 34, 1887, 1892, 1916], "legend": [6, 9, 11, 12, 14, 30, 33], "set_xlabel": [6, 9, 14, 30], "set_ylabel": [6, 14, 30], "being": [6, 9, 12, 18, 22, 25, 30, 31, 33, 64, 155, 188, 253, 286, 319, 353, 386, 419, 452, 492, 494, 515, 517, 571, 635, 664, 825, 829, 945, 949, 950, 984, 988, 989, 1022, 1026, 1027, 1060, 1064, 1065, 1098, 1102, 1103, 1139, 1143, 1144, 1178, 1182, 1183, 1216, 1220, 1221, 1254, 1258, 1259, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1887, 1905, 1915, 1916], "effictivli": 6, "known": [6, 7, 8, 9, 10, 14, 22, 27, 29, 31, 878, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259, 1720, 1724, 1725], "fittiong": 6, "dl": 6, "el1": 6, "el2": 6, "el3": 6, "v_pred": 6, "compar": [6, 9, 14, 23, 32], "q_throat": 6, "a_throat": 6, "v_throat": 6, "g": [6, 20, 23, 26, 29, 30, 31, 33, 36, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 494, 503, 532, 559, 571, 579, 635, 648, 655, 662, 762, 763, 856, 858, 859, 860, 878, 884, 887, 889, 890, 891, 895, 898, 899, 901, 902, 907, 929, 930, 943, 944, 945, 962, 983, 984, 1001, 1022, 1039, 1060, 1077, 1098, 1117, 1138, 1139, 1156, 1176, 1177, 1178, 1195, 1216, 1233, 1254, 1271, 1293, 1301, 1322, 1333, 1356, 1367, 1390, 1401, 1423, 1431, 1452, 1463, 1484, 1492, 1512, 1520, 1540, 1548, 1569, 1580, 1602, 1610, 1631, 1642, 1664, 1672, 1721, 1764, 1777, 1882, 1889, 1915, 1916, 1919], "xdata": 6, "float": [6, 16, 20, 28, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 348, 352, 354, 382, 385, 387, 415, 418, 420, 448, 451, 453, 484, 485, 517, 542, 643, 659, 747, 749, 797, 799, 816, 825, 827, 828, 834, 840, 845, 864, 907, 922, 926, 927, 929, 930, 1059, 1097, 1253, 1321, 1355, 1389, 1451, 1568, 1630, 1720, 1728, 1746, 1750, 1777, 1779, 1905, 1914, 1915, 1916, 1917], "ydata": 6, "popt": 6, "pcov": 6, "p0": 6, "disp_coeff": 6, "v_fit": 6, "4e": [6, 26], "m": [6, 21, 23, 29, 35, 647, 683, 762, 825, 858, 859, 860, 864, 883, 884, 890, 891, 895, 902, 929, 930], "6581e": 6, "09": [6, 8, 29], "3610e": 6, "04": 6, "0669e": 6, "05": [6, 9, 29, 31, 680, 683, 878], "el": 6, "zero": [6, 20, 27, 28, 33, 648, 694, 696, 926, 929, 930, 943, 949, 950, 959, 961, 982, 988, 989, 998, 1000, 1021, 1026, 1027, 1036, 1038, 1059, 1064, 1065, 1074, 1076, 1097, 1102, 1103, 1114, 1116, 1137, 1143, 1144, 1153, 1155, 1176, 1182, 1183, 1192, 1194, 1215, 1220, 1221, 1230, 1232, 1253, 1258, 1259, 1268, 1270, 1721], "len": [6, 9, 10, 12, 29, 32, 494, 571, 635, 675, 771, 809, 812, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664], "torutous": 7, "complic": [7, 17, 20, 28, 29, 30, 31, 33], "multipli": [7, 9, 25, 30, 924, 926, 1710], "divid": [7, 12], "eff": [7, 8, 11, 130], "epsilon": [7, 862], "tau": 7, "correct": [7, 8, 10, 21, 23, 28, 29, 30, 32, 33, 494, 514, 571, 589, 590, 635, 637, 638, 905, 911, 945, 973, 974, 984, 1012, 1013, 1022, 1050, 1051, 1060, 1088, 1089, 1098, 1128, 1129, 1139, 1167, 1168, 1178, 1206, 1207, 1216, 1244, 1245, 1254, 1282, 1283, 1293, 1311, 1312, 1322, 1343, 1345, 1356, 1377, 1379, 1390, 1411, 1413, 1423, 1441, 1442, 1452, 1473, 1475, 1484, 1502, 1503, 1512, 1530, 1531, 1540, 1558, 1559, 1569, 1590, 1592, 1602, 1620, 1621, 1631, 1652, 1654, 1664, 1682, 1683], "windi": 7, "path": [7, 647, 651, 661, 665, 805, 806, 1726, 1887, 1888, 1892], "matter": 7, "move": [7, 9, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 492, 1097, 1253, 1709, 1714], "substanc": 7, "classic": [7, 196], "definit": [7, 15, 22, 23, 31, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 453, 484, 485, 1878], "actual": [7, 15, 16, 17, 18, 22, 23, 25, 27, 28, 29, 30, 31, 33, 647, 658, 662, 749, 753, 799, 834, 927, 1727, 1755, 1893], "realiti": [7, 23, 31], "mani": [7, 9, 15, 16, 18, 20, 25, 29, 31, 659, 826, 853, 907, 923, 982], "pathwai": 7, "thought": [7, 27, 33], "l_": 7, "repres": [7, 9, 18, 28, 30, 33, 493, 643, 715, 730, 749, 799, 834, 857, 929, 930, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259, 1450, 1511, 1710, 1711, 1747, 1749, 1915, 1916], "microstructur": 7, "materi": [7, 9, 11, 12, 26, 33, 58, 130, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 908, 1922], "toray090": 7, "carbon": 7, "paper": [7, 9], "sand": [7, 33], "stone": 7, "electrospun": 7, "fiber": 7, "sphere": [7, 9, 10, 23, 26, 29, 30, 34, 672, 674, 675, 700, 713, 715, 728, 730, 743, 771, 783, 846, 907, 1752, 1914], "cylind": [7, 9, 10, 23, 26, 29, 672, 675, 691, 693, 700, 705, 707, 713, 715, 720, 722, 728, 730, 771, 774, 776, 783, 907, 923, 1751, 1914], "all": [7, 9, 14, 15, 16, 17, 20, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 42, 44, 51, 52, 53, 56, 57, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 76, 83, 84, 85, 88, 89, 90, 91, 93, 98, 99, 100, 101, 103, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 130, 131, 132, 133, 134, 136, 143, 144, 145, 148, 149, 152, 153, 154, 155, 156, 158, 163, 164, 165, 166, 167, 169, 176, 177, 178, 181, 182, 185, 186, 187, 188, 189, 191, 196, 198, 199, 201, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 228, 229, 230, 231, 232, 234, 241, 242, 243, 246, 247, 250, 251, 252, 253, 254, 256, 261, 262, 263, 264, 265, 267, 274, 275, 276, 279, 280, 283, 284, 285, 286, 287, 289, 294, 295, 296, 297, 298, 300, 307, 308, 309, 312, 313, 316, 317, 318, 319, 320, 322, 327, 328, 329, 330, 331, 333, 340, 341, 342, 345, 346, 349, 350, 351, 352, 353, 354, 356, 361, 362, 363, 364, 365, 367, 374, 375, 376, 379, 380, 383, 384, 385, 386, 387, 389, 394, 395, 396, 397, 398, 400, 407, 408, 409, 412, 413, 416, 417, 418, 419, 420, 422, 427, 428, 429, 430, 431, 433, 440, 441, 442, 445, 446, 449, 450, 451, 452, 453, 455, 460, 461, 462, 463, 464, 466, 473, 474, 475, 478, 479, 482, 483, 484, 485, 487, 493, 494, 495, 497, 499, 506, 507, 508, 511, 512, 513, 514, 516, 519, 524, 525, 526, 528, 535, 536, 537, 540, 541, 542, 543, 544, 546, 552, 553, 554, 564, 570, 571, 572, 573, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 599, 600, 601, 602, 603, 604, 605, 608, 619, 620, 635, 636, 637, 638, 651, 655, 661, 662, 664, 745, 746, 758, 796, 814, 822, 823, 846, 853, 932, 943, 945, 946, 947, 949, 950, 951, 952, 954, 955, 956, 965, 966, 967, 968, 971, 972, 973, 974, 975, 977, 982, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1016, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1054, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1130, 1132, 1137, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1168, 1169, 1171, 1176, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1207, 1208, 1210, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1245, 1246, 1248, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1274, 1275, 1276, 1277, 1280, 1281, 1282, 1283, 1284, 1286, 1292, 1293, 1294, 1295, 1297, 1304, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1315, 1320, 1322, 1323, 1324, 1325, 1327, 1336, 1337, 1338, 1341, 1342, 1343, 1345, 1346, 1348, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1370, 1371, 1372, 1375, 1376, 1377, 1379, 1380, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1395, 1404, 1405, 1406, 1409, 1410, 1411, 1413, 1414, 1416, 1421, 1422, 1423, 1424, 1425, 1427, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1443, 1445, 1450, 1452, 1453, 1454, 1455, 1457, 1466, 1467, 1468, 1471, 1472, 1473, 1475, 1476, 1478, 1483, 1484, 1485, 1486, 1488, 1495, 1496, 1497, 1500, 1501, 1502, 1503, 1504, 1506, 1511, 1512, 1513, 1514, 1516, 1523, 1524, 1525, 1528, 1529, 1530, 1531, 1532, 1534, 1539, 1540, 1541, 1542, 1544, 1551, 1552, 1553, 1556, 1557, 1558, 1559, 1560, 1562, 1567, 1569, 1570, 1571, 1572, 1574, 1583, 1584, 1585, 1588, 1589, 1590, 1592, 1593, 1595, 1600, 1601, 1602, 1603, 1604, 1606, 1613, 1614, 1615, 1618, 1619, 1620, 1621, 1622, 1624, 1629, 1631, 1632, 1633, 1634, 1636, 1645, 1646, 1647, 1650, 1651, 1652, 1654, 1655, 1657, 1662, 1663, 1664, 1665, 1666, 1668, 1675, 1676, 1677, 1680, 1681, 1682, 1683, 1684, 1686, 1692, 1694, 1699, 1709, 1710, 1711, 1714, 1715, 1720, 1724, 1725, 1727, 1728, 1734, 1742, 1743, 1744, 1746, 1749, 1753, 1756, 1769, 1771, 1775, 1784, 1785, 1797, 1811, 1824, 1834, 1836, 1837, 1847, 1849, 1860, 1862, 1864, 1865, 1867, 1874, 1876, 1878, 1879, 1892, 1893, 1897, 1899, 1902, 1903, 1908, 1909, 1910, 1915, 1916, 1918], "notic": [7, 9, 31, 33], "0x7fd17c2dd030": 7, "180": [7, 11, 12, 25, 33, 762], "36": [7, 9, 26, 29, 31, 33], "thermophys": [7, 9, 31, 852, 1483], "about": [7, 9, 16, 17, 18, 22, 27, 28, 30, 31, 32, 33, 929, 930, 931, 933, 934, 935, 936, 937, 938, 966, 1005, 1043, 1081, 1121, 1160, 1199, 1237, 1275, 1728, 1746, 1747, 1748], "air": [7, 9, 11, 12, 17, 20, 31, 33, 34, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319], "easi": [7, 9, 14, 15, 16, 18, 22, 25, 28, 30, 982], "remov": [7, 18, 23, 25, 26, 29, 30, 33, 36, 55, 60, 61, 64, 87, 90, 91, 115, 120, 121, 122, 123, 147, 152, 153, 155, 180, 185, 186, 188, 213, 218, 219, 220, 221, 245, 250, 251, 253, 278, 283, 284, 286, 311, 316, 317, 319, 344, 349, 350, 353, 378, 383, 384, 386, 411, 416, 417, 419, 444, 449, 450, 452, 477, 482, 483, 492, 510, 516, 539, 543, 544, 563, 586, 591, 604, 608, 615, 620, 630, 949, 950, 970, 975, 982, 988, 989, 1009, 1014, 1026, 1027, 1047, 1052, 1059, 1064, 1065, 1085, 1090, 1097, 1102, 1103, 1125, 1130, 1143, 1144, 1164, 1169, 1182, 1183, 1203, 1208, 1220, 1221, 1241, 1246, 1253, 1258, 1259, 1279, 1284, 1308, 1313, 1340, 1344, 1346, 1374, 1378, 1380, 1408, 1412, 1414, 1438, 1443, 1470, 1474, 1476, 1499, 1504, 1527, 1532, 1555, 1560, 1587, 1591, 1593, 1617, 1622, 1649, 1653, 1655, 1679, 1684, 1714, 1716, 1720, 1725, 1754, 1761, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1785, 1792, 1797, 1804, 1811, 1818, 1824, 1830, 1836, 1842, 1849, 1855, 1862, 1865, 1866, 1872, 1879, 1880, 1891, 1898], "phy": [7, 863], "del": [7, 25, 30, 31, 1344, 1378, 1412, 1474, 1591, 1653], "purpos": [7, 15, 20, 21, 29, 31, 33, 817], "fickiandiffus": [7, 8, 11, 22, 34, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162], "fd": [7, 11, 22, 34], "requir": [7, 9, 11, 12, 13, 15, 17, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 123, 589, 637, 659, 823, 853, 907, 923, 927, 973, 982, 1012, 1050, 1088, 1128, 1167, 1206, 1215, 1244, 1282, 1311, 1343, 1377, 1411, 1441, 1473, 1483, 1502, 1530, 1558, 1590, 1620, 1652, 1682, 1710, 1735], "pretti": [7, 9, 30, 606, 1917, 1920], "much": [7, 20, 23, 25, 28, 29, 30, 32, 36, 1914], "everi": [7, 15, 16, 27, 29, 30, 31, 36, 1321, 1355, 1389, 1451, 1568, 1630, 1902, 1903], "specifi": [7, 18, 20, 22, 29, 30, 31, 33, 44, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 76, 83, 84, 85, 88, 90, 91, 93, 103, 110, 111, 112, 116, 120, 121, 122, 123, 125, 130, 136, 143, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 158, 169, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 189, 191, 197, 201, 208, 209, 210, 214, 218, 219, 220, 221, 223, 234, 241, 242, 243, 246, 248, 249, 250, 251, 252, 253, 254, 256, 267, 274, 275, 276, 279, 281, 282, 283, 284, 285, 286, 287, 289, 300, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 322, 333, 340, 341, 342, 345, 347, 349, 350, 352, 353, 354, 356, 367, 374, 375, 376, 379, 381, 383, 384, 385, 386, 387, 389, 400, 407, 408, 409, 412, 414, 416, 417, 418, 419, 420, 422, 427, 433, 440, 441, 442, 445, 447, 449, 450, 451, 452, 453, 455, 466, 473, 474, 475, 478, 480, 481, 482, 483, 484, 485, 487, 499, 506, 507, 508, 511, 513, 516, 517, 519, 528, 535, 536, 537, 540, 543, 544, 546, 552, 575, 582, 583, 584, 587, 589, 591, 593, 599, 600, 601, 602, 603, 604, 605, 637, 648, 651, 652, 659, 662, 663, 667, 740, 741, 745, 748, 749, 796, 798, 799, 822, 831, 834, 874, 875, 900, 905, 943, 944, 949, 950, 951, 952, 955, 956, 959, 961, 965, 967, 968, 971, 973, 975, 977, 982, 988, 989, 990, 991, 994, 995, 998, 1000, 1004, 1006, 1007, 1010, 1012, 1014, 1016, 1021, 1026, 1027, 1028, 1029, 1032, 1033, 1036, 1038, 1042, 1044, 1045, 1048, 1050, 1052, 1054, 1059, 1064, 1065, 1066, 1067, 1070, 1071, 1074, 1076, 1080, 1082, 1083, 1086, 1088, 1090, 1092, 1097, 1102, 1103, 1104, 1105, 1108, 1109, 1111, 1114, 1116, 1120, 1122, 1123, 1126, 1128, 1130, 1132, 1137, 1143, 1144, 1145, 1146, 1149, 1150, 1153, 1155, 1159, 1161, 1162, 1165, 1167, 1169, 1171, 1176, 1177, 1182, 1183, 1184, 1185, 1188, 1189, 1192, 1194, 1198, 1200, 1201, 1204, 1206, 1208, 1210, 1215, 1220, 1221, 1222, 1223, 1226, 1227, 1230, 1232, 1236, 1238, 1239, 1242, 1244, 1246, 1248, 1253, 1258, 1259, 1260, 1261, 1264, 1265, 1268, 1270, 1274, 1276, 1277, 1280, 1282, 1284, 1286, 1297, 1304, 1305, 1306, 1309, 1311, 1313, 1315, 1327, 1332, 1336, 1337, 1338, 1341, 1343, 1346, 1348, 1353, 1361, 1366, 1370, 1371, 1372, 1375, 1377, 1380, 1382, 1387, 1395, 1400, 1404, 1405, 1406, 1409, 1411, 1414, 1416, 1421, 1427, 1434, 1435, 1436, 1439, 1441, 1443, 1445, 1457, 1462, 1466, 1467, 1468, 1471, 1473, 1476, 1478, 1483, 1488, 1495, 1496, 1497, 1500, 1502, 1504, 1506, 1516, 1523, 1524, 1525, 1528, 1530, 1532, 1534, 1544, 1551, 1552, 1553, 1556, 1558, 1560, 1562, 1574, 1579, 1583, 1584, 1585, 1588, 1590, 1593, 1595, 1600, 1606, 1613, 1614, 1615, 1618, 1620, 1622, 1624, 1636, 1641, 1645, 1646, 1647, 1650, 1652, 1655, 1657, 1662, 1668, 1675, 1676, 1677, 1680, 1682, 1684, 1686, 1709, 1712, 1720, 1724, 1725, 1727, 1728, 1734, 1736, 1745, 1773, 1880, 1887, 1915, 1916], "c_in": [7, 8], "c_out": [7, 8], "attach": [7, 15, 25, 28, 30, 31, 655, 740, 745, 747, 748, 749, 796, 797, 798, 799, 822, 826, 827, 831, 834, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 1511, 1750, 1902, 1903], "know": [7, 9, 13, 15, 18, 23, 25, 26, 27, 28, 29, 31, 32, 33, 36], "take": [7, 23, 25, 27, 29, 31, 196, 1899], "interpol": [7, 32, 34, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 908, 922, 962, 1001, 1039, 1077, 1117, 1156, 1195, 1233, 1271, 1301, 1333, 1367, 1401, 1431, 1463, 1492, 1520, 1548, 1580, 1610, 1642, 1672], "pc": [7, 9, 11, 14, 31, 33, 853, 862, 883, 887, 889, 894, 898, 899, 901, 927, 1916], "tc": [7, 31, 853, 857, 858, 862, 869, 883, 890, 893, 894, 898, 899, 901], "interpolate_data": [7, 32], "size_bi": [7, 8, 26, 1915, 1916], "markers": [7, 8, 18, 26, 28, 1916, 1921], "400": [7, 26, 29], "linewidth": [7, 18, 26, 1915], "_": [7, 8, 16, 23, 33, 1915, 1916], "axi": [7, 8, 9, 29, 32, 624, 647, 826, 922, 1709, 1715, 1727, 1736, 1742, 1747, 1748, 1916], "off": [7, 8, 18, 33, 853, 1748], "fick": [7, 20, 23, 130, 715], "shown": [7, 9, 10, 16, 21, 22, 23, 26, 27, 28, 30, 32, 33, 34, 1915, 1916], "n_a": [7, 20, 715], "molar": [7, 857, 859, 864], "flow": [7, 11, 12, 14, 16, 18, 20, 23, 27, 28, 32, 294, 730, 905, 913, 920], "go": [7, 9, 13, 14, 23, 25, 29, 30], "give": [7, 23, 25, 27, 28, 32, 60, 90, 120, 152, 185, 218, 219, 221, 250, 283, 316, 349, 383, 416, 449, 482, 543, 803, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259, 1711, 1749, 1837, 1889], "mole": [7, 857, 866, 868, 872, 875, 876, 877, 900, 1321, 1324, 1332, 1353, 1355, 1358, 1366, 1387, 1389, 1392, 1400, 1421, 1451, 1454, 1462, 1568, 1571, 1579, 1600, 1630, 1633, 1641, 1662], "per": [7, 9, 860, 878, 884, 891, 895, 902, 920], "rate_inlet": 7, "5e": [7, 15, 26, 29, 32, 923, 924], "mol": [7, 856, 858, 859, 864, 869, 878, 880, 887, 889, 890, 898, 899, 901, 929, 930], "88846e": 7, "d_eff": [7, 8], "6e": 7, "776925e": 7, "measur": [7, 8], "varepsilon": 7, "But": [7, 30, 31], "pleas": [7, 8, 35], "v_p": 7, "v_t": 7, "v_bulk": 7, "prod": 7, "429901e": 7, "d_ab": 7, "270571e": 7, "00": [7, 22], "ratio": [8, 12, 23, 515, 706, 716, 721, 731, 762, 819, 924], "conducit": 8, "pure": [8, 27, 32, 327, 853, 858, 860, 883, 884, 887, 889, 890, 891, 893, 894, 895, 898, 899, 901, 902, 1321, 1355, 1389, 1451, 1568, 1630], "brine": 8, "sigma_": 8, "factior": 8, "299e": 8, "diff": [8, 29], "colour": [8, 34], "media": [8, 9, 35, 907, 920], "research": [8, 35, 920], "process": [8, 9, 12, 15, 20, 22, 25, 29, 30, 32, 494, 571, 635, 745, 796, 822, 903, 905, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1711, 1749], "substitut": [8, 23, 1698, 1759, 1760, 1782], "anoth": [8, 10, 11, 14, 18, 20, 25, 26, 27, 28, 30, 31, 33, 623, 853, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259, 1324, 1358, 1392, 1454, 1571, 1633, 1865, 1868, 1870, 1871, 1875], "electron": [8, 23, 228, 929, 930], "analag": 8, "sigma": [8, 9, 20, 857, 862, 875, 882, 900, 908, 924, 1332, 1366, 1400, 1462, 1579, 1641], "respect": [8, 23, 27, 31, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 502, 531, 558, 578, 652, 826, 929, 930, 960, 999, 1037, 1075, 1097, 1115, 1154, 1193, 1231, 1253, 1269, 1300, 1331, 1365, 1399, 1430, 1461, 1491, 1519, 1547, 1578, 1609, 1640, 1671, 1747, 1905, 1914], "pai": 8, "attent": 8, "mai": [8, 9, 10, 17, 20, 25, 27, 28, 29, 30, 31, 35, 60, 90, 120, 121, 123, 152, 185, 218, 219, 221, 250, 283, 316, 349, 383, 416, 449, 482, 494, 513, 543, 571, 635, 659, 740, 746, 748, 798, 831, 945, 984, 1022, 1059, 1060, 1097, 1098, 1139, 1178, 1216, 1253, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1727, 1728, 1746], "underestim": [8, 10], "r": [8, 9, 10, 11, 12, 26, 32, 33, 36, 598, 762, 763, 907, 908, 924, 931, 933, 934, 935, 936, 937, 938, 954, 993, 1031, 1059, 1069, 1107, 1148, 1187, 1225, 1253, 1263, 1728, 1736, 1746, 1747, 1915, 1916, 1919], "10089643222": 8, "porosimetri": [9, 33, 762], "mip": [9, 14, 33], "common": [9, 18, 25, 26, 27, 28, 29, 30, 952, 955, 956, 966, 991, 994, 995, 1005, 1029, 1032, 1033, 1043, 1067, 1070, 1071, 1081, 1105, 1108, 1109, 1121, 1146, 1149, 1150, 1160, 1185, 1188, 1189, 1199, 1223, 1226, 1227, 1237, 1261, 1264, 1265, 1275, 1720, 1724, 1725, 1750], "techniqu": 9, "There": [9, 17, 25, 26, 28, 29, 30, 31, 32, 648, 806], "why": [9, 15, 18, 25], "pnm": [9, 10, 20, 32, 33, 815, 1887, 1892, 1893], "accur": [9, 982], "univers": [9, 31], "interpret": [9, 25, 651, 932, 1736], "bundl": 9, "tube": [9, 32, 34, 763, 907, 908, 920, 923], "neglect": [9, 10, 33], "shield": [9, 26], "when": [9, 16, 18, 22, 25, 27, 28, 29, 30, 31, 33, 34, 51, 60, 83, 90, 110, 120, 143, 152, 176, 185, 208, 218, 241, 250, 261, 274, 283, 307, 316, 340, 349, 374, 383, 407, 416, 440, 449, 473, 482, 494, 506, 535, 543, 552, 571, 582, 600, 635, 663, 743, 746, 771, 794, 905, 922, 926, 945, 965, 984, 1004, 1022, 1042, 1060, 1080, 1098, 1120, 1139, 1159, 1178, 1198, 1216, 1236, 1254, 1274, 1293, 1304, 1322, 1336, 1356, 1370, 1390, 1404, 1423, 1434, 1452, 1466, 1484, 1495, 1512, 1523, 1540, 1551, 1569, 1583, 1602, 1613, 1631, 1645, 1664, 1675, 1699, 1726, 1750, 1760, 1782, 1834, 1893, 1902, 1903], "bodi": [9, 18, 26, 29, 32, 733, 734, 735, 736, 737, 738, 743, 751, 752, 753, 754, 755, 756, 757, 759, 760, 808, 809, 810, 813, 927, 943, 1902, 1903], "behind": [9, 17, 22, 25, 28, 31, 1511], "ones": [9, 25, 26, 28, 64, 155, 188, 253, 286, 319, 353, 386, 419, 452, 853, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259], "nuanc": 9, "usual": [9, 13, 17, 23, 27, 30], "becaus": [9, 10, 18, 23, 25, 27, 28, 29, 30, 31, 32, 33, 741, 746, 955, 956, 994, 995, 1032, 1033, 1070, 1071, 1108, 1109, 1149, 1150, 1188, 1189, 1226, 1227, 1264, 1265, 1724, 1725, 1837], "quit": [9, 13, 26, 28, 29, 33, 746, 944, 983, 1059, 1138, 1177, 1253], "bit": [9, 26, 30, 32, 33], "difficult": [9, 36, 944, 983, 1138, 1177], "accuraci": [9, 860, 884, 891, 895, 902], "justifi": 9, "often": [9, 25, 27, 28, 30, 31, 32], "wish": [9, 28, 29, 31, 1727], "specif": [9, 22, 23, 25, 28, 29, 30, 33, 40, 74, 101, 119, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 462, 513, 526, 651, 823, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259, 1708, 1727, 1742, 1777, 1779, 1834], "involv": [9, 23, 33], "successfulli": 9, "metric": [9, 10], "better": [9, 10, 12, 31, 34], "experiment": [9, 31, 33, 929, 930], "iter": [9, 22, 29, 38, 45, 70, 72, 77, 96, 98, 104, 128, 130, 137, 161, 163, 170, 194, 196, 202, 226, 228, 235, 259, 261, 268, 292, 294, 301, 325, 327, 334, 359, 361, 368, 392, 394, 401, 425, 427, 434, 458, 460, 467, 490, 500, 522, 524, 529, 549, 556, 568, 576, 596, 610, 617, 625, 632, 671, 672, 673, 674, 675, 676, 677, 746, 957, 980, 996, 1019, 1034, 1057, 1072, 1095, 1097, 1112, 1135, 1151, 1174, 1190, 1213, 1228, 1251, 1253, 1266, 1289, 1298, 1318, 1328, 1351, 1362, 1385, 1396, 1419, 1428, 1448, 1458, 1481, 1489, 1509, 1517, 1537, 1545, 1565, 1575, 1598, 1607, 1627, 1637, 1660, 1669, 1689, 1696, 1699, 1702, 1787, 1794, 1799, 1808, 1813, 1820, 1822, 1827, 1839, 1847, 1852, 1859, 1860, 1883, 1895], "until": [9, 17, 33, 746, 1775], "match": [9, 14, 21, 23, 27, 33, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1511, 1745], "panda": [9, 27, 656, 664], "pd": [9, 27], "stat": [9, 745, 747, 749, 796, 797, 799, 822, 827, 834], "w": [9, 16, 17, 18, 35, 647, 877, 890, 891, 920], "loglevel": [9, 10, 12, 23], "character": 9, "structur": [9, 25, 30, 33, 196, 647, 662, 741, 982], "reservoir": [9, 1710], "rock": [9, 647], "aid": 9, "serial": 9, "section": [9, 21, 22, 23, 27, 29, 32, 647, 694, 696, 734, 735, 736, 737, 738, 741, 751, 753, 767, 768, 769, 786, 787, 788, 789, 794, 808, 905, 913, 915, 916, 1729, 1759, 1760, 1762, 1764, 1766, 1773, 1777, 1779], "analysi": [9, 34, 647, 741], "tsakirogl": 9, "payatak": 9, "advanc": [9, 907, 923, 924], "resourc": [9, 25, 920], "23": [9, 26, 30, 33], "2000": 9, "773": 9, "789": 9, "figur": [9, 10, 11, 12, 23, 30, 1915, 1916, 1918], "graph": [9, 29, 31, 622, 623, 624, 648, 655, 846, 949, 950, 959, 988, 989, 998, 1026, 1027, 1036, 1064, 1065, 1074, 1102, 1103, 1114, 1143, 1144, 1153, 1182, 1183, 1192, 1220, 1221, 1230, 1258, 1259, 1268, 1918], "digit": 9, "sampl": [9, 1915, 1916], "df": 9, "read_csv": 9, "csv": [9, 645, 653, 661], "pa": [9, 14, 21, 31, 33, 856, 862, 863, 864, 883, 887, 889, 894, 898, 899, 901, 902], "s_hg": 9, "12056": 9, "00122": 9, "15162": 9, "00368": 9, "17630": 9, "00741": 9, "23693": 9, "00860": 9, "30708": 9, "01607": 9, "36799": 9, "01979": 9, "44633": 9, "02351": 9, "49752": 9, "02599": 9, "52522": 9, "03474": 9, "55439": 9, "05476": 9, "55449": 9, "05473": 9, "57820": 9, "06977": 9, "59569": 9, "09980": 9, "62089": 9, "16613": 9, "63563": 9, "22244": 9, "65092": 9, "25123": 9, "66585": 9, "37262": 9, "68232": 9, "34759": 9, "69833": 9, "42518": 9, "19": [9, 18, 26, 27, 30, 32, 33], "71069": 9, "47100": 9, "20": [9, 18, 26, 27, 29, 30, 33, 34, 929, 930, 982, 1918], "71085": 9, "45271": 9, "21": [9, 10, 18, 26, 27, 30, 31, 33], "76355": 9, "54039": 9, "22": [9, 26, 30, 33, 902], "76802": 9, "54156": 9, "101289": 9, "60534": 9, "24": [9, 26, 30, 33, 929, 930], "117732": 9, "63785": 9, "135188": 9, "67913": 9, "26": [9, 26, 28, 33, 955, 982, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "160014": 9, "70663": 9, "27": [9, 26, 33, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "203630": 9, "73037": 9, "28": [9, 26, 33, 680, 884], "222870": 9, "74787": 9, "29": [9, 26, 33], "267020": 9, "76787": 9, "30": [9, 18, 25, 26, 33], "348080": 9, "79660": 9, "31": [9, 18, 26, 31, 33, 680], "437710": 9, "80783": 9, "32": [9, 18, 25, 26, 33], "696280": 9, "83528": 9, "33": [9, 26, 33], "1148210": 9, "87899": 9, "34": [9, 26, 33], "1860000": 9, "90268": 9, "35": [9, 26, 33], "2352900": 9, "92016": 9, "3975500": 9, "94885": 9, "37": [9, 26, 29, 33], "5214900": 9, "95882": 9, "7353000": 9, "98253": 9, "39": [9, 33], "9821400": 9, "99375": 9, "11698800": 9, "99622": 9, "41": [9, 26, 33], "12884400": 9, "99620": 9, "42": [9, 26, 33], "15440700": 9, "99617": 9, "43": [9, 26, 33], "17108000": 9, "99865": 9, "45": [9, 25, 26, 33, 1748], "point": [9, 11, 12, 15, 18, 26, 27, 28, 29, 30, 31, 32, 34, 36, 119, 348, 382, 415, 448, 542, 643, 650, 745, 747, 749, 771, 796, 797, 799, 811, 819, 822, 824, 827, 833, 834, 838, 847, 851, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 927, 932, 938, 940, 941, 1059, 1097, 1253, 1714, 1717, 1727, 1728, 1733, 1735, 1736, 1746, 1748], "normal": [9, 10, 29, 30, 31, 36, 39, 60, 73, 90, 100, 120, 131, 152, 164, 185, 198, 218, 229, 250, 262, 283, 295, 316, 328, 349, 362, 383, 395, 416, 428, 449, 461, 482, 494, 497, 525, 543, 554, 571, 573, 635, 741, 853, 860, 884, 891, 893, 902, 945, 947, 984, 986, 1022, 1024, 1060, 1062, 1098, 1100, 1139, 1141, 1178, 1180, 1216, 1218, 1254, 1256, 1293, 1295, 1322, 1325, 1356, 1359, 1390, 1393, 1423, 1425, 1452, 1455, 1484, 1486, 1512, 1514, 1540, 1542, 1569, 1572, 1602, 1604, 1631, 1634, 1664, 1666, 1710, 1910, 1916], "befor": [9, 12, 28, 29, 30, 31, 33, 34, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 516, 544, 589, 591, 604, 623, 637, 853, 922, 973, 975, 1012, 1014, 1050, 1052, 1088, 1090, 1128, 1130, 1167, 1169, 1206, 1208, 1244, 1246, 1282, 1284, 1311, 1313, 1343, 1346, 1377, 1380, 1411, 1414, 1441, 1443, 1473, 1476, 1502, 1504, 1530, 1532, 1558, 1560, 1590, 1593, 1620, 1622, 1652, 1655, 1682, 1684, 1750, 1829, 1841, 1854], "good": [9, 16, 25, 26, 29], "idea": [9, 25, 26, 27], "convert": [9, 20, 21, 28, 29, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 456, 488, 520, 547, 566, 594, 655, 656, 664, 741, 857, 872, 878, 932, 953, 978, 992, 1017, 1030, 1055, 1068, 1093, 1106, 1133, 1147, 1172, 1186, 1211, 1224, 1249, 1262, 1287, 1316, 1349, 1383, 1417, 1446, 1479, 1507, 1535, 1563, 1596, 1625, 1658, 1687, 1699, 1714, 1721, 1728, 1753, 1756, 1899, 1908, 1909, 1910, 1911], "expect": [9, 15, 16, 26, 29, 31, 1878], "co": [9, 823, 908, 924], "deg2rad": 9, "140": [9, 26, 33, 683], "semilogx": [9, 14], "1e6": 9, "um": [9, 29], "aim": [9, 32], "futur": [9, 16, 959, 961, 998, 1000, 1036, 1038, 1074, 1076, 1114, 1116, 1153, 1155, 1192, 1194, 1215, 1230, 1232, 1268, 1270], "sake": [9, 23, 27], "close": [9, 29, 31, 32, 659, 663, 926], "30e": 9, "0x7fc14333f510": 9, "3375": 9, "9450": 9, "225": [9, 33], "zmin": [9, 14, 26, 29], "zmax": [9, 14, 26, 29], "1178": 9, "2352": 9, "bottom": [9, 14, 17, 18, 26, 28, 29, 983, 1138, 1742], "top": [9, 14, 17, 25, 26, 27, 29, 30, 983, 1138, 1742, 1748], "topolog": [9, 29, 31, 835, 841, 842, 843, 1215, 1743, 1898, 1915, 1916], "shine": 9, "light": 9, "them": [9, 13, 15, 16, 18, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 494, 552, 571, 635, 945, 984, 1022, 1060, 1097, 1098, 1139, 1178, 1216, 1253, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1709, 1712, 1737, 1742, 1749, 1750, 1833, 1845, 1858], "conveni": [9, 27, 28, 30, 31, 32, 33, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 513, 543, 929, 930, 1736], "pre": [9, 21, 22, 27, 29, 31, 33, 715, 730], "hand": [9, 20, 23, 25, 26, 28, 29, 31, 32, 33, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 460, 1699], "possibl": [9, 17, 22, 25, 26, 27, 28, 29, 30, 31, 36, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543, 623, 811, 812, 955, 956, 994, 995, 1032, 1033, 1059, 1070, 1071, 1108, 1109, 1149, 1150, 1188, 1189, 1226, 1227, 1253, 1264, 1265, 1699, 1713, 1724, 1725, 1745, 1834, 1915], "produc": [9, 14, 29, 32, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 461, 494, 497, 525, 554, 571, 573, 635, 747, 749, 797, 799, 827, 834, 929, 930, 945, 947, 984, 986, 1022, 1024, 1059, 1060, 1062, 1098, 1100, 1139, 1141, 1178, 1180, 1216, 1218, 1253, 1254, 1256, 1293, 1295, 1322, 1325, 1356, 1359, 1390, 1393, 1423, 1425, 1452, 1455, 1483, 1484, 1486, 1512, 1514, 1540, 1542, 1569, 1572, 1602, 1604, 1631, 1634, 1664, 1666, 1753, 1756, 1887, 1892, 1915, 1916], "directli": [9, 17, 22, 23, 25, 27, 28, 29, 30, 31, 33, 856, 857, 858, 859, 860, 862, 863, 864, 867, 869, 878, 880, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 898, 899, 901, 902, 944, 983, 1138, 1177, 1253, 1725, 1748], "arg": [9, 27, 38, 54, 72, 86, 98, 114, 130, 146, 163, 179, 196, 212, 228, 244, 261, 277, 294, 310, 327, 343, 361, 377, 394, 410, 427, 443, 460, 476, 493, 509, 524, 538, 553, 562, 570, 585, 619, 634, 943, 969, 982, 1008, 1021, 1046, 1059, 1084, 1097, 1124, 1137, 1163, 1176, 1202, 1215, 1240, 1253, 1278, 1292, 1307, 1320, 1339, 1354, 1373, 1388, 1407, 1422, 1437, 1450, 1469, 1483, 1498, 1511, 1526, 1539, 1554, 1567, 1586, 1601, 1616, 1629, 1648, 1663, 1678, 1714, 1758, 1761, 1762, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1778, 1780, 1781, 1783, 1810, 1834, 1846, 1878, 1901], "howev": [9, 10, 11, 12, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 52, 53, 84, 85, 111, 112, 144, 145, 177, 178, 196, 209, 210, 242, 243, 275, 276, 308, 309, 341, 342, 375, 376, 408, 409, 441, 442, 474, 475, 507, 508, 536, 537, 583, 584, 601, 602, 853, 967, 968, 1006, 1007, 1044, 1045, 1082, 1083, 1122, 1123, 1161, 1162, 1200, 1201, 1238, 1239, 1276, 1277, 1305, 1306, 1337, 1338, 1371, 1372, 1405, 1406, 1435, 1436, 1467, 1468, 1496, 1497, 1524, 1525, 1552, 1553, 1584, 1585, 1614, 1615, 1646, 1647, 1676, 1677], "later": [9, 14, 15, 23, 26, 27, 29, 30, 1750], "rand": [9, 15, 20, 22, 29, 31, 745, 747, 749, 796, 797, 799, 822, 823, 827, 834, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259], "mostli": [9, 27, 28, 817, 1710], "long": [9, 15, 25, 27, 29, 30, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 456, 488, 520, 547, 566, 594, 823, 838, 949, 954, 978, 988, 993, 1017, 1026, 1031, 1055, 1059, 1064, 1069, 1093, 1102, 1107, 1133, 1143, 1148, 1172, 1182, 1187, 1211, 1220, 1225, 1249, 1258, 1263, 1287, 1316, 1321, 1349, 1355, 1383, 1389, 1417, 1446, 1451, 1479, 1507, 1535, 1563, 1568, 1596, 1625, 1630, 1658, 1687, 1719, 1723], "tail": [9, 15, 29, 740, 748, 798, 831, 1215], "few": [9, 14, 15, 18, 25, 26, 28, 29, 30, 33, 552, 857], "typic": [9, 857, 927, 1878], "dst": 9, "20e": 9, "what": [9, 15, 17, 18, 22, 23, 25, 27, 28, 29, 30, 31, 36, 853, 922, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259, 1742], "frozen": [9, 745, 796, 822], "chose": 9, "decent": [9, 624], "request": [9, 27, 28, 31, 32, 47, 48, 56, 67, 79, 80, 88, 93, 106, 107, 116, 125, 139, 140, 148, 158, 172, 173, 181, 191, 204, 205, 214, 223, 237, 238, 246, 256, 270, 271, 279, 289, 303, 304, 312, 322, 336, 337, 345, 356, 370, 371, 379, 389, 403, 404, 412, 422, 436, 437, 445, 455, 469, 470, 478, 487, 502, 503, 511, 514, 519, 531, 532, 540, 546, 558, 559, 578, 579, 587, 590, 593, 603, 605, 638, 874, 959, 960, 961, 962, 971, 974, 977, 998, 999, 1000, 1001, 1010, 1013, 1016, 1036, 1037, 1038, 1039, 1048, 1051, 1054, 1074, 1075, 1076, 1077, 1086, 1089, 1092, 1114, 1115, 1116, 1117, 1126, 1129, 1132, 1153, 1154, 1155, 1156, 1165, 1168, 1171, 1192, 1193, 1194, 1195, 1204, 1207, 1210, 1230, 1231, 1232, 1233, 1242, 1245, 1248, 1253, 1268, 1269, 1270, 1271, 1280, 1283, 1286, 1300, 1301, 1309, 1312, 1315, 1330, 1331, 1332, 1333, 1341, 1345, 1348, 1353, 1364, 1365, 1366, 1367, 1375, 1379, 1382, 1387, 1398, 1399, 1400, 1401, 1409, 1413, 1416, 1421, 1430, 1431, 1439, 1442, 1445, 1460, 1461, 1462, 1463, 1471, 1475, 1478, 1491, 1492, 1500, 1503, 1506, 1519, 1520, 1528, 1531, 1534, 1547, 1548, 1556, 1559, 1562, 1577, 1578, 1579, 1580, 1588, 1592, 1595, 1600, 1609, 1610, 1618, 1621, 1624, 1639, 1640, 1641, 1642, 1650, 1654, 1657, 1662, 1671, 1672, 1680, 1683, 1686], "randomli": [9, 29, 1728, 1745], "10000": [9, 11, 747, 749, 797, 799, 827, 834], "tick_param": 9, "labelrot": 9, "nm": [9, 29], "posit": [9, 23, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 806, 1750], "within": [9, 12, 25, 27, 29, 31, 32, 622, 816, 845, 884, 891, 927, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1713, 1728, 1744, 1750], "lastli": [9, 28, 30, 31], "control": [9, 14, 27, 29, 33, 39, 44, 50, 51, 58, 60, 61, 62, 63, 64, 65, 73, 76, 82, 83, 90, 91, 100, 103, 109, 110, 120, 122, 130, 131, 136, 142, 143, 150, 152, 153, 154, 155, 156, 164, 169, 175, 176, 183, 185, 186, 187, 188, 189, 198, 201, 207, 208, 218, 219, 220, 221, 229, 234, 240, 241, 248, 250, 251, 252, 253, 254, 262, 267, 273, 274, 281, 283, 284, 285, 286, 287, 295, 300, 306, 307, 314, 316, 317, 318, 319, 320, 328, 333, 339, 340, 347, 349, 350, 351, 352, 353, 354, 362, 367, 373, 374, 381, 383, 384, 385, 386, 387, 395, 400, 406, 407, 414, 416, 417, 418, 419, 420, 428, 433, 439, 440, 447, 449, 450, 451, 452, 453, 461, 466, 472, 473, 480, 482, 483, 484, 485, 497, 499, 505, 506, 516, 525, 528, 534, 535, 543, 544, 554, 561, 573, 575, 581, 582, 591, 599, 600, 604, 740, 741, 744, 745, 747, 748, 749, 792, 795, 796, 797, 798, 799, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 947, 951, 954, 964, 965, 975, 986, 990, 993, 1003, 1004, 1014, 1024, 1028, 1031, 1041, 1042, 1052, 1062, 1066, 1069, 1079, 1080, 1090, 1100, 1104, 1107, 1119, 1120, 1130, 1141, 1145, 1148, 1158, 1159, 1169, 1180, 1184, 1187, 1197, 1198, 1208, 1218, 1222, 1225, 1235, 1236, 1246, 1256, 1260, 1263, 1273, 1274, 1284, 1295, 1297, 1303, 1304, 1313, 1325, 1327, 1335, 1336, 1346, 1359, 1361, 1369, 1370, 1380, 1393, 1395, 1403, 1404, 1414, 1425, 1427, 1433, 1434, 1443, 1455, 1457, 1465, 1466, 1476, 1486, 1488, 1494, 1495, 1504, 1514, 1516, 1522, 1523, 1532, 1542, 1544, 1550, 1551, 1560, 1572, 1574, 1582, 1583, 1593, 1604, 1606, 1612, 1613, 1622, 1634, 1636, 1644, 1645, 1655, 1666, 1668, 1674, 1675, 1684, 1710, 1712, 1728, 1736, 1746, 1878, 1915, 1916, 1918], "skew": [9, 749, 799, 834], "slighli": 9, "elong": 9, "noth": [9, 28, 99, 1866], "too": [9, 10, 27, 1324, 1358, 1392, 1454, 1571, 1633, 1915], "extrem": [9, 25, 740, 748, 798, 831], "larger": [9, 20, 23, 29, 33], "revisit": [9, 22], "examin": [9, 21], "cdf": 9, "red": [9, 28, 1915, 1916], "ppf": [9, 29, 745, 747, 749, 796, 797, 799, 822, 827, 834], "firstli": 9, "prevent": [9, 16, 29, 31, 740, 748, 798, 831, 1059], "abnorm": [9, 810, 1744], "far": [9, 10, 23, 29, 30, 1736], "out": [9, 11, 12, 20, 23, 25, 27, 28, 29, 31, 32, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 510, 539, 563, 586, 615, 630, 871, 970, 1009, 1047, 1085, 1125, 1164, 1203, 1241, 1279, 1308, 1340, 1374, 1408, 1438, 1470, 1499, 1527, 1555, 1587, 1617, 1649, 1679, 1773, 1792, 1804, 1818, 1830, 1842, 1855, 1891], "end": [9, 10, 23, 27, 28, 29, 32, 715, 730, 740, 748, 771, 798, 811, 812, 831, 849, 853, 905, 1714, 1746, 1755, 1823, 1834, 1835, 1848, 1902, 1903], "choosen": 9, "9999": 9, "seconli": 9, "bewteen": 9, "fractal_nois": 9, "won": [9, 36], "anisotrop": 9, "issu": [9, 18, 666], "current": [9, 17, 18, 22, 26, 31, 34, 38, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 647, 929, 930, 931, 933, 934, 935, 936, 937, 938, 1750, 1837, 1887, 1888, 1892, 1893], "haven": 9, "n": [9, 20, 23, 25, 28, 31, 33, 648, 713, 728, 763, 818, 863, 864, 883, 884, 907, 929, 930, 954, 955, 993, 994, 1031, 1032, 1059, 1069, 1070, 1097, 1107, 1108, 1148, 1149, 1187, 1188, 1225, 1226, 1253, 1263, 1264, 1711, 1714, 1717, 1726, 1727, 1736, 1737, 1749, 1755, 1773], "repeat": [9, 33, 844], "recomput": [9, 29], "depend": [9, 10, 20, 23, 27, 31, 33, 36, 494, 571, 622, 623, 624, 635, 662, 905, 929, 930, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664], "forth": 9, "leverag": [9, 31], "featur": [9, 15, 16, 17, 22, 25, 27, 28, 29, 30, 36, 552, 619, 647, 922, 1059, 1097, 1253], "ie": [9, 853], "generic_distribut": 9, "accept": [9, 16, 27, 30, 44, 50, 51, 52, 53, 56, 67, 76, 82, 83, 84, 85, 88, 93, 103, 109, 110, 111, 112, 116, 125, 136, 142, 143, 144, 145, 148, 158, 169, 175, 176, 177, 178, 181, 191, 201, 207, 208, 209, 210, 214, 223, 234, 240, 241, 242, 243, 246, 256, 267, 273, 274, 275, 276, 279, 289, 300, 306, 307, 308, 309, 312, 322, 333, 339, 340, 341, 342, 345, 356, 367, 373, 374, 375, 376, 379, 389, 400, 406, 407, 408, 409, 412, 422, 433, 439, 440, 441, 442, 445, 455, 466, 472, 473, 474, 475, 478, 487, 499, 505, 506, 507, 508, 511, 519, 528, 534, 535, 536, 537, 540, 546, 561, 575, 581, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 745, 747, 796, 797, 822, 827, 932, 951, 952, 955, 956, 964, 965, 966, 967, 968, 971, 977, 990, 991, 994, 995, 1003, 1004, 1005, 1006, 1007, 1010, 1016, 1028, 1029, 1032, 1033, 1041, 1042, 1043, 1044, 1045, 1048, 1054, 1066, 1067, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1086, 1092, 1104, 1105, 1108, 1109, 1119, 1120, 1121, 1122, 1123, 1126, 1132, 1145, 1146, 1149, 1150, 1158, 1159, 1160, 1161, 1162, 1165, 1171, 1184, 1185, 1188, 1189, 1197, 1198, 1199, 1200, 1201, 1204, 1210, 1222, 1223, 1226, 1227, 1235, 1236, 1237, 1238, 1239, 1242, 1248, 1260, 1261, 1264, 1265, 1273, 1274, 1275, 1276, 1277, 1280, 1286, 1297, 1303, 1304, 1305, 1306, 1309, 1315, 1327, 1335, 1336, 1337, 1338, 1341, 1348, 1361, 1369, 1370, 1371, 1372, 1375, 1382, 1395, 1403, 1404, 1405, 1406, 1409, 1416, 1427, 1433, 1434, 1435, 1436, 1439, 1445, 1457, 1465, 1466, 1467, 1468, 1471, 1478, 1488, 1494, 1495, 1496, 1497, 1500, 1506, 1516, 1522, 1523, 1524, 1525, 1528, 1534, 1544, 1550, 1551, 1552, 1553, 1556, 1562, 1574, 1582, 1583, 1584, 1585, 1588, 1595, 1606, 1612, 1613, 1614, 1615, 1618, 1624, 1636, 1644, 1645, 1646, 1647, 1650, 1657, 1668, 1674, 1675, 1676, 1677, 1680, 1686, 1720, 1724, 1725], "initi": [9, 10, 16, 17, 22, 29, 32, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 542, 643], "truncat": [9, 29, 694, 699, 705, 707, 708, 714, 720, 722, 723, 729], "98": [9, 33], "func": [9, 745, 747, 749, 796, 797, 799, 822, 823, 827, 834, 1759], "strictli": 9, "pictur": 9, "simpler": 9, "d1": 9, "d2": 9, "taken": [9, 23, 29, 31, 745, 796, 806, 822, 1567, 1629, 1714], "those": [9, 15, 28, 30, 34, 348, 382, 415, 448, 513, 542, 651, 741, 744, 792, 795, 820, 821, 952, 955, 956, 966, 991, 994, 995, 1005, 1029, 1032, 1033, 1043, 1067, 1070, 1071, 1081, 1105, 1108, 1109, 1121, 1146, 1149, 1150, 1160, 1185, 1188, 1189, 1199, 1223, 1226, 1227, 1237, 1261, 1264, 1265, 1275, 1718, 1720, 1724, 1725], "desir": [9, 15, 27, 28, 29, 30, 31, 494, 571, 622, 635, 652, 654, 658, 659, 663, 665, 667, 874, 945, 949, 950, 984, 988, 989, 1021, 1022, 1026, 1027, 1059, 1060, 1064, 1065, 1098, 1102, 1103, 1139, 1143, 1144, 1178, 1182, 1183, 1216, 1220, 1221, 1253, 1254, 1258, 1259, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1745, 1915, 1916], "same": [9, 11, 12, 16, 17, 20, 23, 25, 26, 28, 29, 30, 31, 32, 33, 60, 63, 65, 90, 120, 152, 154, 156, 185, 187, 189, 218, 219, 221, 250, 252, 254, 283, 285, 287, 316, 318, 320, 349, 352, 354, 383, 385, 387, 416, 418, 420, 449, 451, 453, 482, 484, 485, 495, 543, 572, 636, 664, 665, 743, 794, 811, 812, 849, 857, 907, 923, 929, 930, 946, 953, 966, 985, 992, 1005, 1021, 1023, 1030, 1043, 1061, 1068, 1081, 1099, 1106, 1121, 1140, 1147, 1160, 1179, 1186, 1199, 1217, 1224, 1237, 1255, 1262, 1275, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1711, 1712, 1715, 1719, 1721, 1734, 1736, 1737, 1749, 1847, 1860, 1878, 1899, 1918], "diameter_1": 9, "And": [9, 15, 20, 22, 25, 26, 27, 29, 30, 32], "becom": [9, 20, 23, 28, 30, 926, 1902, 1903], "offici": [9, 25, 36, 492], "togeth": [9, 18, 22, 29, 30, 32, 33, 647], "densiti": [9, 14, 29, 31, 680, 683, 684, 856, 857, 858, 859, 860, 882, 929, 930], "true": [9, 10, 16, 22, 25, 26, 27, 28, 29, 30, 33, 56, 62, 67, 68, 69, 88, 93, 94, 95, 99, 116, 125, 126, 127, 148, 158, 159, 160, 181, 191, 192, 193, 197, 214, 223, 224, 225, 246, 256, 257, 258, 279, 289, 290, 291, 312, 322, 323, 324, 345, 351, 356, 357, 358, 379, 389, 390, 391, 412, 422, 423, 424, 445, 455, 456, 457, 478, 487, 488, 489, 511, 519, 520, 521, 540, 546, 547, 548, 552, 566, 567, 587, 593, 594, 595, 603, 605, 664, 690, 695, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 724, 727, 731, 732, 734, 738, 792, 795, 804, 820, 821, 846, 949, 950, 952, 954, 955, 956, 966, 971, 977, 978, 979, 988, 989, 991, 993, 994, 995, 1005, 1010, 1016, 1017, 1018, 1021, 1026, 1027, 1029, 1031, 1032, 1033, 1043, 1048, 1054, 1055, 1056, 1059, 1064, 1065, 1067, 1069, 1070, 1071, 1081, 1086, 1092, 1093, 1094, 1097, 1102, 1103, 1105, 1107, 1108, 1109, 1121, 1126, 1132, 1133, 1134, 1143, 1144, 1146, 1148, 1149, 1150, 1160, 1165, 1171, 1172, 1173, 1182, 1183, 1185, 1187, 1188, 1189, 1199, 1204, 1210, 1211, 1212, 1220, 1221, 1223, 1225, 1226, 1227, 1237, 1242, 1248, 1249, 1250, 1253, 1258, 1259, 1261, 1263, 1264, 1265, 1275, 1280, 1286, 1287, 1288, 1309, 1315, 1316, 1317, 1324, 1341, 1348, 1349, 1350, 1358, 1375, 1382, 1383, 1384, 1392, 1409, 1416, 1417, 1418, 1439, 1445, 1446, 1447, 1454, 1471, 1478, 1479, 1480, 1500, 1506, 1507, 1508, 1528, 1534, 1535, 1536, 1556, 1562, 1563, 1564, 1571, 1588, 1595, 1596, 1597, 1618, 1624, 1625, 1626, 1633, 1650, 1657, 1658, 1659, 1680, 1686, 1687, 1688, 1711, 1714, 1715, 1716, 1720, 1723, 1724, 1725, 1728, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1745, 1749, 1869, 1897, 1905, 1908, 1909, 1916, 1917], "alpha": [9, 29, 34, 922, 924, 1915, 1916, 1917], "fulli": [9, 32, 33, 36, 926, 1110, 1734], "assumpt": [9, 23, 806], "cube": [9, 10, 673, 692, 706, 721, 743, 775, 1914], "thing": [9, 16, 27, 28, 29, 30, 31, 33, 36, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 461, 497, 525, 554, 573, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1325, 1359, 1393, 1425, 1455, 1486, 1514, 1542, 1572, 1604, 1634, 1666], "region": [9, 10, 29, 949, 988, 1026, 1064, 1102, 1143, 1182, 1220, 1258, 1915, 1916], "whose": [9, 51, 56, 67, 83, 88, 93, 110, 116, 125, 143, 148, 158, 176, 181, 191, 208, 214, 223, 241, 246, 256, 274, 279, 289, 307, 312, 322, 340, 345, 356, 374, 379, 389, 407, 412, 422, 440, 445, 455, 473, 478, 487, 506, 511, 513, 517, 519, 535, 540, 546, 582, 587, 593, 600, 603, 605, 663, 667, 833, 953, 955, 956, 965, 966, 971, 977, 992, 994, 995, 1004, 1005, 1010, 1016, 1030, 1032, 1033, 1042, 1043, 1048, 1054, 1068, 1070, 1071, 1080, 1081, 1086, 1092, 1106, 1108, 1109, 1110, 1111, 1120, 1121, 1126, 1132, 1147, 1149, 1150, 1159, 1160, 1165, 1171, 1186, 1188, 1189, 1198, 1199, 1204, 1210, 1224, 1226, 1227, 1236, 1237, 1242, 1248, 1262, 1264, 1265, 1274, 1275, 1280, 1286, 1304, 1309, 1315, 1336, 1341, 1348, 1370, 1375, 1382, 1404, 1409, 1416, 1434, 1439, 1445, 1466, 1471, 1478, 1495, 1500, 1506, 1523, 1528, 1534, 1551, 1556, 1562, 1583, 1588, 1595, 1613, 1618, 1624, 1645, 1650, 1657, 1675, 1680, 1686, 1720, 1724, 1725, 1734, 1736, 1745, 1759, 1915, 1916], "twice": 9, "throat_length": [9, 10, 29, 671, 672, 673, 674, 675, 676, 677, 801, 802, 803, 804, 808, 809, 810, 813], "invad": [9, 11, 12, 33, 99, 121, 196, 219, 908, 922, 926, 927, 1723], "tension": [9, 11, 12, 33, 864, 882, 883, 884, 907, 908, 922], "cours": [9, 25, 28, 30, 36], "hg": [9, 14, 33], "calul": 9, "capillari": [9, 11, 14, 33, 211, 762, 763, 903, 907, 908, 920, 922, 923, 924, 927], "washburn": [9, 14, 33, 686, 687, 924, 927], "p_c": [9, 33, 908, 924], "theta": [9, 908, 924], "r_t": [9, 920], "capillary_pressur": [9, 14, 33], "contact": [9, 10, 11, 12, 33, 812, 907, 908, 922], "angl": [9, 11, 12, 33, 907, 908, 922], "while": [9, 16, 17, 25, 26, 27, 31, 33, 38, 61, 72, 91, 98, 122, 130, 153, 163, 186, 196, 220, 228, 251, 261, 284, 294, 317, 327, 350, 361, 384, 394, 417, 427, 450, 460, 483, 516, 524, 544, 591, 604, 929, 930, 975, 1014, 1021, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684], "radiu": [9, 29, 32, 34, 907, 922, 923, 924, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1728, 1736, 1750, 1751, 1752], "setup": [9, 33], "wet": [9, 11, 12, 33, 211, 763, 908, 920, 927], "rarefi": 9, "drain": [9, 33], "non": [9, 11, 12, 20, 22, 27, 28, 33, 211, 847, 908, 927, 943, 949, 950, 959, 961, 982, 988, 989, 998, 1000, 1021, 1026, 1027, 1036, 1038, 1059, 1064, 1065, 1074, 1076, 1097, 1102, 1103, 1114, 1116, 1137, 1143, 1144, 1153, 1155, 1176, 1182, 1183, 1192, 1194, 1215, 1220, 1221, 1230, 1232, 1253, 1258, 1259, 1268, 1270, 1715, 1721], "consid": [9, 16, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 123, 221, 746, 753, 811, 812, 840, 845, 913, 955, 956, 994, 995, 1032, 1033, 1070, 1071, 1108, 1109, 1149, 1150, 1188, 1189, 1215, 1226, 1227, 1264, 1265, 1711, 1715, 1719, 1723, 1724, 1727, 1736, 1755, 1784, 1915, 1916], "class": [9, 15, 16, 17, 21, 25, 27, 28, 30, 32, 33, 34, 37, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 492, 493, 524, 551, 553, 570, 598, 606, 619, 634, 639, 640, 641, 642, 648, 651, 652, 920, 942, 943, 982, 1021, 1059, 1097, 1137, 1176, 1215, 1253, 1291, 1292, 1320, 1354, 1388, 1422, 1450, 1483, 1511, 1539, 1567, 1601, 1629, 1663, 1691, 1692, 1694, 1696, 1698, 1700, 1702, 1704, 1706, 1758, 1784, 1796, 1810, 1822, 1834, 1846, 1847, 1859, 1860, 1878, 1893, 1902, 1903, 1904, 1915], "set_inlet_bc": [9, 11, 12, 14, 33], "pc_sim": 9, "pc_curv": [9, 14, 33, 98], "agreement": 9, "surprizingli": 9, "guess": [9, 22, 59, 151, 184, 249, 282, 315, 481], "littl": [9, 26, 27], "shift": [9, 29, 30, 1709], "recal": [9, 22, 29, 32], "took": 9, "readd": 9, "over": [9, 11, 12, 23, 29, 30, 34, 741, 853, 857, 871, 1698, 1878], "old": [9, 25, 1748], "still": [9, 16, 22, 26, 33, 36], "great": [9, 30], "peopl": [9, 25], "year": 9, "autom": [9, 647], "doe": [9, 16, 17, 22, 27, 28, 29, 31, 32, 33, 61, 62, 68, 70, 91, 94, 96, 122, 126, 128, 153, 159, 161, 186, 192, 194, 197, 220, 224, 226, 251, 257, 259, 284, 290, 292, 317, 323, 325, 350, 351, 357, 359, 384, 390, 392, 417, 423, 425, 450, 456, 458, 483, 488, 490, 516, 520, 522, 544, 547, 549, 566, 568, 591, 594, 596, 604, 617, 632, 648, 666, 808, 809, 810, 811, 812, 813, 846, 927, 975, 978, 980, 1014, 1017, 1019, 1052, 1055, 1057, 1059, 1090, 1093, 1095, 1130, 1133, 1135, 1169, 1172, 1174, 1208, 1211, 1213, 1246, 1249, 1251, 1253, 1284, 1287, 1289, 1313, 1316, 1318, 1346, 1349, 1351, 1380, 1383, 1385, 1414, 1417, 1419, 1443, 1446, 1448, 1476, 1479, 1481, 1504, 1507, 1509, 1532, 1535, 1537, 1560, 1563, 1565, 1593, 1596, 1598, 1622, 1625, 1627, 1655, 1658, 1660, 1684, 1687, 1689, 1727, 1747, 1794, 1808, 1820, 1880, 1895, 1898, 1918], "least": [9, 13, 25, 1727, 1735], "moment": [9, 23], "forg": [9, 36], "ahead": 9, "try": [9, 16, 18, 25, 27, 34], "slightli": [9, 23, 27, 33], "higher": [9, 12, 26, 32, 33, 99, 806, 860, 884, 891, 902], "plai": 9, "22e": 9, "improv": [9, 1914], "teh": 9, "nearli": [9, 31], "perfect": 9, "Of": [9, 28, 36], "high": [9, 10, 29, 33, 740, 748, 798, 831, 982, 1324, 1358, 1392, 1454, 1571, 1633], "dicuss": 9, "dual": [9, 26, 27], "microporos": 9, "resolv": [9, 31, 619], "greater": [9, 29, 1253], "besid": 9, "inconsist": 9, "aris": [9, 27], "max": [9, 12, 29, 30, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 744, 792, 795, 820, 821, 922, 923, 924, 962, 1001, 1039, 1077, 1117, 1156, 1195, 1233, 1271, 1301, 1333, 1367, 1401, 1431, 1463, 1492, 1520, 1548, 1580, 1610, 1642, 1672], "079377537427984e": 9, "1974596571409195e": 9, "remedi": [9, 28, 746], "increas": [9, 33, 34, 746, 907, 923, 927, 1914, 1915], "entir": [9, 23, 27, 30, 31, 33, 905, 1734, 1768, 1773], "simpli": [9, 28, 30, 753, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259], "coordin": [9, 26, 27, 28, 29, 34, 648, 693, 694, 695, 696, 697, 698, 707, 708, 709, 710, 711, 712, 722, 723, 724, 726, 727, 764, 765, 771, 776, 778, 779, 780, 781, 943, 982, 1021, 1059, 1097, 1137, 1176, 1215, 1253, 1715, 1717, 1718, 1727, 1728, 1729, 1730, 1733, 1736, 1745, 1746, 1747, 1748, 1750, 1915, 1916, 1919], "681583689206006e": 9, "suitabl": [9, 28, 747, 749, 797, 799, 804, 827, 834, 908, 1720, 1889, 1919], "present": [9, 18, 20, 26, 27, 28, 30, 31, 44, 51, 52, 53, 56, 60, 67, 70, 76, 83, 84, 85, 88, 90, 93, 96, 103, 110, 111, 112, 116, 120, 121, 123, 125, 128, 136, 143, 144, 145, 148, 152, 158, 161, 169, 176, 177, 178, 181, 185, 191, 194, 201, 208, 209, 210, 214, 218, 219, 221, 223, 226, 234, 241, 242, 243, 246, 250, 256, 259, 267, 274, 275, 276, 279, 283, 289, 292, 300, 307, 308, 309, 312, 316, 322, 325, 333, 340, 341, 342, 345, 349, 356, 359, 367, 374, 375, 376, 379, 383, 389, 392, 400, 407, 408, 409, 412, 416, 422, 425, 433, 440, 441, 442, 445, 449, 455, 458, 466, 473, 474, 475, 478, 482, 487, 490, 499, 506, 507, 508, 511, 519, 522, 528, 535, 536, 537, 540, 543, 546, 549, 568, 575, 582, 583, 584, 587, 593, 596, 599, 600, 601, 602, 603, 605, 617, 632, 808, 810, 813, 880, 951, 959, 961, 965, 967, 968, 971, 977, 980, 990, 998, 1000, 1004, 1006, 1007, 1010, 1016, 1019, 1028, 1036, 1038, 1042, 1044, 1045, 1048, 1054, 1057, 1066, 1074, 1076, 1080, 1082, 1083, 1086, 1092, 1095, 1104, 1114, 1116, 1120, 1122, 1123, 1126, 1132, 1135, 1145, 1153, 1155, 1159, 1161, 1162, 1165, 1171, 1174, 1184, 1192, 1194, 1198, 1200, 1201, 1204, 1210, 1213, 1222, 1230, 1232, 1236, 1238, 1239, 1242, 1248, 1251, 1260, 1268, 1270, 1274, 1276, 1277, 1280, 1286, 1289, 1297, 1304, 1305, 1306, 1309, 1315, 1318, 1327, 1336, 1337, 1338, 1341, 1348, 1351, 1361, 1370, 1371, 1372, 1375, 1382, 1385, 1395, 1404, 1405, 1406, 1409, 1416, 1419, 1427, 1434, 1435, 1436, 1439, 1445, 1448, 1457, 1466, 1467, 1468, 1471, 1478, 1481, 1488, 1495, 1496, 1497, 1500, 1506, 1509, 1516, 1523, 1524, 1525, 1528, 1534, 1537, 1544, 1551, 1552, 1553, 1556, 1562, 1565, 1574, 1583, 1584, 1585, 1588, 1595, 1598, 1606, 1613, 1614, 1615, 1618, 1624, 1627, 1636, 1645, 1646, 1647, 1650, 1657, 1660, 1668, 1675, 1676, 1677, 1680, 1686, 1689, 1794, 1808, 1820, 1828, 1831, 1840, 1843, 1853, 1856, 1861, 1893, 1895], "50e": [9, 29], "15258430635887843": 9, "apart": 9, "perhap": [9, 31, 853], "48": [9, 26, 33], "tqdm": 10, "disabl": [10, 32], "modulenotfounderror": [10, 34], "traceback": 10, "recent": [10, 1059, 1253], "No": [10, 27, 28, 1712], "name": [10, 11, 12, 15, 17, 25, 26, 29, 30, 31, 34, 36, 38, 57, 60, 64, 72, 89, 90, 98, 117, 120, 130, 149, 152, 155, 163, 182, 185, 188, 196, 215, 218, 228, 247, 250, 253, 261, 280, 283, 286, 294, 313, 316, 319, 327, 346, 349, 353, 361, 380, 383, 386, 394, 413, 416, 419, 427, 446, 449, 452, 460, 479, 482, 493, 494, 512, 513, 514, 524, 541, 543, 552, 553, 564, 570, 571, 588, 590, 606, 635, 638, 646, 648, 651, 654, 659, 661, 662, 665, 666, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 743, 745, 746, 747, 749, 751, 753, 756, 757, 758, 759, 760, 763, 767, 768, 769, 771, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 794, 796, 797, 799, 801, 802, 803, 804, 808, 809, 810, 811, 812, 813, 822, 827, 830, 834, 853, 856, 857, 858, 859, 860, 862, 863, 864, 867, 869, 874, 878, 880, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 898, 899, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 927, 938, 940, 941, 943, 945, 972, 974, 982, 984, 1011, 1013, 1021, 1022, 1049, 1051, 1059, 1060, 1087, 1089, 1097, 1098, 1127, 1129, 1137, 1139, 1166, 1168, 1176, 1178, 1205, 1207, 1215, 1216, 1243, 1245, 1253, 1254, 1281, 1283, 1292, 1293, 1310, 1312, 1320, 1321, 1322, 1330, 1342, 1344, 1345, 1353, 1354, 1355, 1356, 1364, 1376, 1378, 1379, 1387, 1388, 1389, 1390, 1398, 1410, 1412, 1413, 1421, 1422, 1423, 1440, 1442, 1450, 1451, 1452, 1460, 1472, 1474, 1475, 1483, 1484, 1501, 1503, 1511, 1512, 1529, 1531, 1539, 1540, 1557, 1559, 1567, 1568, 1569, 1577, 1589, 1591, 1592, 1600, 1601, 1602, 1619, 1621, 1629, 1630, 1631, 1639, 1651, 1653, 1654, 1662, 1663, 1664, 1681, 1683, 1750, 1762, 1834, 1837, 1878, 1882, 1887, 1889, 1892, 1898, 1899, 1907, 1915, 1916], "cubes_and_cuboid": [10, 23], "vol_void": 10, "vol_bulk": 10, "poro": 10, "One": [10, 20, 25, 26, 27, 28, 29, 30, 31, 33, 845, 920, 1324, 1358, 1392, 1454, 1571, 1633], "correctli": [10, 1750], "nx": [10, 14, 29, 741, 982], "erron": 10, "addit": [10, 20, 21, 26, 27, 29, 30, 31, 494, 495, 552, 571, 572, 635, 636, 809, 853, 932, 943, 945, 946, 984, 985, 1022, 1023, 1060, 1061, 1098, 1099, 1139, 1140, 1176, 1178, 1179, 1216, 1217, 1254, 1255, 1293, 1294, 1322, 1323, 1356, 1357, 1390, 1391, 1423, 1424, 1452, 1453, 1484, 1485, 1512, 1513, 1540, 1541, 1569, 1570, 1602, 1603, 1631, 1632, 1664, 1665, 1915, 1916], "half": [10, 29, 32, 746, 758], "green": [10, 28, 29, 33], "center": [10, 23, 26, 27, 32, 812, 850, 922, 943, 982, 1021, 1176, 1253, 1736], "ignor": [10, 23, 61, 64, 69, 91, 95, 122, 127, 153, 155, 160, 186, 188, 193, 220, 225, 251, 253, 258, 284, 286, 291, 317, 319, 324, 350, 353, 358, 384, 386, 391, 417, 419, 424, 450, 452, 457, 483, 489, 516, 521, 544, 548, 567, 591, 595, 604, 792, 795, 820, 875, 900, 949, 975, 979, 988, 1014, 1018, 1026, 1052, 1056, 1059, 1064, 1090, 1094, 1102, 1130, 1134, 1143, 1169, 1173, 1182, 1208, 1212, 1220, 1246, 1250, 1253, 1258, 1284, 1288, 1313, 1317, 1332, 1346, 1350, 1366, 1380, 1384, 1400, 1414, 1418, 1443, 1447, 1462, 1476, 1480, 1504, 1508, 1532, 1536, 1560, 1564, 1579, 1593, 1597, 1622, 1626, 1641, 1655, 1659, 1684, 1688, 1699, 1747, 1748, 1902, 1903, 1904, 1919], "overestim": 10, "real": [10, 20, 666], "account": [10, 11, 12, 20, 23, 32, 753, 808, 809, 810, 813, 907, 923, 927, 1755], "pendular_r": [10, 809, 811], "tackl": 10, "vol_void_initi": 10, "vol_void_correct": 10, "poro_initi": 10, "poro_correct": 10, "5f": 10, "12852": 10, "12590": 10, "although": [10, 23, 27, 853, 929, 930], "neglig": [10, 694, 696], "pendular": [10, 812], "ring": [10, 812, 1751], "resid": [10, 811, 812], "radii": [10, 29, 812], "segment": 10, "regular": 10, "fill": [10, 28, 30, 33, 926, 927], "perfectli": [10, 763, 1728], "im": [10, 26, 28, 943, 950, 982, 989, 1021, 1027, 1059, 1065, 1097, 1103, 1137, 1144, 1176, 1183, 1215, 1221, 1253, 1259, 1751, 1752, 1914], "overlapping_spher": 10, "maxit": [10, 1696, 1698, 1699, 1702, 1704], "imshow": [10, 28], "im_poro": 10, "imag": [10, 18, 23, 26, 28, 29, 34, 647, 741, 949, 988, 1021, 1026, 1064, 1102, 1143, 1182, 1220, 1258, 1751, 1752, 1914], "1f": 10, "63": [10, 26, 33], "snow": 10, "snow2": 10, "boundary_width": 10, "io": [10, 26, 34, 1893], "network_from_porespi": 10, "inscribed_diamet": 10, "regen_mod": [10, 11, 12, 22, 31, 494, 495, 513, 571, 572, 635, 636, 945, 946, 984, 985, 1022, 1023, 1060, 1061, 1098, 1099, 1139, 1140, 1178, 1179, 1216, 1217, 1254, 1255, 1293, 1294, 1322, 1323, 1356, 1357, 1390, 1391, 1423, 1424, 1452, 1453, 1484, 1485, 1512, 1513, 1540, 1541, 1569, 1570, 1602, 1603, 1631, 1632, 1664, 1665], "cuboid": [10, 29, 673, 674, 692, 699, 706, 708, 714, 721, 723, 729, 775, 777, 782, 1914], "pnm_poro": 10, "67": [10, 26, 33], "indic": [11, 12, 15, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 38, 56, 57, 58, 61, 62, 63, 64, 65, 67, 68, 69, 72, 88, 89, 91, 93, 94, 95, 98, 116, 117, 121, 122, 125, 126, 127, 130, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 163, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 196, 214, 215, 219, 220, 221, 223, 224, 225, 228, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 261, 279, 280, 281, 284, 285, 286, 287, 289, 290, 291, 294, 312, 313, 314, 317, 318, 319, 320, 322, 323, 324, 327, 345, 346, 347, 350, 351, 352, 353, 354, 356, 357, 358, 361, 379, 380, 381, 384, 385, 386, 387, 389, 390, 391, 394, 412, 413, 414, 417, 418, 419, 420, 422, 423, 424, 427, 445, 446, 447, 450, 451, 452, 453, 455, 456, 457, 460, 478, 479, 480, 483, 484, 485, 487, 488, 489, 493, 494, 495, 511, 512, 516, 519, 520, 521, 524, 540, 541, 544, 546, 547, 548, 552, 553, 564, 566, 567, 570, 571, 572, 587, 588, 591, 593, 594, 595, 603, 604, 605, 635, 636, 648, 660, 662, 740, 741, 748, 798, 831, 845, 846, 875, 900, 943, 944, 945, 946, 949, 950, 953, 955, 956, 959, 961, 971, 972, 975, 977, 978, 979, 982, 983, 984, 985, 988, 989, 992, 994, 995, 998, 1000, 1010, 1011, 1014, 1016, 1017, 1018, 1021, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1036, 1038, 1048, 1049, 1052, 1054, 1055, 1056, 1059, 1060, 1061, 1064, 1065, 1068, 1070, 1071, 1074, 1076, 1086, 1087, 1090, 1092, 1093, 1094, 1097, 1098, 1099, 1102, 1103, 1106, 1108, 1109, 1110, 1114, 1116, 1126, 1127, 1130, 1132, 1133, 1134, 1137, 1138, 1139, 1140, 1143, 1144, 1147, 1149, 1150, 1153, 1155, 1165, 1166, 1169, 1171, 1172, 1173, 1176, 1177, 1178, 1179, 1182, 1183, 1186, 1188, 1189, 1192, 1194, 1204, 1205, 1208, 1210, 1211, 1212, 1215, 1216, 1217, 1220, 1221, 1224, 1226, 1227, 1230, 1232, 1242, 1243, 1246, 1248, 1249, 1250, 1253, 1254, 1255, 1258, 1259, 1262, 1264, 1265, 1268, 1270, 1280, 1281, 1284, 1286, 1287, 1288, 1292, 1293, 1294, 1309, 1310, 1313, 1315, 1316, 1317, 1320, 1322, 1323, 1324, 1332, 1341, 1342, 1346, 1348, 1349, 1350, 1354, 1356, 1357, 1358, 1366, 1375, 1376, 1380, 1382, 1383, 1384, 1388, 1390, 1391, 1392, 1400, 1409, 1410, 1414, 1416, 1417, 1418, 1422, 1423, 1424, 1439, 1440, 1443, 1445, 1446, 1447, 1450, 1452, 1453, 1454, 1462, 1471, 1472, 1476, 1478, 1479, 1480, 1483, 1484, 1485, 1500, 1501, 1504, 1506, 1507, 1508, 1511, 1512, 1513, 1528, 1529, 1532, 1534, 1535, 1536, 1539, 1540, 1541, 1556, 1557, 1560, 1562, 1563, 1564, 1567, 1569, 1570, 1571, 1579, 1588, 1589, 1593, 1595, 1596, 1597, 1601, 1602, 1603, 1618, 1619, 1622, 1624, 1625, 1626, 1629, 1631, 1632, 1633, 1641, 1650, 1651, 1655, 1657, 1658, 1659, 1663, 1664, 1665, 1680, 1681, 1684, 1686, 1687, 1688, 1709, 1711, 1715, 1716, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1729, 1730, 1734, 1736, 1737, 1745, 1749, 1754, 1755, 1908, 1909], "concept": [11, 23, 25, 29], "mechan": [11, 15, 33], "info": [11, 12, 943, 982, 1021, 1059, 1097, 1137, 1176, 1215, 1253, 1320, 1354, 1388, 1450, 1567, 1629], "similarli": [11, 17, 29], "072": [11, 12, 33], "contact_angl": [11, 12, 14, 31, 33, 683, 684, 907, 908, 922, 923, 924], "partial": [11, 30], "accomplish": [11, 30, 32, 33, 1215], "invasonpercol": 11, "ordinarypercol": 11, "drn": [11, 33], "occup": [11, 496, 517, 871, 926, 1755], "invasion_pressur": [11, 33, 99], "costum": [11, 12, 34], "sat_upd": 11, "nwp": [11, 12, 33, 927], "wp": [11, 12, 33, 927], "pore_mask": [11, 12], "throat_mask": [11, 12], "sat_p": [11, 12], "sat_t": [11, 12], "sat1": [11, 12], "bulk": [11, 12, 25], "sat": [11, 12], "cancel": [11, 12, 23], "remain": [11, 12, 33, 746, 1846], "fraction": [11, 12, 29, 857, 866, 868, 872, 875, 876, 877, 900, 927, 929, 930, 982, 1059, 1097, 1253, 1321, 1324, 1332, 1353, 1355, 1358, 1366, 1387, 1389, 1392, 1400, 1421, 1451, 1454, 1462, 1568, 1571, 1579, 1600, 1630, 1633, 1641, 1662, 1728, 1736, 1746], "text": [11, 23, 1750], "rate_": 11, "fickian": [11, 23, 34, 130], "conduit_conduct": [11, 12], "wherea": [11, 12, 23, 929, 930, 1723], "generic_diffusive_conduct": 11, "calcuat": [11, 12, 29, 786, 787, 788, 789, 790, 793, 800, 807], "rate_calc": [11, 12], "keyword": [11, 12, 494, 515, 571, 635, 643, 745, 796, 822, 853, 932, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1720, 1724, 1725, 1915, 1916], "val": [11, 12, 15, 31, 494, 571, 635, 874, 876, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1330, 1332, 1356, 1364, 1366, 1390, 1398, 1400, 1423, 1452, 1460, 1462, 1484, 1512, 1540, 1569, 1577, 1579, 1602, 1631, 1639, 1641, 1664], "focus": [11, 12], "diff_in": 11, "diff_out": 11, "presenc": [11, 12, 31], "model_mp_cond": [11, 12], "conduit_diffusive_conduct": 11, "throat_conduct": [11, 12, 915, 916, 926, 940, 941], "defer": [11, 12, 15, 22, 29, 30, 31, 494, 495, 571, 572, 635, 636, 945, 946, 984, 985, 1022, 1023, 1060, 1061, 1098, 1099, 1139, 1140, 1178, 1179, 1216, 1217, 1254, 1255, 1293, 1294, 1322, 1323, 1356, 1357, 1390, 1391, 1423, 1424, 1452, 1453, 1484, 1485, 1512, 1513, 1540, 1541, 1569, 1570, 1602, 1603, 1631, 1632, 1664, 1665], "snwparr": [11, 12], "reldiff_nwp": 11, "reldiff_wp": 11, "uniqu": [11, 16, 28, 30, 943, 952, 956, 982, 991, 995, 1029, 1033, 1059, 1067, 1071, 1097, 1105, 1109, 1137, 1146, 1150, 1176, 1185, 1189, 1215, 1223, 1227, 1253, 1261, 1265, 1511, 1750, 1837, 1889], "sat_point": 11, "rate_single_nwp": 11, "rate_single_wp": 11, "rate_mult_nwp": 11, "rate_mult_wp": 11, "dr_nwp": 11, "dr_wp": 11, "xlabel": [11, 12, 33], "snwp": [11, 12, 14, 33], "ylabel": [11, 12, 33], "dr": [11, 924], "titl": [11, 12], "0x7fc4e2ada440": 11, "sequenc": [12, 25, 33, 197], "asum": 12, "ip": [12, 33], "impplement": 12, "face": [12, 26, 130, 944, 982, 983, 1059, 1097, 1138, 1176, 1177, 1253, 1710, 1727, 1728, 1742, 1746], "By": [12, 23, 495, 572, 636, 846, 853, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1727], "invasionpercol": [12, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "finlets_init": 12, "finlet": 12, "satur": [12, 14, 33, 211, 860, 884, 891, 902], "sat_occ_upd": 12, "ran": 12, "int": [12, 23, 28, 52, 53, 60, 84, 85, 90, 111, 112, 119, 120, 144, 145, 152, 177, 178, 185, 209, 210, 218, 242, 243, 250, 275, 276, 283, 308, 309, 316, 341, 342, 349, 375, 376, 383, 408, 409, 416, 441, 442, 449, 474, 475, 482, 507, 508, 536, 537, 543, 583, 584, 601, 602, 648, 713, 728, 740, 741, 748, 798, 831, 967, 968, 982, 1006, 1007, 1044, 1045, 1059, 1082, 1083, 1097, 1122, 1123, 1161, 1162, 1200, 1201, 1238, 1239, 1253, 1276, 1277, 1305, 1306, 1337, 1338, 1371, 1372, 1405, 1406, 1435, 1436, 1467, 1468, 1496, 1497, 1524, 1525, 1552, 1553, 1584, 1585, 1614, 1615, 1646, 1647, 1676, 1677, 1718, 1751, 1752, 1760, 1777, 1779, 1782, 1914, 1919], "invasion_sequ": [12, 33, 99, 197], "mask": [12, 25, 28, 56, 61, 68, 69, 88, 91, 94, 95, 116, 122, 126, 127, 148, 153, 159, 160, 181, 186, 192, 193, 214, 220, 224, 225, 246, 251, 257, 258, 279, 284, 290, 291, 312, 317, 323, 324, 345, 350, 357, 358, 379, 384, 390, 391, 412, 417, 423, 424, 445, 450, 456, 457, 478, 483, 488, 489, 511, 516, 520, 521, 540, 544, 547, 548, 566, 567, 587, 591, 594, 595, 603, 604, 955, 956, 971, 975, 978, 979, 994, 995, 1010, 1014, 1017, 1018, 1021, 1032, 1033, 1048, 1052, 1055, 1056, 1070, 1071, 1086, 1090, 1093, 1094, 1108, 1109, 1126, 1130, 1133, 1134, 1149, 1150, 1165, 1169, 1172, 1173, 1188, 1189, 1204, 1208, 1211, 1212, 1226, 1227, 1242, 1246, 1249, 1250, 1264, 1265, 1280, 1284, 1287, 1288, 1309, 1313, 1316, 1317, 1341, 1346, 1349, 1350, 1375, 1380, 1383, 1384, 1409, 1414, 1417, 1418, 1439, 1443, 1446, 1447, 1471, 1476, 1479, 1480, 1500, 1504, 1507, 1508, 1528, 1532, 1535, 1536, 1556, 1560, 1563, 1564, 1588, 1593, 1596, 1597, 1618, 1622, 1625, 1626, 1650, 1655, 1658, 1659, 1680, 1684, 1687, 1688, 1715, 1716, 1719, 1723, 1736], "thorat": 12, "meet": [12, 32, 694, 696], "rphase": 12, "ephas": 12, "q_": 12, "stoke": [12, 730], "generic_hydraulic_conduct": 12, "st_p": 12, "relativep": 12, "flow_in": 12, "flow_out": 12, "detail": [12, 15, 23, 25, 26, 27, 29, 30, 31, 32, 34, 494, 571, 635, 649, 907, 923, 929, 930, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1253, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1719], "plesas": 12, "conduit_hydraulic_conduct": 12, "hydraulic_conduct": [12, 14, 16, 18, 32, 686, 687, 905, 913], "select": [12, 29, 31, 34, 62, 351, 689, 703, 718, 733, 742, 750, 755, 761, 766, 772, 786, 790, 793, 800, 807, 929, 930, 1708, 1744, 1764, 1777], "snwp_num": 12, "max_seq": 12, "stop": [12, 1828, 1840, 1853, 1914], "relperm_nwp": 12, "relperm_wp": 12, "rate_abs_nwp": 12, "rate_abs_wp": 12, "rate_enwp": 12, "rate_ewp": 12, "kr_nwp": 12, "kr_wp": 12, "kr": 12, "0x7f83f3944c10": 12, "folder": [13, 34, 36, 647, 651], "contribut": [13, 492], "develop": [13, 16, 21, 26, 30, 33, 36, 492, 647], "perman": 13, "worth": [13, 14, 20, 26, 28, 29, 30, 492], "repositori": 13, "access": [13, 15, 17, 22, 25, 27, 30, 31, 33, 36, 196, 648, 740, 744, 745, 747, 748, 749, 792, 795, 796, 797, 798, 799, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270, 1511, 1764, 1777], "via": [13, 17, 26, 27, 31, 33, 36, 643], "github": [13, 36], "NOT": [13, 33, 494, 571, 635, 648, 808, 810, 813, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664], "test": [13, 23, 25, 27, 817, 853, 1901], "suit": [13, 29, 31, 1567, 1629], "gaurante": 13, "encourag": 13, "__version__": 13, "reader": 13, "version": [13, 18, 25, 28, 29, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 472, 505, 534, 561, 581, 857, 893, 964, 1003, 1041, 1079, 1119, 1158, 1197, 1235, 1273, 1303, 1335, 1369, 1403, 1433, 1465, 1494, 1522, 1550, 1582, 1612, 1644, 1674, 1761, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1778, 1780, 1781, 1783, 1837], "inten": 13, "fact": [14, 27, 28, 29, 31, 32, 33], "block": [14, 22, 25, 26, 29, 33], "ny": [14, 741, 982], "nz": [14, 741, 982], "lc": [14, 1915], "0x7f4d6d07c6d0": 14, "2700": 14, "488": 14, "972": 14, "phase_01": [14, 16, 22, 31, 32, 1902, 1903], "0x7f4d6a8a7010": 14, "temperatur": [14, 20, 21, 22, 27, 31, 32, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 680, 683, 853, 856, 857, 858, 860, 862, 863, 864, 867, 869, 878, 880, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 898, 899, 901, 902, 911, 929, 930, 962, 1001, 1039, 1077, 1117, 1156, 1195, 1233, 1271, 1301, 1333, 1367, 1401, 1431, 1463, 1492, 1520, 1548, 1580, 1610, 1642, 1672], "thermal_conduct": [14, 31, 680, 683, 684, 687, 886, 888, 940, 941], "molar_dens": [14, 31, 680, 683, 684], "logspac": 14, "pin": 14, "pout": 14, "200_000": [14, 18], "101_325": 14, "insert": [14, 30, 33, 66, 92, 124, 157, 190, 222, 255, 288, 321, 355, 388, 421, 454, 486, 518, 545, 565, 592, 616, 631, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685, 1750, 1759, 1760, 1793, 1805, 1819, 1894], "70004789e": 14, "possess": [14, 30, 552, 874], "demand": [14, 1215], "dummi": [14, 1777], "variabl": [14, 17, 21, 23, 30, 59, 151, 184, 249, 282, 315, 481, 825, 829, 905, 929, 930, 932], "gmod": 14, "old_diamet": 14, "pop": [14, 25, 33], "glanc": 14, "complex": [14, 26, 29, 30, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 587, 603, 971, 1010, 1048, 1086, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680], "task": [14, 27], "part": [15, 23, 27, 28, 32, 715, 730, 860, 884, 891, 895, 902, 955, 956, 994, 995, 1032, 1033, 1070, 1071, 1108, 1109, 1149, 1150, 1188, 1189, 1226, 1227, 1264, 1265, 1719, 1724, 1725, 1737, 1749, 1762, 1764, 1775, 1777], "design": [15, 17, 22, 23, 26, 494, 571, 635, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664], "cover": [15, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "pore_to_pore_dist": [15, 30], "receiv": [15, 28, 44, 56, 76, 88, 103, 116, 136, 148, 169, 181, 201, 214, 234, 246, 267, 279, 300, 312, 333, 345, 367, 379, 400, 412, 433, 445, 466, 478, 499, 511, 528, 540, 575, 587, 599, 603, 853, 951, 971, 990, 1010, 1028, 1048, 1066, 1086, 1104, 1126, 1145, 1165, 1184, 1204, 1222, 1242, 1260, 1280, 1297, 1309, 1327, 1341, 1361, 1375, 1395, 1409, 1427, 1439, 1457, 1471, 1488, 1500, 1516, 1528, 1544, 1556, 1574, 1588, 1606, 1618, 1636, 1650, 1668, 1680], "avoid": [15, 17, 27, 29, 33, 650], "5292881": 15, "62911362": 15, "56165803": 15, "52692991": 15, "45419288": 15, "58753647": 15, "46255233": 15, "7350638": 15, "77819766": 15, "wonder": [15, 25], "write": [15, 16, 20, 22, 23, 25, 27, 29, 654, 655, 658, 666], "pass": [15, 25, 27, 29, 30, 31, 348, 382, 415, 448, 494, 514, 515, 542, 571, 590, 635, 638, 853, 856, 857, 858, 859, 860, 862, 863, 864, 867, 869, 878, 880, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 898, 899, 901, 902, 905, 932, 945, 974, 984, 1013, 1022, 1051, 1060, 1089, 1098, 1129, 1139, 1168, 1178, 1207, 1216, 1245, 1254, 1283, 1293, 1312, 1322, 1345, 1356, 1379, 1390, 1413, 1423, 1442, 1452, 1475, 1484, 1503, 1512, 1531, 1540, 1559, 1569, 1592, 1602, 1621, 1631, 1654, 1664, 1683, 1744, 1751, 1752, 1777, 1834, 1889, 1915, 1916], "forc": [15, 29, 62, 351], "caught": [15, 25], "written": [15, 16, 22, 25, 27, 29, 30, 32, 666], "abil": [15, 25, 27, 31, 32, 552, 606, 1059, 1253], "variou": [15, 16, 28, 29, 31, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 453, 484, 485, 651, 703, 718, 733, 755, 772, 807], "placesn": 15, "throughout": [15, 20, 27, 29, 30, 1511], "script": [15, 30, 1698], "proudc": 15, "relev": [16, 25, 30], "particularli": [16, 27, 30], "toler": [16, 1742, 1905], "overview": [16, 25, 29], "behavior": [16, 25, 26, 29, 30, 31, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 461, 497, 513, 525, 554, 573, 763, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1325, 1359, 1393, 1425, 1455, 1486, 1514, 1542, 1572, 1604, 1634, 1666], "plenti": 16, "demo": [16, 17, 18, 25, 27, 31, 32, 33, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "uuid": [16, 1837], "4511e417": 16, "340d": 16, "4588": 16, "94ce": 16, "30a19de8fcec": 16, "default_domain": 16, "domain_1": 16, "cach": 16, "variable_prop": 16, "typedset": [16, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877], "f_rtol": 16, "06": [16, 29, 642, 680, 683, 840, 845, 923, 924, 926], "newton_maxit": 16, "5000": 16, "relaxation_factor": 16, "x_rtol": 16, "behav": 16, "somewhat": [16, 32], "dataclass": [16, 943, 982, 1059, 1097, 1137, 1176, 1215, 1253], "sorri": 16, "explor": [16, 26, 27, 29, 907, 923, 966, 1005, 1043, 1081, 1121, 1160, 1199, 1237, 1275], "talk": 16, "onc": [16, 25, 29, 31, 32, 36, 495, 572, 636, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1728, 1833, 1845, 1858], "subsequ": [16, 33, 740, 748, 798, 831], "except": [16, 18, 20, 25, 27, 34, 39, 60, 68, 73, 90, 94, 100, 120, 121, 123, 126, 131, 152, 159, 164, 185, 192, 197, 198, 218, 219, 221, 224, 229, 250, 257, 262, 283, 290, 295, 316, 323, 328, 349, 357, 362, 383, 390, 395, 416, 423, 428, 449, 456, 461, 482, 488, 497, 513, 520, 525, 543, 547, 554, 566, 573, 594, 623, 947, 978, 986, 1017, 1021, 1024, 1055, 1062, 1093, 1100, 1133, 1141, 1172, 1180, 1211, 1218, 1249, 1256, 1287, 1295, 1316, 1325, 1349, 1359, 1383, 1393, 1417, 1425, 1446, 1455, 1479, 1486, 1507, 1514, 1535, 1542, 1563, 1572, 1596, 1604, 1625, 1634, 1658, 1666, 1687], "reciev": 16, "str": [16, 25, 39, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 73, 74, 76, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 93, 100, 101, 103, 106, 107, 109, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 131, 132, 136, 139, 140, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 164, 165, 169, 172, 173, 175, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 189, 191, 198, 199, 201, 204, 205, 207, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 229, 230, 234, 237, 238, 240, 241, 242, 243, 246, 247, 248, 250, 251, 252, 253, 254, 256, 262, 263, 267, 270, 271, 273, 274, 275, 276, 279, 280, 281, 283, 284, 285, 286, 287, 289, 295, 296, 300, 303, 304, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 322, 328, 329, 333, 336, 337, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 362, 363, 367, 370, 371, 373, 374, 375, 376, 379, 380, 381, 383, 384, 385, 386, 387, 389, 395, 396, 400, 403, 404, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 422, 428, 429, 433, 436, 437, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 455, 461, 462, 466, 469, 470, 472, 473, 474, 475, 478, 479, 480, 482, 483, 484, 485, 487, 494, 495, 497, 499, 502, 503, 505, 506, 507, 508, 511, 512, 513, 514, 516, 519, 525, 526, 528, 531, 532, 534, 535, 536, 537, 540, 541, 543, 544, 546, 551, 554, 558, 559, 561, 564, 571, 572, 573, 575, 578, 579, 581, 582, 583, 584, 587, 588, 590, 591, 593, 599, 600, 601, 602, 603, 604, 605, 635, 636, 638, 646, 647, 650, 651, 654, 659, 661, 662, 665, 666, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 743, 744, 745, 746, 747, 749, 751, 753, 756, 757, 758, 759, 760, 763, 767, 768, 769, 771, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 792, 794, 795, 796, 797, 799, 801, 802, 803, 804, 808, 809, 810, 811, 812, 813, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 832, 834, 838, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 916, 918, 919, 920, 922, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 944, 945, 946, 947, 949, 950, 951, 952, 955, 956, 959, 960, 961, 962, 964, 965, 966, 967, 968, 971, 972, 974, 975, 977, 982, 983, 984, 985, 986, 988, 989, 990, 991, 994, 995, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1013, 1014, 1016, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1032, 1033, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1051, 1052, 1054, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1070, 1071, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1089, 1090, 1092, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1108, 1109, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1126, 1127, 1129, 1130, 1132, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1149, 1150, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1168, 1169, 1171, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1188, 1189, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1204, 1205, 1207, 1208, 1210, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1226, 1227, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1242, 1243, 1245, 1246, 1248, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1264, 1265, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1280, 1281, 1283, 1284, 1286, 1293, 1294, 1295, 1297, 1300, 1301, 1303, 1304, 1305, 1306, 1309, 1310, 1312, 1313, 1315, 1322, 1323, 1325, 1327, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1341, 1342, 1344, 1345, 1346, 1348, 1353, 1356, 1357, 1359, 1361, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1375, 1376, 1378, 1379, 1380, 1382, 1387, 1390, 1391, 1393, 1395, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1409, 1410, 1412, 1413, 1414, 1416, 1421, 1423, 1424, 1425, 1427, 1430, 1431, 1433, 1434, 1435, 1436, 1439, 1440, 1442, 1443, 1445, 1452, 1453, 1455, 1457, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1471, 1472, 1474, 1475, 1476, 1478, 1484, 1485, 1486, 1488, 1491, 1492, 1494, 1495, 1496, 1497, 1500, 1501, 1503, 1504, 1506, 1511, 1512, 1513, 1514, 1516, 1519, 1520, 1522, 1523, 1524, 1525, 1528, 1529, 1531, 1532, 1534, 1540, 1541, 1542, 1544, 1547, 1548, 1550, 1551, 1552, 1553, 1556, 1557, 1559, 1560, 1562, 1569, 1570, 1572, 1574, 1577, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1588, 1589, 1591, 1592, 1593, 1595, 1600, 1602, 1603, 1604, 1606, 1609, 1610, 1612, 1613, 1614, 1615, 1618, 1619, 1621, 1622, 1624, 1631, 1632, 1634, 1636, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1650, 1651, 1653, 1654, 1655, 1657, 1662, 1664, 1665, 1666, 1668, 1671, 1672, 1674, 1675, 1676, 1677, 1680, 1681, 1683, 1684, 1686, 1699, 1709, 1712, 1717, 1720, 1724, 1725, 1727, 1742, 1744, 1750, 1760, 1762, 1764, 1766, 1769, 1771, 1773, 1775, 1777, 1779, 1782, 1837, 1882, 1887, 1888, 1889, 1892, 1893, 1902, 1903, 1907, 1914, 1915, 1916, 1918, 1919], "getattr": 16, "tab": [16, 17, 29, 34], "complet": [16, 29, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 516, 544, 591, 604, 926, 929, 930, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684], "trait": 16, "attr": 16, "pydant": 16, "had": [16, 18, 22, 30], "major": [16, 30, 552], "drawback": 16, "clutter": 16, "item": [16, 17, 25, 28, 29, 31, 196, 608, 620, 922, 931, 933, 934, 935, 936, 937, 938, 1324, 1358, 1392, 1454, 1571, 1633, 1764, 1766, 1777, 1779, 1785, 1797, 1810, 1811, 1822, 1824, 1830, 1833, 1836, 1842, 1845, 1849, 1855, 1858, 1861, 1879, 1902, 1903], "dir": [16, 25], "startswith": [16, 25, 28], "certain": [16, 30, 39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 461, 497, 525, 554, 573, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1325, 1359, 1393, 1425, 1455, 1486, 1514, 1542, 1572, 1604, 1634, 1666, 1699, 1744], "sever": [16, 22, 25, 26, 27, 28, 29, 30, 31, 33, 495, 570, 572, 636, 853, 926, 946, 985, 1023, 1061, 1099, 1140, 1179, 1215, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1918], "typedlist": [16, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858], "insist": [16, 36], "cannot": [16, 18, 20, 25, 27, 28, 31, 64, 99, 155, 188, 253, 286, 319, 353, 386, 419, 452, 1215], "place": [16, 26, 27, 29, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 457, 489, 514, 521, 548, 567, 590, 595, 638, 659, 666, 741, 746, 817, 823, 949, 950, 974, 979, 988, 989, 1013, 1018, 1026, 1027, 1051, 1056, 1064, 1065, 1089, 1094, 1102, 1103, 1129, 1134, 1143, 1144, 1168, 1173, 1182, 1183, 1207, 1212, 1220, 1221, 1245, 1250, 1258, 1259, 1283, 1288, 1312, 1317, 1345, 1350, 1379, 1384, 1413, 1418, 1442, 1447, 1475, 1480, 1503, 1508, 1531, 1536, 1559, 1564, 1592, 1597, 1621, 1626, 1654, 1659, 1683, 1688, 1747, 1748, 1832, 1833, 1844, 1845, 1857, 1858], "usabl": 16, "even": [16, 18, 26, 29, 30, 31, 843, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "overload": [16, 25, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 472, 505, 534, 561, 581, 964, 1003, 1041, 1079, 1119, 1158, 1197, 1235, 1273, 1303, 1335, 1369, 1403, 1433, 1465, 1494, 1522, 1550, 1582, 1612, 1644, 1674], "__new__": 16, "base2": [16, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 598], "descend": [16, 552, 1833, 1845, 1858], "core": [16, 1698], "2256e2f1": 16, "acfb": 16, "424b": 16, "8c7b": 16, "a921b5ba8e77": 16, "dure": [16, 26, 29, 30, 552, 1750], "reload": 16, "worri": [17, 23], "equival": [17, 31, 60, 68, 90, 94, 120, 126, 152, 159, 185, 192, 218, 224, 250, 257, 283, 290, 316, 323, 349, 357, 383, 390, 416, 423, 449, 456, 482, 488, 514, 520, 543, 547, 566, 590, 594, 638, 952, 955, 956, 966, 974, 978, 991, 994, 995, 1005, 1013, 1017, 1029, 1032, 1033, 1043, 1051, 1055, 1067, 1070, 1071, 1081, 1089, 1093, 1105, 1108, 1109, 1121, 1129, 1133, 1146, 1149, 1150, 1160, 1168, 1172, 1185, 1188, 1189, 1199, 1207, 1211, 1223, 1226, 1227, 1237, 1245, 1249, 1261, 1264, 1265, 1275, 1283, 1287, 1312, 1316, 1345, 1349, 1353, 1379, 1383, 1387, 1413, 1417, 1421, 1442, 1446, 1475, 1479, 1503, 1507, 1531, 1535, 1559, 1563, 1592, 1596, 1600, 1621, 1625, 1654, 1658, 1662, 1683, 1687, 1720, 1724, 1725, 1777, 1779], "web": 17, "browser": [17, 34], "window": 17, "insid": [17, 771, 922, 1111], "isol": [17, 18, 28, 1712, 1723, 1742, 1898], "associ": [17, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 493, 513, 524, 552, 553, 570, 619, 740, 744, 745, 747, 748, 749, 792, 795, 796, 797, 798, 799, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 830, 831, 832, 833, 834, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 871, 872, 874, 875, 876, 877, 878, 880, 882, 883, 884, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 918, 919, 920, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 982, 1021, 1059, 1097, 1137, 1176, 1215, 1253, 1292, 1320, 1354, 1388, 1422, 1450, 1483, 1511, 1539, 1567, 1601, 1629, 1663, 1834, 1892], "open": [17, 34, 35, 36, 665, 929, 930, 1719, 1834, 1878, 1887], "regist": [17, 1834], "load": [17, 645, 646, 647, 649, 650, 651, 1887, 1888, 1893], "verifi": [17, 23, 32], "empti": [17, 30, 31, 32, 51, 55, 60, 83, 87, 90, 110, 115, 120, 143, 147, 152, 176, 180, 185, 208, 213, 218, 241, 245, 250, 274, 278, 283, 307, 311, 316, 340, 344, 349, 374, 378, 383, 407, 411, 416, 440, 444, 449, 473, 477, 482, 506, 510, 535, 539, 543, 563, 582, 586, 600, 615, 630, 845, 965, 970, 1004, 1009, 1042, 1047, 1080, 1085, 1120, 1125, 1159, 1164, 1198, 1203, 1236, 1241, 1274, 1279, 1304, 1308, 1336, 1340, 1370, 1374, 1404, 1408, 1434, 1438, 1466, 1470, 1483, 1495, 1499, 1523, 1527, 1551, 1555, 1583, 1587, 1613, 1617, 1645, 1649, 1675, 1679, 1726, 1784, 1792, 1804, 1818, 1830, 1842, 1855, 1872, 1889, 1891, 1897, 1915, 1916], "automat": [17, 27, 29, 31, 32, 659, 823, 1698, 1727, 1837, 1889], "id": [17, 26, 34, 943, 959, 961, 982, 998, 1000, 1021, 1036, 1038, 1059, 1074, 1076, 1097, 1114, 1116, 1137, 1153, 1155, 1176, 1192, 1194, 1215, 1230, 1232, 1253, 1268, 1270], "0x7fc2223a90d0": 17, "proj": [17, 1837, 1882, 1889], "new_project": 17, "pn2": 17, "activ": [17, 36, 1878], "proj_01": [17, 1889], "proj_02": [17, 1882], "0x7fc272be2b10": 17, "purg": [17, 30, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 516, 544, 591, 604, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684], "close_project": 17, "again": [17, 20, 28, 29, 32, 746], "pattern": [17, 18, 33, 741, 924], "ONE": 17, "session": [17, 1878], "enabl": [17, 33, 662, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270, 1916], "lookup": [17, 28, 30, 31, 32, 867, 880, 1511], "relationship": [17, 23], "belong": [17, 18, 22, 30, 33, 99, 494, 571, 635, 838, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1711, 1749, 1834], "scan": [17, 29, 1110, 1111], "0x7fc221e93510": 17, "handl": [17, 26, 28, 29, 31, 33, 38, 60, 61, 72, 90, 91, 98, 120, 122, 130, 152, 153, 163, 185, 186, 196, 218, 219, 220, 221, 228, 250, 251, 261, 283, 284, 294, 316, 317, 327, 349, 350, 361, 383, 384, 394, 416, 417, 427, 449, 450, 460, 482, 483, 493, 494, 516, 524, 543, 544, 553, 570, 571, 591, 604, 635, 643, 650, 660, 663, 745, 796, 822, 823, 853, 943, 945, 975, 982, 984, 1014, 1021, 1022, 1052, 1059, 1060, 1090, 1097, 1098, 1130, 1137, 1139, 1169, 1176, 1178, 1208, 1215, 1216, 1246, 1253, 1254, 1284, 1292, 1293, 1313, 1320, 1322, 1344, 1346, 1354, 1356, 1378, 1380, 1388, 1390, 1412, 1414, 1422, 1423, 1443, 1450, 1452, 1474, 1476, 1483, 1484, 1504, 1511, 1512, 1532, 1539, 1540, 1560, 1567, 1569, 1591, 1593, 1601, 1602, 1622, 1629, 1631, 1653, 1655, 1663, 1664, 1684, 1698, 1882, 1897, 1915, 1916], "trigger": [17, 25, 31], "search": [17, 30, 56, 67, 88, 93, 99, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 455, 478, 487, 511, 519, 540, 546, 587, 593, 603, 605, 746, 954, 971, 977, 993, 1010, 1016, 1031, 1048, 1054, 1069, 1086, 1092, 1107, 1126, 1132, 1148, 1165, 1171, 1187, 1204, 1210, 1225, 1242, 1248, 1263, 1280, 1286, 1309, 1315, 1341, 1348, 1375, 1382, 1409, 1416, 1439, 1445, 1471, 1478, 1500, 1506, 1528, 1534, 1556, 1562, 1588, 1595, 1618, 1624, 1650, 1657, 1680, 1686], "seem": [17, 25, 30], "convolut": [17, 23, 741], "benefit": [17, 29, 31], "v1": 17, "lead": [17, 18, 28, 29, 1059, 1097, 1253, 1713, 1728, 1746], "memori": [17, 28, 30, 650, 1699], "leak": 17, "tricki": 17, "delet": [17, 25, 26, 28, 30, 39, 64, 73, 100, 131, 155, 164, 188, 198, 229, 253, 262, 286, 295, 319, 328, 353, 362, 386, 395, 419, 428, 452, 461, 497, 525, 554, 573, 846, 947, 982, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1325, 1359, 1393, 1425, 1455, 1486, 1514, 1542, 1572, 1604, 1634, 1666, 1745, 1762, 1764, 1766, 1887], "someth": [17, 25, 29, 1910], "syntact": [17, 31], "sugar": [17, 31], "scene": [17, 22, 25, 28, 31, 1511], "uphold": 17, "main": [18, 23, 27, 29, 31, 33, 60, 90, 118, 120, 152, 185, 218, 228, 250, 283, 316, 349, 383, 416, 449, 482, 543, 570, 619, 929, 930, 1215, 1846], "fairli": 18, "tomogram": 18, "creativ": 18, "stitch": [18, 1743], "singular": [18, 27], "plot_tutori": [18, 27], "font_siz": [18, 1919], "trim": [18, 26, 28, 33, 853, 982, 1021, 1059, 1097, 1253, 1728, 1743, 1745, 1898], "plu": [18, 25, 1746, 1748], "constitut": [18, 1450], "rest": [18, 26, 31, 33, 1021, 1908, 1909], "100_000": [18, 32], "ill": 18, "messag": [18, 25, 29], "todens": [18, 20, 22, 27, 28], "pcolormesh": 18, "reflect": [18, 27, 1059, 1097, 1253, 1728, 1746], "row": [18, 20, 27, 28, 845, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270, 1750], "diagon": [18, 20, 28, 943, 1176, 1699, 1748], "column": [18, 23, 27, 28, 29, 32, 33, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 502, 531, 558, 578, 651, 664, 806, 949, 950, 960, 988, 989, 999, 1026, 1027, 1037, 1064, 1065, 1075, 1102, 1103, 1115, 1143, 1144, 1154, 1182, 1183, 1193, 1220, 1221, 1231, 1258, 1259, 1269, 1300, 1331, 1365, 1399, 1430, 1461, 1491, 1519, 1547, 1578, 1609, 1640, 1671, 1721, 1810], "NO": [18, 27], "balanc": [18, 20, 22, 23, 32], "coupl": [18, 20, 36], "sai": [18, 30], "form": [18, 20, 23, 28, 29, 31, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543, 771, 811, 867, 875, 900, 907, 943, 1059, 1176, 1253, 1332, 1366, 1400, 1462, 1579, 1641, 1709, 1744, 1748], "independ": [18, 542, 825, 829, 857, 932], "exchang": [18, 929, 930], "mini": [18, 25, 29], "ey": [18, 34], "begin": [18, 23, 27, 33], "libari": 18, "among": 18, "cluster_numb": 18, "cluster_s": 18, "0x7f0b9cdf6ed0": 18, "inspect": [18, 20, 23, 26, 27, 29, 30, 31, 623, 1215, 1915, 1916], "proper": [18, 20, 29, 905, 1918], "clearli": [18, 25, 29, 30, 33], "though": [18, 26, 27, 29, 30, 950, 982, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259], "previou": [18, 22, 23, 34], "200000": 18, "135747": 18, "6746713": 18, "154021": 18, "60194544": 18, "148409": 18, "18420323": 18, "127376": 18, "05045363": 18, "128131": 18, "02048412": 18, "133570": 18, "5868465": 18, "100378": 18, "5400881": 18, "106459": 18, "20729653": 18, "119359": 18, "47573739": 18, "123196": 18, "99575746": 18, "125778": 18, "22131445": 18, "100000": 18, "home": [18, 29], "runner": 18, "_plottool": 18, "352": 18, "runtimewarn": [18, 1904], "overflow": 18, "encount": [18, 1760, 1782], "cast": [18, 27], "dtype": [18, 20, 27, 28, 33, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "float16": 18, "nan": [18, 28, 30, 32, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543, 664, 666, 792, 795, 820, 953, 992, 1030, 1068, 1106, 1147, 1186, 1224, 1262, 1321, 1355, 1389, 1451, 1568, 1630, 1720, 1721, 1904], "inf": [18, 33, 99, 666, 1750, 1904], "357": 18, "pathcollect": [18, 1916], "0x7f0b974f35e0": 18, "output": [20, 26, 27, 30, 33, 34, 36, 665, 1771, 1902, 1903, 1921], "underli": 20, "speci": [20, 22, 27, 853, 857, 862, 863, 872, 877, 880, 882, 886, 888, 897, 929, 930, 1321, 1324, 1344, 1353, 1355, 1358, 1378, 1387, 1389, 1392, 1412, 1421, 1450, 1451, 1454, 1474, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1568, 1571, 1591, 1600, 1601, 1630, 1633, 1653, 1662], "j": [20, 23, 27, 28, 32, 35, 197, 741, 851, 860, 863, 869, 884, 891, 895, 902, 907, 920, 924, 1721, 1748, 1755], "c_a": [20, 22, 715], "composit": [20, 853, 857, 1320, 1354, 1388, 1567, 1629, 1901], "subject": [20, 29, 31, 32, 492], "2x2": 20, "nt": [20, 22, 23, 26, 27, 28, 29, 32, 33, 38, 47, 53, 67, 68, 69, 72, 79, 85, 93, 94, 95, 98, 106, 112, 125, 126, 127, 130, 139, 145, 158, 159, 160, 163, 172, 178, 191, 192, 193, 196, 204, 210, 223, 224, 225, 228, 237, 243, 256, 257, 258, 261, 270, 276, 289, 290, 291, 294, 303, 309, 322, 323, 324, 327, 336, 342, 356, 357, 358, 361, 370, 376, 389, 390, 391, 394, 403, 409, 422, 423, 424, 427, 436, 442, 455, 456, 457, 460, 469, 475, 487, 488, 489, 493, 502, 508, 519, 520, 521, 524, 531, 537, 546, 547, 548, 553, 558, 566, 567, 570, 578, 584, 593, 594, 595, 602, 605, 700, 715, 730, 745, 771, 796, 806, 822, 943, 949, 950, 960, 968, 977, 978, 979, 982, 988, 989, 999, 1007, 1016, 1017, 1018, 1021, 1026, 1027, 1037, 1045, 1054, 1055, 1056, 1059, 1064, 1065, 1075, 1083, 1092, 1093, 1094, 1097, 1102, 1103, 1115, 1123, 1132, 1133, 1134, 1137, 1143, 1144, 1154, 1162, 1171, 1172, 1173, 1176, 1182, 1183, 1193, 1201, 1210, 1211, 1212, 1215, 1220, 1221, 1231, 1239, 1248, 1249, 1250, 1253, 1258, 1259, 1269, 1277, 1286, 1287, 1288, 1292, 1300, 1306, 1315, 1316, 1317, 1320, 1331, 1338, 1348, 1349, 1350, 1354, 1365, 1372, 1382, 1383, 1384, 1388, 1399, 1406, 1416, 1417, 1418, 1422, 1430, 1436, 1445, 1446, 1447, 1450, 1461, 1468, 1478, 1479, 1480, 1483, 1491, 1497, 1506, 1507, 1508, 1511, 1519, 1525, 1534, 1535, 1536, 1539, 1547, 1553, 1562, 1563, 1564, 1567, 1578, 1585, 1595, 1596, 1597, 1601, 1609, 1615, 1624, 1625, 1626, 1629, 1640, 1647, 1657, 1658, 1659, 1663, 1671, 1677, 1686, 1687, 1688, 1719, 1723], "interest": [20, 29, 31, 32, 33, 864, 875, 900, 929, 930, 931, 933, 934, 935, 936, 937, 938, 1715], "awai": [20, 25], "At": [20, 29, 762, 808, 810, 813, 1735], "absenc": 20, "reaction": [20, 22, 130, 261, 361, 903, 929, 930], "thu": [20, 27, 28, 29, 33, 58, 130, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 715, 730, 753, 955, 956, 994, 995, 1032, 1033, 1070, 1071, 1108, 1109, 1149, 1150, 1188, 1189, 1226, 1227, 1264, 1265, 1720, 1724, 1725], "summat": 20, "g_": [20, 22, 23], "x_j": 20, "x_i": [20, 22, 857, 875, 900, 1332, 1366, 1400, 1462, 1579, 1641], "linear": [20, 22, 23, 31, 32, 460, 647, 683, 875, 900, 929, 930, 931, 932, 934, 935, 936, 937, 938, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1215, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270, 1332, 1366, 1400, 1462, 1579, 1641, 1693, 1695, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1707, 1748], "csgraph": [20, 33, 1711, 1726, 1749], "csg": [20, 33], "am": [20, 27, 28, 33, 943, 949, 959, 982, 988, 998, 1021, 1026, 1036, 1059, 1064, 1074, 1097, 1102, 1114, 1137, 1143, 1153, 1176, 1182, 1192, 1215, 1220, 1230, 1253, 1258, 1268, 1714, 1716, 1721, 1738, 1739, 1740, 1741], "create_adjacency_matrix": [20, 27, 28, 33, 959, 998, 1036, 1074, 1114, 1153, 1192, 1230, 1268], "weight": [20, 27, 28, 33, 741, 856, 857, 858, 859, 866, 868, 871, 875, 877, 887, 889, 890, 898, 899, 900, 901, 911, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270, 1332, 1366, 1400, 1462, 1579, 1641, 1726, 1745, 1753, 1756], "fmt": [20, 28, 33, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "csr": [20, 27, 33, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "triu": [20, 27, 28, 33, 949, 959, 988, 998, 1026, 1036, 1064, 1074, 1102, 1114, 1143, 1153, 1182, 1192, 1220, 1230, 1258, 1268], "fals": [20, 26, 27, 28, 30, 33, 56, 59, 61, 62, 67, 88, 91, 93, 99, 116, 122, 125, 148, 151, 153, 158, 181, 184, 186, 191, 214, 220, 223, 246, 249, 251, 256, 279, 282, 284, 289, 312, 315, 317, 322, 345, 350, 351, 356, 379, 384, 389, 412, 417, 422, 445, 450, 455, 478, 481, 483, 487, 511, 516, 519, 540, 544, 546, 587, 591, 593, 603, 604, 605, 622, 624, 642, 656, 658, 660, 662, 664, 949, 950, 952, 954, 955, 956, 966, 971, 975, 977, 988, 989, 991, 993, 994, 995, 1005, 1010, 1014, 1016, 1026, 1027, 1029, 1031, 1032, 1033, 1043, 1048, 1052, 1054, 1064, 1065, 1067, 1069, 1070, 1071, 1081, 1086, 1090, 1092, 1102, 1103, 1105, 1107, 1108, 1109, 1121, 1126, 1130, 1132, 1143, 1144, 1146, 1148, 1149, 1150, 1160, 1165, 1169, 1171, 1182, 1183, 1185, 1187, 1188, 1189, 1199, 1204, 1208, 1210, 1220, 1221, 1223, 1225, 1226, 1227, 1237, 1242, 1246, 1248, 1258, 1259, 1261, 1263, 1264, 1265, 1275, 1280, 1284, 1286, 1309, 1313, 1315, 1341, 1346, 1348, 1375, 1380, 1382, 1409, 1414, 1416, 1439, 1443, 1445, 1471, 1476, 1478, 1500, 1504, 1506, 1528, 1532, 1534, 1556, 1560, 1562, 1588, 1593, 1595, 1618, 1622, 1624, 1650, 1655, 1657, 1680, 1684, 1686, 1720, 1724, 1725, 1735, 1784, 1833, 1845, 1858, 1897, 1905, 1908, 1909], "laplacian": 20, "58564077": 20, "64761375": 20, "93802702": 20, "9941752": 20, "34656145": 20, "37821462": 20, "4401876": 20, "78674905": 20, "trivial": [20, 28, 30, 33, 196], "movement": [20, 33], "r_i": [20, 23], "replac": [20, 29, 30, 31, 36, 666, 741, 816], "b_i": 20, "x_0": 20, "r_3": 20, "linalg": [20, 1704, 1706], "66822832": 20, "69602145": 20, "04825196": 20, "dens": 20, "natur": [20, 25, 26, 875, 900, 907, 923, 1332, 1366, 1400, 1462, 1579, 1641], "particular": 20, "bc": [20, 22, 32, 33, 40, 41, 42, 60, 74, 90, 101, 120, 132, 133, 134, 152, 165, 166, 167, 185, 197, 199, 218, 230, 231, 232, 250, 263, 264, 265, 283, 296, 297, 298, 316, 329, 330, 331, 349, 363, 364, 365, 383, 396, 397, 398, 416, 429, 430, 431, 449, 462, 463, 464, 482, 526, 543], "coo": [20, 27, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270, 1714, 1716, 1753, 1756], "manner": [20, 660, 1712], "index": [20, 25, 27, 28, 29, 30, 31, 33, 552, 648, 806, 843, 953, 992, 1030, 1068, 1106, 1147, 1186, 1224, 1262, 1720, 1829, 1830, 1841, 1842, 1854, 1855, 1919], "hit": [20, 29], "Then": [20, 29, 30, 34], "diag": 20, "setdiag": 20, "eliminate_zero": [20, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259], "spsolv": [20, 1700, 1706], "tocsr": 20, "identi": 20, "effort": 20, "deal": [20, 31, 32, 1708], "intract": 20, "si": [21, 29, 647], "relat": [21, 23, 26, 29, 31, 33, 762, 763, 853, 903], "tabl": [21, 23, 27, 1699, 1902, 1903, 1908, 1909], "emperatur": 21, "298": 21, "101325": 21, "water_correl": [21, 31, 32, 684], "mean_vi": 21, "3f": 21, "mpa": 21, "893": 21, "report": [21, 31, 1870, 1871], "celsiu": 21, "incorrect": 21, "unyt": 21, "pint": 21, "despit": [21, 664], "broad": 21, "due": [21, 29, 30, 32, 853], "overhead": 21, "progress": [22, 24, 33], "incorpor": 22, "chemic": [22, 31, 853, 857, 867, 880, 893, 1320, 1511, 1567, 1629], "0x7faa4f8c4bd0": 22, "ph": 22, "varieti": [22, 26, 27, 31, 32, 1878], "standar": 22, "a_0": 22, "a_1": 22, "a_3": 22, "rightarrow": [22, 23], "r_a": 22, "kc_a": 22, "kinet": [22, 929, 930], "strong": [22, 31], "source_term": [22, 932], "power_law": 22, "isotherm": 22, "a1": [22, 31, 853, 931, 933, 934, 935, 936, 937], "a2": [22, 31, 931, 933, 934, 935, 936, 937], "a3": [22, 31, 931, 934, 935, 936, 937], "unpack": 22, "retriev": [22, 23, 25, 29, 30, 38, 57, 72, 89, 98, 117, 130, 149, 163, 182, 196, 215, 228, 247, 261, 280, 294, 313, 327, 346, 361, 380, 394, 413, 427, 446, 460, 479, 493, 512, 524, 541, 552, 553, 564, 570, 588, 745, 796, 822, 943, 972, 982, 1011, 1021, 1049, 1059, 1087, 1097, 1127, 1137, 1166, 1176, 1205, 1215, 1243, 1253, 1281, 1292, 1310, 1320, 1342, 1354, 1376, 1388, 1410, 1422, 1440, 1450, 1472, 1483, 1501, 1511, 1529, 1539, 1557, 1567, 1589, 1601, 1619, 1629, 1651, 1663, 1681, 1834], "throw": [22, 27, 31, 1904], "scalar": [22, 30, 31, 38, 58, 63, 65, 72, 98, 130, 150, 154, 156, 163, 183, 187, 189, 196, 228, 248, 252, 254, 261, 281, 285, 287, 294, 314, 318, 320, 327, 347, 348, 352, 354, 361, 381, 382, 385, 387, 394, 414, 415, 418, 420, 427, 447, 448, 451, 453, 460, 480, 484, 485, 493, 524, 542, 553, 570, 647, 666, 817, 856, 857, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 875, 878, 880, 882, 883, 884, 886, 887, 889, 890, 891, 893, 894, 895, 898, 899, 900, 901, 902, 943, 944, 954, 966, 982, 983, 993, 1005, 1021, 1031, 1043, 1059, 1069, 1081, 1097, 1107, 1121, 1137, 1138, 1148, 1160, 1176, 1177, 1187, 1199, 1215, 1225, 1237, 1253, 1263, 1275, 1292, 1320, 1321, 1332, 1353, 1354, 1355, 1366, 1387, 1388, 1389, 1400, 1421, 1422, 1450, 1451, 1462, 1483, 1511, 1539, 1567, 1568, 1579, 1600, 1601, 1629, 1630, 1641, 1662, 1663, 1710, 1728, 1729, 1730, 1736, 1742, 1745, 1747, 1748, 1916, 1918], "string": [22, 25, 44, 52, 53, 57, 60, 76, 84, 85, 89, 90, 103, 111, 112, 117, 120, 136, 144, 145, 149, 152, 169, 177, 178, 182, 185, 201, 209, 210, 215, 218, 219, 221, 234, 242, 243, 247, 250, 267, 275, 276, 280, 283, 300, 308, 309, 313, 316, 333, 341, 342, 346, 349, 367, 375, 376, 380, 383, 400, 408, 409, 413, 416, 433, 441, 442, 446, 449, 466, 474, 475, 479, 482, 499, 507, 508, 512, 528, 536, 537, 541, 543, 564, 575, 583, 584, 588, 589, 599, 601, 602, 637, 659, 662, 864, 951, 967, 968, 972, 973, 990, 1006, 1007, 1011, 1012, 1028, 1044, 1045, 1049, 1050, 1066, 1082, 1083, 1087, 1088, 1104, 1122, 1123, 1127, 1128, 1145, 1161, 1162, 1166, 1167, 1184, 1200, 1201, 1205, 1206, 1222, 1238, 1239, 1243, 1244, 1260, 1276, 1277, 1281, 1282, 1297, 1305, 1306, 1310, 1311, 1327, 1337, 1338, 1342, 1343, 1361, 1371, 1372, 1376, 1377, 1395, 1405, 1406, 1410, 1411, 1427, 1435, 1436, 1440, 1441, 1457, 1467, 1468, 1472, 1473, 1488, 1496, 1497, 1501, 1502, 1516, 1524, 1525, 1529, 1530, 1544, 1552, 1553, 1557, 1558, 1574, 1584, 1585, 1589, 1590, 1606, 1614, 1615, 1619, 1620, 1636, 1646, 1647, 1651, 1652, 1668, 1676, 1677, 1681, 1682, 1713, 1760, 1762, 1773, 1782, 1887, 1892, 1902, 1903], "set_sourc": 22, "act": [22, 25, 27, 752, 754, 815, 1710, 1910], "seen": [22, 26, 27, 29, 30, 31, 32], "fick_02": 22, "0x7faa4e7f63e0": 22, "boolean": [22, 25, 26, 33, 39, 50, 56, 61, 67, 68, 69, 73, 82, 88, 91, 93, 94, 95, 100, 109, 116, 122, 125, 126, 127, 131, 142, 148, 153, 158, 159, 160, 164, 175, 181, 186, 191, 192, 193, 198, 207, 214, 220, 223, 224, 225, 229, 240, 246, 251, 256, 257, 258, 262, 273, 279, 284, 289, 290, 291, 295, 306, 312, 317, 322, 323, 324, 328, 339, 345, 350, 356, 357, 358, 362, 373, 379, 384, 389, 390, 391, 395, 406, 412, 417, 422, 423, 424, 428, 439, 445, 450, 455, 456, 457, 461, 472, 478, 483, 487, 488, 489, 497, 505, 511, 516, 519, 520, 521, 525, 534, 540, 544, 546, 547, 548, 554, 561, 566, 567, 573, 581, 587, 591, 593, 594, 595, 598, 603, 604, 605, 662, 846, 947, 955, 956, 964, 971, 975, 977, 978, 979, 986, 994, 995, 1003, 1010, 1014, 1016, 1017, 1018, 1024, 1032, 1033, 1041, 1048, 1052, 1054, 1055, 1056, 1062, 1070, 1071, 1079, 1086, 1090, 1092, 1093, 1094, 1100, 1108, 1109, 1119, 1126, 1130, 1132, 1133, 1134, 1141, 1149, 1150, 1158, 1165, 1169, 1171, 1172, 1173, 1180, 1188, 1189, 1197, 1204, 1208, 1210, 1211, 1212, 1218, 1226, 1227, 1235, 1242, 1246, 1248, 1249, 1250, 1256, 1264, 1265, 1273, 1280, 1284, 1286, 1287, 1288, 1295, 1303, 1309, 1313, 1315, 1316, 1317, 1325, 1335, 1341, 1346, 1348, 1349, 1350, 1359, 1369, 1375, 1380, 1382, 1383, 1384, 1393, 1403, 1409, 1414, 1416, 1417, 1418, 1425, 1433, 1439, 1443, 1445, 1446, 1447, 1455, 1465, 1471, 1476, 1478, 1479, 1480, 1486, 1494, 1500, 1504, 1506, 1507, 1508, 1514, 1522, 1528, 1532, 1534, 1535, 1536, 1542, 1550, 1556, 1560, 1562, 1563, 1564, 1572, 1582, 1588, 1593, 1595, 1596, 1597, 1604, 1612, 1618, 1622, 1624, 1625, 1626, 1634, 1644, 1650, 1655, 1657, 1658, 1659, 1666, 1674, 1680, 1684, 1686, 1687, 1688, 1711, 1715, 1716, 1719, 1720, 1723, 1724, 1725, 1735, 1736, 1737, 1745, 1749, 1902, 1903], "another_react": 22, "printout": [22, 26, 31], "initial_guess": [22, 32], "awar": [22, 25, 666], "henc": [22, 27, 29], "0x7faa4e7f5ee0": 22, "s1": [22, 929, 930, 931, 933, 934, 935, 936, 937, 938], "s2": [22, 929, 930, 931, 933, 934, 935, 936, 937, 938], "self": [22, 25, 607], "explanatori": 22, "patankar": 22, "ref": [22, 929, 930], "slope": [22, 825, 929, 930, 931, 933, 934, 935, 936, 937, 938, 1748], "intercept": [22, 27, 825, 929, 930, 931, 933, 934, 935, 936, 937, 938], "outlin": [22, 28, 29, 31, 33, 197, 494, 571, 635, 646, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664], "around": [22, 23, 25, 32, 741, 1110], "flux": [22, 130], "consumpt": 22, "further": [22, 23, 26, 31, 1914], "expresss": 22, "abl": [22, 27, 28], "proce": [22, 28, 29, 99], "s_1": 22, "s_2": 22, "unknown": [22, 31, 59, 151, 184, 249, 282, 315, 481], "newton": 22, "rearrang": [22, 23], "lump": 22, "enter": [22, 23, 26, 58, 121, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259], "hidden": 22, "_build_a": 22, "_build_b": 22, "_apply_bc": 22, "_apply_sourc": 22, "rh": [22, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 460, 643], "evolv": 22, "20473348e": 22, "40379950e": 22, "01": [22, 29, 31, 34], "00000000e": 22, "64353527e": 22, "99076401e": 22, "14137171e": 22, "36246890e": 22, "89545083e": 22, "75407912e": 22, "23978291e": 22, "96331643e": 22, "79097742e": 22, "34633671e": 22, "23265383e": 22, "03": [22, 31], "12525519e": 22, "01527237e": 22, "38631808e": 22, "17031545e": 22, "37933802e": 22, "63470277e": 22, "84243447e": 22, "52287526e": 22, "ultim": [23, 32], "come": [23, 31], "sum_k": 23, "nb": 23, "m_": 23, "ik": 23, "c_i": 23, "c_k": 23, "overal": 23, "exit": [23, 58, 123, 150, 183, 221, 248, 281, 314, 347, 381, 414, 447, 480], "n_p": 23, "cross": [23, 29, 32, 647, 694, 696, 734, 735, 736, 737, 738, 741, 751, 753, 767, 768, 769, 786, 787, 788, 789, 794, 808, 905, 913, 1729], "subscript": [23, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "denot": 23, "diffusion": 23, "transfer": [23, 929, 930], "cdot": [23, 857, 875, 900, 920, 1332, 1366, 1400, 1462, 1579, 1641], "assembli": 23, "seri": [23, 26, 27, 32, 33, 713, 728], "electr": [23, 915, 916], "circuit": [23, 929, 930], "analogi": 23, "resist": 23, "invers": [23, 32, 1748], "r_": [23, 929, 930], "r_k": 23, "superscript": 23, "rewritten": 23, "g_i": 23, "g_k": 23, "simplic": 23, "pi": [23, 32, 730], "d_i": 23, "ell_i": 23, "quad": 23, "d_k": 23, "ell_k": 23, "ell_": 23, "literatur": 23, "past": 23, "clariti": 23, "introduc": [23, 26, 27, 29, 31], "terminologi": [23, 30], "coin": 23, "mathcal": 23, "decoupl": 23, "word": [23, 27, 28, 33, 747, 797, 827], "join": [23, 25, 656, 664, 1764, 1777], "_func": 23, "__all__": 23, "circles_and_rectangl": 23, "cones_and_cylind": 23, "intersecting_con": 23, "hybrid_cones_and_cylind": 23, "trapezoids_and_rectangl": 23, "hybrid_trapezoids_and_rectangl": 23, "intersecting_trapezoid": 23, "pyramids_and_cuboid": 23, "intersecting_pyramid": 23, "hybrid_pyramids_and_cuboid": 23, "squares_and_rectangl": 23, "ncylinders_in_seri": 23, "molecular": [23, 27, 856, 857, 858, 859, 877, 887, 889, 890, 898, 899, 901, 911], "heat": [23, 163, 394, 869], "choic": [23, 29, 31, 1914], "dc": 23, "dx": [23, 924], "gradient": [23, 31, 58, 62, 150, 183, 248, 281, 314, 347, 351, 381, 414, 447, 480, 1699], "int_": 23, "bigg": [23, 32], "big": [23, 929, 930], "combin": [23, 26, 30, 31, 542, 664, 715, 730, 982, 1059, 1097, 1253, 1699, 1743, 1744, 1771, 1915], "_i": 23, "_k": 23, "a_i": 23, "a_": [23, 929, 930, 931, 933, 934, 935, 936, 937], "a_k": 23, "declar": 23, "earlier": 23, "breviti": 23, "nitti": 23, "gritti": 23, "pointer": 23, "satisfi": [23, 30, 56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 455, 478, 487, 511, 519, 540, 546, 587, 593, 603, 605, 846, 971, 977, 1010, 1016, 1048, 1054, 1086, 1092, 1126, 1132, 1165, 1171, 1204, 1210, 1242, 1248, 1280, 1286, 1309, 1315, 1341, 1348, 1375, 1382, 1409, 1416, 1439, 1445, 1471, 1478, 1500, 1506, 1528, 1534, 1556, 1562, 1588, 1595, 1618, 1624, 1650, 1657, 1680, 1686, 1718], "drop": [23, 26, 1716], "along": [23, 26, 27, 30, 31, 494, 571, 635, 922, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1709, 1742, 1748], "p_i": 23, "p_k": 23, "slip": 23, "wall": 23, "gradual": 23, "dp": [23, 752, 754], "i_p": 23, "rho": [23, 31, 859, 882], "da": 23, "volumetr": 23, "polar": 23, "inertia": 23, "calculu": 23, "p_j": 23, "friction": 23, "loss": [23, 27, 32], "inerti": 23, "safe": 23, "keep": [23, 28, 29, 36, 61, 91, 122, 153, 186, 196, 220, 251, 284, 317, 350, 384, 417, 450, 483, 516, 544, 591, 604, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1511, 1532, 1560, 1593, 1622, 1655, 1684, 1777, 1779, 1898], "expand": [23, 30, 746], "cylidnr": 23, "128": [23, 33], "hagen": [23, 920], "poiseuil": [23, 32, 920], "ell": 23, "individu": [23, 27, 30, 31, 32, 33, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480, 606, 853, 1450, 1748], "resistor": [23, 27, 32], "eventu": [23, 31], "discuss": [23, 25, 26, 27, 853], "third": [23, 28, 929, 930, 1777], "machin": 23, "voxel": [23, 647, 1914], "vector": [23, 29, 31, 38, 58, 63, 65, 130, 150, 154, 156, 163, 183, 187, 189, 228, 248, 252, 254, 261, 281, 285, 287, 294, 314, 318, 320, 327, 347, 352, 354, 361, 381, 385, 387, 394, 414, 418, 420, 427, 447, 451, 453, 460, 480, 484, 485, 643, 806, 853, 857, 953, 992, 1030, 1068, 1106, 1147, 1186, 1224, 1262, 1699, 1709, 1721], "input": [23, 28, 34, 952, 954, 955, 956, 966, 991, 993, 994, 995, 1005, 1029, 1031, 1032, 1033, 1043, 1067, 1069, 1070, 1071, 1081, 1105, 1107, 1108, 1109, 1121, 1146, 1148, 1149, 1150, 1160, 1185, 1187, 1188, 1189, 1199, 1223, 1225, 1226, 1227, 1237, 1261, 1263, 1264, 1265, 1275, 1709, 1720, 1724, 1725], "type": [23, 25, 26, 27, 30, 32, 34, 36, 40, 47, 48, 50, 52, 53, 57, 59, 60, 68, 69, 74, 79, 80, 82, 84, 85, 89, 90, 94, 95, 101, 106, 107, 109, 111, 112, 117, 120, 121, 123, 126, 127, 132, 139, 140, 142, 144, 145, 149, 151, 152, 159, 160, 165, 172, 173, 175, 177, 178, 182, 184, 185, 192, 193, 199, 204, 205, 207, 209, 210, 215, 218, 219, 221, 224, 225, 230, 237, 238, 240, 242, 243, 247, 249, 250, 257, 258, 263, 270, 271, 273, 275, 276, 280, 282, 283, 290, 291, 296, 303, 304, 306, 308, 309, 313, 315, 316, 323, 324, 329, 336, 337, 339, 341, 342, 346, 348, 349, 357, 358, 363, 370, 371, 373, 375, 376, 380, 382, 383, 390, 391, 396, 403, 404, 406, 408, 409, 413, 415, 416, 423, 424, 429, 436, 437, 439, 441, 442, 446, 448, 449, 456, 457, 462, 469, 470, 472, 474, 475, 479, 481, 482, 488, 489, 502, 503, 505, 507, 508, 512, 520, 521, 526, 531, 532, 534, 536, 537, 541, 542, 543, 547, 548, 551, 558, 559, 561, 564, 566, 567, 578, 579, 581, 583, 584, 588, 594, 595, 601, 602, 643, 646, 647, 648, 650, 651, 655, 662, 663, 700, 715, 730, 737, 741, 743, 744, 745, 746, 749, 753, 759, 765, 771, 783, 788, 792, 794, 795, 796, 799, 802, 806, 809, 817, 820, 821, 822, 823, 825, 826, 829, 830, 832, 834, 838, 840, 845, 846, 857, 859, 863, 871, 874, 876, 877, 878, 880, 882, 883, 884, 890, 891, 897, 901, 902, 905, 907, 908, 910, 911, 912, 913, 915, 916, 918, 919, 920, 922, 923, 926, 929, 930, 931, 933, 934, 935, 936, 937, 938, 940, 941, 943, 949, 950, 953, 960, 962, 964, 967, 968, 972, 978, 979, 982, 988, 989, 992, 999, 1001, 1003, 1006, 1007, 1011, 1017, 1018, 1026, 1027, 1030, 1037, 1039, 1041, 1044, 1045, 1049, 1055, 1056, 1059, 1064, 1065, 1068, 1075, 1077, 1079, 1082, 1083, 1087, 1093, 1094, 1097, 1102, 1103, 1106, 1115, 1117, 1119, 1122, 1123, 1127, 1133, 1134, 1137, 1143, 1144, 1147, 1154, 1156, 1158, 1161, 1162, 1166, 1172, 1173, 1176, 1182, 1183, 1186, 1193, 1195, 1197, 1200, 1201, 1205, 1211, 1212, 1215, 1220, 1221, 1224, 1231, 1233, 1235, 1238, 1239, 1243, 1249, 1250, 1253, 1258, 1259, 1262, 1269, 1271, 1273, 1276, 1277, 1281, 1287, 1288, 1300, 1301, 1303, 1305, 1306, 1310, 1316, 1317, 1324, 1330, 1331, 1332, 1333, 1335, 1337, 1338, 1342, 1349, 1350, 1358, 1364, 1365, 1366, 1367, 1369, 1371, 1372, 1376, 1383, 1384, 1392, 1398, 1399, 1400, 1401, 1403, 1405, 1406, 1410, 1417, 1418, 1430, 1431, 1433, 1435, 1436, 1440, 1446, 1447, 1454, 1460, 1461, 1462, 1463, 1465, 1467, 1468, 1472, 1479, 1480, 1491, 1492, 1494, 1496, 1497, 1501, 1507, 1508, 1519, 1520, 1522, 1524, 1525, 1529, 1535, 1536, 1547, 1548, 1550, 1552, 1553, 1557, 1563, 1564, 1571, 1577, 1578, 1579, 1580, 1582, 1584, 1585, 1589, 1596, 1597, 1609, 1610, 1612, 1614, 1615, 1619, 1625, 1626, 1633, 1639, 1640, 1641, 1642, 1644, 1646, 1647, 1651, 1658, 1659, 1671, 1672, 1674, 1676, 1677, 1681, 1687, 1688, 1699, 1710, 1713, 1714, 1715, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1726, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1745, 1746, 1747, 1748, 1751, 1752, 1755, 1762, 1766, 1769, 1771, 1773, 1775, 1777, 1779, 1782, 1837, 1847, 1859, 1860, 1882, 1889, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1907, 1911, 1914, 1915, 1916, 1918, 1919], "akbari": 23, "sinton": 23, "bahrami": 23, "viscou": [23, 294], "microchannel": 23, "intern": [23, 27, 751, 752, 753, 754, 1721, 1727, 1915, 1916], "journal": [23, 763], "54": [23, 26, 31, 33], "2011": 23, "3970": 23, "3978": 23, "majid": 23, "michael": 23, "yovanovich": 23, "richard": 23, "culham": 23, "novel": 23, "singli": 23, "2007": [23, 741], "2492": 23, "2502": 23, "http": [23, 36, 197], "en": 23, "wikipedia": [23, 27, 846], "org": [23, 197, 659], "wiki": 23, "e2": 23, "80": [23, 26, 33], "93poiseuille_equ": 23, "misaghian": 23, "niloo": 23, "et": [23, 741, 860, 863, 880, 884, 890, 898, 902, 924], "al": [23, 741, 860, 863, 880, 884, 890, 898, 902, 924], "neural": 23, "geoscienc": 23, "162": [23, 33], "2022": 23, "105086": 23, "stil": 24, "comfort": 25, "topic": [25, 31], "squar": [25, 29, 676, 701, 716, 731, 784, 786, 787, 794, 808, 920, 1059, 1097, 1253, 1728, 1736, 1738], "bracket": 25, "round": 25, "tupl": [25, 33, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 348, 378, 382, 411, 415, 444, 448, 477, 510, 539, 542, 563, 586, 615, 624, 630, 643, 970, 1009, 1047, 1085, 1125, 1164, 1203, 1241, 1279, 1308, 1340, 1374, 1408, 1438, 1470, 1499, 1527, 1555, 1587, 1617, 1649, 1679, 1711, 1719, 1749, 1755, 1792, 1804, 1818, 1891], "immut": 25, "read": [25, 26, 27, 31, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 929, 930, 962, 1001, 1039, 1077, 1117, 1156, 1195, 1233, 1271, 1301, 1333, 1367, 1401, 1431, 1463, 1492, 1520, 1548, 1580, 1610, 1642, 1672], "longer": [25, 29, 662], "ing": 25, "extend": [25, 28, 33, 893, 924, 1736, 1743, 1769], "200": [25, 26, 33, 956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265], "300": [25, 31], "Or": [25, 27, 28], "math": 25, "typeerror": 25, "multipl": [25, 27, 30, 32, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543, 746, 811, 812, 830, 1714, 1743, 1750, 1916], "duplic": [25, 28, 29, 33, 1898], "oper": [25, 27, 29, 30, 818, 823, 1748], "integ": [25, 30, 659, 746, 1716, 1779], "introduct": [25, 28], "internet": 25, "doc": [25, 1759], "answer": [25, 27], "question": 25, "exclus": 25, "nativ": [25, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "fast": [25, 28, 33], "downsid": [25, 29], "languag": [25, 29, 659], "understan": 25, "guid": 25, "fun": [25, 26], "arang": [25, 1904], "60": [25, 26, 33, 35, 880], "75": [25, 33, 34], "90": [25, 26, 31, 33], "hundr": 25, "profici": 25, "999": 25, "fanci": [25, 27], "111": [25, 26, 33], "222": [25, 33, 863], "333": 25, "sens": [25, 28, 29, 32], "assur": [25, 1745], "elementwis": 25, "unlik": [25, 29, 857, 880], "matlab": 25, "444": 25, "666": 25, "211": [25, 33], "322": 25, "433": 25, "190": [25, 33], "12321": 25, "49284": 25, "110889": 25, "8100": 25, "trick": [25, 29, 30, 32, 1728], "recogn": 25, "lack": [25, 28, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 458, 490, 522, 549, 568, 596, 617, 632, 980, 1019, 1057, 1095, 1135, 1174, 1213, 1251, 1289, 1318, 1351, 1385, 1419, 1448, 1481, 1509, 1537, 1565, 1598, 1627, 1660, 1689, 1794, 1808, 1820, 1895], "thereof": 25, "offer": [25, 27, 29, 31, 33, 853, 982], "level": [25, 27, 31, 659, 662, 1878, 1900], "arr": [25, 30, 1810], "computation": [25, 33, 196], "ident": [25, 929, 930, 950, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259, 1837], "familiar": 25, "readabl": [25, 647, 660], "who": [25, 31], "prefer": [25, 29], "piec": [25, 27, 31], "puzzl": 25, "datatyp": [25, 1846], "address": [25, 34], "pair": [25, 27, 28, 29, 32, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 510, 539, 563, 586, 615, 630, 850, 929, 930, 943, 953, 970, 982, 992, 1009, 1030, 1047, 1059, 1068, 1085, 1097, 1106, 1125, 1137, 1147, 1164, 1176, 1186, 1203, 1215, 1224, 1241, 1253, 1262, 1279, 1308, 1340, 1374, 1408, 1438, 1470, 1499, 1527, 1555, 1587, 1617, 1649, 1679, 1714, 1721, 1726, 1792, 1804, 1818, 1891, 1915, 1916], "dict_valu": 25, "catch": [25, 30, 1904], "intimid": 25, "beautifulli": 25, "feel": [25, 29], "extens": [25, 27, 1766, 1779], "augment": [25, 26], "deep": [25, 622, 624, 1837], "dive": [25, 27], "pertain": [25, 27], "whenev": [25, 1878], "__getitem__": 25, "__setitem__": [25, 27], "doubl": [25, 29, 1762], "underscor": 25, "intrins": 25, "sometim": [25, 65, 156, 189, 254, 287, 320, 354, 387, 420, 453, 485, 1720], "magic": [25, 1511], "extra": [25, 26, 29, 606], "newdict": 25, "setitem": 25, "super": 25, "dnew": 25, "enforc": [25, 27, 1846, 1847, 1859, 1860], "foo": [25, 27, 31, 1846], "bar": [25, 27, 31, 34, 1773, 1846], "param": [25, 31, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 493, 524, 553, 570, 853, 856, 857, 858, 859, 862, 863, 864, 867, 869, 872, 877, 880, 882, 883, 886, 887, 888, 889, 890, 894, 897, 898, 899, 901, 943, 982, 1021, 1059, 1097, 1137, 1176, 1215, 1253, 1292, 1320, 1354, 1388, 1422, 1450, 1483, 1511, 1539, 1567, 1601, 1629, 1663, 1759, 1760, 1762, 1764, 1766, 1769, 1771, 1775, 1777, 1779, 1782, 1901, 1908, 1909], "statement": 25, "rais": [25, 55, 60, 64, 68, 87, 90, 94, 115, 120, 121, 123, 126, 147, 152, 155, 159, 180, 185, 188, 192, 197, 213, 218, 219, 221, 224, 245, 250, 253, 257, 278, 283, 286, 290, 311, 316, 319, 323, 344, 349, 353, 357, 378, 383, 386, 390, 411, 416, 419, 423, 444, 449, 452, 456, 477, 482, 488, 510, 520, 539, 543, 547, 563, 566, 586, 594, 614, 615, 623, 629, 630, 970, 978, 1009, 1017, 1047, 1055, 1085, 1093, 1125, 1133, 1164, 1172, 1203, 1211, 1241, 1249, 1279, 1287, 1308, 1316, 1340, 1349, 1374, 1383, 1408, 1417, 1438, 1446, 1470, 1479, 1499, 1507, 1527, 1535, 1555, 1563, 1587, 1596, 1617, 1625, 1649, 1658, 1679, 1687, 1760, 1782, 1791, 1792, 1803, 1804, 1817, 1818, 1828, 1830, 1831, 1840, 1842, 1843, 1853, 1855, 1856, 1872, 1873, 1890, 1891], "implememnt": 25, "poreprop": 25, "blah": [25, 853], "bob": 25, "summari": [25, 31, 1699, 1769, 1771, 1775], "versatil": 25, "handi": 25, "alter": [25, 26, 29, 33], "interact": [25, 26], "troubleshoot": 26, "full": [26, 29, 31, 32, 36, 494, 552, 571, 635, 651, 690, 691, 693, 700, 741, 915, 916, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664, 1771], "dedic": [26, 33], "draongfli": 26, "percol": [26, 29, 99, 196, 197, 211, 927, 1711, 1719, 1723, 1737, 1749], "rough": 26, "displai": [26, 33, 1834], "10e": 26, "connreadd": 26, "descript": [26, 39, 50, 61, 73, 82, 91, 100, 109, 122, 131, 142, 153, 164, 175, 186, 198, 207, 220, 229, 240, 251, 262, 273, 284, 295, 306, 317, 328, 339, 350, 362, 373, 384, 395, 406, 417, 428, 439, 450, 461, 472, 483, 494, 497, 505, 516, 525, 534, 544, 554, 561, 571, 573, 581, 591, 604, 635, 922, 926, 938, 945, 947, 964, 975, 984, 986, 1003, 1014, 1022, 1024, 1041, 1052, 1060, 1062, 1079, 1090, 1098, 1100, 1119, 1130, 1139, 1141, 1158, 1169, 1178, 1180, 1197, 1208, 1216, 1218, 1235, 1246, 1254, 1256, 1273, 1284, 1293, 1295, 1303, 1313, 1322, 1325, 1335, 1346, 1356, 1359, 1369, 1380, 1390, 1393, 1403, 1414, 1423, 1425, 1433, 1443, 1452, 1455, 1465, 1476, 1484, 1486, 1494, 1504, 1512, 1514, 1522, 1532, 1540, 1542, 1550, 1560, 1569, 1572, 1582, 1593, 1602, 1604, 1612, 1622, 1631, 1634, 1644, 1655, 1664, 1666, 1674, 1684, 1712, 1719, 1720, 1724, 1725, 1750, 1764, 1766, 1771, 1777, 1779], "randint": 26, "500": [26, 29, 1919], "practic": [26, 28, 30], "prompt": 26, "0x7f48b4fcc0e0": 26, "64": [26, 33], "161": [26, 33], "56": [26, 33], "reveal": [26, 27, 31, 33], "elsewher": [26, 32, 1751, 1752], "convent": [26, 27, 1773], "AND": 26, "44": [26, 31, 33], "46": [26, 33], "47": [26, 29, 33], "61": [26, 33], "62": [26, 33], "49": [26, 33, 35], "52": [26, 33], "53": [26, 33], "58": [26, 33, 863], "59": [26, 33], "68": [26, 33], "69": [26, 33], "71": [26, 33], "73": [26, 33, 863], "76": [26, 33], "77": [26, 33], "83": [26, 33], "85": [26, 33], "86": [26, 33], "89": [26, 33], "91": [26, 33], "93": [26, 33], "97": [26, 33], "105": [26, 33], "109": [26, 33], "110": [26, 31, 33, 684, 880], "112": [26, 33], "113": [26, 33], "115": [26, 33], "119": [26, 33], "120": [26, 33], "121": [26, 33], "122": [26, 33], "124": [26, 33], "126": [26, 33], "130": [26, 33, 907], "131": [26, 33], "133": [26, 33], "134": [26, 33], "135": [26, 33], "136": [26, 33], "139": [26, 33], "141": [26, 33, 763], "143": [26, 33], "144": [26, 33], "146": [26, 31, 33], "147": [26, 33], "148": [26, 33], "149": [26, 33], "150": [26, 32, 33, 902], "151": [26, 33], "153": [26, 33], "154": [26, 31, 33], "160": [26, 33, 860, 878, 891, 907], "wil": 26, "catalyst": 26, "pellet": 26, "helper": [26, 27, 30, 1321, 1344, 1353, 1354, 1355, 1378, 1387, 1388, 1389, 1412, 1421, 1451, 1474, 1568, 1591, 1600, 1630, 1653, 1662], "free": [26, 1699], "template_cylinder_annulu": 26, "r_outer": [26, 1751, 1752], "r_inner": [26, 1751, 1752], "templat": [26, 1021, 1751, 1752], "facecenteredcub": [26, 943, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214], "bodycenteredcub": [26, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 1176], "jam": 26, "intersti": 26, "fcc": 26, "bcc": [26, 943], "4x4x4": 26, "corner": [26, 30, 33, 943, 982, 1176], "site": [26, 99, 955, 956, 994, 995, 1032, 1033, 1070, 1071, 1108, 1109, 1149, 1150, 1188, 1189, 1226, 1227, 1264, 1265, 1711, 1714, 1716, 1719, 1720, 1721, 1723, 1724, 1725, 1736, 1737, 1747, 1749, 1755], "node": [26, 29, 33, 648, 1097, 1110, 1111, 1716, 1718, 1720, 1721, 1722, 1724, 1725, 1726, 1732, 1736, 1737, 1751, 1752, 1755, 1919], "whether": [26, 31, 51, 57, 83, 89, 99, 110, 117, 143, 149, 176, 182, 208, 215, 241, 247, 274, 280, 307, 313, 340, 346, 374, 380, 407, 413, 440, 446, 473, 479, 506, 512, 535, 541, 564, 582, 588, 600, 622, 927, 954, 965, 972, 993, 1004, 1011, 1031, 1042, 1049, 1069, 1080, 1087, 1107, 1120, 1127, 1148, 1159, 1166, 1187, 1198, 1205, 1225, 1236, 1243, 1263, 1274, 1281, 1304, 1310, 1336, 1342, 1370, 1376, 1404, 1410, 1434, 1440, 1466, 1472, 1495, 1501, 1523, 1529, 1551, 1557, 1583, 1589, 1613, 1619, 1645, 1651, 1675, 1681, 1711, 1715, 1720, 1724, 1727, 1734, 1735, 1742, 1749, 1870, 1871, 1907, 1908, 1909], "indidc": 26, "portion": [26, 30, 1714], "color": [26, 33, 34, 1915, 1916, 1917, 1918, 1919], "0x7f48b4e92a70": 26, "414": 26, "corner_to_bodi": [26, 943, 1176], "216": [26, 33], "corner_to_corn": 26, "body_to_bodi": 26, "orang": [26, 29], "eas": 26, "interpenetr": 26, "delaunayvoronoidu": [26, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136], "cartesian": [26, 1059, 1253], "cyl": 26, "sph": 26, "dpore": 26, "dthroat": 26, "preced": [26, 648], "depth": [26, 27, 1900], "wide": [26, 27, 29, 35, 1902, 1903], "assort": [26, 31], "subclass": [27, 38, 72, 130, 163, 228, 261, 294, 327, 427, 460, 493, 524, 553, 619, 643, 1292, 1450, 1483, 1663, 1810, 1822], "deper": 27, "scheme": [27, 28, 905], "humbl": 27, "accord": [27, 44, 51, 56, 67, 76, 83, 88, 93, 103, 110, 116, 125, 136, 143, 148, 158, 169, 176, 181, 191, 196, 201, 208, 214, 223, 234, 241, 246, 256, 267, 274, 279, 289, 300, 307, 312, 322, 333, 340, 345, 356, 367, 374, 379, 389, 400, 407, 412, 422, 433, 440, 445, 455, 466, 473, 478, 487, 499, 506, 511, 519, 528, 535, 540, 546, 575, 582, 587, 593, 599, 600, 603, 605, 951, 955, 956, 965, 971, 977, 990, 994, 995, 1004, 1010, 1016, 1028, 1032, 1033, 1042, 1048, 1054, 1066, 1070, 1071, 1080, 1086, 1092, 1097, 1104, 1108, 1109, 1120, 1126, 1132, 1145, 1149, 1150, 1159, 1165, 1171, 1184, 1188, 1189, 1198, 1204, 1210, 1222, 1226, 1227, 1236, 1242, 1248, 1260, 1264, 1265, 1274, 1280, 1286, 1297, 1304, 1309, 1315, 1327, 1336, 1341, 1348, 1361, 1370, 1375, 1382, 1395, 1404, 1409, 1416, 1427, 1434, 1439, 1445, 1457, 1466, 1471, 1478, 1488, 1495, 1500, 1506, 1516, 1523, 1528, 1534, 1544, 1551, 1556, 1562, 1574, 1583, 1588, 1595, 1606, 1613, 1618, 1624, 1636, 1645, 1650, 1657, 1668, 1675, 1680, 1686, 1742, 1833, 1845, 1858], "imagin": 27, "pull": [27, 36], "pore_data_sheet": 27, "datafram": [27, 656, 664], "ndim": 27, "474407": 27, "055905": 27, "557595": 27, "090773": 27, "501382": 27, "065994": 27, "472442": 27, "055213": 27, "float64": 27, "05590507143096387": 27, "apt": 27, "colum": 27, "mathemat": 27, "serv": [27, 1768], "identifi": [27, 28, 33, 846, 982, 1021, 1719, 1723, 1727, 1736, 1742, 1764, 1766, 1773, 1777, 1779], "wrong": 27, "creation": [27, 745, 796, 822, 1713], "species_a": 27, "species_b": 27, "retreiv": [27, 874], "retun": 27, "subdictionari": [27, 31], "ask": [27, 31, 623], "int64": [27, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "set_label": 27, "meant": [27, 28, 1742, 1918], "pend": 27, "_hidden": 27, "shorthand": 27, "impli": [27, 949, 988, 1026, 1064, 1102, 1143, 1182, 1220, 1258], "critic": [27, 31, 858, 869, 883, 887, 889, 890, 893, 894, 898, 899, 901], "v3": [27, 29, 30, 31], "lattice_connect": 27, "dimension": 27, "dispatch": [27, 31], "dn": 27, "delaunai": [27, 846, 907, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1110, 1111, 1727, 1753], "premis": 27, "sentenc": 27, "diagram": [27, 1097], "colunm": 27, "exactli": [27, 28, 30, 31, 32, 1874], "technic": [27, 28, 51, 52, 53, 56, 83, 84, 85, 88, 110, 111, 112, 116, 143, 144, 145, 148, 176, 177, 178, 181, 208, 209, 210, 214, 241, 242, 243, 246, 274, 275, 276, 279, 307, 308, 309, 312, 340, 341, 342, 345, 374, 375, 376, 379, 407, 408, 409, 412, 440, 441, 442, 445, 473, 474, 475, 478, 506, 507, 508, 511, 535, 536, 537, 540, 582, 583, 584, 587, 600, 601, 602, 603, 846, 965, 967, 968, 971, 1004, 1006, 1007, 1010, 1042, 1044, 1045, 1048, 1080, 1082, 1083, 1086, 1120, 1122, 1123, 1126, 1159, 1161, 1162, 1165, 1198, 1200, 1201, 1204, 1236, 1238, 1239, 1242, 1274, 1276, 1277, 1280, 1304, 1305, 1306, 1309, 1336, 1337, 1338, 1341, 1370, 1371, 1372, 1375, 1404, 1405, 1406, 1409, 1434, 1435, 1436, 1439, 1466, 1467, 1468, 1471, 1495, 1496, 1497, 1500, 1523, 1524, 1525, 1528, 1551, 1552, 1553, 1556, 1583, 1584, 1585, 1588, 1613, 1614, 1615, 1618, 1645, 1646, 1647, 1650, 1675, 1676, 1677, 1680], "rigorosli": 27, "support": [27, 31, 659, 1698, 1699], "unintend": 27, "merg": [27, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 453, 484, 485, 1744], "ijv": 27, "evid": 27, "symmetr": [27, 28, 949, 982, 988, 1026, 1064, 1102, 1143, 1182, 1220, 1258, 1721, 1738, 1874, 1875, 1905], "highli": [27, 908], "nonzero": [27, 28, 741], "travers": [27, 1726], "redund": [27, 950, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259], "triangular": [27, 28, 29, 763, 920, 949, 959, 988, 998, 1026, 1036, 1064, 1074, 1102, 1114, 1143, 1153, 1182, 1192, 1220, 1230, 1258, 1268, 1714, 1739, 1740, 1741, 1753, 1756], "lil": [27, 28, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "merit": 27, "articl": 27, "conductor": 27, "interconnect": [27, 1097], "enough": [27, 31, 1059, 1097, 1253, 1728, 1746], "get_conduit_data": 27, "47440675": 27, "23720338": 27, "55759468": 27, "25069084": 27, "50138169": 27, "2362208": 27, "47244159": 27, "r1_r2": 27, "understand": [28, 29, 30], "occassion": 28, "invok": 28, "easier": [28, 29, 30, 36, 943, 982, 1059, 1097, 1137, 1176, 1215, 1253], "notabl": 28, "obviou": 28, "grow": [28, 746], "million": [28, 857], "meaning": 28, "suggest": [28, 1898], "especi": 28, "amount": [28, 33, 1709, 1747, 1748], "intuit": [28, 30], "lower": [28, 32, 33, 806, 828, 949, 988, 1026, 1064, 1102, 1143, 1182, 1220, 1258, 1739, 1740], "problemat": [28, 29, 664], "mind": 28, "basi": 28, "luckili": 28, "locations_of_nonzero": 28, "values_of_nonzero": 28, "dicionari": [28, 943, 982, 1059, 1097, 1137, 1176, 1215, 1253], "thank": 28, "sophist": 28, "strutur": 28, "dok": [28, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270, 1721], "gotcha": 28, "subtract": [28, 29, 751, 752, 753, 754, 811, 818], "slight": 28, "variat": 28, "create_incidence_matrix": [28, 961, 1000, 1038, 1076, 1116, 1155, 1194, 1232, 1270], "background": 28, "predefin": [28, 31, 32, 1320, 1567, 1629], "cn": 28, "p_left": 28, "p_bottom": 28, "lightgrei": [28, 33], "marker": [28, 1727, 1916, 1918], "blue": 28, "OR": [28, 33], "find_neighbor_por": [28, 966, 1005, 1043, 1081, 1121, 1160, 1199, 1215, 1237, 1275], "exclusve_or": 28, "neigbhor": [28, 966, 1005, 1043, 1081, 1121, 1160, 1199, 1237, 1275], "xnor": [28, 30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 455, 466, 473, 474, 475, 478, 487, 499, 506, 507, 508, 511, 519, 528, 535, 536, 537, 540, 546, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 951, 952, 955, 956, 965, 966, 967, 968, 971, 977, 990, 991, 994, 995, 1004, 1005, 1006, 1007, 1010, 1016, 1028, 1029, 1032, 1033, 1042, 1043, 1044, 1045, 1048, 1054, 1066, 1067, 1070, 1071, 1080, 1081, 1082, 1083, 1086, 1092, 1104, 1105, 1108, 1109, 1120, 1121, 1122, 1123, 1126, 1132, 1145, 1146, 1149, 1150, 1159, 1160, 1161, 1162, 1165, 1171, 1184, 1185, 1188, 1189, 1198, 1199, 1200, 1201, 1204, 1210, 1222, 1223, 1226, 1227, 1236, 1237, 1238, 1239, 1242, 1248, 1260, 1261, 1264, 1265, 1274, 1275, 1276, 1277, 1280, 1286, 1297, 1304, 1305, 1306, 1309, 1315, 1327, 1336, 1337, 1338, 1341, 1348, 1361, 1370, 1371, 1372, 1375, 1382, 1395, 1404, 1405, 1406, 1409, 1416, 1427, 1434, 1435, 1436, 1439, 1445, 1457, 1466, 1467, 1468, 1471, 1478, 1488, 1495, 1496, 1497, 1500, 1506, 1516, 1523, 1524, 1525, 1528, 1534, 1544, 1551, 1552, 1553, 1556, 1562, 1574, 1583, 1584, 1585, 1588, 1595, 1606, 1613, 1614, 1615, 1618, 1624, 1636, 1645, 1646, 1647, 1650, 1657, 1668, 1675, 1676, 1677, 1680, 1686, 1720, 1724, 1725], "opposit": 28, "nxor": [28, 1720, 1724, 1725], "interchang": 28, "logic": [28, 30, 56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 455, 478, 487, 511, 519, 540, 546, 587, 593, 603, 605, 952, 955, 956, 966, 971, 977, 991, 994, 995, 1005, 1010, 1016, 1029, 1032, 1033, 1043, 1048, 1054, 1067, 1070, 1071, 1081, 1086, 1092, 1105, 1108, 1109, 1121, 1126, 1132, 1146, 1149, 1150, 1160, 1165, 1171, 1185, 1188, 1189, 1199, 1204, 1210, 1223, 1226, 1227, 1237, 1242, 1248, 1261, 1264, 1265, 1275, 1280, 1286, 1309, 1315, 1341, 1348, 1375, 1382, 1409, 1416, 1439, 1445, 1471, 1478, 1500, 1506, 1528, 1534, 1556, 1562, 1588, 1595, 1618, 1624, 1650, 1657, 1680, 1686, 1720, 1724, 1725], "share": [28, 492, 952, 955, 956, 966, 991, 994, 995, 1005, 1029, 1032, 1033, 1043, 1067, 1070, 1071, 1081, 1105, 1108, 1109, 1121, 1146, 1149, 1150, 1160, 1185, 1188, 1189, 1199, 1223, 1226, 1227, 1237, 1261, 1264, 1265, 1275, 1714, 1720, 1722, 1724, 1725], "find_connecting_throat": 28, "p1": [28, 953, 992, 1030, 1068, 1106, 1147, 1186, 1224, 1262, 1721, 1722], "p2": [28, 953, 992, 1030, 1068, 1106, 1147, 1186, 1224, 1262, 1721, 1722], "find_connected_por": [28, 33], "flatten": [28, 33, 662, 952, 954, 955, 956, 966, 991, 993, 994, 995, 1005, 1029, 1031, 1032, 1033, 1043, 1067, 1069, 1070, 1071, 1081, 1105, 1107, 1108, 1109, 1121, 1146, 1148, 1149, 1150, 1160, 1185, 1187, 1188, 1189, 1199, 1223, 1225, 1226, 1227, 1237, 1261, 1263, 1264, 1265, 1275, 1720, 1724, 1725], "heterogen": [28, 29, 30], "blockag": 28, "actuali": [28, 30], "manual": [28, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 587, 603, 971, 1010, 1048, 1086, 1126, 1165, 1204, 1215, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1893], "0x7ff80d9136f0": 28, "easiest": 28, "bool": [28, 33, 56, 62, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 351, 356, 379, 389, 412, 422, 445, 455, 478, 487, 511, 519, 540, 546, 587, 593, 603, 605, 622, 660, 664, 792, 795, 820, 949, 950, 952, 954, 955, 956, 966, 971, 977, 988, 989, 991, 993, 994, 995, 1005, 1010, 1016, 1026, 1027, 1029, 1031, 1032, 1033, 1043, 1048, 1054, 1059, 1064, 1065, 1067, 1069, 1070, 1071, 1081, 1086, 1092, 1097, 1102, 1103, 1105, 1107, 1108, 1109, 1121, 1126, 1132, 1143, 1144, 1146, 1148, 1149, 1150, 1160, 1165, 1171, 1182, 1183, 1185, 1187, 1188, 1189, 1199, 1204, 1210, 1220, 1221, 1223, 1225, 1226, 1227, 1237, 1242, 1248, 1253, 1258, 1259, 1261, 1263, 1264, 1265, 1275, 1280, 1286, 1309, 1315, 1341, 1348, 1375, 1382, 1409, 1416, 1439, 1445, 1471, 1478, 1500, 1506, 1528, 1534, 1556, 1562, 1588, 1595, 1618, 1624, 1650, 1657, 1680, 1686, 1714, 1720, 1724, 1725, 1728, 1734, 1735, 1905, 1907, 1908, 1909, 1917], "inde": [28, 33], "signific": 28, "totrim": 28, "offset": [28, 944, 983, 1138, 1177, 1709, 1710], "cumsum": 28, "remap": 28, "did": 28, "0x7ff80dada200": 28, "decis": 28, "made": [28, 30, 31, 35, 99, 982, 1747, 1748], "new_por": 28, "vstack": 28, "0x7ff80b514ef0": 28, "lucki": 28, "hstack": 28, "new_conn": [28, 1713], "obvious": 28, "enterpr": 29, "tomograph": 29, "Not": 29, "blank": 29, "0x7f71bcf9ec00": 29, "8000": 29, "22800": 29, "2168": 29, "4332": 29, "favor": [29, 949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "thorough": 29, "psd": 29, "norm": [29, 747, 797, 827], "xlim": 29, "5593961722893255": 29, "80996128980269": 29, "tsd": 29, "5130345457395142": 29, "96861960231873": 29, "vice": [29, 32, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "versa": [29, 32, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "strang": 29, "constrict": [29, 832], "564": 29, "ever": 29, "tempt": 29, "loop": [29, 33, 853, 1110, 1111], "interog": 29, "ye": 29, "safer": 29, "smallest": [29, 33, 1905, 1914], "amin": 29, "bia": 29, "toward": 29, "lo": 29, "hi": [29, 647], "lie": [29, 771, 944, 983, 1138, 1177, 1253, 1727, 1728, 1736], "overli": 29, "tend": 29, "mandatori": 29, "occupi": [29, 1711, 1737, 1749], "regard": 29, "r1": 29, "r2": 29, "l_total": 29, "sqrt": 29, "squeez": 29, "lt": 29, "euclidean": 29, "root": [29, 36], "nest": [29, 660, 1900, 1910], "deeper": 29, "unbuff": 29, "sap": 29, "08485305e": 29, "68134509e": 29, "33947201e": 29, "57211706e": 29, "92152447e": 29, "72429278e": 29, "potenti": [29, 492, 929, 930], "substract": 29, "fashion": [29, 1713], "adjac": [29, 744, 746, 764, 765, 792, 795, 820, 821, 943, 949, 950, 959, 982, 988, 989, 998, 1021, 1026, 1027, 1036, 1059, 1064, 1065, 1074, 1097, 1102, 1103, 1114, 1137, 1143, 1144, 1153, 1176, 1182, 1183, 1192, 1215, 1220, 1221, 1230, 1253, 1258, 1259, 1268, 1714, 1716, 1721, 1738, 1739, 1740, 1741, 1753, 1756], "analyz": 29, "lengthi": 29, "lai": [29, 1059, 1097, 1253], "bare": 29, "job": 29, "fresh": 29, "inherit": [29, 552, 570, 619], "throat_se": 29, "docstr": [29, 30, 31, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 453, 484, 485, 495, 572, 636, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1758, 1759, 1764, 1768, 1769, 1771, 1773, 1775, 1777, 1779], "78": [29, 33, 1902, 1903], "charact": [29, 1773, 1902, 1903], "cursor": 29, "explicitli": [29, 648], "track": [29, 33, 552, 1511], "f1": 29, "f2": 29, "f3": 29, "f4": 29, "lens": 29, "27203214e": 29, "58686910e": 29, "44028684e": 29, "92245838e": 29, "40091924e": 29, "59556144e": 29, "57978631e": 29, "74677718e": 29, "68073070e": 29, "tediou": 29, "prone": 29, "predfin": 29, "pprint": 29, "0x7f7179211f30": 29, "largest_spher": [29, 671, 672, 673, 674, 675, 676, 677], "0x7f7176f8e680": 29, "0x7f7179211900": 29, "0x7f7176f8ea70": 29, "pore_diamet": [29, 671, 672, 673, 674, 675, 676, 677, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 751, 752, 753, 754, 756, 757, 758, 759, 760, 771, 773, 774, 775, 776, 777, 778, 782, 783, 784, 785, 811, 812, 911, 924], "0x7f7176f8f760": 29, "throat_diamet": [29, 671, 672, 673, 674, 675, 676, 677, 690, 691, 692, 699, 700, 701, 702, 704, 705, 706, 713, 714, 715, 716, 717, 719, 720, 721, 725, 728, 729, 730, 731, 732, 758, 762, 767, 768, 769, 771, 773, 774, 775, 782, 783, 784, 785, 787, 788, 789, 801, 802, 808, 809, 811, 812, 813, 911, 922, 923, 924], "0x7f7179211fc0": 29, "0x7f7176fd9630": 29, "0x7f7176fc3d00": 29, "0x7f7176fa01f0": 29, "0x7f7176fa13f0": 29, "0x7f71792120e0": 29, "0x7f7176fa11b0": 29, "0x7f7179211bd0": 29, "nice": [29, 1253, 1822, 1902, 1903], "add_models_collect": 29, "0x7f7174cbf6f0": 29, "bound": 29, "nearest": [29, 746, 843, 1750], "dall": 29, "reach": [29, 33], "constrain": 29, "life": 29, "reomcomput": 29, "15319619": 29, "0328116": 29, "2287953": 29, "23887453": 29, "8411705": 29, "10988224": 29, "59011212e": 29, "75717988e": 29, "13561876e": 29, "66940036e": 29, "27284536e": 29, "36618201": 29, "35063831": 29, "40236746": 29, "58822388": 29, "42461491": 29, "9016327": 29, "11640227e": 29, "20171387e": 29, "57748463e": 29, "30989878e": 29, "79091080e": 29, "automatical": 29, "networkx": [29, 622, 648, 655, 1919], "sort": [29, 33, 196, 927], "tree": [29, 1745], "downstream": 29, "roughli": 29, "dependency_map": [29, 619, 622, 623], "style": [29, 624], "planar": [29, 690, 695, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 724, 727, 731, 732, 734, 738], "circl": [29, 671, 677, 690, 704, 719, 773, 794, 846, 1736, 1751, 1916, 1919], "dependency_graph": [29, 619, 623, 624], "draw_networkx": 29, "draw_planar": 29, "bookmark": 30, "0x7fbbd2e7af20": 30, "corner_por": 30, "build": [30, 59, 151, 184, 249, 282, 315, 481], "filter": [30, 34, 44, 51, 56, 67, 76, 83, 88, 93, 103, 110, 116, 125, 136, 143, 148, 158, 169, 176, 181, 191, 201, 208, 214, 223, 234, 241, 246, 256, 267, 274, 279, 289, 300, 307, 312, 322, 333, 340, 345, 356, 367, 374, 379, 389, 400, 407, 412, 422, 433, 440, 445, 455, 466, 473, 478, 487, 499, 506, 511, 519, 528, 535, 540, 546, 575, 582, 587, 593, 599, 600, 603, 605, 951, 952, 955, 956, 965, 971, 977, 990, 991, 994, 995, 1004, 1010, 1016, 1028, 1029, 1032, 1033, 1042, 1048, 1054, 1066, 1067, 1070, 1071, 1080, 1086, 1092, 1104, 1105, 1108, 1109, 1120, 1126, 1132, 1145, 1146, 1149, 1150, 1159, 1165, 1171, 1184, 1185, 1188, 1189, 1198, 1204, 1210, 1222, 1223, 1226, 1227, 1236, 1242, 1248, 1260, 1261, 1264, 1265, 1274, 1280, 1286, 1297, 1304, 1309, 1315, 1327, 1336, 1341, 1348, 1361, 1370, 1375, 1382, 1395, 1404, 1409, 1416, 1427, 1434, 1439, 1445, 1457, 1466, 1471, 1478, 1488, 1495, 1500, 1506, 1516, 1523, 1528, 1534, 1544, 1551, 1556, 1562, 1574, 1583, 1588, 1595, 1606, 1613, 1618, 1624, 1636, 1645, 1650, 1657, 1668, 1675, 1680, 1686, 1718, 1720, 1724, 1725], "decrib": 30, "nd": [30, 874, 876], "wast": [30, 33], "wors": 30, "consum": 30, "8x": 30, "nonetheless": 30, "invest": 30, "mask1": 30, "mask2": 30, "edg": [30, 33, 648, 743, 794, 982, 1716, 1720, 1721, 1722, 1724, 1726, 1755, 1919], "theori": [30, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259, 1720, 1724, 1725], "nor": [30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 455, 466, 473, 474, 475, 478, 487, 499, 506, 507, 508, 511, 519, 528, 535, 536, 537, 540, 546, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 951, 965, 967, 968, 971, 977, 990, 1004, 1006, 1007, 1010, 1016, 1028, 1042, 1044, 1045, 1048, 1054, 1066, 1080, 1082, 1083, 1086, 1092, 1104, 1120, 1122, 1123, 1126, 1132, 1145, 1159, 1161, 1162, 1165, 1171, 1184, 1198, 1200, 1201, 1204, 1210, 1222, 1236, 1238, 1239, 1242, 1248, 1260, 1274, 1276, 1277, 1280, 1286, 1297, 1304, 1305, 1306, 1309, 1315, 1327, 1336, 1337, 1338, 1341, 1348, 1361, 1370, 1371, 1372, 1375, 1382, 1395, 1404, 1405, 1406, 1409, 1416, 1427, 1434, 1435, 1436, 1439, 1445, 1457, 1466, 1467, 1468, 1471, 1478, 1488, 1495, 1496, 1497, 1500, 1506, 1516, 1523, 1524, 1525, 1528, 1534, 1544, 1551, 1552, 1553, 1556, 1562, 1574, 1583, 1584, 1585, 1588, 1595, 1606, 1613, 1614, 1615, 1618, 1624, 1636, 1645, 1646, 1647, 1650, 1657, 1668, 1675, 1676, 1677, 1680, 1686], "confus": [30, 33], "nand": [30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 455, 466, 473, 474, 475, 478, 487, 499, 506, 507, 508, 511, 519, 528, 535, 536, 537, 540, 546, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 951, 965, 967, 968, 971, 977, 990, 1004, 1006, 1007, 1010, 1016, 1028, 1042, 1044, 1045, 1048, 1054, 1066, 1080, 1082, 1083, 1086, 1092, 1104, 1120, 1122, 1123, 1126, 1132, 1145, 1159, 1161, 1162, 1165, 1171, 1184, 1198, 1200, 1201, 1204, 1210, 1222, 1236, 1238, 1239, 1242, 1248, 1260, 1274, 1276, 1277, 1280, 1286, 1297, 1304, 1305, 1306, 1309, 1315, 1327, 1336, 1337, 1338, 1341, 1348, 1361, 1370, 1371, 1372, 1375, 1382, 1395, 1404, 1405, 1406, 1409, 1416, 1427, 1434, 1435, 1436, 1439, 1445, 1457, 1466, 1467, 1468, 1471, 1478, 1488, 1495, 1496, 1497, 1500, 1506, 1516, 1523, 1524, 1525, 1528, 1534, 1544, 1551, 1552, 1553, 1556, 1562, 1574, 1583, 1584, 1585, 1588, 1595, 1606, 1613, 1614, 1615, 1618, 1624, 1636, 1645, 1646, 1647, 1650, 1657, 1668, 1675, 1676, 1677, 1680, 1686], "retiev": 30, "annoi": [30, 1904], "shortcut": [30, 32, 36, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 493, 524, 553, 570, 943, 982, 1021, 1059, 1097, 1137, 1176, 1215, 1253, 1292, 1320, 1354, 1388, 1422, 1450, 1483, 1511, 1539, 1567, 1601, 1629, 1663], "edit": [30, 36, 929, 930], "syntax": [30, 648], "certainli": 30, "infer": [30, 944, 983, 1021, 1138, 1177], "suppli": [30, 31, 44, 52, 53, 60, 63, 64, 65, 76, 84, 85, 90, 103, 111, 112, 120, 121, 123, 136, 144, 145, 152, 154, 155, 156, 169, 177, 178, 185, 187, 188, 189, 201, 209, 210, 218, 219, 221, 234, 242, 243, 250, 252, 253, 254, 267, 275, 276, 283, 285, 286, 287, 300, 308, 309, 316, 318, 319, 320, 333, 341, 342, 349, 352, 353, 354, 367, 375, 376, 383, 385, 386, 387, 400, 408, 409, 416, 418, 419, 420, 433, 441, 442, 449, 451, 452, 453, 466, 474, 475, 482, 484, 485, 495, 496, 499, 507, 508, 513, 528, 536, 537, 543, 572, 575, 583, 584, 599, 601, 602, 636, 745, 796, 816, 822, 828, 946, 951, 954, 967, 968, 985, 990, 993, 1006, 1007, 1023, 1028, 1031, 1044, 1045, 1059, 1061, 1066, 1069, 1082, 1083, 1099, 1104, 1107, 1122, 1123, 1140, 1145, 1148, 1161, 1162, 1179, 1184, 1187, 1200, 1201, 1217, 1222, 1225, 1238, 1239, 1253, 1255, 1260, 1263, 1276, 1277, 1294, 1297, 1305, 1306, 1323, 1327, 1337, 1338, 1357, 1361, 1371, 1372, 1391, 1395, 1405, 1406, 1424, 1427, 1435, 1436, 1453, 1457, 1467, 1468, 1485, 1488, 1496, 1497, 1513, 1516, 1524, 1525, 1541, 1544, 1552, 1553, 1570, 1574, 1584, 1585, 1603, 1606, 1614, 1615, 1632, 1636, 1646, 1647, 1665, 1668, 1676, 1677, 1736, 1748, 1834, 1837, 1882, 1915, 1916], "bonu": 30, "new_arrai": 30, "overwrot": 30, "symbol": [30, 932], "conceptu": 30, "gone": 30, "bimod": 30, "layer": [30, 741, 924, 1748], "v2": [30, 31], "lost": [30, 1880], "suffici": [30, 31], "separ": [30, 662], "mainten": 30, "backend": 30, "think": 30, "tidier": 30, "consequ": [30, 32, 929, 930], "mark": [30, 1021, 1727], "leav": [30, 58, 61, 91, 122, 150, 153, 183, 186, 220, 248, 251, 281, 284, 314, 317, 347, 350, 381, 384, 414, 417, 447, 450, 480, 483, 516, 544, 591, 604, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684], "unspecifi": 30, "everywher": 30, "visibl": 30, "recogin": 30, "redefin": 30, "run_model": 30, "observ": [30, 33], "With": 30, "dealt": [30, 666], "uniform": 30, "uniformli": 30, "abstract": 30, "freeli": 30, "asmask": [30, 56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 455, 478, 487, 511, 519, 540, 546, 587, 593, 603, 605, 955, 956, 971, 977, 994, 995, 1010, 1016, 1032, 1033, 1048, 1054, 1070, 1071, 1086, 1092, 1108, 1109, 1126, 1132, 1149, 1150, 1165, 1171, 1188, 1189, 1204, 1210, 1226, 1227, 1242, 1248, 1264, 1265, 1280, 1286, 1309, 1315, 1341, 1348, 1375, 1382, 1409, 1416, 1439, 1445, 1471, 1478, 1500, 1506, 1528, 1534, 1556, 1562, 1588, 1595, 1618, 1624, 1650, 1657, 1680, 1686], "beed": 30, "thermodynam": [31, 32, 853], "framework": 31, "submodul": [31, 688, 745, 796, 814, 822, 835, 852, 903], "possibli": 31, "exhaust": 31, "librari": [31, 33, 34, 745, 796, 822, 1887, 1892], "polici": 31, "exact": [31, 857], "cantera": 31, "handler": 31, "ca": [31, 867], "extern": [31, 1727], "001": [31, 747, 797, 827], "three": [31, 32, 619, 931, 933, 934, 935, 936, 937, 938], "phase1": 31, "0x7f21c72222a0": 31, "broadcast": 31, "polynomi": [31, 680, 683], "4th": 31, "yield": 31, "a4": [31, 931, 934, 935, 936], "8543e": 31, "6756e": 31, "08": [31, 680, 683, 1696, 1698, 1702, 1704], "7831e": 31, "3156e": 31, "a0": [31, 829, 853], "8898e": 31, "00091476": 31, "350": 31, "rerun": [31, 36], "00044402": 31, "0004716": 31, "00044579": 31, "00071986": 31, "th": [31, 1748], "0004122": 31, "00044104": 31, "00041418": 31, "00069116": 31, "viscostii": 31, "custom_mu": 31, "reimplement": 31, "commonli": 31, "appropri": [31, 880, 905, 1727], "phase_02": 31, "0x7f21c7248400": 31, "vapor_pressur": [31, 684], "salin": [31, 860, 884, 891, 895, 902], "mass_to_molar": [31, 680, 683, 684], "mw": [31, 680, 856, 857, 858, 859, 862, 863, 872, 877, 882, 886, 887, 888, 889, 890, 897, 898, 899, 901, 1901], "molecular_weight": [31, 856, 857, 858, 859, 862, 863, 872, 877, 882, 886, 887, 888, 889, 890, 897, 898, 899, 901, 911, 1511, 1901], "liquid_pure_antoin": [31, 684], "therebi": 31, "molar_denstii": 31, "cycl": [31, 623], "upstream": 31, "unusu": 31, "reproduc": 31, "api": [31, 32, 492], "unnecessari": [31, 1059, 1097, 1253, 1728, 1746], "On": [31, 33, 36], "beta": [31, 929, 930], "oxygen": 31, "nitrogen": 31, "o2": 31, "phase_03": 31, "0x7f21c4379620": 31, "thermo": 31, "synonym": 31, "databas": 31, "BUT": 31, "host": 31, "7782": 31, "common_nam": 31, "charg": [31, 930], "formula": [31, 880, 920], "boiling_temperatur": [31, 883, 887, 889, 890], "1878078805": 31, "melting_temperatur": 31, "triple_point_temperatur": 31, "361": 31, "triple_point_pressur": 31, "277647044": 31, "dipole_mo": 31, "lj_diamet": [31, 862], "29728": 31, "lj_energi": [31, 862], "6520845934e": 31, "surface_tension_tb": [31, 864], "013145681055529814": 31, "molar_volume_tb": [31, 864], "8039990920723867e": 31, "9988": [31, 680], "critical_temperatur": [31, 853, 857, 858, 862, 869, 883, 890, 894, 898, 899, 901], "581": 31, "critical_pressur": [31, 862, 883, 887, 889, 894, 898, 899, 901], "5043000": 31, "critical_volum": [31, 857, 858], "33675715334e": 31, "critical_compressibilty_factor": 31, "28787424687871216": 31, "acentric_factor": [31, 857, 858, 862, 869, 887, 889, 894, 901], "0222": 31, "prefix": [31, 651], "stiel": [31, 899, 901], "thodo": [31, 899], "gas_pure_l": 31, "gas_pure_st": 31, "0102393e": 31, "tcrit": 31, "becuas": [31, 130], "gase": [31, 852], "standardliquid": [31, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628], "standardga": [31, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566], "approximat": 31, "h2o": [31, 1511], "popul": 31, "phase_04": 31, "0x7f21c43bc630": 31, "heat_capacity_ga": [31, 869], "heat_capac": [31, 866, 867, 868], "phase_05": 31, "0x7f21c72235b0": 31, "minim": 31, "liquid_pure_costald": 31, "vc": [31, 857, 858], "omega": [31, 857, 858, 862, 869, 887, 889, 894, 901], "gas_pure_trc": 31, "liquid_pure_rp": 31, "cpg": [31, 869], "liquid_pure_gismr": 31, "tb": [31, 883, 887, 889, 890], "liquid_pure_l": 31, "n2": 31, "standardgasmixtur": [31, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600], "79": [31, 33], "compositio": 31, "mixture_01": 31, "0x7f21c43bf1f0": 31, "mole_fract": [31, 1321, 1344, 1353, 1355, 1378, 1387, 1389, 1412, 1421, 1451, 1474, 1568, 1591, 1600, 1630, 1653, 1662], "blend": 31, "78599451e": 31, "01895979e": 31, "sub": [31, 952, 954, 955, 991, 993, 994, 1029, 1031, 1032, 1067, 1069, 1070, 1105, 1107, 1108, 1146, 1148, 1149, 1185, 1187, 1188, 1223, 1225, 1226, 1261, 1263, 1264, 1720, 1724, 1725, 1915, 1916], "0x7f21c43be0c0": 31, "0x7f21c43be890": 31, "liquidmixtur": [31, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1629], "gasmixtur": [31, 1320, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1567], "remove_comp": 31, "liter": [31, 966, 1005, 1043, 1081, 1121, 1160, 1199, 1237, 1275], "add_comp": 31, "compnam": [31, 874, 1353, 1387, 1421, 1600, 1662], "09391681e": 31, "6985128e": 31, "propertei": 31, "failur": 31, "health": [31, 1324, 1358, 1392, 1454, 1571, 1633, 1784, 1897, 1898], "mole_fraction_too_low": 31, "mole_fraction_too_high": 31, "symbmol": 31, "instruct": [31, 658], "mole_fraction_weight": 31, "55121679e": 31, "suffix": [31, 1902, 1903], "crucial": 31, "viscsoiti": 31, "turn": [31, 494, 571, 635, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664], "0x7f9e66b4bce0": 32, "driven": 32, "0x7f9eb49936a0": 32, "00089319": 32, "simplest": 32, "hagan": 32, "prefactor": [32, 938], "g_h": 32, "protip": 32, "84373405e": 32, "53217572e": 32, "37386190e": 32, "85089307e": 32, "27798616e": 32, "72134012e": 32, "29518045e": 32, "45218362e": 32, "56452869e": 32, "72627463e": 32, "49263954e": 32, "74641087e": 32, "59739219e": 32, "54471633e": 32, "06978061e": 32, "42106829e": 32, "54331987e": 32, "38347074e": 32, "29157595e": 32, "55333924e": 32, "61083330e": 32, "70936637e": 32, "65606370e": 32, "19885544e": 32, "87919277e": 32, "46713416e": 32, "42437545e": 32, "41768684e": 32, "57577507e": 32, "33367897e": 32, "22080591e": 32, "80314436e": 32, "38804576e": 32, "96520847e": 32, "97711827e": 32, "28681133e": 32, "54499397e": 32, "27407114e": 32, "14455104e": 32, "21102323e": 32, "auotmat": 32, "stokes_01": 32, "0x7f9e65d9bec0": 32, "set_rate_bc": 32, "preceed": [32, 1762], "sustain": [32, 922], "compon": [32, 853, 857, 863, 864, 875, 876, 877, 900, 932, 1320, 1321, 1330, 1344, 1353, 1354, 1355, 1364, 1378, 1387, 1388, 1389, 1398, 1412, 1421, 1450, 1451, 1460, 1474, 1567, 1568, 1577, 1591, 1600, 1629, 1630, 1639, 1653, 1662, 1748, 1902, 1903], "multiphys": [32, 524, 542], "quanti": 32, "160851": 32, "8993469": 32, "168990": 32, "87122144": 32, "144074": 32, "3350884": 32, "132821": 32, "5732894": 32, "140888": 32, "35612524": 32, "kpa": 32, "simplist": 32, "finish": 32, "intersect": [32, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 455, 466, 473, 474, 475, 478, 487, 499, 506, 507, 508, 511, 519, 528, 535, 536, 537, 540, 546, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 694, 696, 697, 698, 710, 711, 712, 725, 726, 727, 753, 771, 779, 780, 781, 808, 809, 810, 811, 813, 951, 952, 955, 956, 965, 966, 967, 968, 971, 977, 990, 991, 994, 995, 1004, 1005, 1006, 1007, 1010, 1016, 1028, 1029, 1032, 1033, 1042, 1043, 1044, 1045, 1048, 1054, 1066, 1067, 1070, 1071, 1080, 1081, 1082, 1083, 1086, 1092, 1104, 1105, 1108, 1109, 1120, 1121, 1122, 1123, 1126, 1132, 1145, 1146, 1149, 1150, 1159, 1160, 1161, 1162, 1165, 1171, 1184, 1185, 1188, 1189, 1198, 1199, 1200, 1201, 1204, 1210, 1222, 1223, 1226, 1227, 1236, 1237, 1238, 1239, 1242, 1248, 1260, 1261, 1264, 1265, 1274, 1275, 1276, 1277, 1280, 1286, 1297, 1304, 1305, 1306, 1309, 1315, 1327, 1336, 1337, 1338, 1341, 1348, 1361, 1370, 1371, 1372, 1375, 1382, 1395, 1404, 1405, 1406, 1409, 1416, 1427, 1434, 1435, 1436, 1439, 1445, 1457, 1466, 1467, 1468, 1471, 1478, 1488, 1495, 1496, 1497, 1500, 1506, 1516, 1523, 1524, 1525, 1528, 1534, 1544, 1551, 1552, 1553, 1556, 1562, 1574, 1583, 1584, 1585, 1588, 1595, 1606, 1613, 1614, 1615, 1618, 1624, 1636, 1645, 1646, 1647, 1650, 1657, 1668, 1675, 1676, 1677, 1680, 1686, 1720, 1724, 1725, 1868, 1869], "71806467e": 32, "64680657e": 32, "79263293e": 32, "93150749e": 32, "26171643e": 32, "30621212e": 32, "30880512e": 32, "22712101e": 32, "91819538e": 32, "71449283e": 32, "65320094e": 32, "44560927e": 32, "77750189e": 32, "03467661e": 32, "82496631e": 32, "91148145e": 32, "43067636e": 32, "20145183e": 32, "02965524e": 32, "05003441e": 32, "43143926e": 32, "80533528e": 32, "29707726e": 32, "19607483e": 32, "24991971e": 32, "07699570e": 32, "05695362e": 32, "22146572e": 32, "39719126e": 32, "24811582e": 32, "33321212e": 32, "81233709e": 32, "01360519e": 32, "55987838e": 32, "51103551e": 32, "93523850e": 32, "67911288e": 32, "02676733e": 32, "63206327e": 32, "80528530e": 32, "63509361e": 32, "84870930e": 32, "74308370e": 32, "77790457e": 32, "52162197e": 32, "02590118e": 32, "03859348e": 32, "27167028e": 32, "79802843e": 32, "12889449e": 32, "18174730e": 32, "12681782e": 32, "72638773e": 32, "55840342e": 32, "30493033e": 32, "17381044e": 32, "46653328e": 32, "13919671e": 32, "33197267e": 32, "18659155e": 32, "41998151e": 32, "39516869e": 32, "37237205e": 32, "07080682e": 32, "57874929e": 32, "67847797e": 32, "17249525e": 32, "20362190e": 32, "47498599e": 32, "16543020e": 32, "07184446e": 32, "50531435e": 32, "26626505e": 32, "17854386e": 32, "19384992e": 32, "13082594e": 32, "19122998e": 32, "30446858e": 32, "67144023e": 32, "23594036e": 32, "01228196e": 32, "82776847e": 32, "96969791e": 32, "23978991e": 32, "38042863e": 32, "54168831e": 32, "95278476e": 32, "76594414e": 32, "77330603e": 32, "33589527e": 32, "14936823e": 32, "11891321e": 32, "73912032e": 32, "08427155e": 32, "54391934e": 32, "71075260e": 32, "80087523e": 32, "91549358e": 32, "70090336e": 32, "91516444e": 32, "76124783e": 32, "poisseiul": 32, "f_h": 32, "roll": [32, 36], "invert": [32, 130], "f_": 32, "h": [32, 35, 647, 860, 880, 884, 895, 902, 920], "64684229e": 32, "24150979e": 32, "24776387e": 32, "76388230e": 32, "14938157e": 32, "57849209e": 32, "03580234e": 32, "31383719e": 32, "26117106e": 32, "41644397e": 32, "34871861e": 32, "56785967e": 32, "29509187e": 32, "24437271e": 32, "84876573e": 32, "91368857e": 32, "41006915e": 32, "25422178e": 32, "93491505e": 32, "34649812e": 32, "47501000e": 32, "56712620e": 32, "34576201e": 32, "09250257e": 32, "79120582e": 32, "33680796e": 32, "29112831e": 32, "28080841e": 32, "09925800e": 32, "20592805e": 32, "45788075e": 32, "52136720e": 32, "25361941e": 32, "42641485e": 32, "76982202e": 32, "16617316e": 32, "26342545e": 32, "91838598e": 32, "91252948e": 32, "95748988e": 32, "165906": 32, "41017929": 32, "174503": 32, "3210657": 32, "148432": 32, "77634929": 32, "136593": 32, "91630776": 32, "144935": 32, "23943639": 32, "inclus": 32, "32106571": 32, "impact": [33, 130], "multiphas": [33, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 551], "motiv": 33, "ordinari": 33, "imbibit": 33, "imbibt": 33, "menisci": 33, "plan": 33, "degre": [33, 1747, 1748], "displac": [33, 907, 927, 1710], "increasingli": 33, "p_": [33, 927], "decreas": 33, "suction": 33, "stem": 33, "regardless": [33, 99, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "clear": [33, 40, 41, 42, 60, 61, 64, 74, 90, 91, 101, 120, 122, 132, 133, 134, 152, 153, 155, 165, 166, 167, 185, 186, 188, 199, 218, 220, 230, 231, 232, 250, 251, 253, 263, 264, 265, 283, 284, 286, 296, 297, 298, 316, 317, 319, 329, 330, 331, 349, 350, 353, 363, 364, 365, 383, 384, 386, 396, 397, 398, 416, 417, 419, 429, 430, 431, 449, 450, 452, 462, 463, 464, 482, 483, 516, 526, 543, 544, 591, 604, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684], "inject": 33, "withdraw": 33, "connected_compon": [33, 1711, 1749], "drop_zero": [33, 949, 950, 988, 989, 1026, 1027, 1064, 1065, 1102, 1103, 1143, 1144, 1182, 1183, 1220, 1221, 1258, 1259], "51": 33, "57": 33, "65": [33, 880], "66": 33, "70": 33, "72": 33, "74": [33, 35], "81": 33, "82": 33, "84": 33, "87": 33, "88": 33, "92": 33, "94": 33, "95": 33, "101": [33, 956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265], "102": 33, "103": 33, "104": 33, "106": 33, "107": 33, "108": 33, "114": 33, "116": 33, "117": 33, "118": 33, "123": 33, "125": 33, "127": 33, "129": 33, "132": 33, "137": 33, "138": 33, "142": 33, "145": 33, "152": 33, "155": 33, "156": 33, "157": 33, "158": 33, "159": 33, "163": [33, 924], "164": 33, "165": 33, "166": 33, "167": 33, "168": [33, 907], "169": 33, "170": 33, "171": 33, "172": 33, "173": 33, "174": 33, "175": 33, "176": 33, "177": [33, 762], "178": 33, "179": 33, "181": 33, "182": 33, "183": 33, "184": 33, "185": 33, "186": 33, "187": 33, "188": 33, "189": 33, "191": 33, "192": 33, "193": 33, "194": 33, "195": 33, "196": 33, "197": 33, "198": 33, "199": 33, "201": [33, 956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265], "202": 33, "203": 33, "204": 33, "205": 33, "206": 33, "207": 33, "208": 33, "209": 33, "210": 33, "212": 33, "213": 33, "214": 33, "215": 33, "217": 33, "218": 33, "219": 33, "220": 33, "221": 33, "223": 33, "224": 33, "226": 33, "227": 33, "228": 33, "229": 33, "230": 33, "231": 33, "232": 33, "233": 33, "234": 33, "235": 33, "236": [33, 920], "237": 33, "238": 33, "239": 33, "240": [33, 895], "241": 33, "242": 33, "243": 33, "244": 33, "245": 33, "246": 33, "247": 33, "248": 33, "249": 33, "250": 33, "251": 33, "252": 33, "253": 33, "254": 33, "255": 33, "256": 33, "257": 33, "258": 33, "259": 33, "260": 33, "261": 33, "262": [33, 763], "263": 33, "264": 33, "265": 33, "266": 33, "267": 33, "268": 33, "269": 33, "270": 33, "271": 33, "272": 33, "273": [33, 860, 884, 891, 895, 902], "274": [33, 763], "275": 33, "276": 33, "277": 33, "278": 33, "279": 33, "280": 33, "281": 33, "282": 33, "283": 33, "284": 33, "285": 33, "286": 33, "287": 33, "288": 33, "289": 33, "290": [33, 741], "291": 33, "292": 33, "293": 33, "294": 33, "295": [33, 920], "296": 33, "cmap": [33, 1915, 1916], "cm": 33, "nipy_spectr": 33, "black": 33, "thoughout": 33, "speak": 33, "uninvad": [33, 99, 1711, 1719], "yellow": 33, "invaded_por": 33, "isin": 33, "viridi": [33, 1918], "yeild": [33, 1021], "increaingli": 33, "beyond": [33, 853, 907, 923, 1736], "drainage_01": 33, "0x7f928a16b330": 33, "trap": [33, 99, 123, 197, 221], "actaulli": 33, "histori": [33, 99], "inv_pattern": 33, "9000": 33, "grei": [33, 1920], "post": 33, "escap": [33, 99], "apply_trap": 33, "set_outlet_bc": [33, 197], "froma": 33, "namedtupl": 33, "evacu": 33, "data2": 33, "plateau": 33, "rigor": [33, 929, 930], "fictiti": 33, "invaded": 33, "percoalt": 33, "event": 33, "increment": 33, "mainli": 33, "binari": [33, 130, 196, 515, 551, 647, 863, 1320], "heap": [33, 196], "queue": 33, "accessb": 33, "newli": [33, 1710, 1750], "pinv": 33, "alloc": 33, "tinv": 33, "9260": 33, "551831957264": 33, "9493": 33, "684102948077": 33, "8650": 33, "998219036306": 33, "381": 33, "2nd": [33, 806], "heapq": 33, "hq": 33, "heapifi": 33, "easilii": 33, "sequenti": 33, "care": 33, "heappop": 33, "p_new": 33, "p_next": 33, "t_new": 33, "t_next": 33, "401": [33, 891], "maintain": [33, 1745, 1833, 1845, 1858, 1878], "heappush": 33, "confirm": [33, 857], "lowest": [33, 1918], "compil": 33, "numba": [33, 196], "acceler": 33, "abovec": 33, "reset": [33, 196, 817], "contigu": 33, "untrap": 33, "vari": 33, "overlai": 33, "data_ip": 33, "film": 33, "crack": 33, "jump": 33, "rise": 33, "fall": 33, "spike": 33, "vallei": 33, "never": [33, 746], "envelop": 33, "peak": 33, "current_directori": 34, "getcwd": 34, "plotli": [34, 1918], "pip": [34, 36], "instal": [34, 659], "pane": 34, "consol": [34, 36, 660], "editor": 34, "wirefram": 34, "transpar": [34, 1915, 1916, 1917], "static": [34, 1765, 1767, 1778, 1780], "scatter": [34, 1916], "plot_notebook": 34, "rotat": [34, 1747, 1918], "zoom": [34, 1918], "hover": 34, "box": 34, "node_color": [34, 1918, 1919], "node_scal": [34, 1918], "sceenshot": 34, "compat": [34, 36, 1710, 1908, 1909], "export": [34, 652, 653, 659, 665, 1915], "vtp": [34, 665, 666], "paraveiw": 34, "project_to_vtk": 34, "file_nam": 34, "directori": [34, 36, 647, 1887, 1892], "path_to_fil": 34, "_vtk": 34, "filenam": [34, 645, 646, 647, 649, 650, 652, 653, 654, 657, 658, 659, 661, 663, 665, 666, 667, 1887, 1888, 1892, 1893], "paraview_net": 34, "parview": 34, "click": 34, "button": 34, "glyph": 34, "tool": [34, 741], "pipelin": [34, 823], "alphabet": 34, "shrink": 34, "celldatatopointdata": 34, "transpos": 34, "extractsurfac": 34, "proport": [34, 826, 1916], "icon": 34, "glyph1": 34, "solid": [34, 852, 922, 929, 930, 1751, 1752, 1914, 1915, 1916], "tube1": 34, "didn": 34, "public": 35, "gostick": [35, 741, 907, 923], "aghighi": 35, "hinebaugh": 35, "tranter": 35, "hoeh": 35, "ma": 35, "dai": 35, "spellaci": 35, "sharqawi": [35, 860, 884, 895, 902], "mh": 35, "bazylak": 35, "burn": 35, "lehnert": 35, "scienc": [35, 763], "engin": [35, 880], "2016": [35, 197, 924], "doi": [35, 197, 887, 889], "1109": 35, "mcse": 35, "heavili": 36, "stack": [36, 1748], "environ": 36, "anaconda": 36, "Be": 36, "frequent": [36, 929, 930], "publish": 36, "releas": 36, "month": 36, "latest": 36, "branch": 36, "git": 36, "com": 36, "pmeal": 36, "contributor": 36, "uninstal": 36, "command": 36, "clone": [36, 1709, 1712], "repo": 36, "local": 36, "sound": 36, "termin": 36, "cmd": 36, "cd": 36, "somewher": 36, "disk": [36, 654, 1728], "txt": 36, "resort": 36, "voila": 36, "date": [36, 1893], "gui": [36, 1878], "gitfork": 36, "gitkraken": 36, "program": 36, "menu": [36, 1878], "env": 36, "kwarg": [38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 493, 494, 515, 524, 553, 570, 571, 619, 634, 635, 643, 822, 823, 853, 932, 943, 945, 982, 984, 1021, 1022, 1059, 1060, 1097, 1098, 1137, 1139, 1176, 1178, 1215, 1216, 1253, 1254, 1292, 1293, 1320, 1322, 1343, 1354, 1356, 1377, 1388, 1390, 1411, 1422, 1423, 1450, 1452, 1473, 1483, 1484, 1511, 1512, 1539, 1540, 1567, 1569, 1590, 1601, 1602, 1629, 1631, 1652, 1663, 1664, 1701, 1705, 1707, 1714, 1717, 1720, 1721, 1724, 1725, 1736, 1747, 1748, 1755, 1758, 1761, 1762, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1778, 1780, 1781, 1783, 1784, 1810, 1834, 1878, 1915, 1916], "reactivetransport": [38, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 427], "advect": [38, 327, 905], "iterative_prop": [38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 524], "bctype": [40, 60, 62, 74, 90, 101, 120, 121, 123, 132, 152, 165, 185, 199, 218, 219, 221, 230, 250, 263, 283, 296, 316, 329, 349, 351, 363, 383, 396, 416, 429, 449, 462, 482, 526, 543], "shallow": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 366, 399, 432, 465, 498, 527, 555, 574, 609, 621, 948, 987, 1025, 1063, 1101, 1142, 1181, 1219, 1257, 1296, 1326, 1360, 1394, 1426, 1456, 1487, 1515, 1543, 1573, 1605, 1635, 1667, 1786, 1798, 1812, 1825, 1850, 1863], "array_lik": [44, 58, 60, 61, 62, 63, 64, 65, 69, 76, 90, 91, 95, 103, 120, 122, 127, 136, 150, 152, 153, 154, 155, 156, 160, 169, 183, 185, 186, 187, 188, 189, 193, 201, 218, 220, 225, 234, 248, 250, 251, 252, 253, 254, 258, 267, 281, 283, 284, 285, 286, 287, 291, 300, 314, 316, 317, 318, 319, 320, 324, 333, 347, 348, 349, 350, 351, 352, 353, 354, 358, 367, 381, 382, 383, 384, 385, 386, 387, 391, 400, 414, 415, 416, 417, 418, 419, 420, 424, 433, 447, 448, 449, 450, 451, 452, 453, 457, 466, 480, 482, 483, 484, 485, 489, 499, 516, 521, 528, 542, 543, 544, 548, 567, 575, 591, 595, 599, 604, 643, 741, 826, 829, 907, 943, 944, 949, 950, 951, 952, 953, 954, 955, 956, 966, 975, 979, 982, 983, 988, 989, 990, 991, 992, 993, 994, 995, 1005, 1014, 1018, 1021, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1043, 1052, 1056, 1059, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1081, 1090, 1094, 1097, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1121, 1130, 1134, 1138, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1160, 1169, 1173, 1176, 1177, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1199, 1208, 1212, 1215, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1237, 1246, 1250, 1253, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1275, 1284, 1288, 1297, 1313, 1317, 1321, 1327, 1346, 1350, 1355, 1361, 1380, 1384, 1389, 1395, 1414, 1418, 1427, 1443, 1447, 1451, 1457, 1476, 1480, 1488, 1504, 1508, 1516, 1532, 1536, 1544, 1560, 1564, 1568, 1574, 1593, 1597, 1606, 1622, 1626, 1630, 1636, 1655, 1659, 1668, 1684, 1688, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1729, 1730, 1734, 1735, 1736, 1737, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1915, 1916, 1919], "union": [44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 455, 466, 473, 474, 475, 478, 487, 499, 506, 507, 508, 511, 519, 528, 535, 536, 537, 540, 546, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 951, 952, 955, 956, 965, 966, 967, 968, 971, 977, 990, 991, 994, 995, 1004, 1005, 1006, 1007, 1010, 1016, 1028, 1029, 1032, 1033, 1042, 1043, 1044, 1045, 1048, 1054, 1066, 1067, 1070, 1071, 1080, 1081, 1082, 1083, 1086, 1092, 1104, 1105, 1108, 1109, 1120, 1121, 1122, 1123, 1126, 1132, 1145, 1146, 1149, 1150, 1159, 1160, 1161, 1162, 1165, 1171, 1184, 1185, 1188, 1189, 1198, 1199, 1200, 1201, 1204, 1210, 1222, 1223, 1226, 1227, 1236, 1237, 1238, 1239, 1242, 1248, 1260, 1261, 1264, 1265, 1274, 1275, 1276, 1277, 1280, 1286, 1297, 1304, 1305, 1306, 1309, 1315, 1327, 1336, 1337, 1338, 1341, 1348, 1361, 1370, 1371, 1372, 1375, 1382, 1395, 1404, 1405, 1406, 1409, 1416, 1427, 1434, 1435, 1436, 1439, 1445, 1457, 1466, 1467, 1468, 1471, 1478, 1488, 1495, 1496, 1497, 1500, 1506, 1516, 1523, 1524, 1525, 1528, 1534, 1544, 1551, 1552, 1553, 1556, 1562, 1574, 1583, 1584, 1585, 1588, 1595, 1606, 1613, 1614, 1615, 1618, 1624, 1636, 1645, 1646, 1647, 1650, 1657, 1668, 1675, 1676, 1677, 1680, 1686, 1720, 1724, 1725, 1877], "exclusive_or": [44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 455, 466, 473, 474, 475, 478, 487, 499, 506, 507, 508, 511, 519, 528, 535, 536, 537, 540, 546, 575, 582, 583, 584, 587, 593, 599, 600, 601, 602, 603, 605, 951, 952, 955, 956, 965, 966, 967, 968, 971, 977, 990, 991, 994, 995, 1004, 1005, 1006, 1007, 1010, 1016, 1028, 1029, 1032, 1033, 1042, 1043, 1044, 1045, 1048, 1054, 1066, 1067, 1070, 1071, 1080, 1081, 1082, 1083, 1086, 1092, 1104, 1105, 1108, 1109, 1120, 1121, 1122, 1123, 1126, 1132, 1145, 1146, 1149, 1150, 1159, 1160, 1161, 1162, 1165, 1171, 1184, 1185, 1188, 1189, 1198, 1199, 1200, 1201, 1204, 1210, 1222, 1223, 1226, 1227, 1236, 1237, 1238, 1239, 1242, 1248, 1260, 1261, 1264, 1265, 1274, 1275, 1276, 1277, 1280, 1286, 1297, 1304, 1305, 1306, 1309, 1315, 1327, 1336, 1337, 1338, 1341, 1348, 1361, 1370, 1371, 1372, 1375, 1382, 1395, 1404, 1405, 1406, 1409, 1416, 1427, 1434, 1435, 1436, 1439, 1445, 1457, 1466, 1467, 1468, 1471, 1478, 1488, 1495, 1496, 1497, 1500, 1506, 1516, 1523, 1524, 1525, 1528, 1534, 1544, 1551, 1552, 1553, 1556, 1562, 1574, 1583, 1584, 1585, 1588, 1595, 1606, 1613, 1614, 1615, 1618, 1624, 1636, 1645, 1646, 1647, 1650, 1657, 1668, 1675, 1676, 1677, 1680, 1686, 1720, 1724, 1725], "criteria": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 466, 499, 528, 575, 599, 951, 954, 990, 993, 1028, 1031, 1066, 1069, 1104, 1107, 1145, 1148, 1184, 1187, 1222, 1225, 1260, 1263, 1297, 1327, 1361, 1395, 1427, 1457, 1488, 1516, 1544, 1574, 1606, 1636, 1668, 1718, 1914], "subset": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 466, 494, 499, 528, 552, 571, 575, 599, 635, 945, 951, 984, 990, 1022, 1028, 1060, 1066, 1098, 1104, 1139, 1145, 1178, 1184, 1216, 1222, 1254, 1260, 1293, 1297, 1322, 1327, 1356, 1361, 1390, 1395, 1423, 1427, 1452, 1457, 1484, 1488, 1512, 1516, 1540, 1544, 1569, 1574, 1602, 1606, 1631, 1636, 1664, 1668, 1913], "requrest": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 502, 531, 558, 578, 960, 999, 1037, 1075, 1115, 1154, 1193, 1231, 1269, 1300, 1331, 1365, 1399, 1430, 1461, 1491, 1519, 1547, 1578, 1609, 1640, 1671], "pore1": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 502, 531, 558, 578, 700, 715, 730, 960, 999, 1037, 1075, 1115, 1154, 1193, 1231, 1269, 1300, 1331, 1365, 1399, 1430, 1461, 1491, 1519, 1547, 1578, 1609, 1640, 1671], "pore2": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 502, 531, 558, 578, 700, 715, 730, 960, 999, 1037, 1075, 1115, 1154, 1193, 1231, 1269, 1300, 1331, 1365, 1399, 1430, 1461, 1491, 1519, 1547, 1578, 1609, 1640, 1671], "addition": [51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 506, 535, 582, 600, 662, 965, 1004, 1042, 1080, 1120, 1159, 1198, 1236, 1274, 1304, 1336, 1370, 1404, 1434, 1466, 1495, 1523, 1551, 1583, 1613, 1645, 1675], "sought": [51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 506, 535, 582, 600, 893, 953, 954, 955, 956, 965, 992, 993, 994, 995, 1004, 1030, 1031, 1032, 1033, 1042, 1068, 1069, 1070, 1071, 1080, 1106, 1107, 1108, 1109, 1110, 1111, 1120, 1147, 1148, 1149, 1150, 1159, 1186, 1187, 1188, 1189, 1198, 1224, 1225, 1226, 1227, 1236, 1262, 1263, 1264, 1265, 1274, 1304, 1336, 1370, 1404, 1434, 1466, 1495, 1523, 1551, 1583, 1613, 1645, 1675, 1720, 1724, 1725, 1726], "num_throat": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 474, 507, 536, 583, 601, 949, 950, 967, 988, 989, 1006, 1026, 1027, 1044, 1064, 1065, 1082, 1102, 1103, 1122, 1143, 1144, 1161, 1182, 1183, 1200, 1220, 1221, 1238, 1258, 1259, 1276, 1305, 1337, 1371, 1405, 1435, 1467, 1496, 1524, 1552, 1584, 1614, 1646, 1676], "num_por": [53, 85, 112, 145, 178, 210, 243, 276, 309, 342, 376, 409, 442, 475, 494, 508, 537, 571, 584, 602, 635, 945, 968, 984, 1007, 1022, 1045, 1060, 1083, 1098, 1123, 1139, 1162, 1178, 1201, 1216, 1239, 1254, 1277, 1293, 1306, 1322, 1338, 1356, 1372, 1390, 1406, 1423, 1436, 1452, 1468, 1484, 1497, 1512, 1525, 1540, 1553, 1569, 1585, 1602, 1615, 1631, 1647, 1664, 1677], "lifo": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 510, 539, 563, 586, 615, 630, 970, 1009, 1047, 1085, 1125, 1164, 1203, 1241, 1279, 1308, 1340, 1374, 1408, 1438, 1470, 1499, 1527, 1555, 1587, 1617, 1649, 1679, 1792, 1804, 1818, 1891], "keyerror": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 510, 539, 563, 586, 614, 615, 629, 630, 970, 1009, 1047, 1085, 1125, 1164, 1203, 1241, 1279, 1308, 1340, 1374, 1408, 1438, 1470, 1499, 1527, 1555, 1587, 1617, 1649, 1679, 1791, 1792, 1803, 1804, 1817, 1818, 1872, 1873, 1890, 1891], "indici": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 587, 603, 971, 1010, 1048, 1086, 1111, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680], "wildcard": [56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 455, 478, 487, 511, 519, 540, 546, 587, 593, 603, 605, 971, 977, 1010, 1016, 1048, 1054, 1086, 1092, 1126, 1132, 1165, 1171, 1204, 1210, 1242, 1248, 1280, 1286, 1309, 1315, 1341, 1348, 1375, 1382, 1409, 1416, 1439, 1445, 1471, 1478, 1500, 1506, 1528, 1534, 1556, 1562, 1588, 1595, 1618, 1624, 1650, 1657, 1680, 1686], "compound": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 587, 603, 880, 971, 1010, 1048, 1086, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680], "opt": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 587, 603, 971, 1010, 1048, 1086, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680], "verbos": [59, 151, 184, 249, 282, 315, 481, 642, 1908, 1909], "solutioncontain": [59, 151, 184, 249, 282, 315, 481], "bcvalu": [60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543], "wrapper": [60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543, 640, 853, 923, 924, 1354, 1388, 1691], "remvo": [60, 90, 120, 121, 123, 152, 185, 218, 219, 221, 250, 283, 316, 349, 383, 416, 449, 482, 543], "remaind": [61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 516, 544, 591, 604, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684], "intact": [61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 516, 544, 591, 604, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684], "outflow": [62, 351], "set_bc": [62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 453, 484, 485], "conditon": [63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 352, 354, 385, 387, 418, 420, 451, 453, 484, 485], "dirichlet": [65, 156, 189, 254, 287, 320, 354, 387, 420, 453, 485], "omit": [67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 455, 487, 519, 546, 593, 605, 949, 950, 977, 988, 989, 1016, 1026, 1027, 1054, 1064, 1065, 1092, 1102, 1103, 1132, 1143, 1144, 1171, 1182, 1183, 1210, 1220, 1221, 1248, 1258, 1259, 1286, 1315, 1348, 1382, 1416, 1445, 1478, 1506, 1534, 1562, 1595, 1624, 1657, 1686], "inidic": [67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 455, 487, 519, 546, 593, 605, 977, 1016, 1054, 1092, 1132, 1171, 1210, 1248, 1286, 1315, 1348, 1382, 1416, 1445, 1478, 1506, 1534, 1562, 1595, 1624, 1657, 1686], "foundat": 72, "themselv": [99, 853, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "pressu": 119, "defend": [123, 221], "void": 130, "confin": 130, "simualt": 130, "oppos": 130, "n_": 130, "lineartransport": [163, 228, 294], "fourierconduct": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "speed": [196, 1059, 1097, 1253, 1728, 1746], "upon": [196, 494, 495, 571, 572, 635, 636, 745, 796, 822, 945, 946, 984, 985, 1022, 1023, 1060, 1061, 1098, 1099, 1139, 1140, 1178, 1179, 1216, 1217, 1254, 1255, 1293, 1294, 1322, 1323, 1356, 1357, 1390, 1391, 1423, 1424, 1452, 1453, 1484, 1485, 1512, 1513, 1540, 1541, 1569, 1570, 1602, 1603, 1631, 1632, 1664, 1665], "effici": 196, "masson": 197, "ninf": 197, "alg": [197, 1915, 1916], "1016": 197, "cageo": 197, "003": 197, "ionic": 228, "role": 228, "ohmicconduct": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "phenomena": 261, "signifi": [348, 382, 415, 448, 542, 1914], "instanti": [348, 382, 415, 448, 542, 552, 1834, 1878], "intermedi": [348, 382, 415, 448, 542, 643], "transientsolut": [348, 382, 415, 448, 542, 643], "transientfickiandiffus": [362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "thermal": [394, 887, 888, 889, 890, 891, 940, 941], "transientfourierconduct": [395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "transientreactivetransport": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "obj": [494, 495, 571, 572, 635, 636, 945, 946, 984, 985, 1022, 1023, 1060, 1061, 1098, 1099, 1139, 1140, 1178, 1179, 1216, 1217, 1254, 1255, 1293, 1294, 1322, 1323, 1353, 1356, 1357, 1387, 1390, 1391, 1421, 1423, 1424, 1452, 1453, 1484, 1485, 1512, 1513, 1540, 1541, 1569, 1570, 1600, 1602, 1603, 1631, 1632, 1662, 1664, 1665, 1834, 1837, 1846, 1897, 1908, 1909], "immedi": [494, 571, 635, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664], "discard": [494, 571, 635, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664], "exclud": [513, 589, 637, 973, 1012, 1050, 1088, 1128, 1167, 1206, 1244, 1282, 1311, 1343, 1377, 1411, 1441, 1473, 1502, 1530, 1558, 1590, 1620, 1652, 1682, 1777], "constitu": 513, "domain1": [514, 590, 638, 974, 1013, 1051, 1089, 1129, 1168, 1207, 1245, 1283, 1312, 1345, 1379, 1413, 1442, 1475, 1503, 1531, 1559, 1592, 1621, 1654, 1683], "partit": [515, 551, 1698], "interfac": [515, 763, 907, 920, 927], "doesn": [517, 1914], "transientmultiphys": [525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550], "simultaneoulsi": 542, "pore_diffus": [551, 910, 911, 912, 913], "throat_diffus": [551, 910, 911, 912, 913], "size_factor": [551, 715, 730, 910, 911, 912, 913, 915, 916, 918, 919, 940, 941], "partition_coef_glob": 551, "partition_coef": 551, "global": [551, 955, 956, 994, 995, 1032, 1033, 1070, 1071, 1108, 1109, 1149, 1150, 1188, 1189, 1226, 1227, 1264, 1265, 1724, 1725], "dict_blurb": [551, 916, 922], "return_arr": [551, 916], "document": [551, 651, 1759, 1764, 1766, 1773, 1777, 1779, 1915, 1916], "subdomain": 552, "geomeri": 552, "boss": 552, "geom1": 552, "mixin": [552, 570, 598], "labelmixin": [599, 600, 601, 602, 603, 604, 605], "hold": [606, 651, 1846], "modelwrapp": [607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618], "unrepresent": [614, 629, 1791, 1803, 1817, 1890], "modelsmixin": 619, "dependency_list": [619, 622, 624], "modelsdict": [620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633], "intra": 622, "inter": 622, "unresolv": 623, "shell": [624, 1752], "map": [624, 648, 853, 1773, 1796], "drawn": [624, 846, 1915], "frame": 624, "modelsmixin2": [635, 636, 637, 638], "atol": [642, 1699], "rtol": [642, 1699, 1736, 1905, 1914], "linsolv": 642, "rk45": 642, "scipyrk45": 643, "od": 643, "dy": 643, "dt": [643, 762], "timespan": 643, "ex": 643, "t_i": 643, "jgf": [646, 654], "onto": 646, "voxel_s": 647, "3dma": 647, "np2th": 647, "th2np": 647, "resolut": 647, "eac": 647, "dimens": [647, 1059, 1097, 1253, 1710, 1715, 1728, 1736, 1747, 1914], "rocknam": 647, "th2pn": 647, "human": [647, 660], "brent": 647, "lindquist": 647, "medial": 647, "thin": [647, 1915], "skeleton": 647, "lee": [647, 894], "oh": 647, "venkatarangan": 647, "shin": 647, "prodanov": 647, "microtomographi": 647, "suni": 647, "stoni": 647, "brook": 647, "2005": [647, 895], "undirect": [648, 655, 1714, 1753, 1756], "gap": 648, "pore_": 648, "prepend": [648, 662], "central": [648, 749, 799, 834, 1736], "1x3": 648, "adj": 648, "throat_": 648, "embed": 648, "pergeo": 649, "avizo": 649, "pickl": [650, 1910], "dat": 651, "_node1": 651, "statoil": [651, 920, 1710], "maxim": 651, "ball": 651, "imperi": 651, "colleg": 651, "london": 651, "dataset": 651, "download": 651, "websit": 651, "header": 651, "theses": 651, "rectangular": [652, 769, 786, 789, 804, 813], "circular": [652, 751, 786, 788, 920, 1059, 1253, 1728, 1736, 1751], "comsol": 652, "mesh": [652, 659], "delim": [656, 662, 664], "explicit": 658, "salom": 658, "maxsiz": [659, 1828, 1840, 1853], "auto": [659, 1910], "fileformat": 659, "stl": 659, "logger_level": 659, "holder": [659, 666], "maximum": [659, 744, 746, 792, 795, 820, 821, 922, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1714, 1742], "finner": 659, "slower": 659, "gmsh": 659, "fluent": 659, "ngsolv": 659, "logger": 659, "netgen": 659, "triangl": [659, 763, 949, 988, 1026, 1064, 1102, 1143, 1182, 1220, 1258], "tessel": [659, 907, 1059, 1097, 1253, 1728, 1746, 1756], "cad": 659, "slow": [659, 853, 955, 994, 1032, 1070, 1108, 1110, 1111, 1149, 1188, 1226, 1264, 1720, 1724, 1725], "hdf5": [660, 663], "flag": [660, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1833, 1845, 1858], "categorize_bi": 662, "organ": 662, "net_01": 662, "hierarch": 662, "shorter": 664, "pvsm": 665, "fill_nan": 666, "fill_inf": 666, "vtk": 666, "rectangl": [671, 676, 677, 690, 695, 701, 702, 704, 709, 716, 717, 719, 724, 731, 732, 773, 778, 784, 785], "ideal_ga": 680, "0134": 680, "vdm": [680, 863], "gas_mixture_fesg": 680, "00422791": 680, "89606e": 680, "56383e": 680, "82082e": 680, "51815e": 680, "48553e": 680, "11409e": 680, "14280": 683, "47004": 683, "56254": 683, "00028": 683, "98691": 683, "0170967": 683, "3862e": 683, "00355837": 683, "00131e": 683, "23684e": 683, "1684e": 683, "generic_diffus": [686, 687], "generic_electr": 687, "generic_therm": 687, "symmetri": [690, 695, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 724, 727, 731, 732, 734, 738, 929, 930], "cone": [691, 693, 696, 705, 707, 710, 720, 722, 725, 774, 776, 779], "throat_coord": [693, 694, 695, 696, 697, 698, 707, 708, 709, 710, 711, 712, 722, 723, 724, 725, 726, 727, 776, 777, 778, 779, 780, 781], "centroid": [693, 694, 695, 696, 697, 698, 707, 708, 709, 710, 711, 712, 722, 723, 724, 726, 727, 765, 771, 776, 778, 779, 780, 781, 1097, 1253, 1733, 1744], "pyramid": [694, 697, 699, 708, 711, 714, 723, 726, 729, 777, 780, 782], "trapezoid": [695, 698, 702, 709, 712, 717, 724, 727, 732, 778, 781, 785], "pore_coord": [696, 697, 698, 779, 780, 781], "pore_aspect": [706, 716, 721, 731], "throat_aspect": [706, 716, 721, 731], "aspect": [706, 716, 721, 731, 762, 1898], "divis": [713, 728, 922], "s_": [715, 730, 927, 929, 930, 931, 933, 934, 935, 936, 937, 938], "ndarri": [737, 741, 753, 1721], "spatailli": [739, 741], "sent": [740, 748, 798, 829, 831, 952, 956, 991, 995, 1029, 1033, 1067, 1071, 1105, 1109, 1146, 1150, 1185, 1189, 1223, 1227, 1261, 1265], "strel": 741, "strength": 741, "extent": 741, "achiev": 741, "geoemtri": 741, "appproach": 741, "anistrop": 741, "ga": [741, 856, 862, 863, 869, 886, 887, 897, 898, 899, 907, 1354, 1539], "fuel": 741, "electrod": [741, 929, 930], "fibrou": [741, 907], "polym": 741, "electrolyt": [741, 929, 930], "membran": 741, "v173": 741, "pp277": 741, "pore_shap": [743, 1914], "adopt": [744, 792, 795, 820, 821], "eed": [745, 747, 749, 796, 797, 799, 822, 827, 834], "uninti": [745, 796, 822], "stats_obj": [745, 796, 822], "0001": [745, 747, 749, 796, 797, 799, 822, 827, 834, 932], "fixed_diamet": 746, "touch": [746, 922], "encompass": 746, "closer": 746, "zeno": 746, "cut": 746, "stddev": [747, 797, 827], "deviat": [747, 797, 827], "inner": [747, 749, 797, 799, 827, 834, 1751, 1752], "width": [749, 799, 834], "ndndarrai": [749, 799, 834], "throat_cross_sectional_area": [751, 752, 753, 754], "surface_area": [753, 802], "crude": 753, "curvatur": [753, 907], "neighbour": 758, "throat_perimet": [762, 763, 803], "perimet": [762, 763, 787, 788, 789, 803, 1746], "throat_area": [762, 763, 794, 810, 913, 920], "indiamet": 762, "jenkin": 762, "rao": 762, "elipt": 762, "pt": 762, "ellipt": [762, 922], "powder": 762, "technologi": 762, "pp": [762, 763], "1984": 762, "mason": [763, 907, 923], "morrow": [763, 907, 923], "mortensen": 763, "liquid": [763, 852, 857, 858, 864, 883, 888, 889, 890, 893, 894, 901, 1388, 1601], "irregular": 763, "colloid": [763, 907, 920], "1991": 763, "throat_centroid": 771, "endpoint": 771, "neighrbor": [792, 795, 820], "ignore_nan": [792, 795, 820, 821], "throat_shap": [794, 1914], "cirlc": 794, "sqaur": 794, "unit_vec": 806, "impicit": 806, "1st": 806, "assu": [807, 808, 809, 813], "reprsent": [808, 809, 810, 813], "hemispher": 811, "cap": [811, 1320], "placehold": 815, "useless": 817, "denomin": 819, "keyward": 823, "thermofluid": [825, 829], "corel": 825, "bin_cent": 826, "bin_height": 826, "skip": 829, "nth": 829, "thresh": [840, 845], "coincid": [840, 845], "furthest": 841, "closest": 842, "occurr": [844, 1826, 1831, 1838, 1843, 1851, 1856], "gabriel": 846, "subgraph": 846, "fuction": 846, "letsou_stiel": 853, "default_argmap": 853, "cvm": 853, "mixtur": [853, 857, 863, 875, 882, 886, 888, 897, 900, 901, 1320, 1321, 1324, 1330, 1332, 1344, 1353, 1354, 1355, 1358, 1364, 1366, 1378, 1387, 1388, 1389, 1392, 1398, 1400, 1412, 1421, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1511, 1539, 1567, 1568, 1571, 1577, 1579, 1591, 1600, 1601, 1629, 1630, 1633, 1639, 1641, 1653, 1662, 1902, 1903], "3e": 853, "9e": 853, "trail": 853, "iterpret": 853, "mix": [853, 857, 875, 900, 920], "agre": [853, 929, 930], "corrospod": [857, 858], "costald": [857, 858], "kg": [857, 859, 860, 878, 882, 884, 891, 895, 902], "m3": [857, 859, 864, 882], "mw_": 857, "mw_i": 857, "costald_mixtur": 857, "accentr": [858, 869, 887, 889, 894, 901], "dimensionless": [858, 869, 887, 889, 894, 901], "ndrrai": 859, "seawat": [860, 884, 891, 895, 902], "atmospher": [860, 884, 891, 902], "eq": [860, 884, 902, 929, 930], "boil": [860, 864, 883, 884, 887, 889, 890, 891, 902], "salt": [860, 878, 884, 891, 895, 902], "ppt": [860, 884, 891, 895, 902], "thousand": [860, 884, 891, 895, 902], "453": [860, 891, 902], "pct": 860, "lienhard": [860, 884, 895, 902], "zubair": [860, 884, 895, 902], "desalin": [860, 884, 891, 895, 902], "treatment": [860, 884, 895, 902], "2010": [860, 884, 895, 902], "chapman": 862, "enskog": 862, "molar_diffusion_volum": 863, "fuller": 863, "dij": 863, "gid": 863, "chromatogr": 863, "1965": 863, "schettler": 863, "ind": [863, 1716, 1718, 1720, 1721, 1724, 1725], "eng": 863, "chem": 863, "1966": 863, "enslei": 863, "3679": 863, "1969": 863, "vms_at_tb": 864, "sigmas_at_tb": 864, "tyn": 864, "calu": 864, "dilut": 864, "principl": 864, "kinemat": 864, "cp": [866, 868], "linearli": [866, 868], "trc_gas_data": 867, "capac": 869, "weighted_averag": 871, "logarithm": [875, 900, 1332, 1366, 1400, 1462, 1579, 1641], "rule": [875, 900, 1902, 1903], "ln": [875, 900, 936, 1332, 1366, 1400, 1462, 1579, 1641], "z_i": [875, 900, 1332, 1366, 1400, 1462, 1579, 1641], "expon": [875, 900, 927, 929, 930, 938, 1332, 1366, 1400, 1462, 1579, 1641], "guarante": 876, "conc": 878, "nacl": 878, "henri": 880, "gaseou": 880, "dissolv": 880, "kpx": 880, "atm": 880, "yaw": 880, "carl": 880, "solubl": 880, "sulfur": 880, "tradit": 880, "2003": 880, "liqiud": 882, "vapor": [882, 883, 893, 894, 895], "winterfeld": 882, "scriven": 882, "davi": 882, "brock": 883, "bird": 883, "313": 884, "percent": [884, 891, 895, 902], "wassiljew": 886, "hern": [886, 897], "zipper": [886, 897], "conductivti": 887, "gharagheizi": [887, 889, 898], "1002": [887, 889], "aic": [887, 889], "13938": [887, 889], "dippr9h": 888, "sato": 890, "jamieson": 891, "tudhop": 891, "393": 891, "1970": 891, "antoin": 893, "rpp": 893, "kesler": 894, "raoult": 895, "473": 895, "ashra": 895, "handbook": 895, "fundament": 895, "letsou": 901, "pore_pressur": [905, 913], "throat_hydraulic_conduct": [905, 913], "throat_diffusive_conduct": 905, "discret": [905, 1736], "diffuvs": 905, "impos": 905, "conduit_shape_factor": 905, "shape_factor": [905, 920], "r_toroid": [907, 923, 924], "toroid": [907, 922, 923, 924], "converg": [907, 923], "diverg": [907, 923], "meniscu": [907, 922, 923], "apex": [907, 923], "context": [907, 923], "sci": [907, 920], "1994": 907, "pemfc": 907, "voronoi": [907, 1097, 1110, 1111, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1756], "electrochem": [907, 929, 930], "soc": 907, "f731": 907, "2013": 907, "pore_temperatur": 911, "throat_temperatur": 911, "knudsen": 911, "molecular_weigth": 911, "pore_area": [913, 920], "taylor": 913, "ari": 913, "pore_conduct": [915, 916, 940, 941], "pore_viscos": [918, 919, 920], "throat_viscos": [918, 919, 920], "pore_shape_factor": 920, "throat_shape_factor": 920, "conduit_length": 920, "adapt": 920, "a_p": 920, "r_p": 920, "sf_p": 920, "theorat": 920, "p_p": 920, "4\u03c0": 920, "t_a": 920, "sf_t": 920, "t_p": 920, "valvatn": 920, "martin": 920, "blunt": 920, "2004": [920, 929, 930], "patzek": 920, "silin": 920, "2001": 920, "noncircular": 920, "creep": 920, "304": 920, "profile_equ": 922, "target_pc": [922, 923, 924], "num_point": [922, 923, 924, 1728], "throat_scale_a": 922, "scale_a": 922, "throat_scale_b": 922, "scale_b": 922, "touch_length": [922, 923, 924], "sinusoid": 922, "send": [922, 1727], "men": 922, "profil": [922, 923, 924], "assess": 922, "minima": 922, "maxima": 922, "perpendicular": 922, "protrud": 922, "therfor": 922, "po": 922, "xpo": 922, "rx": 922, "fa": 922, "fb": 922, "throatrad": 922, "fill_angl": 922, "alpha_min": 922, "alpha_max": 922, "c2x": 922, "gamma": [922, 929, 930], "cap_angl": 922, "rad_curv": 922, "men_data": 922, "men_max": 922, "toru": 923, "quarter": 924, "wavelength": 924, "amplitud": 924, "arctan": 924, "forner": 924, "cuenca": 924, "pefc": 924, "wettabl": 924, "ec": 924, "f1038": 924, "f1048": 924, "throat_occup": 926, "pore_occup": 926, "strict": 926, "agress": 926, "unoccupi": [926, 1749, 1755], "loos": 926, "pc_star": 927, "swp_star": 927, "eta": 927, "residu": 927, "i0_ref": [929, 930], "c_ref": [929, 930], "reaction_area": [929, 930], "solid_voltag": [929, 930], "electrolyte_voltag": [929, 930], "open_circuit_voltag": [929, 930], "butler": [929, 930], "volmer": [929, 930], "redox": [929, 930], "promot": [929, 930], "cathod": [929, 930], "theoret": [929, 930], "justif": [929, 930], "voltag": [929, 930], "equilibrium": [929, 930], "butler_volmer_voltag": 929, "former": [929, 930, 1834], "shouldn": [929, 930], "faradai": [929, 930], "book": [929, 930], "cite": [929, 930], "i_": [929, 930], "0ref": [929, 930], "rxn": [929, 930], "rt": [929, 930], "eta_": [929, 930], "phi_": [929, 930], "met": [929, 930], "u_": [929, 930], "electrostat": [929, 930], "consentr": [929, 930], "john": [929, 930], "newman": [929, 930], "karen": [929, 930], "thoma": [929, 930], "alyea": [929, 930], "wilei": [929, 930], "son": [929, 930], "chapter8": [929, 930], "electrolyte_concentr": 930, "rate_info": [930, 938], "butler_volmer_conc": 930, "a5": [931, 934, 935, 936], "a6": [931, 934], "eqn": 932, "sympi": 932, "evalu": [932, 1324, 1358, 1392, 1454, 1571, 1633], "sympifi": 932, "live": 932, "IF": 932, "referenc": 932, "st": 932, "arg_map": 932, "log_": 934, "pore_thermal_conduct": 941, "throat_thermal_conduct": 941, "overrid": [943, 982, 1059, 1097, 1137, 1176, 1215, 1253], "identif": [943, 982, 1059, 1097, 1137, 1176, 1215, 1253, 1750], "belon": [943, 1176], "corner_sit": [943, 1176], "body_sit": 943, "incid": [943, 950, 961, 982, 989, 1000, 1021, 1027, 1038, 1059, 1065, 1076, 1097, 1103, 1116, 1137, 1144, 1155, 1176, 1183, 1194, 1215, 1221, 1232, 1253, 1259, 1270], "mirror": [949, 988, 1026, 1064, 1102, 1143, 1182, 1220, 1258], "wise": [949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "slice": [949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "algebra": [949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "routin": [949, 950, 959, 961, 988, 989, 998, 1000, 1026, 1027, 1036, 1038, 1064, 1065, 1074, 1076, 1102, 1103, 1114, 1116, 1143, 1144, 1153, 1155, 1182, 1183, 1192, 1194, 1220, 1221, 1230, 1232, 1258, 1259, 1268, 1270], "sparse_arrai": [950, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259], "cousin": [950, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259], "1d": [952, 955, 956, 966, 991, 994, 995, 1005, 1029, 1032, 1033, 1043, 1067, 1070, 1071, 1081, 1105, 1108, 1109, 1121, 1146, 1149, 1150, 1160, 1185, 1188, 1189, 1199, 1223, 1226, 1227, 1237, 1261, 1264, 1265, 1275, 1715], "arra": [952, 991, 1029, 1067, 1105, 1146, 1185, 1223, 1261], "minu": [952, 955, 956, 966, 991, 994, 995, 1005, 1029, 1032, 1033, 1043, 1067, 1070, 1071, 1081, 1105, 1108, 1109, 1121, 1146, 1149, 1150, 1160, 1185, 1188, 1189, 1199, 1223, 1226, 1227, 1237, 1261, 1264, 1265, 1275, 1720, 1724, 1725], "isnan": [953, 992, 1030, 1068, 1106, 1147, 1186, 1224, 1262], "include_input": [954, 955, 993, 994, 1031, 1032, 1069, 1070, 1107, 1108, 1148, 1149, 1187, 1188, 1225, 1226, 1263, 1264, 1725], "radial": [954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "toplog": [954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "whom": [954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "nearbi": [954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "compress": [955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1720, 1724, 1725], "unflatten": [955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1720, 1724, 1725], "bond": [956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265, 1711, 1719, 1720, 1723, 1737, 1749, 1755], "sp": [959, 998, 1036, 1074, 1114, 1153, 1192, 1230, 1268], "uncertain": [966, 1005, 1043, 1081, 1121, 1160, 1199, 1237, 1275], "reduce_coordin": 982, "permit": 982, "disconnect": [982, 1755, 1898], "kept": 1021, "cubictempl": [1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058], "across": [1059, 1097, 1253, 1746], "unreason": 1059, "risk": [1059, 1097, 1253, 1728, 1746], "smooth": [1059, 1097, 1253, 1728, 1746], "vertic": [1059, 1097, 1253], "outsid": [1059, 1097, 1253, 1727, 1736], "truli": [1059, 1253], "clean": [1059, 1253], "outer": [1059, 1253, 1746, 1751, 1752], "artifact": [1059, 1253], "geolog": [1059, 1253], "flexibl": [1059, 1253], "relax": [1097, 1253], "hull": [1097, 1110, 1253, 1733], "convex": [1110, 1733], "metod": 1110, "facet": 1111, "ridg": 1111, "face_sit": 1176, "head": [1215, 1902, 1903], "num_neighbor": 1215, "construct": 1215, "preset": [1292, 1422, 1663], "lennard": 1320, "jone": 1320, "binaryga": [1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353], "healthdict": [1324, 1358, 1392, 1454, 1571, 1633, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1897], "uniti": [1324, 1358, 1392, 1454, 1571, 1633], "healthi": [1324, 1358, 1392, 1454, 1571, 1633, 1784, 1897], "weigth": [1332, 1366, 1400, 1462, 1579, 1641], "getter": [1353, 1387, 1421, 1600, 1662], "multicompon": 1450, "genericnetwork": 1511, "tabul": 1511, "contant": 1511, "gas_mix": 1567, "liq_mix": 1629, "standardliquidmixtur": [1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662], "basesolv": 1693, "directsolv": 1695, "tol": [1696, 1698, 1702, 1704, 1742], "iterativesolv": 1697, "petsc": [1698, 1699], "parallel": 1698, "mpirun": 1698, "num_cor": 1698, "petsclinearsolv": 1699, "solver_typ": 1699, "cg": [1699, 1704], "precondion": 1699, "jacobi": 1699, "vec": 1699, "destroi": 1699, "csr_matrix": 1699, "conjug": 1699, "precondition": 1699, "precondit": 1699, "factorization_typ": 1699, "lu": 1699, "pypardiso": 1700, "pardisospsolv": 1701, "pyamg": 1702, "ruge_stuben_solv": 1702, "pyamgrugestubensolv": 1703, "scipycg": 1705, "scipyspsolv": 1707, "move_to": 1709, "apply_label": 1709, "clone_por": 1709, "translat": [1709, 1750], "cl": 1710, "occupied_bond": [1711, 1755], "acccord": [1711, 1749], "parent": 1712, "sibl": 1712, "pores1": 1713, "pores2": 1713, "consecut": [1713, 1744], "member": [1713, 1866, 1873], "batch": 1713, "force_triu": 1714, "drop_diag": 1714, "drop_dup": 1714, "drop_neg": 1714, "dim": 1715, "headless": [1716, 1898], "dropped_edg": 1716, "render": 1716, "invalid": [1716, 1760, 1782], "p_label": 1719, "t_label": 1719, "inds_1": 1722, "inds_2": 1722, "somtim": [1724, 1725], "pore_pair": 1726, "shortest": 1726, "node_path": 1726, "edge_path": 1726, "dijkstra": 1726, "triangul": [1727, 1753], "top_surfac": 1727, "sufac": 1727, "fail": [1727, 1846], "domain_s": [1728, 1746], "rectilinear": 1728, "height": [1728, 1736, 1751], "excess": 1728, "cart2sph": 1728, "cart2cyl": 1728, "enclos": [1733, 1762], "xyz": 1733, "pores_bc": 1734, "coplanar": 1735, "permiss": 1736, "upward": 1736, "threshold": 1736, "find_surface_por": 1742, "donor": [1743, 1750], "include_neighbor": 1744, "preferr": 1744, "continu": 1744, "find_nearby_por": 1744, "relect": 1746, "relfect": 1746, "transform": [1747, 1748], "copi": [1747, 1748, 1880, 1882], "shear_coord": 1747, "shear": 1748, "ai": 1748, "az": 1748, "bx": 1748, "bz": 1748, "cx": 1748, "cy": 1748, "rotate_coord": 1748, "aj": 1748, "occupied_sit": [1749, 1755], "p_network": 1750, "p_donor": 1750, "len_max": 1750, "label_suffix": 1750, "label_stitch": 1750, "recipi": 1750, "defaul": 1750, "recipienet": 1750, "disc": 1751, "annulu": 1751, "demarc": [1751, 1752], "tri": 1753, "unweight": [1753, 1756], "b_label": 1755, "s_label": 1755, "bond_percol": 1755, "site_percol": 1755, "vor": 1756, "processor": 1758, "docor": [1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783], "shall": [1759, 1764, 1766, 1769, 1771, 1775, 1777, 1779], "dedent": [1759, 1777, 1779, 1782], "with_ind": 1759, "indent": [1759, 1782], "stacklevel": [1760, 1782], "safe_modul": [1760, 1782], "deprec": [1761, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1778, 1780, 1781, 1783], "base_kei": [1762, 1764, 1766, 1777, 1779], "no_arg": 1762, "no_kwarg": 1762, "no_args_kwarg": 1762, "similarili": 1762, "classmethod": 1763, "docrep": [1763, 1765, 1767, 1777, 1778, 1779, 1780], "delete_kwarg": [1763, 1773], "no_": 1764, "original_kei": [1764, 1777], "no_param1": 1764, "param2": [1764, 1777], "keep_param": [1764, 1773, 1778, 1779], "delete_typ": [1764, 1767, 1773, 1779], "delete_param": [1765, 1766, 1773, 1777], "out_kei": [1766, 1779], "keep_typ": [1766, 1773, 1777, 1780], "get_sect": [1768, 1774, 1777, 1779], "descriptor": 1768, "summary_ext": 1769, "get_extended_summari": [1770, 1771], "get_summari": [1771, 1776], "full_desc": 1771, "get_full_descript": 1772, "exctract": 1773, "guidelin": 1773, "param_like_sect": 1773, "text_sect": 1773, "split": 1773, "newlin": [1773, 1775], "napoleon": 1773, "save_docstr": 1773, "basicli": 1775, "param1": 1777, "reus": [1777, 1779], "docstringprocessor": [1777, 1779], "do_someth": [1777, 1779], "That": [1777, 1779], "doc_kei": [1777, 1779], "do_less": [1777, 1779], "my": [1777, 1779], "__doc__": [1777, 1779], "no_b": 1777, "int_onli": 1779, "no_float": 1779, "get_docstr": 1781, "unhealthi": 1784, "delimit": 1796, "brief": [1796, 1881], "to_dict": 1796, "unravel": 1796, "nesteddict": [1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809], "dct": 1806, "nicer": 1810, "item1": [1810, 1822], "item2": [1810, 1822], "item3": [1810, 1822], "item4": 1810, "printabledict": [1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821], "temp": 1822, "printablelist": [1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833], "sy": [1828, 1840, 1853], "valueerror": [1828, 1831, 1840, 1843, 1853, 1856], "indexerror": [1830, 1842, 1855], "IN": [1832, 1844, 1857], "ascend": [1833, 1845, 1858], "modifi": [1833, 1845, 1858], "stabl": [1833, 1845, 1858], "moreov": 1834, "original_uuid": 1837, "456": 1846, "null": 1869, "highest": 1878, "adminstr": 1878, "singleton": 1878, "wherev": 1878, "record": 1878, "renam": 1887, "load_workspac": 1887, "saved_fil": [1887, 1892], "networkssaved_fil": [1887, 1892], "pathlib": [1887, 1892], "save_workspac": 1892, "zip": 1893, "archiv": 1893, "load_project": 1893, "deem": 1897, "bidirect": 1898, "offend": 1898, "restor": 1898, "largest": [1898, 1914], "struct": [1899, 1911], "wtih": 1899, "input_list": 1900, "hr": [1902, 1903], "__str__": [1902, 1903], "workaround": [1902, 1903], "enhanc": [1902, 1903], "horizont": [1902, 1903], "get_printable_prop": 1902, "get_printable_label": 1903, "decor": 1904, "inevit": 1904, "temporarili": 1904, "myfun": 1904, "33333333": 1904, "input_dict": 1910, "vivifi": 1910, "draw": 1913, "max_dim": 1914, "label_bi": [1915, 1916], "jet": [1915, 1916], "linestyl": 1915, "veiw": 1915, "overlaid": [1915, 1916], "colormap": [1915, 1916, 1918], "specfi": [1915, 1916], "invis": [1915, 1916], "dash": 1915, "dashdot": 1915, "dot": 1915, "thick": [1915, 1918, 1919], "font": [1915, 1916, 1919, 1921], "line3dcollect": 1915, "linecollect": 1915, "mpl": [1915, 1916], "agg": [1915, 1916], "add_boundary_por": [1915, 1916], "plot_throat": 1917, "opaqu": 1917, "edge_color": [1918, 1919], "node_s": [1918, 1919], "edge_scal": 1918, "emploi": 1918, "scaler": 1918, "resiz": 1918, "spyder": 1918, "jupyt": 1918, "pore_label": 1919, "throat_label": 1919, "line_width": 1919, "border": 1919, "pore_color": 1920, "throat_color": 1920, "bgcolor": 1920, "vispi": 1920, "prettifi": 1921}, "objects": {"": [[1922, 0, 0, "-", "openpnm"]], "openpnm": [[37, 0, 0, "-", "algorithms"], [492, 0, 0, "-", "contrib"], [552, 0, 0, "-", "core"], [640, 0, 0, "-", "integrators"], [644, 0, 0, "-", "io"], [668, 0, 0, "-", "models"], [942, 0, 0, "-", "network"], [1291, 0, 0, "-", "phase"], [1691, 0, 0, "-", "solvers"], [1708, 0, 0, "-", "topotools"], [1757, 0, 0, "-", "utils"], [1912, 0, 0, "-", "visualization"]], "openpnm.algorithms": [[38, 1, 1, "", "AdvectionDiffusion"], [72, 1, 1, "", "Algorithm"], [98, 1, 1, "", "Drainage"], [130, 1, 1, "", "FickianDiffusion"], [163, 1, 1, "", "FourierConduction"], [196, 1, 1, "", "InvasionPercolation"], [228, 1, 1, "", "OhmicConduction"], [261, 1, 1, "", "ReactiveTransport"], [294, 1, 1, "", "StokesFlow"], [327, 1, 1, "", "TransientAdvectionDiffusion"], [361, 1, 1, "", "TransientFickianDiffusion"], [394, 1, 1, "", "TransientFourierConduction"], [427, 1, 1, "", "TransientReactiveTransport"], [460, 1, 1, "", "Transport"]], "openpnm.algorithms.AdvectionDiffusion": [[39, 2, 1, "", "clear"], [40, 2, 1, "", "clear_BCs"], [41, 2, 1, "", "clear_rate_BCs"], [42, 2, 1, "", "clear_value_BCs"], [43, 2, 1, "", "copy"], [44, 2, 1, "", "filter_by_label"], [45, 2, 1, "", "fromkeys"], [46, 2, 1, "", "get"], [47, 2, 1, "", "get_conduit_data"], [48, 2, 1, "", "interpolate_data"], [49, 2, 1, "", "items"], [50, 2, 1, "", "keys"], [51, 2, 1, "", "labels"], [52, 2, 1, "", "num_pores"], [53, 2, 1, "", "num_throats"], [54, 2, 1, "", "pop"], [55, 2, 1, "", "popitem"], [56, 2, 1, "", "pores"], [57, 2, 1, "", "props"], [58, 2, 1, "", "rate"], [59, 2, 1, "", "run"], [60, 2, 1, "", "set_BC"], [61, 2, 1, "", "set_label"], [62, 2, 1, "", "set_outflow_BC"], [63, 2, 1, "", "set_rate_BC"], [64, 2, 1, "", "set_source"], [65, 2, 1, "", "set_value_BC"], [66, 2, 1, "", "setdefault"], [67, 2, 1, "", "throats"], [68, 2, 1, "", "to_indices"], [69, 2, 1, "", "to_mask"], [70, 2, 1, "", "update"], [71, 2, 1, "", "values"]], "openpnm.algorithms.Algorithm": [[73, 2, 1, "", "clear"], [74, 2, 1, "", "clear_BCs"], [75, 2, 1, "", "copy"], [76, 2, 1, "", "filter_by_label"], [77, 2, 1, "", "fromkeys"], [78, 2, 1, "", "get"], [79, 2, 1, "", "get_conduit_data"], [80, 2, 1, "", "interpolate_data"], [81, 2, 1, "", "items"], [82, 2, 1, "", "keys"], [83, 2, 1, "", "labels"], [84, 2, 1, "", "num_pores"], [85, 2, 1, "", "num_throats"], [86, 2, 1, "", "pop"], [87, 2, 1, "", "popitem"], [88, 2, 1, "", "pores"], [89, 2, 1, "", "props"], [90, 2, 1, "", "set_BC"], [91, 2, 1, "", "set_label"], [92, 2, 1, "", "setdefault"], [93, 2, 1, "", "throats"], [94, 2, 1, "", "to_indices"], [95, 2, 1, "", "to_mask"], [96, 2, 1, "", "update"], [97, 2, 1, "", "values"]], "openpnm.algorithms.Drainage": [[99, 2, 1, "", "apply_trapping"], [100, 2, 1, "", "clear"], [101, 2, 1, "", "clear_BCs"], [102, 2, 1, "", "copy"], [103, 2, 1, "", "filter_by_label"], [104, 2, 1, "", "fromkeys"], [105, 2, 1, "", "get"], [106, 2, 1, "", "get_conduit_data"], [107, 2, 1, "", "interpolate_data"], [108, 2, 1, "", "items"], [109, 2, 1, "", "keys"], [110, 2, 1, "", "labels"], [111, 2, 1, "", "num_pores"], [112, 2, 1, "", "num_throats"], [113, 2, 1, "", "pc_curve"], [114, 2, 1, "", "pop"], [115, 2, 1, "", "popitem"], [116, 2, 1, "", "pores"], [117, 2, 1, "", "props"], [118, 2, 1, "", "reset"], [119, 2, 1, "", "run"], [120, 2, 1, "", "set_BC"], [121, 2, 1, "", "set_inlet_BC"], [122, 2, 1, "", "set_label"], [123, 2, 1, "", "set_outlet_BC"], [124, 2, 1, "", "setdefault"], [125, 2, 1, "", "throats"], [126, 2, 1, "", "to_indices"], [127, 2, 1, "", "to_mask"], [128, 2, 1, "", "update"], [129, 2, 1, "", "values"]], "openpnm.algorithms.FickianDiffusion": [[131, 2, 1, "", "clear"], [132, 2, 1, "", "clear_BCs"], [133, 2, 1, "", "clear_rate_BCs"], [134, 2, 1, "", "clear_value_BCs"], [135, 2, 1, "", "copy"], [136, 2, 1, "", "filter_by_label"], [137, 2, 1, "", "fromkeys"], [138, 2, 1, "", "get"], [139, 2, 1, "", "get_conduit_data"], [140, 2, 1, "", "interpolate_data"], [141, 2, 1, "", "items"], [142, 2, 1, "", "keys"], [143, 2, 1, "", "labels"], [144, 2, 1, "", "num_pores"], [145, 2, 1, "", "num_throats"], [146, 2, 1, "", "pop"], [147, 2, 1, "", "popitem"], [148, 2, 1, "", "pores"], [149, 2, 1, "", "props"], [150, 2, 1, "", "rate"], [151, 2, 1, "", "run"], [152, 2, 1, "", "set_BC"], [153, 2, 1, "", "set_label"], [154, 2, 1, "", "set_rate_BC"], [155, 2, 1, "", "set_source"], [156, 2, 1, "", "set_value_BC"], [157, 2, 1, "", "setdefault"], [158, 2, 1, "", "throats"], [159, 2, 1, "", "to_indices"], [160, 2, 1, "", "to_mask"], [161, 2, 1, "", "update"], [162, 2, 1, "", "values"]], "openpnm.algorithms.FourierConduction": [[164, 2, 1, "", "clear"], [165, 2, 1, "", "clear_BCs"], [166, 2, 1, "", "clear_rate_BCs"], [167, 2, 1, "", "clear_value_BCs"], [168, 2, 1, "", "copy"], [169, 2, 1, "", "filter_by_label"], [170, 2, 1, "", "fromkeys"], [171, 2, 1, "", "get"], [172, 2, 1, "", "get_conduit_data"], [173, 2, 1, "", "interpolate_data"], [174, 2, 1, "", "items"], [175, 2, 1, "", "keys"], [176, 2, 1, "", "labels"], [177, 2, 1, "", "num_pores"], [178, 2, 1, "", "num_throats"], [179, 2, 1, "", "pop"], [180, 2, 1, "", "popitem"], [181, 2, 1, "", "pores"], [182, 2, 1, "", "props"], [183, 2, 1, "", "rate"], [184, 2, 1, "", "run"], [185, 2, 1, "", "set_BC"], [186, 2, 1, "", "set_label"], [187, 2, 1, "", "set_rate_BC"], [188, 2, 1, "", "set_source"], [189, 2, 1, "", "set_value_BC"], [190, 2, 1, "", "setdefault"], [191, 2, 1, "", "throats"], [192, 2, 1, "", "to_indices"], [193, 2, 1, "", "to_mask"], [194, 2, 1, "", "update"], [195, 2, 1, "", "values"]], "openpnm.algorithms.InvasionPercolation": [[197, 2, 1, "", "apply_trapping"], [198, 2, 1, "", "clear"], [199, 2, 1, "", "clear_BCs"], [200, 2, 1, "", "copy"], [201, 2, 1, "", "filter_by_label"], [202, 2, 1, "", "fromkeys"], [203, 2, 1, "", "get"], [204, 2, 1, "", "get_conduit_data"], [205, 2, 1, "", "interpolate_data"], [206, 2, 1, "", "items"], [207, 2, 1, "", "keys"], [208, 2, 1, "", "labels"], [209, 2, 1, "", "num_pores"], [210, 2, 1, "", "num_throats"], [211, 2, 1, "", "pc_curve"], [212, 2, 1, "", "pop"], [213, 2, 1, "", "popitem"], [214, 2, 1, "", "pores"], [215, 2, 1, "", "props"], [216, 2, 1, "", "reset"], [217, 2, 1, "", "run"], [218, 2, 1, "", "set_BC"], [219, 2, 1, "", "set_inlet_BC"], [220, 2, 1, "", "set_label"], [221, 2, 1, "", "set_outlet_BC"], [222, 2, 1, "", "setdefault"], [223, 2, 1, "", "throats"], [224, 2, 1, "", "to_indices"], [225, 2, 1, "", "to_mask"], [226, 2, 1, "", "update"], [227, 2, 1, "", "values"]], "openpnm.algorithms.OhmicConduction": [[229, 2, 1, "", "clear"], [230, 2, 1, "", "clear_BCs"], [231, 2, 1, "", "clear_rate_BCs"], [232, 2, 1, "", "clear_value_BCs"], [233, 2, 1, "", "copy"], [234, 2, 1, "", "filter_by_label"], [235, 2, 1, "", "fromkeys"], [236, 2, 1, "", "get"], [237, 2, 1, "", "get_conduit_data"], [238, 2, 1, "", "interpolate_data"], [239, 2, 1, "", "items"], [240, 2, 1, "", "keys"], [241, 2, 1, "", "labels"], [242, 2, 1, "", "num_pores"], [243, 2, 1, "", "num_throats"], [244, 2, 1, "", "pop"], [245, 2, 1, "", "popitem"], [246, 2, 1, "", "pores"], [247, 2, 1, "", "props"], [248, 2, 1, "", "rate"], [249, 2, 1, "", "run"], [250, 2, 1, "", "set_BC"], [251, 2, 1, "", "set_label"], [252, 2, 1, "", "set_rate_BC"], [253, 2, 1, "", "set_source"], [254, 2, 1, "", "set_value_BC"], [255, 2, 1, "", "setdefault"], [256, 2, 1, "", "throats"], [257, 2, 1, "", "to_indices"], [258, 2, 1, "", "to_mask"], [259, 2, 1, "", "update"], [260, 2, 1, "", "values"]], "openpnm.algorithms.ReactiveTransport": [[262, 2, 1, "", "clear"], [263, 2, 1, "", "clear_BCs"], [264, 2, 1, "", "clear_rate_BCs"], [265, 2, 1, "", "clear_value_BCs"], [266, 2, 1, "", "copy"], [267, 2, 1, "", "filter_by_label"], [268, 2, 1, "", "fromkeys"], [269, 2, 1, "", "get"], [270, 2, 1, "", "get_conduit_data"], [271, 2, 1, "", "interpolate_data"], [272, 2, 1, "", "items"], [273, 2, 1, "", "keys"], [274, 2, 1, "", "labels"], [275, 2, 1, "", "num_pores"], [276, 2, 1, "", "num_throats"], [277, 2, 1, "", "pop"], [278, 2, 1, "", "popitem"], [279, 2, 1, "", "pores"], [280, 2, 1, "", "props"], [281, 2, 1, "", "rate"], [282, 2, 1, "", "run"], [283, 2, 1, "", "set_BC"], [284, 2, 1, "", "set_label"], [285, 2, 1, "", "set_rate_BC"], [286, 2, 1, "", "set_source"], [287, 2, 1, "", "set_value_BC"], [288, 2, 1, "", "setdefault"], [289, 2, 1, "", "throats"], [290, 2, 1, "", "to_indices"], [291, 2, 1, "", "to_mask"], [292, 2, 1, "", "update"], [293, 2, 1, "", "values"]], "openpnm.algorithms.StokesFlow": [[295, 2, 1, "", "clear"], [296, 2, 1, "", "clear_BCs"], [297, 2, 1, "", "clear_rate_BCs"], [298, 2, 1, "", "clear_value_BCs"], [299, 2, 1, "", "copy"], [300, 2, 1, "", "filter_by_label"], [301, 2, 1, "", "fromkeys"], [302, 2, 1, "", "get"], [303, 2, 1, "", "get_conduit_data"], [304, 2, 1, "", "interpolate_data"], [305, 2, 1, "", "items"], [306, 2, 1, "", "keys"], [307, 2, 1, "", "labels"], [308, 2, 1, "", "num_pores"], [309, 2, 1, "", "num_throats"], [310, 2, 1, "", "pop"], [311, 2, 1, "", "popitem"], [312, 2, 1, "", "pores"], [313, 2, 1, "", "props"], [314, 2, 1, "", "rate"], [315, 2, 1, "", "run"], [316, 2, 1, "", "set_BC"], [317, 2, 1, "", "set_label"], [318, 2, 1, "", "set_rate_BC"], [319, 2, 1, "", "set_source"], [320, 2, 1, "", "set_value_BC"], [321, 2, 1, "", "setdefault"], [322, 2, 1, "", "throats"], [323, 2, 1, "", "to_indices"], [324, 2, 1, "", "to_mask"], [325, 2, 1, "", "update"], [326, 2, 1, "", "values"]], "openpnm.algorithms.TransientAdvectionDiffusion": [[328, 2, 1, "", "clear"], [329, 2, 1, "", "clear_BCs"], [330, 2, 1, "", "clear_rate_BCs"], [331, 2, 1, "", "clear_value_BCs"], [332, 2, 1, "", "copy"], [333, 2, 1, "", "filter_by_label"], [334, 2, 1, "", "fromkeys"], [335, 2, 1, "", "get"], [336, 2, 1, "", "get_conduit_data"], [337, 2, 1, "", "interpolate_data"], [338, 2, 1, "", "items"], [339, 2, 1, "", "keys"], [340, 2, 1, "", "labels"], [341, 2, 1, "", "num_pores"], [342, 2, 1, "", "num_throats"], [343, 2, 1, "", "pop"], [344, 2, 1, "", "popitem"], [345, 2, 1, "", "pores"], [346, 2, 1, "", "props"], [347, 2, 1, "", "rate"], [348, 2, 1, "", "run"], [349, 2, 1, "", "set_BC"], [350, 2, 1, "", "set_label"], [351, 2, 1, "", "set_outflow_BC"], [352, 2, 1, "", "set_rate_BC"], [353, 2, 1, "", "set_source"], [354, 2, 1, "", "set_value_BC"], [355, 2, 1, "", "setdefault"], [356, 2, 1, "", "throats"], [357, 2, 1, "", "to_indices"], [358, 2, 1, "", "to_mask"], [359, 2, 1, "", "update"], [360, 2, 1, "", "values"]], "openpnm.algorithms.TransientFickianDiffusion": [[362, 2, 1, "", "clear"], [363, 2, 1, "", "clear_BCs"], [364, 2, 1, "", "clear_rate_BCs"], [365, 2, 1, "", "clear_value_BCs"], [366, 2, 1, "", "copy"], [367, 2, 1, "", "filter_by_label"], [368, 2, 1, "", "fromkeys"], [369, 2, 1, "", "get"], [370, 2, 1, "", "get_conduit_data"], [371, 2, 1, "", "interpolate_data"], [372, 2, 1, "", "items"], [373, 2, 1, "", "keys"], [374, 2, 1, "", "labels"], [375, 2, 1, "", "num_pores"], [376, 2, 1, "", "num_throats"], [377, 2, 1, "", "pop"], [378, 2, 1, "", "popitem"], [379, 2, 1, "", "pores"], [380, 2, 1, "", "props"], [381, 2, 1, "", "rate"], [382, 2, 1, "", "run"], [383, 2, 1, "", "set_BC"], [384, 2, 1, "", "set_label"], [385, 2, 1, "", "set_rate_BC"], [386, 2, 1, "", "set_source"], [387, 2, 1, "", "set_value_BC"], [388, 2, 1, "", "setdefault"], [389, 2, 1, "", "throats"], [390, 2, 1, "", "to_indices"], [391, 2, 1, "", "to_mask"], [392, 2, 1, "", "update"], [393, 2, 1, "", "values"]], "openpnm.algorithms.TransientFourierConduction": [[395, 2, 1, "", "clear"], [396, 2, 1, "", "clear_BCs"], [397, 2, 1, "", "clear_rate_BCs"], [398, 2, 1, "", "clear_value_BCs"], [399, 2, 1, "", "copy"], [400, 2, 1, "", "filter_by_label"], [401, 2, 1, "", "fromkeys"], [402, 2, 1, "", "get"], [403, 2, 1, "", "get_conduit_data"], [404, 2, 1, "", "interpolate_data"], [405, 2, 1, "", "items"], [406, 2, 1, "", "keys"], [407, 2, 1, "", "labels"], [408, 2, 1, "", "num_pores"], [409, 2, 1, "", "num_throats"], [410, 2, 1, "", "pop"], [411, 2, 1, "", "popitem"], [412, 2, 1, "", "pores"], [413, 2, 1, "", "props"], [414, 2, 1, "", "rate"], [415, 2, 1, "", "run"], [416, 2, 1, "", "set_BC"], [417, 2, 1, "", "set_label"], [418, 2, 1, "", "set_rate_BC"], [419, 2, 1, "", "set_source"], [420, 2, 1, "", "set_value_BC"], [421, 2, 1, "", "setdefault"], [422, 2, 1, "", "throats"], [423, 2, 1, "", "to_indices"], [424, 2, 1, "", "to_mask"], [425, 2, 1, "", "update"], [426, 2, 1, "", "values"]], "openpnm.algorithms.TransientReactiveTransport": [[428, 2, 1, "", "clear"], [429, 2, 1, "", "clear_BCs"], [430, 2, 1, "", "clear_rate_BCs"], [431, 2, 1, "", "clear_value_BCs"], [432, 2, 1, "", "copy"], [433, 2, 1, "", "filter_by_label"], [434, 2, 1, "", "fromkeys"], [435, 2, 1, "", "get"], [436, 2, 1, "", "get_conduit_data"], [437, 2, 1, "", "interpolate_data"], [438, 2, 1, "", "items"], [439, 2, 1, "", "keys"], [440, 2, 1, "", "labels"], [441, 2, 1, "", "num_pores"], [442, 2, 1, "", "num_throats"], [443, 2, 1, "", "pop"], [444, 2, 1, "", "popitem"], [445, 2, 1, "", "pores"], [446, 2, 1, "", "props"], [447, 2, 1, "", "rate"], [448, 2, 1, "", "run"], [449, 2, 1, "", "set_BC"], [450, 2, 1, "", "set_label"], [451, 2, 1, "", "set_rate_BC"], [452, 2, 1, "", "set_source"], [453, 2, 1, "", "set_value_BC"], [454, 2, 1, "", "setdefault"], [455, 2, 1, "", "throats"], [456, 2, 1, "", "to_indices"], [457, 2, 1, "", "to_mask"], [458, 2, 1, "", "update"], [459, 2, 1, "", "values"]], "openpnm.algorithms.Transport": [[461, 2, 1, "", "clear"], [462, 2, 1, "", "clear_BCs"], [463, 2, 1, "", "clear_rate_BCs"], [464, 2, 1, "", "clear_value_BCs"], [465, 2, 1, "", "copy"], [466, 2, 1, "", "filter_by_label"], [467, 2, 1, "", "fromkeys"], [468, 2, 1, "", "get"], [469, 2, 1, "", "get_conduit_data"], [470, 2, 1, "", "interpolate_data"], [471, 2, 1, "", "items"], [472, 2, 1, "", "keys"], [473, 2, 1, "", "labels"], [474, 2, 1, "", "num_pores"], [475, 2, 1, "", "num_throats"], [476, 2, 1, "", "pop"], [477, 2, 1, "", "popitem"], [478, 2, 1, "", "pores"], [479, 2, 1, "", "props"], [480, 2, 1, "", "rate"], [481, 2, 1, "", "run"], [482, 2, 1, "", "set_BC"], [483, 2, 1, "", "set_label"], [484, 2, 1, "", "set_rate_BC"], [485, 2, 1, "", "set_value_BC"], [486, 2, 1, "", "setdefault"], [487, 2, 1, "", "throats"], [488, 2, 1, "", "to_indices"], [489, 2, 1, "", "to_mask"], [490, 2, 1, "", "update"], [491, 2, 1, "", "values"]], "openpnm.contrib": [[493, 1, 1, "", "MultiPhase"], [524, 1, 1, "", "TransientMultiPhysics"], [551, 3, 1, "", "multiphase_diffusion"]], "openpnm.contrib.MultiPhase": [[494, 2, 1, "", "add_model"], [495, 2, 1, "", "add_model_collection"], [496, 2, 1, "", "add_phases"], [497, 2, 1, "", "clear"], [498, 2, 1, "", "copy"], [499, 2, 1, "", "filter_by_label"], [500, 2, 1, "", "fromkeys"], [501, 2, 1, "", "get"], [502, 2, 1, "", "get_conduit_data"], [503, 2, 1, "", "interpolate_data"], [504, 2, 1, "", "items"], [505, 2, 1, "", "keys"], [506, 2, 1, "", "labels"], [507, 2, 1, "", "num_pores"], [508, 2, 1, "", "num_throats"], [509, 2, 1, "", "pop"], [510, 2, 1, "", "popitem"], [511, 2, 1, "", "pores"], [512, 2, 1, "", "props"], [513, 2, 1, "", "regenerate_models"], [514, 2, 1, "", "run_model"], [515, 2, 1, "", "set_binary_partition_coef"], [516, 2, 1, "", "set_label"], [517, 2, 1, "", "set_occupancy"], [518, 2, 1, "", "setdefault"], [519, 2, 1, "", "throats"], [520, 2, 1, "", "to_indices"], [521, 2, 1, "", "to_mask"], [522, 2, 1, "", "update"], [523, 2, 1, "", "values"]], "openpnm.contrib.TransientMultiPhysics": [[525, 2, 1, "", "clear"], [526, 2, 1, "", "clear_BCs"], [527, 2, 1, "", "copy"], [528, 2, 1, "", "filter_by_label"], [529, 2, 1, "", "fromkeys"], [530, 2, 1, "", "get"], [531, 2, 1, "", "get_conduit_data"], [532, 2, 1, "", "interpolate_data"], [533, 2, 1, "", "items"], [534, 2, 1, "", "keys"], [535, 2, 1, "", "labels"], [536, 2, 1, "", "num_pores"], [537, 2, 1, "", "num_throats"], [538, 2, 1, "", "pop"], [539, 2, 1, "", "popitem"], [540, 2, 1, "", "pores"], [541, 2, 1, "", "props"], [542, 2, 1, "", "run"], [543, 2, 1, "", "set_BC"], [544, 2, 1, "", "set_label"], [545, 2, 1, "", "setdefault"], [546, 2, 1, "", "throats"], [547, 2, 1, "", "to_indices"], [548, 2, 1, "", "to_mask"], [549, 2, 1, "", "update"], [550, 2, 1, "", "values"]], "openpnm.core": [[553, 1, 1, "", "Base2"], [570, 1, 1, "", "Domain"], [598, 1, 1, "", "LabelMixin"], [606, 1, 1, "", "ModelWrapper"], [619, 1, 1, "", "ModelsDict"], [634, 1, 1, "", "ModelsMixin2"], [639, 1, 1, "", "ParserMixin"]], "openpnm.core.Base2": [[554, 2, 1, "", "clear"], [555, 2, 1, "", "copy"], [556, 2, 1, "", "fromkeys"], [557, 2, 1, "", "get"], [558, 2, 1, "", "get_conduit_data"], [559, 2, 1, "", "interpolate_data"], [560, 2, 1, "", "items"], [561, 2, 1, "", "keys"], [562, 2, 1, "", "pop"], [563, 2, 1, "", "popitem"], [564, 2, 1, "", "props"], [565, 2, 1, "", "setdefault"], [566, 2, 1, "", "to_indices"], [567, 2, 1, "", "to_mask"], [568, 2, 1, "", "update"], [569, 2, 1, "", "values"]], "openpnm.core.Domain": [[571, 2, 1, "", "add_model"], [572, 2, 1, "", "add_model_collection"], [573, 2, 1, "", "clear"], [574, 2, 1, "", "copy"], [575, 2, 1, "", "filter_by_label"], [576, 2, 1, "", "fromkeys"], [577, 2, 1, "", "get"], [578, 2, 1, "", "get_conduit_data"], [579, 2, 1, "", "interpolate_data"], [580, 2, 1, "", "items"], [581, 2, 1, "", "keys"], [582, 2, 1, "", "labels"], [583, 2, 1, "", "num_pores"], [584, 2, 1, "", "num_throats"], [585, 2, 1, "", "pop"], [586, 2, 1, "", "popitem"], [587, 2, 1, "", "pores"], [588, 2, 1, "", "props"], [589, 2, 1, "", "regenerate_models"], [590, 2, 1, "", "run_model"], [591, 2, 1, "", "set_label"], [592, 2, 1, "", "setdefault"], [593, 2, 1, "", "throats"], [594, 2, 1, "", "to_indices"], [595, 2, 1, "", "to_mask"], [596, 2, 1, "", "update"], [597, 2, 1, "", "values"]], "openpnm.core.LabelMixin": [[599, 2, 1, "", "filter_by_label"], [600, 2, 1, "", "labels"], [601, 2, 1, "", "num_pores"], [602, 2, 1, "", "num_throats"], [603, 2, 1, "", "pores"], [604, 2, 1, "", "set_label"], [605, 2, 1, "", "throats"]], "openpnm.core.ModelWrapper": [[607, 2, 1, "", "__call__"], [608, 2, 1, "", "clear"], [609, 2, 1, "", "copy"], [610, 2, 1, "", "fromkeys"], [611, 2, 1, "", "get"], [612, 2, 1, "", "items"], [613, 2, 1, "", "keys"], [614, 2, 1, "", "pop"], [615, 2, 1, "", "popitem"], [616, 2, 1, "", "setdefault"], [617, 2, 1, "", "update"], [618, 2, 1, "", "values"]], "openpnm.core.ModelsDict": [[620, 2, 1, "", "clear"], [621, 2, 1, "", "copy"], [622, 2, 1, "", "dependency_graph"], [623, 2, 1, "", "dependency_list"], [624, 2, 1, "", "dependency_map"], [625, 2, 1, "", "fromkeys"], [626, 2, 1, "", "get"], [627, 2, 1, "", "items"], [628, 2, 1, "", "keys"], [629, 2, 1, "", "pop"], [630, 2, 1, "", "popitem"], [631, 2, 1, "", "setdefault"], [632, 2, 1, "", "update"], [633, 2, 1, "", "values"]], "openpnm.core.ModelsMixin2": [[635, 2, 1, "", "add_model"], [636, 2, 1, "", "add_model_collection"], [637, 2, 1, "", "regenerate_models"], [638, 2, 1, "", "run_model"]], "openpnm.integrators": [[641, 1, 1, "", "Integrator"], [642, 1, 1, "", "ScipyRK45"]], "openpnm.integrators.ScipyRK45": [[643, 2, 1, "", "solve"]], "openpnm.io": [[645, 3, 1, "", "network_from_csv"], [646, 3, 1, "", "network_from_jsongraph"], [647, 3, 1, "", "network_from_marock"], [648, 3, 1, "", "network_from_networkx"], [649, 3, 1, "", "network_from_pergeos"], [650, 3, 1, "", "network_from_porespy"], [651, 3, 1, "", "network_from_statoil"], [652, 3, 1, "", "network_to_comsol"], [653, 3, 1, "", "network_to_csv"], [654, 3, 1, "", "network_to_jsongraph"], [655, 3, 1, "", "network_to_networkx"], [656, 3, 1, "", "network_to_pandas"], [657, 3, 1, "", "network_to_pergeos"], [658, 3, 1, "", "network_to_salome"], [659, 3, 1, "", "network_to_stl"], [660, 3, 1, "", "print_hdf5"], [661, 3, 1, "", "project_to_csv"], [662, 3, 1, "", "project_to_dict"], [663, 3, 1, "", "project_to_hdf5"], [664, 3, 1, "", "project_to_pandas"], [665, 3, 1, "", "project_to_paraview"], [666, 3, 1, "", "project_to_vtk"], [667, 3, 1, "", "project_to_xdmf"]], "openpnm.models": [[669, 0, 0, "-", "collections"], [688, 0, 0, "-", "geometry"], [814, 0, 0, "-", "misc"], [835, 0, 0, "-", "network"], [852, 0, 0, "-", "phase"], [903, 0, 0, "-", "physics"]], "openpnm.models.collections": [[670, 0, 0, "-", "geometry"], [678, 0, 0, "-", "network"], [679, 0, 0, "-", "phase"], [685, 0, 0, "-", "physics"]], "openpnm.models.collections.geometry": [[671, 4, 1, "", "circles_and_rectangles"], [672, 4, 1, "", "cones_and_cylinders"], [673, 4, 1, "", "cubes_and_cuboids"], [674, 4, 1, "", "pyramids_and_cuboids"], [675, 4, 1, "", "spheres_and_cylinders"], [676, 4, 1, "", "squares_and_rectangles"], [677, 4, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.collections.phase": [[680, 4, 1, "", "air"], [681, 0, 0, "-", "gas"], [682, 0, 0, "-", "liquid"], [683, 4, 1, "", "mercury"], [684, 4, 1, "", "water"]], "openpnm.models.collections.physics": [[686, 4, 1, "", "basic"], [687, 4, 1, "", "standard"]], "openpnm.models.geometry": [[689, 0, 0, "-", "conduit_lengths"], [703, 0, 0, "-", "diffusive_size_factors"], [718, 0, 0, "-", "hydraulic_size_factors"], [733, 0, 0, "-", "pore_cross_sectional_area"], [739, 0, 0, "-", "pore_seed"], [742, 0, 0, "-", "pore_size"], [750, 0, 0, "-", "pore_surface_area"], [755, 0, 0, "-", "pore_volume"], [761, 0, 0, "-", "throat_capillary_shape_factor"], [764, 0, 0, "-", "throat_centroid"], [766, 0, 0, "-", "throat_cross_sectional_area"], [770, 0, 0, "-", "throat_endpoints"], [772, 0, 0, "-", "throat_length"], [786, 0, 0, "-", "throat_perimeter"], [790, 0, 0, "-", "throat_seed"], [793, 0, 0, "-", "throat_size"], [800, 0, 0, "-", "throat_surface_area"], [805, 0, 0, "-", "throat_vector"], [807, 0, 0, "-", "throat_volume"]], "openpnm.models.geometry.conduit_lengths": [[690, 3, 1, "", "circles_and_rectangles"], [691, 3, 1, "", "cones_and_cylinders"], [692, 3, 1, "", "cubes_and_cuboids"], [693, 3, 1, "", "hybrid_cones_and_cylinders"], [694, 3, 1, "", "hybrid_pyramids_and_cuboids"], [695, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [696, 3, 1, "", "intersecting_cones"], [697, 3, 1, "", "intersecting_pyramids"], [698, 3, 1, "", "intersecting_trapezoids"], [699, 3, 1, "", "pyramids_and_cuboids"], [700, 3, 1, "", "spheres_and_cylinders"], [701, 3, 1, "", "squares_and_rectangles"], [702, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[704, 3, 1, "", "circles_and_rectangles"], [705, 3, 1, "", "cones_and_cylinders"], [706, 3, 1, "", "cubes_and_cuboids"], [707, 3, 1, "", "hybrid_cones_and_cylinders"], [708, 3, 1, "", "hybrid_pyramids_and_cuboids"], [709, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [710, 3, 1, "", "intersecting_cones"], [711, 3, 1, "", "intersecting_pyramids"], [712, 3, 1, "", "intersecting_trapezoids"], [713, 3, 1, "", "ncylinders_in_series"], [714, 3, 1, "", "pyramids_and_cuboids"], [715, 3, 1, "", "spheres_and_cylinders"], [716, 3, 1, "", "squares_and_rectangles"], [717, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[719, 3, 1, "", "circles_and_rectangles"], [720, 3, 1, "", "cones_and_cylinders"], [721, 3, 1, "", "cubes_and_cuboids"], [722, 3, 1, "", "hybrid_cones_and_cylinders"], [723, 3, 1, "", "hybrid_pyramids_and_cuboids"], [724, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [725, 3, 1, "", "intersecting_cones"], [726, 3, 1, "", "intersecting_pyramids"], [727, 3, 1, "", "intersecting_trapezoids"], [728, 3, 1, "", "ncylinders_in_series"], [729, 3, 1, "", "pyramids_and_cuboids"], [730, 3, 1, "", "spheres_and_cylinders"], [731, 3, 1, "", "squares_and_rectangles"], [732, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[734, 3, 1, "", "circle"], [735, 3, 1, "", "cone"], [736, 3, 1, "", "cube"], [737, 3, 1, "", "sphere"], [738, 3, 1, "", "square"]], "openpnm.models.geometry.pore_seed": [[740, 3, 1, "", "random"], [741, 3, 1, "", "spatially_correlated"]], "openpnm.models.geometry.pore_size": [[743, 3, 1, "", "equivalent_diameter"], [744, 3, 1, "", "from_neighbor_throats"], [745, 3, 1, "", "generic_distribution"], [746, 3, 1, "", "largest_sphere"], [747, 3, 1, "", "normal"], [748, 3, 1, "", "random"], [749, 3, 1, "", "weibull"]], "openpnm.models.geometry.pore_surface_area": [[751, 3, 1, "", "circle"], [752, 3, 1, "", "cube"], [753, 3, 1, "", "sphere"], [754, 3, 1, "", "square"]], "openpnm.models.geometry.pore_volume": [[756, 3, 1, "", "circle"], [757, 3, 1, "", "cube"], [758, 3, 1, "", "effective"], [759, 3, 1, "", "sphere"], [760, 3, 1, "", "square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[762, 3, 1, "", "jenkins_rao"], [763, 3, 1, "", "mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[765, 3, 1, "", "pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[767, 3, 1, "", "cuboid"], [768, 3, 1, "", "cylinder"], [769, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_endpoints": [[771, 3, 1, "", "spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[773, 3, 1, "", "circles_and_rectangles"], [774, 3, 1, "", "cones_and_cylinders"], [775, 3, 1, "", "cubes_and_cuboids"], [776, 3, 1, "", "hybrid_cones_and_cylinders"], [777, 3, 1, "", "hybrid_pyramids_and_cuboids"], [778, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [779, 3, 1, "", "intersecting_cones"], [780, 3, 1, "", "intersecting_pyramids"], [781, 3, 1, "", "intersecting_trapezoids"], [782, 3, 1, "", "pyramids_and_cuboids"], [783, 3, 1, "", "spheres_and_cylinders"], [784, 3, 1, "", "squares_and_rectangles"], [785, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[787, 3, 1, "", "cuboid"], [788, 3, 1, "", "cylinder"], [789, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_seed": [[791, 3, 1, "", "from_neighbor_pores"], [792, 3, 1, "", "random"]], "openpnm.models.geometry.throat_size": [[794, 3, 1, "", "equivalent_diameter"], [795, 3, 1, "", "from_neighbor_pores"], [796, 3, 1, "", "generic_distribution"], [797, 3, 1, "", "normal"], [798, 3, 1, "", "random"], [799, 3, 1, "", "weibull"]], "openpnm.models.geometry.throat_surface_area": [[801, 3, 1, "", "cuboid"], [802, 3, 1, "", "cylinder"], [803, 3, 1, "", "extrusion"], [804, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_vector": [[806, 3, 1, "", "pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[808, 3, 1, "", "cuboid"], [809, 3, 1, "", "cylinder"], [810, 3, 1, "", "extrusion"], [811, 3, 1, "", "lens"], [812, 3, 1, "", "pendular_ring"], [813, 3, 1, "", "rectangle"]], "openpnm.models.misc": [[815, 3, 1, "", "blank"], [816, 3, 1, "", "clip"], [817, 3, 1, "", "constant"], [818, 3, 1, "", "difference"], [819, 3, 1, "", "fraction"], [820, 3, 1, "", "from_neighbor_pores"], [821, 3, 1, "", "from_neighbor_throats"], [822, 3, 1, "", "generic_distribution"], [823, 3, 1, "", "generic_function"], [824, 3, 1, "", "invert"], [825, 3, 1, "", "linear"], [826, 3, 1, "", "match_histogram"], [827, 3, 1, "", "normal"], [828, 3, 1, "", "normalize"], [829, 3, 1, "", "polynomial"], [830, 3, 1, "", "product"], [831, 3, 1, "", "random"], [832, 3, 1, "", "scaled"], [833, 3, 1, "", "summation"], [834, 3, 1, "", "weibull"]], "openpnm.models.network": [[836, 3, 1, "", "bidirectional_throats"], [837, 3, 1, "", "cluster_number"], [838, 3, 1, "", "cluster_size"], [839, 3, 1, "", "coordination_number"], [840, 3, 1, "", "count_coincident_pores"], [841, 3, 1, "", "distance_to_furthest_neighbor"], [842, 3, 1, "", "distance_to_nearest_neighbor"], [843, 3, 1, "", "distance_to_nearest_pore"], [844, 3, 1, "", "duplicate_throats"], [845, 3, 1, "", "find_coincident_pores"], [846, 3, 1, "", "gabriel_edges"], [847, 3, 1, "", "headless_throats"], [848, 3, 1, "", "isolated_pores"], [849, 3, 1, "", "looped_throats"], [850, 3, 1, "", "pore_to_pore_distance"], [851, 3, 1, "", "reversed_throats"]], "openpnm.models.phase": [[853, 3, 1, "", "chemicals_wrapper"], [854, 0, 0, "-", "critical_props"], [855, 0, 0, "-", "density"], [861, 0, 0, "-", "diffusivity"], [865, 0, 0, "-", "heat_capacity"], [870, 0, 0, "-", "misc"], [873, 0, 0, "-", "mixtures"], [879, 0, 0, "-", "partition_coefficient"], [881, 0, 0, "-", "surface_tension"], [885, 0, 0, "-", "thermal_conductivity"], [892, 0, 0, "-", "vapor_pressure"], [896, 0, 0, "-", "viscosity"]], "openpnm.models.phase.density": [[856, 3, 1, "", "ideal_gas"], [857, 3, 1, "", "liquid_mixture_COSTALD"], [858, 3, 1, "", "liquid_pure_COSTALD"], [859, 3, 1, "", "mass_to_molar"], [860, 3, 1, "", "water_correlation"]], "openpnm.models.phase.diffusivity": [[862, 3, 1, "", "gas_mixture_ce"], [863, 3, 1, "", "gas_mixture_fesg"], [864, 3, 1, "", "liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[866, 3, 1, "", "gas_mixture_yweighted"], [867, 3, 1, "", "gas_pure_TRC"], [868, 3, 1, "", "liquid_mixture_xweighted"], [869, 3, 1, "", "liquid_pure_rp"]], "openpnm.models.phase.misc": [[871, 3, 1, "", "mix_and_match"], [872, 3, 1, "", "mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[874, 3, 1, "", "from_component"], [875, 3, 1, "", "mixing_rule"], [876, 3, 1, "", "mole_summation"], [877, 3, 1, "", "mole_to_mass_fraction"], [878, 3, 1, "", "salinity"]], "openpnm.models.phase.partition_coefficient": [[880, 3, 1, "", "gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[882, 3, 1, "", "liquid_mixture_wsd"], [883, 3, 1, "", "liquid_pure_bb"], [884, 3, 1, "", "water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[886, 3, 1, "", "gas_mixture_whz"], [887, 3, 1, "", "gas_pure_gismr"], [888, 3, 1, "", "liquid_mixture_DIPPR9H"], [889, 3, 1, "", "liquid_pure_gismr"], [890, 3, 1, "", "liquid_pure_sr"], [891, 3, 1, "", "water_correlation"]], "openpnm.models.phase.vapor_pressure": [[893, 3, 1, "", "liquid_pure_antoine"], [894, 3, 1, "", "liquid_pure_lk"], [895, 3, 1, "", "water_correlation"]], "openpnm.models.phase.viscosity": [[897, 3, 1, "", "gas_mixture_hz"], [898, 3, 1, "", "gas_pure_gesmr"], [899, 3, 1, "", "gas_pure_st"], [900, 3, 1, "", "liquid_mixture_xweighted"], [901, 3, 1, "", "liquid_pure_ls"], [902, 3, 1, "", "water_correlation"]], "openpnm.models.physics": [[904, 0, 0, "-", "ad_dif_conductance"], [906, 0, 0, "-", "capillary_pressure"], [909, 0, 0, "-", "diffusive_conductance"], [914, 0, 0, "-", "electrical_conductance"], [917, 0, 0, "-", "hydraulic_conductance"], [921, 0, 0, "-", "meniscus"], [925, 0, 0, "-", "multiphase"], [928, 0, 0, "-", "source_terms"], [939, 0, 0, "-", "thermal_conductance"]], "openpnm.models.physics.ad_dif_conductance": [[905, 3, 1, "", "ad_dif"]], "openpnm.models.physics.capillary_pressure": [[907, 3, 1, "", "purcell"], [908, 3, 1, "", "washburn"]], "openpnm.models.physics.diffusive_conductance": [[910, 3, 1, "", "generic_diffusive"], [911, 3, 1, "", "mixed_diffusion"], [912, 3, 1, "", "ordinary_diffusion"], [913, 3, 1, "", "taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[915, 3, 1, "", "generic_electrical"], [916, 3, 1, "", "series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[918, 3, 1, "", "generic_hydraulic"], [919, 3, 1, "", "hagen_poiseuille"], [920, 3, 1, "", "valvatne_blunt"]], "openpnm.models.physics.meniscus": [[922, 3, 1, "", "general_toroidal"], [923, 3, 1, "", "purcell"], [924, 3, 1, "", "sinusoidal"]], "openpnm.models.physics.multiphase": [[926, 3, 1, "", "conduit_conductance"], [927, 3, 1, "", "late_filling"]], "openpnm.models.physics.source_terms": [[929, 3, 1, "", "butler_volmer_conc"], [930, 3, 1, "", "butler_volmer_voltage"], [931, 3, 1, "", "exponential"], [932, 3, 1, "", "general_symbolic"], [933, 3, 1, "", "linear"], [934, 3, 1, "", "logarithm"], [935, 3, 1, "", "natural_exponential"], [936, 3, 1, "", "natural_logarithm"], [937, 3, 1, "", "power_law"], [938, 3, 1, "", "standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[940, 3, 1, "", "generic_thermal"], [941, 3, 1, "", "series_resistors"]], "openpnm.network": [[943, 1, 1, "", "BodyCenteredCubic"], [982, 1, 1, "", "Cubic"], [1021, 1, 1, "", "CubicTemplate"], [1059, 1, 1, "", "Delaunay"], [1097, 1, 1, "", "DelaunayVoronoiDual"], [1137, 1, 1, "", "Demo"], [1176, 1, 1, "", "FaceCenteredCubic"], [1215, 1, 1, "", "Network"], [1253, 1, 1, "", "Voronoi"]], "openpnm.network.BodyCenteredCubic": [[944, 2, 1, "", "add_boundary_pores"], [945, 2, 1, "", "add_model"], [946, 2, 1, "", "add_model_collection"], [947, 2, 1, "", "clear"], [948, 2, 1, "", "copy"], [949, 2, 1, "", "create_adjacency_matrix"], [950, 2, 1, "", "create_incidence_matrix"], [951, 2, 1, "", "filter_by_label"], [952, 2, 1, "", "find_connected_pores"], [953, 2, 1, "", "find_connecting_throat"], [954, 2, 1, "", "find_nearby_pores"], [955, 2, 1, "", "find_neighbor_pores"], [956, 2, 1, "", "find_neighbor_throats"], [957, 2, 1, "", "fromkeys"], [958, 2, 1, "", "get"], [959, 2, 1, "", "get_adjacency_matrix"], [960, 2, 1, "", "get_conduit_data"], [961, 2, 1, "", "get_incidence_matrix"], [962, 2, 1, "", "interpolate_data"], [963, 2, 1, "", "items"], [964, 2, 1, "", "keys"], [965, 2, 1, "", "labels"], [966, 2, 1, "", "num_neighbors"], [967, 2, 1, "", "num_pores"], [968, 2, 1, "", "num_throats"], [969, 2, 1, "", "pop"], [970, 2, 1, "", "popitem"], [971, 2, 1, "", "pores"], [972, 2, 1, "", "props"], [973, 2, 1, "", "regenerate_models"], [974, 2, 1, "", "run_model"], [975, 2, 1, "", "set_label"], [976, 2, 1, "", "setdefault"], [977, 2, 1, "", "throats"], [978, 2, 1, "", "to_indices"], [979, 2, 1, "", "to_mask"], [980, 2, 1, "", "update"], [981, 2, 1, "", "values"]], "openpnm.network.Cubic": [[983, 2, 1, "", "add_boundary_pores"], [984, 2, 1, "", "add_model"], [985, 2, 1, "", "add_model_collection"], [986, 2, 1, "", "clear"], [987, 2, 1, "", "copy"], [988, 2, 1, "", "create_adjacency_matrix"], [989, 2, 1, "", "create_incidence_matrix"], [990, 2, 1, "", "filter_by_label"], [991, 2, 1, "", "find_connected_pores"], [992, 2, 1, "", "find_connecting_throat"], [993, 2, 1, "", "find_nearby_pores"], [994, 2, 1, "", "find_neighbor_pores"], [995, 2, 1, "", "find_neighbor_throats"], [996, 2, 1, "", "fromkeys"], [997, 2, 1, "", "get"], [998, 2, 1, "", "get_adjacency_matrix"], [999, 2, 1, "", "get_conduit_data"], [1000, 2, 1, "", "get_incidence_matrix"], [1001, 2, 1, "", "interpolate_data"], [1002, 2, 1, "", "items"], [1003, 2, 1, "", "keys"], [1004, 2, 1, "", "labels"], [1005, 2, 1, "", "num_neighbors"], [1006, 2, 1, "", "num_pores"], [1007, 2, 1, "", "num_throats"], [1008, 2, 1, "", "pop"], [1009, 2, 1, "", "popitem"], [1010, 2, 1, "", "pores"], [1011, 2, 1, "", "props"], [1012, 2, 1, "", "regenerate_models"], [1013, 2, 1, "", "run_model"], [1014, 2, 1, "", "set_label"], [1015, 2, 1, "", "setdefault"], [1016, 2, 1, "", "throats"], [1017, 2, 1, "", "to_indices"], [1018, 2, 1, "", "to_mask"], [1019, 2, 1, "", "update"], [1020, 2, 1, "", "values"]], "openpnm.network.CubicTemplate": [[1022, 2, 1, "", "add_model"], [1023, 2, 1, "", "add_model_collection"], [1024, 2, 1, "", "clear"], [1025, 2, 1, "", "copy"], [1026, 2, 1, "", "create_adjacency_matrix"], [1027, 2, 1, "", "create_incidence_matrix"], [1028, 2, 1, "", "filter_by_label"], [1029, 2, 1, "", "find_connected_pores"], [1030, 2, 1, "", "find_connecting_throat"], [1031, 2, 1, "", "find_nearby_pores"], [1032, 2, 1, "", "find_neighbor_pores"], [1033, 2, 1, "", "find_neighbor_throats"], [1034, 2, 1, "", "fromkeys"], [1035, 2, 1, "", "get"], [1036, 2, 1, "", "get_adjacency_matrix"], [1037, 2, 1, "", "get_conduit_data"], [1038, 2, 1, "", "get_incidence_matrix"], [1039, 2, 1, "", "interpolate_data"], [1040, 2, 1, "", "items"], [1041, 2, 1, "", "keys"], [1042, 2, 1, "", "labels"], [1043, 2, 1, "", "num_neighbors"], [1044, 2, 1, "", "num_pores"], [1045, 2, 1, "", "num_throats"], [1046, 2, 1, "", "pop"], [1047, 2, 1, "", "popitem"], [1048, 2, 1, "", "pores"], [1049, 2, 1, "", "props"], [1050, 2, 1, "", "regenerate_models"], [1051, 2, 1, "", "run_model"], [1052, 2, 1, "", "set_label"], [1053, 2, 1, "", "setdefault"], [1054, 2, 1, "", "throats"], [1055, 2, 1, "", "to_indices"], [1056, 2, 1, "", "to_mask"], [1057, 2, 1, "", "update"], [1058, 2, 1, "", "values"]], "openpnm.network.Delaunay": [[1060, 2, 1, "", "add_model"], [1061, 2, 1, "", "add_model_collection"], [1062, 2, 1, "", "clear"], [1063, 2, 1, "", "copy"], [1064, 2, 1, "", "create_adjacency_matrix"], [1065, 2, 1, "", "create_incidence_matrix"], [1066, 2, 1, "", "filter_by_label"], [1067, 2, 1, "", "find_connected_pores"], [1068, 2, 1, "", "find_connecting_throat"], [1069, 2, 1, "", "find_nearby_pores"], [1070, 2, 1, "", "find_neighbor_pores"], [1071, 2, 1, "", "find_neighbor_throats"], [1072, 2, 1, "", "fromkeys"], [1073, 2, 1, "", "get"], [1074, 2, 1, "", "get_adjacency_matrix"], [1075, 2, 1, "", "get_conduit_data"], [1076, 2, 1, "", "get_incidence_matrix"], [1077, 2, 1, "", "interpolate_data"], [1078, 2, 1, "", "items"], [1079, 2, 1, "", "keys"], [1080, 2, 1, "", "labels"], [1081, 2, 1, "", "num_neighbors"], [1082, 2, 1, "", "num_pores"], [1083, 2, 1, "", "num_throats"], [1084, 2, 1, "", "pop"], [1085, 2, 1, "", "popitem"], [1086, 2, 1, "", "pores"], [1087, 2, 1, "", "props"], [1088, 2, 1, "", "regenerate_models"], [1089, 2, 1, "", "run_model"], [1090, 2, 1, "", "set_label"], [1091, 2, 1, "", "setdefault"], [1092, 2, 1, "", "throats"], [1093, 2, 1, "", "to_indices"], [1094, 2, 1, "", "to_mask"], [1095, 2, 1, "", "update"], [1096, 2, 1, "", "values"]], "openpnm.network.DelaunayVoronoiDual": [[1098, 2, 1, "", "add_model"], [1099, 2, 1, "", "add_model_collection"], [1100, 2, 1, "", "clear"], [1101, 2, 1, "", "copy"], [1102, 2, 1, "", "create_adjacency_matrix"], [1103, 2, 1, "", "create_incidence_matrix"], [1104, 2, 1, "", "filter_by_label"], [1105, 2, 1, "", "find_connected_pores"], [1106, 2, 1, "", "find_connecting_throat"], [1107, 2, 1, "", "find_nearby_pores"], [1108, 2, 1, "", "find_neighbor_pores"], [1109, 2, 1, "", "find_neighbor_throats"], [1110, 2, 1, "", "find_pore_hulls"], [1111, 2, 1, "", "find_throat_facets"], [1112, 2, 1, "", "fromkeys"], [1113, 2, 1, "", "get"], [1114, 2, 1, "", "get_adjacency_matrix"], [1115, 2, 1, "", "get_conduit_data"], [1116, 2, 1, "", "get_incidence_matrix"], [1117, 2, 1, "", "interpolate_data"], [1118, 2, 1, "", "items"], [1119, 2, 1, "", "keys"], [1120, 2, 1, "", "labels"], [1121, 2, 1, "", "num_neighbors"], [1122, 2, 1, "", "num_pores"], [1123, 2, 1, "", "num_throats"], [1124, 2, 1, "", "pop"], [1125, 2, 1, "", "popitem"], [1126, 2, 1, "", "pores"], [1127, 2, 1, "", "props"], [1128, 2, 1, "", "regenerate_models"], [1129, 2, 1, "", "run_model"], [1130, 2, 1, "", "set_label"], [1131, 2, 1, "", "setdefault"], [1132, 2, 1, "", "throats"], [1133, 2, 1, "", "to_indices"], [1134, 2, 1, "", "to_mask"], [1135, 2, 1, "", "update"], [1136, 2, 1, "", "values"]], "openpnm.network.Demo": [[1138, 2, 1, "", "add_boundary_pores"], [1139, 2, 1, "", "add_model"], [1140, 2, 1, "", "add_model_collection"], [1141, 2, 1, "", "clear"], [1142, 2, 1, "", "copy"], [1143, 2, 1, "", "create_adjacency_matrix"], [1144, 2, 1, "", "create_incidence_matrix"], [1145, 2, 1, "", "filter_by_label"], [1146, 2, 1, "", "find_connected_pores"], [1147, 2, 1, "", "find_connecting_throat"], [1148, 2, 1, "", "find_nearby_pores"], [1149, 2, 1, "", "find_neighbor_pores"], [1150, 2, 1, "", "find_neighbor_throats"], [1151, 2, 1, "", "fromkeys"], [1152, 2, 1, "", "get"], [1153, 2, 1, "", "get_adjacency_matrix"], [1154, 2, 1, "", "get_conduit_data"], [1155, 2, 1, "", "get_incidence_matrix"], [1156, 2, 1, "", "interpolate_data"], [1157, 2, 1, "", "items"], [1158, 2, 1, "", "keys"], [1159, 2, 1, "", "labels"], [1160, 2, 1, "", "num_neighbors"], [1161, 2, 1, "", "num_pores"], [1162, 2, 1, "", "num_throats"], [1163, 2, 1, "", "pop"], [1164, 2, 1, "", "popitem"], [1165, 2, 1, "", "pores"], [1166, 2, 1, "", "props"], [1167, 2, 1, "", "regenerate_models"], [1168, 2, 1, "", "run_model"], [1169, 2, 1, "", "set_label"], [1170, 2, 1, "", "setdefault"], [1171, 2, 1, "", "throats"], [1172, 2, 1, "", "to_indices"], [1173, 2, 1, "", "to_mask"], [1174, 2, 1, "", "update"], [1175, 2, 1, "", "values"]], "openpnm.network.FaceCenteredCubic": [[1177, 2, 1, "", "add_boundary_pores"], [1178, 2, 1, "", "add_model"], [1179, 2, 1, "", "add_model_collection"], [1180, 2, 1, "", "clear"], [1181, 2, 1, "", "copy"], [1182, 2, 1, "", "create_adjacency_matrix"], [1183, 2, 1, "", "create_incidence_matrix"], [1184, 2, 1, "", "filter_by_label"], [1185, 2, 1, "", "find_connected_pores"], [1186, 2, 1, "", "find_connecting_throat"], [1187, 2, 1, "", "find_nearby_pores"], [1188, 2, 1, "", "find_neighbor_pores"], [1189, 2, 1, "", "find_neighbor_throats"], [1190, 2, 1, "", "fromkeys"], [1191, 2, 1, "", "get"], [1192, 2, 1, "", "get_adjacency_matrix"], [1193, 2, 1, "", "get_conduit_data"], [1194, 2, 1, "", "get_incidence_matrix"], [1195, 2, 1, "", "interpolate_data"], [1196, 2, 1, "", "items"], [1197, 2, 1, "", "keys"], [1198, 2, 1, "", "labels"], [1199, 2, 1, "", "num_neighbors"], [1200, 2, 1, "", "num_pores"], [1201, 2, 1, "", "num_throats"], [1202, 2, 1, "", "pop"], [1203, 2, 1, "", "popitem"], [1204, 2, 1, "", "pores"], [1205, 2, 1, "", "props"], [1206, 2, 1, "", "regenerate_models"], [1207, 2, 1, "", "run_model"], [1208, 2, 1, "", "set_label"], [1209, 2, 1, "", "setdefault"], [1210, 2, 1, "", "throats"], [1211, 2, 1, "", "to_indices"], [1212, 2, 1, "", "to_mask"], [1213, 2, 1, "", "update"], [1214, 2, 1, "", "values"]], "openpnm.network.Network": [[1216, 2, 1, "", "add_model"], [1217, 2, 1, "", "add_model_collection"], [1218, 2, 1, "", "clear"], [1219, 2, 1, "", "copy"], [1220, 2, 1, "", "create_adjacency_matrix"], [1221, 2, 1, "", "create_incidence_matrix"], [1222, 2, 1, "", "filter_by_label"], [1223, 2, 1, "", "find_connected_pores"], [1224, 2, 1, "", "find_connecting_throat"], [1225, 2, 1, "", "find_nearby_pores"], [1226, 2, 1, "", "find_neighbor_pores"], [1227, 2, 1, "", "find_neighbor_throats"], [1228, 2, 1, "", "fromkeys"], [1229, 2, 1, "", "get"], [1230, 2, 1, "", "get_adjacency_matrix"], [1231, 2, 1, "", "get_conduit_data"], [1232, 2, 1, "", "get_incidence_matrix"], [1233, 2, 1, "", "interpolate_data"], [1234, 2, 1, "", "items"], [1235, 2, 1, "", "keys"], [1236, 2, 1, "", "labels"], [1237, 2, 1, "", "num_neighbors"], [1238, 2, 1, "", "num_pores"], [1239, 2, 1, "", "num_throats"], [1240, 2, 1, "", "pop"], [1241, 2, 1, "", "popitem"], [1242, 2, 1, "", "pores"], [1243, 2, 1, "", "props"], [1244, 2, 1, "", "regenerate_models"], [1245, 2, 1, "", "run_model"], [1246, 2, 1, "", "set_label"], [1247, 2, 1, "", "setdefault"], [1248, 2, 1, "", "throats"], [1249, 2, 1, "", "to_indices"], [1250, 2, 1, "", "to_mask"], [1251, 2, 1, "", "update"], [1252, 2, 1, "", "values"]], "openpnm.network.Voronoi": [[1254, 2, 1, "", "add_model"], [1255, 2, 1, "", "add_model_collection"], [1256, 2, 1, "", "clear"], [1257, 2, 1, "", "copy"], [1258, 2, 1, "", "create_adjacency_matrix"], [1259, 2, 1, "", "create_incidence_matrix"], [1260, 2, 1, "", "filter_by_label"], [1261, 2, 1, "", "find_connected_pores"], [1262, 2, 1, "", "find_connecting_throat"], [1263, 2, 1, "", "find_nearby_pores"], [1264, 2, 1, "", "find_neighbor_pores"], [1265, 2, 1, "", "find_neighbor_throats"], [1266, 2, 1, "", "fromkeys"], [1267, 2, 1, "", "get"], [1268, 2, 1, "", "get_adjacency_matrix"], [1269, 2, 1, "", "get_conduit_data"], [1270, 2, 1, "", "get_incidence_matrix"], [1271, 2, 1, "", "interpolate_data"], [1272, 2, 1, "", "items"], [1273, 2, 1, "", "keys"], [1274, 2, 1, "", "labels"], [1275, 2, 1, "", "num_neighbors"], [1276, 2, 1, "", "num_pores"], [1277, 2, 1, "", "num_throats"], [1278, 2, 1, "", "pop"], [1279, 2, 1, "", "popitem"], [1280, 2, 1, "", "pores"], [1281, 2, 1, "", "props"], [1282, 2, 1, "", "regenerate_models"], [1283, 2, 1, "", "run_model"], [1284, 2, 1, "", "set_label"], [1285, 2, 1, "", "setdefault"], [1286, 2, 1, "", "throats"], [1287, 2, 1, "", "to_indices"], [1288, 2, 1, "", "to_mask"], [1289, 2, 1, "", "update"], [1290, 2, 1, "", "values"]], "openpnm.phase": [[1292, 1, 1, "", "Air"], [1320, 1, 1, "", "BinaryGas"], [1354, 1, 1, "", "GasMixture"], [1388, 1, 1, "", "LiquidMixture"], [1422, 1, 1, "", "Mercury"], [1450, 1, 1, "", "Mixture"], [1483, 1, 1, "", "Phase"], [1511, 1, 1, "", "Species"], [1539, 1, 1, "", "StandardGas"], [1567, 1, 1, "", "StandardGasMixture"], [1601, 1, 1, "", "StandardLiquid"], [1629, 1, 1, "", "StandardLiquidMixture"], [1663, 1, 1, "", "Water"]], "openpnm.phase.Air": [[1293, 2, 1, "", "add_model"], [1294, 2, 1, "", "add_model_collection"], [1295, 2, 1, "", "clear"], [1296, 2, 1, "", "copy"], [1297, 2, 1, "", "filter_by_label"], [1298, 2, 1, "", "fromkeys"], [1299, 2, 1, "", "get"], [1300, 2, 1, "", "get_conduit_data"], [1301, 2, 1, "", "interpolate_data"], [1302, 2, 1, "", "items"], [1303, 2, 1, "", "keys"], [1304, 2, 1, "", "labels"], [1305, 2, 1, "", "num_pores"], [1306, 2, 1, "", "num_throats"], [1307, 2, 1, "", "pop"], [1308, 2, 1, "", "popitem"], [1309, 2, 1, "", "pores"], [1310, 2, 1, "", "props"], [1311, 2, 1, "", "regenerate_models"], [1312, 2, 1, "", "run_model"], [1313, 2, 1, "", "set_label"], [1314, 2, 1, "", "setdefault"], [1315, 2, 1, "", "throats"], [1316, 2, 1, "", "to_indices"], [1317, 2, 1, "", "to_mask"], [1318, 2, 1, "", "update"], [1319, 2, 1, "", "values"]], "openpnm.phase.BinaryGas": [[1321, 2, 1, "", "add_comp"], [1322, 2, 1, "", "add_model"], [1323, 2, 1, "", "add_model_collection"], [1324, 2, 1, "", "check_mixture_health"], [1325, 2, 1, "", "clear"], [1326, 2, 1, "", "copy"], [1327, 2, 1, "", "filter_by_label"], [1328, 2, 1, "", "fromkeys"], [1329, 2, 1, "", "get"], [1330, 2, 1, "", "get_comp_vals"], [1331, 2, 1, "", "get_conduit_data"], [1332, 2, 1, "", "get_mix_vals"], [1333, 2, 1, "", "interpolate_data"], [1334, 2, 1, "", "items"], [1335, 2, 1, "", "keys"], [1336, 2, 1, "", "labels"], [1337, 2, 1, "", "num_pores"], [1338, 2, 1, "", "num_throats"], [1339, 2, 1, "", "pop"], [1340, 2, 1, "", "popitem"], [1341, 2, 1, "", "pores"], [1342, 2, 1, "", "props"], [1343, 2, 1, "", "regenerate_models"], [1344, 2, 1, "", "remove_comp"], [1345, 2, 1, "", "run_model"], [1346, 2, 1, "", "set_label"], [1347, 2, 1, "", "setdefault"], [1348, 2, 1, "", "throats"], [1349, 2, 1, "", "to_indices"], [1350, 2, 1, "", "to_mask"], [1351, 2, 1, "", "update"], [1352, 2, 1, "", "values"], [1353, 2, 1, "", "y"]], "openpnm.phase.GasMixture": [[1355, 2, 1, "", "add_comp"], [1356, 2, 1, "", "add_model"], [1357, 2, 1, "", "add_model_collection"], [1358, 2, 1, "", "check_mixture_health"], [1359, 2, 1, "", "clear"], [1360, 2, 1, "", "copy"], [1361, 2, 1, "", "filter_by_label"], [1362, 2, 1, "", "fromkeys"], [1363, 2, 1, "", "get"], [1364, 2, 1, "", "get_comp_vals"], [1365, 2, 1, "", "get_conduit_data"], [1366, 2, 1, "", "get_mix_vals"], [1367, 2, 1, "", "interpolate_data"], [1368, 2, 1, "", "items"], [1369, 2, 1, "", "keys"], [1370, 2, 1, "", "labels"], [1371, 2, 1, "", "num_pores"], [1372, 2, 1, "", "num_throats"], [1373, 2, 1, "", "pop"], [1374, 2, 1, "", "popitem"], [1375, 2, 1, "", "pores"], [1376, 2, 1, "", "props"], [1377, 2, 1, "", "regenerate_models"], [1378, 2, 1, "", "remove_comp"], [1379, 2, 1, "", "run_model"], [1380, 2, 1, "", "set_label"], [1381, 2, 1, "", "setdefault"], [1382, 2, 1, "", "throats"], [1383, 2, 1, "", "to_indices"], [1384, 2, 1, "", "to_mask"], [1385, 2, 1, "", "update"], [1386, 2, 1, "", "values"], [1387, 2, 1, "", "y"]], "openpnm.phase.LiquidMixture": [[1389, 2, 1, "", "add_comp"], [1390, 2, 1, "", "add_model"], [1391, 2, 1, "", "add_model_collection"], [1392, 2, 1, "", "check_mixture_health"], [1393, 2, 1, "", "clear"], [1394, 2, 1, "", "copy"], [1395, 2, 1, "", "filter_by_label"], [1396, 2, 1, "", "fromkeys"], [1397, 2, 1, "", "get"], [1398, 2, 1, "", "get_comp_vals"], [1399, 2, 1, "", "get_conduit_data"], [1400, 2, 1, "", "get_mix_vals"], [1401, 2, 1, "", "interpolate_data"], [1402, 2, 1, "", "items"], [1403, 2, 1, "", "keys"], [1404, 2, 1, "", "labels"], [1405, 2, 1, "", "num_pores"], [1406, 2, 1, "", "num_throats"], [1407, 2, 1, "", "pop"], [1408, 2, 1, "", "popitem"], [1409, 2, 1, "", "pores"], [1410, 2, 1, "", "props"], [1411, 2, 1, "", "regenerate_models"], [1412, 2, 1, "", "remove_comp"], [1413, 2, 1, "", "run_model"], [1414, 2, 1, "", "set_label"], [1415, 2, 1, "", "setdefault"], [1416, 2, 1, "", "throats"], [1417, 2, 1, "", "to_indices"], [1418, 2, 1, "", "to_mask"], [1419, 2, 1, "", "update"], [1420, 2, 1, "", "values"], [1421, 2, 1, "", "x"]], "openpnm.phase.Mercury": [[1423, 2, 1, "", "add_model"], [1424, 2, 1, "", "add_model_collection"], [1425, 2, 1, "", "clear"], [1426, 2, 1, "", "copy"], [1427, 2, 1, "", "filter_by_label"], [1428, 2, 1, "", "fromkeys"], [1429, 2, 1, "", "get"], [1430, 2, 1, "", "get_conduit_data"], [1431, 2, 1, "", "interpolate_data"], [1432, 2, 1, "", "items"], [1433, 2, 1, "", "keys"], [1434, 2, 1, "", "labels"], [1435, 2, 1, "", "num_pores"], [1436, 2, 1, "", "num_throats"], [1437, 2, 1, "", "pop"], [1438, 2, 1, "", "popitem"], [1439, 2, 1, "", "pores"], [1440, 2, 1, "", "props"], [1441, 2, 1, "", "regenerate_models"], [1442, 2, 1, "", "run_model"], [1443, 2, 1, "", "set_label"], [1444, 2, 1, "", "setdefault"], [1445, 2, 1, "", "throats"], [1446, 2, 1, "", "to_indices"], [1447, 2, 1, "", "to_mask"], [1448, 2, 1, "", "update"], [1449, 2, 1, "", "values"]], "openpnm.phase.Mixture": [[1451, 2, 1, "", "add_comp"], [1452, 2, 1, "", "add_model"], [1453, 2, 1, "", "add_model_collection"], [1454, 2, 1, "", "check_mixture_health"], [1455, 2, 1, "", "clear"], [1456, 2, 1, "", "copy"], [1457, 2, 1, "", "filter_by_label"], [1458, 2, 1, "", "fromkeys"], [1459, 2, 1, "", "get"], [1460, 2, 1, "", "get_comp_vals"], [1461, 2, 1, "", "get_conduit_data"], [1462, 2, 1, "", "get_mix_vals"], [1463, 2, 1, "", "interpolate_data"], [1464, 2, 1, "", "items"], [1465, 2, 1, "", "keys"], [1466, 2, 1, "", "labels"], [1467, 2, 1, "", "num_pores"], [1468, 2, 1, "", "num_throats"], [1469, 2, 1, "", "pop"], [1470, 2, 1, "", "popitem"], [1471, 2, 1, "", "pores"], [1472, 2, 1, "", "props"], [1473, 2, 1, "", "regenerate_models"], [1474, 2, 1, "", "remove_comp"], [1475, 2, 1, "", "run_model"], [1476, 2, 1, "", "set_label"], [1477, 2, 1, "", "setdefault"], [1478, 2, 1, "", "throats"], [1479, 2, 1, "", "to_indices"], [1480, 2, 1, "", "to_mask"], [1481, 2, 1, "", "update"], [1482, 2, 1, "", "values"]], "openpnm.phase.Phase": [[1484, 2, 1, "", "add_model"], [1485, 2, 1, "", "add_model_collection"], [1486, 2, 1, "", "clear"], [1487, 2, 1, "", "copy"], [1488, 2, 1, "", "filter_by_label"], [1489, 2, 1, "", "fromkeys"], [1490, 2, 1, "", "get"], [1491, 2, 1, "", "get_conduit_data"], [1492, 2, 1, "", "interpolate_data"], [1493, 2, 1, "", "items"], [1494, 2, 1, "", "keys"], [1495, 2, 1, "", "labels"], [1496, 2, 1, "", "num_pores"], [1497, 2, 1, "", "num_throats"], [1498, 2, 1, "", "pop"], [1499, 2, 1, "", "popitem"], [1500, 2, 1, "", "pores"], [1501, 2, 1, "", "props"], [1502, 2, 1, "", "regenerate_models"], [1503, 2, 1, "", "run_model"], [1504, 2, 1, "", "set_label"], [1505, 2, 1, "", "setdefault"], [1506, 2, 1, "", "throats"], [1507, 2, 1, "", "to_indices"], [1508, 2, 1, "", "to_mask"], [1509, 2, 1, "", "update"], [1510, 2, 1, "", "values"]], "openpnm.phase.Species": [[1512, 2, 1, "", "add_model"], [1513, 2, 1, "", "add_model_collection"], [1514, 2, 1, "", "clear"], [1515, 2, 1, "", "copy"], [1516, 2, 1, "", "filter_by_label"], [1517, 2, 1, "", "fromkeys"], [1518, 2, 1, "", "get"], [1519, 2, 1, "", "get_conduit_data"], [1520, 2, 1, "", "interpolate_data"], [1521, 2, 1, "", "items"], [1522, 2, 1, "", "keys"], [1523, 2, 1, "", "labels"], [1524, 2, 1, "", "num_pores"], [1525, 2, 1, "", "num_throats"], [1526, 2, 1, "", "pop"], [1527, 2, 1, "", "popitem"], [1528, 2, 1, "", "pores"], [1529, 2, 1, "", "props"], [1530, 2, 1, "", "regenerate_models"], [1531, 2, 1, "", "run_model"], [1532, 2, 1, "", "set_label"], [1533, 2, 1, "", "setdefault"], [1534, 2, 1, "", "throats"], [1535, 2, 1, "", "to_indices"], [1536, 2, 1, "", "to_mask"], [1537, 2, 1, "", "update"], [1538, 2, 1, "", "values"]], "openpnm.phase.StandardGas": [[1540, 2, 1, "", "add_model"], [1541, 2, 1, "", "add_model_collection"], [1542, 2, 1, "", "clear"], [1543, 2, 1, "", "copy"], [1544, 2, 1, "", "filter_by_label"], [1545, 2, 1, "", "fromkeys"], [1546, 2, 1, "", "get"], [1547, 2, 1, "", "get_conduit_data"], [1548, 2, 1, "", "interpolate_data"], [1549, 2, 1, "", "items"], [1550, 2, 1, "", "keys"], [1551, 2, 1, "", "labels"], [1552, 2, 1, "", "num_pores"], [1553, 2, 1, "", "num_throats"], [1554, 2, 1, "", "pop"], [1555, 2, 1, "", "popitem"], [1556, 2, 1, "", "pores"], [1557, 2, 1, "", "props"], [1558, 2, 1, "", "regenerate_models"], [1559, 2, 1, "", "run_model"], [1560, 2, 1, "", "set_label"], [1561, 2, 1, "", "setdefault"], [1562, 2, 1, "", "throats"], [1563, 2, 1, "", "to_indices"], [1564, 2, 1, "", "to_mask"], [1565, 2, 1, "", "update"], [1566, 2, 1, "", "values"]], "openpnm.phase.StandardGasMixture": [[1568, 2, 1, "", "add_comp"], [1569, 2, 1, "", "add_model"], [1570, 2, 1, "", "add_model_collection"], [1571, 2, 1, "", "check_mixture_health"], [1572, 2, 1, "", "clear"], [1573, 2, 1, "", "copy"], [1574, 2, 1, "", "filter_by_label"], [1575, 2, 1, "", "fromkeys"], [1576, 2, 1, "", "get"], [1577, 2, 1, "", "get_comp_vals"], [1578, 2, 1, "", "get_conduit_data"], [1579, 2, 1, "", "get_mix_vals"], [1580, 2, 1, "", "interpolate_data"], [1581, 2, 1, "", "items"], [1582, 2, 1, "", "keys"], [1583, 2, 1, "", "labels"], [1584, 2, 1, "", "num_pores"], [1585, 2, 1, "", "num_throats"], [1586, 2, 1, "", "pop"], [1587, 2, 1, "", "popitem"], [1588, 2, 1, "", "pores"], [1589, 2, 1, "", "props"], [1590, 2, 1, "", "regenerate_models"], [1591, 2, 1, "", "remove_comp"], [1592, 2, 1, "", "run_model"], [1593, 2, 1, "", "set_label"], [1594, 2, 1, "", "setdefault"], [1595, 2, 1, "", "throats"], [1596, 2, 1, "", "to_indices"], [1597, 2, 1, "", "to_mask"], [1598, 2, 1, "", "update"], [1599, 2, 1, "", "values"], [1600, 2, 1, "", "y"]], "openpnm.phase.StandardLiquid": [[1602, 2, 1, "", "add_model"], [1603, 2, 1, "", "add_model_collection"], [1604, 2, 1, "", "clear"], [1605, 2, 1, "", "copy"], [1606, 2, 1, "", "filter_by_label"], [1607, 2, 1, "", "fromkeys"], [1608, 2, 1, "", "get"], [1609, 2, 1, "", "get_conduit_data"], [1610, 2, 1, "", "interpolate_data"], [1611, 2, 1, "", "items"], [1612, 2, 1, "", "keys"], [1613, 2, 1, "", "labels"], [1614, 2, 1, "", "num_pores"], [1615, 2, 1, "", "num_throats"], [1616, 2, 1, "", "pop"], [1617, 2, 1, "", "popitem"], [1618, 2, 1, "", "pores"], [1619, 2, 1, "", "props"], [1620, 2, 1, "", "regenerate_models"], [1621, 2, 1, "", "run_model"], [1622, 2, 1, "", "set_label"], [1623, 2, 1, "", "setdefault"], [1624, 2, 1, "", "throats"], [1625, 2, 1, "", "to_indices"], [1626, 2, 1, "", "to_mask"], [1627, 2, 1, "", "update"], [1628, 2, 1, "", "values"]], "openpnm.phase.StandardLiquidMixture": [[1630, 2, 1, "", "add_comp"], [1631, 2, 1, "", "add_model"], [1632, 2, 1, "", "add_model_collection"], [1633, 2, 1, "", "check_mixture_health"], [1634, 2, 1, "", "clear"], [1635, 2, 1, "", "copy"], [1636, 2, 1, "", "filter_by_label"], [1637, 2, 1, "", "fromkeys"], [1638, 2, 1, "", "get"], [1639, 2, 1, "", "get_comp_vals"], [1640, 2, 1, "", "get_conduit_data"], [1641, 2, 1, "", "get_mix_vals"], [1642, 2, 1, "", "interpolate_data"], [1643, 2, 1, "", "items"], [1644, 2, 1, "", "keys"], [1645, 2, 1, "", "labels"], [1646, 2, 1, "", "num_pores"], [1647, 2, 1, "", "num_throats"], [1648, 2, 1, "", "pop"], [1649, 2, 1, "", "popitem"], [1650, 2, 1, "", "pores"], [1651, 2, 1, "", "props"], [1652, 2, 1, "", "regenerate_models"], [1653, 2, 1, "", "remove_comp"], [1654, 2, 1, "", "run_model"], [1655, 2, 1, "", "set_label"], [1656, 2, 1, "", "setdefault"], [1657, 2, 1, "", "throats"], [1658, 2, 1, "", "to_indices"], [1659, 2, 1, "", "to_mask"], [1660, 2, 1, "", "update"], [1661, 2, 1, "", "values"], [1662, 2, 1, "", "x"]], "openpnm.phase.Water": [[1664, 2, 1, "", "add_model"], [1665, 2, 1, "", "add_model_collection"], [1666, 2, 1, "", "clear"], [1667, 2, 1, "", "copy"], [1668, 2, 1, "", "filter_by_label"], [1669, 2, 1, "", "fromkeys"], [1670, 2, 1, "", "get"], [1671, 2, 1, "", "get_conduit_data"], [1672, 2, 1, "", "interpolate_data"], [1673, 2, 1, "", "items"], [1674, 2, 1, "", "keys"], [1675, 2, 1, "", "labels"], [1676, 2, 1, "", "num_pores"], [1677, 2, 1, "", "num_throats"], [1678, 2, 1, "", "pop"], [1679, 2, 1, "", "popitem"], [1680, 2, 1, "", "pores"], [1681, 2, 1, "", "props"], [1682, 2, 1, "", "regenerate_models"], [1683, 2, 1, "", "run_model"], [1684, 2, 1, "", "set_label"], [1685, 2, 1, "", "setdefault"], [1686, 2, 1, "", "throats"], [1687, 2, 1, "", "to_indices"], [1688, 2, 1, "", "to_mask"], [1689, 2, 1, "", "update"], [1690, 2, 1, "", "values"]], "openpnm.solvers": [[1692, 1, 1, "", "BaseSolver"], [1694, 1, 1, "", "DirectSolver"], [1696, 1, 1, "", "IterativeSolver"], [1698, 1, 1, "", "PETScLinearSolver"], [1700, 1, 1, "", "PardisoSpsolve"], [1702, 1, 1, "", "PyamgRugeStubenSolver"], [1704, 1, 1, "", "ScipyCG"], [1706, 1, 1, "", "ScipySpsolve"]], "openpnm.solvers.BaseSolver": [[1693, 2, 1, "", "solve"]], "openpnm.solvers.DirectSolver": [[1695, 2, 1, "", "solve"]], "openpnm.solvers.IterativeSolver": [[1697, 2, 1, "", "solve"]], "openpnm.solvers.PETScLinearSolver": [[1699, 2, 1, "", "solve"]], "openpnm.solvers.PardisoSpsolve": [[1701, 2, 1, "", "solve"]], "openpnm.solvers.PyamgRugeStubenSolver": [[1703, 2, 1, "", "solve"]], "openpnm.solvers.ScipyCG": [[1705, 2, 1, "", "solve"]], "openpnm.solvers.ScipySpsolve": [[1707, 2, 1, "", "solve"]], "openpnm.topotools": [[1709, 3, 1, "", "add_boundary_pores"], [1710, 3, 1, "", "add_reservoir_pore"], [1711, 3, 1, "", "bond_percolation"], [1712, 3, 1, "", "clone_pores"], [1713, 3, 1, "", "connect_pores"], [1714, 3, 1, "", "conns_to_am"], [1715, 3, 1, "", "dimensionality"], [1716, 3, 1, "", "drop_sites"], [1717, 3, 1, "", "extend"], [1718, 3, 1, "", "filter_pores_by_z"], [1719, 3, 1, "", "find_clusters"], [1720, 3, 1, "", "find_connected_sites"], [1721, 3, 1, "", "find_connecting_bonds"], [1722, 3, 1, "", "find_interface_throats"], [1723, 3, 1, "", "find_isolated_clusters"], [1724, 3, 1, "", "find_neighbor_bonds"], [1725, 3, 1, "", "find_neighbor_sites"], [1726, 3, 1, "", "find_path"], [1727, 3, 1, "", "find_surface_pores"], [1728, 3, 1, "", "generate_base_points"], [1729, 3, 1, "", "get_domain_area"], [1730, 3, 1, "", "get_domain_length"], [1731, 3, 1, "", "get_shape"], [1732, 3, 1, "", "get_spacing"], [1733, 3, 1, "", "hull_centroid"], [1734, 3, 1, "", "is_fully_connected"], [1735, 3, 1, "", "iscoplanar"], [1736, 3, 1, "", "isoutside"], [1737, 3, 1, "", "ispercolating"], [1738, 3, 1, "", "issymmetric"], [1739, 3, 1, "", "istriangular"], [1740, 3, 1, "", "istril"], [1741, 3, 1, "", "istriu"], [1742, 3, 1, "", "label_faces"], [1743, 3, 1, "", "merge_networks"], [1744, 3, 1, "", "merge_pores"], [1745, 3, 1, "", "reduce_coordination"], [1746, 3, 1, "", "reflect_base_points"], [1747, 3, 1, "", "rotate_coords"], [1748, 3, 1, "", "shear_coords"], [1749, 3, 1, "", "site_percolation"], [1750, 3, 1, "", "stitch"], [1751, 3, 1, "", "template_cylinder_annulus"], [1752, 3, 1, "", "template_sphere_shell"], [1753, 3, 1, "", "tri_to_am"], [1754, 3, 1, "", "trim"], [1755, 3, 1, "", "trim_disconnected_clusters"], [1756, 3, 1, "", "vor_to_am"]], "openpnm.utils": [[1758, 1, 1, "", "Docorator"], [1784, 1, 1, "", "HealthDict"], [1796, 1, 1, "", "NestedDict"], [1810, 1, 1, "", "PrintableDict"], [1822, 1, 1, "", "PrintableList"], [1834, 1, 1, "", "Project"], [1846, 1, 1, "", "SettingsAttr"], [1847, 1, 1, "", "TypedList"], [1859, 1, 1, "", "TypedMixin"], [1860, 1, 1, "", "TypedSet"], [1878, 1, 1, "", "Workspace"], [1897, 3, 1, "", "check_data_health"], [1898, 3, 1, "", "check_network_health"], [1899, 3, 1, "", "dict_to_struct"], [1900, 3, 1, "", "flat_list"], [1901, 3, 1, "", "get_mixture_model_args"], [1902, 3, 1, "", "get_printable_labels"], [1903, 3, 1, "", "get_printable_props"], [1904, 3, 1, "", "ignore_warnings"], [1905, 3, 1, "", "is_symmetric"], [1906, 3, 1, "", "is_transient"], [1907, 3, 1, "", "is_valid_propname"], [1908, 3, 1, "", "methods_to_table"], [1909, 3, 1, "", "models_to_table"], [1910, 3, 1, "", "sanitize_dict"], [1911, 3, 1, "", "struct_to_dict"]], "openpnm.utils.Docorator": [[1759, 2, 1, "", "__call__"], [1760, 2, 1, "", "dedent"], [1761, 2, 1, "", "dedents"], [1762, 2, 1, "", "delete_kwargs"], [1763, 2, 1, "", "delete_kwargs_s"], [1764, 2, 1, "", "delete_params"], [1765, 2, 1, "", "delete_params_s"], [1766, 2, 1, "", "delete_types"], [1767, 2, 1, "", "delete_types_s"], [1768, 2, 1, "", "get_docstring"], [1769, 2, 1, "", "get_extended_summary"], [1770, 2, 1, "", "get_extended_summaryf"], [1771, 2, 1, "", "get_full_description"], [1772, 2, 1, "", "get_full_descriptionf"], [1773, 2, 1, "", "get_sections"], [1774, 2, 1, "", "get_sectionsf"], [1775, 2, 1, "", "get_summary"], [1776, 2, 1, "", "get_summaryf"], [1777, 2, 1, "", "keep_params"], [1778, 2, 1, "", "keep_params_s"], [1779, 2, 1, "", "keep_types"], [1780, 2, 1, "", "keep_types_s"], [1781, 2, 1, "", "save_docstring"], [1782, 2, 1, "", "with_indent"], [1783, 2, 1, "", "with_indents"]], "openpnm.utils.HealthDict": [[1785, 2, 1, "", "clear"], [1786, 2, 1, "", "copy"], [1787, 2, 1, "", "fromkeys"], [1788, 2, 1, "", "get"], [1789, 2, 1, "", "items"], [1790, 2, 1, "", "keys"], [1791, 2, 1, "", "pop"], [1792, 2, 1, "", "popitem"], [1793, 2, 1, "", "setdefault"], [1794, 2, 1, "", "update"], [1795, 2, 1, "", "values"]], "openpnm.utils.NestedDict": [[1797, 2, 1, "", "clear"], [1798, 2, 1, "", "copy"], [1799, 2, 1, "", "fromkeys"], [1800, 2, 1, "", "get"], [1801, 2, 1, "", "items"], [1802, 2, 1, "", "keys"], [1803, 2, 1, "", "pop"], [1804, 2, 1, "", "popitem"], [1805, 2, 1, "", "setdefault"], [1806, 2, 1, "", "to_dict"], [1807, 2, 1, "", "unravel"], [1808, 2, 1, "", "update"], [1809, 2, 1, "", "values"]], "openpnm.utils.PrintableDict": [[1811, 2, 1, "", "clear"], [1812, 2, 1, "", "copy"], [1813, 2, 1, "", "fromkeys"], [1814, 2, 1, "", "get"], [1815, 2, 1, "", "items"], [1816, 2, 1, "", "keys"], [1817, 2, 1, "", "pop"], [1818, 2, 1, "", "popitem"], [1819, 2, 1, "", "setdefault"], [1820, 2, 1, "", "update"], [1821, 2, 1, "", "values"]], "openpnm.utils.PrintableList": [[1823, 2, 1, "", "append"], [1824, 2, 1, "", "clear"], [1825, 2, 1, "", "copy"], [1826, 2, 1, "", "count"], [1827, 2, 1, "", "extend"], [1828, 2, 1, "", "index"], [1829, 2, 1, "", "insert"], [1830, 2, 1, "", "pop"], [1831, 2, 1, "", "remove"], [1832, 2, 1, "", "reverse"], [1833, 2, 1, "", "sort"]], "openpnm.utils.Project": [[1835, 2, 1, "", "append"], [1836, 2, 1, "", "clear"], [1837, 2, 1, "", "copy"], [1838, 2, 1, "", "count"], [1839, 2, 1, "", "extend"], [1840, 2, 1, "", "index"], [1841, 2, 1, "", "insert"], [1842, 2, 1, "", "pop"], [1843, 2, 1, "", "remove"], [1844, 2, 1, "", "reverse"], [1845, 2, 1, "", "sort"]], "openpnm.utils.TypedList": [[1848, 2, 1, "", "append"], [1849, 2, 1, "", "clear"], [1850, 2, 1, "", "copy"], [1851, 2, 1, "", "count"], [1852, 2, 1, "", "extend"], [1853, 2, 1, "", "index"], [1854, 2, 1, "", "insert"], [1855, 2, 1, "", "pop"], [1856, 2, 1, "", "remove"], [1857, 2, 1, "", "reverse"], [1858, 2, 1, "", "sort"]], "openpnm.utils.TypedSet": [[1861, 2, 1, "", "add"], [1862, 2, 1, "", "clear"], [1863, 2, 1, "", "copy"], [1864, 2, 1, "", "difference"], [1865, 2, 1, "", "difference_update"], [1866, 2, 1, "", "discard"], [1867, 2, 1, "", "intersection"], [1868, 2, 1, "", "intersection_update"], [1869, 2, 1, "", "isdisjoint"], [1870, 2, 1, "", "issubset"], [1871, 2, 1, "", "issuperset"], [1872, 2, 1, "", "pop"], [1873, 2, 1, "", "remove"], [1874, 2, 1, "", "symmetric_difference"], [1875, 2, 1, "", "symmetric_difference_update"], [1876, 2, 1, "", "union"], [1877, 2, 1, "", "update"]], "openpnm.utils.Workspace": [[1879, 2, 1, "", "clear"], [1880, 2, 1, "", "close_project"], [1881, 2, 1, "", "copy"], [1882, 2, 1, "", "copy_project"], [1883, 2, 1, "", "fromkeys"], [1884, 2, 1, "", "get"], [1885, 2, 1, "", "items"], [1886, 2, 1, "", "keys"], [1887, 2, 1, "", "load_project"], [1888, 2, 1, "", "load_workspace"], [1889, 2, 1, "", "new_project"], [1890, 2, 1, "", "pop"], [1891, 2, 1, "", "popitem"], [1892, 2, 1, "", "save_project"], [1893, 2, 1, "", "save_workspace"], [1894, 2, 1, "", "setdefault"], [1895, 2, 1, "", "update"], [1896, 2, 1, "", "values"]], "openpnm.visualization": [[1913, 3, 1, "", "draw_conduit"], [1914, 3, 1, "", "generate_voxel_image"], [1915, 3, 1, "", "plot_connections"], [1916, 3, 1, "", "plot_coordinates"], [1917, 3, 1, "", "plot_networkx"], [1918, 3, 1, "", "plot_notebook"], [1919, 3, 1, "", "plot_tutorial"], [1920, 3, 1, "", "plot_vispy"], [1921, 3, 1, "", "set_mpl_style"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"applic": 0, "exampl": [1, 13], "refer": [2, 1922], "10": 3, "step": [3, 9], "learn": 3, "openpnm": [3, 5, 22, 23, 28, 35, 552], "predict": [4, 6, 8, 10, 12], "absolut": [4, 21], "permeabl": [4, 12, 14], "creat": [4, 8, 10, 11, 12, 14, 18, 20, 30, 31, 32], "random": [4, 9, 10, 26, 740, 748, 792, 798, 831], "cubic": [4, 10, 14, 26, 982], "network": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 23, 26, 27, 28, 35, 678, 835, 942, 1215, 1708], "phase": [4, 6, 7, 8, 9, 11, 12, 14, 31, 32, 679, 852, 1291, 1483], "object": [4, 31, 32], "appli": [4, 6, 8, 9, 11, 12, 20], "stoke": [4, 6], "flow": [4, 6], "calcul": [4, 7, 8, 10, 11, 12, 14, 29, 32], "adjust": [5, 14], "pore": [5, 6, 9, 10, 14, 15, 23, 27, 28, 29, 30, 32, 35, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 587, 603, 668, 733, 739, 742, 750, 755, 971, 1010, 1048, 1086, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680], "size": [5, 9, 14, 23, 29, 703, 718, 742, 793], "distribut": [5, 9, 14, 29], "geometri": [5, 7, 670, 688], "throat": [5, 9, 10, 23, 27, 28, 29, 30, 67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 455, 487, 519, 546, 593, 605, 761, 764, 766, 772, 786, 790, 793, 800, 805, 807, 977, 1016, 1054, 1092, 1132, 1171, 1210, 1248, 1286, 1315, 1348, 1382, 1416, 1445, 1478, 1506, 1534, 1562, 1595, 1624, 1657, 1686], "us": [5, 9, 21, 22, 28, 29, 30, 31, 33], "scipi": [5, 29], "stat": [5, 29], "class": [5, 31, 552, 1757], "directli": 5, "pre": 5, "defin": [5, 6, 11, 12, 14, 30, 32], "model": [5, 15, 23, 29, 30, 31, 32, 35, 668, 678, 689, 703, 718, 733, 739, 742, 750, 755, 761, 764, 766, 772, 786, 790, 793, 800, 805, 807], "dispers": 6, "coeffici": [6, 14, 20], "gener": [6, 26], "effect": [6, 7, 758], "volum": [6, 10, 755, 807], "perform": [6, 7, 9, 14], "transient": [6, 24, 640], "advect": 6, "diffus": [6, 7, 8, 11, 23, 703, 861], "elut": 6, "curv": [6, 11], "solv": [6, 20, 643, 1693, 1695, 1697, 1699, 1701, 1703, 1705, 1707], "find": [7, 9, 28], "tortuos": 7, "physic": [7, 9, 685, 903], "fickian": [7, 8], "visual": [7, 8, 26, 34, 1912], "result": [7, 8], "format": [8, 28], "factor": [8, 23, 703, 718, 761], "calibr": 9, "mercuri": [9, 683, 1422], "intrus": 9, "data": [9, 27, 30, 644], "import": [9, 26, 644], "packag": [9, 21], "sandston": 9, "add": [9, 1861], "geometr": [9, 29], "properti": [9, 27, 29, 31], "given": 9, "seed": [9, 739, 790], "between": 9, "0": 9, "1": [9, 31], "check": [9, 31], "consist": [9, 31], "addit": 9, "poros": 10, "void": 10, "bulk": 10, "discuss": 10, "issu": 10, "domain": [10, 30, 570], "overlap": 10, "extract": 10, "obtain": 11, "rel": [11, 12], "ordinari": 11, "percol": [11, 12, 33], "satur": 11, "rate": [11, 20, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 480], "function": [11, 12, 22, 25, 644, 1708, 1757], "multiphas": [11, 12, 493, 925], "conduct": [11, 12, 23, 32], "invas": [12, 33], "occup": 12, "contibut": 13, "get": [14, 31, 46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 468, 501, 530, 557, 577, 611, 626, 958, 997, 1035, 1073, 1113, 1152, 1191, 1229, 1267, 1299, 1329, 1363, 1397, 1429, 1459, 1490, 1518, 1546, 1576, 1608, 1638, 1670, 1788, 1800, 1814, 1884], "start": [14, 27], "drainag": [14, 33, 98], "simul": [14, 32, 33, 640, 1691], "scale": [15, 29, 32, 668, 832], "set": [16, 31], "attribut": [16, 31], "machineri": 16, "datatyp": 16, "i": [16, 17, 35], "enforc": 16, "can": 16, "access": 16, "dict": [16, 25], "kei": [16, 27, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 472, 505, 534, 561, 581, 613, 628, 964, 1003, 1041, 1079, 1119, 1158, 1197, 1235, 1273, 1303, 1335, 1369, 1403, 1433, 1465, 1494, 1522, 1550, 1582, 1612, 1644, 1674, 1790, 1802, 1816, 1886], "namespac": 16, "clean": 16, "collect": [16, 29, 640, 644, 668, 669, 678, 1691, 1708], "also": 16, "type": 16, "ar": [16, 27], "attach": 16, "befor": 16, "init": 16, "The": [17, 27, 28, 30, 31, 36, 552], "workspac": [17, 1878], "project": [17, 1834], "usag": 17, "singleton": 17, "One": 17, "per": 17, "manag": 18, "cluster": 18, "illustr": 18, "problem": 18, "fix": 18, "avail": 19, "matrix": [19, 20, 28, 1691], "solver": [19, 1691], "steadi": [20, 1691], "state": [20, 1691], "transport": [20, 22, 23, 24, 32, 460], "valu": [20, 27, 31, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 491, 523, 550, 569, 597, 618, 633, 981, 1020, 1058, 1096, 1136, 1175, 1214, 1252, 1290, 1319, 1352, 1386, 1420, 1449, 1482, 1510, 1538, 1566, 1599, 1628, 1661, 1690, 1795, 1809, 1821, 1896], "boundari": [20, 32], "condit": [20, 32], "system": 20, "equat": 20, "spars": [20, 27, 28], "matric": [20, 27], "explan": 21, "unit": 21, "pressur": 21, "v": [21, 23, 27], "gaug": 21, "convers": 21, "challeng": 21, "reactiv": 22, "sourc": 22, "term": 22, "how": [22, 35], "work": 22, "singl": [23, 32], "conduit": [23, 27, 689], "shape": [23, 30, 761], "built": [23, 31], "deriv": 23, "arbitrari": 23, "hydraul": [23, 718], "element": 23, "numer": [25, 27], "python": [25, 35], "primer": 25, "list": 25, "flexibl": 25, "slow": 25, "numpi": [25, 27], "ndarrai": 25, "optim": 25, "vector": [25, 27, 805], "method": [25, 28, 30, 32], "versu": 25, "dictionari": [25, 27], "hold": 25, "thing": 25, "togeth": 25, "subclass": 25, "quick": 26, "cubictempl": [26, 1021], "other": [26, 28], "lattic": 26, "delaunai": [26, 1059], "voronoi": [26, 1253], "tessel": 26, "storag": 27, "topologi": [27, 1708], "spreadsheet": 27, "analogi": 27, "rule": 27, "maintain": 27, "integr": [27, 640, 641], "all": 27, "convert": 27, "arrai": 27, "must": 27, "With": 27, "ani": 27, "scalar": 27, "expand": 27, "full": [27, 30], "length": [27, 29, 689, 772], "nest": 27, "name": 27, "allow": 27, "boolean": [27, 30], "treat": 27, "label": [27, 30, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 506, 535, 582, 600, 965, 1004, 1042, 1080, 1120, 1159, 1198, 1236, 1274, 1304, 1336, 1370, 1404, 1434, 1466, 1495, 1523, 1551, 1583, 1613, 1645, 1675], "lead": 27, "underscor": 27, "hidden": 27, "param": 27, "prefix": 27, "repres": 27, "adjac": [27, 28], "dens": 27, "represent": 28, "queri": 28, "manipul": [28, 1708], "coo": 28, "incid": 28, "neighor": 28, "neighbor": 28, "connect": 28, "remov": [28, 31, 1831, 1843, 1856, 1873], "ad": [28, 29, 31], "assign": [29, 31, 32], "manual": [29, 32, 33], "from": 29, "comput": 29, "surfac": [29, 750, 800], "area": [29, 733, 750, 766, 800], "librari": 29, "predefin": [29, 30], "custom": [29, 30, 31], "overwrit": 29, "them": 29, "Their": 29, "argument": [29, 30], "introduct": 29, "depend": 29, "handler": 29, "mode": 30, "mask": 30, "set_label": [30, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 483, 516, 544, 591, 604, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684], "sytax": 30, "read": 30, "write": [30, 31], "subdomain": 30, "chang": 30, "locat": 30, "mix": 30, "mani": 30, "differ": [30, 818, 1864], "part": 31, "direct": 31, "constant": [31, 817], "water": [31, 684, 1663], "specif": 31, "your": 31, "own": 31, "common": 31, "fluid": 31, "2": 31, "speci": [31, 1511], "mixtur": [31, 873, 1450], "pure": 31, "ga": [31, 681], "liquid": [31, 682], "composit": 31, "explor": 31, "featur": 31, "info": 31, "compon": 31, "mole": 31, "fraction": [31, 819], "get_comp_v": [31, 1330, 1364, 1398, 1460, 1577, 1639], "check_mixture_health": [31, 1324, 1358, 1392, 1454, 1571, 1633], "retriev": 31, "wildcard": 31, "syntax": 31, "viscos": [32, 896], "basic": [32, 686], "algorithm": [32, 33, 37, 72], "rigor": 32, "implement": 33, "draing": 33, "process": 33, "invasionpercol": [33, 196], "option": 34, "spyder": 34, "interact": 34, "plot": 34, "jupyt": 34, "notebook": 34, "paraview": 34, "framework": 35, "what": 35, "star": 35, "To": 35, "cite": 35, "citat": 35, "instal": 36, "dev": 36, "version": 36, "easi": 36, "wai": 36, "hard": 36, "correct": 36, "where": 36, "": 36, "my": 36, "conda": 36, "prompt": 36, "window": 36, "mac": 36, "linux": 36, "advectiondiffus": 38, "clear": [39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 461, 497, 525, 554, 573, 608, 620, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1325, 1359, 1393, 1425, 1455, 1486, 1514, 1542, 1572, 1604, 1634, 1666, 1785, 1797, 1811, 1824, 1836, 1849, 1862, 1879], "clear_bc": [40, 74, 101, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 462, 526], "clear_rate_bc": [41, 133, 166, 231, 264, 297, 330, 364, 397, 430, 463], "clear_value_bc": [42, 134, 167, 232, 265, 298, 331, 365, 398, 431, 464], "copi": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 366, 399, 432, 465, 498, 527, 555, 574, 609, 621, 948, 987, 1025, 1063, 1101, 1142, 1181, 1219, 1257, 1296, 1326, 1360, 1394, 1426, 1456, 1487, 1515, 1543, 1573, 1605, 1635, 1667, 1786, 1798, 1812, 1825, 1837, 1850, 1863, 1881], "filter_by_label": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 466, 499, 528, 575, 599, 951, 990, 1028, 1066, 1104, 1145, 1184, 1222, 1260, 1297, 1327, 1361, 1395, 1427, 1457, 1488, 1516, 1544, 1574, 1606, 1636, 1668], "fromkei": [45, 77, 104, 137, 170, 202, 235, 268, 301, 334, 368, 401, 434, 467, 500, 529, 556, 576, 610, 625, 957, 996, 1034, 1072, 1112, 1151, 1190, 1228, 1266, 1298, 1328, 1362, 1396, 1428, 1458, 1489, 1517, 1545, 1575, 1607, 1637, 1669, 1787, 1799, 1813, 1883], "get_conduit_data": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 502, 531, 558, 578, 960, 999, 1037, 1075, 1115, 1154, 1193, 1231, 1269, 1300, 1331, 1365, 1399, 1430, 1461, 1491, 1519, 1547, 1578, 1609, 1640, 1671], "interpolate_data": [48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 962, 1001, 1039, 1077, 1117, 1156, 1195, 1233, 1271, 1301, 1333, 1367, 1401, 1431, 1463, 1492, 1520, 1548, 1580, 1610, 1642, 1672], "item": [49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 504, 533, 560, 580, 612, 627, 963, 1002, 1040, 1078, 1118, 1157, 1196, 1234, 1272, 1302, 1334, 1368, 1402, 1432, 1464, 1493, 1521, 1549, 1581, 1611, 1643, 1673, 1789, 1801, 1815, 1885], "num_por": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 474, 507, 536, 583, 601, 967, 1006, 1044, 1082, 1122, 1161, 1200, 1238, 1276, 1305, 1337, 1371, 1405, 1435, 1467, 1496, 1524, 1552, 1584, 1614, 1646, 1676], "num_throat": [53, 85, 112, 145, 178, 210, 243, 276, 309, 342, 376, 409, 442, 475, 508, 537, 584, 602, 968, 1007, 1045, 1083, 1123, 1162, 1201, 1239, 1277, 1306, 1338, 1372, 1406, 1436, 1468, 1497, 1525, 1553, 1585, 1615, 1647, 1677], "pop": [54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 377, 410, 443, 476, 509, 538, 562, 585, 614, 629, 969, 1008, 1046, 1084, 1124, 1163, 1202, 1240, 1278, 1307, 1339, 1373, 1407, 1437, 1469, 1498, 1526, 1554, 1586, 1616, 1648, 1678, 1791, 1803, 1817, 1830, 1842, 1855, 1872, 1890], "popitem": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 510, 539, 563, 586, 615, 630, 970, 1009, 1047, 1085, 1125, 1164, 1203, 1241, 1279, 1308, 1340, 1374, 1408, 1438, 1470, 1499, 1527, 1555, 1587, 1617, 1649, 1679, 1792, 1804, 1818, 1891], "prop": [57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 479, 512, 541, 564, 588, 972, 1011, 1049, 1087, 1127, 1166, 1205, 1243, 1281, 1310, 1342, 1376, 1410, 1440, 1472, 1501, 1529, 1557, 1589, 1619, 1651, 1681], "run": [59, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448, 481, 542], "set_bc": [60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543], "set_outflow_bc": [62, 351], "set_rate_bc": [63, 154, 187, 252, 285, 318, 352, 385, 418, 451, 484], "set_sourc": [64, 155, 188, 253, 286, 319, 353, 386, 419, 452], "set_value_bc": [65, 156, 189, 254, 287, 320, 354, 387, 420, 453, 485], "setdefault": [66, 92, 124, 157, 190, 222, 255, 288, 321, 355, 388, 421, 454, 486, 518, 545, 565, 592, 616, 631, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685, 1793, 1805, 1819, 1894], "to_indic": [68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 456, 488, 520, 547, 566, 594, 978, 1017, 1055, 1093, 1133, 1172, 1211, 1249, 1287, 1316, 1349, 1383, 1417, 1446, 1479, 1507, 1535, 1563, 1596, 1625, 1658, 1687], "to_mask": [69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 457, 489, 521, 548, 567, 595, 979, 1018, 1056, 1094, 1134, 1173, 1212, 1250, 1288, 1317, 1350, 1384, 1418, 1447, 1480, 1508, 1536, 1564, 1597, 1626, 1659, 1688], "updat": [70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 458, 490, 522, 549, 568, 596, 617, 632, 980, 1019, 1057, 1095, 1135, 1174, 1213, 1251, 1289, 1318, 1351, 1385, 1419, 1448, 1481, 1509, 1537, 1565, 1598, 1627, 1660, 1689, 1794, 1808, 1820, 1877, 1895], "apply_trap": [99, 197], "pc_curv": [113, 211], "reset": [118, 216], "set_inlet_bc": [121, 219], "set_outlet_bc": [123, 221], "fickiandiffus": 130, "fourierconduct": 163, "ohmicconduct": 228, "reactivetransport": 261, "stokesflow": 294, "transientadvectiondiffus": 327, "transientfickiandiffus": 361, "transientfourierconduct": 394, "transientreactivetransport": 427, "contrib": 492, "add_model": [494, 571, 635, 945, 984, 1022, 1060, 1098, 1139, 1178, 1216, 1254, 1293, 1322, 1356, 1390, 1423, 1452, 1484, 1512, 1540, 1569, 1602, 1631, 1664], "add_model_collect": [495, 572, 636, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "add_phas": 496, "regenerate_model": [513, 589, 637, 973, 1012, 1050, 1088, 1128, 1167, 1206, 1244, 1282, 1311, 1343, 1377, 1411, 1441, 1473, 1502, 1530, 1558, 1590, 1620, 1652, 1682], "run_model": [514, 590, 638, 974, 1013, 1051, 1089, 1129, 1168, 1207, 1245, 1283, 1312, 1345, 1379, 1413, 1442, 1475, 1503, 1531, 1559, 1592, 1621, 1654, 1683], "set_binary_partition_coef": 515, "set_occup": 517, "transientmultiphys": 524, "multiphase_diffus": 551, "core": 552, "main": 552, "base": 552, "modelsmixin": 552, "base2": 553, "labelmixin": 598, "modelwrapp": 606, "__call__": [607, 1759], "modelsdict": 619, "dependency_graph": 622, "dependency_list": 623, "dependency_map": 624, "modelsmixin2": 634, "parsermixin": 639, "od": 640, "scipyrk45": 642, "io": 644, "export": 644, "network_from_csv": 645, "network_from_jsongraph": 646, "network_from_marock": 647, "network_from_networkx": 648, "network_from_pergeo": 649, "network_from_porespi": 650, "network_from_statoil": 651, "network_to_comsol": 652, "network_to_csv": 653, "network_to_jsongraph": 654, "network_to_networkx": 655, "network_to_panda": 656, "network_to_pergeo": 657, "network_to_salom": 658, "network_to_stl": 659, "print_hdf5": 660, "project_to_csv": 661, "project_to_dict": 662, "project_to_hdf5": 663, "project_to_panda": 664, "project_to_paraview": 665, "project_to_vtk": 666, "project_to_xdmf": 667, "circles_and_rectangl": [671, 690, 704, 719, 773], "cones_and_cylind": [672, 691, 705, 720, 774], "cubes_and_cuboid": [673, 692, 706, 721, 775], "pyramids_and_cuboid": [674, 699, 714, 729, 782], "spheres_and_cylind": [675, 700, 715, 730, 771, 783], "squares_and_rectangl": [676, 701, 716, 731, 784], "trapezoids_and_rectangl": [677, 702, 717, 732, 785], "air": [680, 1292], "standard": 687, "conduit_length": 689, "hybrid_cones_and_cylind": [693, 707, 722, 776], "hybrid_pyramids_and_cuboid": [694, 708, 723, 777], "hybrid_trapezoids_and_rectangl": [695, 709, 724, 778], "intersecting_con": [696, 710, 725, 779], "intersecting_pyramid": [697, 711, 726, 780], "intersecting_trapezoid": [698, 712, 727, 781], "diffusive_size_factor": 703, "ncylinders_in_seri": [713, 728], "hydraulic_size_factor": 718, "pore_cross_sectional_area": 733, "cross": [733, 766], "section": [733, 766], "circl": [734, 751, 756], "cone": 735, "cube": [736, 752, 757], "sphere": [737, 753, 759], "squar": [738, 754, 760], "pore_se": 739, "spatially_correl": 741, "pore_s": 742, "equivalent_diamet": [743, 794], "from_neighbor_throat": [744, 821], "generic_distribut": [745, 796, 822], "largest_spher": 746, "normal": [747, 797, 827, 828], "weibul": [749, 799, 834], "pore_surface_area": 750, "pore_volum": 755, "throat_capillary_shape_factor": 761, "capillari": 761, "jenkins_rao": 762, "mason_morrow": 763, "throat_centroid": 764, "centroid": 764, "pore_coord": 765, "throat_cross_sectional_area": 766, "cuboid": [767, 787, 801, 808], "cylind": [768, 788, 802, 809], "rectangl": [769, 789, 804, 813], "throat_endpoint": 770, "throat_length": 772, "throat_perimet": 786, "perimet": 786, "throat_se": 790, "from_neighbor_por": [791, 795, 820], "throat_siz": 793, "throat_surface_area": 800, "extrus": [803, 810], "throat_vector": 805, "pore_to_por": 806, "throat_volum": 807, "len": 811, "pendular_r": 812, "misc": [814, 870], "miscellan": 814, "blank": 815, "clip": 816, "generic_funct": 823, "invert": 824, "linear": [825, 933], "match_histogram": 826, "polynomi": 829, "product": 830, "summat": 833, "bidirectional_throat": 836, "cluster_numb": 837, "cluster_s": 838, "coordination_numb": 839, "count_coincident_por": 840, "distance_to_furthest_neighbor": 841, "distance_to_nearest_neighbor": 842, "distance_to_nearest_por": 843, "duplicate_throat": 844, "find_coincident_por": 845, "gabriel_edg": 846, "headless_throat": 847, "isolated_por": 848, "looped_throat": 849, "pore_to_pore_dist": 850, "reversed_throat": 851, "chemicals_wrapp": 853, "critical_prop": 854, "densiti": 855, "ideal_ga": 856, "liquid_mixture_costald": 857, "liquid_pure_costald": 858, "mass_to_molar": 859, "water_correl": [860, 884, 891, 895, 902], "gas_mixture_c": 862, "gas_mixture_fesg": 863, "liquid_mixture_tc": 864, "heat_capac": 865, "gas_mixture_yweight": 866, "gas_pure_trc": 867, "liquid_mixture_xweight": [868, 900], "liquid_pure_rp": 869, "mix_and_match": 871, "mole_to_mass_fract": [872, 877], "from_compon": 874, "mixing_rul": 875, "mole_summ": 876, "salin": 878, "partition_coeffici": 879, "gaseous_species_in_wat": 880, "surface_tens": 881, "liquid_mixture_wsd": 882, "liquid_pure_bb": 883, "thermal_conduct": [885, 939], "gas_mixture_whz": 886, "gas_pure_gismr": 887, "liquid_mixture_dippr9h": 888, "liquid_pure_gismr": 889, "liquid_pure_sr": 890, "vapor_pressur": 892, "liquid_pure_antoin": 893, "liquid_pure_lk": 894, "gas_mixture_hz": 897, "gas_pure_gesmr": 898, "gas_pure_st": 899, "liquid_pure_l": 901, "ad_dif_conduct": 904, "ad_dif": 905, "capillary_pressur": 906, "purcel": [907, 923], "washburn": 908, "diffusive_conduct": 909, "generic_diffus": 910, "mixed_diffus": 911, "ordinary_diffus": 912, "taylor_aris_diffus": 913, "electrical_conduct": 914, "generic_electr": 915, "series_resistor": [916, 941], "hydraulic_conduct": 917, "generic_hydraul": 918, "hagen_poiseuil": 919, "valvatne_blunt": 920, "meniscu": 921, "general_toroid": 922, "sinusoid": 924, "conduit_conduct": 926, "late_fil": 927, "source_term": 928, "butler_volmer_conc": 929, "butler_volmer_voltag": 930, "exponenti": 931, "general_symbol": 932, "logarithm": 934, "natural_exponenti": 935, "natural_logarithm": 936, "power_law": 937, "standard_kinet": 938, "generic_therm": 940, "bodycenteredcub": 943, "add_boundary_por": [944, 983, 1138, 1177, 1709], "create_adjacency_matrix": [949, 988, 1026, 1064, 1102, 1143, 1182, 1220, 1258], "create_incidence_matrix": [950, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259], "find_connected_por": [952, 991, 1029, 1067, 1105, 1146, 1185, 1223, 1261], "find_connecting_throat": [953, 992, 1030, 1068, 1106, 1147, 1186, 1224, 1262], "find_nearby_por": [954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "find_neighbor_por": [955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "find_neighbor_throat": [956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265], "get_adjacency_matrix": [959, 998, 1036, 1074, 1114, 1153, 1192, 1230, 1268], "get_incidence_matrix": [961, 1000, 1038, 1076, 1116, 1155, 1194, 1232, 1270], "num_neighbor": [966, 1005, 1043, 1081, 1121, 1160, 1199, 1237, 1275], "delaunayvoronoidu": 1097, "find_pore_hul": 1110, "find_throat_facet": 1111, "demo": 1137, "facecenteredcub": 1176, "binaryga": 1320, "add_comp": [1321, 1355, 1389, 1451, 1568, 1630], "get_mix_v": [1332, 1366, 1400, 1462, 1579, 1641], "remove_comp": [1344, 1378, 1412, 1474, 1591, 1653], "y": [1353, 1387, 1600], "gasmixtur": 1354, "liquidmixtur": 1388, "x": [1421, 1662], "standardga": 1539, "standardgasmixtur": 1567, "standardliquid": 1601, "standardliquidmixtur": 1629, "basesolv": 1692, "directsolv": 1694, "iterativesolv": 1696, "petsclinearsolv": 1698, "pardisospsolv": 1700, "pyamgrugestubensolv": 1702, "scipycg": 1704, "scipyspsolv": 1706, "topotool": 1708, "add_reservoir_por": 1710, "bond_percol": 1711, "clone_por": 1712, "connect_por": 1713, "conns_to_am": 1714, "dimension": 1715, "drop_sit": 1716, "extend": [1717, 1827, 1839, 1852], "filter_pores_by_z": 1718, "find_clust": 1719, "find_connected_sit": 1720, "find_connecting_bond": 1721, "find_interface_throat": 1722, "find_isolated_clust": 1723, "find_neighbor_bond": 1724, "find_neighbor_sit": 1725, "find_path": 1726, "find_surface_por": 1727, "generate_base_point": 1728, "get_domain_area": 1729, "get_domain_length": 1730, "get_shap": 1731, "get_spac": 1732, "hull_centroid": 1733, "is_fully_connect": 1734, "iscoplanar": 1735, "isoutsid": 1736, "ispercol": 1737, "issymmetr": 1738, "istriangular": 1739, "istril": 1740, "istriu": 1741, "label_fac": 1742, "merge_network": 1743, "merge_por": 1744, "reduce_coordin": 1745, "reflect_base_point": 1746, "rotate_coord": 1747, "shear_coord": 1748, "site_percol": 1749, "stitch": 1750, "template_cylinder_annulu": 1751, "template_sphere_shel": 1752, "tri_to_am": 1753, "trim": 1754, "trim_disconnected_clust": 1755, "vor_to_am": 1756, "util": 1757, "helper": 1757, "docor": 1758, "dedent": [1760, 1761], "delete_kwarg": 1762, "delete_kwargs_": 1763, "delete_param": 1764, "delete_params_": 1765, "delete_typ": 1766, "delete_types_": 1767, "get_docstr": 1768, "get_extended_summari": 1769, "get_extended_summaryf": 1770, "get_full_descript": 1771, "get_full_descriptionf": 1772, "get_sect": 1773, "get_sectionsf": 1774, "get_summari": 1775, "get_summaryf": 1776, "keep_param": 1777, "keep_params_": 1778, "keep_typ": 1779, "keep_types_": 1780, "save_docstr": 1781, "with_ind": [1782, 1783], "healthdict": 1784, "nesteddict": 1796, "to_dict": 1806, "unravel": 1807, "printabledict": 1810, "printablelist": 1822, "append": [1823, 1835, 1848], "count": [1826, 1838, 1851], "index": [1828, 1840, 1853], "insert": [1829, 1841, 1854], "revers": [1832, 1844, 1857], "sort": [1833, 1845, 1858], "settingsattr": 1846, "typedlist": 1847, "typedmixin": 1859, "typedset": 1860, "difference_upd": 1865, "discard": 1866, "intersect": 1867, "intersection_upd": 1868, "isdisjoint": 1869, "issubset": 1870, "issuperset": 1871, "symmetric_differ": 1874, "symmetric_difference_upd": 1875, "union": 1876, "close_project": 1880, "copy_project": 1882, "load_project": 1887, "load_workspac": 1888, "new_project": 1889, "save_project": 1892, "save_workspac": 1893, "check_data_health": 1897, "check_network_health": 1898, "dict_to_struct": 1899, "flat_list": 1900, "get_mixture_model_arg": 1901, "get_printable_label": 1902, "get_printable_prop": 1903, "ignore_warn": 1904, "is_symmetr": 1905, "is_transi": 1906, "is_valid_propnam": 1907, "methods_to_t": 1908, "models_to_t": 1909, "sanitize_dict": 1910, "struct_to_dict": 1911, "draw_conduit": 1913, "generate_voxel_imag": 1914, "plot_connect": 1915, "plot_coordin": 1916, "plot_networkx": 1917, "plot_notebook": 1918, "plot_tutori": 1919, "plot_vispi": 1920, "set_mpl_styl": 1921, "modul": 1922}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"clear": [[198, "clear"], [164, "clear"], [100, "clear"], [131, "clear"], [73, "clear"], [262, "clear"], [229, "clear"], [1811, "clear"], [1836, "clear"], [1862, "clear"], [1824, "clear"], [1797, "clear"], [1849, "clear"], [1879, "clear"], [1785, "clear"], [1604, "clear"], [1634, "clear"], [1666, "clear"], [1572, "clear"], [1542, "clear"], [1425, "clear"], [1393, "clear"], [1486, "clear"], [1455, "clear"], [1514, "clear"], [1359, "clear"], [1325, "clear"], [1256, "clear"], [1295, "clear"], [1218, "clear"], [1180, "clear"], [1141, "clear"], [1062, "clear"], [1100, "clear"], [986, "clear"], [1024, "clear"], [947, "clear"], [573, "clear"], [554, "clear"], [620, "clear"], [608, "clear"], [525, "clear"], [497, "clear"], [461, "clear"], [428, "clear"], [362, "clear"], [395, "clear"], [328, "clear"], [295, "clear"], [39, "clear"]], "set_label": [[153, "set-label"], [186, "set-label"], [91, "set-label"], [122, "set-label"], [251, "set-label"], [220, "set-label"], [1622, "set-label"], [1593, "set-label"], [1655, "set-label"], [1684, "set-label"], [1532, "set-label"], [1560, "set-label"], [1443, "set-label"], [1380, "set-label"], [1414, "set-label"], [1504, "set-label"], [1476, "set-label"], [1313, "set-label"], [1346, "set-label"], [1284, "set-label"], [1246, "set-label"], [1208, "set-label"], [1169, "set-label"], [1130, "set-label"], [1052, "set-label"], [1090, "set-label"], [1014, "set-label"], [975, "set-label"], [591, "set-label"], [604, "set-label"], [544, "set-label"], [516, "set-label"], [483, "set-label"], [450, "set-label"], [417, "set-label"], [384, "set-label"], [350, "set-label"], [317, "set-label"], [284, "set-label"], [61, "set-label"]], "num_throats": [[178, "num-throats"], [145, "num-throats"], [112, "num-throats"], [85, "num-throats"], [243, "num-throats"], [210, "num-throats"], [1615, "num-throats"], [1647, "num-throats"], [1677, "num-throats"], [1585, "num-throats"], [1525, "num-throats"], [1553, "num-throats"], [1436, "num-throats"], [1406, "num-throats"], [1468, "num-throats"], [1497, "num-throats"], [1338, "num-throats"], [1372, "num-throats"], [1277, "num-throats"], [1306, "num-throats"], [1201, "num-throats"], [1239, "num-throats"], [1123, "num-throats"], [1162, "num-throats"], [1083, "num-throats"], [1045, "num-throats"], [968, "num-throats"], [1007, "num-throats"], [602, "num-throats"], [584, "num-throats"], [508, "num-throats"], [537, "num-throats"], [442, "num-throats"], [475, "num-throats"], [376, "num-throats"], [409, "num-throats"], [276, "num-throats"], [309, "num-throats"], [342, "num-throats"], [53, "num-throats"]], "pores": [[148, "pores"], [181, "pores"], [116, "pores"], [88, "pores"], [246, "pores"], [214, "pores"], [1618, "pores"], [1650, "pores"], [1588, "pores"], [1680, "pores"], [1556, "pores"], [1528, "pores"], [1439, "pores"], [1409, "pores"], [1471, "pores"], [1500, "pores"], [1341, "pores"], [1375, "pores"], [1309, "pores"], [1280, "pores"], [1242, "pores"], [1204, "pores"], [1126, "pores"], [1165, "pores"], [1048, "pores"], [1086, "pores"], [971, "pores"], [1010, "pores"], [603, "pores"], [587, "pores"], [511, "pores"], [540, "pores"], [445, "pores"], [478, "pores"], [345, "pores"], [379, "pores"], [412, "pores"], [279, "pores"], [312, "pores"], [56, "pores"]], "set_source": [[155, "set-source"], [188, "set-source"], [253, "set-source"], [419, "set-source"], [452, "set-source"], [386, "set-source"], [353, "set-source"], [319, "set-source"], [286, "set-source"], [64, "set-source"]], "clear_rate_BCs": [[166, "clear-rate-bcs"], [133, "clear-rate-bcs"], [231, "clear-rate-bcs"], [264, "clear-rate-bcs"], [463, "clear-rate-bcs"], [430, "clear-rate-bcs"], [397, "clear-rate-bcs"], [364, "clear-rate-bcs"], [297, "clear-rate-bcs"], [330, "clear-rate-bcs"], [41, "clear-rate-bcs"]], "num_pores": [[177, "num-pores"], [144, "num-pores"], [84, "num-pores"], [111, "num-pores"], [242, "num-pores"], [275, "num-pores"], [209, "num-pores"], [1614, "num-pores"], [1646, "num-pores"], [1676, "num-pores"], [1584, "num-pores"], [1524, "num-pores"], [1552, "num-pores"], [1435, "num-pores"], [1405, "num-pores"], [1467, "num-pores"], [1496, "num-pores"], [1337, "num-pores"], [1371, "num-pores"], [1276, "num-pores"], [1305, "num-pores"], [1238, "num-pores"], [1200, "num-pores"], [1161, "num-pores"], [1122, "num-pores"], [1044, "num-pores"], [1082, "num-pores"], [1006, "num-pores"], [967, "num-pores"], [601, "num-pores"], [583, "num-pores"], [507, "num-pores"], [536, "num-pores"], [474, "num-pores"], [441, "num-pores"], [375, "num-pores"], [408, "num-pores"], [341, "num-pores"], [308, "num-pores"], [52, "num-pores"]], "setdefault": [[190, "setdefault"], [157, "setdefault"], [92, "setdefault"], [124, "setdefault"], [255, "setdefault"], [222, "setdefault"], [1819, "setdefault"], [1805, "setdefault"], [1894, "setdefault"], [1793, "setdefault"], [1623, "setdefault"], [1594, "setdefault"], [1656, "setdefault"], [1685, "setdefault"], [1533, "setdefault"], [1561, "setdefault"], [1381, "setdefault"], [1415, "setdefault"], [1444, "setdefault"], [1505, "setdefault"], [1477, "setdefault"], [1314, "setdefault"], [1347, "setdefault"], [1247, "setdefault"], [1285, "setdefault"], [1209, "setdefault"], [1170, "setdefault"], [1131, "setdefault"], [1091, "setdefault"], [1053, "setdefault"], [976, "setdefault"], [1015, "setdefault"], [631, "setdefault"], [565, "setdefault"], [616, "setdefault"], [592, "setdefault"], [486, "setdefault"], [545, "setdefault"], [518, "setdefault"], [454, "setdefault"], [421, "setdefault"], [355, "setdefault"], [388, "setdefault"], [321, "setdefault"], [288, "setdefault"], [66, "setdefault"]], "to_mask": [[193, "to-mask"], [160, "to-mask"], [69, "to-mask"], [127, "to-mask"], [95, "to-mask"], [258, "to-mask"], [225, "to-mask"], [1597, "to-mask"], [1626, "to-mask"], [1659, "to-mask"], [1688, "to-mask"], [1536, "to-mask"], [1564, "to-mask"], [1384, "to-mask"], [1418, "to-mask"], [1447, "to-mask"], [1480, "to-mask"], [1508, "to-mask"], [1350, "to-mask"], [1317, "to-mask"], [1250, "to-mask"], [1288, "to-mask"], [1173, "to-mask"], [1212, "to-mask"], [1134, "to-mask"], [1094, "to-mask"], [1056, "to-mask"], [1018, "to-mask"], [979, "to-mask"], [595, "to-mask"], [567, "to-mask"], [548, "to-mask"], [489, "to-mask"], [521, "to-mask"], [424, "to-mask"], [457, "to-mask"], [358, "to-mask"], [391, "to-mask"], [291, "to-mask"], [324, "to-mask"]], "fromkeys": [[202, "fromkeys"], [170, "fromkeys"], [77, "fromkeys"], [137, "fromkeys"], [104, "fromkeys"], [268, "fromkeys"], [235, "fromkeys"], [1813, "fromkeys"], [1799, "fromkeys"], [1883, "fromkeys"], [1787, "fromkeys"], [1607, "fromkeys"], [1637, "fromkeys"], [1669, "fromkeys"], [1575, "fromkeys"], [1545, "fromkeys"], [1428, "fromkeys"], [1396, "fromkeys"], [1458, "fromkeys"], [1489, "fromkeys"], [1517, "fromkeys"], [1328, "fromkeys"], [1362, "fromkeys"], [1298, "fromkeys"], [1266, "fromkeys"], [1190, "fromkeys"], [1228, "fromkeys"], [1112, "fromkeys"], [1151, "fromkeys"], [1072, "fromkeys"], [996, "fromkeys"], [1034, "fromkeys"], [957, "fromkeys"], [625, "fromkeys"], [576, "fromkeys"], [556, "fromkeys"], [610, "fromkeys"], [529, "fromkeys"], [500, "fromkeys"], [434, "fromkeys"], [467, "fromkeys"], [401, "fromkeys"], [368, "fromkeys"], [301, "fromkeys"], [334, "fromkeys"], [45, "fromkeys"]], "get": [[171, "get"], [203, "get"], [138, "get"], [78, "get"], [105, "get"], [269, "get"], [236, "get"], [1800, "get"], [1814, "get"], [1884, "get"], [1788, "get"], [1608, "get"], [1638, "get"], [1670, "get"], [1518, "get"], [1576, "get"], [1546, "get"], [1397, "get"], [1429, "get"], [1459, "get"], [1490, "get"], [1329, "get"], [1363, "get"], [1299, "get"], [1267, "get"], [1191, "get"], [1229, "get"], [1113, "get"], [1152, "get"], [1035, "get"], [1073, "get"], [997, "get"], [958, "get"], [626, "get"], [611, "get"], [577, "get"], [557, "get"], [501, "get"], [530, "get"], [468, "get"], [435, "get"], [369, "get"], [402, "get"], [302, "get"], [335, "get"], [46, "get"]], "items": [[206, "items"], [141, "items"], [174, "items"], [108, "items"], [81, "items"], [272, "items"], [239, "items"], [1801, "items"], [1815, "items"], [1885, "items"], [1789, "items"], [1611, "items"], [1643, "items"], [1673, "items"], [1581, "items"], [1521, "items"], [1549, "items"], [1402, "items"], [1432, "items"], [1464, "items"], [1493, "items"], [1334, "items"], [1368, "items"], [1302, "items"], [1272, "items"], [1234, "items"], [1196, "items"], [1157, "items"], [1118, "items"], [1078, "items"], [1040, "items"], [1002, "items"], [963, "items"], [627, "items"], [612, "items"], [580, "items"], [560, "items"], [533, "items"], [504, "items"], [471, "items"], [438, "items"], [372, "items"], [405, "items"], [338, "items"], [305, "items"], [49, "items"]], "clear_value_BCs": [[167, "clear-value-bcs"], [134, "clear-value-bcs"], [265, "clear-value-bcs"], [232, "clear-value-bcs"], [431, "clear-value-bcs"], [464, "clear-value-bcs"], [365, "clear-value-bcs"], [398, "clear-value-bcs"], [298, "clear-value-bcs"], [331, "clear-value-bcs"], [42, "clear-value-bcs"]], "to_indices": [[159, "to-indices"], [192, "to-indices"], [94, "to-indices"], [126, "to-indices"], [224, "to-indices"], [257, "to-indices"], [1596, "to-indices"], [1625, "to-indices"], [1687, "to-indices"], [1658, "to-indices"], [1535, "to-indices"], [1563, "to-indices"], [1417, "to-indices"], [1446, "to-indices"], [1383, "to-indices"], [1479, "to-indices"], [1507, "to-indices"], [1316, "to-indices"], [1349, "to-indices"], [1249, "to-indices"], [1287, "to-indices"], [1211, "to-indices"], [1172, "to-indices"], [1133, "to-indices"], [1093, "to-indices"], [1055, "to-indices"], [978, "to-indices"], [1017, "to-indices"], [566, "to-indices"], [594, "to-indices"], [547, "to-indices"], [488, "to-indices"], [520, "to-indices"], [456, "to-indices"], [423, "to-indices"], [357, "to-indices"], [390, "to-indices"], [323, "to-indices"], [290, "to-indices"], [68, "to-indices"]], "update": [[194, "update"], [161, "update"], [96, "update"], [128, "update"], [70, "update"], [226, "update"], [259, "update"], [1808, "update"], [1794, "update"], [1820, "update"], [1877, "update"], [1895, "update"], [1598, "update"], [1627, "update"], [1689, "update"], [1660, "update"], [1565, "update"], [1537, "update"], [1448, "update"], [1419, "update"], [1385, "update"], [1481, "update"], [1509, "update"], [1318, "update"], [1351, "update"], [1251, "update"], [1289, "update"], [1213, "update"], [1174, "update"], [1135, "update"], [1095, "update"], [1057, "update"], [980, "update"], [1019, "update"], [632, "update"], [568, "update"], [596, "update"], [617, "update"], [549, "update"], [522, "update"], [490, "update"], [425, "update"], [458, "update"], [392, "update"], [359, "update"], [292, "update"], [325, "update"]], "set_rate_BC": [[154, "set-rate-bc"], [187, "set-rate-bc"], [252, "set-rate-bc"], [484, "set-rate-bc"], [418, "set-rate-bc"], [451, "set-rate-bc"], [352, "set-rate-bc"], [385, "set-rate-bc"], [285, "set-rate-bc"], [318, "set-rate-bc"], [63, "set-rate-bc"]], "run": [[151, "run"], [184, "run"], [119, "run"], [217, "run"], [249, "run"], [542, "run"], [415, "run"], [481, "run"], [448, "run"], [382, "run"], [348, "run"], [315, "run"], [282, "run"], [59, "run"]], "interpolate_data": [[173, "interpolate-data"], [205, "interpolate-data"], [140, "interpolate-data"], [80, "interpolate-data"], [107, "interpolate-data"], [238, "interpolate-data"], [271, "interpolate-data"], [1642, "interpolate-data"], [1610, "interpolate-data"], [1672, "interpolate-data"], [1520, "interpolate-data"], [1580, "interpolate-data"], [1548, "interpolate-data"], [1431, "interpolate-data"], [1401, "interpolate-data"], [1463, "interpolate-data"], [1492, "interpolate-data"], [1333, "interpolate-data"], [1367, "interpolate-data"], [1301, "interpolate-data"], [1271, "interpolate-data"], [1233, "interpolate-data"], [1195, "interpolate-data"], [1156, "interpolate-data"], [1117, "interpolate-data"], [1039, "interpolate-data"], [1077, "interpolate-data"], [1001, "interpolate-data"], [962, "interpolate-data"], [559, "interpolate-data"], [579, "interpolate-data"], [532, "interpolate-data"], [503, "interpolate-data"], [470, "interpolate-data"], [437, "interpolate-data"], [371, "interpolate-data"], [404, "interpolate-data"], [337, "interpolate-data"], [304, "interpolate-data"], [48, "interpolate-data"]], "throats": [[191, "throats"], [158, "throats"], [125, "throats"], [93, "throats"], [223, "throats"], [256, "throats"], [1595, "throats"], [1624, "throats"], [1657, "throats"], [1686, "throats"], [1534, "throats"], [1562, "throats"], [1416, "throats"], [1382, "throats"], [1445, "throats"], [1478, "throats"], [1506, "throats"], [1348, "throats"], [1315, "throats"], [1248, "throats"], [1286, "throats"], [1210, "throats"], [1132, "throats"], [1171, "throats"], [1054, "throats"], [1092, "throats"], [977, "throats"], [1016, "throats"], [605, "throats"], [593, "throats"], [487, "throats"], [546, "throats"], [519, "throats"], [422, "throats"], [455, "throats"], [389, "throats"], [356, "throats"], [322, "throats"], [289, "throats"], [67, "throats"]], "get_conduit_data": [[139, "get-conduit-data"], [204, "get-conduit-data"], [172, "get-conduit-data"], [106, "get-conduit-data"], [79, "get-conduit-data"], [270, "get-conduit-data"], [237, "get-conduit-data"], [1609, "get-conduit-data"], [1640, "get-conduit-data"], [1671, "get-conduit-data"], [1519, "get-conduit-data"], [1547, "get-conduit-data"], [1578, "get-conduit-data"], [1399, "get-conduit-data"], [1430, "get-conduit-data"], [1461, "get-conduit-data"], [1491, "get-conduit-data"], [1331, "get-conduit-data"], [1365, "get-conduit-data"], [1300, "get-conduit-data"], [1269, "get-conduit-data"], [1193, "get-conduit-data"], [1231, "get-conduit-data"], [1154, "get-conduit-data"], [1115, "get-conduit-data"], [1075, "get-conduit-data"], [1037, "get-conduit-data"], [999, "get-conduit-data"], [960, "get-conduit-data"], [558, "get-conduit-data"], [578, "get-conduit-data"], [531, "get-conduit-data"], [502, "get-conduit-data"], [436, "get-conduit-data"], [469, "get-conduit-data"], [403, "get-conduit-data"], [370, "get-conduit-data"], [336, "get-conduit-data"], [303, "get-conduit-data"], [47, "get-conduit-data"]], "props": [[149, "props"], [182, "props"], [117, "props"], [89, "props"], [247, "props"], [215, "props"], [1619, "props"], [1589, "props"], [1651, "props"], [1681, "props"], [1529, "props"], [1557, "props"], [1440, "props"], [1410, "props"], [1501, "props"], [1472, "props"], [1342, "props"], [1376, "props"], [1243, "props"], [1310, "props"], [1281, "props"], [1205, "props"], [1127, "props"], [1166, "props"], [1049, "props"], [1087, "props"], [972, "props"], [1011, "props"], [588, "props"], [564, "props"], [512, "props"], [541, "props"], [479, "props"], [446, "props"], [380, "props"], [346, "props"], [413, "props"], [313, "props"], [280, "props"], [57, "props"]], "filter_by_label": [[201, "filter-by-label"], [169, "filter-by-label"], [103, "filter-by-label"], [76, "filter-by-label"], [136, "filter-by-label"], [267, "filter-by-label"], [234, "filter-by-label"], [1606, "filter-by-label"], [1636, "filter-by-label"], [1668, "filter-by-label"], [1544, "filter-by-label"], [1574, "filter-by-label"], [1395, "filter-by-label"], [1427, "filter-by-label"], [1488, "filter-by-label"], [1457, "filter-by-label"], [1516, "filter-by-label"], [1327, "filter-by-label"], [1361, "filter-by-label"], [1297, "filter-by-label"], [1260, "filter-by-label"], [1184, "filter-by-label"], [1222, "filter-by-label"], [1145, "filter-by-label"], [1104, "filter-by-label"], [1066, "filter-by-label"], [990, "filter-by-label"], [1028, "filter-by-label"], [951, "filter-by-label"], [599, "filter-by-label"], [575, "filter-by-label"], [499, "filter-by-label"], [528, "filter-by-label"], [466, "filter-by-label"], [433, "filter-by-label"], [367, "filter-by-label"], [400, "filter-by-label"], [333, "filter-by-label"], [300, "filter-by-label"], [44, "filter-by-label"]], "popitem": [[180, "popitem"], [147, "popitem"], [87, "popitem"], [115, "popitem"], [245, "popitem"], [213, "popitem"], [1818, "popitem"], [1804, "popitem"], [1891, "popitem"], [1792, "popitem"], [1617, "popitem"], [1649, "popitem"], [1587, "popitem"], [1679, "popitem"], [1555, "popitem"], [1527, "popitem"], [1438, "popitem"], [1408, "popitem"], [1470, "popitem"], [1499, "popitem"], [1340, "popitem"], [1374, "popitem"], [1279, "popitem"], [1308, "popitem"], [1241, "popitem"], [1203, "popitem"], [1125, "popitem"], [1164, "popitem"], [1047, "popitem"], [1085, "popitem"], [1009, "popitem"], [970, "popitem"], [630, "popitem"], [615, "popitem"], [586, "popitem"], [563, "popitem"], [510, "popitem"], [539, "popitem"], [477, "popitem"], [444, "popitem"], [378, "popitem"], [411, "popitem"], [344, "popitem"], [278, "popitem"], [311, "popitem"], [55, "popitem"]], "set_value_BC": [[156, "set-value-bc"], [189, "set-value-bc"], [254, "set-value-bc"], [485, "set-value-bc"], [420, "set-value-bc"], [453, "set-value-bc"], [387, "set-value-bc"], [354, "set-value-bc"], [320, "set-value-bc"], [287, "set-value-bc"], [65, "set-value-bc"]], "pop": [[146, "pop"], [179, "pop"], [86, "pop"], [114, "pop"], [212, "pop"], [244, "pop"], [1842, "pop"], [1803, "pop"], [1855, "pop"], [1817, "pop"], [1830, "pop"], [1872, "pop"], [1890, "pop"], [1791, "pop"], [1616, "pop"], [1648, "pop"], [1678, "pop"], [1586, "pop"], [1554, "pop"], [1526, "pop"], [1407, "pop"], [1437, "pop"], [1469, "pop"], [1498, "pop"], [1373, "pop"], [1339, "pop"], [1278, "pop"], [1307, "pop"], [1240, "pop"], [1202, "pop"], [1163, "pop"], [1124, "pop"], [1046, "pop"], [1084, "pop"], [969, "pop"], [1008, "pop"], [629, "pop"], [585, "pop"], [614, "pop"], [562, "pop"], [538, "pop"], [509, "pop"], [476, "pop"], [443, "pop"], [377, "pop"], [410, "pop"], [343, "pop"], [310, "pop"], [277, "pop"], [54, "pop"]], "apply_trapping": [[197, "apply-trapping"], [99, "apply-trapping"]], "rate": [[183, "rate"], [150, "rate"], [248, "rate"], [447, "rate"], [414, "rate"], [480, "rate"], [347, "rate"], [381, "rate"], [281, "rate"], [314, "rate"], [58, "rate"]], "copy": [[168, "copy"], [200, "copy"], [102, "copy"], [135, "copy"], [75, "copy"], [266, "copy"], [233, "copy"], [1837, "copy"], [1812, "copy"], [1798, "copy"], [1850, "copy"], [1825, "copy"], [1881, "copy"], [1863, "copy"], [1786, "copy"], [1605, "copy"], [1635, "copy"], [1667, "copy"], [1543, "copy"], [1573, "copy"], [1394, "copy"], [1426, "copy"], [1515, "copy"], [1456, "copy"], [1487, "copy"], [1326, "copy"], [1360, "copy"], [1257, "copy"], [1296, "copy"], [1219, "copy"], [1181, "copy"], [1142, "copy"], [1101, "copy"], [1063, "copy"], [987, "copy"], [1025, "copy"], [948, "copy"], [621, "copy"], [555, "copy"], [609, "copy"], [574, "copy"], [498, "copy"], [527, "copy"], [432, "copy"], [465, "copy"], [366, "copy"], [399, "copy"], [332, "copy"], [299, "copy"], [43, "copy"]], "set_BC": [[152, "set-bc"], [185, "set-bc"], [90, "set-bc"], [120, "set-bc"], [250, "set-bc"], [218, "set-bc"], [543, "set-bc"], [482, "set-bc"], [416, "set-bc"], [449, "set-bc"], [349, "set-bc"], [383, "set-bc"], [283, "set-bc"], [316, "set-bc"], [60, "set-bc"]], "keys": [[175, "keys"], [142, "keys"], [109, "keys"], [82, "keys"], [273, "keys"], [240, "keys"], [207, "keys"], [1802, "keys"], [1816, "keys"], [1886, "keys"], [1790, "keys"], [1612, "keys"], [1644, "keys"], [1674, "keys"], [1550, "keys"], [1522, "keys"], [1582, "keys"], [1403, "keys"], [1433, "keys"], [1494, "keys"], [1465, "keys"], [1369, "keys"], [1335, "keys"], [1303, "keys"], [1273, "keys"], [1235, "keys"], [1197, "keys"], [1158, "keys"], [1119, "keys"], [1079, "keys"], [1041, "keys"], [1003, "keys"], [964, "keys"], [628, "keys"], [561, "keys"], [613, "keys"], [581, "keys"], [534, "keys"], [505, "keys"], [472, "keys"], [439, "keys"], [373, "keys"], [406, "keys"], [306, "keys"], [339, "keys"], [50, "keys"]], "labels": [[143, "labels"], [176, "labels"], [83, "labels"], [110, "labels"], [274, "labels"], [241, "labels"], [208, "labels"], [1613, "labels"], [1645, "labels"], [1675, "labels"], [1583, "labels"], [1551, "labels"], [1523, "labels"], [1404, "labels"], [1434, "labels"], [1495, "labels"], [1466, "labels"], [1336, "labels"], [1370, "labels"], [1274, "labels"], [1304, "labels"], [1198, "labels"], [1236, "labels"], [1120, "labels"], [1159, "labels"], [1042, "labels"], [1080, "labels"], [1004, "labels"], [965, "labels"], [600, "labels"], [582, "labels"], [506, "labels"], [535, "labels"], [440, "labels"], [473, "labels"], [374, "labels"], [407, "labels"], [307, "labels"], [340, "labels"], [51, "labels"]], "clear_BCs": [[165, "clear-bcs"], [199, "clear-bcs"], [74, "clear-bcs"], [101, "clear-bcs"], [132, "clear-bcs"], [230, "clear-bcs"], [263, "clear-bcs"], [526, "clear-bcs"], [429, "clear-bcs"], [462, "clear-bcs"], [363, "clear-bcs"], [396, "clear-bcs"], [296, "clear-bcs"], [329, "clear-bcs"], [40, "clear-bcs"]], "values": [[162, "values"], [195, "values"], [71, "values"], [97, "values"], [129, "values"], [227, "values"], [260, "values"], [1821, "values"], [1795, "values"], [1809, "values"], [1896, "values"], [1628, "values"], [1599, "values"], [1661, "values"], [1690, "values"], [1538, "values"], [1566, "values"], [1420, "values"], [1386, "values"], [1510, "values"], [1449, "values"], [1482, "values"], [1352, "values"], [1319, "values"], [1290, "values"], [1252, "values"], [1214, "values"], [1175, "values"], [1136, "values"], [1058, "values"], [1096, "values"], [981, "values"], [1020, "values"], [633, "values"], [597, "values"], [618, "values"], [569, "values"], [491, "values"], [523, "values"], [550, "values"], [426, "values"], [459, "values"], [393, "values"], [360, "values"], [326, "values"], [293, "values"]], "FourierConduction": [[163, "fourierconduction"]], "InvasionPercolation": [[196, "invasionpercolation"]], "Drainage": [[98, "drainage"], [33, "drainage"]], "pc_curve": [[113, "pc-curve"], [211, "pc-curve"]], "reset": [[118, "reset"], [216, "reset"]], "set_inlet_BC": [[121, "set-inlet-bc"], [219, "set-inlet-bc"]], "set_outlet_BC": [[123, "set-outlet-bc"], [221, "set-outlet-bc"]], "Algorithm": [[72, "algorithm"]], "FickianDiffusion": [[130, "fickiandiffusion"]], "OhmicConduction": [[228, "ohmicconduction"]], "ReactiveTransport": [[261, "reactivetransport"]], "sort": [[1845, "sort"], [1833, "sort"], [1858, "sort"]], "extend": [[1852, "extend"], [1839, "extend"], [1827, "extend"], [1717, "extend"]], "insert": [[1829, "insert"], [1841, "insert"], [1854, "insert"]], "remove": [[1831, "remove"], [1843, "remove"], [1856, "remove"], [1873, "remove"]], "index": [[1828, "index"], [1840, "index"], [1853, "index"]], "append": [[1835, "append"], [1823, "append"], [1848, "append"]], "count": [[1838, "count"], [1826, "count"], [1851, "count"]], "reverse": [[1832, "reverse"], [1844, "reverse"], [1857, "reverse"]], "to_dict": [[1806, "to-dict"]], "TypedMixin": [[1859, "typedmixin"]], "PrintableDict": [[1810, "printabledict"]], "Project": [[1834, "project"]], "TypedList": [[1847, "typedlist"]], "PrintableList": [[1822, "printablelist"]], "TypedSet": [[1860, "typedset"]], "add": [[1861, "add"]], "SettingsAttr": [[1846, "settingsattr"]], "unravel": [[1807, "unravel"]], "NestedDict": [[1796, "nesteddict"]], "save_workspace": [[1893, "save-workspace"]], "load_project": [[1887, "load-project"]], "isdisjoint": [[1869, "isdisjoint"]], "Module Reference": [[1922, "module-openpnm"]], "symmetric_difference_update": [[1875, "symmetric-difference-update"]], "plot_connections": [[1915, "plot-connections"]], "get_printable_props": [[1903, "get-printable-props"]], "sanitize_dict": [[1910, "sanitize-dict"]], "discard": [[1866, "discard"]], "visualization": [[1912, "module-openpnm.visualization"]], "get_mixture_model_args": [[1901, "get-mixture-model-args"]], "draw_conduit": [[1913, "draw-conduit"]], "save_project": [[1892, "save-project"]], "plot_tutorial": [[1919, "plot-tutorial"]], "load_workspace": [[1888, "load-workspace"]], "is_transient": [[1906, "is-transient"]], "models_to_table": [[1909, "models-to-table"]], "struct_to_dict": [[1911, "struct-to-dict"]], "difference": [[1864, "difference"], [818, "difference"]], "difference_update": [[1865, "difference-update"]], "close_project": [[1880, "close-project"]], "union": [[1876, "union"]], "issubset": [[1870, "issubset"]], "check_data_health": [[1897, "check-data-health"]], "copy_project": [[1882, "copy-project"]], "dict_to_struct": [[1899, "dict-to-struct"]], "flat_list": [[1900, "flat-list"]], "symmetric_difference": [[1874, "symmetric-difference"]], "intersection": [[1867, "intersection"]], "new_project": [[1889, "new-project"]], "issuperset": [[1871, "issuperset"]], "set_mpl_style": [[1921, "set-mpl-style"]], "plot_networkx": [[1917, "plot-networkx"]], "Workspace": [[1878, "workspace"]], "check_network_health": [[1898, "check-network-health"]], "methods_to_table": [[1908, "methods-to-table"]], "intersection_update": [[1868, "intersection-update"]], "plot_vispy": [[1920, "plot-vispy"]], "is_symmetric": [[1905, "is-symmetric"]], "plot_notebook": [[1918, "plot-notebook"]], "get_printable_labels": [[1902, "get-printable-labels"]], "generate_voxel_image": [[1914, "generate-voxel-image"]], "plot_coordinates": [[1916, "plot-coordinates"]], "is_valid_propname": [[1907, "is-valid-propname"]], "ignore_warnings": [[1904, "ignore-warnings"]], "reduce_coordination": [[1745, "reduce-coordination"]], "site_percolation": [[1749, "site-percolation"]], "delete_types_s": [[1767, "delete-types-s"]], "template_cylinder_annulus": [[1751, "template-cylinder-annulus"]], "Docorator": [[1758, "docorator"]], "save_docstring": [[1781, "save-docstring"]], "get_shape": [[1731, "get-shape"]], "hull_centroid": [[1733, "hull-centroid"]], "rotate_coords": [[1747, "rotate-coords"]], "find_path": [[1726, "find-path"]], "get_extended_summary": [[1769, "get-extended-summary"]], "issymmetric": [[1738, "issymmetric"]], "get_domain_area": [[1729, "get-domain-area"]], "get_spacing": [[1732, "get-spacing"]], "get_sectionsf": [[1774, "get-sectionsf"]], "delete_params": [[1764, "delete-params"]], "dedent": [[1760, "dedent"]], "get_domain_length": [[1730, "get-domain-length"]], "get_full_description": [[1771, "get-full-description"]], "__call__": [[1759, "call"], [607, "call"]], "HealthDict": [[1784, "healthdict"]], "keep_types_s": [[1780, "keep-types-s"]], "get_docstring": [[1768, "get-docstring"]], "delete_types": [[1766, "delete-types"]], "get_summaryf": [[1776, "get-summaryf"]], "shear_coords": [[1748, "shear-coords"]], "with_indents": [[1783, "with-indents"]], "dedents": [[1761, "dedents"]], "generate_base_points": [[1728, "generate-base-points"]], "keep_params_s": [[1778, "keep-params-s"]], "trim_disconnected_clusters": [[1755, "trim-disconnected-clusters"]], "get_full_descriptionf": [[1772, "get-full-descriptionf"]], "delete_params_s": [[1765, "delete-params-s"]], "find_surface_pores": [[1727, "find-surface-pores"]], "vor_to_am": [[1756, "vor-to-am"]], "get_extended_summaryf": [[1770, "get-extended-summaryf"]], "merge_pores": [[1744, "merge-pores"]], "template_sphere_shell": [[1752, "template-sphere-shell"]], "label_faces": [[1742, "label-faces"]], "utils": [[1757, "module-openpnm.utils"]], "Utilities and helper classes/functions": [[1757, "utilities-and-helper-classes-functions"]], "reflect_base_points": [[1746, "reflect-base-points"]], "delete_kwargs_s": [[1763, "delete-kwargs-s"]], "keep_types": [[1779, "keep-types"]], "keep_params": [[1777, "keep-params"]], "ispercolating": [[1737, "ispercolating"]], "istriu": [[1741, "istriu"]], "isoutside": [[1736, "isoutside"]], "tri_to_am": [[1753, "tri-to-am"]], "get_summary": [[1775, "get-summary"]], "is_fully_connected": [[1734, "is-fully-connected"]], "stitch": [[1750, "stitch"]], "istril": [[1740, "istril"]], "get_sections": [[1773, "get-sections"]], "with_indent": [[1782, "with-indent"]], "delete_kwargs": [[1762, "delete-kwargs"]], "trim": [[1754, "trim"]], "find_neighbor_sites": [[1725, "find-neighbor-sites"]], "iscoplanar": [[1735, "iscoplanar"]], "istriangular": [[1739, "istriangular"]], "merge_networks": [[1743, "merge-networks"]], "remove_comp": [[1591, "remove-comp"], [1653, "remove-comp"], [1412, "remove-comp"], [1474, "remove-comp"], [1378, "remove-comp"], [1344, "remove-comp"]], "add_model": [[1602, "add-model"], [1631, "add-model"], [1664, "add-model"], [1569, "add-model"], [1540, "add-model"], [1423, "add-model"], [1390, "add-model"], [1484, "add-model"], [1452, "add-model"], [1512, "add-model"], [1356, "add-model"], [1322, "add-model"], [1293, "add-model"], [1254, "add-model"], [1216, "add-model"], [1178, "add-model"], [1139, "add-model"], [1060, "add-model"], [1098, "add-model"], [1022, "add-model"], [984, "add-model"], [945, "add-model"], [635, "add-model"], [571, "add-model"], [494, "add-model"]], "add_model_collection": [[1632, "add-model-collection"], [1603, "add-model-collection"], [1665, "add-model-collection"], [1570, "add-model-collection"], [1541, "add-model-collection"], [1391, "add-model-collection"], [1424, "add-model-collection"], [1513, "add-model-collection"], [1453, "add-model-collection"], [1485, "add-model-collection"], [1323, "add-model-collection"], [1357, "add-model-collection"], [1294, "add-model-collection"], [1255, "add-model-collection"], [1179, "add-model-collection"], [1217, "add-model-collection"], [1140, "add-model-collection"], [1061, "add-model-collection"], [1099, "add-model-collection"], [1023, "add-model-collection"], [985, "add-model-collection"], [946, "add-model-collection"], [636, "add-model-collection"], [572, "add-model-collection"], [495, "add-model-collection"]], "y": [[1600, "y"], [1387, "y"], [1353, "y"]], "StandardLiquid": [[1601, "standardliquid"]], "run_model": [[1621, "run-model"], [1592, "run-model"], [1654, "run-model"], [1683, "run-model"], [1559, "run-model"], [1531, "run-model"], [1413, "run-model"], [1442, "run-model"], [1475, "run-model"], [1503, "run-model"], [1379, "run-model"], [1345, "run-model"], [1312, "run-model"], [1283, "run-model"], [1245, "run-model"], [1207, "run-model"], [1129, "run-model"], [1168, "run-model"], [1051, "run-model"], [1089, "run-model"], [974, "run-model"], [1013, "run-model"], [638, "run-model"], [590, "run-model"], [514, "run-model"]], "regenerate_models": [[1652, "regenerate-models"], [1590, "regenerate-models"], [1620, "regenerate-models"], [1682, "regenerate-models"], [1558, "regenerate-models"], [1530, "regenerate-models"], [1411, "regenerate-models"], [1441, "regenerate-models"], [1502, "regenerate-models"], [1473, "regenerate-models"], [1377, "regenerate-models"], [1311, "regenerate-models"], [1343, "regenerate-models"], [1282, "regenerate-models"], [1244, "regenerate-models"], [1206, "regenerate-models"], [1167, "regenerate-models"], [1128, "regenerate-models"], [1050, "regenerate-models"], [1088, "regenerate-models"], [973, "regenerate-models"], [1012, "regenerate-models"], [637, "regenerate-models"], [589, "regenerate-models"], [513, "regenerate-models"]], "add_comp": [[1630, "add-comp"], [1568, "add-comp"], [1389, "add-comp"], [1451, "add-comp"], [1355, "add-comp"], [1321, "add-comp"]], "get_mix_vals": [[1641, "get-mix-vals"], [1579, "get-mix-vals"], [1400, "get-mix-vals"], [1462, "get-mix-vals"], [1332, "get-mix-vals"], [1366, "get-mix-vals"]], "StandardLiquidMixture": [[1629, "standardliquidmixture"]], "check_mixture_health": [[1633, "check-mixture-health"], [1571, "check-mixture-health"], [1392, "check-mixture-health"], [1454, "check-mixture-health"], [1324, "check-mixture-health"], [1358, "check-mixture-health"]], "get_comp_vals": [[1639, "get-comp-vals"], [1577, "get-comp-vals"], [1398, "get-comp-vals"], [1460, "get-comp-vals"], [1364, "get-comp-vals"], [1330, "get-comp-vals"]], "PyamgRugeStubenSolver": [[1702, "pyamgrugestubensolver"]], "drop_sites": [[1716, "drop-sites"]], "PETScLinearSolver": [[1698, "petsclinearsolver"]], "PardisoSpsolve": [[1700, "pardisospsolve"]], "BaseSolver": [[1692, "basesolver"]], "solve": [[1701, "solve"], [1695, "solve"], [1699, "solve"], [1707, "solve"], [1697, "solve"], [1693, "solve"], [1705, "solve"], [1703, "solve"], [643, "solve"]], "topotools": [[1708, "module-openpnm.topotools"]], "Collection of functions for manipulating network topology": [[1708, "collection-of-functions-for-manipulating-network-topology"]], "filter_pores_by_z": [[1718, "filter-pores-by-z"]], "find_connecting_bonds": [[1721, "find-connecting-bonds"]], "clone_pores": [[1712, "clone-pores"]], "x": [[1662, "x"], [1421, "x"]], "solvers": [[1691, "module-openpnm.solvers"]], "Collection of matrix solvers for steady state simulations": [[1691, "collection-of-matrix-solvers-for-steady-state-simulations"]], "add_boundary_pores": [[1709, "add-boundary-pores"], [1177, "add-boundary-pores"], [1138, "add-boundary-pores"], [983, "add-boundary-pores"], [944, "add-boundary-pores"]], "conns_to_am": [[1714, "conns-to-am"]], "ScipySpsolve": [[1706, "scipyspsolve"]], "find_clusters": [[1719, "find-clusters"]], "find_isolated_clusters": [[1723, "find-isolated-clusters"]], "bond_percolation": [[1711, "bond-percolation"]], "dimensionality": [[1715, "dimensionality"]], "connect_pores": [[1713, "connect-pores"]], "Water": [[1663, "water"]], "add_reservoir_pore": [[1710, "add-reservoir-pore"]], "find_neighbor_bonds": [[1724, "find-neighbor-bonds"]], "find_interface_throats": [[1722, "find-interface-throats"]], "IterativeSolver": [[1696, "iterativesolver"]], "find_connected_sites": [[1720, "find-connected-sites"]], "DirectSolver": [[1694, "directsolver"]], "ScipyCG": [[1704, "scipycg"]], "StandardGas": [[1539, "standardgas"]], "StandardGasMixture": [[1567, "standardgasmixture"]], "LiquidMixture": [[1388, "liquidmixture"]], "Mercury": [[1422, "mercury"]], "Phase": [[1483, "phase"], [852, "id1"], [7, "phase"], [9, "phase"]], "Species": [[1511, "species"]], "Mixture": [[1450, "mixture"]], "GasMixture": [[1354, "gasmixture"]], "BinaryGas": [[1320, "binarygas"]], "find_neighbor_pores": [[1264, "find-neighbor-pores"], [1226, "find-neighbor-pores"], [1188, "find-neighbor-pores"], [1108, "find-neighbor-pores"], [1149, "find-neighbor-pores"], [1070, "find-neighbor-pores"], [994, "find-neighbor-pores"], [1032, "find-neighbor-pores"], [955, "find-neighbor-pores"]], "Air": [[1292, "air"]], "get_incidence_matrix": [[1270, "get-incidence-matrix"], [1232, "get-incidence-matrix"], [1194, "get-incidence-matrix"], [1155, "get-incidence-matrix"], [1116, "get-incidence-matrix"], [1076, "get-incidence-matrix"], [1038, "get-incidence-matrix"], [1000, "get-incidence-matrix"], [961, "get-incidence-matrix"]], "create_adjacency_matrix": [[1258, "create-adjacency-matrix"], [1220, "create-adjacency-matrix"], [1182, "create-adjacency-matrix"], [1143, "create-adjacency-matrix"], [1064, "create-adjacency-matrix"], [1102, "create-adjacency-matrix"], [988, "create-adjacency-matrix"], [1026, "create-adjacency-matrix"], [949, "create-adjacency-matrix"]], "phase": [[1291, "module-openpnm.phase"], [852, "module-openpnm.models.phase"], [679, "module-openpnm.models.collections.phase"]], "find_nearby_pores": [[1263, "find-nearby-pores"], [1225, "find-nearby-pores"], [1187, "find-nearby-pores"], [1148, "find-nearby-pores"], [1107, "find-nearby-pores"], [1069, "find-nearby-pores"], [993, "find-nearby-pores"], [1031, "find-nearby-pores"], [954, "find-nearby-pores"]], "find_connecting_throat": [[1262, "find-connecting-throat"], [1186, "find-connecting-throat"], [1224, "find-connecting-throat"], [1106, "find-connecting-throat"], [1147, "find-connecting-throat"], [1068, "find-connecting-throat"], [1030, "find-connecting-throat"], [992, "find-connecting-throat"], [953, "find-connecting-throat"]], "Voronoi": [[1253, "voronoi"]], "num_neighbors": [[1275, "num-neighbors"], [1199, "num-neighbors"], [1237, "num-neighbors"], [1160, "num-neighbors"], [1121, "num-neighbors"], [1043, "num-neighbors"], [1081, "num-neighbors"], [966, "num-neighbors"], [1005, "num-neighbors"]], "create_incidence_matrix": [[1259, "create-incidence-matrix"], [1183, "create-incidence-matrix"], [1221, "create-incidence-matrix"], [1144, "create-incidence-matrix"], [1103, "create-incidence-matrix"], [1065, "create-incidence-matrix"], [1027, "create-incidence-matrix"], [989, "create-incidence-matrix"], [950, "create-incidence-matrix"]], "get_adjacency_matrix": [[1268, "get-adjacency-matrix"], [1230, "get-adjacency-matrix"], [1192, "get-adjacency-matrix"], [1153, "get-adjacency-matrix"], [1114, "get-adjacency-matrix"], [1074, "get-adjacency-matrix"], [1036, "get-adjacency-matrix"], [998, "get-adjacency-matrix"], [959, "get-adjacency-matrix"]], "find_connected_pores": [[1261, "find-connected-pores"], [1223, "find-connected-pores"], [1185, "find-connected-pores"], [1105, "find-connected-pores"], [1146, "find-connected-pores"], [1067, "find-connected-pores"], [1029, "find-connected-pores"], [991, "find-connected-pores"], [952, "find-connected-pores"]], "find_neighbor_throats": [[1265, "find-neighbor-throats"], [1227, "find-neighbor-throats"], [1189, "find-neighbor-throats"], [1150, "find-neighbor-throats"], [1109, "find-neighbor-throats"], [1071, "find-neighbor-throats"], [995, "find-neighbor-throats"], [1033, "find-neighbor-throats"], [956, "find-neighbor-throats"]], "Network": [[1215, "network"], [835, "id1"], [7, "network"], [5, "network"], [9, "network"]], "FaceCenteredCubic": [[1176, "facecenteredcubic"]], "Demo": [[1137, "demo"]], "find_throat_facets": [[1111, "find-throat-facets"]], "find_pore_hulls": [[1110, "find-pore-hulls"]], "Delaunay": [[1059, "delaunay"]], "DelaunayVoronoiDual": [[1097, "delaunayvoronoidual"]], "CubicTemplate": [[1021, "cubictemplate"]], "Cubic": [[982, "cubic"], [26, "cubic"]], "standard_kinetics": [[938, "standard-kinetics"]], "hagen_poiseuille": [[919, "hagen-poiseuille"]], "exponential": [[931, "exponential"]], "capillary_pressure": [[906, "module-openpnm.models.physics.capillary_pressure"]], "general_toroidal": [[922, "general-toroidal"]], "diffusive_conductance": [[909, "module-openpnm.models.physics.diffusive_conductance"]], "mixed_diffusion": [[911, "mixed-diffusion"]], "liquid_pure_ls": [[901, "liquid-pure-ls"]], "sinusoidal": [[924, "sinusoidal"]], "purcell": [[923, "purcell"], [907, "purcell"]], "hydraulic_conductance": [[917, "module-openpnm.models.physics.hydraulic_conductance"]], "network": [[942, "module-openpnm.network"], [835, "module-openpnm.models.network"], [678, "module-openpnm.models.collections.network"]], "general_symbolic": [[932, "general-symbolic"]], "meniscus": [[921, "module-openpnm.models.physics.meniscus"]], "natural_logarithm": [[936, "natural-logarithm"]], "butler_volmer_voltage": [[930, "butler-volmer-voltage"]], "thermal_conductance": [[939, "module-openpnm.models.physics.thermal_conductance"]], "water_correlation": [[902, "water-correlation"], [891, "water-correlation"], [860, "water-correlation"], [884, "water-correlation"], [895, "water-correlation"]], "electrical_conductance": [[914, "module-openpnm.models.physics.electrical_conductance"]], "power_law": [[937, "power-law"]], "late_filling": [[927, "late-filling"]], "linear": [[933, "linear"], [825, "linear"]], "taylor_aris_diffusion": [[913, "taylor-aris-diffusion"]], "washburn": [[908, "washburn"]], "BodyCenteredCubic": [[943, "bodycenteredcubic"]], "butler_volmer_conc": [[929, "butler-volmer-conc"]], "natural_exponential": [[935, "natural-exponential"]], "physics": [[903, "module-openpnm.models.physics"], [685, "module-openpnm.models.collections.physics"]], "Physics": [[903, "id1"], [7, "physics"]], "series_resistors": [[941, "series-resistors"], [916, "series-resistors"]], "ad_dif": [[905, "ad-dif"]], "gas_pure_gesmr": [[898, "gas-pure-gesmr"]], "ad_dif_conductance": [[904, "module-openpnm.models.physics.ad_dif_conductance"]], "ordinary_diffusion": [[912, "ordinary-diffusion"]], "generic_diffusive": [[910, "generic-diffusive"]], "liquid_mixture_xweighted": [[900, "liquid-mixture-xweighted"], [868, "liquid-mixture-xweighted"]], "gas_mixture_hz": [[897, "gas-mixture-hz"]], "gas_pure_st": [[899, "gas-pure-st"]], "valvatne_blunt": [[920, "valvatne-blunt"]], "multiphase": [[925, "module-openpnm.models.physics.multiphase"]], "generic_electrical": [[915, "generic-electrical"]], "logarithm": [[934, "logarithm"]], "source_terms": [[928, "module-openpnm.models.physics.source_terms"]], "generic_thermal": [[940, "generic-thermal"]], "generic_hydraulic": [[918, "generic-hydraulic"]], "conduit_conductance": [[926, "conduit-conductance"]], "distance_to_nearest_pore": [[843, "distance-to-nearest-pore"]], "liquid_pure_sr": [[890, "liquid-pure-sr"]], "mole_to_mass_fraction": [[872, "mole-to-mass-fraction"], [877, "mole-to-mass-fraction"]], "normalize": [[828, "normalize"]], "distance_to_nearest_neighbor": [[842, "distance-to-nearest-neighbor"]], "find_coincident_pores": [[845, "find-coincident-pores"]], "looped_throats": [[849, "looped-throats"]], "heat_capacity": [[865, "module-openpnm.models.phase.heat_capacity"]], "gas_pure_TRC": [[867, "gas-pure-trc"]], "salinity": [[878, "salinity"]], "chemicals_wrapper": [[853, "chemicals-wrapper"]], "from_component": [[874, "from-component"]], "liquid_pure_bb": [[883, "liquid-pure-bb"]], "product": [[830, "product"]], "scaled": [[832, "scaled"]], "diffusivity": [[861, "module-openpnm.models.phase.diffusivity"]], "mixtures": [[873, "module-openpnm.models.phase.mixtures"]], "viscosity": [[896, "module-openpnm.models.phase.viscosity"]], "distance_to_furthest_neighbor": [[841, "distance-to-furthest-neighbor"]], "gabriel_edges": [[846, "gabriel-edges"]], "random": [[831, "random"], [792, "random"], [798, "random"], [748, "random"], [740, "random"]], "liquid_mixture_COSTALD": [[857, "liquid-mixture-costald"]], "liquid_mixture_tc": [[864, "liquid-mixture-tc"]], "surface_tension": [[881, "module-openpnm.models.phase.surface_tension"]], "liquid_mixture_wsd": [[882, "liquid-mixture-wsd"]], "gas_mixture_ce": [[862, "gas-mixture-ce"]], "gas_mixture_fesg": [[863, "gas-mixture-fesg"]], "partition_coefficient": [[879, "module-openpnm.models.phase.partition_coefficient"]], "liquid_mixture_DIPPR9H": [[888, "liquid-mixture-dippr9h"]], "count_coincident_pores": [[840, "count-coincident-pores"]], "coordination_number": [[839, "coordination-number"]], "polynomial": [[829, "polynomial"]], "mass_to_molar": [[859, "mass-to-molar"]], "gas_mixture_whz": [[886, "gas-mixture-whz"]], "pore_to_pore_distance": [[850, "pore-to-pore-distance"]], "liquid_pure_gismr": [[889, "liquid-pure-gismr"]], "weibull": [[834, "weibull"], [799, "weibull"], [749, "weibull"]], "misc": [[870, "module-openpnm.models.phase.misc"], [814, "module-openpnm.models.misc"]], "thermal_conductivity": [[885, "module-openpnm.models.phase.thermal_conductivity"]], "mole_summation": [[876, "mole-summation"]], "summation": [[833, "summation"]], "mix_and_match": [[871, "mix-and-match"]], "isolated_pores": [[848, "isolated-pores"]], "vapor_pressure": [[892, "module-openpnm.models.phase.vapor_pressure"]], "mixing_rule": [[875, "mixing-rule"]], "liquid_pure_lk": [[894, "liquid-pure-lk"]], "gaseous_species_in_water": [[880, "gaseous-species-in-water"]], "liquid_pure_antoine": [[893, "liquid-pure-antoine"]], "headless_throats": [[847, "headless-throats"]], "reversed_throats": [[851, "reversed-throats"]], "cluster_number": [[837, "cluster-number"]], "gas_pure_gismr": [[887, "gas-pure-gismr"]], "bidirectional_throats": [[836, "bidirectional-throats"]], "ideal_gas": [[856, "ideal-gas"]], "density": [[855, "module-openpnm.models.phase.density"]], "liquid_pure_COSTALD": [[858, "liquid-pure-costald"]], "liquid_pure_rp": [[869, "liquid-pure-rp"]], "critical_props": [[854, "module-openpnm.models.phase.critical_props"]], "gas_mixture_yweighted": [[866, "gas-mixture-yweighted"]], "cluster_size": [[838, "cluster-size"]], "duplicate_throats": [[844, "duplicate-throats"]], "throat_cross_sectional_area": [[766, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "Throat Cross-sectional Area Models": [[766, "throat-cross-sectional-area-models"]], "lens": [[811, "lens"]], "throat_length": [[772, "module-openpnm.models.geometry.throat_length"]], "Throat Length Models": [[772, "throat-length-models"]], "mason_morrow": [[763, "mason-morrow"]], "Miscellaneous": [[814, "miscellaneous"]], "cones_and_cylinders": [[774, "cones-and-cylinders"], [720, "cones-and-cylinders"], [691, "cones-and-cylinders"], [705, "cones-and-cylinders"], [672, "cones-and-cylinders"]], "throat_seed": [[790, "module-openpnm.models.geometry.throat_seed"]], "Throat Seed Models": [[790, "throat-seed-models"]], "throat_centroid": [[764, "module-openpnm.models.geometry.throat_centroid"]], "Throat Centroid Model": [[764, "throat-centroid-model"]], "rectangle": [[789, "rectangle"], [804, "rectangle"], [813, "rectangle"], [769, "rectangle"]], "from_neighbor_pores": [[795, "from-neighbor-pores"], [791, "from-neighbor-pores"], [820, "from-neighbor-pores"]], "throat_volume": [[807, "module-openpnm.models.geometry.throat_volume"]], "Throat Volume Models": [[807, "throat-volume-models"]], "throat_capillary_shape_factor": [[761, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "Throat Capillary Shape Factor Models": [[761, "throat-capillary-shape-factor-models"]], "throat_vector": [[805, "module-openpnm.models.geometry.throat_vector"]], "Throat Vector Model": [[805, "throat-vector-model"]], "clip": [[816, "clip"]], "equivalent_diameter": [[794, "equivalent-diameter"], [743, "equivalent-diameter"]], "cuboid": [[767, "cuboid"], [787, "cuboid"], [808, "cuboid"], [801, "cuboid"]], "cylinder": [[768, "cylinder"], [809, "cylinder"], [788, "cylinder"], [802, "cylinder"]], "hybrid_trapezoids_and_rectangles": [[778, "hybrid-trapezoids-and-rectangles"], [709, "hybrid-trapezoids-and-rectangles"], [724, "hybrid-trapezoids-and-rectangles"], [695, "hybrid-trapezoids-and-rectangles"]], "throat_perimeter": [[786, "module-openpnm.models.geometry.throat_perimeter"]], "Throat Perimeter Models": [[786, "throat-perimeter-models"]], "generic_distribution": [[796, "generic-distribution"], [822, "generic-distribution"], [745, "generic-distribution"]], "pore_coords": [[765, "pore-coords"]], "intersecting_cones": [[779, "intersecting-cones"], [696, "intersecting-cones"], [725, "intersecting-cones"], [710, "intersecting-cones"]], "invert": [[824, "invert"]], "generic_function": [[823, "generic-function"]], "circles_and_rectangles": [[773, "circles-and-rectangles"], [690, "circles-and-rectangles"], [704, "circles-and-rectangles"], [719, "circles-and-rectangles"], [671, "circles-and-rectangles"]], "blank": [[815, "blank"]], "hybrid_cones_and_cylinders": [[776, "hybrid-cones-and-cylinders"], [722, "hybrid-cones-and-cylinders"], [693, "hybrid-cones-and-cylinders"], [707, "hybrid-cones-and-cylinders"]], "normal": [[827, "normal"], [797, "normal"], [747, "normal"]], "throat_endpoints": [[770, "module-openpnm.models.geometry.throat_endpoints"]], "throat_surface_area": [[800, "module-openpnm.models.geometry.throat_surface_area"]], "Throat Surface Area Models": [[800, "throat-surface-area-models"]], "jenkins_rao": [[762, "jenkins-rao"]], "from_neighbor_throats": [[821, "from-neighbor-throats"], [744, "from-neighbor-throats"]], "square": [[760, "square"], [738, "square"], [754, "square"]], "spheres_and_cylinders": [[771, "spheres-and-cylinders"], [783, "spheres-and-cylinders"], [715, "spheres-and-cylinders"], [730, "spheres-and-cylinders"], [700, "spheres-and-cylinders"], [675, "spheres-and-cylinders"]], "extrusion": [[803, "extrusion"], [810, "extrusion"]], "throat_size": [[793, "module-openpnm.models.geometry.throat_size"]], "Throat Size Models": [[793, "throat-size-models"]], "pore_to_pore": [[806, "pore-to-pore"]], "fraction": [[819, "fraction"]], "intersecting_trapezoids": [[781, "intersecting-trapezoids"], [698, "intersecting-trapezoids"], [712, "intersecting-trapezoids"], [727, "intersecting-trapezoids"]], "match_histogram": [[826, "match-histogram"]], "pyramids_and_cuboids": [[782, "pyramids-and-cuboids"], [729, "pyramids-and-cuboids"], [714, "pyramids-and-cuboids"], [699, "pyramids-and-cuboids"], [674, "pyramids-and-cuboids"]], "pendular_ring": [[812, "pendular-ring"]], "cubes_and_cuboids": [[775, "cubes-and-cuboids"], [706, "cubes-and-cuboids"], [692, "cubes-and-cuboids"], [721, "cubes-and-cuboids"], [673, "cubes-and-cuboids"]], "squares_and_rectangles": [[784, "squares-and-rectangles"], [731, "squares-and-rectangles"], [716, "squares-and-rectangles"], [701, "squares-and-rectangles"], [676, "squares-and-rectangles"]], "trapezoids_and_rectangles": [[785, "trapezoids-and-rectangles"], [702, "trapezoids-and-rectangles"], [717, "trapezoids-and-rectangles"], [732, "trapezoids-and-rectangles"], [677, "trapezoids-and-rectangles"]], "constant": [[817, "constant"]], "intersecting_pyramids": [[780, "intersecting-pyramids"], [697, "intersecting-pyramids"], [711, "intersecting-pyramids"], [726, "intersecting-pyramids"]], "sphere": [[759, "sphere"], [737, "sphere"], [753, "sphere"]], "hybrid_pyramids_and_cuboids": [[777, "hybrid-pyramids-and-cuboids"], [708, "hybrid-pyramids-and-cuboids"], [694, "hybrid-pyramids-and-cuboids"], [723, "hybrid-pyramids-and-cuboids"]], "circle": [[756, "circle"], [734, "circle"], [751, "circle"]], "pore_size": [[742, "module-openpnm.models.geometry.pore_size"]], "Pore Size Models": [[742, "pore-size-models"]], "spatially_correlated": [[741, "spatially-correlated"]], "pore_seed": [[739, "module-openpnm.models.geometry.pore_seed"]], "Pore Seed Models": [[739, "pore-seed-models"]], "cube": [[757, "cube"], [736, "cube"], [752, "cube"]], "hydraulic_size_factors": [[718, "module-openpnm.models.geometry.hydraulic_size_factors"]], "Hydraulic Size Factors Models": [[718, "hydraulic-size-factors-models"]], "diffusive_size_factors": [[703, "module-openpnm.models.geometry.diffusive_size_factors"]], "Diffusive Size Factors Models": [[703, "diffusive-size-factors-models"]], "pore_surface_area": [[750, "module-openpnm.models.geometry.pore_surface_area"]], "Pore Surface Area Models": [[750, "pore-surface-area-models"]], "pore_volume": [[755, "module-openpnm.models.geometry.pore_volume"]], "Pore Volume Models": [[755, "pore-volume-models"]], "effective": [[758, "effective"]], "ncylinders_in_series": [[728, "ncylinders-in-series"], [713, "ncylinders-in-series"]], "largest_sphere": [[746, "largest-sphere"]], "pore_cross_sectional_area": [[733, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "Pore Cross-sectional Area Models": [[733, "pore-cross-sectional-area-models"]], "cone": [[735, "cone"]], "models": [[668, "module-openpnm.models"]], "Collection of pore-scale models": [[668, "collection-of-pore-scale-models"]], "network_from_networkx": [[648, "network-from-networkx"]], "collections": [[669, "module-openpnm.models.collections"]], "dependency_map": [[624, "dependency-map"]], "project_to_xdmf": [[667, "project-to-xdmf"]], "print_hdf5": [[660, "print-hdf5"]], "network_to_salome": [[658, "network-to-salome"]], "geometry": [[670, "module-openpnm.models.collections.geometry"], [688, "module-openpnm.models.geometry"]], "project_to_pandas": [[664, "project-to-pandas"]], "ParserMixin": [[639, "parsermixin"]], "integrators": [[640, "module-openpnm.integrators"]], "Collection of ODE integrators for transient simulations": [[640, "collection-of-ode-integrators-for-transient-simulations"]], "dependency_list": [[623, "dependency-list"]], "ScipyRK45": [[642, "scipyrk45"]], "network_to_stl": [[659, "network-to-stl"]], "project_to_vtk": [[666, "project-to-vtk"]], "io": [[644, "module-openpnm.io"]], "Collection of functions for import/export of  data": [[644, "collection-of-functions-for-import-export-of-data"]], "network_from_csv": [[645, "network-from-csv"]], "project_to_dict": [[662, "project-to-dict"]], "basic": [[686, "basic"]], "liquid": [[682, "module-openpnm.models.collections.phase.liquid"]], "conduit_lengths": [[689, "module-openpnm.models.geometry.conduit_lengths"]], "Conduit Lengths Models": [[689, "conduit-lengths-models"]], "network_from_pergeos": [[649, "network-from-pergeos"]], "network_from_statoil": [[651, "network-from-statoil"]], "project_to_csv": [[661, "project-to-csv"]], "mercury": [[683, "mercury"]], "dependency_graph": [[622, "dependency-graph"]], "Network Models Collections": [[678, "network-models-collections"]], "network_from_porespy": [[650, "network-from-porespy"]], "air": [[680, "air"]], "network_to_csv": [[653, "network-to-csv"]], "project_to_paraview": [[665, "project-to-paraview"]], "network_from_jsongraph": [[646, "network-from-jsongraph"]], "network_from_marock": [[647, "network-from-marock"]], "network_to_pandas": [[656, "network-to-pandas"]], "Integrator": [[641, "integrator"]], "network_to_networkx": [[655, "network-to-networkx"]], "water": [[684, "water"]], "network_to_comsol": [[652, "network-to-comsol"]], "network_to_jsongraph": [[654, "network-to-jsongraph"]], "project_to_hdf5": [[663, "project-to-hdf5"]], "standard": [[687, "standard"]], "gas": [[681, "module-openpnm.models.collections.phase.gas"]], "Geometry": [[688, "id1"], [7, "geometry"], [5, "geometry"]], "network_to_pergeos": [[657, "network-to-pergeos"]], "ModelsMixin2": [[634, "modelsmixin2"]], "ModelWrapper": [[606, "modelwrapper"]], "LabelMixin": [[598, "labelmixin"]], "ModelsDict": [[619, "modelsdict"]], "core": [[552, "module-openpnm.core"]], "Main classes of OpenPNM": [[552, "main-classes-of-openpnm"]], "The Base class": [[552, "the-base-class"]], "The ModelsMixin class": [[552, "the-modelsmixin-class"]], "Base2": [[553, "base2"]], "Domain": [[570, "domain"]], "set_occupancy": [[517, "set-occupancy"]], "set_binary_partition_coef": [[515, "set-binary-partition-coef"]], "add_phases": [[496, "add-phases"]], "multiphase_diffusion": [[551, "multiphase-diffusion"]], "TransientMultiPhysics": [[524, "transientmultiphysics"]], "contrib": [[492, "module-openpnm.contrib"]], "Contrib": [[492, "id1"]], "MultiPhase": [[493, "multiphase"]], "Transport": [[460, "transport"]], "TransientReactiveTransport": [[427, "transientreactivetransport"]], "TransientFickianDiffusion": [[361, "transientfickiandiffusion"]], "set_outflow_BC": [[351, "set-outflow-bc"], [62, "set-outflow-bc"]], "TransientFourierConduction": [[394, "transientfourierconduction"]], "StokesFlow": [[294, "stokesflow"]], "TransientAdvectionDiffusion": [[327, "transientadvectiondiffusion"]], "Examples": [[1, "examples"]], "Steady State Transport": [[20, "steady-state-transport"]], "Creating the Coefficient Matrix": [[20, "creating-the-coefficient-matrix"]], "Applying Value and Rate Boundary Conditions": [[20, "applying-value-and-rate-boundary-conditions"]], "Solving the System of Equations": [[20, "solving-the-system-of-equations"]], "Sparse Matrices": [[20, "sparse-matrices"]], "Assigning Geometric Properties": [[29, "assigning-geometric-properties"]], "Manually Calculating Properties": [[29, "manually-calculating-properties"]], "Adding pore and throat sizes from scipy.stats distributions": [[29, "adding-pore-and-throat-sizes-from-scipy-stats-distributions"]], "Computing throat length": [[29, "computing-throat-length"]], "Computing pore surface areas": [[29, "computing-pore-surface-areas"]], "Using Pore-scale Models from the Library": [[29, "using-pore-scale-models-from-the-library"]], "Using Predefined Collections of Models": [[29, "using-predefined-collections-of-models"]], "Customizing Models by Overwriting Them or Their Arguments": [[29, "customizing-models-by-overwriting-them-or-their-arguments"]], "Introduction to the Dependency Handler": [[29, "introduction-to-the-dependency-handler"]], "Finding Effective Diffusivity and Tortuosity of a Network": [[7, "finding-effective-diffusivity-and-tortuosity-of-a-network"]], "Performing Fickian Diffusion": [[7, "performing-fickian-diffusion"]], "Visualize the Results": [[7, "visualize-the-results"]], "Calculate the Effective Diffusivity": [[7, "calculate-the-effective-diffusivity"]], "Calculate the Tortuosity": [[7, "calculate-the-tortuosity"]], "Reference": [[2, "reference"]], "Obtaining Relative Diffusivity Curves": [[11, "obtaining-relative-diffusivity-curves"]], "Create network and phases": [[11, "create-network-and-phases"], [12, "create-network-and-phases"]], "Apply ordinary percolation": [[11, "apply-ordinary-percolation"]], "Saturation and rate functions": [[11, "saturation-and-rate-functions"]], "Define multiphase conductance": [[11, "define-multiphase-conductance"], [12, "define-multiphase-conductance"]], "Calculate relative diffusivities": [[11, "calculate-relative-diffusivities"]], "Contibuted Examples": [[13, "contibuted-examples"]], "Generating Networks and Quick Visualization": [[26, "generating-networks-and-quick-visualization"]], "CubicTemplates": [[26, "cubictemplates"]], "Other Cubic Lattices": [[26, "other-cubic-lattices"]], "Random Network: Delaunay and Voronoi Tessellations": [[26, "random-network-delaunay-and-voronoi-tessellations"]], "Imported Networks": [[26, "imported-networks"]], "AdvectionDiffusion": [[38, "advectiondiffusion"]], "Size Factors and Transport Conductance": [[23, "size-factors-and-transport-conductance"]], "Conductance in pore network models": [[23, "conductance-in-pore-network-models"]], "Conductance of a single conduit": [[23, "conductance-of-a-single-conduit"]], "Size factors vs. shape factors": [[23, "size-factors-vs-shape-factors"]], "Built-in size factor models in OpenPNM": [[23, "built-in-size-factor-models-in-openpnm"]], "Deriving the size factor for arbitrary-shaped pores and throats": [[23, "deriving-the-size-factor-for-arbitrary-shaped-pores-and-throats"]], "Diffusive size factor": [[23, "diffusive-size-factor"]], "Hydraulic size factor": [[23, "hydraulic-size-factor"]], "Conduit vs. element size factor": [[23, "conduit-vs-element-size-factor"]], "Simulating Single Phase Transport": [[32, "simulating-single-phase-transport"]], "Define Phase Viscosity": [[32, "define-phase-viscosity"]], "Basic Conductance Calculation": [[32, "basic-conductance-calculation"]], "Create Algorithm Object": [[32, "create-algorithm-object"]], "Assign Boundary Conditions": [[32, "assign-boundary-conditions"]], "Rigorous Conductance Calculation": [[32, "rigorous-conductance-calculation"]], "Manual Method": [[32, "manual-method"]], "Pore-Scale Model Method": [[32, "pore-scale-model-method"]], "Predicting absolute permeability": [[4, "predicting-absolute-permeability"]], "Create a random cubic network": [[4, "create-a-random-cubic-network"], [10, "create-a-random-cubic-network"]], "Create phase object": [[4, "create-phase-object"]], "Apply Stokes flow": [[4, "apply-stokes-flow"]], "Calculate permeability": [[4, "calculate-permeability"]], "Getting Started": [[14, "getting-started"]], "Creating a Cubic Network": [[14, "creating-a-cubic-network"]], "Defining a Phase": [[14, "defining-a-phase"]], "Performing a Drainage Simulation": [[14, "performing-a-drainage-simulation"]], "Calculating Permeability Coefficient": [[14, "calculating-permeability-coefficient"]], "Adjusting Pore Size Distribution": [[14, "adjusting-pore-size-distribution"]], "Predicting dispersion coefficient": [[6, "predicting-dispersion-coefficient"]], "Generating Network and phase": [[6, "generating-network-and-phase"]], "Defining Effective Pore Volume": [[6, "defining-effective-pore-volume"]], "Perform Stokes flow": [[6, "perform-stokes-flow"]], "Apply transient advection diffusion": [[6, "apply-transient-advection-diffusion"]], "Elution curve": [[6, "elution-curve"]], "Solving for the dispersion coefficient": [[6, "solving-for-the-dispersion-coefficient"]], "Managing Clustered Networks": [[18, "managing-clustered-networks"]], "Creating a Clustered Network": [[18, "creating-a-clustered-network"]], "Illustrating the Problem": [[18, "illustrating-the-problem"]], "Fixing Clustered Networks": [[18, "fixing-clustered-networks"]], "Explanation of Units": [[21, "explanation-of-units"]], "Use of absolute pressure vs gauge pressure": [[21, "use-of-absolute-pressure-vs-gauge-pressure"]], "Unit conversion packages and challenges": [[21, "unit-conversion-packages-and-challenges"]], "Predicting Formation Factor": [[8, "predicting-formation-factor"]], "Create Network": [[8, "create-network"]], "Create Phase": [[8, "create-phase"]], "Apply Fickian Diffusion": [[8, "apply-fickian-diffusion"]], "Visualize Results": [[8, "visualize-results"]], "Calculate Formation Factor": [[8, "calculate-formation-factor"]], "Storage of Network Data and Topology": [[27, "storage-of-network-data-and-topology"]], "Spreadsheet Analogy": [[27, "spreadsheet-analogy"]], "Rules to Maintain Data Integrity": [[27, "rules-to-maintain-data-integrity"]], "All Values are Converted to Numpy Arrays": [[27, "all-values-are-converted-to-numpy-arrays"]], "Dictionary Keys Must Start With \u2018pore\u2019 or \u2018throat\u2019": [[27, "dictionary-keys-must-start-with-pore-or-throat"]], "Any Scalars are Expanded to a Full-Length Vector": [[27, "any-scalars-are-expanded-to-a-full-length-vector"]], "Nested Dictionary Names are Allowed": [[27, "nested-dictionary-names-are-allowed"]], "Boolean Arrays are Treated as Labels, Numerical Arrays are Treated as Properties": [[27, "boolean-arrays-are-treated-as-labels-numerical-arrays-are-treated-as-properties"]], "Dictionary Keys with a Leading Underscore are Hidden": [[27, "dictionary-keys-with-a-leading-underscore-are-hidden"]], "The param prefix": [[27, "the-param-prefix"]], "Representing Topology": [[27, "representing-topology"]], "Adjacency Matrices: Dense vs Sparse": [[27, "adjacency-matrices-dense-vs-sparse"]], "conduit data": [[27, "conduit-data"]], "Numerical Python Primer": [[25, "numerical-python-primer"]], "Python Lists: Flexible but Slow": [[25, "python-lists-flexible-but-slow"]], "Numpy ndarray: Optimized for Numerics": [[25, "numpy-ndarray-optimized-for-numerics"]], "Vectorization": [[25, "vectorization"]], "Methods versus Functions": [[25, "methods-versus-functions"]], "Dictionaries: Holding Things Together": [[25, "dictionaries-holding-things-together"]], "Subclassing dict": [[25, "subclassing-dict"]], "Reactive Transport": [[22, "reactive-transport"]], "Using the source term functionality in OpenPNM": [[22, "using-the-source-term-functionality-in-openpnm"]], "How the source-term functionality works": [[22, "how-the-source-term-functionality-works"]], "Adjusting Pore Size Distributions": [[5, "adjusting-pore-size-distributions"]], "Adjusting Pore and Throat Sizes": [[5, "adjusting-pore-and-throat-sizes"]], "Using scipy.stats classes directly": [[5, "using-scipy-stats-classes-directly"]], "Using pre-defined models in OpenPNM": [[5, "using-pre-defined-models-in-openpnm"]], "Using Labels and Defining Domains": [[30, "using-labels-and-defining-domains"]], "Using Predefined Labels": [[30, "using-predefined-labels"]], "The pores and throats methods": [[30, "the-pores-and-throats-methods"]], "Using the mode argument in the pores and throats methods": [[30, "using-the-mode-argument-in-the-pores-and-throats-methods"]], "Defining Custom Labels": [[30, "defining-custom-labels"]], "Creating Boolean Masks": [[30, "creating-boolean-masks"]], "Using set_label": [[30, "using-set-label"]], "Using the @ sytax to read and write data": [[30, "using-the-sytax-to-read-and-write-data"]], "Defining Subdomains": [[30, "defining-subdomains"]], "Defining and Changing Subdomain Locations": [[30, "defining-and-changing-subdomain-locations"]], "Mixing Full Domain and Subdomain Models": [[30, "mixing-full-domain-and-subdomain-models"]], "Mixing Many Subdomains of Different Shape": [[30, "mixing-many-subdomains-of-different-shape"]], "Predicting relative permeability": [[12, "predicting-relative-permeability"]], "Apply invasion percolation": [[12, "apply-invasion-percolation"]], "Occupancy and permeability functions": [[12, "occupancy-and-permeability-functions"]], "Calculate relative permeabilities": [[12, "calculate-relative-permeabilities"]], "Applications": [[0, "applications"]], "10 Steps to Learn OpenPNM": [[3, "steps-to-learn-openpnm"]], "Simulating Invasion": [[33, "simulating-invasion"]], "Manual Implementation of the Drainge Process": [[33, "manual-implementation-of-the-drainge-process"]], "Using the Drainage Algorithm": [[33, "using-the-drainage-algorithm"]], "Invasion Percolation": [[33, "invasion-percolation"]], "Manual Implementation of the Invasion Percolation Process": [[33, "manual-implementation-of-the-invasion-percolation-process"]], "Using the InvasionPercolation Algorithm": [[33, "using-the-invasionpercolation-algorithm"]], "Visualization options": [[34, "visualization-options"]], "Spyder": [[34, "spyder"]], "Interactive plots in Jupyter notebook": [[34, "interactive-plots-in-jupyter-notebook"]], "Paraview": [[34, "paraview"]], "Transient Transport": [[24, "transient-transport"]], "Predicting Porosity": [[10, "predicting-porosity"]], "Calculate void and bulk volume": [[10, "calculate-void-and-bulk-volume"]], "Discussions and Issues": [[10, "discussions-and-issues"]], "Domain volume": [[10, "domain-volume"]], "Overlapping pores and throats": [[10, "overlapping-pores-and-throats"]], "Extracted networks": [[10, "extracted-networks"]], "Void volume": [[10, "void-volume"]], "Installation": [[36, "installation"]], "Installing the dev version": [[36, "installing-the-dev-version"]], "The easy way": [[36, "the-easy-way"]], "The hard (but correct) way": [[36, "the-hard-but-correct-way"]], "Where\u2019s my conda prompt?": [[36, "where-s-my-conda-prompt"]], "Windows": [[36, "windows"]], "Mac and Linux": [[36, "mac-and-linux"]], "algorithms": [[37, "module-openpnm.algorithms"]], "Pore Network Modeling Framework in Python": [[35, "pore-network-modeling-framework-in-python"]], "What is OpenPNM? stars": [[35, "what-is-openpnm-stars"]], "How To Cite": [[35, "how-to-cite"]], "Citation": [[35, null]], "Creating Phases": [[31, "creating-phases"]], "Part 1: The Phase class": [[31, "part-1-the-phase-class"]], "Direct assignment of a constant value": [[31, "direct-assignment-of-a-constant-value"]], "Using a built-in model": [[31, "using-a-built-in-model"]], "Using a water-specific model": [[31, "using-a-water-specific-model"]], "Writing your own custom model": [[31, "writing-your-own-custom-model"]], "Specific Classes for Common Fluids": [[31, "specific-classes-for-common-fluids"]], "Part 2: Using Species and Mixtures": [[31, "part-2-using-species-and-mixtures"]], "Pure Species": [[31, "pure-species"]], "Gas and Liquid Species": [[31, "gas-and-liquid-species"]], "Gas and Liquid Mixtures": [[31, "gas-and-liquid-mixtures"]], "Getting and Setting Compositions": [[31, "getting-and-setting-compositions"]], "Exploring Features of the Mixture Objects": [[31, "exploring-features-of-the-mixture-objects"]], "Adding and Removing Species": [[31, "adding-and-removing-species"]], "The info Attribute": [[31, "the-info-attribute"]], "Get component mole fractions": [[31, "get-component-mole-fractions"]], "The components Attribute": [[31, "the-components-attribute"]], "Using get_comp_vals": [[31, "using-get-comp-vals"]], "Checking consistency with check_mixture_health": [[31, "checking-consistency-with-check-mixture-health"]], "Retrieving Species Properties": [[31, "retrieving-species-properties"]], "Using the wildcard (*) syntax": [[31, "using-the-wildcard-syntax"]], "Calibrating a Network Using Mercury Intrusion Data": [[9, "calibrating-a-network-using-mercury-intrusion-data"]], "Import Packages": [[9, "import-packages"]], "Import Data for a Sandstone": [[9, "import-data-for-a-sandstone"]], "Add Geometrical Properties": [[9, "add-geometrical-properties"]], "Pore Sizes": [[9, "pore-sizes"]], "Finding Pore Sizes Given Random Seeds between 0 and 1": [[9, "finding-pore-sizes-given-random-seeds-between-0-and-1"]], "Apply Distribution to the Network": [[9, "apply-distribution-to-the-network"]], "Throat Sizes": [[9, "throat-sizes"]], "Add Physics": [[9, "add-physics"]], "Perform Mercury Intrusion": [[9, "perform-mercury-intrusion"]], "Check Geometric Consistency": [[9, "check-geometric-consistency"]], "Additional Calibration Steps": [[9, "additional-calibration-steps"]], "Pore-Scale Models": [[15, "pore-scale-models"]], "Available Matrix Solvers": [[19, "available-matrix-solvers"]], "The Workspace and Projects": [[17, "the-workspace-and-projects"]], "Usage of Projects and Workspace": [[17, "usage-of-projects-and-workspace"]], "Workspace is a Singleton": [[17, "workspace-is-a-singleton"]], "One Network per Project": [[17, "one-network-per-project"]], "Settings Attribute Machinery": [[16, "settings-attribute-machinery"]], "Datatype is enforced": [[16, "datatype-is-enforced"]], "Settings can be access as attributes or dict keys": [[16, "settings-can-be-access-as-attributes-or-dict-keys"]], "Namespace is clean": [[16, "namespace-is-clean"]], "Collections also enforce types": [[16, "collections-also-enforce-types"]], "Settings are attached before init": [[16, "settings-are-attached-before-init"]], "Network Representation, Queries, and Manipulation": [[28, "network-representation-queries-and-manipulation"]], "The Adjacency Matrix": [[28, "the-adjacency-matrix"]], "COO Sparse Format": [[28, "coo-sparse-format"]], "Other Sparse Formats": [[28, "other-sparse-formats"]], "The Incidence Matrix": [[28, "the-incidence-matrix"]], "Using OpenPNM Methods Query Methods": [[28, "using-openpnm-methods-query-methods"]], "Find Neighoring Pores": [[28, "find-neighoring-pores"]], "Find Neighboring Throats": [[28, "find-neighboring-throats"]], "Find Connecting Throats": [[28, "find-connecting-throats"]], "Find Connected Pores": [[28, "find-connected-pores"]], "Removing Throats": [[28, "removing-throats"]], "Removing Pores": [[28, "removing-pores"]], "Adding Pores and Throats": [[28, "adding-pores-and-throats"]]}, "indexentries": {"module": [[37, "module-openpnm.algorithms"], [492, "module-openpnm.contrib"], [552, "module-openpnm.core"], [640, "module-openpnm.integrators"], [644, "module-openpnm.io"], [668, "module-openpnm.models"], [669, "module-openpnm.models.collections"], [670, "module-openpnm.models.collections.geometry"], [678, "module-openpnm.models.collections.network"], [679, "module-openpnm.models.collections.phase"], [681, "module-openpnm.models.collections.phase.gas"], [682, "module-openpnm.models.collections.phase.liquid"], [685, "module-openpnm.models.collections.physics"], [688, "module-openpnm.models.geometry"], [689, "module-openpnm.models.geometry.conduit_lengths"], [703, "module-openpnm.models.geometry.diffusive_size_factors"], [718, "module-openpnm.models.geometry.hydraulic_size_factors"], [733, "module-openpnm.models.geometry.pore_cross_sectional_area"], [739, "module-openpnm.models.geometry.pore_seed"], [742, "module-openpnm.models.geometry.pore_size"], [750, "module-openpnm.models.geometry.pore_surface_area"], [755, "module-openpnm.models.geometry.pore_volume"], [761, "module-openpnm.models.geometry.throat_capillary_shape_factor"], [764, "module-openpnm.models.geometry.throat_centroid"], [766, "module-openpnm.models.geometry.throat_cross_sectional_area"], [770, "module-openpnm.models.geometry.throat_endpoints"], [772, "module-openpnm.models.geometry.throat_length"], [786, "module-openpnm.models.geometry.throat_perimeter"], [790, "module-openpnm.models.geometry.throat_seed"], [793, "module-openpnm.models.geometry.throat_size"], [800, "module-openpnm.models.geometry.throat_surface_area"], [805, "module-openpnm.models.geometry.throat_vector"], [807, "module-openpnm.models.geometry.throat_volume"], [814, "module-openpnm.models.misc"], [835, "module-openpnm.models.network"], [852, "module-openpnm.models.phase"], [854, "module-openpnm.models.phase.critical_props"], [855, "module-openpnm.models.phase.density"], [861, "module-openpnm.models.phase.diffusivity"], [865, "module-openpnm.models.phase.heat_capacity"], [870, "module-openpnm.models.phase.misc"], [873, "module-openpnm.models.phase.mixtures"], [879, "module-openpnm.models.phase.partition_coefficient"], [881, "module-openpnm.models.phase.surface_tension"], [885, "module-openpnm.models.phase.thermal_conductivity"], [892, "module-openpnm.models.phase.vapor_pressure"], [896, "module-openpnm.models.phase.viscosity"], [903, "module-openpnm.models.physics"], [904, "module-openpnm.models.physics.ad_dif_conductance"], [906, "module-openpnm.models.physics.capillary_pressure"], [909, "module-openpnm.models.physics.diffusive_conductance"], [914, "module-openpnm.models.physics.electrical_conductance"], [917, "module-openpnm.models.physics.hydraulic_conductance"], [921, "module-openpnm.models.physics.meniscus"], [925, "module-openpnm.models.physics.multiphase"], [928, "module-openpnm.models.physics.source_terms"], [939, "module-openpnm.models.physics.thermal_conductance"], [942, "module-openpnm.network"], [1291, "module-openpnm.phase"], [1691, "module-openpnm.solvers"], [1708, "module-openpnm.topotools"], [1757, "module-openpnm.utils"], [1912, "module-openpnm.visualization"], [1922, "module-openpnm"]], "openpnm.algorithms": [[37, "module-openpnm.algorithms"]], "advectiondiffusion (class in openpnm.algorithms)": [[38, "openpnm.algorithms.AdvectionDiffusion"]], "clear() (advectiondiffusion method)": [[39, "openpnm.algorithms.AdvectionDiffusion.clear"]], "clear_bcs() (advectiondiffusion method)": [[40, "openpnm.algorithms.AdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (advectiondiffusion method)": [[41, "openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (advectiondiffusion method)": [[42, "openpnm.algorithms.AdvectionDiffusion.clear_value_BCs"]], "copy() (advectiondiffusion method)": [[43, "openpnm.algorithms.AdvectionDiffusion.copy"]], "filter_by_label() (advectiondiffusion method)": [[44, "openpnm.algorithms.AdvectionDiffusion.filter_by_label"]], "fromkeys() (advectiondiffusion method)": [[45, "openpnm.algorithms.AdvectionDiffusion.fromkeys"]], "get() (advectiondiffusion method)": [[46, "openpnm.algorithms.AdvectionDiffusion.get"]], "get_conduit_data() (advectiondiffusion method)": [[47, "openpnm.algorithms.AdvectionDiffusion.get_conduit_data"]], "interpolate_data() (advectiondiffusion method)": [[48, "openpnm.algorithms.AdvectionDiffusion.interpolate_data"]], "items() (advectiondiffusion method)": [[49, "openpnm.algorithms.AdvectionDiffusion.items"]], "keys() (advectiondiffusion method)": [[50, "openpnm.algorithms.AdvectionDiffusion.keys"]], "labels() (advectiondiffusion method)": [[51, "openpnm.algorithms.AdvectionDiffusion.labels"]], "num_pores() (advectiondiffusion method)": [[52, "openpnm.algorithms.AdvectionDiffusion.num_pores"]], "num_throats() (advectiondiffusion method)": [[53, "openpnm.algorithms.AdvectionDiffusion.num_throats"]], "pop() (advectiondiffusion method)": [[54, "openpnm.algorithms.AdvectionDiffusion.pop"]], "popitem() (advectiondiffusion method)": [[55, "openpnm.algorithms.AdvectionDiffusion.popitem"]], "pores() (advectiondiffusion method)": [[56, "openpnm.algorithms.AdvectionDiffusion.pores"]], "props() (advectiondiffusion method)": [[57, "openpnm.algorithms.AdvectionDiffusion.props"]], "rate() (advectiondiffusion method)": [[58, "openpnm.algorithms.AdvectionDiffusion.rate"]], "run() (advectiondiffusion method)": [[59, "openpnm.algorithms.AdvectionDiffusion.run"]], "set_bc() (advectiondiffusion method)": [[60, "openpnm.algorithms.AdvectionDiffusion.set_BC"]], "set_label() (advectiondiffusion method)": [[61, "openpnm.algorithms.AdvectionDiffusion.set_label"]], "set_outflow_bc() (advectiondiffusion method)": [[62, "openpnm.algorithms.AdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (advectiondiffusion method)": [[63, "openpnm.algorithms.AdvectionDiffusion.set_rate_BC"]], "set_source() (advectiondiffusion method)": [[64, "openpnm.algorithms.AdvectionDiffusion.set_source"]], "set_value_bc() (advectiondiffusion method)": [[65, "openpnm.algorithms.AdvectionDiffusion.set_value_BC"]], "setdefault() (advectiondiffusion method)": [[66, "openpnm.algorithms.AdvectionDiffusion.setdefault"]], "throats() (advectiondiffusion method)": [[67, "openpnm.algorithms.AdvectionDiffusion.throats"]], "to_indices() (advectiondiffusion method)": [[68, "openpnm.algorithms.AdvectionDiffusion.to_indices"]], "to_mask() (advectiondiffusion method)": [[69, "openpnm.algorithms.AdvectionDiffusion.to_mask"]], "update() (advectiondiffusion method)": [[70, "openpnm.algorithms.AdvectionDiffusion.update"]], "values() (advectiondiffusion method)": [[71, "openpnm.algorithms.AdvectionDiffusion.values"]], "algorithm (class in openpnm.algorithms)": [[72, "openpnm.algorithms.Algorithm"]], "clear() (algorithm method)": [[73, "openpnm.algorithms.Algorithm.clear"]], "clear_bcs() (algorithm method)": [[74, "openpnm.algorithms.Algorithm.clear_BCs"]], "copy() (algorithm method)": [[75, "openpnm.algorithms.Algorithm.copy"]], "filter_by_label() (algorithm method)": [[76, "openpnm.algorithms.Algorithm.filter_by_label"]], "fromkeys() (algorithm method)": [[77, "openpnm.algorithms.Algorithm.fromkeys"]], "get() (algorithm method)": [[78, "openpnm.algorithms.Algorithm.get"]], "get_conduit_data() (algorithm method)": [[79, "openpnm.algorithms.Algorithm.get_conduit_data"]], "interpolate_data() (algorithm method)": [[80, "openpnm.algorithms.Algorithm.interpolate_data"]], "items() (algorithm method)": [[81, "openpnm.algorithms.Algorithm.items"]], "keys() (algorithm method)": [[82, "openpnm.algorithms.Algorithm.keys"]], "labels() (algorithm method)": [[83, "openpnm.algorithms.Algorithm.labels"]], "num_pores() (algorithm method)": [[84, "openpnm.algorithms.Algorithm.num_pores"]], "num_throats() (algorithm method)": [[85, "openpnm.algorithms.Algorithm.num_throats"]], "pop() (algorithm method)": [[86, "openpnm.algorithms.Algorithm.pop"]], "popitem() (algorithm method)": [[87, "openpnm.algorithms.Algorithm.popitem"]], "pores() (algorithm method)": [[88, "openpnm.algorithms.Algorithm.pores"]], "props() (algorithm method)": [[89, "openpnm.algorithms.Algorithm.props"]], "set_bc() (algorithm method)": [[90, "openpnm.algorithms.Algorithm.set_BC"]], "set_label() (algorithm method)": [[91, "openpnm.algorithms.Algorithm.set_label"]], "setdefault() (algorithm method)": [[92, "openpnm.algorithms.Algorithm.setdefault"]], "throats() (algorithm method)": [[93, "openpnm.algorithms.Algorithm.throats"]], "to_indices() (algorithm method)": [[94, "openpnm.algorithms.Algorithm.to_indices"]], "to_mask() (algorithm method)": [[95, "openpnm.algorithms.Algorithm.to_mask"]], "update() (algorithm method)": [[96, "openpnm.algorithms.Algorithm.update"]], "values() (algorithm method)": [[97, "openpnm.algorithms.Algorithm.values"]], "drainage (class in openpnm.algorithms)": [[98, "openpnm.algorithms.Drainage"]], "apply_trapping() (drainage method)": [[99, "openpnm.algorithms.Drainage.apply_trapping"]], "clear() (drainage method)": [[100, "openpnm.algorithms.Drainage.clear"]], "clear_bcs() (drainage method)": [[101, "openpnm.algorithms.Drainage.clear_BCs"]], "copy() (drainage method)": [[102, "openpnm.algorithms.Drainage.copy"]], "filter_by_label() (drainage method)": [[103, "openpnm.algorithms.Drainage.filter_by_label"]], "fromkeys() (drainage method)": [[104, "openpnm.algorithms.Drainage.fromkeys"]], "get() (drainage method)": [[105, "openpnm.algorithms.Drainage.get"]], "get_conduit_data() (drainage method)": [[106, "openpnm.algorithms.Drainage.get_conduit_data"]], "interpolate_data() (drainage method)": [[107, "openpnm.algorithms.Drainage.interpolate_data"]], "items() (drainage method)": [[108, "openpnm.algorithms.Drainage.items"]], "keys() (drainage method)": [[109, "openpnm.algorithms.Drainage.keys"]], "labels() (drainage method)": [[110, "openpnm.algorithms.Drainage.labels"]], "num_pores() (drainage method)": [[111, "openpnm.algorithms.Drainage.num_pores"]], "num_throats() (drainage method)": [[112, "openpnm.algorithms.Drainage.num_throats"]], "pc_curve() (drainage method)": [[113, "openpnm.algorithms.Drainage.pc_curve"]], "pop() (drainage method)": [[114, "openpnm.algorithms.Drainage.pop"]], "popitem() (drainage method)": [[115, "openpnm.algorithms.Drainage.popitem"]], "pores() (drainage method)": [[116, "openpnm.algorithms.Drainage.pores"]], "props() (drainage method)": [[117, "openpnm.algorithms.Drainage.props"]], "reset() (drainage method)": [[118, "openpnm.algorithms.Drainage.reset"]], "run() (drainage method)": [[119, "openpnm.algorithms.Drainage.run"]], "set_bc() (drainage method)": [[120, "openpnm.algorithms.Drainage.set_BC"]], "set_inlet_bc() (drainage method)": [[121, "openpnm.algorithms.Drainage.set_inlet_BC"]], "set_label() (drainage method)": [[122, "openpnm.algorithms.Drainage.set_label"]], "set_outlet_bc() (drainage method)": [[123, "openpnm.algorithms.Drainage.set_outlet_BC"]], "setdefault() (drainage method)": [[124, "openpnm.algorithms.Drainage.setdefault"]], "throats() (drainage method)": [[125, "openpnm.algorithms.Drainage.throats"]], "to_indices() (drainage method)": [[126, "openpnm.algorithms.Drainage.to_indices"]], "to_mask() (drainage method)": [[127, "openpnm.algorithms.Drainage.to_mask"]], "update() (drainage method)": [[128, "openpnm.algorithms.Drainage.update"]], "values() (drainage method)": [[129, "openpnm.algorithms.Drainage.values"]], "fickiandiffusion (class in openpnm.algorithms)": [[130, "openpnm.algorithms.FickianDiffusion"]], "clear() (fickiandiffusion method)": [[131, "openpnm.algorithms.FickianDiffusion.clear"]], "clear_bcs() (fickiandiffusion method)": [[132, "openpnm.algorithms.FickianDiffusion.clear_BCs"]], "clear_rate_bcs() (fickiandiffusion method)": [[133, "openpnm.algorithms.FickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (fickiandiffusion method)": [[134, "openpnm.algorithms.FickianDiffusion.clear_value_BCs"]], "copy() (fickiandiffusion method)": [[135, "openpnm.algorithms.FickianDiffusion.copy"]], "filter_by_label() (fickiandiffusion method)": [[136, "openpnm.algorithms.FickianDiffusion.filter_by_label"]], "fromkeys() (fickiandiffusion method)": [[137, "openpnm.algorithms.FickianDiffusion.fromkeys"]], "get() (fickiandiffusion method)": [[138, "openpnm.algorithms.FickianDiffusion.get"]], "get_conduit_data() (fickiandiffusion method)": [[139, "openpnm.algorithms.FickianDiffusion.get_conduit_data"]], "interpolate_data() (fickiandiffusion method)": [[140, "openpnm.algorithms.FickianDiffusion.interpolate_data"]], "items() (fickiandiffusion method)": [[141, "openpnm.algorithms.FickianDiffusion.items"]], "keys() (fickiandiffusion method)": [[142, "openpnm.algorithms.FickianDiffusion.keys"]], "labels() (fickiandiffusion method)": [[143, "openpnm.algorithms.FickianDiffusion.labels"]], "num_pores() (fickiandiffusion method)": [[144, "openpnm.algorithms.FickianDiffusion.num_pores"]], "num_throats() (fickiandiffusion method)": [[145, "openpnm.algorithms.FickianDiffusion.num_throats"]], "pop() (fickiandiffusion method)": [[146, "openpnm.algorithms.FickianDiffusion.pop"]], "popitem() (fickiandiffusion method)": [[147, "openpnm.algorithms.FickianDiffusion.popitem"]], "pores() (fickiandiffusion method)": [[148, "openpnm.algorithms.FickianDiffusion.pores"]], "props() (fickiandiffusion method)": [[149, "openpnm.algorithms.FickianDiffusion.props"]], "rate() (fickiandiffusion method)": [[150, "openpnm.algorithms.FickianDiffusion.rate"]], "run() (fickiandiffusion method)": [[151, "openpnm.algorithms.FickianDiffusion.run"]], "set_bc() (fickiandiffusion method)": [[152, "openpnm.algorithms.FickianDiffusion.set_BC"]], "set_label() (fickiandiffusion method)": [[153, "openpnm.algorithms.FickianDiffusion.set_label"]], "set_rate_bc() (fickiandiffusion method)": [[154, "openpnm.algorithms.FickianDiffusion.set_rate_BC"]], "set_source() (fickiandiffusion method)": [[155, "openpnm.algorithms.FickianDiffusion.set_source"]], "set_value_bc() (fickiandiffusion method)": [[156, "openpnm.algorithms.FickianDiffusion.set_value_BC"]], "setdefault() (fickiandiffusion method)": [[157, "openpnm.algorithms.FickianDiffusion.setdefault"]], "throats() (fickiandiffusion method)": [[158, "openpnm.algorithms.FickianDiffusion.throats"]], "to_indices() (fickiandiffusion method)": [[159, "openpnm.algorithms.FickianDiffusion.to_indices"]], "to_mask() (fickiandiffusion method)": [[160, "openpnm.algorithms.FickianDiffusion.to_mask"]], "update() (fickiandiffusion method)": [[161, "openpnm.algorithms.FickianDiffusion.update"]], "values() (fickiandiffusion method)": [[162, "openpnm.algorithms.FickianDiffusion.values"]], "fourierconduction (class in openpnm.algorithms)": [[163, "openpnm.algorithms.FourierConduction"]], "clear() (fourierconduction method)": [[164, "openpnm.algorithms.FourierConduction.clear"]], "clear_bcs() (fourierconduction method)": [[165, "openpnm.algorithms.FourierConduction.clear_BCs"]], "clear_rate_bcs() (fourierconduction method)": [[166, "openpnm.algorithms.FourierConduction.clear_rate_BCs"]], "clear_value_bcs() (fourierconduction method)": [[167, "openpnm.algorithms.FourierConduction.clear_value_BCs"]], "copy() (fourierconduction method)": [[168, "openpnm.algorithms.FourierConduction.copy"]], "filter_by_label() (fourierconduction method)": [[169, "openpnm.algorithms.FourierConduction.filter_by_label"]], "fromkeys() (fourierconduction method)": [[170, "openpnm.algorithms.FourierConduction.fromkeys"]], "get() (fourierconduction method)": [[171, "openpnm.algorithms.FourierConduction.get"]], "get_conduit_data() (fourierconduction method)": [[172, "openpnm.algorithms.FourierConduction.get_conduit_data"]], "interpolate_data() (fourierconduction method)": [[173, "openpnm.algorithms.FourierConduction.interpolate_data"]], "items() (fourierconduction method)": [[174, "openpnm.algorithms.FourierConduction.items"]], "keys() (fourierconduction method)": [[175, "openpnm.algorithms.FourierConduction.keys"]], "labels() (fourierconduction method)": [[176, "openpnm.algorithms.FourierConduction.labels"]], "num_pores() (fourierconduction method)": [[177, "openpnm.algorithms.FourierConduction.num_pores"]], "num_throats() (fourierconduction method)": [[178, "openpnm.algorithms.FourierConduction.num_throats"]], "pop() (fourierconduction method)": [[179, "openpnm.algorithms.FourierConduction.pop"]], "popitem() (fourierconduction method)": [[180, "openpnm.algorithms.FourierConduction.popitem"]], "pores() (fourierconduction method)": [[181, "openpnm.algorithms.FourierConduction.pores"]], "props() (fourierconduction method)": [[182, "openpnm.algorithms.FourierConduction.props"]], "rate() (fourierconduction method)": [[183, "openpnm.algorithms.FourierConduction.rate"]], "run() (fourierconduction method)": [[184, "openpnm.algorithms.FourierConduction.run"]], "set_bc() (fourierconduction method)": [[185, "openpnm.algorithms.FourierConduction.set_BC"]], "set_label() (fourierconduction method)": [[186, "openpnm.algorithms.FourierConduction.set_label"]], "set_rate_bc() (fourierconduction method)": [[187, "openpnm.algorithms.FourierConduction.set_rate_BC"]], "set_source() (fourierconduction method)": [[188, "openpnm.algorithms.FourierConduction.set_source"]], "set_value_bc() (fourierconduction method)": [[189, "openpnm.algorithms.FourierConduction.set_value_BC"]], "setdefault() (fourierconduction method)": [[190, "openpnm.algorithms.FourierConduction.setdefault"]], "throats() (fourierconduction method)": [[191, "openpnm.algorithms.FourierConduction.throats"]], "to_indices() (fourierconduction method)": [[192, "openpnm.algorithms.FourierConduction.to_indices"]], "to_mask() (fourierconduction method)": [[193, "openpnm.algorithms.FourierConduction.to_mask"]], "update() (fourierconduction method)": [[194, "openpnm.algorithms.FourierConduction.update"]], "values() (fourierconduction method)": [[195, "openpnm.algorithms.FourierConduction.values"]], "invasionpercolation (class in openpnm.algorithms)": [[196, "openpnm.algorithms.InvasionPercolation"]], "apply_trapping() (invasionpercolation method)": [[197, "openpnm.algorithms.InvasionPercolation.apply_trapping"]], "clear() (invasionpercolation method)": [[198, "openpnm.algorithms.InvasionPercolation.clear"]], "clear_bcs() (invasionpercolation method)": [[199, "openpnm.algorithms.InvasionPercolation.clear_BCs"]], "copy() (invasionpercolation method)": [[200, "openpnm.algorithms.InvasionPercolation.copy"]], "filter_by_label() (invasionpercolation method)": [[201, "openpnm.algorithms.InvasionPercolation.filter_by_label"]], "fromkeys() (invasionpercolation method)": [[202, "openpnm.algorithms.InvasionPercolation.fromkeys"]], "get() (invasionpercolation method)": [[203, "openpnm.algorithms.InvasionPercolation.get"]], "get_conduit_data() (invasionpercolation method)": [[204, "openpnm.algorithms.InvasionPercolation.get_conduit_data"]], "interpolate_data() (invasionpercolation method)": [[205, "openpnm.algorithms.InvasionPercolation.interpolate_data"]], "items() (invasionpercolation method)": [[206, "openpnm.algorithms.InvasionPercolation.items"]], "keys() (invasionpercolation method)": [[207, "openpnm.algorithms.InvasionPercolation.keys"]], "labels() (invasionpercolation method)": [[208, "openpnm.algorithms.InvasionPercolation.labels"]], "num_pores() (invasionpercolation method)": [[209, "openpnm.algorithms.InvasionPercolation.num_pores"]], "num_throats() (invasionpercolation method)": [[210, "openpnm.algorithms.InvasionPercolation.num_throats"]], "pc_curve() (invasionpercolation method)": [[211, "openpnm.algorithms.InvasionPercolation.pc_curve"]], "pop() (invasionpercolation method)": [[212, "openpnm.algorithms.InvasionPercolation.pop"]], "popitem() (invasionpercolation method)": [[213, "openpnm.algorithms.InvasionPercolation.popitem"]], "pores() (invasionpercolation method)": [[214, "openpnm.algorithms.InvasionPercolation.pores"]], "props() (invasionpercolation method)": [[215, "openpnm.algorithms.InvasionPercolation.props"]], "reset() (invasionpercolation method)": [[216, "openpnm.algorithms.InvasionPercolation.reset"]], "run() (invasionpercolation method)": [[217, "openpnm.algorithms.InvasionPercolation.run"]], "set_bc() (invasionpercolation method)": [[218, "openpnm.algorithms.InvasionPercolation.set_BC"]], "set_inlet_bc() (invasionpercolation method)": [[219, "openpnm.algorithms.InvasionPercolation.set_inlet_BC"]], "set_label() (invasionpercolation method)": [[220, "openpnm.algorithms.InvasionPercolation.set_label"]], "set_outlet_bc() (invasionpercolation method)": [[221, "openpnm.algorithms.InvasionPercolation.set_outlet_BC"]], "setdefault() (invasionpercolation method)": [[222, "openpnm.algorithms.InvasionPercolation.setdefault"]], "throats() (invasionpercolation method)": [[223, "openpnm.algorithms.InvasionPercolation.throats"]], "to_indices() (invasionpercolation method)": [[224, "openpnm.algorithms.InvasionPercolation.to_indices"]], "to_mask() (invasionpercolation method)": [[225, "openpnm.algorithms.InvasionPercolation.to_mask"]], "update() (invasionpercolation method)": [[226, "openpnm.algorithms.InvasionPercolation.update"]], "values() (invasionpercolation method)": [[227, "openpnm.algorithms.InvasionPercolation.values"]], "ohmicconduction (class in openpnm.algorithms)": [[228, "openpnm.algorithms.OhmicConduction"]], "clear() (ohmicconduction method)": [[229, "openpnm.algorithms.OhmicConduction.clear"]], "clear_bcs() (ohmicconduction method)": [[230, "openpnm.algorithms.OhmicConduction.clear_BCs"]], "clear_rate_bcs() (ohmicconduction method)": [[231, "openpnm.algorithms.OhmicConduction.clear_rate_BCs"]], "clear_value_bcs() (ohmicconduction method)": [[232, "openpnm.algorithms.OhmicConduction.clear_value_BCs"]], "copy() (ohmicconduction method)": [[233, "openpnm.algorithms.OhmicConduction.copy"]], "filter_by_label() (ohmicconduction method)": [[234, "openpnm.algorithms.OhmicConduction.filter_by_label"]], "fromkeys() (ohmicconduction method)": [[235, "openpnm.algorithms.OhmicConduction.fromkeys"]], "get() (ohmicconduction method)": [[236, "openpnm.algorithms.OhmicConduction.get"]], "get_conduit_data() (ohmicconduction method)": [[237, "openpnm.algorithms.OhmicConduction.get_conduit_data"]], "interpolate_data() (ohmicconduction method)": [[238, "openpnm.algorithms.OhmicConduction.interpolate_data"]], "items() (ohmicconduction method)": [[239, "openpnm.algorithms.OhmicConduction.items"]], "keys() (ohmicconduction method)": [[240, "openpnm.algorithms.OhmicConduction.keys"]], "labels() (ohmicconduction method)": [[241, "openpnm.algorithms.OhmicConduction.labels"]], "num_pores() (ohmicconduction method)": [[242, "openpnm.algorithms.OhmicConduction.num_pores"]], "num_throats() (ohmicconduction method)": [[243, "openpnm.algorithms.OhmicConduction.num_throats"]], "pop() (ohmicconduction method)": [[244, "openpnm.algorithms.OhmicConduction.pop"]], "popitem() (ohmicconduction method)": [[245, "openpnm.algorithms.OhmicConduction.popitem"]], "pores() (ohmicconduction method)": [[246, "openpnm.algorithms.OhmicConduction.pores"]], "props() (ohmicconduction method)": [[247, "openpnm.algorithms.OhmicConduction.props"]], "rate() (ohmicconduction method)": [[248, "openpnm.algorithms.OhmicConduction.rate"]], "run() (ohmicconduction method)": [[249, "openpnm.algorithms.OhmicConduction.run"]], "set_bc() (ohmicconduction method)": [[250, "openpnm.algorithms.OhmicConduction.set_BC"]], "set_label() (ohmicconduction method)": [[251, "openpnm.algorithms.OhmicConduction.set_label"]], "set_rate_bc() (ohmicconduction method)": [[252, "openpnm.algorithms.OhmicConduction.set_rate_BC"]], "set_source() (ohmicconduction method)": [[253, "openpnm.algorithms.OhmicConduction.set_source"]], "set_value_bc() (ohmicconduction method)": [[254, "openpnm.algorithms.OhmicConduction.set_value_BC"]], "setdefault() (ohmicconduction method)": [[255, "openpnm.algorithms.OhmicConduction.setdefault"]], "throats() (ohmicconduction method)": [[256, "openpnm.algorithms.OhmicConduction.throats"]], "to_indices() (ohmicconduction method)": [[257, "openpnm.algorithms.OhmicConduction.to_indices"]], "to_mask() (ohmicconduction method)": [[258, "openpnm.algorithms.OhmicConduction.to_mask"]], "update() (ohmicconduction method)": [[259, "openpnm.algorithms.OhmicConduction.update"]], "values() (ohmicconduction method)": [[260, "openpnm.algorithms.OhmicConduction.values"]], "reactivetransport (class in openpnm.algorithms)": [[261, "openpnm.algorithms.ReactiveTransport"]], "clear() (reactivetransport method)": [[262, "openpnm.algorithms.ReactiveTransport.clear"]], "clear_bcs() (reactivetransport method)": [[263, "openpnm.algorithms.ReactiveTransport.clear_BCs"]], "clear_rate_bcs() (reactivetransport method)": [[264, "openpnm.algorithms.ReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (reactivetransport method)": [[265, "openpnm.algorithms.ReactiveTransport.clear_value_BCs"]], "copy() (reactivetransport method)": [[266, "openpnm.algorithms.ReactiveTransport.copy"]], "filter_by_label() (reactivetransport method)": [[267, "openpnm.algorithms.ReactiveTransport.filter_by_label"]], "fromkeys() (reactivetransport method)": [[268, "openpnm.algorithms.ReactiveTransport.fromkeys"]], "get() (reactivetransport method)": [[269, "openpnm.algorithms.ReactiveTransport.get"]], "get_conduit_data() (reactivetransport method)": [[270, "openpnm.algorithms.ReactiveTransport.get_conduit_data"]], "interpolate_data() (reactivetransport method)": [[271, "openpnm.algorithms.ReactiveTransport.interpolate_data"]], "items() (reactivetransport method)": [[272, "openpnm.algorithms.ReactiveTransport.items"]], "keys() (reactivetransport method)": [[273, "openpnm.algorithms.ReactiveTransport.keys"]], "labels() (reactivetransport method)": [[274, "openpnm.algorithms.ReactiveTransport.labels"]], "num_pores() (reactivetransport method)": [[275, "openpnm.algorithms.ReactiveTransport.num_pores"]], "num_throats() (reactivetransport method)": [[276, "openpnm.algorithms.ReactiveTransport.num_throats"]], "pop() (reactivetransport method)": [[277, "openpnm.algorithms.ReactiveTransport.pop"]], "popitem() (reactivetransport method)": [[278, "openpnm.algorithms.ReactiveTransport.popitem"]], "pores() (reactivetransport method)": [[279, "openpnm.algorithms.ReactiveTransport.pores"]], "props() (reactivetransport method)": [[280, "openpnm.algorithms.ReactiveTransport.props"]], "rate() (reactivetransport method)": [[281, "openpnm.algorithms.ReactiveTransport.rate"]], "run() (reactivetransport method)": [[282, "openpnm.algorithms.ReactiveTransport.run"]], "set_bc() (reactivetransport method)": [[283, "openpnm.algorithms.ReactiveTransport.set_BC"]], "set_label() (reactivetransport method)": [[284, "openpnm.algorithms.ReactiveTransport.set_label"]], "set_rate_bc() (reactivetransport method)": [[285, "openpnm.algorithms.ReactiveTransport.set_rate_BC"]], "set_source() (reactivetransport method)": [[286, "openpnm.algorithms.ReactiveTransport.set_source"]], "set_value_bc() (reactivetransport method)": [[287, "openpnm.algorithms.ReactiveTransport.set_value_BC"]], "setdefault() (reactivetransport method)": [[288, "openpnm.algorithms.ReactiveTransport.setdefault"]], "throats() (reactivetransport method)": [[289, "openpnm.algorithms.ReactiveTransport.throats"]], "to_indices() (reactivetransport method)": [[290, "openpnm.algorithms.ReactiveTransport.to_indices"]], "to_mask() (reactivetransport method)": [[291, "openpnm.algorithms.ReactiveTransport.to_mask"]], "update() (reactivetransport method)": [[292, "openpnm.algorithms.ReactiveTransport.update"]], "values() (reactivetransport method)": [[293, "openpnm.algorithms.ReactiveTransport.values"]], "stokesflow (class in openpnm.algorithms)": [[294, "openpnm.algorithms.StokesFlow"]], "clear() (stokesflow method)": [[295, "openpnm.algorithms.StokesFlow.clear"]], "clear_bcs() (stokesflow method)": [[296, "openpnm.algorithms.StokesFlow.clear_BCs"]], "clear_rate_bcs() (stokesflow method)": [[297, "openpnm.algorithms.StokesFlow.clear_rate_BCs"]], "clear_value_bcs() (stokesflow method)": [[298, "openpnm.algorithms.StokesFlow.clear_value_BCs"]], "copy() (stokesflow method)": [[299, "openpnm.algorithms.StokesFlow.copy"]], "filter_by_label() (stokesflow method)": [[300, "openpnm.algorithms.StokesFlow.filter_by_label"]], "fromkeys() (stokesflow method)": [[301, "openpnm.algorithms.StokesFlow.fromkeys"]], "get() (stokesflow method)": [[302, "openpnm.algorithms.StokesFlow.get"]], "get_conduit_data() (stokesflow method)": [[303, "openpnm.algorithms.StokesFlow.get_conduit_data"]], "interpolate_data() (stokesflow method)": [[304, "openpnm.algorithms.StokesFlow.interpolate_data"]], "items() (stokesflow method)": [[305, "openpnm.algorithms.StokesFlow.items"]], "keys() (stokesflow method)": [[306, "openpnm.algorithms.StokesFlow.keys"]], "labels() (stokesflow method)": [[307, "openpnm.algorithms.StokesFlow.labels"]], "num_pores() (stokesflow method)": [[308, "openpnm.algorithms.StokesFlow.num_pores"]], "num_throats() (stokesflow method)": [[309, "openpnm.algorithms.StokesFlow.num_throats"]], "pop() (stokesflow method)": [[310, "openpnm.algorithms.StokesFlow.pop"]], "popitem() (stokesflow method)": [[311, "openpnm.algorithms.StokesFlow.popitem"]], "pores() (stokesflow method)": [[312, "openpnm.algorithms.StokesFlow.pores"]], "props() (stokesflow method)": [[313, "openpnm.algorithms.StokesFlow.props"]], "rate() (stokesflow method)": [[314, "openpnm.algorithms.StokesFlow.rate"]], "run() (stokesflow method)": [[315, "openpnm.algorithms.StokesFlow.run"]], "set_bc() (stokesflow method)": [[316, "openpnm.algorithms.StokesFlow.set_BC"]], "set_label() (stokesflow method)": [[317, "openpnm.algorithms.StokesFlow.set_label"]], "set_rate_bc() (stokesflow method)": [[318, "openpnm.algorithms.StokesFlow.set_rate_BC"]], "set_source() (stokesflow method)": [[319, "openpnm.algorithms.StokesFlow.set_source"]], "set_value_bc() (stokesflow method)": [[320, "openpnm.algorithms.StokesFlow.set_value_BC"]], "setdefault() (stokesflow method)": [[321, "openpnm.algorithms.StokesFlow.setdefault"]], "throats() (stokesflow method)": [[322, "openpnm.algorithms.StokesFlow.throats"]], "to_indices() (stokesflow method)": [[323, "openpnm.algorithms.StokesFlow.to_indices"]], "to_mask() (stokesflow method)": [[324, "openpnm.algorithms.StokesFlow.to_mask"]], "update() (stokesflow method)": [[325, "openpnm.algorithms.StokesFlow.update"]], "values() (stokesflow method)": [[326, "openpnm.algorithms.StokesFlow.values"]], "transientadvectiondiffusion (class in openpnm.algorithms)": [[327, "openpnm.algorithms.TransientAdvectionDiffusion"]], "clear() (transientadvectiondiffusion method)": [[328, "openpnm.algorithms.TransientAdvectionDiffusion.clear"]], "clear_bcs() (transientadvectiondiffusion method)": [[329, "openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (transientadvectiondiffusion method)": [[330, "openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientadvectiondiffusion method)": [[331, "openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs"]], "copy() (transientadvectiondiffusion method)": [[332, "openpnm.algorithms.TransientAdvectionDiffusion.copy"]], "filter_by_label() (transientadvectiondiffusion method)": [[333, "openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label"]], "fromkeys() (transientadvectiondiffusion method)": [[334, "openpnm.algorithms.TransientAdvectionDiffusion.fromkeys"]], "get() (transientadvectiondiffusion method)": [[335, "openpnm.algorithms.TransientAdvectionDiffusion.get"]], "get_conduit_data() (transientadvectiondiffusion method)": [[336, "openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data"]], "interpolate_data() (transientadvectiondiffusion method)": [[337, "openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data"]], "items() (transientadvectiondiffusion method)": [[338, "openpnm.algorithms.TransientAdvectionDiffusion.items"]], "keys() (transientadvectiondiffusion method)": [[339, "openpnm.algorithms.TransientAdvectionDiffusion.keys"]], "labels() (transientadvectiondiffusion method)": [[340, "openpnm.algorithms.TransientAdvectionDiffusion.labels"]], "num_pores() (transientadvectiondiffusion method)": [[341, "openpnm.algorithms.TransientAdvectionDiffusion.num_pores"]], "num_throats() (transientadvectiondiffusion method)": [[342, "openpnm.algorithms.TransientAdvectionDiffusion.num_throats"]], "pop() (transientadvectiondiffusion method)": [[343, "openpnm.algorithms.TransientAdvectionDiffusion.pop"]], "popitem() (transientadvectiondiffusion method)": [[344, "openpnm.algorithms.TransientAdvectionDiffusion.popitem"]], "pores() (transientadvectiondiffusion method)": [[345, "openpnm.algorithms.TransientAdvectionDiffusion.pores"]], "props() (transientadvectiondiffusion method)": [[346, "openpnm.algorithms.TransientAdvectionDiffusion.props"]], "rate() (transientadvectiondiffusion method)": [[347, "openpnm.algorithms.TransientAdvectionDiffusion.rate"]], "run() (transientadvectiondiffusion method)": [[348, "openpnm.algorithms.TransientAdvectionDiffusion.run"]], "set_bc() (transientadvectiondiffusion method)": [[349, "openpnm.algorithms.TransientAdvectionDiffusion.set_BC"]], "set_label() (transientadvectiondiffusion method)": [[350, "openpnm.algorithms.TransientAdvectionDiffusion.set_label"]], "set_outflow_bc() (transientadvectiondiffusion method)": [[351, "openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (transientadvectiondiffusion method)": [[352, "openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC"]], "set_source() (transientadvectiondiffusion method)": [[353, "openpnm.algorithms.TransientAdvectionDiffusion.set_source"]], "set_value_bc() (transientadvectiondiffusion method)": [[354, "openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC"]], "setdefault() (transientadvectiondiffusion method)": [[355, "openpnm.algorithms.TransientAdvectionDiffusion.setdefault"]], "throats() (transientadvectiondiffusion method)": [[356, "openpnm.algorithms.TransientAdvectionDiffusion.throats"]], "to_indices() (transientadvectiondiffusion method)": [[357, "openpnm.algorithms.TransientAdvectionDiffusion.to_indices"]], "to_mask() (transientadvectiondiffusion method)": [[358, "openpnm.algorithms.TransientAdvectionDiffusion.to_mask"]], "update() (transientadvectiondiffusion method)": [[359, "openpnm.algorithms.TransientAdvectionDiffusion.update"]], "values() (transientadvectiondiffusion method)": [[360, "openpnm.algorithms.TransientAdvectionDiffusion.values"]], "transientfickiandiffusion (class in openpnm.algorithms)": [[361, "openpnm.algorithms.TransientFickianDiffusion"]], "clear() (transientfickiandiffusion method)": [[362, "openpnm.algorithms.TransientFickianDiffusion.clear"]], "clear_bcs() (transientfickiandiffusion method)": [[363, "openpnm.algorithms.TransientFickianDiffusion.clear_BCs"]], "clear_rate_bcs() (transientfickiandiffusion method)": [[364, "openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientfickiandiffusion method)": [[365, "openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs"]], "copy() (transientfickiandiffusion method)": [[366, "openpnm.algorithms.TransientFickianDiffusion.copy"]], "filter_by_label() (transientfickiandiffusion method)": [[367, "openpnm.algorithms.TransientFickianDiffusion.filter_by_label"]], "fromkeys() (transientfickiandiffusion method)": [[368, "openpnm.algorithms.TransientFickianDiffusion.fromkeys"]], "get() (transientfickiandiffusion method)": [[369, "openpnm.algorithms.TransientFickianDiffusion.get"]], "get_conduit_data() (transientfickiandiffusion method)": [[370, "openpnm.algorithms.TransientFickianDiffusion.get_conduit_data"]], "interpolate_data() (transientfickiandiffusion method)": [[371, "openpnm.algorithms.TransientFickianDiffusion.interpolate_data"]], "items() (transientfickiandiffusion method)": [[372, "openpnm.algorithms.TransientFickianDiffusion.items"]], "keys() (transientfickiandiffusion method)": [[373, "openpnm.algorithms.TransientFickianDiffusion.keys"]], "labels() (transientfickiandiffusion method)": [[374, "openpnm.algorithms.TransientFickianDiffusion.labels"]], "num_pores() (transientfickiandiffusion method)": [[375, "openpnm.algorithms.TransientFickianDiffusion.num_pores"]], "num_throats() (transientfickiandiffusion method)": [[376, "openpnm.algorithms.TransientFickianDiffusion.num_throats"]], "pop() (transientfickiandiffusion method)": [[377, "openpnm.algorithms.TransientFickianDiffusion.pop"]], "popitem() (transientfickiandiffusion method)": [[378, "openpnm.algorithms.TransientFickianDiffusion.popitem"]], "pores() (transientfickiandiffusion method)": [[379, "openpnm.algorithms.TransientFickianDiffusion.pores"]], "props() (transientfickiandiffusion method)": [[380, "openpnm.algorithms.TransientFickianDiffusion.props"]], "rate() (transientfickiandiffusion method)": [[381, "openpnm.algorithms.TransientFickianDiffusion.rate"]], "run() (transientfickiandiffusion method)": [[382, "openpnm.algorithms.TransientFickianDiffusion.run"]], "set_bc() (transientfickiandiffusion method)": [[383, "openpnm.algorithms.TransientFickianDiffusion.set_BC"]], "set_label() (transientfickiandiffusion method)": [[384, "openpnm.algorithms.TransientFickianDiffusion.set_label"]], "set_rate_bc() (transientfickiandiffusion method)": [[385, "openpnm.algorithms.TransientFickianDiffusion.set_rate_BC"]], "set_source() (transientfickiandiffusion method)": [[386, "openpnm.algorithms.TransientFickianDiffusion.set_source"]], "set_value_bc() (transientfickiandiffusion method)": [[387, "openpnm.algorithms.TransientFickianDiffusion.set_value_BC"]], "setdefault() (transientfickiandiffusion method)": [[388, "openpnm.algorithms.TransientFickianDiffusion.setdefault"]], "throats() (transientfickiandiffusion method)": [[389, "openpnm.algorithms.TransientFickianDiffusion.throats"]], "to_indices() (transientfickiandiffusion method)": [[390, "openpnm.algorithms.TransientFickianDiffusion.to_indices"]], "to_mask() (transientfickiandiffusion method)": [[391, "openpnm.algorithms.TransientFickianDiffusion.to_mask"]], "update() (transientfickiandiffusion method)": [[392, "openpnm.algorithms.TransientFickianDiffusion.update"]], "values() (transientfickiandiffusion method)": [[393, "openpnm.algorithms.TransientFickianDiffusion.values"]], "transientfourierconduction (class in openpnm.algorithms)": [[394, "openpnm.algorithms.TransientFourierConduction"]], "clear() (transientfourierconduction method)": [[395, "openpnm.algorithms.TransientFourierConduction.clear"]], "clear_bcs() (transientfourierconduction method)": [[396, "openpnm.algorithms.TransientFourierConduction.clear_BCs"]], "clear_rate_bcs() (transientfourierconduction method)": [[397, "openpnm.algorithms.TransientFourierConduction.clear_rate_BCs"]], "clear_value_bcs() (transientfourierconduction method)": [[398, "openpnm.algorithms.TransientFourierConduction.clear_value_BCs"]], "copy() (transientfourierconduction method)": [[399, "openpnm.algorithms.TransientFourierConduction.copy"]], "filter_by_label() (transientfourierconduction method)": [[400, "openpnm.algorithms.TransientFourierConduction.filter_by_label"]], "fromkeys() (transientfourierconduction method)": [[401, "openpnm.algorithms.TransientFourierConduction.fromkeys"]], "get() (transientfourierconduction method)": [[402, "openpnm.algorithms.TransientFourierConduction.get"]], "get_conduit_data() (transientfourierconduction method)": [[403, "openpnm.algorithms.TransientFourierConduction.get_conduit_data"]], "interpolate_data() (transientfourierconduction method)": [[404, "openpnm.algorithms.TransientFourierConduction.interpolate_data"]], "items() (transientfourierconduction method)": [[405, "openpnm.algorithms.TransientFourierConduction.items"]], "keys() (transientfourierconduction method)": [[406, "openpnm.algorithms.TransientFourierConduction.keys"]], "labels() (transientfourierconduction method)": [[407, "openpnm.algorithms.TransientFourierConduction.labels"]], "num_pores() (transientfourierconduction method)": [[408, "openpnm.algorithms.TransientFourierConduction.num_pores"]], "num_throats() (transientfourierconduction method)": [[409, "openpnm.algorithms.TransientFourierConduction.num_throats"]], "pop() (transientfourierconduction method)": [[410, "openpnm.algorithms.TransientFourierConduction.pop"]], "popitem() (transientfourierconduction method)": [[411, "openpnm.algorithms.TransientFourierConduction.popitem"]], "pores() (transientfourierconduction method)": [[412, "openpnm.algorithms.TransientFourierConduction.pores"]], "props() (transientfourierconduction method)": [[413, "openpnm.algorithms.TransientFourierConduction.props"]], "rate() (transientfourierconduction method)": [[414, "openpnm.algorithms.TransientFourierConduction.rate"]], "run() (transientfourierconduction method)": [[415, "openpnm.algorithms.TransientFourierConduction.run"]], "set_bc() (transientfourierconduction method)": [[416, "openpnm.algorithms.TransientFourierConduction.set_BC"]], "set_label() (transientfourierconduction method)": [[417, "openpnm.algorithms.TransientFourierConduction.set_label"]], "set_rate_bc() (transientfourierconduction method)": [[418, "openpnm.algorithms.TransientFourierConduction.set_rate_BC"]], "set_source() (transientfourierconduction method)": [[419, "openpnm.algorithms.TransientFourierConduction.set_source"]], "set_value_bc() (transientfourierconduction method)": [[420, "openpnm.algorithms.TransientFourierConduction.set_value_BC"]], "setdefault() (transientfourierconduction method)": [[421, "openpnm.algorithms.TransientFourierConduction.setdefault"]], "throats() (transientfourierconduction method)": [[422, "openpnm.algorithms.TransientFourierConduction.throats"]], "to_indices() (transientfourierconduction method)": [[423, "openpnm.algorithms.TransientFourierConduction.to_indices"]], "to_mask() (transientfourierconduction method)": [[424, "openpnm.algorithms.TransientFourierConduction.to_mask"]], "update() (transientfourierconduction method)": [[425, "openpnm.algorithms.TransientFourierConduction.update"]], "values() (transientfourierconduction method)": [[426, "openpnm.algorithms.TransientFourierConduction.values"]], "transientreactivetransport (class in openpnm.algorithms)": [[427, "openpnm.algorithms.TransientReactiveTransport"]], "clear() (transientreactivetransport method)": [[428, "openpnm.algorithms.TransientReactiveTransport.clear"]], "clear_bcs() (transientreactivetransport method)": [[429, "openpnm.algorithms.TransientReactiveTransport.clear_BCs"]], "clear_rate_bcs() (transientreactivetransport method)": [[430, "openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (transientreactivetransport method)": [[431, "openpnm.algorithms.TransientReactiveTransport.clear_value_BCs"]], "copy() (transientreactivetransport method)": [[432, "openpnm.algorithms.TransientReactiveTransport.copy"]], "filter_by_label() (transientreactivetransport method)": [[433, "openpnm.algorithms.TransientReactiveTransport.filter_by_label"]], "fromkeys() (transientreactivetransport method)": [[434, "openpnm.algorithms.TransientReactiveTransport.fromkeys"]], "get() (transientreactivetransport method)": [[435, "openpnm.algorithms.TransientReactiveTransport.get"]], "get_conduit_data() (transientreactivetransport method)": [[436, "openpnm.algorithms.TransientReactiveTransport.get_conduit_data"]], "interpolate_data() (transientreactivetransport method)": [[437, "openpnm.algorithms.TransientReactiveTransport.interpolate_data"]], "items() (transientreactivetransport method)": [[438, "openpnm.algorithms.TransientReactiveTransport.items"]], "keys() (transientreactivetransport method)": [[439, "openpnm.algorithms.TransientReactiveTransport.keys"]], "labels() (transientreactivetransport method)": [[440, "openpnm.algorithms.TransientReactiveTransport.labels"]], "num_pores() (transientreactivetransport method)": [[441, "openpnm.algorithms.TransientReactiveTransport.num_pores"]], "num_throats() (transientreactivetransport method)": [[442, "openpnm.algorithms.TransientReactiveTransport.num_throats"]], "pop() (transientreactivetransport method)": [[443, "openpnm.algorithms.TransientReactiveTransport.pop"]], "popitem() (transientreactivetransport method)": [[444, "openpnm.algorithms.TransientReactiveTransport.popitem"]], "pores() (transientreactivetransport method)": [[445, "openpnm.algorithms.TransientReactiveTransport.pores"]], "props() (transientreactivetransport method)": [[446, "openpnm.algorithms.TransientReactiveTransport.props"]], "rate() (transientreactivetransport method)": [[447, "openpnm.algorithms.TransientReactiveTransport.rate"]], "run() (transientreactivetransport method)": [[448, "openpnm.algorithms.TransientReactiveTransport.run"]], "set_bc() (transientreactivetransport method)": [[449, "openpnm.algorithms.TransientReactiveTransport.set_BC"]], "set_label() (transientreactivetransport method)": [[450, "openpnm.algorithms.TransientReactiveTransport.set_label"]], "set_rate_bc() (transientreactivetransport method)": [[451, "openpnm.algorithms.TransientReactiveTransport.set_rate_BC"]], "set_source() (transientreactivetransport method)": [[452, "openpnm.algorithms.TransientReactiveTransport.set_source"]], "set_value_bc() (transientreactivetransport method)": [[453, "openpnm.algorithms.TransientReactiveTransport.set_value_BC"]], "setdefault() (transientreactivetransport method)": [[454, "openpnm.algorithms.TransientReactiveTransport.setdefault"]], "throats() (transientreactivetransport method)": [[455, "openpnm.algorithms.TransientReactiveTransport.throats"]], "to_indices() (transientreactivetransport method)": [[456, "openpnm.algorithms.TransientReactiveTransport.to_indices"]], "to_mask() (transientreactivetransport method)": [[457, "openpnm.algorithms.TransientReactiveTransport.to_mask"]], "update() (transientreactivetransport method)": [[458, "openpnm.algorithms.TransientReactiveTransport.update"]], "values() (transientreactivetransport method)": [[459, "openpnm.algorithms.TransientReactiveTransport.values"]], "transport (class in openpnm.algorithms)": [[460, "openpnm.algorithms.Transport"]], "clear() (transport method)": [[461, "openpnm.algorithms.Transport.clear"]], "clear_bcs() (transport method)": [[462, "openpnm.algorithms.Transport.clear_BCs"]], "clear_rate_bcs() (transport method)": [[463, "openpnm.algorithms.Transport.clear_rate_BCs"]], "clear_value_bcs() (transport method)": [[464, "openpnm.algorithms.Transport.clear_value_BCs"]], "copy() (transport method)": [[465, "openpnm.algorithms.Transport.copy"]], "filter_by_label() (transport method)": [[466, "openpnm.algorithms.Transport.filter_by_label"]], "fromkeys() (transport method)": [[467, "openpnm.algorithms.Transport.fromkeys"]], "get() (transport method)": [[468, "openpnm.algorithms.Transport.get"]], "get_conduit_data() (transport method)": [[469, "openpnm.algorithms.Transport.get_conduit_data"]], "interpolate_data() (transport method)": [[470, "openpnm.algorithms.Transport.interpolate_data"]], "items() (transport method)": [[471, "openpnm.algorithms.Transport.items"]], "keys() (transport method)": [[472, "openpnm.algorithms.Transport.keys"]], "labels() (transport method)": [[473, "openpnm.algorithms.Transport.labels"]], "num_pores() (transport method)": [[474, "openpnm.algorithms.Transport.num_pores"]], "num_throats() (transport method)": [[475, "openpnm.algorithms.Transport.num_throats"]], "pop() (transport method)": [[476, "openpnm.algorithms.Transport.pop"]], "popitem() (transport method)": [[477, "openpnm.algorithms.Transport.popitem"]], "pores() (transport method)": [[478, "openpnm.algorithms.Transport.pores"]], "props() (transport method)": [[479, "openpnm.algorithms.Transport.props"]], "rate() (transport method)": [[480, "openpnm.algorithms.Transport.rate"]], "run() (transport method)": [[481, "openpnm.algorithms.Transport.run"]], "set_bc() (transport method)": [[482, "openpnm.algorithms.Transport.set_BC"]], "set_label() (transport method)": [[483, "openpnm.algorithms.Transport.set_label"]], "set_rate_bc() (transport method)": [[484, "openpnm.algorithms.Transport.set_rate_BC"]], "set_value_bc() (transport method)": [[485, "openpnm.algorithms.Transport.set_value_BC"]], "setdefault() (transport method)": [[486, "openpnm.algorithms.Transport.setdefault"]], "throats() (transport method)": [[487, "openpnm.algorithms.Transport.throats"]], "to_indices() (transport method)": [[488, "openpnm.algorithms.Transport.to_indices"]], "to_mask() (transport method)": [[489, "openpnm.algorithms.Transport.to_mask"]], "update() (transport method)": [[490, "openpnm.algorithms.Transport.update"]], "values() (transport method)": [[491, "openpnm.algorithms.Transport.values"]], "openpnm.contrib": [[492, "module-openpnm.contrib"]], "multiphase (class in openpnm.contrib)": [[493, "openpnm.contrib.MultiPhase"]], "add_model() (multiphase method)": [[494, "openpnm.contrib.MultiPhase.add_model"]], "add_model_collection() (multiphase method)": [[495, "openpnm.contrib.MultiPhase.add_model_collection"]], "add_phases() (multiphase method)": [[496, "openpnm.contrib.MultiPhase.add_phases"]], "clear() (multiphase method)": [[497, "openpnm.contrib.MultiPhase.clear"]], "copy() (multiphase method)": [[498, "openpnm.contrib.MultiPhase.copy"]], "filter_by_label() (multiphase method)": [[499, "openpnm.contrib.MultiPhase.filter_by_label"]], "fromkeys() (multiphase method)": [[500, "openpnm.contrib.MultiPhase.fromkeys"]], "get() (multiphase method)": [[501, "openpnm.contrib.MultiPhase.get"]], "get_conduit_data() (multiphase method)": [[502, "openpnm.contrib.MultiPhase.get_conduit_data"]], "interpolate_data() (multiphase method)": [[503, "openpnm.contrib.MultiPhase.interpolate_data"]], "items() (multiphase method)": [[504, "openpnm.contrib.MultiPhase.items"]], "keys() (multiphase method)": [[505, "openpnm.contrib.MultiPhase.keys"]], "labels() (multiphase method)": [[506, "openpnm.contrib.MultiPhase.labels"]], "num_pores() (multiphase method)": [[507, "openpnm.contrib.MultiPhase.num_pores"]], "num_throats() (multiphase method)": [[508, "openpnm.contrib.MultiPhase.num_throats"]], "pop() (multiphase method)": [[509, "openpnm.contrib.MultiPhase.pop"]], "popitem() (multiphase method)": [[510, "openpnm.contrib.MultiPhase.popitem"]], "pores() (multiphase method)": [[511, "openpnm.contrib.MultiPhase.pores"]], "props() (multiphase method)": [[512, "openpnm.contrib.MultiPhase.props"]], "regenerate_models() (multiphase method)": [[513, "openpnm.contrib.MultiPhase.regenerate_models"]], "run_model() (multiphase method)": [[514, "openpnm.contrib.MultiPhase.run_model"]], "set_binary_partition_coef() (multiphase method)": [[515, "openpnm.contrib.MultiPhase.set_binary_partition_coef"]], "set_label() (multiphase method)": [[516, "openpnm.contrib.MultiPhase.set_label"]], "set_occupancy() (multiphase method)": [[517, "openpnm.contrib.MultiPhase.set_occupancy"]], "setdefault() (multiphase method)": [[518, "openpnm.contrib.MultiPhase.setdefault"]], "throats() (multiphase method)": [[519, "openpnm.contrib.MultiPhase.throats"]], "to_indices() (multiphase method)": [[520, "openpnm.contrib.MultiPhase.to_indices"]], "to_mask() (multiphase method)": [[521, "openpnm.contrib.MultiPhase.to_mask"]], "update() (multiphase method)": [[522, "openpnm.contrib.MultiPhase.update"]], "values() (multiphase method)": [[523, "openpnm.contrib.MultiPhase.values"]], "transientmultiphysics (class in openpnm.contrib)": [[524, "openpnm.contrib.TransientMultiPhysics"]], "clear() (transientmultiphysics method)": [[525, "openpnm.contrib.TransientMultiPhysics.clear"]], "clear_bcs() (transientmultiphysics method)": [[526, "openpnm.contrib.TransientMultiPhysics.clear_BCs"]], "copy() (transientmultiphysics method)": [[527, "openpnm.contrib.TransientMultiPhysics.copy"]], "filter_by_label() (transientmultiphysics method)": [[528, "openpnm.contrib.TransientMultiPhysics.filter_by_label"]], "fromkeys() (transientmultiphysics method)": [[529, "openpnm.contrib.TransientMultiPhysics.fromkeys"]], "get() (transientmultiphysics method)": [[530, "openpnm.contrib.TransientMultiPhysics.get"]], "get_conduit_data() (transientmultiphysics method)": [[531, "openpnm.contrib.TransientMultiPhysics.get_conduit_data"]], "interpolate_data() (transientmultiphysics method)": [[532, "openpnm.contrib.TransientMultiPhysics.interpolate_data"]], "items() (transientmultiphysics method)": [[533, "openpnm.contrib.TransientMultiPhysics.items"]], "keys() (transientmultiphysics method)": [[534, "openpnm.contrib.TransientMultiPhysics.keys"]], "labels() (transientmultiphysics method)": [[535, "openpnm.contrib.TransientMultiPhysics.labels"]], "num_pores() (transientmultiphysics method)": [[536, "openpnm.contrib.TransientMultiPhysics.num_pores"]], "num_throats() (transientmultiphysics method)": [[537, "openpnm.contrib.TransientMultiPhysics.num_throats"]], "pop() (transientmultiphysics method)": [[538, "openpnm.contrib.TransientMultiPhysics.pop"]], "popitem() (transientmultiphysics method)": [[539, "openpnm.contrib.TransientMultiPhysics.popitem"]], "pores() (transientmultiphysics method)": [[540, "openpnm.contrib.TransientMultiPhysics.pores"]], "props() (transientmultiphysics method)": [[541, "openpnm.contrib.TransientMultiPhysics.props"]], "run() (transientmultiphysics method)": [[542, "openpnm.contrib.TransientMultiPhysics.run"]], "set_bc() (transientmultiphysics method)": [[543, "openpnm.contrib.TransientMultiPhysics.set_BC"]], "set_label() (transientmultiphysics method)": [[544, "openpnm.contrib.TransientMultiPhysics.set_label"]], "setdefault() (transientmultiphysics method)": [[545, "openpnm.contrib.TransientMultiPhysics.setdefault"]], "throats() (transientmultiphysics method)": [[546, "openpnm.contrib.TransientMultiPhysics.throats"]], "to_indices() (transientmultiphysics method)": [[547, "openpnm.contrib.TransientMultiPhysics.to_indices"]], "to_mask() (transientmultiphysics method)": [[548, "openpnm.contrib.TransientMultiPhysics.to_mask"]], "update() (transientmultiphysics method)": [[549, "openpnm.contrib.TransientMultiPhysics.update"]], "values() (transientmultiphysics method)": [[550, "openpnm.contrib.TransientMultiPhysics.values"]], "multiphase_diffusion() (in module openpnm.contrib)": [[551, "openpnm.contrib.multiphase_diffusion"]], "openpnm.core": [[552, "module-openpnm.core"]], "base2 (class in openpnm.core)": [[553, "openpnm.core.Base2"]], "clear() (base2 method)": [[554, "openpnm.core.Base2.clear"]], "copy() (base2 method)": [[555, "openpnm.core.Base2.copy"]], "fromkeys() (base2 method)": [[556, "openpnm.core.Base2.fromkeys"]], "get() (base2 method)": [[557, "openpnm.core.Base2.get"]], "get_conduit_data() (base2 method)": [[558, "openpnm.core.Base2.get_conduit_data"]], "interpolate_data() (base2 method)": [[559, "openpnm.core.Base2.interpolate_data"]], "items() (base2 method)": [[560, "openpnm.core.Base2.items"]], "keys() (base2 method)": [[561, "openpnm.core.Base2.keys"]], "pop() (base2 method)": [[562, "openpnm.core.Base2.pop"]], "popitem() (base2 method)": [[563, "openpnm.core.Base2.popitem"]], "props() (base2 method)": [[564, "openpnm.core.Base2.props"]], "setdefault() (base2 method)": [[565, "openpnm.core.Base2.setdefault"]], "to_indices() (base2 method)": [[566, "openpnm.core.Base2.to_indices"]], "to_mask() (base2 method)": [[567, "openpnm.core.Base2.to_mask"]], "update() (base2 method)": [[568, "openpnm.core.Base2.update"]], "values() (base2 method)": [[569, "openpnm.core.Base2.values"]], "domain (class in openpnm.core)": [[570, "openpnm.core.Domain"]], "add_model() (domain method)": [[571, "openpnm.core.Domain.add_model"]], "add_model_collection() (domain method)": [[572, "openpnm.core.Domain.add_model_collection"]], "clear() (domain method)": [[573, "openpnm.core.Domain.clear"]], "copy() (domain method)": [[574, "openpnm.core.Domain.copy"]], "filter_by_label() (domain method)": [[575, "openpnm.core.Domain.filter_by_label"]], "fromkeys() (domain method)": [[576, "openpnm.core.Domain.fromkeys"]], "get() (domain method)": [[577, "openpnm.core.Domain.get"]], "get_conduit_data() (domain method)": [[578, "openpnm.core.Domain.get_conduit_data"]], "interpolate_data() (domain method)": [[579, "openpnm.core.Domain.interpolate_data"]], "items() (domain method)": [[580, "openpnm.core.Domain.items"]], "keys() (domain method)": [[581, "openpnm.core.Domain.keys"]], "labels() (domain method)": [[582, "openpnm.core.Domain.labels"]], "num_pores() (domain method)": [[583, "openpnm.core.Domain.num_pores"]], "num_throats() (domain method)": [[584, "openpnm.core.Domain.num_throats"]], "pop() (domain method)": [[585, "openpnm.core.Domain.pop"]], "popitem() (domain method)": [[586, "openpnm.core.Domain.popitem"]], "pores() (domain method)": [[587, "openpnm.core.Domain.pores"]], "props() (domain method)": [[588, "openpnm.core.Domain.props"]], "regenerate_models() (domain method)": [[589, "openpnm.core.Domain.regenerate_models"]], "run_model() (domain method)": [[590, "openpnm.core.Domain.run_model"]], "set_label() (domain method)": [[591, "openpnm.core.Domain.set_label"]], "setdefault() (domain method)": [[592, "openpnm.core.Domain.setdefault"]], "throats() (domain method)": [[593, "openpnm.core.Domain.throats"]], "to_indices() (domain method)": [[594, "openpnm.core.Domain.to_indices"]], "to_mask() (domain method)": [[595, "openpnm.core.Domain.to_mask"]], "update() (domain method)": [[596, "openpnm.core.Domain.update"]], "values() (domain method)": [[597, "openpnm.core.Domain.values"]], "labelmixin (class in openpnm.core)": [[598, "openpnm.core.LabelMixin"]], "filter_by_label() (labelmixin method)": [[599, "openpnm.core.LabelMixin.filter_by_label"]], "labels() (labelmixin method)": [[600, "openpnm.core.LabelMixin.labels"]], "num_pores() (labelmixin method)": [[601, "openpnm.core.LabelMixin.num_pores"]], "num_throats() (labelmixin method)": [[602, "openpnm.core.LabelMixin.num_throats"]], "pores() (labelmixin method)": [[603, "openpnm.core.LabelMixin.pores"]], "set_label() (labelmixin method)": [[604, "openpnm.core.LabelMixin.set_label"]], "throats() (labelmixin method)": [[605, "openpnm.core.LabelMixin.throats"]], "modelwrapper (class in openpnm.core)": [[606, "openpnm.core.ModelWrapper"]], "__call__() (modelwrapper method)": [[607, "openpnm.core.ModelWrapper.__call__"]], "clear() (modelwrapper method)": [[608, "openpnm.core.ModelWrapper.clear"]], "copy() (modelwrapper method)": [[609, "openpnm.core.ModelWrapper.copy"]], "fromkeys() (modelwrapper method)": [[610, "openpnm.core.ModelWrapper.fromkeys"]], "get() (modelwrapper method)": [[611, "openpnm.core.ModelWrapper.get"]], "items() (modelwrapper method)": [[612, "openpnm.core.ModelWrapper.items"]], "keys() (modelwrapper method)": [[613, "openpnm.core.ModelWrapper.keys"]], "pop() (modelwrapper method)": [[614, "openpnm.core.ModelWrapper.pop"]], "popitem() (modelwrapper method)": [[615, "openpnm.core.ModelWrapper.popitem"]], "setdefault() (modelwrapper method)": [[616, "openpnm.core.ModelWrapper.setdefault"]], "update() (modelwrapper method)": [[617, "openpnm.core.ModelWrapper.update"]], "values() (modelwrapper method)": [[618, "openpnm.core.ModelWrapper.values"]], "modelsdict (class in openpnm.core)": [[619, "openpnm.core.ModelsDict"]], "clear() (modelsdict method)": [[620, "openpnm.core.ModelsDict.clear"]], "copy() (modelsdict method)": [[621, "openpnm.core.ModelsDict.copy"]], "dependency_graph() (modelsdict method)": [[622, "openpnm.core.ModelsDict.dependency_graph"]], "dependency_list() (modelsdict method)": [[623, "openpnm.core.ModelsDict.dependency_list"]], "dependency_map() (modelsdict method)": [[624, "openpnm.core.ModelsDict.dependency_map"]], "fromkeys() (modelsdict method)": [[625, "openpnm.core.ModelsDict.fromkeys"]], "get() (modelsdict method)": [[626, "openpnm.core.ModelsDict.get"]], "items() (modelsdict method)": [[627, "openpnm.core.ModelsDict.items"]], "keys() (modelsdict method)": [[628, "openpnm.core.ModelsDict.keys"]], "pop() (modelsdict method)": [[629, "openpnm.core.ModelsDict.pop"]], "popitem() (modelsdict method)": [[630, "openpnm.core.ModelsDict.popitem"]], "setdefault() (modelsdict method)": [[631, "openpnm.core.ModelsDict.setdefault"]], "update() (modelsdict method)": [[632, "openpnm.core.ModelsDict.update"]], "values() (modelsdict method)": [[633, "openpnm.core.ModelsDict.values"]], "modelsmixin2 (class in openpnm.core)": [[634, "openpnm.core.ModelsMixin2"]], "add_model() (modelsmixin2 method)": [[635, "openpnm.core.ModelsMixin2.add_model"]], "add_model_collection() (modelsmixin2 method)": [[636, "openpnm.core.ModelsMixin2.add_model_collection"]], "regenerate_models() (modelsmixin2 method)": [[637, "openpnm.core.ModelsMixin2.regenerate_models"]], "run_model() (modelsmixin2 method)": [[638, "openpnm.core.ModelsMixin2.run_model"]], "parsermixin (class in openpnm.core)": [[639, "openpnm.core.ParserMixin"]], "openpnm.integrators": [[640, "module-openpnm.integrators"]], "integrator (class in openpnm.integrators)": [[641, "openpnm.integrators.Integrator"]], "scipyrk45 (class in openpnm.integrators)": [[642, "openpnm.integrators.ScipyRK45"]], "solve() (scipyrk45 method)": [[643, "openpnm.integrators.ScipyRK45.solve"]], "openpnm.io": [[644, "module-openpnm.io"]], "network_from_csv() (in module openpnm.io)": [[645, "openpnm.io.network_from_csv"]], "network_from_jsongraph() (in module openpnm.io)": [[646, "openpnm.io.network_from_jsongraph"]], "network_from_marock() (in module openpnm.io)": [[647, "openpnm.io.network_from_marock"]], "network_from_networkx() (in module openpnm.io)": [[648, "openpnm.io.network_from_networkx"]], "network_from_pergeos() (in module openpnm.io)": [[649, "openpnm.io.network_from_pergeos"]], "network_from_porespy() (in module openpnm.io)": [[650, "openpnm.io.network_from_porespy"]], "network_from_statoil() (in module openpnm.io)": [[651, "openpnm.io.network_from_statoil"]], "network_to_comsol() (in module openpnm.io)": [[652, "openpnm.io.network_to_comsol"]], "network_to_csv() (in module openpnm.io)": [[653, "openpnm.io.network_to_csv"]], "network_to_jsongraph() (in module openpnm.io)": [[654, "openpnm.io.network_to_jsongraph"]], "network_to_networkx() (in module openpnm.io)": [[655, "openpnm.io.network_to_networkx"]], "network_to_pandas() (in module openpnm.io)": [[656, "openpnm.io.network_to_pandas"]], "network_to_pergeos() (in module openpnm.io)": [[657, "openpnm.io.network_to_pergeos"]], "network_to_salome() (in module openpnm.io)": [[658, "openpnm.io.network_to_salome"]], "network_to_stl() (in module openpnm.io)": [[659, "openpnm.io.network_to_stl"]], "print_hdf5() (in module openpnm.io)": [[660, "openpnm.io.print_hdf5"]], "project_to_csv() (in module openpnm.io)": [[661, "openpnm.io.project_to_csv"]], "project_to_dict() (in module openpnm.io)": [[662, "openpnm.io.project_to_dict"]], "project_to_hdf5() (in module openpnm.io)": [[663, "openpnm.io.project_to_hdf5"]], "project_to_pandas() (in module openpnm.io)": [[664, "openpnm.io.project_to_pandas"]], "project_to_paraview() (in module openpnm.io)": [[665, "openpnm.io.project_to_paraview"]], "project_to_vtk() (in module openpnm.io)": [[666, "openpnm.io.project_to_vtk"]], "project_to_xdmf() (in module openpnm.io)": [[667, "openpnm.io.project_to_xdmf"]], "openpnm.models": [[668, "module-openpnm.models"]], "openpnm.models.collections": [[669, "module-openpnm.models.collections"]], "openpnm.models.collections.geometry": [[670, "module-openpnm.models.collections.geometry"]], "circles_and_rectangles (in module openpnm.models.collections.geometry)": [[671, "openpnm.models.collections.geometry.circles_and_rectangles"]], "cones_and_cylinders (in module openpnm.models.collections.geometry)": [[672, "openpnm.models.collections.geometry.cones_and_cylinders"]], "cubes_and_cuboids (in module openpnm.models.collections.geometry)": [[673, "openpnm.models.collections.geometry.cubes_and_cuboids"]], "pyramids_and_cuboids (in module openpnm.models.collections.geometry)": [[674, "openpnm.models.collections.geometry.pyramids_and_cuboids"]], "spheres_and_cylinders (in module openpnm.models.collections.geometry)": [[675, "openpnm.models.collections.geometry.spheres_and_cylinders"]], "squares_and_rectangles (in module openpnm.models.collections.geometry)": [[676, "openpnm.models.collections.geometry.squares_and_rectangles"]], "trapezoids_and_rectangles (in module openpnm.models.collections.geometry)": [[677, "openpnm.models.collections.geometry.trapezoids_and_rectangles"]], "openpnm.models.collections.network": [[678, "module-openpnm.models.collections.network"]], "openpnm.models.collections.phase": [[679, "module-openpnm.models.collections.phase"]], "air (in module openpnm.models.collections.phase)": [[680, "openpnm.models.collections.phase.air"]], "openpnm.models.collections.phase.gas": [[681, "module-openpnm.models.collections.phase.gas"]], "openpnm.models.collections.phase.liquid": [[682, "module-openpnm.models.collections.phase.liquid"]], "mercury (in module openpnm.models.collections.phase)": [[683, "openpnm.models.collections.phase.mercury"]], "water (in module openpnm.models.collections.phase)": [[684, "openpnm.models.collections.phase.water"]], "openpnm.models.collections.physics": [[685, "module-openpnm.models.collections.physics"]], "basic (in module openpnm.models.collections.physics)": [[686, "openpnm.models.collections.physics.basic"]], "standard (in module openpnm.models.collections.physics)": [[687, "openpnm.models.collections.physics.standard"]], "openpnm.models.geometry": [[688, "module-openpnm.models.geometry"]], "openpnm.models.geometry.conduit_lengths": [[689, "module-openpnm.models.geometry.conduit_lengths"]], "circles_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[690, "openpnm.models.geometry.conduit_lengths.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[691, "openpnm.models.geometry.conduit_lengths.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[692, "openpnm.models.geometry.conduit_lengths.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[693, "openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[694, "openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[695, "openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.conduit_lengths)": [[696, "openpnm.models.geometry.conduit_lengths.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.conduit_lengths)": [[697, "openpnm.models.geometry.conduit_lengths.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.conduit_lengths)": [[698, "openpnm.models.geometry.conduit_lengths.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[699, "openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[700, "openpnm.models.geometry.conduit_lengths.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[701, "openpnm.models.geometry.conduit_lengths.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[702, "openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[703, "module-openpnm.models.geometry.diffusive_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[704, "openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[705, "openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[706, "openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[707, "openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[708, "openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[709, "openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.diffusive_size_factors)": [[710, "openpnm.models.geometry.diffusive_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.diffusive_size_factors)": [[711, "openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.diffusive_size_factors)": [[712, "openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.diffusive_size_factors)": [[713, "openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[714, "openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[715, "openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[716, "openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[717, "openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[718, "module-openpnm.models.geometry.hydraulic_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[719, "openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[720, "openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[721, "openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[722, "openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[723, "openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[724, "openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.hydraulic_size_factors)": [[725, "openpnm.models.geometry.hydraulic_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[726, "openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[727, "openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.hydraulic_size_factors)": [[728, "openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[729, "openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[730, "openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[731, "openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[732, "openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[733, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "circle() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[734, "openpnm.models.geometry.pore_cross_sectional_area.circle"]], "cone() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[735, "openpnm.models.geometry.pore_cross_sectional_area.cone"]], "cube() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[736, "openpnm.models.geometry.pore_cross_sectional_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[737, "openpnm.models.geometry.pore_cross_sectional_area.sphere"]], "square() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[738, "openpnm.models.geometry.pore_cross_sectional_area.square"]], "openpnm.models.geometry.pore_seed": [[739, "module-openpnm.models.geometry.pore_seed"]], "random() (in module openpnm.models.geometry.pore_seed)": [[740, "openpnm.models.geometry.pore_seed.random"]], "spatially_correlated() (in module openpnm.models.geometry.pore_seed)": [[741, "openpnm.models.geometry.pore_seed.spatially_correlated"]], "openpnm.models.geometry.pore_size": [[742, "module-openpnm.models.geometry.pore_size"]], "equivalent_diameter() (in module openpnm.models.geometry.pore_size)": [[743, "openpnm.models.geometry.pore_size.equivalent_diameter"]], "from_neighbor_throats() (in module openpnm.models.geometry.pore_size)": [[744, "openpnm.models.geometry.pore_size.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.geometry.pore_size)": [[745, "openpnm.models.geometry.pore_size.generic_distribution"]], "largest_sphere() (in module openpnm.models.geometry.pore_size)": [[746, "openpnm.models.geometry.pore_size.largest_sphere"]], "normal() (in module openpnm.models.geometry.pore_size)": [[747, "openpnm.models.geometry.pore_size.normal"]], "random() (in module openpnm.models.geometry.pore_size)": [[748, "openpnm.models.geometry.pore_size.random"]], "weibull() (in module openpnm.models.geometry.pore_size)": [[749, "openpnm.models.geometry.pore_size.weibull"]], "openpnm.models.geometry.pore_surface_area": [[750, "module-openpnm.models.geometry.pore_surface_area"]], "circle() (in module openpnm.models.geometry.pore_surface_area)": [[751, "openpnm.models.geometry.pore_surface_area.circle"]], "cube() (in module openpnm.models.geometry.pore_surface_area)": [[752, "openpnm.models.geometry.pore_surface_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_surface_area)": [[753, "openpnm.models.geometry.pore_surface_area.sphere"]], "square() (in module openpnm.models.geometry.pore_surface_area)": [[754, "openpnm.models.geometry.pore_surface_area.square"]], "openpnm.models.geometry.pore_volume": [[755, "module-openpnm.models.geometry.pore_volume"]], "circle() (in module openpnm.models.geometry.pore_volume)": [[756, "openpnm.models.geometry.pore_volume.circle"]], "cube() (in module openpnm.models.geometry.pore_volume)": [[757, "openpnm.models.geometry.pore_volume.cube"]], "effective() (in module openpnm.models.geometry.pore_volume)": [[758, "openpnm.models.geometry.pore_volume.effective"]], "sphere() (in module openpnm.models.geometry.pore_volume)": [[759, "openpnm.models.geometry.pore_volume.sphere"]], "square() (in module openpnm.models.geometry.pore_volume)": [[760, "openpnm.models.geometry.pore_volume.square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[761, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "jenkins_rao() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[762, "openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao"]], "mason_morrow() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[763, "openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[764, "module-openpnm.models.geometry.throat_centroid"]], "pore_coords() (in module openpnm.models.geometry.throat_centroid)": [[765, "openpnm.models.geometry.throat_centroid.pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[766, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "cuboid() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[767, "openpnm.models.geometry.throat_cross_sectional_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[768, "openpnm.models.geometry.throat_cross_sectional_area.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[769, "openpnm.models.geometry.throat_cross_sectional_area.rectangle"]], "openpnm.models.geometry.throat_endpoints": [[770, "module-openpnm.models.geometry.throat_endpoints"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_endpoints)": [[771, "openpnm.models.geometry.throat_endpoints.spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[772, "module-openpnm.models.geometry.throat_length"]], "circles_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[773, "openpnm.models.geometry.throat_length.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[774, "openpnm.models.geometry.throat_length.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[775, "openpnm.models.geometry.throat_length.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[776, "openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[777, "openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[778, "openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.throat_length)": [[779, "openpnm.models.geometry.throat_length.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.throat_length)": [[780, "openpnm.models.geometry.throat_length.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.throat_length)": [[781, "openpnm.models.geometry.throat_length.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[782, "openpnm.models.geometry.throat_length.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[783, "openpnm.models.geometry.throat_length.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[784, "openpnm.models.geometry.throat_length.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[785, "openpnm.models.geometry.throat_length.trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[786, "module-openpnm.models.geometry.throat_perimeter"]], "cuboid() (in module openpnm.models.geometry.throat_perimeter)": [[787, "openpnm.models.geometry.throat_perimeter.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_perimeter)": [[788, "openpnm.models.geometry.throat_perimeter.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_perimeter)": [[789, "openpnm.models.geometry.throat_perimeter.rectangle"]], "openpnm.models.geometry.throat_seed": [[790, "module-openpnm.models.geometry.throat_seed"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_seed)": [[791, "openpnm.models.geometry.throat_seed.from_neighbor_pores"]], "random() (in module openpnm.models.geometry.throat_seed)": [[792, "openpnm.models.geometry.throat_seed.random"]], "openpnm.models.geometry.throat_size": [[793, "module-openpnm.models.geometry.throat_size"]], "equivalent_diameter() (in module openpnm.models.geometry.throat_size)": [[794, "openpnm.models.geometry.throat_size.equivalent_diameter"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_size)": [[795, "openpnm.models.geometry.throat_size.from_neighbor_pores"]], "generic_distribution() (in module openpnm.models.geometry.throat_size)": [[796, "openpnm.models.geometry.throat_size.generic_distribution"]], "normal() (in module openpnm.models.geometry.throat_size)": [[797, "openpnm.models.geometry.throat_size.normal"]], "random() (in module openpnm.models.geometry.throat_size)": [[798, "openpnm.models.geometry.throat_size.random"]], "weibull() (in module openpnm.models.geometry.throat_size)": [[799, "openpnm.models.geometry.throat_size.weibull"]], "openpnm.models.geometry.throat_surface_area": [[800, "module-openpnm.models.geometry.throat_surface_area"]], "cuboid() (in module openpnm.models.geometry.throat_surface_area)": [[801, "openpnm.models.geometry.throat_surface_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_surface_area)": [[802, "openpnm.models.geometry.throat_surface_area.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_surface_area)": [[803, "openpnm.models.geometry.throat_surface_area.extrusion"]], "rectangle() (in module openpnm.models.geometry.throat_surface_area)": [[804, "openpnm.models.geometry.throat_surface_area.rectangle"]], "openpnm.models.geometry.throat_vector": [[805, "module-openpnm.models.geometry.throat_vector"]], "pore_to_pore() (in module openpnm.models.geometry.throat_vector)": [[806, "openpnm.models.geometry.throat_vector.pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[807, "module-openpnm.models.geometry.throat_volume"]], "cuboid() (in module openpnm.models.geometry.throat_volume)": [[808, "openpnm.models.geometry.throat_volume.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_volume)": [[809, "openpnm.models.geometry.throat_volume.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_volume)": [[810, "openpnm.models.geometry.throat_volume.extrusion"]], "lens() (in module openpnm.models.geometry.throat_volume)": [[811, "openpnm.models.geometry.throat_volume.lens"]], "pendular_ring() (in module openpnm.models.geometry.throat_volume)": [[812, "openpnm.models.geometry.throat_volume.pendular_ring"]], "rectangle() (in module openpnm.models.geometry.throat_volume)": [[813, "openpnm.models.geometry.throat_volume.rectangle"]], "openpnm.models.misc": [[814, "module-openpnm.models.misc"]], "blank() (in module openpnm.models.misc)": [[815, "openpnm.models.misc.blank"]], "clip() (in module openpnm.models.misc)": [[816, "openpnm.models.misc.clip"]], "constant() (in module openpnm.models.misc)": [[817, "openpnm.models.misc.constant"]], "difference() (in module openpnm.models.misc)": [[818, "openpnm.models.misc.difference"]], "fraction() (in module openpnm.models.misc)": [[819, "openpnm.models.misc.fraction"]], "from_neighbor_pores() (in module openpnm.models.misc)": [[820, "openpnm.models.misc.from_neighbor_pores"]], "from_neighbor_throats() (in module openpnm.models.misc)": [[821, "openpnm.models.misc.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.misc)": [[822, "openpnm.models.misc.generic_distribution"]], "generic_function() (in module openpnm.models.misc)": [[823, "openpnm.models.misc.generic_function"]], "invert() (in module openpnm.models.misc)": [[824, "openpnm.models.misc.invert"]], "linear() (in module openpnm.models.misc)": [[825, "openpnm.models.misc.linear"]], "match_histogram() (in module openpnm.models.misc)": [[826, "openpnm.models.misc.match_histogram"]], "normal() (in module openpnm.models.misc)": [[827, "openpnm.models.misc.normal"]], "normalize() (in module openpnm.models.misc)": [[828, "openpnm.models.misc.normalize"]], "polynomial() (in module openpnm.models.misc)": [[829, "openpnm.models.misc.polynomial"]], "product() (in module openpnm.models.misc)": [[830, "openpnm.models.misc.product"]], "random() (in module openpnm.models.misc)": [[831, "openpnm.models.misc.random"]], "scaled() (in module openpnm.models.misc)": [[832, "openpnm.models.misc.scaled"]], "summation() (in module openpnm.models.misc)": [[833, "openpnm.models.misc.summation"]], "weibull() (in module openpnm.models.misc)": [[834, "openpnm.models.misc.weibull"]], "openpnm.models.network": [[835, "module-openpnm.models.network"]], "bidirectional_throats() (in module openpnm.models.network)": [[836, "openpnm.models.network.bidirectional_throats"]], "cluster_number() (in module openpnm.models.network)": [[837, "openpnm.models.network.cluster_number"]], "cluster_size() (in module openpnm.models.network)": [[838, "openpnm.models.network.cluster_size"]], "coordination_number() (in module openpnm.models.network)": [[839, "openpnm.models.network.coordination_number"]], "count_coincident_pores() (in module openpnm.models.network)": [[840, "openpnm.models.network.count_coincident_pores"]], "distance_to_furthest_neighbor() (in module openpnm.models.network)": [[841, "openpnm.models.network.distance_to_furthest_neighbor"]], "distance_to_nearest_neighbor() (in module openpnm.models.network)": [[842, "openpnm.models.network.distance_to_nearest_neighbor"]], "distance_to_nearest_pore() (in module openpnm.models.network)": [[843, "openpnm.models.network.distance_to_nearest_pore"]], "duplicate_throats() (in module openpnm.models.network)": [[844, "openpnm.models.network.duplicate_throats"]], "find_coincident_pores() (in module openpnm.models.network)": [[845, "openpnm.models.network.find_coincident_pores"]], "gabriel_edges() (in module openpnm.models.network)": [[846, "openpnm.models.network.gabriel_edges"]], "headless_throats() (in module openpnm.models.network)": [[847, "openpnm.models.network.headless_throats"]], "isolated_pores() (in module openpnm.models.network)": [[848, "openpnm.models.network.isolated_pores"]], "looped_throats() (in module openpnm.models.network)": [[849, "openpnm.models.network.looped_throats"]], "pore_to_pore_distance() (in module openpnm.models.network)": [[850, "openpnm.models.network.pore_to_pore_distance"]], "reversed_throats() (in module openpnm.models.network)": [[851, "openpnm.models.network.reversed_throats"]], "openpnm.models.phase": [[852, "module-openpnm.models.phase"]], "chemicals_wrapper() (in module openpnm.models.phase)": [[853, "openpnm.models.phase.chemicals_wrapper"]], "openpnm.models.phase.critical_props": [[854, "module-openpnm.models.phase.critical_props"]], "openpnm.models.phase.density": [[855, "module-openpnm.models.phase.density"]], "ideal_gas() (in module openpnm.models.phase.density)": [[856, "openpnm.models.phase.density.ideal_gas"]], "liquid_mixture_costald() (in module openpnm.models.phase.density)": [[857, "openpnm.models.phase.density.liquid_mixture_COSTALD"]], "liquid_pure_costald() (in module openpnm.models.phase.density)": [[858, "openpnm.models.phase.density.liquid_pure_COSTALD"]], "mass_to_molar() (in module openpnm.models.phase.density)": [[859, "openpnm.models.phase.density.mass_to_molar"]], "water_correlation() (in module openpnm.models.phase.density)": [[860, "openpnm.models.phase.density.water_correlation"]], "openpnm.models.phase.diffusivity": [[861, "module-openpnm.models.phase.diffusivity"]], "gas_mixture_ce() (in module openpnm.models.phase.diffusivity)": [[862, "openpnm.models.phase.diffusivity.gas_mixture_ce"]], "gas_mixture_fesg() (in module openpnm.models.phase.diffusivity)": [[863, "openpnm.models.phase.diffusivity.gas_mixture_fesg"]], "liquid_mixture_tc() (in module openpnm.models.phase.diffusivity)": [[864, "openpnm.models.phase.diffusivity.liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[865, "module-openpnm.models.phase.heat_capacity"]], "gas_mixture_yweighted() (in module openpnm.models.phase.heat_capacity)": [[866, "openpnm.models.phase.heat_capacity.gas_mixture_yweighted"]], "gas_pure_trc() (in module openpnm.models.phase.heat_capacity)": [[867, "openpnm.models.phase.heat_capacity.gas_pure_TRC"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.heat_capacity)": [[868, "openpnm.models.phase.heat_capacity.liquid_mixture_xweighted"]], "liquid_pure_rp() (in module openpnm.models.phase.heat_capacity)": [[869, "openpnm.models.phase.heat_capacity.liquid_pure_rp"]], "openpnm.models.phase.misc": [[870, "module-openpnm.models.phase.misc"]], "mix_and_match() (in module openpnm.models.phase.misc)": [[871, "openpnm.models.phase.misc.mix_and_match"]], "mole_to_mass_fraction() (in module openpnm.models.phase.misc)": [[872, "openpnm.models.phase.misc.mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[873, "module-openpnm.models.phase.mixtures"]], "from_component() (in module openpnm.models.phase.mixtures)": [[874, "openpnm.models.phase.mixtures.from_component"]], "mixing_rule() (in module openpnm.models.phase.mixtures)": [[875, "openpnm.models.phase.mixtures.mixing_rule"]], "mole_summation() (in module openpnm.models.phase.mixtures)": [[876, "openpnm.models.phase.mixtures.mole_summation"]], "mole_to_mass_fraction() (in module openpnm.models.phase.mixtures)": [[877, "openpnm.models.phase.mixtures.mole_to_mass_fraction"]], "salinity() (in module openpnm.models.phase.mixtures)": [[878, "openpnm.models.phase.mixtures.salinity"]], "openpnm.models.phase.partition_coefficient": [[879, "module-openpnm.models.phase.partition_coefficient"]], "gaseous_species_in_water() (in module openpnm.models.phase.partition_coefficient)": [[880, "openpnm.models.phase.partition_coefficient.gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[881, "module-openpnm.models.phase.surface_tension"]], "liquid_mixture_wsd() (in module openpnm.models.phase.surface_tension)": [[882, "openpnm.models.phase.surface_tension.liquid_mixture_wsd"]], "liquid_pure_bb() (in module openpnm.models.phase.surface_tension)": [[883, "openpnm.models.phase.surface_tension.liquid_pure_bb"]], "water_correlation() (in module openpnm.models.phase.surface_tension)": [[884, "openpnm.models.phase.surface_tension.water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[885, "module-openpnm.models.phase.thermal_conductivity"]], "gas_mixture_whz() (in module openpnm.models.phase.thermal_conductivity)": [[886, "openpnm.models.phase.thermal_conductivity.gas_mixture_whz"]], "gas_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[887, "openpnm.models.phase.thermal_conductivity.gas_pure_gismr"]], "liquid_mixture_dippr9h() (in module openpnm.models.phase.thermal_conductivity)": [[888, "openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H"]], "liquid_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[889, "openpnm.models.phase.thermal_conductivity.liquid_pure_gismr"]], "liquid_pure_sr() (in module openpnm.models.phase.thermal_conductivity)": [[890, "openpnm.models.phase.thermal_conductivity.liquid_pure_sr"]], "water_correlation() (in module openpnm.models.phase.thermal_conductivity)": [[891, "openpnm.models.phase.thermal_conductivity.water_correlation"]], "openpnm.models.phase.vapor_pressure": [[892, "module-openpnm.models.phase.vapor_pressure"]], "liquid_pure_antoine() (in module openpnm.models.phase.vapor_pressure)": [[893, "openpnm.models.phase.vapor_pressure.liquid_pure_antoine"]], "liquid_pure_lk() (in module openpnm.models.phase.vapor_pressure)": [[894, "openpnm.models.phase.vapor_pressure.liquid_pure_lk"]], "water_correlation() (in module openpnm.models.phase.vapor_pressure)": [[895, "openpnm.models.phase.vapor_pressure.water_correlation"]], "openpnm.models.phase.viscosity": [[896, "module-openpnm.models.phase.viscosity"]], "gas_mixture_hz() (in module openpnm.models.phase.viscosity)": [[897, "openpnm.models.phase.viscosity.gas_mixture_hz"]], "gas_pure_gesmr() (in module openpnm.models.phase.viscosity)": [[898, "openpnm.models.phase.viscosity.gas_pure_gesmr"]], "gas_pure_st() (in module openpnm.models.phase.viscosity)": [[899, "openpnm.models.phase.viscosity.gas_pure_st"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.viscosity)": [[900, "openpnm.models.phase.viscosity.liquid_mixture_xweighted"]], "liquid_pure_ls() (in module openpnm.models.phase.viscosity)": [[901, "openpnm.models.phase.viscosity.liquid_pure_ls"]], "water_correlation() (in module openpnm.models.phase.viscosity)": [[902, "openpnm.models.phase.viscosity.water_correlation"]], "openpnm.models.physics": [[903, "module-openpnm.models.physics"]], "openpnm.models.physics.ad_dif_conductance": [[904, "module-openpnm.models.physics.ad_dif_conductance"]], "ad_dif() (in module openpnm.models.physics.ad_dif_conductance)": [[905, "openpnm.models.physics.ad_dif_conductance.ad_dif"]], "openpnm.models.physics.capillary_pressure": [[906, "module-openpnm.models.physics.capillary_pressure"]], "purcell() (in module openpnm.models.physics.capillary_pressure)": [[907, "openpnm.models.physics.capillary_pressure.purcell"]], "washburn() (in module openpnm.models.physics.capillary_pressure)": [[908, "openpnm.models.physics.capillary_pressure.washburn"]], "openpnm.models.physics.diffusive_conductance": [[909, "module-openpnm.models.physics.diffusive_conductance"]], "generic_diffusive() (in module openpnm.models.physics.diffusive_conductance)": [[910, "openpnm.models.physics.diffusive_conductance.generic_diffusive"]], "mixed_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[911, "openpnm.models.physics.diffusive_conductance.mixed_diffusion"]], "ordinary_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[912, "openpnm.models.physics.diffusive_conductance.ordinary_diffusion"]], "taylor_aris_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[913, "openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[914, "module-openpnm.models.physics.electrical_conductance"]], "generic_electrical() (in module openpnm.models.physics.electrical_conductance)": [[915, "openpnm.models.physics.electrical_conductance.generic_electrical"]], "series_resistors() (in module openpnm.models.physics.electrical_conductance)": [[916, "openpnm.models.physics.electrical_conductance.series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[917, "module-openpnm.models.physics.hydraulic_conductance"]], "generic_hydraulic() (in module openpnm.models.physics.hydraulic_conductance)": [[918, "openpnm.models.physics.hydraulic_conductance.generic_hydraulic"]], "hagen_poiseuille() (in module openpnm.models.physics.hydraulic_conductance)": [[919, "openpnm.models.physics.hydraulic_conductance.hagen_poiseuille"]], "valvatne_blunt() (in module openpnm.models.physics.hydraulic_conductance)": [[920, "openpnm.models.physics.hydraulic_conductance.valvatne_blunt"]], "openpnm.models.physics.meniscus": [[921, "module-openpnm.models.physics.meniscus"]], "general_toroidal() (in module openpnm.models.physics.meniscus)": [[922, "openpnm.models.physics.meniscus.general_toroidal"]], "purcell() (in module openpnm.models.physics.meniscus)": [[923, "openpnm.models.physics.meniscus.purcell"]], "sinusoidal() (in module openpnm.models.physics.meniscus)": [[924, "openpnm.models.physics.meniscus.sinusoidal"]], "openpnm.models.physics.multiphase": [[925, "module-openpnm.models.physics.multiphase"]], "conduit_conductance() (in module openpnm.models.physics.multiphase)": [[926, "openpnm.models.physics.multiphase.conduit_conductance"]], "late_filling() (in module openpnm.models.physics.multiphase)": [[927, "openpnm.models.physics.multiphase.late_filling"]], "openpnm.models.physics.source_terms": [[928, "module-openpnm.models.physics.source_terms"]], "butler_volmer_conc() (in module openpnm.models.physics.source_terms)": [[929, "openpnm.models.physics.source_terms.butler_volmer_conc"]], "butler_volmer_voltage() (in module openpnm.models.physics.source_terms)": [[930, "openpnm.models.physics.source_terms.butler_volmer_voltage"]], "exponential() (in module openpnm.models.physics.source_terms)": [[931, "openpnm.models.physics.source_terms.exponential"]], "general_symbolic() (in module openpnm.models.physics.source_terms)": [[932, "openpnm.models.physics.source_terms.general_symbolic"]], "linear() (in module openpnm.models.physics.source_terms)": [[933, "openpnm.models.physics.source_terms.linear"]], "logarithm() (in module openpnm.models.physics.source_terms)": [[934, "openpnm.models.physics.source_terms.logarithm"]], "natural_exponential() (in module openpnm.models.physics.source_terms)": [[935, "openpnm.models.physics.source_terms.natural_exponential"]], "natural_logarithm() (in module openpnm.models.physics.source_terms)": [[936, "openpnm.models.physics.source_terms.natural_logarithm"]], "power_law() (in module openpnm.models.physics.source_terms)": [[937, "openpnm.models.physics.source_terms.power_law"]], "standard_kinetics() (in module openpnm.models.physics.source_terms)": [[938, "openpnm.models.physics.source_terms.standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[939, "module-openpnm.models.physics.thermal_conductance"]], "generic_thermal() (in module openpnm.models.physics.thermal_conductance)": [[940, "openpnm.models.physics.thermal_conductance.generic_thermal"]], "series_resistors() (in module openpnm.models.physics.thermal_conductance)": [[941, "openpnm.models.physics.thermal_conductance.series_resistors"]], "openpnm.network": [[942, "module-openpnm.network"]], "bodycenteredcubic (class in openpnm.network)": [[943, "openpnm.network.BodyCenteredCubic"]], "add_boundary_pores() (bodycenteredcubic method)": [[944, "openpnm.network.BodyCenteredCubic.add_boundary_pores"]], "add_model() (bodycenteredcubic method)": [[945, "openpnm.network.BodyCenteredCubic.add_model"]], "add_model_collection() (bodycenteredcubic method)": [[946, "openpnm.network.BodyCenteredCubic.add_model_collection"]], "clear() (bodycenteredcubic method)": [[947, "openpnm.network.BodyCenteredCubic.clear"]], "copy() (bodycenteredcubic method)": [[948, "openpnm.network.BodyCenteredCubic.copy"]], "create_adjacency_matrix() (bodycenteredcubic method)": [[949, "openpnm.network.BodyCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (bodycenteredcubic method)": [[950, "openpnm.network.BodyCenteredCubic.create_incidence_matrix"]], "filter_by_label() (bodycenteredcubic method)": [[951, "openpnm.network.BodyCenteredCubic.filter_by_label"]], "find_connected_pores() (bodycenteredcubic method)": [[952, "openpnm.network.BodyCenteredCubic.find_connected_pores"]], "find_connecting_throat() (bodycenteredcubic method)": [[953, "openpnm.network.BodyCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (bodycenteredcubic method)": [[954, "openpnm.network.BodyCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (bodycenteredcubic method)": [[955, "openpnm.network.BodyCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (bodycenteredcubic method)": [[956, "openpnm.network.BodyCenteredCubic.find_neighbor_throats"]], "fromkeys() (bodycenteredcubic method)": [[957, "openpnm.network.BodyCenteredCubic.fromkeys"]], "get() (bodycenteredcubic method)": [[958, "openpnm.network.BodyCenteredCubic.get"]], "get_adjacency_matrix() (bodycenteredcubic method)": [[959, "openpnm.network.BodyCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (bodycenteredcubic method)": [[960, "openpnm.network.BodyCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (bodycenteredcubic method)": [[961, "openpnm.network.BodyCenteredCubic.get_incidence_matrix"]], "interpolate_data() (bodycenteredcubic method)": [[962, "openpnm.network.BodyCenteredCubic.interpolate_data"]], "items() (bodycenteredcubic method)": [[963, "openpnm.network.BodyCenteredCubic.items"]], "keys() (bodycenteredcubic method)": [[964, "openpnm.network.BodyCenteredCubic.keys"]], "labels() (bodycenteredcubic method)": [[965, "openpnm.network.BodyCenteredCubic.labels"]], "num_neighbors() (bodycenteredcubic method)": [[966, "openpnm.network.BodyCenteredCubic.num_neighbors"]], "num_pores() (bodycenteredcubic method)": [[967, "openpnm.network.BodyCenteredCubic.num_pores"]], "num_throats() (bodycenteredcubic method)": [[968, "openpnm.network.BodyCenteredCubic.num_throats"]], "pop() (bodycenteredcubic method)": [[969, "openpnm.network.BodyCenteredCubic.pop"]], "popitem() (bodycenteredcubic method)": [[970, "openpnm.network.BodyCenteredCubic.popitem"]], "pores() (bodycenteredcubic method)": [[971, "openpnm.network.BodyCenteredCubic.pores"]], "props() (bodycenteredcubic method)": [[972, "openpnm.network.BodyCenteredCubic.props"]], "regenerate_models() (bodycenteredcubic method)": [[973, "openpnm.network.BodyCenteredCubic.regenerate_models"]], "run_model() (bodycenteredcubic method)": [[974, "openpnm.network.BodyCenteredCubic.run_model"]], "set_label() (bodycenteredcubic method)": [[975, "openpnm.network.BodyCenteredCubic.set_label"]], "setdefault() (bodycenteredcubic method)": [[976, "openpnm.network.BodyCenteredCubic.setdefault"]], "throats() (bodycenteredcubic method)": [[977, "openpnm.network.BodyCenteredCubic.throats"]], "to_indices() (bodycenteredcubic method)": [[978, "openpnm.network.BodyCenteredCubic.to_indices"]], "to_mask() (bodycenteredcubic method)": [[979, "openpnm.network.BodyCenteredCubic.to_mask"]], "update() (bodycenteredcubic method)": [[980, "openpnm.network.BodyCenteredCubic.update"]], "values() (bodycenteredcubic method)": [[981, "openpnm.network.BodyCenteredCubic.values"]], "cubic (class in openpnm.network)": [[982, "openpnm.network.Cubic"]], "add_boundary_pores() (cubic method)": [[983, "openpnm.network.Cubic.add_boundary_pores"]], "add_model() (cubic method)": [[984, "openpnm.network.Cubic.add_model"]], "add_model_collection() (cubic method)": [[985, "openpnm.network.Cubic.add_model_collection"]], "clear() (cubic method)": [[986, "openpnm.network.Cubic.clear"]], "copy() (cubic method)": [[987, "openpnm.network.Cubic.copy"]], "create_adjacency_matrix() (cubic method)": [[988, "openpnm.network.Cubic.create_adjacency_matrix"]], "create_incidence_matrix() (cubic method)": [[989, "openpnm.network.Cubic.create_incidence_matrix"]], "filter_by_label() (cubic method)": [[990, "openpnm.network.Cubic.filter_by_label"]], "find_connected_pores() (cubic method)": [[991, "openpnm.network.Cubic.find_connected_pores"]], "find_connecting_throat() (cubic method)": [[992, "openpnm.network.Cubic.find_connecting_throat"]], "find_nearby_pores() (cubic method)": [[993, "openpnm.network.Cubic.find_nearby_pores"]], "find_neighbor_pores() (cubic method)": [[994, "openpnm.network.Cubic.find_neighbor_pores"]], "find_neighbor_throats() (cubic method)": [[995, "openpnm.network.Cubic.find_neighbor_throats"]], "fromkeys() (cubic method)": [[996, "openpnm.network.Cubic.fromkeys"]], "get() (cubic method)": [[997, "openpnm.network.Cubic.get"]], "get_adjacency_matrix() (cubic method)": [[998, "openpnm.network.Cubic.get_adjacency_matrix"]], "get_conduit_data() (cubic method)": [[999, "openpnm.network.Cubic.get_conduit_data"]], "get_incidence_matrix() (cubic method)": [[1000, "openpnm.network.Cubic.get_incidence_matrix"]], "interpolate_data() (cubic method)": [[1001, "openpnm.network.Cubic.interpolate_data"]], "items() (cubic method)": [[1002, "openpnm.network.Cubic.items"]], "keys() (cubic method)": [[1003, "openpnm.network.Cubic.keys"]], "labels() (cubic method)": [[1004, "openpnm.network.Cubic.labels"]], "num_neighbors() (cubic method)": [[1005, "openpnm.network.Cubic.num_neighbors"]], "num_pores() (cubic method)": [[1006, "openpnm.network.Cubic.num_pores"]], "num_throats() (cubic method)": [[1007, "openpnm.network.Cubic.num_throats"]], "pop() (cubic method)": [[1008, "openpnm.network.Cubic.pop"]], "popitem() (cubic method)": [[1009, "openpnm.network.Cubic.popitem"]], "pores() (cubic method)": [[1010, "openpnm.network.Cubic.pores"]], "props() (cubic method)": [[1011, "openpnm.network.Cubic.props"]], "regenerate_models() (cubic method)": [[1012, "openpnm.network.Cubic.regenerate_models"]], "run_model() (cubic method)": [[1013, "openpnm.network.Cubic.run_model"]], "set_label() (cubic method)": [[1014, "openpnm.network.Cubic.set_label"]], "setdefault() (cubic method)": [[1015, "openpnm.network.Cubic.setdefault"]], "throats() (cubic method)": [[1016, "openpnm.network.Cubic.throats"]], "to_indices() (cubic method)": [[1017, "openpnm.network.Cubic.to_indices"]], "to_mask() (cubic method)": [[1018, "openpnm.network.Cubic.to_mask"]], "update() (cubic method)": [[1019, "openpnm.network.Cubic.update"]], "values() (cubic method)": [[1020, "openpnm.network.Cubic.values"]], "cubictemplate (class in openpnm.network)": [[1021, "openpnm.network.CubicTemplate"]], "add_model() (cubictemplate method)": [[1022, "openpnm.network.CubicTemplate.add_model"]], "add_model_collection() (cubictemplate method)": [[1023, "openpnm.network.CubicTemplate.add_model_collection"]], "clear() (cubictemplate method)": [[1024, "openpnm.network.CubicTemplate.clear"]], "copy() (cubictemplate method)": [[1025, "openpnm.network.CubicTemplate.copy"]], "create_adjacency_matrix() (cubictemplate method)": [[1026, "openpnm.network.CubicTemplate.create_adjacency_matrix"]], "create_incidence_matrix() (cubictemplate method)": [[1027, "openpnm.network.CubicTemplate.create_incidence_matrix"]], "filter_by_label() (cubictemplate method)": [[1028, "openpnm.network.CubicTemplate.filter_by_label"]], "find_connected_pores() (cubictemplate method)": [[1029, "openpnm.network.CubicTemplate.find_connected_pores"]], "find_connecting_throat() (cubictemplate method)": [[1030, "openpnm.network.CubicTemplate.find_connecting_throat"]], "find_nearby_pores() (cubictemplate method)": [[1031, "openpnm.network.CubicTemplate.find_nearby_pores"]], "find_neighbor_pores() (cubictemplate method)": [[1032, "openpnm.network.CubicTemplate.find_neighbor_pores"]], "find_neighbor_throats() (cubictemplate method)": [[1033, "openpnm.network.CubicTemplate.find_neighbor_throats"]], "fromkeys() (cubictemplate method)": [[1034, "openpnm.network.CubicTemplate.fromkeys"]], "get() (cubictemplate method)": [[1035, "openpnm.network.CubicTemplate.get"]], "get_adjacency_matrix() (cubictemplate method)": [[1036, "openpnm.network.CubicTemplate.get_adjacency_matrix"]], "get_conduit_data() (cubictemplate method)": [[1037, "openpnm.network.CubicTemplate.get_conduit_data"]], "get_incidence_matrix() (cubictemplate method)": [[1038, "openpnm.network.CubicTemplate.get_incidence_matrix"]], "interpolate_data() (cubictemplate method)": [[1039, "openpnm.network.CubicTemplate.interpolate_data"]], "items() (cubictemplate method)": [[1040, "openpnm.network.CubicTemplate.items"]], "keys() (cubictemplate method)": [[1041, "openpnm.network.CubicTemplate.keys"]], "labels() (cubictemplate method)": [[1042, "openpnm.network.CubicTemplate.labels"]], "num_neighbors() (cubictemplate method)": [[1043, "openpnm.network.CubicTemplate.num_neighbors"]], "num_pores() (cubictemplate method)": [[1044, "openpnm.network.CubicTemplate.num_pores"]], "num_throats() (cubictemplate method)": [[1045, "openpnm.network.CubicTemplate.num_throats"]], "pop() (cubictemplate method)": [[1046, "openpnm.network.CubicTemplate.pop"]], "popitem() (cubictemplate method)": [[1047, "openpnm.network.CubicTemplate.popitem"]], "pores() (cubictemplate method)": [[1048, "openpnm.network.CubicTemplate.pores"]], "props() (cubictemplate method)": [[1049, "openpnm.network.CubicTemplate.props"]], "regenerate_models() (cubictemplate method)": [[1050, "openpnm.network.CubicTemplate.regenerate_models"]], "run_model() (cubictemplate method)": [[1051, "openpnm.network.CubicTemplate.run_model"]], "set_label() (cubictemplate method)": [[1052, "openpnm.network.CubicTemplate.set_label"]], "setdefault() (cubictemplate method)": [[1053, "openpnm.network.CubicTemplate.setdefault"]], "throats() (cubictemplate method)": [[1054, "openpnm.network.CubicTemplate.throats"]], "to_indices() (cubictemplate method)": [[1055, "openpnm.network.CubicTemplate.to_indices"]], "to_mask() (cubictemplate method)": [[1056, "openpnm.network.CubicTemplate.to_mask"]], "update() (cubictemplate method)": [[1057, "openpnm.network.CubicTemplate.update"]], "values() (cubictemplate method)": [[1058, "openpnm.network.CubicTemplate.values"]], "delaunay (class in openpnm.network)": [[1059, "openpnm.network.Delaunay"]], "add_model() (delaunay method)": [[1060, "openpnm.network.Delaunay.add_model"]], "add_model_collection() (delaunay method)": [[1061, "openpnm.network.Delaunay.add_model_collection"]], "clear() (delaunay method)": [[1062, "openpnm.network.Delaunay.clear"]], "copy() (delaunay method)": [[1063, "openpnm.network.Delaunay.copy"]], "create_adjacency_matrix() (delaunay method)": [[1064, "openpnm.network.Delaunay.create_adjacency_matrix"]], "create_incidence_matrix() (delaunay method)": [[1065, "openpnm.network.Delaunay.create_incidence_matrix"]], "filter_by_label() (delaunay method)": [[1066, "openpnm.network.Delaunay.filter_by_label"]], "find_connected_pores() (delaunay method)": [[1067, "openpnm.network.Delaunay.find_connected_pores"]], "find_connecting_throat() (delaunay method)": [[1068, "openpnm.network.Delaunay.find_connecting_throat"]], "find_nearby_pores() (delaunay method)": [[1069, "openpnm.network.Delaunay.find_nearby_pores"]], "find_neighbor_pores() (delaunay method)": [[1070, "openpnm.network.Delaunay.find_neighbor_pores"]], "find_neighbor_throats() (delaunay method)": [[1071, "openpnm.network.Delaunay.find_neighbor_throats"]], "fromkeys() (delaunay method)": [[1072, "openpnm.network.Delaunay.fromkeys"]], "get() (delaunay method)": [[1073, "openpnm.network.Delaunay.get"]], "get_adjacency_matrix() (delaunay method)": [[1074, "openpnm.network.Delaunay.get_adjacency_matrix"]], "get_conduit_data() (delaunay method)": [[1075, "openpnm.network.Delaunay.get_conduit_data"]], "get_incidence_matrix() (delaunay method)": [[1076, "openpnm.network.Delaunay.get_incidence_matrix"]], "interpolate_data() (delaunay method)": [[1077, "openpnm.network.Delaunay.interpolate_data"]], "items() (delaunay method)": [[1078, "openpnm.network.Delaunay.items"]], "keys() (delaunay method)": [[1079, "openpnm.network.Delaunay.keys"]], "labels() (delaunay method)": [[1080, "openpnm.network.Delaunay.labels"]], "num_neighbors() (delaunay method)": [[1081, "openpnm.network.Delaunay.num_neighbors"]], "num_pores() (delaunay method)": [[1082, "openpnm.network.Delaunay.num_pores"]], "num_throats() (delaunay method)": [[1083, "openpnm.network.Delaunay.num_throats"]], "pop() (delaunay method)": [[1084, "openpnm.network.Delaunay.pop"]], "popitem() (delaunay method)": [[1085, "openpnm.network.Delaunay.popitem"]], "pores() (delaunay method)": [[1086, "openpnm.network.Delaunay.pores"]], "props() (delaunay method)": [[1087, "openpnm.network.Delaunay.props"]], "regenerate_models() (delaunay method)": [[1088, "openpnm.network.Delaunay.regenerate_models"]], "run_model() (delaunay method)": [[1089, "openpnm.network.Delaunay.run_model"]], "set_label() (delaunay method)": [[1090, "openpnm.network.Delaunay.set_label"]], "setdefault() (delaunay method)": [[1091, "openpnm.network.Delaunay.setdefault"]], "throats() (delaunay method)": [[1092, "openpnm.network.Delaunay.throats"]], "to_indices() (delaunay method)": [[1093, "openpnm.network.Delaunay.to_indices"]], "to_mask() (delaunay method)": [[1094, "openpnm.network.Delaunay.to_mask"]], "update() (delaunay method)": [[1095, "openpnm.network.Delaunay.update"]], "values() (delaunay method)": [[1096, "openpnm.network.Delaunay.values"]], "delaunayvoronoidual (class in openpnm.network)": [[1097, "openpnm.network.DelaunayVoronoiDual"]], "add_model() (delaunayvoronoidual method)": [[1098, "openpnm.network.DelaunayVoronoiDual.add_model"]], "add_model_collection() (delaunayvoronoidual method)": [[1099, "openpnm.network.DelaunayVoronoiDual.add_model_collection"]], "clear() (delaunayvoronoidual method)": [[1100, "openpnm.network.DelaunayVoronoiDual.clear"]], "copy() (delaunayvoronoidual method)": [[1101, "openpnm.network.DelaunayVoronoiDual.copy"]], "create_adjacency_matrix() (delaunayvoronoidual method)": [[1102, "openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix"]], "create_incidence_matrix() (delaunayvoronoidual method)": [[1103, "openpnm.network.DelaunayVoronoiDual.create_incidence_matrix"]], "filter_by_label() (delaunayvoronoidual method)": [[1104, "openpnm.network.DelaunayVoronoiDual.filter_by_label"]], "find_connected_pores() (delaunayvoronoidual method)": [[1105, "openpnm.network.DelaunayVoronoiDual.find_connected_pores"]], "find_connecting_throat() (delaunayvoronoidual method)": [[1106, "openpnm.network.DelaunayVoronoiDual.find_connecting_throat"]], "find_nearby_pores() (delaunayvoronoidual method)": [[1107, "openpnm.network.DelaunayVoronoiDual.find_nearby_pores"]], "find_neighbor_pores() (delaunayvoronoidual method)": [[1108, "openpnm.network.DelaunayVoronoiDual.find_neighbor_pores"]], "find_neighbor_throats() (delaunayvoronoidual method)": [[1109, "openpnm.network.DelaunayVoronoiDual.find_neighbor_throats"]], "find_pore_hulls() (delaunayvoronoidual method)": [[1110, "openpnm.network.DelaunayVoronoiDual.find_pore_hulls"]], "find_throat_facets() (delaunayvoronoidual method)": [[1111, "openpnm.network.DelaunayVoronoiDual.find_throat_facets"]], "fromkeys() (delaunayvoronoidual method)": [[1112, "openpnm.network.DelaunayVoronoiDual.fromkeys"]], "get() (delaunayvoronoidual method)": [[1113, "openpnm.network.DelaunayVoronoiDual.get"]], "get_adjacency_matrix() (delaunayvoronoidual method)": [[1114, "openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix"]], "get_conduit_data() (delaunayvoronoidual method)": [[1115, "openpnm.network.DelaunayVoronoiDual.get_conduit_data"]], "get_incidence_matrix() (delaunayvoronoidual method)": [[1116, "openpnm.network.DelaunayVoronoiDual.get_incidence_matrix"]], "interpolate_data() (delaunayvoronoidual method)": [[1117, "openpnm.network.DelaunayVoronoiDual.interpolate_data"]], "items() (delaunayvoronoidual method)": [[1118, "openpnm.network.DelaunayVoronoiDual.items"]], "keys() (delaunayvoronoidual method)": [[1119, "openpnm.network.DelaunayVoronoiDual.keys"]], "labels() (delaunayvoronoidual method)": [[1120, "openpnm.network.DelaunayVoronoiDual.labels"]], "num_neighbors() (delaunayvoronoidual method)": [[1121, "openpnm.network.DelaunayVoronoiDual.num_neighbors"]], "num_pores() (delaunayvoronoidual method)": [[1122, "openpnm.network.DelaunayVoronoiDual.num_pores"]], "num_throats() (delaunayvoronoidual method)": [[1123, "openpnm.network.DelaunayVoronoiDual.num_throats"]], "pop() (delaunayvoronoidual method)": [[1124, "openpnm.network.DelaunayVoronoiDual.pop"]], "popitem() (delaunayvoronoidual method)": [[1125, "openpnm.network.DelaunayVoronoiDual.popitem"]], "pores() (delaunayvoronoidual method)": [[1126, "openpnm.network.DelaunayVoronoiDual.pores"]], "props() (delaunayvoronoidual method)": [[1127, "openpnm.network.DelaunayVoronoiDual.props"]], "regenerate_models() (delaunayvoronoidual method)": [[1128, "openpnm.network.DelaunayVoronoiDual.regenerate_models"]], "run_model() (delaunayvoronoidual method)": [[1129, "openpnm.network.DelaunayVoronoiDual.run_model"]], "set_label() (delaunayvoronoidual method)": [[1130, "openpnm.network.DelaunayVoronoiDual.set_label"]], "setdefault() (delaunayvoronoidual method)": [[1131, "openpnm.network.DelaunayVoronoiDual.setdefault"]], "throats() (delaunayvoronoidual method)": [[1132, "openpnm.network.DelaunayVoronoiDual.throats"]], "to_indices() (delaunayvoronoidual method)": [[1133, "openpnm.network.DelaunayVoronoiDual.to_indices"]], "to_mask() (delaunayvoronoidual method)": [[1134, "openpnm.network.DelaunayVoronoiDual.to_mask"]], "update() (delaunayvoronoidual method)": [[1135, "openpnm.network.DelaunayVoronoiDual.update"]], "values() (delaunayvoronoidual method)": [[1136, "openpnm.network.DelaunayVoronoiDual.values"]], "demo (class in openpnm.network)": [[1137, "openpnm.network.Demo"]], "add_boundary_pores() (demo method)": [[1138, "openpnm.network.Demo.add_boundary_pores"]], "add_model() (demo method)": [[1139, "openpnm.network.Demo.add_model"]], "add_model_collection() (demo method)": [[1140, "openpnm.network.Demo.add_model_collection"]], "clear() (demo method)": [[1141, "openpnm.network.Demo.clear"]], "copy() (demo method)": [[1142, "openpnm.network.Demo.copy"]], "create_adjacency_matrix() (demo method)": [[1143, "openpnm.network.Demo.create_adjacency_matrix"]], "create_incidence_matrix() (demo method)": [[1144, "openpnm.network.Demo.create_incidence_matrix"]], "filter_by_label() (demo method)": [[1145, "openpnm.network.Demo.filter_by_label"]], "find_connected_pores() (demo method)": [[1146, "openpnm.network.Demo.find_connected_pores"]], "find_connecting_throat() (demo method)": [[1147, "openpnm.network.Demo.find_connecting_throat"]], "find_nearby_pores() (demo method)": [[1148, "openpnm.network.Demo.find_nearby_pores"]], "find_neighbor_pores() (demo method)": [[1149, "openpnm.network.Demo.find_neighbor_pores"]], "find_neighbor_throats() (demo method)": [[1150, "openpnm.network.Demo.find_neighbor_throats"]], "fromkeys() (demo method)": [[1151, "openpnm.network.Demo.fromkeys"]], "get() (demo method)": [[1152, "openpnm.network.Demo.get"]], "get_adjacency_matrix() (demo method)": [[1153, "openpnm.network.Demo.get_adjacency_matrix"]], "get_conduit_data() (demo method)": [[1154, "openpnm.network.Demo.get_conduit_data"]], "get_incidence_matrix() (demo method)": [[1155, "openpnm.network.Demo.get_incidence_matrix"]], "interpolate_data() (demo method)": [[1156, "openpnm.network.Demo.interpolate_data"]], "items() (demo method)": [[1157, "openpnm.network.Demo.items"]], "keys() (demo method)": [[1158, "openpnm.network.Demo.keys"]], "labels() (demo method)": [[1159, "openpnm.network.Demo.labels"]], "num_neighbors() (demo method)": [[1160, "openpnm.network.Demo.num_neighbors"]], "num_pores() (demo method)": [[1161, "openpnm.network.Demo.num_pores"]], "num_throats() (demo method)": [[1162, "openpnm.network.Demo.num_throats"]], "pop() (demo method)": [[1163, "openpnm.network.Demo.pop"]], "popitem() (demo method)": [[1164, "openpnm.network.Demo.popitem"]], "pores() (demo method)": [[1165, "openpnm.network.Demo.pores"]], "props() (demo method)": [[1166, "openpnm.network.Demo.props"]], "regenerate_models() (demo method)": [[1167, "openpnm.network.Demo.regenerate_models"]], "run_model() (demo method)": [[1168, "openpnm.network.Demo.run_model"]], "set_label() (demo method)": [[1169, "openpnm.network.Demo.set_label"]], "setdefault() (demo method)": [[1170, "openpnm.network.Demo.setdefault"]], "throats() (demo method)": [[1171, "openpnm.network.Demo.throats"]], "to_indices() (demo method)": [[1172, "openpnm.network.Demo.to_indices"]], "to_mask() (demo method)": [[1173, "openpnm.network.Demo.to_mask"]], "update() (demo method)": [[1174, "openpnm.network.Demo.update"]], "values() (demo method)": [[1175, "openpnm.network.Demo.values"]], "facecenteredcubic (class in openpnm.network)": [[1176, "openpnm.network.FaceCenteredCubic"]], "add_boundary_pores() (facecenteredcubic method)": [[1177, "openpnm.network.FaceCenteredCubic.add_boundary_pores"]], "add_model() (facecenteredcubic method)": [[1178, "openpnm.network.FaceCenteredCubic.add_model"]], "add_model_collection() (facecenteredcubic method)": [[1179, "openpnm.network.FaceCenteredCubic.add_model_collection"]], "clear() (facecenteredcubic method)": [[1180, "openpnm.network.FaceCenteredCubic.clear"]], "copy() (facecenteredcubic method)": [[1181, "openpnm.network.FaceCenteredCubic.copy"]], "create_adjacency_matrix() (facecenteredcubic method)": [[1182, "openpnm.network.FaceCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (facecenteredcubic method)": [[1183, "openpnm.network.FaceCenteredCubic.create_incidence_matrix"]], "filter_by_label() (facecenteredcubic method)": [[1184, "openpnm.network.FaceCenteredCubic.filter_by_label"]], "find_connected_pores() (facecenteredcubic method)": [[1185, "openpnm.network.FaceCenteredCubic.find_connected_pores"]], "find_connecting_throat() (facecenteredcubic method)": [[1186, "openpnm.network.FaceCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (facecenteredcubic method)": [[1187, "openpnm.network.FaceCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (facecenteredcubic method)": [[1188, "openpnm.network.FaceCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (facecenteredcubic method)": [[1189, "openpnm.network.FaceCenteredCubic.find_neighbor_throats"]], "fromkeys() (facecenteredcubic method)": [[1190, "openpnm.network.FaceCenteredCubic.fromkeys"]], "get() (facecenteredcubic method)": [[1191, "openpnm.network.FaceCenteredCubic.get"]], "get_adjacency_matrix() (facecenteredcubic method)": [[1192, "openpnm.network.FaceCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (facecenteredcubic method)": [[1193, "openpnm.network.FaceCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (facecenteredcubic method)": [[1194, "openpnm.network.FaceCenteredCubic.get_incidence_matrix"]], "interpolate_data() (facecenteredcubic method)": [[1195, "openpnm.network.FaceCenteredCubic.interpolate_data"]], "items() (facecenteredcubic method)": [[1196, "openpnm.network.FaceCenteredCubic.items"]], "keys() (facecenteredcubic method)": [[1197, "openpnm.network.FaceCenteredCubic.keys"]], "labels() (facecenteredcubic method)": [[1198, "openpnm.network.FaceCenteredCubic.labels"]], "num_neighbors() (facecenteredcubic method)": [[1199, "openpnm.network.FaceCenteredCubic.num_neighbors"]], "num_pores() (facecenteredcubic method)": [[1200, "openpnm.network.FaceCenteredCubic.num_pores"]], "num_throats() (facecenteredcubic method)": [[1201, "openpnm.network.FaceCenteredCubic.num_throats"]], "pop() (facecenteredcubic method)": [[1202, "openpnm.network.FaceCenteredCubic.pop"]], "popitem() (facecenteredcubic method)": [[1203, "openpnm.network.FaceCenteredCubic.popitem"]], "pores() (facecenteredcubic method)": [[1204, "openpnm.network.FaceCenteredCubic.pores"]], "props() (facecenteredcubic method)": [[1205, "openpnm.network.FaceCenteredCubic.props"]], "regenerate_models() (facecenteredcubic method)": [[1206, "openpnm.network.FaceCenteredCubic.regenerate_models"]], "run_model() (facecenteredcubic method)": [[1207, "openpnm.network.FaceCenteredCubic.run_model"]], "set_label() (facecenteredcubic method)": [[1208, "openpnm.network.FaceCenteredCubic.set_label"]], "setdefault() (facecenteredcubic method)": [[1209, "openpnm.network.FaceCenteredCubic.setdefault"]], "throats() (facecenteredcubic method)": [[1210, "openpnm.network.FaceCenteredCubic.throats"]], "to_indices() (facecenteredcubic method)": [[1211, "openpnm.network.FaceCenteredCubic.to_indices"]], "to_mask() (facecenteredcubic method)": [[1212, "openpnm.network.FaceCenteredCubic.to_mask"]], "update() (facecenteredcubic method)": [[1213, "openpnm.network.FaceCenteredCubic.update"]], "values() (facecenteredcubic method)": [[1214, "openpnm.network.FaceCenteredCubic.values"]], "network (class in openpnm.network)": [[1215, "openpnm.network.Network"]], "add_model() (network method)": [[1216, "openpnm.network.Network.add_model"]], "add_model_collection() (network method)": [[1217, "openpnm.network.Network.add_model_collection"]], "clear() (network method)": [[1218, "openpnm.network.Network.clear"]], "copy() (network method)": [[1219, "openpnm.network.Network.copy"]], "create_adjacency_matrix() (network method)": [[1220, "openpnm.network.Network.create_adjacency_matrix"]], "create_incidence_matrix() (network method)": [[1221, "openpnm.network.Network.create_incidence_matrix"]], "filter_by_label() (network method)": [[1222, "openpnm.network.Network.filter_by_label"]], "find_connected_pores() (network method)": [[1223, "openpnm.network.Network.find_connected_pores"]], "find_connecting_throat() (network method)": [[1224, "openpnm.network.Network.find_connecting_throat"]], "find_nearby_pores() (network method)": [[1225, "openpnm.network.Network.find_nearby_pores"]], "find_neighbor_pores() (network method)": [[1226, "openpnm.network.Network.find_neighbor_pores"]], "find_neighbor_throats() (network method)": [[1227, "openpnm.network.Network.find_neighbor_throats"]], "fromkeys() (network method)": [[1228, "openpnm.network.Network.fromkeys"]], "get() (network method)": [[1229, "openpnm.network.Network.get"]], "get_adjacency_matrix() (network method)": [[1230, "openpnm.network.Network.get_adjacency_matrix"]], "get_conduit_data() (network method)": [[1231, "openpnm.network.Network.get_conduit_data"]], "get_incidence_matrix() (network method)": [[1232, "openpnm.network.Network.get_incidence_matrix"]], "interpolate_data() (network method)": [[1233, "openpnm.network.Network.interpolate_data"]], "items() (network method)": [[1234, "openpnm.network.Network.items"]], "keys() (network method)": [[1235, "openpnm.network.Network.keys"]], "labels() (network method)": [[1236, "openpnm.network.Network.labels"]], "num_neighbors() (network method)": [[1237, "openpnm.network.Network.num_neighbors"]], "num_pores() (network method)": [[1238, "openpnm.network.Network.num_pores"]], "num_throats() (network method)": [[1239, "openpnm.network.Network.num_throats"]], "pop() (network method)": [[1240, "openpnm.network.Network.pop"]], "popitem() (network method)": [[1241, "openpnm.network.Network.popitem"]], "pores() (network method)": [[1242, "openpnm.network.Network.pores"]], "props() (network method)": [[1243, "openpnm.network.Network.props"]], "regenerate_models() (network method)": [[1244, "openpnm.network.Network.regenerate_models"]], "run_model() (network method)": [[1245, "openpnm.network.Network.run_model"]], "set_label() (network method)": [[1246, "openpnm.network.Network.set_label"]], "setdefault() (network method)": [[1247, "openpnm.network.Network.setdefault"]], "throats() (network method)": [[1248, "openpnm.network.Network.throats"]], "to_indices() (network method)": [[1249, "openpnm.network.Network.to_indices"]], "to_mask() (network method)": [[1250, "openpnm.network.Network.to_mask"]], "update() (network method)": [[1251, "openpnm.network.Network.update"]], "values() (network method)": [[1252, "openpnm.network.Network.values"]], "voronoi (class in openpnm.network)": [[1253, "openpnm.network.Voronoi"]], "add_model() (voronoi method)": [[1254, "openpnm.network.Voronoi.add_model"]], "add_model_collection() (voronoi method)": [[1255, "openpnm.network.Voronoi.add_model_collection"]], "clear() (voronoi method)": [[1256, "openpnm.network.Voronoi.clear"]], "copy() (voronoi method)": [[1257, "openpnm.network.Voronoi.copy"]], "create_adjacency_matrix() (voronoi method)": [[1258, "openpnm.network.Voronoi.create_adjacency_matrix"]], "create_incidence_matrix() (voronoi method)": [[1259, "openpnm.network.Voronoi.create_incidence_matrix"]], "filter_by_label() (voronoi method)": [[1260, "openpnm.network.Voronoi.filter_by_label"]], "find_connected_pores() (voronoi method)": [[1261, "openpnm.network.Voronoi.find_connected_pores"]], "find_connecting_throat() (voronoi method)": [[1262, "openpnm.network.Voronoi.find_connecting_throat"]], "find_nearby_pores() (voronoi method)": [[1263, "openpnm.network.Voronoi.find_nearby_pores"]], "find_neighbor_pores() (voronoi method)": [[1264, "openpnm.network.Voronoi.find_neighbor_pores"]], "find_neighbor_throats() (voronoi method)": [[1265, "openpnm.network.Voronoi.find_neighbor_throats"]], "fromkeys() (voronoi method)": [[1266, "openpnm.network.Voronoi.fromkeys"]], "get() (voronoi method)": [[1267, "openpnm.network.Voronoi.get"]], "get_adjacency_matrix() (voronoi method)": [[1268, "openpnm.network.Voronoi.get_adjacency_matrix"]], "get_conduit_data() (voronoi method)": [[1269, "openpnm.network.Voronoi.get_conduit_data"]], "get_incidence_matrix() (voronoi method)": [[1270, "openpnm.network.Voronoi.get_incidence_matrix"]], "interpolate_data() (voronoi method)": [[1271, "openpnm.network.Voronoi.interpolate_data"]], "items() (voronoi method)": [[1272, "openpnm.network.Voronoi.items"]], "keys() (voronoi method)": [[1273, "openpnm.network.Voronoi.keys"]], "labels() (voronoi method)": [[1274, "openpnm.network.Voronoi.labels"]], "num_neighbors() (voronoi method)": [[1275, "openpnm.network.Voronoi.num_neighbors"]], "num_pores() (voronoi method)": [[1276, "openpnm.network.Voronoi.num_pores"]], "num_throats() (voronoi method)": [[1277, "openpnm.network.Voronoi.num_throats"]], "pop() (voronoi method)": [[1278, "openpnm.network.Voronoi.pop"]], "popitem() (voronoi method)": [[1279, "openpnm.network.Voronoi.popitem"]], "pores() (voronoi method)": [[1280, "openpnm.network.Voronoi.pores"]], "props() (voronoi method)": [[1281, "openpnm.network.Voronoi.props"]], "regenerate_models() (voronoi method)": [[1282, "openpnm.network.Voronoi.regenerate_models"]], "run_model() (voronoi method)": [[1283, "openpnm.network.Voronoi.run_model"]], "set_label() (voronoi method)": [[1284, "openpnm.network.Voronoi.set_label"]], "setdefault() (voronoi method)": [[1285, "openpnm.network.Voronoi.setdefault"]], "throats() (voronoi method)": [[1286, "openpnm.network.Voronoi.throats"]], "to_indices() (voronoi method)": [[1287, "openpnm.network.Voronoi.to_indices"]], "to_mask() (voronoi method)": [[1288, "openpnm.network.Voronoi.to_mask"]], "update() (voronoi method)": [[1289, "openpnm.network.Voronoi.update"]], "values() (voronoi method)": [[1290, "openpnm.network.Voronoi.values"]], "openpnm.phase": [[1291, "module-openpnm.phase"]], "air (class in openpnm.phase)": [[1292, "openpnm.phase.Air"]], "add_model() (air method)": [[1293, "openpnm.phase.Air.add_model"]], "add_model_collection() (air method)": [[1294, "openpnm.phase.Air.add_model_collection"]], "clear() (air method)": [[1295, "openpnm.phase.Air.clear"]], "copy() (air method)": [[1296, "openpnm.phase.Air.copy"]], "filter_by_label() (air method)": [[1297, "openpnm.phase.Air.filter_by_label"]], "fromkeys() (air method)": [[1298, "openpnm.phase.Air.fromkeys"]], "get() (air method)": [[1299, "openpnm.phase.Air.get"]], "get_conduit_data() (air method)": [[1300, "openpnm.phase.Air.get_conduit_data"]], "interpolate_data() (air method)": [[1301, "openpnm.phase.Air.interpolate_data"]], "items() (air method)": [[1302, "openpnm.phase.Air.items"]], "keys() (air method)": [[1303, "openpnm.phase.Air.keys"]], "labels() (air method)": [[1304, "openpnm.phase.Air.labels"]], "num_pores() (air method)": [[1305, "openpnm.phase.Air.num_pores"]], "num_throats() (air method)": [[1306, "openpnm.phase.Air.num_throats"]], "pop() (air method)": [[1307, "openpnm.phase.Air.pop"]], "popitem() (air method)": [[1308, "openpnm.phase.Air.popitem"]], "pores() (air method)": [[1309, "openpnm.phase.Air.pores"]], "props() (air method)": [[1310, "openpnm.phase.Air.props"]], "regenerate_models() (air method)": [[1311, "openpnm.phase.Air.regenerate_models"]], "run_model() (air method)": [[1312, "openpnm.phase.Air.run_model"]], "set_label() (air method)": [[1313, "openpnm.phase.Air.set_label"]], "setdefault() (air method)": [[1314, "openpnm.phase.Air.setdefault"]], "throats() (air method)": [[1315, "openpnm.phase.Air.throats"]], "to_indices() (air method)": [[1316, "openpnm.phase.Air.to_indices"]], "to_mask() (air method)": [[1317, "openpnm.phase.Air.to_mask"]], "update() (air method)": [[1318, "openpnm.phase.Air.update"]], "values() (air method)": [[1319, "openpnm.phase.Air.values"]], "binarygas (class in openpnm.phase)": [[1320, "openpnm.phase.BinaryGas"]], "add_comp() (binarygas method)": [[1321, "openpnm.phase.BinaryGas.add_comp"]], "add_model() (binarygas method)": [[1322, "openpnm.phase.BinaryGas.add_model"]], "add_model_collection() (binarygas method)": [[1323, "openpnm.phase.BinaryGas.add_model_collection"]], "check_mixture_health() (binarygas method)": [[1324, "openpnm.phase.BinaryGas.check_mixture_health"]], "clear() (binarygas method)": [[1325, "openpnm.phase.BinaryGas.clear"]], "copy() (binarygas method)": [[1326, "openpnm.phase.BinaryGas.copy"]], "filter_by_label() (binarygas method)": [[1327, "openpnm.phase.BinaryGas.filter_by_label"]], "fromkeys() (binarygas method)": [[1328, "openpnm.phase.BinaryGas.fromkeys"]], "get() (binarygas method)": [[1329, "openpnm.phase.BinaryGas.get"]], "get_comp_vals() (binarygas method)": [[1330, "openpnm.phase.BinaryGas.get_comp_vals"]], "get_conduit_data() (binarygas method)": [[1331, "openpnm.phase.BinaryGas.get_conduit_data"]], "get_mix_vals() (binarygas method)": [[1332, "openpnm.phase.BinaryGas.get_mix_vals"]], "interpolate_data() (binarygas method)": [[1333, "openpnm.phase.BinaryGas.interpolate_data"]], "items() (binarygas method)": [[1334, "openpnm.phase.BinaryGas.items"]], "keys() (binarygas method)": [[1335, "openpnm.phase.BinaryGas.keys"]], "labels() (binarygas method)": [[1336, "openpnm.phase.BinaryGas.labels"]], "num_pores() (binarygas method)": [[1337, "openpnm.phase.BinaryGas.num_pores"]], "num_throats() (binarygas method)": [[1338, "openpnm.phase.BinaryGas.num_throats"]], "pop() (binarygas method)": [[1339, "openpnm.phase.BinaryGas.pop"]], "popitem() (binarygas method)": [[1340, "openpnm.phase.BinaryGas.popitem"]], "pores() (binarygas method)": [[1341, "openpnm.phase.BinaryGas.pores"]], "props() (binarygas method)": [[1342, "openpnm.phase.BinaryGas.props"]], "regenerate_models() (binarygas method)": [[1343, "openpnm.phase.BinaryGas.regenerate_models"]], "remove_comp() (binarygas method)": [[1344, "openpnm.phase.BinaryGas.remove_comp"]], "run_model() (binarygas method)": [[1345, "openpnm.phase.BinaryGas.run_model"]], "set_label() (binarygas method)": [[1346, "openpnm.phase.BinaryGas.set_label"]], "setdefault() (binarygas method)": [[1347, "openpnm.phase.BinaryGas.setdefault"]], "throats() (binarygas method)": [[1348, "openpnm.phase.BinaryGas.throats"]], "to_indices() (binarygas method)": [[1349, "openpnm.phase.BinaryGas.to_indices"]], "to_mask() (binarygas method)": [[1350, "openpnm.phase.BinaryGas.to_mask"]], "update() (binarygas method)": [[1351, "openpnm.phase.BinaryGas.update"]], "values() (binarygas method)": [[1352, "openpnm.phase.BinaryGas.values"]], "y() (binarygas method)": [[1353, "openpnm.phase.BinaryGas.y"]], "gasmixture (class in openpnm.phase)": [[1354, "openpnm.phase.GasMixture"]], "add_comp() (gasmixture method)": [[1355, "openpnm.phase.GasMixture.add_comp"]], "add_model() (gasmixture method)": [[1356, "openpnm.phase.GasMixture.add_model"]], "add_model_collection() (gasmixture method)": [[1357, "openpnm.phase.GasMixture.add_model_collection"]], "check_mixture_health() (gasmixture method)": [[1358, "openpnm.phase.GasMixture.check_mixture_health"]], "clear() (gasmixture method)": [[1359, "openpnm.phase.GasMixture.clear"]], "copy() (gasmixture method)": [[1360, "openpnm.phase.GasMixture.copy"]], "filter_by_label() (gasmixture method)": [[1361, "openpnm.phase.GasMixture.filter_by_label"]], "fromkeys() (gasmixture method)": [[1362, "openpnm.phase.GasMixture.fromkeys"]], "get() (gasmixture method)": [[1363, "openpnm.phase.GasMixture.get"]], "get_comp_vals() (gasmixture method)": [[1364, "openpnm.phase.GasMixture.get_comp_vals"]], "get_conduit_data() (gasmixture method)": [[1365, "openpnm.phase.GasMixture.get_conduit_data"]], "get_mix_vals() (gasmixture method)": [[1366, "openpnm.phase.GasMixture.get_mix_vals"]], "interpolate_data() (gasmixture method)": [[1367, "openpnm.phase.GasMixture.interpolate_data"]], "items() (gasmixture method)": [[1368, "openpnm.phase.GasMixture.items"]], "keys() (gasmixture method)": [[1369, "openpnm.phase.GasMixture.keys"]], "labels() (gasmixture method)": [[1370, "openpnm.phase.GasMixture.labels"]], "num_pores() (gasmixture method)": [[1371, "openpnm.phase.GasMixture.num_pores"]], "num_throats() (gasmixture method)": [[1372, "openpnm.phase.GasMixture.num_throats"]], "pop() (gasmixture method)": [[1373, "openpnm.phase.GasMixture.pop"]], "popitem() (gasmixture method)": [[1374, "openpnm.phase.GasMixture.popitem"]], "pores() (gasmixture method)": [[1375, "openpnm.phase.GasMixture.pores"]], "props() (gasmixture method)": [[1376, "openpnm.phase.GasMixture.props"]], "regenerate_models() (gasmixture method)": [[1377, "openpnm.phase.GasMixture.regenerate_models"]], "remove_comp() (gasmixture method)": [[1378, "openpnm.phase.GasMixture.remove_comp"]], "run_model() (gasmixture method)": [[1379, "openpnm.phase.GasMixture.run_model"]], "set_label() (gasmixture method)": [[1380, "openpnm.phase.GasMixture.set_label"]], "setdefault() (gasmixture method)": [[1381, "openpnm.phase.GasMixture.setdefault"]], "throats() (gasmixture method)": [[1382, "openpnm.phase.GasMixture.throats"]], "to_indices() (gasmixture method)": [[1383, "openpnm.phase.GasMixture.to_indices"]], "to_mask() (gasmixture method)": [[1384, "openpnm.phase.GasMixture.to_mask"]], "update() (gasmixture method)": [[1385, "openpnm.phase.GasMixture.update"]], "values() (gasmixture method)": [[1386, "openpnm.phase.GasMixture.values"]], "y() (gasmixture method)": [[1387, "openpnm.phase.GasMixture.y"]], "liquidmixture (class in openpnm.phase)": [[1388, "openpnm.phase.LiquidMixture"]], "add_comp() (liquidmixture method)": [[1389, "openpnm.phase.LiquidMixture.add_comp"]], "add_model() (liquidmixture method)": [[1390, "openpnm.phase.LiquidMixture.add_model"]], "add_model_collection() (liquidmixture method)": [[1391, "openpnm.phase.LiquidMixture.add_model_collection"]], "check_mixture_health() (liquidmixture method)": [[1392, "openpnm.phase.LiquidMixture.check_mixture_health"]], "clear() (liquidmixture method)": [[1393, "openpnm.phase.LiquidMixture.clear"]], "copy() (liquidmixture method)": [[1394, "openpnm.phase.LiquidMixture.copy"]], "filter_by_label() (liquidmixture method)": [[1395, "openpnm.phase.LiquidMixture.filter_by_label"]], "fromkeys() (liquidmixture method)": [[1396, "openpnm.phase.LiquidMixture.fromkeys"]], "get() (liquidmixture method)": [[1397, "openpnm.phase.LiquidMixture.get"]], "get_comp_vals() (liquidmixture method)": [[1398, "openpnm.phase.LiquidMixture.get_comp_vals"]], "get_conduit_data() (liquidmixture method)": [[1399, "openpnm.phase.LiquidMixture.get_conduit_data"]], "get_mix_vals() (liquidmixture method)": [[1400, "openpnm.phase.LiquidMixture.get_mix_vals"]], "interpolate_data() (liquidmixture method)": [[1401, "openpnm.phase.LiquidMixture.interpolate_data"]], "items() (liquidmixture method)": [[1402, "openpnm.phase.LiquidMixture.items"]], "keys() (liquidmixture method)": [[1403, "openpnm.phase.LiquidMixture.keys"]], "labels() (liquidmixture method)": [[1404, "openpnm.phase.LiquidMixture.labels"]], "num_pores() (liquidmixture method)": [[1405, "openpnm.phase.LiquidMixture.num_pores"]], "num_throats() (liquidmixture method)": [[1406, "openpnm.phase.LiquidMixture.num_throats"]], "pop() (liquidmixture method)": [[1407, "openpnm.phase.LiquidMixture.pop"]], "popitem() (liquidmixture method)": [[1408, "openpnm.phase.LiquidMixture.popitem"]], "pores() (liquidmixture method)": [[1409, "openpnm.phase.LiquidMixture.pores"]], "props() (liquidmixture method)": [[1410, "openpnm.phase.LiquidMixture.props"]], "regenerate_models() (liquidmixture method)": [[1411, "openpnm.phase.LiquidMixture.regenerate_models"]], "remove_comp() (liquidmixture method)": [[1412, "openpnm.phase.LiquidMixture.remove_comp"]], "run_model() (liquidmixture method)": [[1413, "openpnm.phase.LiquidMixture.run_model"]], "set_label() (liquidmixture method)": [[1414, "openpnm.phase.LiquidMixture.set_label"]], "setdefault() (liquidmixture method)": [[1415, "openpnm.phase.LiquidMixture.setdefault"]], "throats() (liquidmixture method)": [[1416, "openpnm.phase.LiquidMixture.throats"]], "to_indices() (liquidmixture method)": [[1417, "openpnm.phase.LiquidMixture.to_indices"]], "to_mask() (liquidmixture method)": [[1418, "openpnm.phase.LiquidMixture.to_mask"]], "update() (liquidmixture method)": [[1419, "openpnm.phase.LiquidMixture.update"]], "values() (liquidmixture method)": [[1420, "openpnm.phase.LiquidMixture.values"]], "x() (liquidmixture method)": [[1421, "openpnm.phase.LiquidMixture.x"]], "mercury (class in openpnm.phase)": [[1422, "openpnm.phase.Mercury"]], "add_model() (mercury method)": [[1423, "openpnm.phase.Mercury.add_model"]], "add_model_collection() (mercury method)": [[1424, "openpnm.phase.Mercury.add_model_collection"]], "clear() (mercury method)": [[1425, "openpnm.phase.Mercury.clear"]], "copy() (mercury method)": [[1426, "openpnm.phase.Mercury.copy"]], "filter_by_label() (mercury method)": [[1427, "openpnm.phase.Mercury.filter_by_label"]], "fromkeys() (mercury method)": [[1428, "openpnm.phase.Mercury.fromkeys"]], "get() (mercury method)": [[1429, "openpnm.phase.Mercury.get"]], "get_conduit_data() (mercury method)": [[1430, "openpnm.phase.Mercury.get_conduit_data"]], "interpolate_data() (mercury method)": [[1431, "openpnm.phase.Mercury.interpolate_data"]], "items() (mercury method)": [[1432, "openpnm.phase.Mercury.items"]], "keys() (mercury method)": [[1433, "openpnm.phase.Mercury.keys"]], "labels() (mercury method)": [[1434, "openpnm.phase.Mercury.labels"]], "num_pores() (mercury method)": [[1435, "openpnm.phase.Mercury.num_pores"]], "num_throats() (mercury method)": [[1436, "openpnm.phase.Mercury.num_throats"]], "pop() (mercury method)": [[1437, "openpnm.phase.Mercury.pop"]], "popitem() (mercury method)": [[1438, "openpnm.phase.Mercury.popitem"]], "pores() (mercury method)": [[1439, "openpnm.phase.Mercury.pores"]], "props() (mercury method)": [[1440, "openpnm.phase.Mercury.props"]], "regenerate_models() (mercury method)": [[1441, "openpnm.phase.Mercury.regenerate_models"]], "run_model() (mercury method)": [[1442, "openpnm.phase.Mercury.run_model"]], "set_label() (mercury method)": [[1443, "openpnm.phase.Mercury.set_label"]], "setdefault() (mercury method)": [[1444, "openpnm.phase.Mercury.setdefault"]], "throats() (mercury method)": [[1445, "openpnm.phase.Mercury.throats"]], "to_indices() (mercury method)": [[1446, "openpnm.phase.Mercury.to_indices"]], "to_mask() (mercury method)": [[1447, "openpnm.phase.Mercury.to_mask"]], "update() (mercury method)": [[1448, "openpnm.phase.Mercury.update"]], "values() (mercury method)": [[1449, "openpnm.phase.Mercury.values"]], "mixture (class in openpnm.phase)": [[1450, "openpnm.phase.Mixture"]], "add_comp() (mixture method)": [[1451, "openpnm.phase.Mixture.add_comp"]], "add_model() (mixture method)": [[1452, "openpnm.phase.Mixture.add_model"]], "add_model_collection() (mixture method)": [[1453, "openpnm.phase.Mixture.add_model_collection"]], "check_mixture_health() (mixture method)": [[1454, "openpnm.phase.Mixture.check_mixture_health"]], "clear() (mixture method)": [[1455, "openpnm.phase.Mixture.clear"]], "copy() (mixture method)": [[1456, "openpnm.phase.Mixture.copy"]], "filter_by_label() (mixture method)": [[1457, "openpnm.phase.Mixture.filter_by_label"]], "fromkeys() (mixture method)": [[1458, "openpnm.phase.Mixture.fromkeys"]], "get() (mixture method)": [[1459, "openpnm.phase.Mixture.get"]], "get_comp_vals() (mixture method)": [[1460, "openpnm.phase.Mixture.get_comp_vals"]], "get_conduit_data() (mixture method)": [[1461, "openpnm.phase.Mixture.get_conduit_data"]], "get_mix_vals() (mixture method)": [[1462, "openpnm.phase.Mixture.get_mix_vals"]], "interpolate_data() (mixture method)": [[1463, "openpnm.phase.Mixture.interpolate_data"]], "items() (mixture method)": [[1464, "openpnm.phase.Mixture.items"]], "keys() (mixture method)": [[1465, "openpnm.phase.Mixture.keys"]], "labels() (mixture method)": [[1466, "openpnm.phase.Mixture.labels"]], "num_pores() (mixture method)": [[1467, "openpnm.phase.Mixture.num_pores"]], "num_throats() (mixture method)": [[1468, "openpnm.phase.Mixture.num_throats"]], "pop() (mixture method)": [[1469, "openpnm.phase.Mixture.pop"]], "popitem() (mixture method)": [[1470, "openpnm.phase.Mixture.popitem"]], "pores() (mixture method)": [[1471, "openpnm.phase.Mixture.pores"]], "props() (mixture method)": [[1472, "openpnm.phase.Mixture.props"]], "regenerate_models() (mixture method)": [[1473, "openpnm.phase.Mixture.regenerate_models"]], "remove_comp() (mixture method)": [[1474, "openpnm.phase.Mixture.remove_comp"]], "run_model() (mixture method)": [[1475, "openpnm.phase.Mixture.run_model"]], "set_label() (mixture method)": [[1476, "openpnm.phase.Mixture.set_label"]], "setdefault() (mixture method)": [[1477, "openpnm.phase.Mixture.setdefault"]], "throats() (mixture method)": [[1478, "openpnm.phase.Mixture.throats"]], "to_indices() (mixture method)": [[1479, "openpnm.phase.Mixture.to_indices"]], "to_mask() (mixture method)": [[1480, "openpnm.phase.Mixture.to_mask"]], "update() (mixture method)": [[1481, "openpnm.phase.Mixture.update"]], "values() (mixture method)": [[1482, "openpnm.phase.Mixture.values"]], "phase (class in openpnm.phase)": [[1483, "openpnm.phase.Phase"]], "add_model() (phase method)": [[1484, "openpnm.phase.Phase.add_model"]], "add_model_collection() (phase method)": [[1485, "openpnm.phase.Phase.add_model_collection"]], "clear() (phase method)": [[1486, "openpnm.phase.Phase.clear"]], "copy() (phase method)": [[1487, "openpnm.phase.Phase.copy"]], "filter_by_label() (phase method)": [[1488, "openpnm.phase.Phase.filter_by_label"]], "fromkeys() (phase method)": [[1489, "openpnm.phase.Phase.fromkeys"]], "get() (phase method)": [[1490, "openpnm.phase.Phase.get"]], "get_conduit_data() (phase method)": [[1491, "openpnm.phase.Phase.get_conduit_data"]], "interpolate_data() (phase method)": [[1492, "openpnm.phase.Phase.interpolate_data"]], "items() (phase method)": [[1493, "openpnm.phase.Phase.items"]], "keys() (phase method)": [[1494, "openpnm.phase.Phase.keys"]], "labels() (phase method)": [[1495, "openpnm.phase.Phase.labels"]], "num_pores() (phase method)": [[1496, "openpnm.phase.Phase.num_pores"]], "num_throats() (phase method)": [[1497, "openpnm.phase.Phase.num_throats"]], "pop() (phase method)": [[1498, "openpnm.phase.Phase.pop"]], "popitem() (phase method)": [[1499, "openpnm.phase.Phase.popitem"]], "pores() (phase method)": [[1500, "openpnm.phase.Phase.pores"]], "props() (phase method)": [[1501, "openpnm.phase.Phase.props"]], "regenerate_models() (phase method)": [[1502, "openpnm.phase.Phase.regenerate_models"]], "run_model() (phase method)": [[1503, "openpnm.phase.Phase.run_model"]], "set_label() (phase method)": [[1504, "openpnm.phase.Phase.set_label"]], "setdefault() (phase method)": [[1505, "openpnm.phase.Phase.setdefault"]], "throats() (phase method)": [[1506, "openpnm.phase.Phase.throats"]], "to_indices() (phase method)": [[1507, "openpnm.phase.Phase.to_indices"]], "to_mask() (phase method)": [[1508, "openpnm.phase.Phase.to_mask"]], "update() (phase method)": [[1509, "openpnm.phase.Phase.update"]], "values() (phase method)": [[1510, "openpnm.phase.Phase.values"]], "species (class in openpnm.phase)": [[1511, "openpnm.phase.Species"]], "add_model() (species method)": [[1512, "openpnm.phase.Species.add_model"]], "add_model_collection() (species method)": [[1513, "openpnm.phase.Species.add_model_collection"]], "clear() (species method)": [[1514, "openpnm.phase.Species.clear"]], "copy() (species method)": [[1515, "openpnm.phase.Species.copy"]], "filter_by_label() (species method)": [[1516, "openpnm.phase.Species.filter_by_label"]], "fromkeys() (species method)": [[1517, "openpnm.phase.Species.fromkeys"]], "get() (species method)": [[1518, "openpnm.phase.Species.get"]], "get_conduit_data() (species method)": [[1519, "openpnm.phase.Species.get_conduit_data"]], "interpolate_data() (species method)": [[1520, "openpnm.phase.Species.interpolate_data"]], "items() (species method)": [[1521, "openpnm.phase.Species.items"]], "keys() (species method)": [[1522, "openpnm.phase.Species.keys"]], "labels() (species method)": [[1523, "openpnm.phase.Species.labels"]], "num_pores() (species method)": [[1524, "openpnm.phase.Species.num_pores"]], "num_throats() (species method)": [[1525, "openpnm.phase.Species.num_throats"]], "pop() (species method)": [[1526, "openpnm.phase.Species.pop"]], "popitem() (species method)": [[1527, "openpnm.phase.Species.popitem"]], "pores() (species method)": [[1528, "openpnm.phase.Species.pores"]], "props() (species method)": [[1529, "openpnm.phase.Species.props"]], "regenerate_models() (species method)": [[1530, "openpnm.phase.Species.regenerate_models"]], "run_model() (species method)": [[1531, "openpnm.phase.Species.run_model"]], "set_label() (species method)": [[1532, "openpnm.phase.Species.set_label"]], "setdefault() (species method)": [[1533, "openpnm.phase.Species.setdefault"]], "throats() (species method)": [[1534, "openpnm.phase.Species.throats"]], "to_indices() (species method)": [[1535, "openpnm.phase.Species.to_indices"]], "to_mask() (species method)": [[1536, "openpnm.phase.Species.to_mask"]], "update() (species method)": [[1537, "openpnm.phase.Species.update"]], "values() (species method)": [[1538, "openpnm.phase.Species.values"]], "standardgas (class in openpnm.phase)": [[1539, "openpnm.phase.StandardGas"]], "add_model() (standardgas method)": [[1540, "openpnm.phase.StandardGas.add_model"]], "add_model_collection() (standardgas method)": [[1541, "openpnm.phase.StandardGas.add_model_collection"]], "clear() (standardgas method)": [[1542, "openpnm.phase.StandardGas.clear"]], "copy() (standardgas method)": [[1543, "openpnm.phase.StandardGas.copy"]], "filter_by_label() (standardgas method)": [[1544, "openpnm.phase.StandardGas.filter_by_label"]], "fromkeys() (standardgas method)": [[1545, "openpnm.phase.StandardGas.fromkeys"]], "get() (standardgas method)": [[1546, "openpnm.phase.StandardGas.get"]], "get_conduit_data() (standardgas method)": [[1547, "openpnm.phase.StandardGas.get_conduit_data"]], "interpolate_data() (standardgas method)": [[1548, "openpnm.phase.StandardGas.interpolate_data"]], "items() (standardgas method)": [[1549, "openpnm.phase.StandardGas.items"]], "keys() (standardgas method)": [[1550, "openpnm.phase.StandardGas.keys"]], "labels() (standardgas method)": [[1551, "openpnm.phase.StandardGas.labels"]], "num_pores() (standardgas method)": [[1552, "openpnm.phase.StandardGas.num_pores"]], "num_throats() (standardgas method)": [[1553, "openpnm.phase.StandardGas.num_throats"]], "pop() (standardgas method)": [[1554, "openpnm.phase.StandardGas.pop"]], "popitem() (standardgas method)": [[1555, "openpnm.phase.StandardGas.popitem"]], "pores() (standardgas method)": [[1556, "openpnm.phase.StandardGas.pores"]], "props() (standardgas method)": [[1557, "openpnm.phase.StandardGas.props"]], "regenerate_models() (standardgas method)": [[1558, "openpnm.phase.StandardGas.regenerate_models"]], "run_model() (standardgas method)": [[1559, "openpnm.phase.StandardGas.run_model"]], "set_label() (standardgas method)": [[1560, "openpnm.phase.StandardGas.set_label"]], "setdefault() (standardgas method)": [[1561, "openpnm.phase.StandardGas.setdefault"]], "throats() (standardgas method)": [[1562, "openpnm.phase.StandardGas.throats"]], "to_indices() (standardgas method)": [[1563, "openpnm.phase.StandardGas.to_indices"]], "to_mask() (standardgas method)": [[1564, "openpnm.phase.StandardGas.to_mask"]], "update() (standardgas method)": [[1565, "openpnm.phase.StandardGas.update"]], "values() (standardgas method)": [[1566, "openpnm.phase.StandardGas.values"]], "standardgasmixture (class in openpnm.phase)": [[1567, "openpnm.phase.StandardGasMixture"]], "add_comp() (standardgasmixture method)": [[1568, "openpnm.phase.StandardGasMixture.add_comp"]], "add_model() (standardgasmixture method)": [[1569, "openpnm.phase.StandardGasMixture.add_model"]], "add_model_collection() (standardgasmixture method)": [[1570, "openpnm.phase.StandardGasMixture.add_model_collection"]], "check_mixture_health() (standardgasmixture method)": [[1571, "openpnm.phase.StandardGasMixture.check_mixture_health"]], "clear() (standardgasmixture method)": [[1572, "openpnm.phase.StandardGasMixture.clear"]], "copy() (standardgasmixture method)": [[1573, "openpnm.phase.StandardGasMixture.copy"]], "filter_by_label() (standardgasmixture method)": [[1574, "openpnm.phase.StandardGasMixture.filter_by_label"]], "fromkeys() (standardgasmixture method)": [[1575, "openpnm.phase.StandardGasMixture.fromkeys"]], "get() (standardgasmixture method)": [[1576, "openpnm.phase.StandardGasMixture.get"]], "get_comp_vals() (standardgasmixture method)": [[1577, "openpnm.phase.StandardGasMixture.get_comp_vals"]], "get_conduit_data() (standardgasmixture method)": [[1578, "openpnm.phase.StandardGasMixture.get_conduit_data"]], "get_mix_vals() (standardgasmixture method)": [[1579, "openpnm.phase.StandardGasMixture.get_mix_vals"]], "interpolate_data() (standardgasmixture method)": [[1580, "openpnm.phase.StandardGasMixture.interpolate_data"]], "items() (standardgasmixture method)": [[1581, "openpnm.phase.StandardGasMixture.items"]], "keys() (standardgasmixture method)": [[1582, "openpnm.phase.StandardGasMixture.keys"]], "labels() (standardgasmixture method)": [[1583, "openpnm.phase.StandardGasMixture.labels"]], "num_pores() (standardgasmixture method)": [[1584, "openpnm.phase.StandardGasMixture.num_pores"]], "num_throats() (standardgasmixture method)": [[1585, "openpnm.phase.StandardGasMixture.num_throats"]], "pop() (standardgasmixture method)": [[1586, "openpnm.phase.StandardGasMixture.pop"]], "popitem() (standardgasmixture method)": [[1587, "openpnm.phase.StandardGasMixture.popitem"]], "pores() (standardgasmixture method)": [[1588, "openpnm.phase.StandardGasMixture.pores"]], "props() (standardgasmixture method)": [[1589, "openpnm.phase.StandardGasMixture.props"]], "regenerate_models() (standardgasmixture method)": [[1590, "openpnm.phase.StandardGasMixture.regenerate_models"]], "remove_comp() (standardgasmixture method)": [[1591, "openpnm.phase.StandardGasMixture.remove_comp"]], "run_model() (standardgasmixture method)": [[1592, "openpnm.phase.StandardGasMixture.run_model"]], "set_label() (standardgasmixture method)": [[1593, "openpnm.phase.StandardGasMixture.set_label"]], "setdefault() (standardgasmixture method)": [[1594, "openpnm.phase.StandardGasMixture.setdefault"]], "throats() (standardgasmixture method)": [[1595, "openpnm.phase.StandardGasMixture.throats"]], "to_indices() (standardgasmixture method)": [[1596, "openpnm.phase.StandardGasMixture.to_indices"]], "to_mask() (standardgasmixture method)": [[1597, "openpnm.phase.StandardGasMixture.to_mask"]], "update() (standardgasmixture method)": [[1598, "openpnm.phase.StandardGasMixture.update"]], "values() (standardgasmixture method)": [[1599, "openpnm.phase.StandardGasMixture.values"]], "y() (standardgasmixture method)": [[1600, "openpnm.phase.StandardGasMixture.y"]], "standardliquid (class in openpnm.phase)": [[1601, "openpnm.phase.StandardLiquid"]], "add_model() (standardliquid method)": [[1602, "openpnm.phase.StandardLiquid.add_model"]], "add_model_collection() (standardliquid method)": [[1603, "openpnm.phase.StandardLiquid.add_model_collection"]], "clear() (standardliquid method)": [[1604, "openpnm.phase.StandardLiquid.clear"]], "copy() (standardliquid method)": [[1605, "openpnm.phase.StandardLiquid.copy"]], "filter_by_label() (standardliquid method)": [[1606, "openpnm.phase.StandardLiquid.filter_by_label"]], "fromkeys() (standardliquid method)": [[1607, "openpnm.phase.StandardLiquid.fromkeys"]], "get() (standardliquid method)": [[1608, "openpnm.phase.StandardLiquid.get"]], "get_conduit_data() (standardliquid method)": [[1609, "openpnm.phase.StandardLiquid.get_conduit_data"]], "interpolate_data() (standardliquid method)": [[1610, "openpnm.phase.StandardLiquid.interpolate_data"]], "items() (standardliquid method)": [[1611, "openpnm.phase.StandardLiquid.items"]], "keys() (standardliquid method)": [[1612, "openpnm.phase.StandardLiquid.keys"]], "labels() (standardliquid method)": [[1613, "openpnm.phase.StandardLiquid.labels"]], "num_pores() (standardliquid method)": [[1614, "openpnm.phase.StandardLiquid.num_pores"]], "num_throats() (standardliquid method)": [[1615, "openpnm.phase.StandardLiquid.num_throats"]], "pop() (standardliquid method)": [[1616, "openpnm.phase.StandardLiquid.pop"]], "popitem() (standardliquid method)": [[1617, "openpnm.phase.StandardLiquid.popitem"]], "pores() (standardliquid method)": [[1618, "openpnm.phase.StandardLiquid.pores"]], "props() (standardliquid method)": [[1619, "openpnm.phase.StandardLiquid.props"]], "regenerate_models() (standardliquid method)": [[1620, "openpnm.phase.StandardLiquid.regenerate_models"]], "run_model() (standardliquid method)": [[1621, "openpnm.phase.StandardLiquid.run_model"]], "set_label() (standardliquid method)": [[1622, "openpnm.phase.StandardLiquid.set_label"]], "setdefault() (standardliquid method)": [[1623, "openpnm.phase.StandardLiquid.setdefault"]], "throats() (standardliquid method)": [[1624, "openpnm.phase.StandardLiquid.throats"]], "to_indices() (standardliquid method)": [[1625, "openpnm.phase.StandardLiquid.to_indices"]], "to_mask() (standardliquid method)": [[1626, "openpnm.phase.StandardLiquid.to_mask"]], "update() (standardliquid method)": [[1627, "openpnm.phase.StandardLiquid.update"]], "values() (standardliquid method)": [[1628, "openpnm.phase.StandardLiquid.values"]], "standardliquidmixture (class in openpnm.phase)": [[1629, "openpnm.phase.StandardLiquidMixture"]], "add_comp() (standardliquidmixture method)": [[1630, "openpnm.phase.StandardLiquidMixture.add_comp"]], "add_model() (standardliquidmixture method)": [[1631, "openpnm.phase.StandardLiquidMixture.add_model"]], "add_model_collection() (standardliquidmixture method)": [[1632, "openpnm.phase.StandardLiquidMixture.add_model_collection"]], "check_mixture_health() (standardliquidmixture method)": [[1633, "openpnm.phase.StandardLiquidMixture.check_mixture_health"]], "clear() (standardliquidmixture method)": [[1634, "openpnm.phase.StandardLiquidMixture.clear"]], "copy() (standardliquidmixture method)": [[1635, "openpnm.phase.StandardLiquidMixture.copy"]], "filter_by_label() (standardliquidmixture method)": [[1636, "openpnm.phase.StandardLiquidMixture.filter_by_label"]], "fromkeys() (standardliquidmixture method)": [[1637, "openpnm.phase.StandardLiquidMixture.fromkeys"]], "get() (standardliquidmixture method)": [[1638, "openpnm.phase.StandardLiquidMixture.get"]], "get_comp_vals() (standardliquidmixture method)": [[1639, "openpnm.phase.StandardLiquidMixture.get_comp_vals"]], "get_conduit_data() (standardliquidmixture method)": [[1640, "openpnm.phase.StandardLiquidMixture.get_conduit_data"]], "get_mix_vals() (standardliquidmixture method)": [[1641, "openpnm.phase.StandardLiquidMixture.get_mix_vals"]], "interpolate_data() (standardliquidmixture method)": [[1642, "openpnm.phase.StandardLiquidMixture.interpolate_data"]], "items() (standardliquidmixture method)": [[1643, "openpnm.phase.StandardLiquidMixture.items"]], "keys() (standardliquidmixture method)": [[1644, "openpnm.phase.StandardLiquidMixture.keys"]], "labels() (standardliquidmixture method)": [[1645, "openpnm.phase.StandardLiquidMixture.labels"]], "num_pores() (standardliquidmixture method)": [[1646, "openpnm.phase.StandardLiquidMixture.num_pores"]], "num_throats() (standardliquidmixture method)": [[1647, "openpnm.phase.StandardLiquidMixture.num_throats"]], "pop() (standardliquidmixture method)": [[1648, "openpnm.phase.StandardLiquidMixture.pop"]], "popitem() (standardliquidmixture method)": [[1649, "openpnm.phase.StandardLiquidMixture.popitem"]], "pores() (standardliquidmixture method)": [[1650, "openpnm.phase.StandardLiquidMixture.pores"]], "props() (standardliquidmixture method)": [[1651, "openpnm.phase.StandardLiquidMixture.props"]], "regenerate_models() (standardliquidmixture method)": [[1652, "openpnm.phase.StandardLiquidMixture.regenerate_models"]], "remove_comp() (standardliquidmixture method)": [[1653, "openpnm.phase.StandardLiquidMixture.remove_comp"]], "run_model() (standardliquidmixture method)": [[1654, "openpnm.phase.StandardLiquidMixture.run_model"]], "set_label() (standardliquidmixture method)": [[1655, "openpnm.phase.StandardLiquidMixture.set_label"]], "setdefault() (standardliquidmixture method)": [[1656, "openpnm.phase.StandardLiquidMixture.setdefault"]], "throats() (standardliquidmixture method)": [[1657, "openpnm.phase.StandardLiquidMixture.throats"]], "to_indices() (standardliquidmixture method)": [[1658, "openpnm.phase.StandardLiquidMixture.to_indices"]], "to_mask() (standardliquidmixture method)": [[1659, "openpnm.phase.StandardLiquidMixture.to_mask"]], "update() (standardliquidmixture method)": [[1660, "openpnm.phase.StandardLiquidMixture.update"]], "values() (standardliquidmixture method)": [[1661, "openpnm.phase.StandardLiquidMixture.values"]], "x() (standardliquidmixture method)": [[1662, "openpnm.phase.StandardLiquidMixture.x"]], "water (class in openpnm.phase)": [[1663, "openpnm.phase.Water"]], "add_model() (water method)": [[1664, "openpnm.phase.Water.add_model"]], "add_model_collection() (water method)": [[1665, "openpnm.phase.Water.add_model_collection"]], "clear() (water method)": [[1666, "openpnm.phase.Water.clear"]], "copy() (water method)": [[1667, "openpnm.phase.Water.copy"]], "filter_by_label() (water method)": [[1668, "openpnm.phase.Water.filter_by_label"]], "fromkeys() (water method)": [[1669, "openpnm.phase.Water.fromkeys"]], "get() (water method)": [[1670, "openpnm.phase.Water.get"]], "get_conduit_data() (water method)": [[1671, "openpnm.phase.Water.get_conduit_data"]], "interpolate_data() (water method)": [[1672, "openpnm.phase.Water.interpolate_data"]], "items() (water method)": [[1673, "openpnm.phase.Water.items"]], "keys() (water method)": [[1674, "openpnm.phase.Water.keys"]], "labels() (water method)": [[1675, "openpnm.phase.Water.labels"]], "num_pores() (water method)": [[1676, "openpnm.phase.Water.num_pores"]], "num_throats() (water method)": [[1677, "openpnm.phase.Water.num_throats"]], "pop() (water method)": [[1678, "openpnm.phase.Water.pop"]], "popitem() (water method)": [[1679, "openpnm.phase.Water.popitem"]], "pores() (water method)": [[1680, "openpnm.phase.Water.pores"]], "props() (water method)": [[1681, "openpnm.phase.Water.props"]], "regenerate_models() (water method)": [[1682, "openpnm.phase.Water.regenerate_models"]], "run_model() (water method)": [[1683, "openpnm.phase.Water.run_model"]], "set_label() (water method)": [[1684, "openpnm.phase.Water.set_label"]], "setdefault() (water method)": [[1685, "openpnm.phase.Water.setdefault"]], "throats() (water method)": [[1686, "openpnm.phase.Water.throats"]], "to_indices() (water method)": [[1687, "openpnm.phase.Water.to_indices"]], "to_mask() (water method)": [[1688, "openpnm.phase.Water.to_mask"]], "update() (water method)": [[1689, "openpnm.phase.Water.update"]], "values() (water method)": [[1690, "openpnm.phase.Water.values"]], "openpnm.solvers": [[1691, "module-openpnm.solvers"]], "basesolver (class in openpnm.solvers)": [[1692, "openpnm.solvers.BaseSolver"]], "solve() (basesolver method)": [[1693, "openpnm.solvers.BaseSolver.solve"]], "directsolver (class in openpnm.solvers)": [[1694, "openpnm.solvers.DirectSolver"]], "solve() (directsolver method)": [[1695, "openpnm.solvers.DirectSolver.solve"]], "iterativesolver (class in openpnm.solvers)": [[1696, "openpnm.solvers.IterativeSolver"]], "solve() (iterativesolver method)": [[1697, "openpnm.solvers.IterativeSolver.solve"]], "petsclinearsolver (class in openpnm.solvers)": [[1698, "openpnm.solvers.PETScLinearSolver"]], "solve() (petsclinearsolver method)": [[1699, "openpnm.solvers.PETScLinearSolver.solve"]], "pardisospsolve (class in openpnm.solvers)": [[1700, "openpnm.solvers.PardisoSpsolve"]], "solve() (pardisospsolve method)": [[1701, "openpnm.solvers.PardisoSpsolve.solve"]], "pyamgrugestubensolver (class in openpnm.solvers)": [[1702, "openpnm.solvers.PyamgRugeStubenSolver"]], "solve() (pyamgrugestubensolver method)": [[1703, "openpnm.solvers.PyamgRugeStubenSolver.solve"]], "scipycg (class in openpnm.solvers)": [[1704, "openpnm.solvers.ScipyCG"]], "solve() (scipycg method)": [[1705, "openpnm.solvers.ScipyCG.solve"]], "scipyspsolve (class in openpnm.solvers)": [[1706, "openpnm.solvers.ScipySpsolve"]], "solve() (scipyspsolve method)": [[1707, "openpnm.solvers.ScipySpsolve.solve"]], "openpnm.topotools": [[1708, "module-openpnm.topotools"]], "add_boundary_pores() (in module openpnm.topotools)": [[1709, "openpnm.topotools.add_boundary_pores"]], "add_reservoir_pore() (in module openpnm.topotools)": [[1710, "openpnm.topotools.add_reservoir_pore"]], "bond_percolation() (in module openpnm.topotools)": [[1711, "openpnm.topotools.bond_percolation"]], "clone_pores() (in module openpnm.topotools)": [[1712, "openpnm.topotools.clone_pores"]], "connect_pores() (in module openpnm.topotools)": [[1713, "openpnm.topotools.connect_pores"]], "conns_to_am() (in module openpnm.topotools)": [[1714, "openpnm.topotools.conns_to_am"]], "dimensionality() (in module openpnm.topotools)": [[1715, "openpnm.topotools.dimensionality"]], "drop_sites() (in module openpnm.topotools)": [[1716, "openpnm.topotools.drop_sites"]], "extend() (in module openpnm.topotools)": [[1717, "openpnm.topotools.extend"]], "filter_pores_by_z() (in module openpnm.topotools)": [[1718, "openpnm.topotools.filter_pores_by_z"]], "find_clusters() (in module openpnm.topotools)": [[1719, "openpnm.topotools.find_clusters"]], "find_connected_sites() (in module openpnm.topotools)": [[1720, "openpnm.topotools.find_connected_sites"]], "find_connecting_bonds() (in module openpnm.topotools)": [[1721, "openpnm.topotools.find_connecting_bonds"]], "find_interface_throats() (in module openpnm.topotools)": [[1722, "openpnm.topotools.find_interface_throats"]], "find_isolated_clusters() (in module openpnm.topotools)": [[1723, "openpnm.topotools.find_isolated_clusters"]], "find_neighbor_bonds() (in module openpnm.topotools)": [[1724, "openpnm.topotools.find_neighbor_bonds"]], "find_neighbor_sites() (in module openpnm.topotools)": [[1725, "openpnm.topotools.find_neighbor_sites"]], "find_path() (in module openpnm.topotools)": [[1726, "openpnm.topotools.find_path"]], "find_surface_pores() (in module openpnm.topotools)": [[1727, "openpnm.topotools.find_surface_pores"]], "generate_base_points() (in module openpnm.topotools)": [[1728, "openpnm.topotools.generate_base_points"]], "get_domain_area() (in module openpnm.topotools)": [[1729, "openpnm.topotools.get_domain_area"]], "get_domain_length() (in module openpnm.topotools)": [[1730, "openpnm.topotools.get_domain_length"]], "get_shape() (in module openpnm.topotools)": [[1731, "openpnm.topotools.get_shape"]], "get_spacing() (in module openpnm.topotools)": [[1732, "openpnm.topotools.get_spacing"]], "hull_centroid() (in module openpnm.topotools)": [[1733, "openpnm.topotools.hull_centroid"]], "is_fully_connected() (in module openpnm.topotools)": [[1734, "openpnm.topotools.is_fully_connected"]], "iscoplanar() (in module openpnm.topotools)": [[1735, "openpnm.topotools.iscoplanar"]], "isoutside() (in module openpnm.topotools)": [[1736, "openpnm.topotools.isoutside"]], "ispercolating() (in module openpnm.topotools)": [[1737, "openpnm.topotools.ispercolating"]], "issymmetric() (in module openpnm.topotools)": [[1738, "openpnm.topotools.issymmetric"]], "istriangular() (in module openpnm.topotools)": [[1739, "openpnm.topotools.istriangular"]], "istril() (in module openpnm.topotools)": [[1740, "openpnm.topotools.istril"]], "istriu() (in module openpnm.topotools)": [[1741, "openpnm.topotools.istriu"]], "label_faces() (in module openpnm.topotools)": [[1742, "openpnm.topotools.label_faces"]], "merge_networks() (in module openpnm.topotools)": [[1743, "openpnm.topotools.merge_networks"]], "merge_pores() (in module openpnm.topotools)": [[1744, "openpnm.topotools.merge_pores"]], "reduce_coordination() (in module openpnm.topotools)": [[1745, "openpnm.topotools.reduce_coordination"]], "reflect_base_points() (in module openpnm.topotools)": [[1746, "openpnm.topotools.reflect_base_points"]], "rotate_coords() (in module openpnm.topotools)": [[1747, "openpnm.topotools.rotate_coords"]], "shear_coords() (in module openpnm.topotools)": [[1748, "openpnm.topotools.shear_coords"]], "site_percolation() (in module openpnm.topotools)": [[1749, "openpnm.topotools.site_percolation"]], "stitch() (in module openpnm.topotools)": [[1750, "openpnm.topotools.stitch"]], "template_cylinder_annulus() (in module openpnm.topotools)": [[1751, "openpnm.topotools.template_cylinder_annulus"]], "template_sphere_shell() (in module openpnm.topotools)": [[1752, "openpnm.topotools.template_sphere_shell"]], "tri_to_am() (in module openpnm.topotools)": [[1753, "openpnm.topotools.tri_to_am"]], "trim() (in module openpnm.topotools)": [[1754, "openpnm.topotools.trim"]], "trim_disconnected_clusters() (in module openpnm.topotools)": [[1755, "openpnm.topotools.trim_disconnected_clusters"]], "vor_to_am() (in module openpnm.topotools)": [[1756, "openpnm.topotools.vor_to_am"]], "openpnm.utils": [[1757, "module-openpnm.utils"]], "docorator (class in openpnm.utils)": [[1758, "openpnm.utils.Docorator"]], "__call__() (docorator method)": [[1759, "openpnm.utils.Docorator.__call__"]], "dedent() (docorator method)": [[1760, "openpnm.utils.Docorator.dedent"]], "dedents() (docorator method)": [[1761, "openpnm.utils.Docorator.dedents"]], "delete_kwargs() (docorator method)": [[1762, "openpnm.utils.Docorator.delete_kwargs"]], "delete_kwargs_s() (docorator class method)": [[1763, "openpnm.utils.Docorator.delete_kwargs_s"]], "delete_params() (docorator method)": [[1764, "openpnm.utils.Docorator.delete_params"]], "delete_params_s() (docorator static method)": [[1765, "openpnm.utils.Docorator.delete_params_s"]], "delete_types() (docorator method)": [[1766, "openpnm.utils.Docorator.delete_types"]], "delete_types_s() (docorator static method)": [[1767, "openpnm.utils.Docorator.delete_types_s"]], "get_docstring() (docorator method)": [[1768, "openpnm.utils.Docorator.get_docstring"]], "get_extended_summary() (docorator method)": [[1769, "openpnm.utils.Docorator.get_extended_summary"]], "get_extended_summaryf() (docorator method)": [[1770, "openpnm.utils.Docorator.get_extended_summaryf"]], "get_full_description() (docorator method)": [[1771, "openpnm.utils.Docorator.get_full_description"]], "get_full_descriptionf() (docorator method)": [[1772, "openpnm.utils.Docorator.get_full_descriptionf"]], "get_sections() (docorator method)": [[1773, "openpnm.utils.Docorator.get_sections"]], "get_sectionsf() (docorator method)": [[1774, "openpnm.utils.Docorator.get_sectionsf"]], "get_summary() (docorator method)": [[1775, "openpnm.utils.Docorator.get_summary"]], "get_summaryf() (docorator method)": [[1776, "openpnm.utils.Docorator.get_summaryf"]], "keep_params() (docorator method)": [[1777, "openpnm.utils.Docorator.keep_params"]], "keep_params_s() (docorator static method)": [[1778, "openpnm.utils.Docorator.keep_params_s"]], "keep_types() (docorator method)": [[1779, "openpnm.utils.Docorator.keep_types"]], "keep_types_s() (docorator static method)": [[1780, "openpnm.utils.Docorator.keep_types_s"]], "save_docstring() (docorator method)": [[1781, "openpnm.utils.Docorator.save_docstring"]], "with_indent() (docorator method)": [[1782, "openpnm.utils.Docorator.with_indent"]], "with_indents() (docorator method)": [[1783, "openpnm.utils.Docorator.with_indents"]], "healthdict (class in openpnm.utils)": [[1784, "openpnm.utils.HealthDict"]], "clear() (healthdict method)": [[1785, "openpnm.utils.HealthDict.clear"]], "copy() (healthdict method)": [[1786, "openpnm.utils.HealthDict.copy"]], "fromkeys() (healthdict method)": [[1787, "openpnm.utils.HealthDict.fromkeys"]], "get() (healthdict method)": [[1788, "openpnm.utils.HealthDict.get"]], "items() (healthdict method)": [[1789, "openpnm.utils.HealthDict.items"]], "keys() (healthdict method)": [[1790, "openpnm.utils.HealthDict.keys"]], "pop() (healthdict method)": [[1791, "openpnm.utils.HealthDict.pop"]], "popitem() (healthdict method)": [[1792, "openpnm.utils.HealthDict.popitem"]], "setdefault() (healthdict method)": [[1793, "openpnm.utils.HealthDict.setdefault"]], "update() (healthdict method)": [[1794, "openpnm.utils.HealthDict.update"]], "values() (healthdict method)": [[1795, "openpnm.utils.HealthDict.values"]], "nesteddict (class in openpnm.utils)": [[1796, "openpnm.utils.NestedDict"]], "clear() (nesteddict method)": [[1797, "openpnm.utils.NestedDict.clear"]], "copy() (nesteddict method)": [[1798, "openpnm.utils.NestedDict.copy"]], "fromkeys() (nesteddict method)": [[1799, "openpnm.utils.NestedDict.fromkeys"]], "get() (nesteddict method)": [[1800, "openpnm.utils.NestedDict.get"]], "items() (nesteddict method)": [[1801, "openpnm.utils.NestedDict.items"]], "keys() (nesteddict method)": [[1802, "openpnm.utils.NestedDict.keys"]], "pop() (nesteddict method)": [[1803, "openpnm.utils.NestedDict.pop"]], "popitem() (nesteddict method)": [[1804, "openpnm.utils.NestedDict.popitem"]], "setdefault() (nesteddict method)": [[1805, "openpnm.utils.NestedDict.setdefault"]], "to_dict() (nesteddict method)": [[1806, "openpnm.utils.NestedDict.to_dict"]], "unravel() (nesteddict method)": [[1807, "openpnm.utils.NestedDict.unravel"]], "update() (nesteddict method)": [[1808, "openpnm.utils.NestedDict.update"]], "values() (nesteddict method)": [[1809, "openpnm.utils.NestedDict.values"]], "printabledict (class in openpnm.utils)": [[1810, "openpnm.utils.PrintableDict"]], "clear() (printabledict method)": [[1811, "openpnm.utils.PrintableDict.clear"]], "copy() (printabledict method)": [[1812, "openpnm.utils.PrintableDict.copy"]], "fromkeys() (printabledict method)": [[1813, "openpnm.utils.PrintableDict.fromkeys"]], "get() (printabledict method)": [[1814, "openpnm.utils.PrintableDict.get"]], "items() (printabledict method)": [[1815, "openpnm.utils.PrintableDict.items"]], "keys() (printabledict method)": [[1816, "openpnm.utils.PrintableDict.keys"]], "pop() (printabledict method)": [[1817, "openpnm.utils.PrintableDict.pop"]], "popitem() (printabledict method)": [[1818, "openpnm.utils.PrintableDict.popitem"]], "setdefault() (printabledict method)": [[1819, "openpnm.utils.PrintableDict.setdefault"]], "update() (printabledict method)": [[1820, "openpnm.utils.PrintableDict.update"]], "values() (printabledict method)": [[1821, "openpnm.utils.PrintableDict.values"]], "printablelist (class in openpnm.utils)": [[1822, "openpnm.utils.PrintableList"]], "append() (printablelist method)": [[1823, "openpnm.utils.PrintableList.append"]], "clear() (printablelist method)": [[1824, "openpnm.utils.PrintableList.clear"]], "copy() (printablelist method)": [[1825, "openpnm.utils.PrintableList.copy"]], "count() (printablelist method)": [[1826, "openpnm.utils.PrintableList.count"]], "extend() (printablelist method)": [[1827, "openpnm.utils.PrintableList.extend"]], "index() (printablelist method)": [[1828, "openpnm.utils.PrintableList.index"]], "insert() (printablelist method)": [[1829, "openpnm.utils.PrintableList.insert"]], "pop() (printablelist method)": [[1830, "openpnm.utils.PrintableList.pop"]], "remove() (printablelist method)": [[1831, "openpnm.utils.PrintableList.remove"]], "reverse() (printablelist method)": [[1832, "openpnm.utils.PrintableList.reverse"]], "sort() (printablelist method)": [[1833, "openpnm.utils.PrintableList.sort"]], "project (class in openpnm.utils)": [[1834, "openpnm.utils.Project"]], "append() (project method)": [[1835, "openpnm.utils.Project.append"]], "clear() (project method)": [[1836, "openpnm.utils.Project.clear"]], "copy() (project method)": [[1837, "openpnm.utils.Project.copy"]], "count() (project method)": [[1838, "openpnm.utils.Project.count"]], "extend() (project method)": [[1839, "openpnm.utils.Project.extend"]], "index() (project method)": [[1840, "openpnm.utils.Project.index"]], "insert() (project method)": [[1841, "openpnm.utils.Project.insert"]], "pop() (project method)": [[1842, "openpnm.utils.Project.pop"]], "remove() (project method)": [[1843, "openpnm.utils.Project.remove"]], "reverse() (project method)": [[1844, "openpnm.utils.Project.reverse"]], "sort() (project method)": [[1845, "openpnm.utils.Project.sort"]], "settingsattr (class in openpnm.utils)": [[1846, "openpnm.utils.SettingsAttr"]], "typedlist (class in openpnm.utils)": [[1847, "openpnm.utils.TypedList"]], "append() (typedlist method)": [[1848, "openpnm.utils.TypedList.append"]], "clear() (typedlist method)": [[1849, "openpnm.utils.TypedList.clear"]], "copy() (typedlist method)": [[1850, "openpnm.utils.TypedList.copy"]], "count() (typedlist method)": [[1851, "openpnm.utils.TypedList.count"]], "extend() (typedlist method)": [[1852, "openpnm.utils.TypedList.extend"]], "index() (typedlist method)": [[1853, "openpnm.utils.TypedList.index"]], "insert() (typedlist method)": [[1854, "openpnm.utils.TypedList.insert"]], "pop() (typedlist method)": [[1855, "openpnm.utils.TypedList.pop"]], "remove() (typedlist method)": [[1856, "openpnm.utils.TypedList.remove"]], "reverse() (typedlist method)": [[1857, "openpnm.utils.TypedList.reverse"]], "sort() (typedlist method)": [[1858, "openpnm.utils.TypedList.sort"]], "typedmixin (class in openpnm.utils)": [[1859, "openpnm.utils.TypedMixin"]], "typedset (class in openpnm.utils)": [[1860, "openpnm.utils.TypedSet"]], "add() (typedset method)": [[1861, "openpnm.utils.TypedSet.add"]], "clear() (typedset method)": [[1862, "openpnm.utils.TypedSet.clear"]], "copy() (typedset method)": [[1863, "openpnm.utils.TypedSet.copy"]], "difference() (typedset method)": [[1864, "openpnm.utils.TypedSet.difference"]], "difference_update() (typedset method)": [[1865, "openpnm.utils.TypedSet.difference_update"]], "discard() (typedset method)": [[1866, "openpnm.utils.TypedSet.discard"]], "intersection() (typedset method)": [[1867, "openpnm.utils.TypedSet.intersection"]], "intersection_update() (typedset method)": [[1868, "openpnm.utils.TypedSet.intersection_update"]], "isdisjoint() (typedset method)": [[1869, "openpnm.utils.TypedSet.isdisjoint"]], "issubset() (typedset method)": [[1870, "openpnm.utils.TypedSet.issubset"]], "issuperset() (typedset method)": [[1871, "openpnm.utils.TypedSet.issuperset"]], "pop() (typedset method)": [[1872, "openpnm.utils.TypedSet.pop"]], "remove() (typedset method)": [[1873, "openpnm.utils.TypedSet.remove"]], "symmetric_difference() (typedset method)": [[1874, "openpnm.utils.TypedSet.symmetric_difference"]], "symmetric_difference_update() (typedset method)": [[1875, "openpnm.utils.TypedSet.symmetric_difference_update"]], "union() (typedset method)": [[1876, "openpnm.utils.TypedSet.union"]], "update() (typedset method)": [[1877, "openpnm.utils.TypedSet.update"]], "workspace (class in openpnm.utils)": [[1878, "openpnm.utils.Workspace"]], "clear() (workspace method)": [[1879, "openpnm.utils.Workspace.clear"]], "close_project() (workspace method)": [[1880, "openpnm.utils.Workspace.close_project"]], "copy() (workspace method)": [[1881, "openpnm.utils.Workspace.copy"]], "copy_project() (workspace method)": [[1882, "openpnm.utils.Workspace.copy_project"]], "fromkeys() (workspace method)": [[1883, "openpnm.utils.Workspace.fromkeys"]], "get() (workspace method)": [[1884, "openpnm.utils.Workspace.get"]], "items() (workspace method)": [[1885, "openpnm.utils.Workspace.items"]], "keys() (workspace method)": [[1886, "openpnm.utils.Workspace.keys"]], "load_project() (workspace method)": [[1887, "openpnm.utils.Workspace.load_project"]], "load_workspace() (workspace method)": [[1888, "openpnm.utils.Workspace.load_workspace"]], "new_project() (workspace method)": [[1889, "openpnm.utils.Workspace.new_project"]], "pop() (workspace method)": [[1890, "openpnm.utils.Workspace.pop"]], "popitem() (workspace method)": [[1891, "openpnm.utils.Workspace.popitem"]], "save_project() (workspace method)": [[1892, "openpnm.utils.Workspace.save_project"]], "save_workspace() (workspace method)": [[1893, "openpnm.utils.Workspace.save_workspace"]], "setdefault() (workspace method)": [[1894, "openpnm.utils.Workspace.setdefault"]], "update() (workspace method)": [[1895, "openpnm.utils.Workspace.update"]], "values() (workspace method)": [[1896, "openpnm.utils.Workspace.values"]], "check_data_health() (in module openpnm.utils)": [[1897, "openpnm.utils.check_data_health"]], "check_network_health() (in module openpnm.utils)": [[1898, "openpnm.utils.check_network_health"]], "dict_to_struct() (in module openpnm.utils)": [[1899, "openpnm.utils.dict_to_struct"]], "flat_list() (in module openpnm.utils)": [[1900, "openpnm.utils.flat_list"]], "get_mixture_model_args() (in module openpnm.utils)": [[1901, "openpnm.utils.get_mixture_model_args"]], "get_printable_labels() (in module openpnm.utils)": [[1902, "openpnm.utils.get_printable_labels"]], "get_printable_props() (in module openpnm.utils)": [[1903, "openpnm.utils.get_printable_props"]], "ignore_warnings() (in module openpnm.utils)": [[1904, "openpnm.utils.ignore_warnings"]], "is_symmetric() (in module openpnm.utils)": [[1905, "openpnm.utils.is_symmetric"]], "is_transient() (in module openpnm.utils)": [[1906, "openpnm.utils.is_transient"]], "is_valid_propname() (in module openpnm.utils)": [[1907, "openpnm.utils.is_valid_propname"]], "methods_to_table() (in module openpnm.utils)": [[1908, "openpnm.utils.methods_to_table"]], "models_to_table() (in module openpnm.utils)": [[1909, "openpnm.utils.models_to_table"]], "sanitize_dict() (in module openpnm.utils)": [[1910, "openpnm.utils.sanitize_dict"]], "struct_to_dict() (in module openpnm.utils)": [[1911, "openpnm.utils.struct_to_dict"]], "openpnm.visualization": [[1912, "module-openpnm.visualization"]], "draw_conduit() (in module openpnm.visualization)": [[1913, "openpnm.visualization.draw_conduit"]], "generate_voxel_image() (in module openpnm.visualization)": [[1914, "openpnm.visualization.generate_voxel_image"]], "plot_connections() (in module openpnm.visualization)": [[1915, "openpnm.visualization.plot_connections"]], "plot_coordinates() (in module openpnm.visualization)": [[1916, "openpnm.visualization.plot_coordinates"]], "plot_networkx() (in module openpnm.visualization)": [[1917, "openpnm.visualization.plot_networkx"]], "plot_notebook() (in module openpnm.visualization)": [[1918, "openpnm.visualization.plot_notebook"]], "plot_tutorial() (in module openpnm.visualization)": [[1919, "openpnm.visualization.plot_tutorial"]], "plot_vispy() (in module openpnm.visualization)": [[1920, "openpnm.visualization.plot_vispy"]], "set_mpl_style() (in module openpnm.visualization)": [[1921, "openpnm.visualization.set_mpl_style"]], "openpnm": [[1922, "module-openpnm"]]}})