Search.setIndex({"docnames": ["_examples/applications", "_examples/index", "_examples/reference", "_examples/tutorials", "basic_usage", "examples/applications/absolute_permeability", "examples/applications/adjusting_pore_size_distributions", "examples/applications/dispersion_coefficient", "examples/applications/effective_diffusivity_and_tortuosity", "examples/applications/formation_factor", "examples/applications/mercury_intrusion", "examples/applications/porosity", "examples/applications/relative_diffusivity", "examples/applications/relative_permeability", "examples/contrib/README", "examples/reference/architecture/pore_scale_models", "examples/reference/architecture/settings_attribute_machinery", "examples/reference/architecture/workspace_and_projects", "examples/reference/networks/managing_clustered_networks", "examples/reference/simulations/available_matrix_solvers", "examples/reference/simulations/basic_transport", "examples/reference/simulations/explanation_of_units", "examples/reference/simulations/reactive_transport", "examples/reference/simulations/size_factors_and_transport_conductance", "examples/reference/simulations/transient_transport", "examples/tutorials/01_numerical_python_primer", "examples/tutorials/02_network_generation_and_visualization", "examples/tutorials/03_data_and_topology_storage", "examples/tutorials/04_graph_queries_and_manipulation", "examples/tutorials/05_defining_geometry", "examples/tutorials/06_labels_and_domains", "examples/tutorials/07_phases_and_mixtures", "examples/tutorials/08_simulating_transport", "examples/tutorials/09_simulating_invasion", "examples/tutorials/10_visualization_options", "index", "installation", "modules/generated/openpnm.algorithms", "modules/generated/openpnm.algorithms.AdvectionDiffusion", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values", "modules/generated/openpnm.algorithms.Algorithm", "modules/generated/openpnm.algorithms.Algorithm.clear", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs", "modules/generated/openpnm.algorithms.Algorithm.copy", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label", "modules/generated/openpnm.algorithms.Algorithm.fromkeys", "modules/generated/openpnm.algorithms.Algorithm.get", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data", "modules/generated/openpnm.algorithms.Algorithm.items", "modules/generated/openpnm.algorithms.Algorithm.keys", "modules/generated/openpnm.algorithms.Algorithm.labels", "modules/generated/openpnm.algorithms.Algorithm.num_pores", "modules/generated/openpnm.algorithms.Algorithm.num_throats", "modules/generated/openpnm.algorithms.Algorithm.pop", "modules/generated/openpnm.algorithms.Algorithm.popitem", "modules/generated/openpnm.algorithms.Algorithm.pores", "modules/generated/openpnm.algorithms.Algorithm.props", "modules/generated/openpnm.algorithms.Algorithm.set_BC", "modules/generated/openpnm.algorithms.Algorithm.set_label", "modules/generated/openpnm.algorithms.Algorithm.setdefault", "modules/generated/openpnm.algorithms.Algorithm.throats", "modules/generated/openpnm.algorithms.Algorithm.to_indices", "modules/generated/openpnm.algorithms.Algorithm.to_mask", "modules/generated/openpnm.algorithms.Algorithm.update", "modules/generated/openpnm.algorithms.Algorithm.values", "modules/generated/openpnm.algorithms.Drainage", "modules/generated/openpnm.algorithms.Drainage.apply_trapping", "modules/generated/openpnm.algorithms.Drainage.clear", "modules/generated/openpnm.algorithms.Drainage.clear_BCs", "modules/generated/openpnm.algorithms.Drainage.copy", "modules/generated/openpnm.algorithms.Drainage.filter_by_label", "modules/generated/openpnm.algorithms.Drainage.fromkeys", "modules/generated/openpnm.algorithms.Drainage.get", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data", "modules/generated/openpnm.algorithms.Drainage.interpolate_data", "modules/generated/openpnm.algorithms.Drainage.items", "modules/generated/openpnm.algorithms.Drainage.keys", "modules/generated/openpnm.algorithms.Drainage.labels", "modules/generated/openpnm.algorithms.Drainage.num_pores", "modules/generated/openpnm.algorithms.Drainage.num_throats", "modules/generated/openpnm.algorithms.Drainage.pc_curve", "modules/generated/openpnm.algorithms.Drainage.pop", "modules/generated/openpnm.algorithms.Drainage.popitem", "modules/generated/openpnm.algorithms.Drainage.pores", "modules/generated/openpnm.algorithms.Drainage.props", "modules/generated/openpnm.algorithms.Drainage.reset", "modules/generated/openpnm.algorithms.Drainage.run", "modules/generated/openpnm.algorithms.Drainage.set_BC", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC", "modules/generated/openpnm.algorithms.Drainage.set_label", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC", "modules/generated/openpnm.algorithms.Drainage.setdefault", "modules/generated/openpnm.algorithms.Drainage.throats", "modules/generated/openpnm.algorithms.Drainage.to_indices", "modules/generated/openpnm.algorithms.Drainage.to_mask", "modules/generated/openpnm.algorithms.Drainage.update", "modules/generated/openpnm.algorithms.Drainage.values", "modules/generated/openpnm.algorithms.FickianDiffusion", "modules/generated/openpnm.algorithms.FickianDiffusion.clear", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.copy", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.FickianDiffusion.get", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.FickianDiffusion.items", "modules/generated/openpnm.algorithms.FickianDiffusion.keys", "modules/generated/openpnm.algorithms.FickianDiffusion.labels", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.FickianDiffusion.pop", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem", "modules/generated/openpnm.algorithms.FickianDiffusion.pores", "modules/generated/openpnm.algorithms.FickianDiffusion.props", "modules/generated/openpnm.algorithms.FickianDiffusion.rate", "modules/generated/openpnm.algorithms.FickianDiffusion.run", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.FickianDiffusion.throats", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.FickianDiffusion.update", "modules/generated/openpnm.algorithms.FickianDiffusion.values", "modules/generated/openpnm.algorithms.FourierConduction", "modules/generated/openpnm.algorithms.FourierConduction.clear", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.FourierConduction.copy", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys", "modules/generated/openpnm.algorithms.FourierConduction.get", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data", "modules/generated/openpnm.algorithms.FourierConduction.items", "modules/generated/openpnm.algorithms.FourierConduction.keys", "modules/generated/openpnm.algorithms.FourierConduction.labels", "modules/generated/openpnm.algorithms.FourierConduction.num_pores", "modules/generated/openpnm.algorithms.FourierConduction.num_throats", "modules/generated/openpnm.algorithms.FourierConduction.pop", "modules/generated/openpnm.algorithms.FourierConduction.popitem", "modules/generated/openpnm.algorithms.FourierConduction.pores", "modules/generated/openpnm.algorithms.FourierConduction.props", "modules/generated/openpnm.algorithms.FourierConduction.rate", "modules/generated/openpnm.algorithms.FourierConduction.run", "modules/generated/openpnm.algorithms.FourierConduction.set_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_label", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_source", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC", "modules/generated/openpnm.algorithms.FourierConduction.setdefault", "modules/generated/openpnm.algorithms.FourierConduction.throats", "modules/generated/openpnm.algorithms.FourierConduction.to_indices", "modules/generated/openpnm.algorithms.FourierConduction.to_mask", "modules/generated/openpnm.algorithms.FourierConduction.update", "modules/generated/openpnm.algorithms.FourierConduction.values", "modules/generated/openpnm.algorithms.InvasionPercolation", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping", "modules/generated/openpnm.algorithms.InvasionPercolation.clear", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs", "modules/generated/openpnm.algorithms.InvasionPercolation.copy", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys", "modules/generated/openpnm.algorithms.InvasionPercolation.get", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data", "modules/generated/openpnm.algorithms.InvasionPercolation.items", "modules/generated/openpnm.algorithms.InvasionPercolation.keys", "modules/generated/openpnm.algorithms.InvasionPercolation.labels", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve", "modules/generated/openpnm.algorithms.InvasionPercolation.pop", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem", "modules/generated/openpnm.algorithms.InvasionPercolation.pores", "modules/generated/openpnm.algorithms.InvasionPercolation.props", "modules/generated/openpnm.algorithms.InvasionPercolation.reset", "modules/generated/openpnm.algorithms.InvasionPercolation.run", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault", "modules/generated/openpnm.algorithms.InvasionPercolation.throats", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask", "modules/generated/openpnm.algorithms.InvasionPercolation.update", "modules/generated/openpnm.algorithms.InvasionPercolation.values", "modules/generated/openpnm.algorithms.OhmicConduction", "modules/generated/openpnm.algorithms.OhmicConduction.clear", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.copy", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys", "modules/generated/openpnm.algorithms.OhmicConduction.get", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data", "modules/generated/openpnm.algorithms.OhmicConduction.items", "modules/generated/openpnm.algorithms.OhmicConduction.keys", "modules/generated/openpnm.algorithms.OhmicConduction.labels", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats", "modules/generated/openpnm.algorithms.OhmicConduction.pop", "modules/generated/openpnm.algorithms.OhmicConduction.popitem", "modules/generated/openpnm.algorithms.OhmicConduction.pores", "modules/generated/openpnm.algorithms.OhmicConduction.props", "modules/generated/openpnm.algorithms.OhmicConduction.rate", "modules/generated/openpnm.algorithms.OhmicConduction.run", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_label", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_source", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault", "modules/generated/openpnm.algorithms.OhmicConduction.throats", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask", "modules/generated/openpnm.algorithms.OhmicConduction.update", "modules/generated/openpnm.algorithms.OhmicConduction.values", "modules/generated/openpnm.algorithms.ReactiveTransport", "modules/generated/openpnm.algorithms.ReactiveTransport.clear", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.copy", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.ReactiveTransport.get", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.ReactiveTransport.items", "modules/generated/openpnm.algorithms.ReactiveTransport.keys", "modules/generated/openpnm.algorithms.ReactiveTransport.labels", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.ReactiveTransport.pop", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem", "modules/generated/openpnm.algorithms.ReactiveTransport.pores", "modules/generated/openpnm.algorithms.ReactiveTransport.props", "modules/generated/openpnm.algorithms.ReactiveTransport.rate", "modules/generated/openpnm.algorithms.ReactiveTransport.run", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.ReactiveTransport.throats", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.ReactiveTransport.update", "modules/generated/openpnm.algorithms.ReactiveTransport.values", "modules/generated/openpnm.algorithms.StokesFlow", "modules/generated/openpnm.algorithms.StokesFlow.clear", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs", "modules/generated/openpnm.algorithms.StokesFlow.copy", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys", "modules/generated/openpnm.algorithms.StokesFlow.get", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data", "modules/generated/openpnm.algorithms.StokesFlow.items", "modules/generated/openpnm.algorithms.StokesFlow.keys", "modules/generated/openpnm.algorithms.StokesFlow.labels", "modules/generated/openpnm.algorithms.StokesFlow.num_pores", "modules/generated/openpnm.algorithms.StokesFlow.num_throats", "modules/generated/openpnm.algorithms.StokesFlow.pop", "modules/generated/openpnm.algorithms.StokesFlow.popitem", "modules/generated/openpnm.algorithms.StokesFlow.pores", "modules/generated/openpnm.algorithms.StokesFlow.props", "modules/generated/openpnm.algorithms.StokesFlow.rate", "modules/generated/openpnm.algorithms.StokesFlow.run", "modules/generated/openpnm.algorithms.StokesFlow.set_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_label", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_source", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC", "modules/generated/openpnm.algorithms.StokesFlow.setdefault", "modules/generated/openpnm.algorithms.StokesFlow.throats", "modules/generated/openpnm.algorithms.StokesFlow.to_indices", "modules/generated/openpnm.algorithms.StokesFlow.to_mask", "modules/generated/openpnm.algorithms.StokesFlow.update", "modules/generated/openpnm.algorithms.StokesFlow.values", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values", "modules/generated/openpnm.algorithms.TransientFickianDiffusion", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values", "modules/generated/openpnm.algorithms.TransientReactiveTransport", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values", "modules/generated/openpnm.algorithms.Transport", "modules/generated/openpnm.algorithms.Transport.clear", "modules/generated/openpnm.algorithms.Transport.clear_BCs", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs", "modules/generated/openpnm.algorithms.Transport.copy", "modules/generated/openpnm.algorithms.Transport.filter_by_label", "modules/generated/openpnm.algorithms.Transport.fromkeys", "modules/generated/openpnm.algorithms.Transport.get", "modules/generated/openpnm.algorithms.Transport.get_conduit_data", "modules/generated/openpnm.algorithms.Transport.interpolate_data", "modules/generated/openpnm.algorithms.Transport.items", "modules/generated/openpnm.algorithms.Transport.keys", "modules/generated/openpnm.algorithms.Transport.labels", "modules/generated/openpnm.algorithms.Transport.num_pores", "modules/generated/openpnm.algorithms.Transport.num_throats", "modules/generated/openpnm.algorithms.Transport.pop", "modules/generated/openpnm.algorithms.Transport.popitem", "modules/generated/openpnm.algorithms.Transport.pores", "modules/generated/openpnm.algorithms.Transport.props", "modules/generated/openpnm.algorithms.Transport.rate", "modules/generated/openpnm.algorithms.Transport.run", "modules/generated/openpnm.algorithms.Transport.set_BC", "modules/generated/openpnm.algorithms.Transport.set_label", "modules/generated/openpnm.algorithms.Transport.set_rate_BC", "modules/generated/openpnm.algorithms.Transport.set_value_BC", "modules/generated/openpnm.algorithms.Transport.setdefault", "modules/generated/openpnm.algorithms.Transport.throats", "modules/generated/openpnm.algorithms.Transport.to_indices", "modules/generated/openpnm.algorithms.Transport.to_mask", "modules/generated/openpnm.algorithms.Transport.update", "modules/generated/openpnm.algorithms.Transport.values", "modules/generated/openpnm.core", "modules/generated/openpnm.core.Base2", "modules/generated/openpnm.core.Base2.clear", "modules/generated/openpnm.core.Base2.copy", "modules/generated/openpnm.core.Base2.fromkeys", "modules/generated/openpnm.core.Base2.get", "modules/generated/openpnm.core.Base2.get_conduit_data", "modules/generated/openpnm.core.Base2.interpolate_data", "modules/generated/openpnm.core.Base2.items", "modules/generated/openpnm.core.Base2.keys", "modules/generated/openpnm.core.Base2.pop", "modules/generated/openpnm.core.Base2.popitem", "modules/generated/openpnm.core.Base2.props", "modules/generated/openpnm.core.Base2.setdefault", "modules/generated/openpnm.core.Base2.to_indices", "modules/generated/openpnm.core.Base2.to_mask", "modules/generated/openpnm.core.Base2.update", "modules/generated/openpnm.core.Base2.values", "modules/generated/openpnm.core.Domain", "modules/generated/openpnm.core.Domain.add_model", "modules/generated/openpnm.core.Domain.add_model_collection", "modules/generated/openpnm.core.Domain.clear", "modules/generated/openpnm.core.Domain.copy", "modules/generated/openpnm.core.Domain.filter_by_label", "modules/generated/openpnm.core.Domain.fromkeys", "modules/generated/openpnm.core.Domain.get", "modules/generated/openpnm.core.Domain.get_conduit_data", "modules/generated/openpnm.core.Domain.interpolate_data", "modules/generated/openpnm.core.Domain.items", "modules/generated/openpnm.core.Domain.keys", "modules/generated/openpnm.core.Domain.labels", "modules/generated/openpnm.core.Domain.num_pores", "modules/generated/openpnm.core.Domain.num_throats", "modules/generated/openpnm.core.Domain.pop", "modules/generated/openpnm.core.Domain.popitem", "modules/generated/openpnm.core.Domain.pores", "modules/generated/openpnm.core.Domain.props", "modules/generated/openpnm.core.Domain.regenerate_models", "modules/generated/openpnm.core.Domain.run_model", "modules/generated/openpnm.core.Domain.set_label", "modules/generated/openpnm.core.Domain.setdefault", "modules/generated/openpnm.core.Domain.throats", "modules/generated/openpnm.core.Domain.to_indices", "modules/generated/openpnm.core.Domain.to_mask", "modules/generated/openpnm.core.Domain.update", "modules/generated/openpnm.core.Domain.values", "modules/generated/openpnm.core.LabelMixin", "modules/generated/openpnm.core.LabelMixin.filter_by_label", "modules/generated/openpnm.core.LabelMixin.labels", "modules/generated/openpnm.core.LabelMixin.num_pores", "modules/generated/openpnm.core.LabelMixin.num_throats", "modules/generated/openpnm.core.LabelMixin.pores", "modules/generated/openpnm.core.LabelMixin.set_label", "modules/generated/openpnm.core.LabelMixin.throats", "modules/generated/openpnm.core.ModelWrapper", "modules/generated/openpnm.core.ModelWrapper.__call__", "modules/generated/openpnm.core.ModelWrapper.clear", "modules/generated/openpnm.core.ModelWrapper.copy", "modules/generated/openpnm.core.ModelWrapper.fromkeys", "modules/generated/openpnm.core.ModelWrapper.get", "modules/generated/openpnm.core.ModelWrapper.items", "modules/generated/openpnm.core.ModelWrapper.keys", "modules/generated/openpnm.core.ModelWrapper.pop", "modules/generated/openpnm.core.ModelWrapper.popitem", "modules/generated/openpnm.core.ModelWrapper.setdefault", "modules/generated/openpnm.core.ModelWrapper.update", "modules/generated/openpnm.core.ModelWrapper.values", "modules/generated/openpnm.core.ModelsDict", "modules/generated/openpnm.core.ModelsDict.clear", "modules/generated/openpnm.core.ModelsDict.copy", "modules/generated/openpnm.core.ModelsDict.dependency_graph", "modules/generated/openpnm.core.ModelsDict.dependency_list", "modules/generated/openpnm.core.ModelsDict.dependency_map", "modules/generated/openpnm.core.ModelsDict.fromkeys", "modules/generated/openpnm.core.ModelsDict.get", "modules/generated/openpnm.core.ModelsDict.items", "modules/generated/openpnm.core.ModelsDict.keys", "modules/generated/openpnm.core.ModelsDict.pop", "modules/generated/openpnm.core.ModelsDict.popitem", "modules/generated/openpnm.core.ModelsDict.setdefault", "modules/generated/openpnm.core.ModelsDict.update", "modules/generated/openpnm.core.ModelsDict.values", "modules/generated/openpnm.core.ModelsMixin2", "modules/generated/openpnm.core.ModelsMixin2.add_model", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models", "modules/generated/openpnm.core.ModelsMixin2.run_model", "modules/generated/openpnm.core.ParserMixin", "modules/generated/openpnm.integrators", "modules/generated/openpnm.integrators.Integrator", "modules/generated/openpnm.integrators.ScipyRK45", "modules/generated/openpnm.integrators.ScipyRK45.solve", "modules/generated/openpnm.io", "modules/generated/openpnm.io.network_from_csv", "modules/generated/openpnm.io.network_from_jsongraph", "modules/generated/openpnm.io.network_from_marock", "modules/generated/openpnm.io.network_from_networkx", "modules/generated/openpnm.io.network_from_pergeos", "modules/generated/openpnm.io.network_from_porespy", "modules/generated/openpnm.io.network_from_statoil", "modules/generated/openpnm.io.network_to_comsol", "modules/generated/openpnm.io.network_to_csv", "modules/generated/openpnm.io.network_to_jsongraph", "modules/generated/openpnm.io.network_to_networkx", "modules/generated/openpnm.io.network_to_pandas", "modules/generated/openpnm.io.network_to_pergeos", "modules/generated/openpnm.io.network_to_salome", "modules/generated/openpnm.io.network_to_stl", "modules/generated/openpnm.io.print_hdf5", "modules/generated/openpnm.io.project_to_csv", "modules/generated/openpnm.io.project_to_dict", "modules/generated/openpnm.io.project_to_hdf5", "modules/generated/openpnm.io.project_to_pandas", "modules/generated/openpnm.io.project_to_paraview", "modules/generated/openpnm.io.project_to_vtk", "modules/generated/openpnm.io.project_to_xdmf", "modules/generated/openpnm.models", "modules/generated/openpnm.models.collections", "modules/generated/openpnm.models.collections.geometry", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles", "modules/generated/openpnm.models.collections.network", "modules/generated/openpnm.models.collections.phase", "modules/generated/openpnm.models.collections.phase.air", "modules/generated/openpnm.models.collections.phase.gas", "modules/generated/openpnm.models.collections.phase.liquid", "modules/generated/openpnm.models.collections.phase.mercury", "modules/generated/openpnm.models.collections.phase.water", "modules/generated/openpnm.models.collections.physics", "modules/generated/openpnm.models.collections.physics.basic", "modules/generated/openpnm.models.collections.physics.standard", "modules/generated/openpnm.models.geometry", "modules/generated/openpnm.models.geometry.conduit_lengths", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square", "modules/generated/openpnm.models.geometry.pore_seed", "modules/generated/openpnm.models.geometry.pore_seed.random", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated", "modules/generated/openpnm.models.geometry.pore_size", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere", "modules/generated/openpnm.models.geometry.pore_size.normal", "modules/generated/openpnm.models.geometry.pore_size.random", "modules/generated/openpnm.models.geometry.pore_size.weibull", "modules/generated/openpnm.models.geometry.pore_surface_area", "modules/generated/openpnm.models.geometry.pore_surface_area.circle", "modules/generated/openpnm.models.geometry.pore_surface_area.cube", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere", "modules/generated/openpnm.models.geometry.pore_surface_area.square", "modules/generated/openpnm.models.geometry.pore_volume", "modules/generated/openpnm.models.geometry.pore_volume.circle", "modules/generated/openpnm.models.geometry.pore_volume.cube", "modules/generated/openpnm.models.geometry.pore_volume.effective", "modules/generated/openpnm.models.geometry.pore_volume.sphere", "modules/generated/openpnm.models.geometry.pore_volume.square", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow", "modules/generated/openpnm.models.geometry.throat_centroid", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle", "modules/generated/openpnm.models.geometry.throat_endpoints", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_perimeter", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle", "modules/generated/openpnm.models.geometry.throat_seed", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_seed.random", "modules/generated/openpnm.models.geometry.throat_size", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution", "modules/generated/openpnm.models.geometry.throat_size.normal", "modules/generated/openpnm.models.geometry.throat_size.random", "modules/generated/openpnm.models.geometry.throat_size.weibull", "modules/generated/openpnm.models.geometry.throat_surface_area", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle", "modules/generated/openpnm.models.geometry.throat_vector", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore", "modules/generated/openpnm.models.geometry.throat_volume", "modules/generated/openpnm.models.geometry.throat_volume.cuboid", "modules/generated/openpnm.models.geometry.throat_volume.cylinder", "modules/generated/openpnm.models.geometry.throat_volume.extrusion", "modules/generated/openpnm.models.geometry.throat_volume.lens", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring", "modules/generated/openpnm.models.geometry.throat_volume.rectangle", "modules/generated/openpnm.models.misc", "modules/generated/openpnm.models.misc.blank", "modules/generated/openpnm.models.misc.clip", "modules/generated/openpnm.models.misc.constant", "modules/generated/openpnm.models.misc.difference", "modules/generated/openpnm.models.misc.fraction", "modules/generated/openpnm.models.misc.from_neighbor_pores", "modules/generated/openpnm.models.misc.from_neighbor_throats", "modules/generated/openpnm.models.misc.generic_distribution", "modules/generated/openpnm.models.misc.generic_function", "modules/generated/openpnm.models.misc.invert", "modules/generated/openpnm.models.misc.linear", "modules/generated/openpnm.models.misc.match_histogram", "modules/generated/openpnm.models.misc.normal", "modules/generated/openpnm.models.misc.normalize", "modules/generated/openpnm.models.misc.polynomial", "modules/generated/openpnm.models.misc.product", "modules/generated/openpnm.models.misc.random", "modules/generated/openpnm.models.misc.scaled", "modules/generated/openpnm.models.misc.summation", "modules/generated/openpnm.models.misc.weibull", "modules/generated/openpnm.models.network", "modules/generated/openpnm.models.network.bidirectional_throats", "modules/generated/openpnm.models.network.cluster_number", "modules/generated/openpnm.models.network.cluster_size", "modules/generated/openpnm.models.network.coordination_number", "modules/generated/openpnm.models.network.count_coincident_pores", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_pore", "modules/generated/openpnm.models.network.duplicate_throats", "modules/generated/openpnm.models.network.find_coincident_pores", "modules/generated/openpnm.models.network.headless_throats", "modules/generated/openpnm.models.network.isolated_pores", "modules/generated/openpnm.models.network.looped_throats", "modules/generated/openpnm.models.network.pore_to_pore_distance", "modules/generated/openpnm.models.network.reversed_throats", "modules/generated/openpnm.models.phase", "modules/generated/openpnm.models.phase.chemicals_wrapper", "modules/generated/openpnm.models.phase.critical_props", "modules/generated/openpnm.models.phase.density", "modules/generated/openpnm.models.phase.density.ideal_gas", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD", "modules/generated/openpnm.models.phase.density.mass_to_molar", "modules/generated/openpnm.models.phase.density.water_correlation", "modules/generated/openpnm.models.phase.diffusivity", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc", "modules/generated/openpnm.models.phase.heat_capacity", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp", "modules/generated/openpnm.models.phase.misc", "modules/generated/openpnm.models.phase.misc.mix_and_match", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures", "modules/generated/openpnm.models.phase.mixtures.from_component", "modules/generated/openpnm.models.phase.mixtures.mixing_rule", "modules/generated/openpnm.models.phase.mixtures.mole_summation", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures.salinity", "modules/generated/openpnm.models.phase.partition_coefficient", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water", "modules/generated/openpnm.models.phase.surface_tension", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb", "modules/generated/openpnm.models.phase.surface_tension.water_correlation", "modules/generated/openpnm.models.phase.thermal_conductivity", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation", "modules/generated/openpnm.models.phase.vapor_pressure", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation", "modules/generated/openpnm.models.phase.viscosity", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls", "modules/generated/openpnm.models.phase.viscosity.water_correlation", "modules/generated/openpnm.models.physics", "modules/generated/openpnm.models.physics.ad_dif_conductance", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif", "modules/generated/openpnm.models.physics.capillary_pressure", "modules/generated/openpnm.models.physics.capillary_pressure.purcell", "modules/generated/openpnm.models.physics.capillary_pressure.washburn", "modules/generated/openpnm.models.physics.diffusive_conductance", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion", "modules/generated/openpnm.models.physics.electrical_conductance", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors", "modules/generated/openpnm.models.physics.hydraulic_conductance", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt", "modules/generated/openpnm.models.physics.meniscus", "modules/generated/openpnm.models.physics.meniscus.general_toroidal", "modules/generated/openpnm.models.physics.meniscus.purcell", "modules/generated/openpnm.models.physics.meniscus.sinusoidal", "modules/generated/openpnm.models.physics.multiphase", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance", "modules/generated/openpnm.models.physics.multiphase.late_filling", "modules/generated/openpnm.models.physics.source_terms", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage", "modules/generated/openpnm.models.physics.source_terms.exponential", "modules/generated/openpnm.models.physics.source_terms.general_symbolic", "modules/generated/openpnm.models.physics.source_terms.linear", "modules/generated/openpnm.models.physics.source_terms.logarithm", "modules/generated/openpnm.models.physics.source_terms.natural_exponential", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm", "modules/generated/openpnm.models.physics.source_terms.power_law", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics", "modules/generated/openpnm.models.physics.thermal_conductance", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors", "modules/generated/openpnm.network", "modules/generated/openpnm.network.BodyCenteredCubic", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.BodyCenteredCubic.add_model", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection", "modules/generated/openpnm.network.BodyCenteredCubic.clear", "modules/generated/openpnm.network.BodyCenteredCubic.copy", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys", "modules/generated/openpnm.network.BodyCenteredCubic.get", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data", "modules/generated/openpnm.network.BodyCenteredCubic.items", "modules/generated/openpnm.network.BodyCenteredCubic.keys", "modules/generated/openpnm.network.BodyCenteredCubic.labels", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats", "modules/generated/openpnm.network.BodyCenteredCubic.pop", "modules/generated/openpnm.network.BodyCenteredCubic.popitem", "modules/generated/openpnm.network.BodyCenteredCubic.pores", "modules/generated/openpnm.network.BodyCenteredCubic.props", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models", "modules/generated/openpnm.network.BodyCenteredCubic.run_model", "modules/generated/openpnm.network.BodyCenteredCubic.set_label", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault", "modules/generated/openpnm.network.BodyCenteredCubic.throats", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask", "modules/generated/openpnm.network.BodyCenteredCubic.update", "modules/generated/openpnm.network.BodyCenteredCubic.values", "modules/generated/openpnm.network.Cubic", "modules/generated/openpnm.network.Cubic.add_boundary_pores", "modules/generated/openpnm.network.Cubic.add_model", "modules/generated/openpnm.network.Cubic.add_model_collection", "modules/generated/openpnm.network.Cubic.clear", "modules/generated/openpnm.network.Cubic.copy", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix", "modules/generated/openpnm.network.Cubic.create_incidence_matrix", "modules/generated/openpnm.network.Cubic.filter_by_label", "modules/generated/openpnm.network.Cubic.find_connected_pores", "modules/generated/openpnm.network.Cubic.find_connecting_throat", "modules/generated/openpnm.network.Cubic.find_nearby_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_throats", "modules/generated/openpnm.network.Cubic.fromkeys", "modules/generated/openpnm.network.Cubic.get", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix", "modules/generated/openpnm.network.Cubic.get_conduit_data", "modules/generated/openpnm.network.Cubic.get_incidence_matrix", "modules/generated/openpnm.network.Cubic.interpolate_data", "modules/generated/openpnm.network.Cubic.items", "modules/generated/openpnm.network.Cubic.keys", "modules/generated/openpnm.network.Cubic.labels", "modules/generated/openpnm.network.Cubic.num_neighbors", "modules/generated/openpnm.network.Cubic.num_pores", "modules/generated/openpnm.network.Cubic.num_throats", "modules/generated/openpnm.network.Cubic.pop", "modules/generated/openpnm.network.Cubic.popitem", "modules/generated/openpnm.network.Cubic.pores", "modules/generated/openpnm.network.Cubic.props", "modules/generated/openpnm.network.Cubic.regenerate_models", "modules/generated/openpnm.network.Cubic.run_model", "modules/generated/openpnm.network.Cubic.set_label", "modules/generated/openpnm.network.Cubic.setdefault", "modules/generated/openpnm.network.Cubic.throats", "modules/generated/openpnm.network.Cubic.to_indices", "modules/generated/openpnm.network.Cubic.to_mask", "modules/generated/openpnm.network.Cubic.update", "modules/generated/openpnm.network.Cubic.values", "modules/generated/openpnm.network.CubicTemplate", "modules/generated/openpnm.network.CubicTemplate.add_model", "modules/generated/openpnm.network.CubicTemplate.add_model_collection", "modules/generated/openpnm.network.CubicTemplate.clear", "modules/generated/openpnm.network.CubicTemplate.copy", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.filter_by_label", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats", "modules/generated/openpnm.network.CubicTemplate.fromkeys", "modules/generated/openpnm.network.CubicTemplate.get", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.interpolate_data", "modules/generated/openpnm.network.CubicTemplate.items", "modules/generated/openpnm.network.CubicTemplate.keys", "modules/generated/openpnm.network.CubicTemplate.labels", "modules/generated/openpnm.network.CubicTemplate.num_neighbors", "modules/generated/openpnm.network.CubicTemplate.num_pores", "modules/generated/openpnm.network.CubicTemplate.num_throats", "modules/generated/openpnm.network.CubicTemplate.pop", "modules/generated/openpnm.network.CubicTemplate.popitem", "modules/generated/openpnm.network.CubicTemplate.pores", "modules/generated/openpnm.network.CubicTemplate.props", "modules/generated/openpnm.network.CubicTemplate.regenerate_models", "modules/generated/openpnm.network.CubicTemplate.run_model", "modules/generated/openpnm.network.CubicTemplate.set_label", "modules/generated/openpnm.network.CubicTemplate.setdefault", "modules/generated/openpnm.network.CubicTemplate.throats", "modules/generated/openpnm.network.CubicTemplate.to_indices", "modules/generated/openpnm.network.CubicTemplate.to_mask", "modules/generated/openpnm.network.CubicTemplate.update", "modules/generated/openpnm.network.CubicTemplate.values", "modules/generated/openpnm.network.Delaunay", "modules/generated/openpnm.network.Delaunay.add_model", "modules/generated/openpnm.network.Delaunay.add_model_collection", "modules/generated/openpnm.network.Delaunay.clear", "modules/generated/openpnm.network.Delaunay.copy", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix", "modules/generated/openpnm.network.Delaunay.filter_by_label", "modules/generated/openpnm.network.Delaunay.find_connected_pores", "modules/generated/openpnm.network.Delaunay.find_connecting_throat", "modules/generated/openpnm.network.Delaunay.find_nearby_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats", "modules/generated/openpnm.network.Delaunay.fromkeys", "modules/generated/openpnm.network.Delaunay.get", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.get_conduit_data", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix", "modules/generated/openpnm.network.Delaunay.interpolate_data", "modules/generated/openpnm.network.Delaunay.items", "modules/generated/openpnm.network.Delaunay.keys", "modules/generated/openpnm.network.Delaunay.labels", "modules/generated/openpnm.network.Delaunay.num_neighbors", "modules/generated/openpnm.network.Delaunay.num_pores", "modules/generated/openpnm.network.Delaunay.num_throats", "modules/generated/openpnm.network.Delaunay.pop", "modules/generated/openpnm.network.Delaunay.popitem", "modules/generated/openpnm.network.Delaunay.pores", "modules/generated/openpnm.network.Delaunay.props", "modules/generated/openpnm.network.Delaunay.regenerate_models", "modules/generated/openpnm.network.Delaunay.run_model", "modules/generated/openpnm.network.Delaunay.set_label", "modules/generated/openpnm.network.Delaunay.setdefault", "modules/generated/openpnm.network.Delaunay.throats", "modules/generated/openpnm.network.Delaunay.to_indices", "modules/generated/openpnm.network.Delaunay.to_mask", "modules/generated/openpnm.network.Delaunay.update", "modules/generated/openpnm.network.Delaunay.values", "modules/generated/openpnm.network.DelaunayVoronoiDual", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys", "modules/generated/openpnm.network.DelaunayVoronoiDual.get", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.items", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.props", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask", "modules/generated/openpnm.network.DelaunayVoronoiDual.update", "modules/generated/openpnm.network.DelaunayVoronoiDual.values", "modules/generated/openpnm.network.Demo", "modules/generated/openpnm.network.Demo.add_boundary_pores", "modules/generated/openpnm.network.Demo.add_model", "modules/generated/openpnm.network.Demo.add_model_collection", "modules/generated/openpnm.network.Demo.clear", "modules/generated/openpnm.network.Demo.copy", "modules/generated/openpnm.network.Demo.create_adjacency_matrix", "modules/generated/openpnm.network.Demo.create_incidence_matrix", "modules/generated/openpnm.network.Demo.filter_by_label", "modules/generated/openpnm.network.Demo.find_connected_pores", "modules/generated/openpnm.network.Demo.find_connecting_throat", "modules/generated/openpnm.network.Demo.find_nearby_pores", "modules/generated/openpnm.network.Demo.find_neighbor_pores", "modules/generated/openpnm.network.Demo.find_neighbor_throats", "modules/generated/openpnm.network.Demo.fromkeys", "modules/generated/openpnm.network.Demo.get", "modules/generated/openpnm.network.Demo.get_adjacency_matrix", "modules/generated/openpnm.network.Demo.get_conduit_data", "modules/generated/openpnm.network.Demo.get_incidence_matrix", "modules/generated/openpnm.network.Demo.interpolate_data", "modules/generated/openpnm.network.Demo.items", "modules/generated/openpnm.network.Demo.keys", "modules/generated/openpnm.network.Demo.labels", "modules/generated/openpnm.network.Demo.num_neighbors", "modules/generated/openpnm.network.Demo.num_pores", "modules/generated/openpnm.network.Demo.num_throats", "modules/generated/openpnm.network.Demo.pop", "modules/generated/openpnm.network.Demo.popitem", "modules/generated/openpnm.network.Demo.pores", "modules/generated/openpnm.network.Demo.props", "modules/generated/openpnm.network.Demo.regenerate_models", "modules/generated/openpnm.network.Demo.run_model", "modules/generated/openpnm.network.Demo.set_label", "modules/generated/openpnm.network.Demo.setdefault", "modules/generated/openpnm.network.Demo.throats", "modules/generated/openpnm.network.Demo.to_indices", "modules/generated/openpnm.network.Demo.to_mask", "modules/generated/openpnm.network.Demo.update", "modules/generated/openpnm.network.Demo.values", "modules/generated/openpnm.network.FaceCenteredCubic", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.FaceCenteredCubic.add_model", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection", "modules/generated/openpnm.network.FaceCenteredCubic.clear", "modules/generated/openpnm.network.FaceCenteredCubic.copy", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys", "modules/generated/openpnm.network.FaceCenteredCubic.get", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data", "modules/generated/openpnm.network.FaceCenteredCubic.items", "modules/generated/openpnm.network.FaceCenteredCubic.keys", "modules/generated/openpnm.network.FaceCenteredCubic.labels", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats", "modules/generated/openpnm.network.FaceCenteredCubic.pop", "modules/generated/openpnm.network.FaceCenteredCubic.popitem", "modules/generated/openpnm.network.FaceCenteredCubic.pores", "modules/generated/openpnm.network.FaceCenteredCubic.props", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models", "modules/generated/openpnm.network.FaceCenteredCubic.run_model", "modules/generated/openpnm.network.FaceCenteredCubic.set_label", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault", "modules/generated/openpnm.network.FaceCenteredCubic.throats", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask", "modules/generated/openpnm.network.FaceCenteredCubic.update", "modules/generated/openpnm.network.FaceCenteredCubic.values", "modules/generated/openpnm.network.Network", "modules/generated/openpnm.network.Network.add_model", "modules/generated/openpnm.network.Network.add_model_collection", "modules/generated/openpnm.network.Network.clear", "modules/generated/openpnm.network.Network.copy", "modules/generated/openpnm.network.Network.create_adjacency_matrix", "modules/generated/openpnm.network.Network.create_incidence_matrix", "modules/generated/openpnm.network.Network.filter_by_label", "modules/generated/openpnm.network.Network.find_connected_pores", "modules/generated/openpnm.network.Network.find_connecting_throat", "modules/generated/openpnm.network.Network.find_nearby_pores", "modules/generated/openpnm.network.Network.find_neighbor_pores", "modules/generated/openpnm.network.Network.find_neighbor_throats", "modules/generated/openpnm.network.Network.fromkeys", "modules/generated/openpnm.network.Network.get", "modules/generated/openpnm.network.Network.get_adjacency_matrix", "modules/generated/openpnm.network.Network.get_conduit_data", "modules/generated/openpnm.network.Network.get_incidence_matrix", "modules/generated/openpnm.network.Network.interpolate_data", "modules/generated/openpnm.network.Network.items", "modules/generated/openpnm.network.Network.keys", "modules/generated/openpnm.network.Network.labels", "modules/generated/openpnm.network.Network.num_neighbors", "modules/generated/openpnm.network.Network.num_pores", "modules/generated/openpnm.network.Network.num_throats", "modules/generated/openpnm.network.Network.pop", "modules/generated/openpnm.network.Network.popitem", "modules/generated/openpnm.network.Network.pores", "modules/generated/openpnm.network.Network.props", "modules/generated/openpnm.network.Network.regenerate_models", "modules/generated/openpnm.network.Network.run_model", "modules/generated/openpnm.network.Network.set_label", "modules/generated/openpnm.network.Network.setdefault", "modules/generated/openpnm.network.Network.throats", "modules/generated/openpnm.network.Network.to_indices", "modules/generated/openpnm.network.Network.to_mask", "modules/generated/openpnm.network.Network.update", "modules/generated/openpnm.network.Network.values", "modules/generated/openpnm.network.Voronoi", "modules/generated/openpnm.network.Voronoi.add_model", "modules/generated/openpnm.network.Voronoi.add_model_collection", "modules/generated/openpnm.network.Voronoi.clear", "modules/generated/openpnm.network.Voronoi.copy", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix", "modules/generated/openpnm.network.Voronoi.filter_by_label", "modules/generated/openpnm.network.Voronoi.find_connected_pores", "modules/generated/openpnm.network.Voronoi.find_connecting_throat", "modules/generated/openpnm.network.Voronoi.find_nearby_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats", "modules/generated/openpnm.network.Voronoi.fromkeys", "modules/generated/openpnm.network.Voronoi.get", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.get_conduit_data", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix", "modules/generated/openpnm.network.Voronoi.interpolate_data", "modules/generated/openpnm.network.Voronoi.items", "modules/generated/openpnm.network.Voronoi.keys", "modules/generated/openpnm.network.Voronoi.labels", "modules/generated/openpnm.network.Voronoi.num_neighbors", "modules/generated/openpnm.network.Voronoi.num_pores", "modules/generated/openpnm.network.Voronoi.num_throats", "modules/generated/openpnm.network.Voronoi.pop", "modules/generated/openpnm.network.Voronoi.popitem", "modules/generated/openpnm.network.Voronoi.pores", "modules/generated/openpnm.network.Voronoi.props", "modules/generated/openpnm.network.Voronoi.regenerate_models", "modules/generated/openpnm.network.Voronoi.run_model", "modules/generated/openpnm.network.Voronoi.set_label", "modules/generated/openpnm.network.Voronoi.setdefault", "modules/generated/openpnm.network.Voronoi.throats", "modules/generated/openpnm.network.Voronoi.to_indices", "modules/generated/openpnm.network.Voronoi.to_mask", "modules/generated/openpnm.network.Voronoi.update", "modules/generated/openpnm.network.Voronoi.values", "modules/generated/openpnm.phase", "modules/generated/openpnm.phase.Air", "modules/generated/openpnm.phase.Air.add_model", "modules/generated/openpnm.phase.Air.add_model_collection", "modules/generated/openpnm.phase.Air.clear", "modules/generated/openpnm.phase.Air.copy", "modules/generated/openpnm.phase.Air.filter_by_label", "modules/generated/openpnm.phase.Air.fromkeys", "modules/generated/openpnm.phase.Air.get", "modules/generated/openpnm.phase.Air.get_conduit_data", "modules/generated/openpnm.phase.Air.interpolate_data", "modules/generated/openpnm.phase.Air.items", "modules/generated/openpnm.phase.Air.keys", "modules/generated/openpnm.phase.Air.labels", "modules/generated/openpnm.phase.Air.num_pores", "modules/generated/openpnm.phase.Air.num_throats", "modules/generated/openpnm.phase.Air.pop", "modules/generated/openpnm.phase.Air.popitem", "modules/generated/openpnm.phase.Air.pores", "modules/generated/openpnm.phase.Air.props", "modules/generated/openpnm.phase.Air.regenerate_models", "modules/generated/openpnm.phase.Air.run_model", "modules/generated/openpnm.phase.Air.set_label", "modules/generated/openpnm.phase.Air.setdefault", "modules/generated/openpnm.phase.Air.throats", "modules/generated/openpnm.phase.Air.to_indices", "modules/generated/openpnm.phase.Air.to_mask", "modules/generated/openpnm.phase.Air.update", "modules/generated/openpnm.phase.Air.values", "modules/generated/openpnm.phase.BinaryGas", "modules/generated/openpnm.phase.BinaryGas.add_comp", "modules/generated/openpnm.phase.BinaryGas.add_model", "modules/generated/openpnm.phase.BinaryGas.add_model_collection", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health", "modules/generated/openpnm.phase.BinaryGas.clear", "modules/generated/openpnm.phase.BinaryGas.copy", "modules/generated/openpnm.phase.BinaryGas.filter_by_label", "modules/generated/openpnm.phase.BinaryGas.fromkeys", "modules/generated/openpnm.phase.BinaryGas.get", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals", "modules/generated/openpnm.phase.BinaryGas.interpolate_data", "modules/generated/openpnm.phase.BinaryGas.items", "modules/generated/openpnm.phase.BinaryGas.keys", "modules/generated/openpnm.phase.BinaryGas.labels", "modules/generated/openpnm.phase.BinaryGas.num_pores", "modules/generated/openpnm.phase.BinaryGas.num_throats", "modules/generated/openpnm.phase.BinaryGas.pop", "modules/generated/openpnm.phase.BinaryGas.popitem", "modules/generated/openpnm.phase.BinaryGas.pores", "modules/generated/openpnm.phase.BinaryGas.props", "modules/generated/openpnm.phase.BinaryGas.regenerate_models", "modules/generated/openpnm.phase.BinaryGas.remove_comp", "modules/generated/openpnm.phase.BinaryGas.run_model", "modules/generated/openpnm.phase.BinaryGas.set_label", "modules/generated/openpnm.phase.BinaryGas.setdefault", "modules/generated/openpnm.phase.BinaryGas.throats", "modules/generated/openpnm.phase.BinaryGas.to_indices", "modules/generated/openpnm.phase.BinaryGas.to_mask", "modules/generated/openpnm.phase.BinaryGas.update", "modules/generated/openpnm.phase.BinaryGas.values", "modules/generated/openpnm.phase.BinaryGas.y", "modules/generated/openpnm.phase.GasMixture", "modules/generated/openpnm.phase.GasMixture.add_comp", "modules/generated/openpnm.phase.GasMixture.add_model", "modules/generated/openpnm.phase.GasMixture.add_model_collection", "modules/generated/openpnm.phase.GasMixture.check_mixture_health", "modules/generated/openpnm.phase.GasMixture.clear", "modules/generated/openpnm.phase.GasMixture.copy", "modules/generated/openpnm.phase.GasMixture.filter_by_label", "modules/generated/openpnm.phase.GasMixture.fromkeys", "modules/generated/openpnm.phase.GasMixture.get", "modules/generated/openpnm.phase.GasMixture.get_comp_vals", "modules/generated/openpnm.phase.GasMixture.get_conduit_data", "modules/generated/openpnm.phase.GasMixture.get_mix_vals", "modules/generated/openpnm.phase.GasMixture.interpolate_data", "modules/generated/openpnm.phase.GasMixture.items", "modules/generated/openpnm.phase.GasMixture.keys", "modules/generated/openpnm.phase.GasMixture.labels", "modules/generated/openpnm.phase.GasMixture.num_pores", "modules/generated/openpnm.phase.GasMixture.num_throats", "modules/generated/openpnm.phase.GasMixture.pop", "modules/generated/openpnm.phase.GasMixture.popitem", "modules/generated/openpnm.phase.GasMixture.pores", "modules/generated/openpnm.phase.GasMixture.props", "modules/generated/openpnm.phase.GasMixture.regenerate_models", "modules/generated/openpnm.phase.GasMixture.remove_comp", "modules/generated/openpnm.phase.GasMixture.run_model", "modules/generated/openpnm.phase.GasMixture.set_label", "modules/generated/openpnm.phase.GasMixture.setdefault", "modules/generated/openpnm.phase.GasMixture.throats", "modules/generated/openpnm.phase.GasMixture.to_indices", "modules/generated/openpnm.phase.GasMixture.to_mask", "modules/generated/openpnm.phase.GasMixture.update", "modules/generated/openpnm.phase.GasMixture.values", "modules/generated/openpnm.phase.GasMixture.y", "modules/generated/openpnm.phase.LiquidMixture", "modules/generated/openpnm.phase.LiquidMixture.add_comp", "modules/generated/openpnm.phase.LiquidMixture.add_model", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.LiquidMixture.clear", "modules/generated/openpnm.phase.LiquidMixture.copy", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label", "modules/generated/openpnm.phase.LiquidMixture.fromkeys", "modules/generated/openpnm.phase.LiquidMixture.get", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data", "modules/generated/openpnm.phase.LiquidMixture.items", "modules/generated/openpnm.phase.LiquidMixture.keys", "modules/generated/openpnm.phase.LiquidMixture.labels", "modules/generated/openpnm.phase.LiquidMixture.num_pores", "modules/generated/openpnm.phase.LiquidMixture.num_throats", "modules/generated/openpnm.phase.LiquidMixture.pop", "modules/generated/openpnm.phase.LiquidMixture.popitem", "modules/generated/openpnm.phase.LiquidMixture.pores", "modules/generated/openpnm.phase.LiquidMixture.props", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models", "modules/generated/openpnm.phase.LiquidMixture.remove_comp", "modules/generated/openpnm.phase.LiquidMixture.run_model", "modules/generated/openpnm.phase.LiquidMixture.set_label", "modules/generated/openpnm.phase.LiquidMixture.setdefault", "modules/generated/openpnm.phase.LiquidMixture.throats", "modules/generated/openpnm.phase.LiquidMixture.to_indices", "modules/generated/openpnm.phase.LiquidMixture.to_mask", "modules/generated/openpnm.phase.LiquidMixture.update", "modules/generated/openpnm.phase.LiquidMixture.values", "modules/generated/openpnm.phase.LiquidMixture.x", "modules/generated/openpnm.phase.Mercury", "modules/generated/openpnm.phase.Mercury.add_model", "modules/generated/openpnm.phase.Mercury.add_model_collection", "modules/generated/openpnm.phase.Mercury.clear", "modules/generated/openpnm.phase.Mercury.copy", "modules/generated/openpnm.phase.Mercury.filter_by_label", "modules/generated/openpnm.phase.Mercury.fromkeys", "modules/generated/openpnm.phase.Mercury.get", "modules/generated/openpnm.phase.Mercury.get_conduit_data", "modules/generated/openpnm.phase.Mercury.interpolate_data", "modules/generated/openpnm.phase.Mercury.items", "modules/generated/openpnm.phase.Mercury.keys", "modules/generated/openpnm.phase.Mercury.labels", "modules/generated/openpnm.phase.Mercury.num_pores", "modules/generated/openpnm.phase.Mercury.num_throats", "modules/generated/openpnm.phase.Mercury.pop", "modules/generated/openpnm.phase.Mercury.popitem", "modules/generated/openpnm.phase.Mercury.pores", "modules/generated/openpnm.phase.Mercury.props", "modules/generated/openpnm.phase.Mercury.regenerate_models", "modules/generated/openpnm.phase.Mercury.run_model", "modules/generated/openpnm.phase.Mercury.set_label", "modules/generated/openpnm.phase.Mercury.setdefault", "modules/generated/openpnm.phase.Mercury.throats", "modules/generated/openpnm.phase.Mercury.to_indices", "modules/generated/openpnm.phase.Mercury.to_mask", "modules/generated/openpnm.phase.Mercury.update", "modules/generated/openpnm.phase.Mercury.values", "modules/generated/openpnm.phase.Mixture", "modules/generated/openpnm.phase.Mixture.add_comp", "modules/generated/openpnm.phase.Mixture.add_model", "modules/generated/openpnm.phase.Mixture.add_model_collection", "modules/generated/openpnm.phase.Mixture.check_mixture_health", "modules/generated/openpnm.phase.Mixture.clear", "modules/generated/openpnm.phase.Mixture.copy", "modules/generated/openpnm.phase.Mixture.filter_by_label", "modules/generated/openpnm.phase.Mixture.fromkeys", "modules/generated/openpnm.phase.Mixture.get", "modules/generated/openpnm.phase.Mixture.get_comp_vals", "modules/generated/openpnm.phase.Mixture.get_conduit_data", "modules/generated/openpnm.phase.Mixture.get_mix_vals", "modules/generated/openpnm.phase.Mixture.interpolate_data", "modules/generated/openpnm.phase.Mixture.items", "modules/generated/openpnm.phase.Mixture.keys", "modules/generated/openpnm.phase.Mixture.labels", "modules/generated/openpnm.phase.Mixture.num_pores", "modules/generated/openpnm.phase.Mixture.num_throats", "modules/generated/openpnm.phase.Mixture.pop", "modules/generated/openpnm.phase.Mixture.popitem", "modules/generated/openpnm.phase.Mixture.pores", "modules/generated/openpnm.phase.Mixture.props", "modules/generated/openpnm.phase.Mixture.regenerate_models", "modules/generated/openpnm.phase.Mixture.remove_comp", "modules/generated/openpnm.phase.Mixture.run_model", "modules/generated/openpnm.phase.Mixture.set_label", "modules/generated/openpnm.phase.Mixture.setdefault", "modules/generated/openpnm.phase.Mixture.throats", "modules/generated/openpnm.phase.Mixture.to_indices", "modules/generated/openpnm.phase.Mixture.to_mask", "modules/generated/openpnm.phase.Mixture.update", "modules/generated/openpnm.phase.Mixture.values", "modules/generated/openpnm.phase.Phase", "modules/generated/openpnm.phase.Phase.add_model", "modules/generated/openpnm.phase.Phase.add_model_collection", "modules/generated/openpnm.phase.Phase.clear", "modules/generated/openpnm.phase.Phase.copy", "modules/generated/openpnm.phase.Phase.filter_by_label", "modules/generated/openpnm.phase.Phase.fromkeys", "modules/generated/openpnm.phase.Phase.get", "modules/generated/openpnm.phase.Phase.get_conduit_data", "modules/generated/openpnm.phase.Phase.interpolate_data", "modules/generated/openpnm.phase.Phase.items", "modules/generated/openpnm.phase.Phase.keys", "modules/generated/openpnm.phase.Phase.labels", "modules/generated/openpnm.phase.Phase.num_pores", "modules/generated/openpnm.phase.Phase.num_throats", "modules/generated/openpnm.phase.Phase.pop", "modules/generated/openpnm.phase.Phase.popitem", "modules/generated/openpnm.phase.Phase.pores", "modules/generated/openpnm.phase.Phase.props", "modules/generated/openpnm.phase.Phase.regenerate_models", "modules/generated/openpnm.phase.Phase.run_model", "modules/generated/openpnm.phase.Phase.set_label", "modules/generated/openpnm.phase.Phase.setdefault", "modules/generated/openpnm.phase.Phase.throats", "modules/generated/openpnm.phase.Phase.to_indices", "modules/generated/openpnm.phase.Phase.to_mask", "modules/generated/openpnm.phase.Phase.update", "modules/generated/openpnm.phase.Phase.values", "modules/generated/openpnm.phase.Species", "modules/generated/openpnm.phase.Species.add_model", "modules/generated/openpnm.phase.Species.add_model_collection", "modules/generated/openpnm.phase.Species.clear", "modules/generated/openpnm.phase.Species.copy", "modules/generated/openpnm.phase.Species.filter_by_label", "modules/generated/openpnm.phase.Species.fromkeys", "modules/generated/openpnm.phase.Species.get", "modules/generated/openpnm.phase.Species.get_conduit_data", "modules/generated/openpnm.phase.Species.interpolate_data", "modules/generated/openpnm.phase.Species.items", "modules/generated/openpnm.phase.Species.keys", "modules/generated/openpnm.phase.Species.labels", "modules/generated/openpnm.phase.Species.num_pores", "modules/generated/openpnm.phase.Species.num_throats", "modules/generated/openpnm.phase.Species.pop", "modules/generated/openpnm.phase.Species.popitem", "modules/generated/openpnm.phase.Species.pores", "modules/generated/openpnm.phase.Species.props", "modules/generated/openpnm.phase.Species.regenerate_models", "modules/generated/openpnm.phase.Species.run_model", "modules/generated/openpnm.phase.Species.set_label", "modules/generated/openpnm.phase.Species.setdefault", "modules/generated/openpnm.phase.Species.throats", "modules/generated/openpnm.phase.Species.to_indices", "modules/generated/openpnm.phase.Species.to_mask", "modules/generated/openpnm.phase.Species.update", "modules/generated/openpnm.phase.Species.values", "modules/generated/openpnm.phase.StandardGas", "modules/generated/openpnm.phase.StandardGas.add_model", "modules/generated/openpnm.phase.StandardGas.add_model_collection", "modules/generated/openpnm.phase.StandardGas.clear", "modules/generated/openpnm.phase.StandardGas.copy", "modules/generated/openpnm.phase.StandardGas.filter_by_label", "modules/generated/openpnm.phase.StandardGas.fromkeys", "modules/generated/openpnm.phase.StandardGas.get", "modules/generated/openpnm.phase.StandardGas.get_conduit_data", "modules/generated/openpnm.phase.StandardGas.interpolate_data", "modules/generated/openpnm.phase.StandardGas.items", "modules/generated/openpnm.phase.StandardGas.keys", "modules/generated/openpnm.phase.StandardGas.labels", "modules/generated/openpnm.phase.StandardGas.num_pores", "modules/generated/openpnm.phase.StandardGas.num_throats", "modules/generated/openpnm.phase.StandardGas.pop", "modules/generated/openpnm.phase.StandardGas.popitem", "modules/generated/openpnm.phase.StandardGas.pores", "modules/generated/openpnm.phase.StandardGas.props", "modules/generated/openpnm.phase.StandardGas.regenerate_models", "modules/generated/openpnm.phase.StandardGas.run_model", "modules/generated/openpnm.phase.StandardGas.set_label", "modules/generated/openpnm.phase.StandardGas.setdefault", "modules/generated/openpnm.phase.StandardGas.throats", "modules/generated/openpnm.phase.StandardGas.to_indices", "modules/generated/openpnm.phase.StandardGas.to_mask", "modules/generated/openpnm.phase.StandardGas.update", "modules/generated/openpnm.phase.StandardGas.values", "modules/generated/openpnm.phase.StandardGasMixture", "modules/generated/openpnm.phase.StandardGasMixture.add_comp", "modules/generated/openpnm.phase.StandardGasMixture.add_model", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardGasMixture.clear", "modules/generated/openpnm.phase.StandardGasMixture.copy", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys", "modules/generated/openpnm.phase.StandardGasMixture.get", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data", "modules/generated/openpnm.phase.StandardGasMixture.items", "modules/generated/openpnm.phase.StandardGasMixture.keys", "modules/generated/openpnm.phase.StandardGasMixture.labels", "modules/generated/openpnm.phase.StandardGasMixture.num_pores", "modules/generated/openpnm.phase.StandardGasMixture.num_throats", "modules/generated/openpnm.phase.StandardGasMixture.pop", "modules/generated/openpnm.phase.StandardGasMixture.popitem", "modules/generated/openpnm.phase.StandardGasMixture.pores", "modules/generated/openpnm.phase.StandardGasMixture.props", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp", "modules/generated/openpnm.phase.StandardGasMixture.run_model", "modules/generated/openpnm.phase.StandardGasMixture.set_label", "modules/generated/openpnm.phase.StandardGasMixture.setdefault", "modules/generated/openpnm.phase.StandardGasMixture.throats", "modules/generated/openpnm.phase.StandardGasMixture.to_indices", "modules/generated/openpnm.phase.StandardGasMixture.to_mask", "modules/generated/openpnm.phase.StandardGasMixture.update", "modules/generated/openpnm.phase.StandardGasMixture.values", "modules/generated/openpnm.phase.StandardGasMixture.y", "modules/generated/openpnm.phase.StandardLiquid", "modules/generated/openpnm.phase.StandardLiquid.add_model", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection", "modules/generated/openpnm.phase.StandardLiquid.clear", "modules/generated/openpnm.phase.StandardLiquid.copy", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label", "modules/generated/openpnm.phase.StandardLiquid.fromkeys", "modules/generated/openpnm.phase.StandardLiquid.get", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data", "modules/generated/openpnm.phase.StandardLiquid.items", "modules/generated/openpnm.phase.StandardLiquid.keys", "modules/generated/openpnm.phase.StandardLiquid.labels", "modules/generated/openpnm.phase.StandardLiquid.num_pores", "modules/generated/openpnm.phase.StandardLiquid.num_throats", "modules/generated/openpnm.phase.StandardLiquid.pop", "modules/generated/openpnm.phase.StandardLiquid.popitem", "modules/generated/openpnm.phase.StandardLiquid.pores", "modules/generated/openpnm.phase.StandardLiquid.props", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models", "modules/generated/openpnm.phase.StandardLiquid.run_model", "modules/generated/openpnm.phase.StandardLiquid.set_label", "modules/generated/openpnm.phase.StandardLiquid.setdefault", "modules/generated/openpnm.phase.StandardLiquid.throats", "modules/generated/openpnm.phase.StandardLiquid.to_indices", "modules/generated/openpnm.phase.StandardLiquid.to_mask", "modules/generated/openpnm.phase.StandardLiquid.update", "modules/generated/openpnm.phase.StandardLiquid.values", "modules/generated/openpnm.phase.StandardLiquidMixture", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardLiquidMixture.clear", "modules/generated/openpnm.phase.StandardLiquidMixture.copy", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys", "modules/generated/openpnm.phase.StandardLiquidMixture.get", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data", "modules/generated/openpnm.phase.StandardLiquidMixture.items", "modules/generated/openpnm.phase.StandardLiquidMixture.keys", "modules/generated/openpnm.phase.StandardLiquidMixture.labels", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats", "modules/generated/openpnm.phase.StandardLiquidMixture.pop", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem", "modules/generated/openpnm.phase.StandardLiquidMixture.pores", "modules/generated/openpnm.phase.StandardLiquidMixture.props", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault", "modules/generated/openpnm.phase.StandardLiquidMixture.throats", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask", "modules/generated/openpnm.phase.StandardLiquidMixture.update", "modules/generated/openpnm.phase.StandardLiquidMixture.values", "modules/generated/openpnm.phase.StandardLiquidMixture.x", "modules/generated/openpnm.phase.Water", "modules/generated/openpnm.phase.Water.add_model", "modules/generated/openpnm.phase.Water.add_model_collection", "modules/generated/openpnm.phase.Water.clear", "modules/generated/openpnm.phase.Water.copy", "modules/generated/openpnm.phase.Water.filter_by_label", "modules/generated/openpnm.phase.Water.fromkeys", "modules/generated/openpnm.phase.Water.get", "modules/generated/openpnm.phase.Water.get_conduit_data", "modules/generated/openpnm.phase.Water.interpolate_data", "modules/generated/openpnm.phase.Water.items", "modules/generated/openpnm.phase.Water.keys", "modules/generated/openpnm.phase.Water.labels", "modules/generated/openpnm.phase.Water.num_pores", "modules/generated/openpnm.phase.Water.num_throats", "modules/generated/openpnm.phase.Water.pop", "modules/generated/openpnm.phase.Water.popitem", "modules/generated/openpnm.phase.Water.pores", "modules/generated/openpnm.phase.Water.props", "modules/generated/openpnm.phase.Water.regenerate_models", "modules/generated/openpnm.phase.Water.run_model", "modules/generated/openpnm.phase.Water.set_label", "modules/generated/openpnm.phase.Water.setdefault", "modules/generated/openpnm.phase.Water.throats", "modules/generated/openpnm.phase.Water.to_indices", "modules/generated/openpnm.phase.Water.to_mask", "modules/generated/openpnm.phase.Water.update", "modules/generated/openpnm.phase.Water.values", "modules/generated/openpnm.solvers", "modules/generated/openpnm.solvers.BaseSolver", "modules/generated/openpnm.solvers.BaseSolver.solve", "modules/generated/openpnm.solvers.DirectSolver", "modules/generated/openpnm.solvers.DirectSolver.solve", "modules/generated/openpnm.solvers.IterativeSolver", "modules/generated/openpnm.solvers.IterativeSolver.solve", "modules/generated/openpnm.solvers.PETScLinearSolver", "modules/generated/openpnm.solvers.PETScLinearSolver.solve", "modules/generated/openpnm.solvers.PardisoSpsolve", "modules/generated/openpnm.solvers.PardisoSpsolve.solve", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.solve", "modules/generated/openpnm.solvers.ScipyCG", "modules/generated/openpnm.solvers.ScipyCG.solve", "modules/generated/openpnm.solvers.ScipySpsolve", "modules/generated/openpnm.solvers.ScipySpsolve.solve", "modules/generated/openpnm.topotools", "modules/generated/openpnm.topotools.add_boundary_pores", "modules/generated/openpnm.topotools.add_reservoir_pore", "modules/generated/openpnm.topotools.bond_percolation", "modules/generated/openpnm.topotools.clone_pores", "modules/generated/openpnm.topotools.connect_pores", "modules/generated/openpnm.topotools.conns_to_am", "modules/generated/openpnm.topotools.dimensionality", "modules/generated/openpnm.topotools.drop_sites", "modules/generated/openpnm.topotools.extend", "modules/generated/openpnm.topotools.filter_pores_by_z", "modules/generated/openpnm.topotools.find_clusters", "modules/generated/openpnm.topotools.find_connected_sites", "modules/generated/openpnm.topotools.find_connecting_bonds", "modules/generated/openpnm.topotools.find_interface_throats", "modules/generated/openpnm.topotools.find_isolated_clusters", "modules/generated/openpnm.topotools.find_neighbor_bonds", "modules/generated/openpnm.topotools.find_neighbor_sites", "modules/generated/openpnm.topotools.find_path", "modules/generated/openpnm.topotools.find_surface_pores", "modules/generated/openpnm.topotools.generate_base_points", "modules/generated/openpnm.topotools.get_domain_area", "modules/generated/openpnm.topotools.get_domain_length", "modules/generated/openpnm.topotools.get_shape", "modules/generated/openpnm.topotools.get_spacing", "modules/generated/openpnm.topotools.hull_centroid", "modules/generated/openpnm.topotools.is_fully_connected", "modules/generated/openpnm.topotools.iscoplanar", "modules/generated/openpnm.topotools.isoutside", "modules/generated/openpnm.topotools.ispercolating", "modules/generated/openpnm.topotools.issymmetric", "modules/generated/openpnm.topotools.istriangular", "modules/generated/openpnm.topotools.istril", "modules/generated/openpnm.topotools.istriu", "modules/generated/openpnm.topotools.label_faces", "modules/generated/openpnm.topotools.merge_networks", "modules/generated/openpnm.topotools.merge_pores", "modules/generated/openpnm.topotools.reduce_coordination", "modules/generated/openpnm.topotools.reflect_base_points", "modules/generated/openpnm.topotools.rotate_coords", "modules/generated/openpnm.topotools.shear_coords", "modules/generated/openpnm.topotools.site_percolation", "modules/generated/openpnm.topotools.stitch", "modules/generated/openpnm.topotools.template_cylinder_annulus", "modules/generated/openpnm.topotools.template_sphere_shell", "modules/generated/openpnm.topotools.tri_to_am", "modules/generated/openpnm.topotools.trim", "modules/generated/openpnm.topotools.trim_disconnected_clusters", "modules/generated/openpnm.topotools.vor_to_am", "modules/generated/openpnm.utils", "modules/generated/openpnm.utils.Docorator", "modules/generated/openpnm.utils.Docorator.__call__", "modules/generated/openpnm.utils.Docorator.dedent", "modules/generated/openpnm.utils.Docorator.dedents", "modules/generated/openpnm.utils.Docorator.delete_kwargs", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s", "modules/generated/openpnm.utils.Docorator.delete_params", "modules/generated/openpnm.utils.Docorator.delete_params_s", "modules/generated/openpnm.utils.Docorator.delete_types", "modules/generated/openpnm.utils.Docorator.delete_types_s", "modules/generated/openpnm.utils.Docorator.get_docstring", "modules/generated/openpnm.utils.Docorator.get_extended_summary", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf", "modules/generated/openpnm.utils.Docorator.get_full_description", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf", "modules/generated/openpnm.utils.Docorator.get_sections", "modules/generated/openpnm.utils.Docorator.get_sectionsf", "modules/generated/openpnm.utils.Docorator.get_summary", "modules/generated/openpnm.utils.Docorator.get_summaryf", "modules/generated/openpnm.utils.Docorator.keep_params", "modules/generated/openpnm.utils.Docorator.keep_params_s", "modules/generated/openpnm.utils.Docorator.keep_types", "modules/generated/openpnm.utils.Docorator.keep_types_s", "modules/generated/openpnm.utils.Docorator.save_docstring", "modules/generated/openpnm.utils.Docorator.with_indent", "modules/generated/openpnm.utils.Docorator.with_indents", "modules/generated/openpnm.utils.HealthDict", "modules/generated/openpnm.utils.HealthDict.clear", "modules/generated/openpnm.utils.HealthDict.copy", "modules/generated/openpnm.utils.HealthDict.fromkeys", "modules/generated/openpnm.utils.HealthDict.get", "modules/generated/openpnm.utils.HealthDict.items", "modules/generated/openpnm.utils.HealthDict.keys", "modules/generated/openpnm.utils.HealthDict.pop", "modules/generated/openpnm.utils.HealthDict.popitem", "modules/generated/openpnm.utils.HealthDict.setdefault", "modules/generated/openpnm.utils.HealthDict.update", "modules/generated/openpnm.utils.HealthDict.values", "modules/generated/openpnm.utils.NestedDict", "modules/generated/openpnm.utils.NestedDict.clear", "modules/generated/openpnm.utils.NestedDict.copy", "modules/generated/openpnm.utils.NestedDict.fromkeys", "modules/generated/openpnm.utils.NestedDict.get", "modules/generated/openpnm.utils.NestedDict.items", "modules/generated/openpnm.utils.NestedDict.keys", "modules/generated/openpnm.utils.NestedDict.pop", "modules/generated/openpnm.utils.NestedDict.popitem", "modules/generated/openpnm.utils.NestedDict.setdefault", "modules/generated/openpnm.utils.NestedDict.to_dict", "modules/generated/openpnm.utils.NestedDict.unravel", "modules/generated/openpnm.utils.NestedDict.update", "modules/generated/openpnm.utils.NestedDict.values", "modules/generated/openpnm.utils.PrintableDict", "modules/generated/openpnm.utils.PrintableDict.clear", "modules/generated/openpnm.utils.PrintableDict.copy", "modules/generated/openpnm.utils.PrintableDict.fromkeys", "modules/generated/openpnm.utils.PrintableDict.get", "modules/generated/openpnm.utils.PrintableDict.items", "modules/generated/openpnm.utils.PrintableDict.keys", "modules/generated/openpnm.utils.PrintableDict.pop", "modules/generated/openpnm.utils.PrintableDict.popitem", "modules/generated/openpnm.utils.PrintableDict.setdefault", "modules/generated/openpnm.utils.PrintableDict.update", "modules/generated/openpnm.utils.PrintableDict.values", "modules/generated/openpnm.utils.PrintableList", "modules/generated/openpnm.utils.PrintableList.append", "modules/generated/openpnm.utils.PrintableList.clear", "modules/generated/openpnm.utils.PrintableList.copy", "modules/generated/openpnm.utils.PrintableList.count", "modules/generated/openpnm.utils.PrintableList.extend", "modules/generated/openpnm.utils.PrintableList.index", "modules/generated/openpnm.utils.PrintableList.insert", "modules/generated/openpnm.utils.PrintableList.pop", "modules/generated/openpnm.utils.PrintableList.remove", "modules/generated/openpnm.utils.PrintableList.reverse", "modules/generated/openpnm.utils.PrintableList.sort", "modules/generated/openpnm.utils.Project", "modules/generated/openpnm.utils.Project.append", "modules/generated/openpnm.utils.Project.copy", "modules/generated/openpnm.utils.SettingsAttr", "modules/generated/openpnm.utils.SimpleList", "modules/generated/openpnm.utils.SimpleList.append", "modules/generated/openpnm.utils.TypedList", "modules/generated/openpnm.utils.TypedList.append", "modules/generated/openpnm.utils.TypedList.clear", "modules/generated/openpnm.utils.TypedList.copy", "modules/generated/openpnm.utils.TypedList.count", "modules/generated/openpnm.utils.TypedList.extend", "modules/generated/openpnm.utils.TypedList.index", "modules/generated/openpnm.utils.TypedList.insert", "modules/generated/openpnm.utils.TypedList.pop", "modules/generated/openpnm.utils.TypedList.remove", "modules/generated/openpnm.utils.TypedList.reverse", "modules/generated/openpnm.utils.TypedList.sort", "modules/generated/openpnm.utils.TypedMixin", "modules/generated/openpnm.utils.TypedSet", "modules/generated/openpnm.utils.TypedSet.add", "modules/generated/openpnm.utils.TypedSet.clear", "modules/generated/openpnm.utils.TypedSet.copy", "modules/generated/openpnm.utils.TypedSet.difference", "modules/generated/openpnm.utils.TypedSet.difference_update", "modules/generated/openpnm.utils.TypedSet.discard", "modules/generated/openpnm.utils.TypedSet.intersection", "modules/generated/openpnm.utils.TypedSet.intersection_update", "modules/generated/openpnm.utils.TypedSet.isdisjoint", "modules/generated/openpnm.utils.TypedSet.issubset", "modules/generated/openpnm.utils.TypedSet.issuperset", "modules/generated/openpnm.utils.TypedSet.pop", "modules/generated/openpnm.utils.TypedSet.remove", "modules/generated/openpnm.utils.TypedSet.symmetric_difference", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update", "modules/generated/openpnm.utils.TypedSet.union", "modules/generated/openpnm.utils.TypedSet.update", "modules/generated/openpnm.utils.Workspace", "modules/generated/openpnm.utils.Workspace.clear", "modules/generated/openpnm.utils.Workspace.close_project", "modules/generated/openpnm.utils.Workspace.copy", "modules/generated/openpnm.utils.Workspace.copy_project", "modules/generated/openpnm.utils.Workspace.fromkeys", "modules/generated/openpnm.utils.Workspace.get", "modules/generated/openpnm.utils.Workspace.items", "modules/generated/openpnm.utils.Workspace.keys", "modules/generated/openpnm.utils.Workspace.load_project", "modules/generated/openpnm.utils.Workspace.load_workspace", "modules/generated/openpnm.utils.Workspace.new_project", "modules/generated/openpnm.utils.Workspace.pop", "modules/generated/openpnm.utils.Workspace.popitem", "modules/generated/openpnm.utils.Workspace.save_project", "modules/generated/openpnm.utils.Workspace.save_workspace", "modules/generated/openpnm.utils.Workspace.setdefault", "modules/generated/openpnm.utils.Workspace.update", "modules/generated/openpnm.utils.Workspace.values", "modules/generated/openpnm.utils.check_data_health", "modules/generated/openpnm.utils.check_network_health", "modules/generated/openpnm.utils.dict_to_struct", "modules/generated/openpnm.utils.flat_list", "modules/generated/openpnm.utils.get_mixture_model_args", "modules/generated/openpnm.utils.get_printable_labels", "modules/generated/openpnm.utils.get_printable_props", "modules/generated/openpnm.utils.ignore_warnings", "modules/generated/openpnm.utils.is_symmetric", "modules/generated/openpnm.utils.is_transient", "modules/generated/openpnm.utils.is_valid_propname", "modules/generated/openpnm.utils.methods_to_table", "modules/generated/openpnm.utils.models_to_table", "modules/generated/openpnm.utils.sanitize_dict", "modules/generated/openpnm.utils.struct_to_dict", "modules/index"], "filenames": ["_examples/applications.rst", "_examples/index.rst", "_examples/reference.rst", "_examples/tutorials.rst", "basic_usage.rst", "examples/applications/absolute_permeability.ipynb", "examples/applications/adjusting_pore_size_distributions.ipynb", "examples/applications/dispersion_coefficient.ipynb", "examples/applications/effective_diffusivity_and_tortuosity.ipynb", "examples/applications/formation_factor.ipynb", "examples/applications/mercury_intrusion.ipynb", "examples/applications/porosity.ipynb", "examples/applications/relative_diffusivity.ipynb", "examples/applications/relative_permeability.ipynb", "examples/contrib/README.md", "examples/reference/architecture/pore_scale_models.ipynb", "examples/reference/architecture/settings_attribute_machinery.ipynb", "examples/reference/architecture/workspace_and_projects.ipynb", "examples/reference/networks/managing_clustered_networks.ipynb", "examples/reference/simulations/available_matrix_solvers.ipynb", "examples/reference/simulations/basic_transport.ipynb", "examples/reference/simulations/explanation_of_units.ipynb", "examples/reference/simulations/reactive_transport.ipynb", "examples/reference/simulations/size_factors_and_transport_conductance.ipynb", "examples/reference/simulations/transient_transport.ipynb", "examples/tutorials/01_numerical_python_primer.ipynb", "examples/tutorials/02_network_generation_and_visualization.ipynb", "examples/tutorials/03_data_and_topology_storage.ipynb", "examples/tutorials/04_graph_queries_and_manipulation.ipynb", "examples/tutorials/05_defining_geometry.ipynb", "examples/tutorials/06_labels_and_domains.ipynb", "examples/tutorials/07_phases_and_mixtures.ipynb", "examples/tutorials/08_simulating_transport.ipynb", "examples/tutorials/09_simulating_invasion.ipynb", "examples/tutorials/10_visualization_options.ipynb", "index.rst", "installation.rst", "modules/generated/openpnm.algorithms.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.Algorithm.rst", "modules/generated/openpnm.algorithms.Algorithm.clear.rst", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs.rst", "modules/generated/openpnm.algorithms.Algorithm.copy.rst", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label.rst", "modules/generated/openpnm.algorithms.Algorithm.fromkeys.rst", "modules/generated/openpnm.algorithms.Algorithm.get.rst", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data.rst", "modules/generated/openpnm.algorithms.Algorithm.items.rst", "modules/generated/openpnm.algorithms.Algorithm.keys.rst", "modules/generated/openpnm.algorithms.Algorithm.labels.rst", "modules/generated/openpnm.algorithms.Algorithm.num_pores.rst", "modules/generated/openpnm.algorithms.Algorithm.num_throats.rst", "modules/generated/openpnm.algorithms.Algorithm.pop.rst", "modules/generated/openpnm.algorithms.Algorithm.popitem.rst", "modules/generated/openpnm.algorithms.Algorithm.pores.rst", "modules/generated/openpnm.algorithms.Algorithm.props.rst", "modules/generated/openpnm.algorithms.Algorithm.set_BC.rst", "modules/generated/openpnm.algorithms.Algorithm.set_label.rst", "modules/generated/openpnm.algorithms.Algorithm.setdefault.rst", "modules/generated/openpnm.algorithms.Algorithm.throats.rst", "modules/generated/openpnm.algorithms.Algorithm.to_indices.rst", "modules/generated/openpnm.algorithms.Algorithm.to_mask.rst", "modules/generated/openpnm.algorithms.Algorithm.update.rst", "modules/generated/openpnm.algorithms.Algorithm.values.rst", "modules/generated/openpnm.algorithms.Drainage.rst", "modules/generated/openpnm.algorithms.Drainage.apply_trapping.rst", "modules/generated/openpnm.algorithms.Drainage.clear.rst", "modules/generated/openpnm.algorithms.Drainage.clear_BCs.rst", "modules/generated/openpnm.algorithms.Drainage.copy.rst", "modules/generated/openpnm.algorithms.Drainage.filter_by_label.rst", "modules/generated/openpnm.algorithms.Drainage.fromkeys.rst", "modules/generated/openpnm.algorithms.Drainage.get.rst", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Drainage.interpolate_data.rst", "modules/generated/openpnm.algorithms.Drainage.items.rst", "modules/generated/openpnm.algorithms.Drainage.keys.rst", "modules/generated/openpnm.algorithms.Drainage.labels.rst", "modules/generated/openpnm.algorithms.Drainage.num_pores.rst", "modules/generated/openpnm.algorithms.Drainage.num_throats.rst", "modules/generated/openpnm.algorithms.Drainage.pc_curve.rst", "modules/generated/openpnm.algorithms.Drainage.pop.rst", "modules/generated/openpnm.algorithms.Drainage.popitem.rst", "modules/generated/openpnm.algorithms.Drainage.pores.rst", "modules/generated/openpnm.algorithms.Drainage.props.rst", "modules/generated/openpnm.algorithms.Drainage.reset.rst", "modules/generated/openpnm.algorithms.Drainage.run.rst", "modules/generated/openpnm.algorithms.Drainage.set_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_label.rst", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.setdefault.rst", "modules/generated/openpnm.algorithms.Drainage.throats.rst", "modules/generated/openpnm.algorithms.Drainage.to_indices.rst", "modules/generated/openpnm.algorithms.Drainage.to_mask.rst", "modules/generated/openpnm.algorithms.Drainage.update.rst", "modules/generated/openpnm.algorithms.Drainage.values.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.FourierConduction.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.copy.rst", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.FourierConduction.get.rst", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.items.rst", "modules/generated/openpnm.algorithms.FourierConduction.keys.rst", "modules/generated/openpnm.algorithms.FourierConduction.labels.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.pop.rst", "modules/generated/openpnm.algorithms.FourierConduction.popitem.rst", "modules/generated/openpnm.algorithms.FourierConduction.pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.props.rst", "modules/generated/openpnm.algorithms.FourierConduction.rate.rst", "modules/generated/openpnm.algorithms.FourierConduction.run.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_source.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.setdefault.rst", "modules/generated/openpnm.algorithms.FourierConduction.throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_indices.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_mask.rst", "modules/generated/openpnm.algorithms.FourierConduction.update.rst", "modules/generated/openpnm.algorithms.FourierConduction.values.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.copy.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.items.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.keys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.labels.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pop.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.props.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.reset.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.run.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.update.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.values.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.copy.rst", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.items.rst", "modules/generated/openpnm.algorithms.OhmicConduction.keys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.labels.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pop.rst", "modules/generated/openpnm.algorithms.OhmicConduction.popitem.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.props.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rate.rst", "modules/generated/openpnm.algorithms.OhmicConduction.run.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_source.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault.rst", "modules/generated/openpnm.algorithms.OhmicConduction.throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask.rst", "modules/generated/openpnm.algorithms.OhmicConduction.update.rst", "modules/generated/openpnm.algorithms.OhmicConduction.values.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.StokesFlow.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.copy.rst", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys.rst", "modules/generated/openpnm.algorithms.StokesFlow.get.rst", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.items.rst", "modules/generated/openpnm.algorithms.StokesFlow.keys.rst", "modules/generated/openpnm.algorithms.StokesFlow.labels.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.pop.rst", "modules/generated/openpnm.algorithms.StokesFlow.popitem.rst", "modules/generated/openpnm.algorithms.StokesFlow.pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.props.rst", "modules/generated/openpnm.algorithms.StokesFlow.rate.rst", "modules/generated/openpnm.algorithms.StokesFlow.run.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_source.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.setdefault.rst", "modules/generated/openpnm.algorithms.StokesFlow.throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_indices.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_mask.rst", "modules/generated/openpnm.algorithms.StokesFlow.update.rst", "modules/generated/openpnm.algorithms.StokesFlow.values.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.Transport.rst", "modules/generated/openpnm.algorithms.Transport.clear.rst", "modules/generated/openpnm.algorithms.Transport.clear_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.Transport.copy.rst", "modules/generated/openpnm.algorithms.Transport.filter_by_label.rst", "modules/generated/openpnm.algorithms.Transport.fromkeys.rst", "modules/generated/openpnm.algorithms.Transport.get.rst", "modules/generated/openpnm.algorithms.Transport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Transport.interpolate_data.rst", "modules/generated/openpnm.algorithms.Transport.items.rst", "modules/generated/openpnm.algorithms.Transport.keys.rst", "modules/generated/openpnm.algorithms.Transport.labels.rst", "modules/generated/openpnm.algorithms.Transport.num_pores.rst", "modules/generated/openpnm.algorithms.Transport.num_throats.rst", "modules/generated/openpnm.algorithms.Transport.pop.rst", "modules/generated/openpnm.algorithms.Transport.popitem.rst", "modules/generated/openpnm.algorithms.Transport.pores.rst", "modules/generated/openpnm.algorithms.Transport.props.rst", "modules/generated/openpnm.algorithms.Transport.rate.rst", "modules/generated/openpnm.algorithms.Transport.run.rst", "modules/generated/openpnm.algorithms.Transport.set_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_label.rst", "modules/generated/openpnm.algorithms.Transport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_value_BC.rst", "modules/generated/openpnm.algorithms.Transport.setdefault.rst", "modules/generated/openpnm.algorithms.Transport.throats.rst", "modules/generated/openpnm.algorithms.Transport.to_indices.rst", "modules/generated/openpnm.algorithms.Transport.to_mask.rst", "modules/generated/openpnm.algorithms.Transport.update.rst", "modules/generated/openpnm.algorithms.Transport.values.rst", "modules/generated/openpnm.core.rst", "modules/generated/openpnm.core.Base2.rst", "modules/generated/openpnm.core.Base2.clear.rst", "modules/generated/openpnm.core.Base2.copy.rst", "modules/generated/openpnm.core.Base2.fromkeys.rst", "modules/generated/openpnm.core.Base2.get.rst", "modules/generated/openpnm.core.Base2.get_conduit_data.rst", "modules/generated/openpnm.core.Base2.interpolate_data.rst", "modules/generated/openpnm.core.Base2.items.rst", "modules/generated/openpnm.core.Base2.keys.rst", "modules/generated/openpnm.core.Base2.pop.rst", "modules/generated/openpnm.core.Base2.popitem.rst", "modules/generated/openpnm.core.Base2.props.rst", "modules/generated/openpnm.core.Base2.setdefault.rst", "modules/generated/openpnm.core.Base2.to_indices.rst", "modules/generated/openpnm.core.Base2.to_mask.rst", "modules/generated/openpnm.core.Base2.update.rst", "modules/generated/openpnm.core.Base2.values.rst", "modules/generated/openpnm.core.Domain.rst", "modules/generated/openpnm.core.Domain.add_model.rst", "modules/generated/openpnm.core.Domain.add_model_collection.rst", "modules/generated/openpnm.core.Domain.clear.rst", "modules/generated/openpnm.core.Domain.copy.rst", "modules/generated/openpnm.core.Domain.filter_by_label.rst", "modules/generated/openpnm.core.Domain.fromkeys.rst", "modules/generated/openpnm.core.Domain.get.rst", "modules/generated/openpnm.core.Domain.get_conduit_data.rst", "modules/generated/openpnm.core.Domain.interpolate_data.rst", "modules/generated/openpnm.core.Domain.items.rst", "modules/generated/openpnm.core.Domain.keys.rst", "modules/generated/openpnm.core.Domain.labels.rst", "modules/generated/openpnm.core.Domain.num_pores.rst", "modules/generated/openpnm.core.Domain.num_throats.rst", "modules/generated/openpnm.core.Domain.pop.rst", "modules/generated/openpnm.core.Domain.popitem.rst", "modules/generated/openpnm.core.Domain.pores.rst", "modules/generated/openpnm.core.Domain.props.rst", "modules/generated/openpnm.core.Domain.regenerate_models.rst", "modules/generated/openpnm.core.Domain.run_model.rst", "modules/generated/openpnm.core.Domain.set_label.rst", "modules/generated/openpnm.core.Domain.setdefault.rst", "modules/generated/openpnm.core.Domain.throats.rst", "modules/generated/openpnm.core.Domain.to_indices.rst", "modules/generated/openpnm.core.Domain.to_mask.rst", "modules/generated/openpnm.core.Domain.update.rst", "modules/generated/openpnm.core.Domain.values.rst", "modules/generated/openpnm.core.LabelMixin.rst", "modules/generated/openpnm.core.LabelMixin.filter_by_label.rst", "modules/generated/openpnm.core.LabelMixin.labels.rst", "modules/generated/openpnm.core.LabelMixin.num_pores.rst", "modules/generated/openpnm.core.LabelMixin.num_throats.rst", "modules/generated/openpnm.core.LabelMixin.pores.rst", "modules/generated/openpnm.core.LabelMixin.set_label.rst", "modules/generated/openpnm.core.LabelMixin.throats.rst", "modules/generated/openpnm.core.ModelWrapper.rst", "modules/generated/openpnm.core.ModelWrapper.__call__.rst", "modules/generated/openpnm.core.ModelWrapper.clear.rst", "modules/generated/openpnm.core.ModelWrapper.copy.rst", "modules/generated/openpnm.core.ModelWrapper.fromkeys.rst", "modules/generated/openpnm.core.ModelWrapper.get.rst", "modules/generated/openpnm.core.ModelWrapper.items.rst", "modules/generated/openpnm.core.ModelWrapper.keys.rst", "modules/generated/openpnm.core.ModelWrapper.pop.rst", "modules/generated/openpnm.core.ModelWrapper.popitem.rst", "modules/generated/openpnm.core.ModelWrapper.setdefault.rst", "modules/generated/openpnm.core.ModelWrapper.update.rst", "modules/generated/openpnm.core.ModelWrapper.values.rst", "modules/generated/openpnm.core.ModelsDict.rst", "modules/generated/openpnm.core.ModelsDict.clear.rst", "modules/generated/openpnm.core.ModelsDict.copy.rst", "modules/generated/openpnm.core.ModelsDict.dependency_graph.rst", "modules/generated/openpnm.core.ModelsDict.dependency_list.rst", "modules/generated/openpnm.core.ModelsDict.dependency_map.rst", "modules/generated/openpnm.core.ModelsDict.fromkeys.rst", "modules/generated/openpnm.core.ModelsDict.get.rst", "modules/generated/openpnm.core.ModelsDict.items.rst", "modules/generated/openpnm.core.ModelsDict.keys.rst", "modules/generated/openpnm.core.ModelsDict.pop.rst", "modules/generated/openpnm.core.ModelsDict.popitem.rst", "modules/generated/openpnm.core.ModelsDict.setdefault.rst", "modules/generated/openpnm.core.ModelsDict.update.rst", "modules/generated/openpnm.core.ModelsDict.values.rst", "modules/generated/openpnm.core.ModelsMixin2.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection.rst", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models.rst", "modules/generated/openpnm.core.ModelsMixin2.run_model.rst", "modules/generated/openpnm.core.ParserMixin.rst", "modules/generated/openpnm.integrators.rst", "modules/generated/openpnm.integrators.Integrator.rst", "modules/generated/openpnm.integrators.ScipyRK45.rst", "modules/generated/openpnm.integrators.ScipyRK45.solve.rst", "modules/generated/openpnm.io.rst", "modules/generated/openpnm.io.network_from_csv.rst", "modules/generated/openpnm.io.network_from_jsongraph.rst", "modules/generated/openpnm.io.network_from_marock.rst", "modules/generated/openpnm.io.network_from_networkx.rst", "modules/generated/openpnm.io.network_from_pergeos.rst", "modules/generated/openpnm.io.network_from_porespy.rst", "modules/generated/openpnm.io.network_from_statoil.rst", "modules/generated/openpnm.io.network_to_comsol.rst", "modules/generated/openpnm.io.network_to_csv.rst", "modules/generated/openpnm.io.network_to_jsongraph.rst", "modules/generated/openpnm.io.network_to_networkx.rst", "modules/generated/openpnm.io.network_to_pandas.rst", "modules/generated/openpnm.io.network_to_pergeos.rst", "modules/generated/openpnm.io.network_to_salome.rst", "modules/generated/openpnm.io.network_to_stl.rst", "modules/generated/openpnm.io.print_hdf5.rst", "modules/generated/openpnm.io.project_to_csv.rst", "modules/generated/openpnm.io.project_to_dict.rst", "modules/generated/openpnm.io.project_to_hdf5.rst", "modules/generated/openpnm.io.project_to_pandas.rst", "modules/generated/openpnm.io.project_to_paraview.rst", "modules/generated/openpnm.io.project_to_vtk.rst", "modules/generated/openpnm.io.project_to_xdmf.rst", "modules/generated/openpnm.models.rst", "modules/generated/openpnm.models.collections.rst", "modules/generated/openpnm.models.collections.geometry.rst", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.collections.network.rst", "modules/generated/openpnm.models.collections.phase.rst", "modules/generated/openpnm.models.collections.phase.air.rst", "modules/generated/openpnm.models.collections.phase.gas.rst", "modules/generated/openpnm.models.collections.phase.liquid.rst", "modules/generated/openpnm.models.collections.phase.mercury.rst", "modules/generated/openpnm.models.collections.phase.water.rst", "modules/generated/openpnm.models.collections.physics.rst", "modules/generated/openpnm.models.collections.physics.basic.rst", "modules/generated/openpnm.models.collections.physics.standard.rst", "modules/generated/openpnm.models.geometry.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square.rst", "modules/generated/openpnm.models.geometry.pore_seed.rst", "modules/generated/openpnm.models.geometry.pore_seed.random.rst", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated.rst", "modules/generated/openpnm.models.geometry.pore_size.rst", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats.rst", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere.rst", "modules/generated/openpnm.models.geometry.pore_size.normal.rst", "modules/generated/openpnm.models.geometry.pore_size.random.rst", "modules/generated/openpnm.models.geometry.pore_size.weibull.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.square.rst", "modules/generated/openpnm.models.geometry.pore_volume.rst", "modules/generated/openpnm.models.geometry.pore_volume.circle.rst", "modules/generated/openpnm.models.geometry.pore_volume.cube.rst", "modules/generated/openpnm.models.geometry.pore_volume.effective.rst", "modules/generated/openpnm.models.geometry.pore_volume.sphere.rst", "modules/generated/openpnm.models.geometry.pore_volume.square.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow.rst", "modules/generated/openpnm.models.geometry.throat_centroid.rst", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.rst", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_seed.rst", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_seed.random.rst", "modules/generated/openpnm.models.geometry.throat_size.rst", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.throat_size.normal.rst", "modules/generated/openpnm.models.geometry.throat_size.random.rst", "modules/generated/openpnm.models.geometry.throat_size.weibull.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_vector.rst", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore.rst", "modules/generated/openpnm.models.geometry.throat_volume.rst", "modules/generated/openpnm.models.geometry.throat_volume.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_volume.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_volume.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_volume.lens.rst", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring.rst", "modules/generated/openpnm.models.geometry.throat_volume.rectangle.rst", "modules/generated/openpnm.models.misc.rst", "modules/generated/openpnm.models.misc.blank.rst", "modules/generated/openpnm.models.misc.clip.rst", "modules/generated/openpnm.models.misc.constant.rst", "modules/generated/openpnm.models.misc.difference.rst", "modules/generated/openpnm.models.misc.fraction.rst", "modules/generated/openpnm.models.misc.from_neighbor_pores.rst", "modules/generated/openpnm.models.misc.from_neighbor_throats.rst", "modules/generated/openpnm.models.misc.generic_distribution.rst", "modules/generated/openpnm.models.misc.generic_function.rst", "modules/generated/openpnm.models.misc.invert.rst", "modules/generated/openpnm.models.misc.linear.rst", "modules/generated/openpnm.models.misc.match_histogram.rst", "modules/generated/openpnm.models.misc.normal.rst", "modules/generated/openpnm.models.misc.normalize.rst", "modules/generated/openpnm.models.misc.polynomial.rst", "modules/generated/openpnm.models.misc.product.rst", "modules/generated/openpnm.models.misc.random.rst", "modules/generated/openpnm.models.misc.scaled.rst", "modules/generated/openpnm.models.misc.summation.rst", "modules/generated/openpnm.models.misc.weibull.rst", "modules/generated/openpnm.models.network.rst", "modules/generated/openpnm.models.network.bidirectional_throats.rst", "modules/generated/openpnm.models.network.cluster_number.rst", "modules/generated/openpnm.models.network.cluster_size.rst", "modules/generated/openpnm.models.network.coordination_number.rst", "modules/generated/openpnm.models.network.count_coincident_pores.rst", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_pore.rst", "modules/generated/openpnm.models.network.duplicate_throats.rst", "modules/generated/openpnm.models.network.find_coincident_pores.rst", "modules/generated/openpnm.models.network.headless_throats.rst", "modules/generated/openpnm.models.network.isolated_pores.rst", "modules/generated/openpnm.models.network.looped_throats.rst", "modules/generated/openpnm.models.network.pore_to_pore_distance.rst", "modules/generated/openpnm.models.network.reversed_throats.rst", "modules/generated/openpnm.models.phase.rst", "modules/generated/openpnm.models.phase.chemicals_wrapper.rst", "modules/generated/openpnm.models.phase.critical_props.rst", "modules/generated/openpnm.models.phase.density.rst", "modules/generated/openpnm.models.phase.density.ideal_gas.rst", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD.rst", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD.rst", "modules/generated/openpnm.models.phase.density.mass_to_molar.rst", "modules/generated/openpnm.models.phase.density.water_correlation.rst", "modules/generated/openpnm.models.phase.diffusivity.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg.rst", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc.rst", "modules/generated/openpnm.models.phase.heat_capacity.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp.rst", "modules/generated/openpnm.models.phase.misc.rst", "modules/generated/openpnm.models.phase.misc.mix_and_match.rst", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.rst", "modules/generated/openpnm.models.phase.mixtures.from_component.rst", "modules/generated/openpnm.models.phase.mixtures.mixing_rule.rst", "modules/generated/openpnm.models.phase.mixtures.mole_summation.rst", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.salinity.rst", "modules/generated/openpnm.models.phase.partition_coefficient.rst", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water.rst", "modules/generated/openpnm.models.phase.surface_tension.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb.rst", "modules/generated/openpnm.models.phase.surface_tension.water_correlation.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation.rst", "modules/generated/openpnm.models.phase.vapor_pressure.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk.rst", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation.rst", "modules/generated/openpnm.models.phase.viscosity.rst", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls.rst", "modules/generated/openpnm.models.phase.viscosity.water_correlation.rst", "modules/generated/openpnm.models.physics.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif.rst", "modules/generated/openpnm.models.physics.capillary_pressure.rst", "modules/generated/openpnm.models.physics.capillary_pressure.purcell.rst", "modules/generated/openpnm.models.physics.capillary_pressure.washburn.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion.rst", "modules/generated/openpnm.models.physics.electrical_conductance.rst", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical.rst", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt.rst", "modules/generated/openpnm.models.physics.meniscus.rst", "modules/generated/openpnm.models.physics.meniscus.general_toroidal.rst", "modules/generated/openpnm.models.physics.meniscus.purcell.rst", "modules/generated/openpnm.models.physics.meniscus.sinusoidal.rst", "modules/generated/openpnm.models.physics.multiphase.rst", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance.rst", "modules/generated/openpnm.models.physics.multiphase.late_filling.rst", "modules/generated/openpnm.models.physics.source_terms.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage.rst", "modules/generated/openpnm.models.physics.source_terms.exponential.rst", "modules/generated/openpnm.models.physics.source_terms.general_symbolic.rst", "modules/generated/openpnm.models.physics.source_terms.linear.rst", "modules/generated/openpnm.models.physics.source_terms.logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.natural_exponential.rst", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.power_law.rst", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics.rst", "modules/generated/openpnm.models.physics.thermal_conductance.rst", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal.rst", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors.rst", "modules/generated/openpnm.network.rst", "modules/generated/openpnm.network.BodyCenteredCubic.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.BodyCenteredCubic.clear.rst", "modules/generated/openpnm.network.BodyCenteredCubic.copy.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.items.rst", "modules/generated/openpnm.network.BodyCenteredCubic.keys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.labels.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pop.rst", "modules/generated/openpnm.network.BodyCenteredCubic.popitem.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.props.rst", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.BodyCenteredCubic.run_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.set_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.BodyCenteredCubic.throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.BodyCenteredCubic.update.rst", "modules/generated/openpnm.network.BodyCenteredCubic.values.rst", "modules/generated/openpnm.network.Cubic.rst", "modules/generated/openpnm.network.Cubic.add_boundary_pores.rst", "modules/generated/openpnm.network.Cubic.add_model.rst", "modules/generated/openpnm.network.Cubic.add_model_collection.rst", "modules/generated/openpnm.network.Cubic.clear.rst", "modules/generated/openpnm.network.Cubic.copy.rst", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.filter_by_label.rst", "modules/generated/openpnm.network.Cubic.find_connected_pores.rst", "modules/generated/openpnm.network.Cubic.find_connecting_throat.rst", "modules/generated/openpnm.network.Cubic.find_nearby_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.Cubic.fromkeys.rst", "modules/generated/openpnm.network.Cubic.get.rst", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.get_conduit_data.rst", "modules/generated/openpnm.network.Cubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.interpolate_data.rst", "modules/generated/openpnm.network.Cubic.items.rst", "modules/generated/openpnm.network.Cubic.keys.rst", "modules/generated/openpnm.network.Cubic.labels.rst", "modules/generated/openpnm.network.Cubic.num_neighbors.rst", "modules/generated/openpnm.network.Cubic.num_pores.rst", "modules/generated/openpnm.network.Cubic.num_throats.rst", "modules/generated/openpnm.network.Cubic.pop.rst", "modules/generated/openpnm.network.Cubic.popitem.rst", "modules/generated/openpnm.network.Cubic.pores.rst", "modules/generated/openpnm.network.Cubic.props.rst", "modules/generated/openpnm.network.Cubic.regenerate_models.rst", "modules/generated/openpnm.network.Cubic.run_model.rst", "modules/generated/openpnm.network.Cubic.set_label.rst", "modules/generated/openpnm.network.Cubic.setdefault.rst", "modules/generated/openpnm.network.Cubic.throats.rst", "modules/generated/openpnm.network.Cubic.to_indices.rst", "modules/generated/openpnm.network.Cubic.to_mask.rst", "modules/generated/openpnm.network.Cubic.update.rst", "modules/generated/openpnm.network.Cubic.values.rst", "modules/generated/openpnm.network.CubicTemplate.rst", "modules/generated/openpnm.network.CubicTemplate.add_model.rst", "modules/generated/openpnm.network.CubicTemplate.add_model_collection.rst", "modules/generated/openpnm.network.CubicTemplate.clear.rst", "modules/generated/openpnm.network.CubicTemplate.copy.rst", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.filter_by_label.rst", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat.rst", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats.rst", "modules/generated/openpnm.network.CubicTemplate.fromkeys.rst", "modules/generated/openpnm.network.CubicTemplate.get.rst", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data.rst", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.interpolate_data.rst", "modules/generated/openpnm.network.CubicTemplate.items.rst", "modules/generated/openpnm.network.CubicTemplate.keys.rst", "modules/generated/openpnm.network.CubicTemplate.labels.rst", "modules/generated/openpnm.network.CubicTemplate.num_neighbors.rst", "modules/generated/openpnm.network.CubicTemplate.num_pores.rst", "modules/generated/openpnm.network.CubicTemplate.num_throats.rst", "modules/generated/openpnm.network.CubicTemplate.pop.rst", "modules/generated/openpnm.network.CubicTemplate.popitem.rst", "modules/generated/openpnm.network.CubicTemplate.pores.rst", "modules/generated/openpnm.network.CubicTemplate.props.rst", "modules/generated/openpnm.network.CubicTemplate.regenerate_models.rst", "modules/generated/openpnm.network.CubicTemplate.run_model.rst", "modules/generated/openpnm.network.CubicTemplate.set_label.rst", "modules/generated/openpnm.network.CubicTemplate.setdefault.rst", "modules/generated/openpnm.network.CubicTemplate.throats.rst", "modules/generated/openpnm.network.CubicTemplate.to_indices.rst", "modules/generated/openpnm.network.CubicTemplate.to_mask.rst", "modules/generated/openpnm.network.CubicTemplate.update.rst", "modules/generated/openpnm.network.CubicTemplate.values.rst", "modules/generated/openpnm.network.Delaunay.rst", "modules/generated/openpnm.network.Delaunay.add_model.rst", "modules/generated/openpnm.network.Delaunay.add_model_collection.rst", "modules/generated/openpnm.network.Delaunay.clear.rst", "modules/generated/openpnm.network.Delaunay.copy.rst", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.filter_by_label.rst", "modules/generated/openpnm.network.Delaunay.find_connected_pores.rst", "modules/generated/openpnm.network.Delaunay.find_connecting_throat.rst", "modules/generated/openpnm.network.Delaunay.find_nearby_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats.rst", "modules/generated/openpnm.network.Delaunay.fromkeys.rst", "modules/generated/openpnm.network.Delaunay.get.rst", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.get_conduit_data.rst", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.interpolate_data.rst", "modules/generated/openpnm.network.Delaunay.items.rst", "modules/generated/openpnm.network.Delaunay.keys.rst", "modules/generated/openpnm.network.Delaunay.labels.rst", "modules/generated/openpnm.network.Delaunay.num_neighbors.rst", "modules/generated/openpnm.network.Delaunay.num_pores.rst", "modules/generated/openpnm.network.Delaunay.num_throats.rst", "modules/generated/openpnm.network.Delaunay.pop.rst", "modules/generated/openpnm.network.Delaunay.popitem.rst", "modules/generated/openpnm.network.Delaunay.pores.rst", "modules/generated/openpnm.network.Delaunay.props.rst", "modules/generated/openpnm.network.Delaunay.regenerate_models.rst", "modules/generated/openpnm.network.Delaunay.run_model.rst", "modules/generated/openpnm.network.Delaunay.set_label.rst", "modules/generated/openpnm.network.Delaunay.setdefault.rst", "modules/generated/openpnm.network.Delaunay.throats.rst", "modules/generated/openpnm.network.Delaunay.to_indices.rst", "modules/generated/openpnm.network.Delaunay.to_mask.rst", "modules/generated/openpnm.network.Delaunay.update.rst", "modules/generated/openpnm.network.Delaunay.values.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.items.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.props.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.update.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.values.rst", "modules/generated/openpnm.network.Demo.rst", "modules/generated/openpnm.network.Demo.add_boundary_pores.rst", "modules/generated/openpnm.network.Demo.add_model.rst", "modules/generated/openpnm.network.Demo.add_model_collection.rst", "modules/generated/openpnm.network.Demo.clear.rst", "modules/generated/openpnm.network.Demo.copy.rst", "modules/generated/openpnm.network.Demo.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.create_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.filter_by_label.rst", "modules/generated/openpnm.network.Demo.find_connected_pores.rst", "modules/generated/openpnm.network.Demo.find_connecting_throat.rst", "modules/generated/openpnm.network.Demo.find_nearby_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_throats.rst", "modules/generated/openpnm.network.Demo.fromkeys.rst", "modules/generated/openpnm.network.Demo.get.rst", "modules/generated/openpnm.network.Demo.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.get_conduit_data.rst", "modules/generated/openpnm.network.Demo.get_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.interpolate_data.rst", "modules/generated/openpnm.network.Demo.items.rst", "modules/generated/openpnm.network.Demo.keys.rst", "modules/generated/openpnm.network.Demo.labels.rst", "modules/generated/openpnm.network.Demo.num_neighbors.rst", "modules/generated/openpnm.network.Demo.num_pores.rst", "modules/generated/openpnm.network.Demo.num_throats.rst", "modules/generated/openpnm.network.Demo.pop.rst", "modules/generated/openpnm.network.Demo.popitem.rst", "modules/generated/openpnm.network.Demo.pores.rst", "modules/generated/openpnm.network.Demo.props.rst", "modules/generated/openpnm.network.Demo.regenerate_models.rst", "modules/generated/openpnm.network.Demo.run_model.rst", "modules/generated/openpnm.network.Demo.set_label.rst", "modules/generated/openpnm.network.Demo.setdefault.rst", "modules/generated/openpnm.network.Demo.throats.rst", "modules/generated/openpnm.network.Demo.to_indices.rst", "modules/generated/openpnm.network.Demo.to_mask.rst", "modules/generated/openpnm.network.Demo.update.rst", "modules/generated/openpnm.network.Demo.values.rst", "modules/generated/openpnm.network.FaceCenteredCubic.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.FaceCenteredCubic.clear.rst", "modules/generated/openpnm.network.FaceCenteredCubic.copy.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.items.rst", "modules/generated/openpnm.network.FaceCenteredCubic.keys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.labels.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pop.rst", "modules/generated/openpnm.network.FaceCenteredCubic.popitem.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.props.rst", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.FaceCenteredCubic.run_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.set_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.FaceCenteredCubic.throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.FaceCenteredCubic.update.rst", "modules/generated/openpnm.network.FaceCenteredCubic.values.rst", "modules/generated/openpnm.network.Network.rst", "modules/generated/openpnm.network.Network.add_model.rst", "modules/generated/openpnm.network.Network.add_model_collection.rst", "modules/generated/openpnm.network.Network.clear.rst", "modules/generated/openpnm.network.Network.copy.rst", "modules/generated/openpnm.network.Network.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.create_incidence_matrix.rst", "modules/generated/openpnm.network.Network.filter_by_label.rst", "modules/generated/openpnm.network.Network.find_connected_pores.rst", "modules/generated/openpnm.network.Network.find_connecting_throat.rst", "modules/generated/openpnm.network.Network.find_nearby_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_throats.rst", "modules/generated/openpnm.network.Network.fromkeys.rst", "modules/generated/openpnm.network.Network.get.rst", "modules/generated/openpnm.network.Network.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.get_conduit_data.rst", "modules/generated/openpnm.network.Network.get_incidence_matrix.rst", "modules/generated/openpnm.network.Network.interpolate_data.rst", "modules/generated/openpnm.network.Network.items.rst", "modules/generated/openpnm.network.Network.keys.rst", "modules/generated/openpnm.network.Network.labels.rst", "modules/generated/openpnm.network.Network.num_neighbors.rst", "modules/generated/openpnm.network.Network.num_pores.rst", "modules/generated/openpnm.network.Network.num_throats.rst", "modules/generated/openpnm.network.Network.pop.rst", "modules/generated/openpnm.network.Network.popitem.rst", "modules/generated/openpnm.network.Network.pores.rst", "modules/generated/openpnm.network.Network.props.rst", "modules/generated/openpnm.network.Network.regenerate_models.rst", "modules/generated/openpnm.network.Network.run_model.rst", "modules/generated/openpnm.network.Network.set_label.rst", "modules/generated/openpnm.network.Network.setdefault.rst", "modules/generated/openpnm.network.Network.throats.rst", "modules/generated/openpnm.network.Network.to_indices.rst", "modules/generated/openpnm.network.Network.to_mask.rst", "modules/generated/openpnm.network.Network.update.rst", "modules/generated/openpnm.network.Network.values.rst", "modules/generated/openpnm.network.Voronoi.rst", "modules/generated/openpnm.network.Voronoi.add_model.rst", "modules/generated/openpnm.network.Voronoi.add_model_collection.rst", "modules/generated/openpnm.network.Voronoi.clear.rst", "modules/generated/openpnm.network.Voronoi.copy.rst", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.filter_by_label.rst", "modules/generated/openpnm.network.Voronoi.find_connected_pores.rst", "modules/generated/openpnm.network.Voronoi.find_connecting_throat.rst", "modules/generated/openpnm.network.Voronoi.find_nearby_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats.rst", "modules/generated/openpnm.network.Voronoi.fromkeys.rst", "modules/generated/openpnm.network.Voronoi.get.rst", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.get_conduit_data.rst", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.interpolate_data.rst", "modules/generated/openpnm.network.Voronoi.items.rst", "modules/generated/openpnm.network.Voronoi.keys.rst", "modules/generated/openpnm.network.Voronoi.labels.rst", "modules/generated/openpnm.network.Voronoi.num_neighbors.rst", "modules/generated/openpnm.network.Voronoi.num_pores.rst", "modules/generated/openpnm.network.Voronoi.num_throats.rst", "modules/generated/openpnm.network.Voronoi.pop.rst", "modules/generated/openpnm.network.Voronoi.popitem.rst", "modules/generated/openpnm.network.Voronoi.pores.rst", "modules/generated/openpnm.network.Voronoi.props.rst", "modules/generated/openpnm.network.Voronoi.regenerate_models.rst", "modules/generated/openpnm.network.Voronoi.run_model.rst", "modules/generated/openpnm.network.Voronoi.set_label.rst", "modules/generated/openpnm.network.Voronoi.setdefault.rst", "modules/generated/openpnm.network.Voronoi.throats.rst", "modules/generated/openpnm.network.Voronoi.to_indices.rst", "modules/generated/openpnm.network.Voronoi.to_mask.rst", "modules/generated/openpnm.network.Voronoi.update.rst", "modules/generated/openpnm.network.Voronoi.values.rst", "modules/generated/openpnm.phase.rst", "modules/generated/openpnm.phase.Air.rst", "modules/generated/openpnm.phase.Air.add_model.rst", "modules/generated/openpnm.phase.Air.add_model_collection.rst", "modules/generated/openpnm.phase.Air.clear.rst", "modules/generated/openpnm.phase.Air.copy.rst", "modules/generated/openpnm.phase.Air.filter_by_label.rst", "modules/generated/openpnm.phase.Air.fromkeys.rst", "modules/generated/openpnm.phase.Air.get.rst", "modules/generated/openpnm.phase.Air.get_conduit_data.rst", "modules/generated/openpnm.phase.Air.interpolate_data.rst", "modules/generated/openpnm.phase.Air.items.rst", "modules/generated/openpnm.phase.Air.keys.rst", "modules/generated/openpnm.phase.Air.labels.rst", "modules/generated/openpnm.phase.Air.num_pores.rst", "modules/generated/openpnm.phase.Air.num_throats.rst", "modules/generated/openpnm.phase.Air.pop.rst", "modules/generated/openpnm.phase.Air.popitem.rst", "modules/generated/openpnm.phase.Air.pores.rst", "modules/generated/openpnm.phase.Air.props.rst", "modules/generated/openpnm.phase.Air.regenerate_models.rst", "modules/generated/openpnm.phase.Air.run_model.rst", "modules/generated/openpnm.phase.Air.set_label.rst", "modules/generated/openpnm.phase.Air.setdefault.rst", "modules/generated/openpnm.phase.Air.throats.rst", "modules/generated/openpnm.phase.Air.to_indices.rst", "modules/generated/openpnm.phase.Air.to_mask.rst", "modules/generated/openpnm.phase.Air.update.rst", "modules/generated/openpnm.phase.Air.values.rst", "modules/generated/openpnm.phase.BinaryGas.rst", "modules/generated/openpnm.phase.BinaryGas.add_comp.rst", "modules/generated/openpnm.phase.BinaryGas.add_model.rst", "modules/generated/openpnm.phase.BinaryGas.add_model_collection.rst", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health.rst", "modules/generated/openpnm.phase.BinaryGas.clear.rst", "modules/generated/openpnm.phase.BinaryGas.copy.rst", "modules/generated/openpnm.phase.BinaryGas.filter_by_label.rst", "modules/generated/openpnm.phase.BinaryGas.fromkeys.rst", "modules/generated/openpnm.phase.BinaryGas.get.rst", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals.rst", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data.rst", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals.rst", "modules/generated/openpnm.phase.BinaryGas.interpolate_data.rst", "modules/generated/openpnm.phase.BinaryGas.items.rst", "modules/generated/openpnm.phase.BinaryGas.keys.rst", "modules/generated/openpnm.phase.BinaryGas.labels.rst", "modules/generated/openpnm.phase.BinaryGas.num_pores.rst", "modules/generated/openpnm.phase.BinaryGas.num_throats.rst", "modules/generated/openpnm.phase.BinaryGas.pop.rst", "modules/generated/openpnm.phase.BinaryGas.popitem.rst", "modules/generated/openpnm.phase.BinaryGas.pores.rst", "modules/generated/openpnm.phase.BinaryGas.props.rst", "modules/generated/openpnm.phase.BinaryGas.regenerate_models.rst", "modules/generated/openpnm.phase.BinaryGas.remove_comp.rst", "modules/generated/openpnm.phase.BinaryGas.run_model.rst", "modules/generated/openpnm.phase.BinaryGas.set_label.rst", "modules/generated/openpnm.phase.BinaryGas.setdefault.rst", "modules/generated/openpnm.phase.BinaryGas.throats.rst", "modules/generated/openpnm.phase.BinaryGas.to_indices.rst", "modules/generated/openpnm.phase.BinaryGas.to_mask.rst", "modules/generated/openpnm.phase.BinaryGas.update.rst", "modules/generated/openpnm.phase.BinaryGas.values.rst", "modules/generated/openpnm.phase.BinaryGas.y.rst", "modules/generated/openpnm.phase.GasMixture.rst", "modules/generated/openpnm.phase.GasMixture.add_comp.rst", "modules/generated/openpnm.phase.GasMixture.add_model.rst", "modules/generated/openpnm.phase.GasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.GasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.GasMixture.clear.rst", "modules/generated/openpnm.phase.GasMixture.copy.rst", "modules/generated/openpnm.phase.GasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.GasMixture.fromkeys.rst", "modules/generated/openpnm.phase.GasMixture.get.rst", "modules/generated/openpnm.phase.GasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.GasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.GasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.GasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.GasMixture.items.rst", "modules/generated/openpnm.phase.GasMixture.keys.rst", "modules/generated/openpnm.phase.GasMixture.labels.rst", "modules/generated/openpnm.phase.GasMixture.num_pores.rst", "modules/generated/openpnm.phase.GasMixture.num_throats.rst", "modules/generated/openpnm.phase.GasMixture.pop.rst", "modules/generated/openpnm.phase.GasMixture.popitem.rst", "modules/generated/openpnm.phase.GasMixture.pores.rst", "modules/generated/openpnm.phase.GasMixture.props.rst", "modules/generated/openpnm.phase.GasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.GasMixture.remove_comp.rst", "modules/generated/openpnm.phase.GasMixture.run_model.rst", "modules/generated/openpnm.phase.GasMixture.set_label.rst", "modules/generated/openpnm.phase.GasMixture.setdefault.rst", "modules/generated/openpnm.phase.GasMixture.throats.rst", "modules/generated/openpnm.phase.GasMixture.to_indices.rst", "modules/generated/openpnm.phase.GasMixture.to_mask.rst", "modules/generated/openpnm.phase.GasMixture.update.rst", "modules/generated/openpnm.phase.GasMixture.values.rst", "modules/generated/openpnm.phase.GasMixture.y.rst", "modules/generated/openpnm.phase.LiquidMixture.rst", "modules/generated/openpnm.phase.LiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.LiquidMixture.clear.rst", "modules/generated/openpnm.phase.LiquidMixture.copy.rst", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.LiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.LiquidMixture.get.rst", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.LiquidMixture.items.rst", "modules/generated/openpnm.phase.LiquidMixture.keys.rst", "modules/generated/openpnm.phase.LiquidMixture.labels.rst", "modules/generated/openpnm.phase.LiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.LiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.LiquidMixture.pop.rst", "modules/generated/openpnm.phase.LiquidMixture.popitem.rst", "modules/generated/openpnm.phase.LiquidMixture.pores.rst", "modules/generated/openpnm.phase.LiquidMixture.props.rst", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.LiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.run_model.rst", "modules/generated/openpnm.phase.LiquidMixture.set_label.rst", "modules/generated/openpnm.phase.LiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.LiquidMixture.throats.rst", "modules/generated/openpnm.phase.LiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.LiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.LiquidMixture.update.rst", "modules/generated/openpnm.phase.LiquidMixture.values.rst", "modules/generated/openpnm.phase.LiquidMixture.x.rst", "modules/generated/openpnm.phase.Mercury.rst", "modules/generated/openpnm.phase.Mercury.add_model.rst", "modules/generated/openpnm.phase.Mercury.add_model_collection.rst", "modules/generated/openpnm.phase.Mercury.clear.rst", "modules/generated/openpnm.phase.Mercury.copy.rst", "modules/generated/openpnm.phase.Mercury.filter_by_label.rst", "modules/generated/openpnm.phase.Mercury.fromkeys.rst", "modules/generated/openpnm.phase.Mercury.get.rst", "modules/generated/openpnm.phase.Mercury.get_conduit_data.rst", "modules/generated/openpnm.phase.Mercury.interpolate_data.rst", "modules/generated/openpnm.phase.Mercury.items.rst", "modules/generated/openpnm.phase.Mercury.keys.rst", "modules/generated/openpnm.phase.Mercury.labels.rst", "modules/generated/openpnm.phase.Mercury.num_pores.rst", "modules/generated/openpnm.phase.Mercury.num_throats.rst", "modules/generated/openpnm.phase.Mercury.pop.rst", "modules/generated/openpnm.phase.Mercury.popitem.rst", "modules/generated/openpnm.phase.Mercury.pores.rst", "modules/generated/openpnm.phase.Mercury.props.rst", "modules/generated/openpnm.phase.Mercury.regenerate_models.rst", "modules/generated/openpnm.phase.Mercury.run_model.rst", "modules/generated/openpnm.phase.Mercury.set_label.rst", "modules/generated/openpnm.phase.Mercury.setdefault.rst", "modules/generated/openpnm.phase.Mercury.throats.rst", "modules/generated/openpnm.phase.Mercury.to_indices.rst", "modules/generated/openpnm.phase.Mercury.to_mask.rst", "modules/generated/openpnm.phase.Mercury.update.rst", "modules/generated/openpnm.phase.Mercury.values.rst", "modules/generated/openpnm.phase.Mixture.rst", "modules/generated/openpnm.phase.Mixture.add_comp.rst", "modules/generated/openpnm.phase.Mixture.add_model.rst", "modules/generated/openpnm.phase.Mixture.add_model_collection.rst", "modules/generated/openpnm.phase.Mixture.check_mixture_health.rst", "modules/generated/openpnm.phase.Mixture.clear.rst", "modules/generated/openpnm.phase.Mixture.copy.rst", "modules/generated/openpnm.phase.Mixture.filter_by_label.rst", "modules/generated/openpnm.phase.Mixture.fromkeys.rst", "modules/generated/openpnm.phase.Mixture.get.rst", "modules/generated/openpnm.phase.Mixture.get_comp_vals.rst", "modules/generated/openpnm.phase.Mixture.get_conduit_data.rst", "modules/generated/openpnm.phase.Mixture.get_mix_vals.rst", "modules/generated/openpnm.phase.Mixture.interpolate_data.rst", "modules/generated/openpnm.phase.Mixture.items.rst", "modules/generated/openpnm.phase.Mixture.keys.rst", "modules/generated/openpnm.phase.Mixture.labels.rst", "modules/generated/openpnm.phase.Mixture.num_pores.rst", "modules/generated/openpnm.phase.Mixture.num_throats.rst", "modules/generated/openpnm.phase.Mixture.pop.rst", "modules/generated/openpnm.phase.Mixture.popitem.rst", "modules/generated/openpnm.phase.Mixture.pores.rst", "modules/generated/openpnm.phase.Mixture.props.rst", "modules/generated/openpnm.phase.Mixture.regenerate_models.rst", "modules/generated/openpnm.phase.Mixture.remove_comp.rst", "modules/generated/openpnm.phase.Mixture.run_model.rst", "modules/generated/openpnm.phase.Mixture.set_label.rst", "modules/generated/openpnm.phase.Mixture.setdefault.rst", "modules/generated/openpnm.phase.Mixture.throats.rst", "modules/generated/openpnm.phase.Mixture.to_indices.rst", "modules/generated/openpnm.phase.Mixture.to_mask.rst", "modules/generated/openpnm.phase.Mixture.update.rst", "modules/generated/openpnm.phase.Mixture.values.rst", "modules/generated/openpnm.phase.Phase.rst", "modules/generated/openpnm.phase.Phase.add_model.rst", "modules/generated/openpnm.phase.Phase.add_model_collection.rst", "modules/generated/openpnm.phase.Phase.clear.rst", "modules/generated/openpnm.phase.Phase.copy.rst", "modules/generated/openpnm.phase.Phase.filter_by_label.rst", "modules/generated/openpnm.phase.Phase.fromkeys.rst", "modules/generated/openpnm.phase.Phase.get.rst", "modules/generated/openpnm.phase.Phase.get_conduit_data.rst", "modules/generated/openpnm.phase.Phase.interpolate_data.rst", "modules/generated/openpnm.phase.Phase.items.rst", "modules/generated/openpnm.phase.Phase.keys.rst", "modules/generated/openpnm.phase.Phase.labels.rst", "modules/generated/openpnm.phase.Phase.num_pores.rst", "modules/generated/openpnm.phase.Phase.num_throats.rst", "modules/generated/openpnm.phase.Phase.pop.rst", "modules/generated/openpnm.phase.Phase.popitem.rst", "modules/generated/openpnm.phase.Phase.pores.rst", "modules/generated/openpnm.phase.Phase.props.rst", "modules/generated/openpnm.phase.Phase.regenerate_models.rst", "modules/generated/openpnm.phase.Phase.run_model.rst", "modules/generated/openpnm.phase.Phase.set_label.rst", "modules/generated/openpnm.phase.Phase.setdefault.rst", "modules/generated/openpnm.phase.Phase.throats.rst", "modules/generated/openpnm.phase.Phase.to_indices.rst", "modules/generated/openpnm.phase.Phase.to_mask.rst", "modules/generated/openpnm.phase.Phase.update.rst", "modules/generated/openpnm.phase.Phase.values.rst", "modules/generated/openpnm.phase.Species.rst", "modules/generated/openpnm.phase.Species.add_model.rst", "modules/generated/openpnm.phase.Species.add_model_collection.rst", "modules/generated/openpnm.phase.Species.clear.rst", "modules/generated/openpnm.phase.Species.copy.rst", "modules/generated/openpnm.phase.Species.filter_by_label.rst", "modules/generated/openpnm.phase.Species.fromkeys.rst", "modules/generated/openpnm.phase.Species.get.rst", "modules/generated/openpnm.phase.Species.get_conduit_data.rst", "modules/generated/openpnm.phase.Species.interpolate_data.rst", "modules/generated/openpnm.phase.Species.items.rst", "modules/generated/openpnm.phase.Species.keys.rst", "modules/generated/openpnm.phase.Species.labels.rst", "modules/generated/openpnm.phase.Species.num_pores.rst", "modules/generated/openpnm.phase.Species.num_throats.rst", "modules/generated/openpnm.phase.Species.pop.rst", "modules/generated/openpnm.phase.Species.popitem.rst", "modules/generated/openpnm.phase.Species.pores.rst", "modules/generated/openpnm.phase.Species.props.rst", "modules/generated/openpnm.phase.Species.regenerate_models.rst", "modules/generated/openpnm.phase.Species.run_model.rst", "modules/generated/openpnm.phase.Species.set_label.rst", "modules/generated/openpnm.phase.Species.setdefault.rst", "modules/generated/openpnm.phase.Species.throats.rst", "modules/generated/openpnm.phase.Species.to_indices.rst", "modules/generated/openpnm.phase.Species.to_mask.rst", "modules/generated/openpnm.phase.Species.update.rst", "modules/generated/openpnm.phase.Species.values.rst", "modules/generated/openpnm.phase.StandardGas.rst", "modules/generated/openpnm.phase.StandardGas.add_model.rst", "modules/generated/openpnm.phase.StandardGas.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGas.clear.rst", "modules/generated/openpnm.phase.StandardGas.copy.rst", "modules/generated/openpnm.phase.StandardGas.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGas.fromkeys.rst", "modules/generated/openpnm.phase.StandardGas.get.rst", "modules/generated/openpnm.phase.StandardGas.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGas.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGas.items.rst", "modules/generated/openpnm.phase.StandardGas.keys.rst", "modules/generated/openpnm.phase.StandardGas.labels.rst", "modules/generated/openpnm.phase.StandardGas.num_pores.rst", "modules/generated/openpnm.phase.StandardGas.num_throats.rst", "modules/generated/openpnm.phase.StandardGas.pop.rst", "modules/generated/openpnm.phase.StandardGas.popitem.rst", "modules/generated/openpnm.phase.StandardGas.pores.rst", "modules/generated/openpnm.phase.StandardGas.props.rst", "modules/generated/openpnm.phase.StandardGas.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGas.run_model.rst", "modules/generated/openpnm.phase.StandardGas.set_label.rst", "modules/generated/openpnm.phase.StandardGas.setdefault.rst", "modules/generated/openpnm.phase.StandardGas.throats.rst", "modules/generated/openpnm.phase.StandardGas.to_indices.rst", "modules/generated/openpnm.phase.StandardGas.to_mask.rst", "modules/generated/openpnm.phase.StandardGas.update.rst", "modules/generated/openpnm.phase.StandardGas.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardGasMixture.clear.rst", "modules/generated/openpnm.phase.StandardGasMixture.copy.rst", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardGasMixture.get.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.items.rst", "modules/generated/openpnm.phase.StandardGasMixture.keys.rst", "modules/generated/openpnm.phase.StandardGasMixture.labels.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.pop.rst", "modules/generated/openpnm.phase.StandardGasMixture.popitem.rst", "modules/generated/openpnm.phase.StandardGasMixture.pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.props.rst", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.run_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.set_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardGasMixture.throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardGasMixture.update.rst", "modules/generated/openpnm.phase.StandardGasMixture.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.y.rst", "modules/generated/openpnm.phase.StandardLiquid.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquid.clear.rst", "modules/generated/openpnm.phase.StandardLiquid.copy.rst", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquid.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquid.get.rst", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquid.items.rst", "modules/generated/openpnm.phase.StandardLiquid.keys.rst", "modules/generated/openpnm.phase.StandardLiquid.labels.rst", "modules/generated/openpnm.phase.StandardLiquid.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquid.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquid.pop.rst", "modules/generated/openpnm.phase.StandardLiquid.popitem.rst", "modules/generated/openpnm.phase.StandardLiquid.pores.rst", "modules/generated/openpnm.phase.StandardLiquid.props.rst", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquid.run_model.rst", "modules/generated/openpnm.phase.StandardLiquid.set_label.rst", "modules/generated/openpnm.phase.StandardLiquid.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquid.throats.rst", "modules/generated/openpnm.phase.StandardLiquid.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquid.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquid.update.rst", "modules/generated/openpnm.phase.StandardLiquid.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.clear.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.copy.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.items.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.keys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.labels.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pop.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.props.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.update.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.x.rst", "modules/generated/openpnm.phase.Water.rst", "modules/generated/openpnm.phase.Water.add_model.rst", "modules/generated/openpnm.phase.Water.add_model_collection.rst", "modules/generated/openpnm.phase.Water.clear.rst", "modules/generated/openpnm.phase.Water.copy.rst", "modules/generated/openpnm.phase.Water.filter_by_label.rst", "modules/generated/openpnm.phase.Water.fromkeys.rst", "modules/generated/openpnm.phase.Water.get.rst", "modules/generated/openpnm.phase.Water.get_conduit_data.rst", "modules/generated/openpnm.phase.Water.interpolate_data.rst", "modules/generated/openpnm.phase.Water.items.rst", "modules/generated/openpnm.phase.Water.keys.rst", "modules/generated/openpnm.phase.Water.labels.rst", "modules/generated/openpnm.phase.Water.num_pores.rst", "modules/generated/openpnm.phase.Water.num_throats.rst", "modules/generated/openpnm.phase.Water.pop.rst", "modules/generated/openpnm.phase.Water.popitem.rst", "modules/generated/openpnm.phase.Water.pores.rst", "modules/generated/openpnm.phase.Water.props.rst", "modules/generated/openpnm.phase.Water.regenerate_models.rst", "modules/generated/openpnm.phase.Water.run_model.rst", "modules/generated/openpnm.phase.Water.set_label.rst", "modules/generated/openpnm.phase.Water.setdefault.rst", "modules/generated/openpnm.phase.Water.throats.rst", "modules/generated/openpnm.phase.Water.to_indices.rst", "modules/generated/openpnm.phase.Water.to_mask.rst", "modules/generated/openpnm.phase.Water.update.rst", "modules/generated/openpnm.phase.Water.values.rst", "modules/generated/openpnm.solvers.rst", "modules/generated/openpnm.solvers.BaseSolver.rst", "modules/generated/openpnm.solvers.BaseSolver.solve.rst", "modules/generated/openpnm.solvers.DirectSolver.rst", "modules/generated/openpnm.solvers.DirectSolver.solve.rst", "modules/generated/openpnm.solvers.IterativeSolver.rst", "modules/generated/openpnm.solvers.IterativeSolver.solve.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.solve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.solve.rst", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.rst", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.solve.rst", "modules/generated/openpnm.solvers.ScipyCG.rst", "modules/generated/openpnm.solvers.ScipyCG.solve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.solve.rst", "modules/generated/openpnm.topotools.rst", "modules/generated/openpnm.topotools.add_boundary_pores.rst", "modules/generated/openpnm.topotools.add_reservoir_pore.rst", "modules/generated/openpnm.topotools.bond_percolation.rst", "modules/generated/openpnm.topotools.clone_pores.rst", "modules/generated/openpnm.topotools.connect_pores.rst", "modules/generated/openpnm.topotools.conns_to_am.rst", "modules/generated/openpnm.topotools.dimensionality.rst", "modules/generated/openpnm.topotools.drop_sites.rst", "modules/generated/openpnm.topotools.extend.rst", "modules/generated/openpnm.topotools.filter_pores_by_z.rst", "modules/generated/openpnm.topotools.find_clusters.rst", "modules/generated/openpnm.topotools.find_connected_sites.rst", "modules/generated/openpnm.topotools.find_connecting_bonds.rst", "modules/generated/openpnm.topotools.find_interface_throats.rst", "modules/generated/openpnm.topotools.find_isolated_clusters.rst", "modules/generated/openpnm.topotools.find_neighbor_bonds.rst", "modules/generated/openpnm.topotools.find_neighbor_sites.rst", "modules/generated/openpnm.topotools.find_path.rst", "modules/generated/openpnm.topotools.find_surface_pores.rst", "modules/generated/openpnm.topotools.generate_base_points.rst", "modules/generated/openpnm.topotools.get_domain_area.rst", "modules/generated/openpnm.topotools.get_domain_length.rst", "modules/generated/openpnm.topotools.get_shape.rst", "modules/generated/openpnm.topotools.get_spacing.rst", "modules/generated/openpnm.topotools.hull_centroid.rst", "modules/generated/openpnm.topotools.is_fully_connected.rst", "modules/generated/openpnm.topotools.iscoplanar.rst", "modules/generated/openpnm.topotools.isoutside.rst", "modules/generated/openpnm.topotools.ispercolating.rst", "modules/generated/openpnm.topotools.issymmetric.rst", "modules/generated/openpnm.topotools.istriangular.rst", "modules/generated/openpnm.topotools.istril.rst", "modules/generated/openpnm.topotools.istriu.rst", "modules/generated/openpnm.topotools.label_faces.rst", "modules/generated/openpnm.topotools.merge_networks.rst", "modules/generated/openpnm.topotools.merge_pores.rst", "modules/generated/openpnm.topotools.reduce_coordination.rst", "modules/generated/openpnm.topotools.reflect_base_points.rst", "modules/generated/openpnm.topotools.rotate_coords.rst", "modules/generated/openpnm.topotools.shear_coords.rst", "modules/generated/openpnm.topotools.site_percolation.rst", "modules/generated/openpnm.topotools.stitch.rst", "modules/generated/openpnm.topotools.template_cylinder_annulus.rst", "modules/generated/openpnm.topotools.template_sphere_shell.rst", "modules/generated/openpnm.topotools.tri_to_am.rst", "modules/generated/openpnm.topotools.trim.rst", "modules/generated/openpnm.topotools.trim_disconnected_clusters.rst", "modules/generated/openpnm.topotools.vor_to_am.rst", "modules/generated/openpnm.utils.rst", "modules/generated/openpnm.utils.Docorator.rst", "modules/generated/openpnm.utils.Docorator.__call__.rst", "modules/generated/openpnm.utils.Docorator.dedent.rst", "modules/generated/openpnm.utils.Docorator.dedents.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s.rst", "modules/generated/openpnm.utils.Docorator.delete_params.rst", "modules/generated/openpnm.utils.Docorator.delete_params_s.rst", "modules/generated/openpnm.utils.Docorator.delete_types.rst", "modules/generated/openpnm.utils.Docorator.delete_types_s.rst", "modules/generated/openpnm.utils.Docorator.get_docstring.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summary.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf.rst", "modules/generated/openpnm.utils.Docorator.get_full_description.rst", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf.rst", "modules/generated/openpnm.utils.Docorator.get_sections.rst", "modules/generated/openpnm.utils.Docorator.get_sectionsf.rst", "modules/generated/openpnm.utils.Docorator.get_summary.rst", "modules/generated/openpnm.utils.Docorator.get_summaryf.rst", "modules/generated/openpnm.utils.Docorator.keep_params.rst", "modules/generated/openpnm.utils.Docorator.keep_params_s.rst", "modules/generated/openpnm.utils.Docorator.keep_types.rst", "modules/generated/openpnm.utils.Docorator.keep_types_s.rst", "modules/generated/openpnm.utils.Docorator.save_docstring.rst", "modules/generated/openpnm.utils.Docorator.with_indent.rst", "modules/generated/openpnm.utils.Docorator.with_indents.rst", "modules/generated/openpnm.utils.HealthDict.rst", "modules/generated/openpnm.utils.HealthDict.clear.rst", "modules/generated/openpnm.utils.HealthDict.copy.rst", "modules/generated/openpnm.utils.HealthDict.fromkeys.rst", "modules/generated/openpnm.utils.HealthDict.get.rst", "modules/generated/openpnm.utils.HealthDict.items.rst", "modules/generated/openpnm.utils.HealthDict.keys.rst", "modules/generated/openpnm.utils.HealthDict.pop.rst", "modules/generated/openpnm.utils.HealthDict.popitem.rst", "modules/generated/openpnm.utils.HealthDict.setdefault.rst", "modules/generated/openpnm.utils.HealthDict.update.rst", "modules/generated/openpnm.utils.HealthDict.values.rst", "modules/generated/openpnm.utils.NestedDict.rst", "modules/generated/openpnm.utils.NestedDict.clear.rst", "modules/generated/openpnm.utils.NestedDict.copy.rst", "modules/generated/openpnm.utils.NestedDict.fromkeys.rst", "modules/generated/openpnm.utils.NestedDict.get.rst", "modules/generated/openpnm.utils.NestedDict.items.rst", "modules/generated/openpnm.utils.NestedDict.keys.rst", "modules/generated/openpnm.utils.NestedDict.pop.rst", "modules/generated/openpnm.utils.NestedDict.popitem.rst", "modules/generated/openpnm.utils.NestedDict.setdefault.rst", "modules/generated/openpnm.utils.NestedDict.to_dict.rst", "modules/generated/openpnm.utils.NestedDict.unravel.rst", "modules/generated/openpnm.utils.NestedDict.update.rst", "modules/generated/openpnm.utils.NestedDict.values.rst", "modules/generated/openpnm.utils.PrintableDict.rst", "modules/generated/openpnm.utils.PrintableDict.clear.rst", "modules/generated/openpnm.utils.PrintableDict.copy.rst", "modules/generated/openpnm.utils.PrintableDict.fromkeys.rst", "modules/generated/openpnm.utils.PrintableDict.get.rst", "modules/generated/openpnm.utils.PrintableDict.items.rst", "modules/generated/openpnm.utils.PrintableDict.keys.rst", "modules/generated/openpnm.utils.PrintableDict.pop.rst", "modules/generated/openpnm.utils.PrintableDict.popitem.rst", "modules/generated/openpnm.utils.PrintableDict.setdefault.rst", "modules/generated/openpnm.utils.PrintableDict.update.rst", "modules/generated/openpnm.utils.PrintableDict.values.rst", "modules/generated/openpnm.utils.PrintableList.rst", "modules/generated/openpnm.utils.PrintableList.append.rst", "modules/generated/openpnm.utils.PrintableList.clear.rst", "modules/generated/openpnm.utils.PrintableList.copy.rst", "modules/generated/openpnm.utils.PrintableList.count.rst", "modules/generated/openpnm.utils.PrintableList.extend.rst", "modules/generated/openpnm.utils.PrintableList.index.rst", "modules/generated/openpnm.utils.PrintableList.insert.rst", "modules/generated/openpnm.utils.PrintableList.pop.rst", "modules/generated/openpnm.utils.PrintableList.remove.rst", "modules/generated/openpnm.utils.PrintableList.reverse.rst", "modules/generated/openpnm.utils.PrintableList.sort.rst", "modules/generated/openpnm.utils.Project.rst", "modules/generated/openpnm.utils.Project.append.rst", "modules/generated/openpnm.utils.Project.copy.rst", "modules/generated/openpnm.utils.SettingsAttr.rst", "modules/generated/openpnm.utils.SimpleList.rst", "modules/generated/openpnm.utils.SimpleList.append.rst", "modules/generated/openpnm.utils.TypedList.rst", "modules/generated/openpnm.utils.TypedList.append.rst", "modules/generated/openpnm.utils.TypedList.clear.rst", "modules/generated/openpnm.utils.TypedList.copy.rst", "modules/generated/openpnm.utils.TypedList.count.rst", "modules/generated/openpnm.utils.TypedList.extend.rst", "modules/generated/openpnm.utils.TypedList.index.rst", "modules/generated/openpnm.utils.TypedList.insert.rst", "modules/generated/openpnm.utils.TypedList.pop.rst", "modules/generated/openpnm.utils.TypedList.remove.rst", "modules/generated/openpnm.utils.TypedList.reverse.rst", "modules/generated/openpnm.utils.TypedList.sort.rst", "modules/generated/openpnm.utils.TypedMixin.rst", "modules/generated/openpnm.utils.TypedSet.rst", "modules/generated/openpnm.utils.TypedSet.add.rst", "modules/generated/openpnm.utils.TypedSet.clear.rst", "modules/generated/openpnm.utils.TypedSet.copy.rst", "modules/generated/openpnm.utils.TypedSet.difference.rst", "modules/generated/openpnm.utils.TypedSet.difference_update.rst", "modules/generated/openpnm.utils.TypedSet.discard.rst", "modules/generated/openpnm.utils.TypedSet.intersection.rst", "modules/generated/openpnm.utils.TypedSet.intersection_update.rst", "modules/generated/openpnm.utils.TypedSet.isdisjoint.rst", "modules/generated/openpnm.utils.TypedSet.issubset.rst", "modules/generated/openpnm.utils.TypedSet.issuperset.rst", "modules/generated/openpnm.utils.TypedSet.pop.rst", "modules/generated/openpnm.utils.TypedSet.remove.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update.rst", "modules/generated/openpnm.utils.TypedSet.union.rst", "modules/generated/openpnm.utils.TypedSet.update.rst", "modules/generated/openpnm.utils.Workspace.rst", "modules/generated/openpnm.utils.Workspace.clear.rst", "modules/generated/openpnm.utils.Workspace.close_project.rst", "modules/generated/openpnm.utils.Workspace.copy.rst", "modules/generated/openpnm.utils.Workspace.copy_project.rst", "modules/generated/openpnm.utils.Workspace.fromkeys.rst", "modules/generated/openpnm.utils.Workspace.get.rst", "modules/generated/openpnm.utils.Workspace.items.rst", "modules/generated/openpnm.utils.Workspace.keys.rst", "modules/generated/openpnm.utils.Workspace.load_project.rst", "modules/generated/openpnm.utils.Workspace.load_workspace.rst", "modules/generated/openpnm.utils.Workspace.new_project.rst", "modules/generated/openpnm.utils.Workspace.pop.rst", "modules/generated/openpnm.utils.Workspace.popitem.rst", "modules/generated/openpnm.utils.Workspace.save_project.rst", "modules/generated/openpnm.utils.Workspace.save_workspace.rst", "modules/generated/openpnm.utils.Workspace.setdefault.rst", "modules/generated/openpnm.utils.Workspace.update.rst", "modules/generated/openpnm.utils.Workspace.values.rst", "modules/generated/openpnm.utils.check_data_health.rst", "modules/generated/openpnm.utils.check_network_health.rst", "modules/generated/openpnm.utils.dict_to_struct.rst", "modules/generated/openpnm.utils.flat_list.rst", "modules/generated/openpnm.utils.get_mixture_model_args.rst", "modules/generated/openpnm.utils.get_printable_labels.rst", "modules/generated/openpnm.utils.get_printable_props.rst", "modules/generated/openpnm.utils.ignore_warnings.rst", "modules/generated/openpnm.utils.is_symmetric.rst", "modules/generated/openpnm.utils.is_transient.rst", "modules/generated/openpnm.utils.is_valid_propname.rst", "modules/generated/openpnm.utils.methods_to_table.rst", "modules/generated/openpnm.utils.models_to_table.rst", "modules/generated/openpnm.utils.sanitize_dict.rst", "modules/generated/openpnm.utils.struct_to_dict.rst", "modules/index.rst"], "titles": ["Applications", "Examples", "Reference", "10 Steps to Learn OpenPNM", "Basic Usage", "Predicting absolute permeability", "Adjusting Pore Size Distributions", "Predicting dispersion coefficient", "Finding Effective Diffusivity and Tortuosity of a Network", "Predicting Formation Factor", "Simulating Mercury Intrusion Porosimetry Curves", "Predicting Porosity", "Obtaining Relative Diffusivity Curves", "Predicting relative permeability", "Contibuted Examples", "Pore-Scale Models", "Settings Attribute Machinery", "The Workspace and Projects", "Managing Clustered Networks", "Available Matrix Solvers", "Steady State Transport", "Explanation of Units", "Reactive Transport", "Size Factors and Transport Conductance", "Transient Transport", "Numerical Python Primer", "Generating Networks and Quick Visualization", "Storage of Network Data and Topology", "Network Representation, Queries, and Manipulation", "Assigning Geometric Properties", "Using Labels and Defining Domains", "Creating Phases", "Simulating Single Phase Transport", "Simulating Invasion", "Visualization options", "Pore Network Modeling Framework in Python", "Installation", "algorithms", "AdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Algorithm", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "set_BC", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Drainage", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FourierConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "InvasionPercolation", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "OhmicConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "ReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StokesFlow", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientAdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientFickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Transport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "core", "Base2", "clear", "copy", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "pop", "popitem", "props", "setdefault", "to_indices", "to_mask", "update", "values", "Domain", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "LabelMixin", "filter_by_label", "labels", "num_pores", "num_throats", "pores", "set_label", "throats", "ModelWrapper", "__call__", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsDict", "clear", "copy", "dependency_graph", "dependency_list", "dependency_map", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsMixin2", "add_model", "add_model_collection", "regenerate_models", "run_model", "ParserMixin", "integrators", "Integrator", "ScipyRK45", "solve", "io", "network_from_csv", "network_from_jsongraph", "network_from_marock", "network_from_networkx", "network_from_pergeos", "network_from_porespy", "network_from_statoil", "network_to_comsol", "network_to_csv", "network_to_jsongraph", "network_to_networkx", "network_to_pandas", "network_to_pergeos", "network_to_salome", "network_to_stl", "print_hdf5", "project_to_csv", "project_to_dict", "project_to_hdf5", "project_to_pandas", "project_to_paraview", "project_to_vtk", "project_to_xdmf", "models", "collections", "geometry", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "network", "phase", "air", "gas", "liquid", "mercury", "water", "physics", "basic", "standard", "geometry", "conduit_lengths", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "diffusive_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "hydraulic_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "pore_cross_sectional_area", "circle", "cone", "cube", "sphere", "square", "pore_seed", "random", "spatially_correlated", "pore_size", "equivalent_diameter", "from_neighbor_throats", "generic_distribution", "largest_sphere", "normal", "random", "weibull", "pore_surface_area", "circle", "cube", "sphere", "square", "pore_volume", "circle", "cube", "effective", "sphere", "square", "throat_capillary_shape_factor", "jenkins_rao", "mason_morrow", "throat_centroid", "pore_coords", "throat_cross_sectional_area", "cuboid", "cylinder", "rectangle", "throat_endpoints", "spheres_and_cylinders", "throat_length", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "throat_perimeter", "cuboid", "cylinder", "rectangle", "throat_seed", "from_neighbor_pores", "random", "throat_size", "equivalent_diameter", "from_neighbor_pores", "generic_distribution", "normal", "random", "weibull", "throat_surface_area", "cuboid", "cylinder", "extrusion", "rectangle", "throat_vector", "pore_to_pore", "throat_volume", "cuboid", "cylinder", "extrusion", "lens", "pendular_ring", "rectangle", "misc", "blank", "clip", "constant", "difference", "fraction", "from_neighbor_pores", "from_neighbor_throats", "generic_distribution", "generic_function", "invert", "linear", "match_histogram", "normal", "normalize", "polynomial", "product", "random", "scaled", "summation", "weibull", "network", "bidirectional_throats", "cluster_number", "cluster_size", "coordination_number", "count_coincident_pores", "distance_to_furthest_neighbor", "distance_to_nearest_neighbor", "distance_to_nearest_pore", "duplicate_throats", "find_coincident_pores", "headless_throats", "isolated_pores", "looped_throats", "pore_to_pore_distance", "reversed_throats", "phase", "chemicals_wrapper", "critical_props", "density", "ideal_gas", "liquid_mixture_COSTALD", "liquid_pure_COSTALD", "mass_to_molar", "water_correlation", "diffusivity", "gas_mixture_ce", "gas_mixture_fesg", "liquid_mixture_tc", "heat_capacity", "gas_mixture_yweighted", "gas_pure_TRC", "liquid_mixture_xweighted", "liquid_pure_rp", "misc", "mix_and_match", "mole_to_mass_fraction", "mixtures", "from_component", "mixing_rule", "mole_summation", "mole_to_mass_fraction", "salinity", "partition_coefficient", "gaseous_species_in_water", "surface_tension", "liquid_mixture_wsd", "liquid_pure_bb", "water_correlation", "thermal_conductivity", "gas_mixture_whz", "gas_pure_gismr", "liquid_mixture_DIPPR9H", "liquid_pure_gismr", "liquid_pure_sr", "water_correlation", "vapor_pressure", "liquid_pure_antoine", "liquid_pure_lk", "water_correlation", "viscosity", "gas_mixture_hz", "gas_pure_gesmr", "gas_pure_st", "liquid_mixture_xweighted", "liquid_pure_ls", "water_correlation", "physics", "ad_dif_conductance", "ad_dif", "capillary_pressure", "purcell", "washburn", "diffusive_conductance", "generic_diffusive", "mixed_diffusion", "ordinary_diffusion", "taylor_aris_diffusion", "electrical_conductance", "generic_electrical", "series_resistors", "hydraulic_conductance", "generic_hydraulic", "hagen_poiseuille", "valvatne_blunt", "meniscus", "general_toroidal", "purcell", "sinusoidal", "multiphase", "conduit_conductance", "late_filling", "source_terms", "butler_volmer_conc", "butler_volmer_voltage", "exponential", "general_symbolic", "linear", "logarithm", "natural_exponential", "natural_logarithm", "power_law", "standard_kinetics", "thermal_conductance", "generic_thermal", "series_resistors", "network", "BodyCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Cubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "CubicTemplate", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Delaunay", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "DelaunayVoronoiDual", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "find_pore_hulls", "find_throat_facets", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Demo", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FaceCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Network", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Voronoi", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "phase", "Air", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "BinaryGas", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "GasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "LiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Mercury", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Mixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Phase", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Species", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGas", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "StandardLiquid", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardLiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Water", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "solvers", "BaseSolver", "solve", "DirectSolver", "solve", "IterativeSolver", "solve", "PETScLinearSolver", "solve", "PardisoSpsolve", "solve", "PyamgRugeStubenSolver", "solve", "ScipyCG", "solve", "ScipySpsolve", "solve", "topotools", "add_boundary_pores", "add_reservoir_pore", "bond_percolation", "clone_pores", "connect_pores", "conns_to_am", "dimensionality", "drop_sites", "extend", "filter_pores_by_z", "find_clusters", "find_connected_sites", "find_connecting_bonds", "find_interface_throats", "find_isolated_clusters", "find_neighbor_bonds", "find_neighbor_sites", "find_path", "find_surface_pores", "generate_base_points", "get_domain_area", "get_domain_length", "get_shape", "get_spacing", "hull_centroid", "is_fully_connected", "iscoplanar", "isoutside", "ispercolating", "issymmetric", "istriangular", "istril", "istriu", "label_faces", "merge_networks", "merge_pores", "reduce_coordination", "reflect_base_points", "rotate_coords", "shear_coords", "site_percolation", "stitch", "template_cylinder_annulus", "template_sphere_shell", "tri_to_am", "trim", "trim_disconnected_clusters", "vor_to_am", "utils", "Docorator", "__call__", "dedent", "dedents", "delete_kwargs", "delete_kwargs_s", "delete_params", "delete_params_s", "delete_types", "delete_types_s", "get_docstring", "get_extended_summary", "get_extended_summaryf", "get_full_description", "get_full_descriptionf", "get_sections", "get_sectionsf", "get_summary", "get_summaryf", "keep_params", "keep_params_s", "keep_types", "keep_types_s", "save_docstring", "with_indent", "with_indents", "HealthDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "NestedDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "to_dict", "unravel", "update", "values", "PrintableDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "PrintableList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "Project", "append", "copy", "SettingsAttr", "SimpleList", "append", "TypedList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "TypedMixin", "TypedSet", "add", "clear", "copy", "difference", "difference_update", "discard", "intersection", "intersection_update", "isdisjoint", "issubset", "issuperset", "pop", "remove", "symmetric_difference", "symmetric_difference_update", "union", "update", "Workspace", "clear", "close_project", "copy", "copy_project", "fromkeys", "get", "items", "keys", "load_project", "load_workspace", "new_project", "pop", "popitem", "save_project", "save_workspace", "setdefault", "update", "values", "check_data_health", "check_network_health", "dict_to_struct", "flat_list", "get_mixture_model_args", "get_printable_labels", "get_printable_props", "ignore_warnings", "is_symmetric", "is_transient", "is_valid_propname", "methods_to_table", "models_to_table", "sanitize_dict", "struct_to_dict", "Module Reference"], "terms": {"predict": [0, 1, 23, 31, 826], "absolut": [0, 1, 2, 13, 29, 554, 1786, 1791], "permeabl": [0, 1, 12, 31], "adjust": [0, 1, 28, 29, 34, 60, 90, 99, 120, 152, 185, 197, 218, 250, 283, 316, 349, 383, 416, 449, 828, 832, 1617, 1655], "pore": [0, 1, 2, 5, 8, 9, 10, 12, 13, 16, 18, 20, 21, 22, 25, 26, 31, 33, 34, 44, 48, 50, 51, 52, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 76, 80, 82, 83, 84, 89, 90, 91, 93, 94, 95, 99, 103, 107, 109, 110, 111, 117, 120, 121, 122, 123, 125, 126, 127, 130, 136, 140, 142, 143, 144, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 169, 173, 175, 176, 177, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 197, 201, 205, 207, 208, 209, 215, 218, 219, 220, 221, 223, 224, 225, 234, 238, 240, 241, 242, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 267, 271, 273, 274, 275, 280, 281, 283, 284, 285, 286, 287, 289, 290, 291, 300, 304, 306, 307, 308, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 333, 337, 339, 340, 341, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 367, 371, 373, 374, 375, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 400, 404, 406, 407, 408, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 433, 437, 439, 440, 441, 446, 447, 449, 450, 451, 452, 454, 455, 456, 459, 466, 468, 471, 473, 474, 478, 482, 486, 488, 489, 490, 495, 496, 497, 498, 500, 501, 502, 506, 507, 508, 511, 512, 541, 542, 544, 545, 554, 555, 559, 562, 565, 566, 568, 569, 571, 574, 578, 579, 580, 581, 582, 583, 584, 587, 590, 591, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 648, 650, 651, 652, 653, 654, 656, 658, 659, 660, 661, 663, 664, 665, 666, 667, 669, 671, 672, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 698, 699, 702, 703, 712, 713, 715, 716, 717, 718, 719, 720, 721, 727, 728, 729, 730, 733, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 782, 783, 784, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 822, 824, 825, 826, 828, 829, 830, 832, 833, 835, 836, 838, 846, 847, 849, 850, 851, 855, 856, 857, 858, 859, 860, 861, 862, 867, 868, 870, 871, 872, 873, 878, 879, 880, 881, 883, 884, 885, 888, 889, 890, 894, 895, 896, 897, 898, 899, 900, 901, 906, 907, 909, 910, 911, 912, 917, 918, 919, 920, 922, 923, 924, 927, 928, 932, 933, 934, 935, 936, 937, 938, 939, 944, 945, 947, 948, 949, 950, 955, 956, 957, 958, 960, 961, 962, 965, 966, 970, 971, 972, 973, 974, 975, 976, 977, 982, 983, 985, 986, 987, 988, 993, 994, 995, 996, 998, 999, 1000, 1003, 1004, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1022, 1023, 1025, 1026, 1027, 1028, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1061, 1062, 1064, 1065, 1066, 1067, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1082, 1083, 1084, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1100, 1101, 1103, 1104, 1105, 1106, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1138, 1139, 1141, 1142, 1143, 1144, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1159, 1160, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1176, 1177, 1179, 1180, 1181, 1182, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1199, 1203, 1207, 1209, 1210, 1211, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1227, 1228, 1230, 1233, 1236, 1238, 1239, 1241, 1242, 1243, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1259, 1261, 1262, 1264, 1267, 1270, 1272, 1273, 1275, 1276, 1277, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1293, 1295, 1296, 1298, 1301, 1304, 1306, 1307, 1309, 1310, 1311, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1327, 1328, 1329, 1333, 1337, 1339, 1340, 1341, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1357, 1358, 1360, 1363, 1366, 1368, 1369, 1371, 1372, 1373, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1389, 1390, 1394, 1398, 1400, 1401, 1402, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1418, 1422, 1426, 1428, 1429, 1430, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1446, 1450, 1454, 1456, 1457, 1458, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1474, 1475, 1477, 1480, 1483, 1485, 1486, 1488, 1489, 1490, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1506, 1508, 1512, 1516, 1518, 1519, 1520, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1536, 1537, 1539, 1542, 1545, 1547, 1548, 1550, 1551, 1552, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1568, 1570, 1574, 1578, 1580, 1581, 1582, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1615, 1616, 1618, 1619, 1621, 1623, 1624, 1625, 1629, 1633, 1635, 1636, 1640, 1641, 1648, 1650, 1651, 1654, 1656, 1660, 1796, 1797, 1800, 1801, 1802, 1803, 1806, 1811], "size": [0, 1, 2, 5, 9, 10, 11, 15, 18, 26, 30, 32, 33, 34, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 352, 354, 385, 387, 418, 420, 451, 452, 531, 566, 615, 618, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 647, 652, 655, 703, 705, 729, 733, 738, 745, 816, 817, 818, 819, 821, 822, 824, 825, 846, 847, 888, 965, 1003, 1159, 1634, 1642, 1652, 1798], "distribut": [0, 1, 7, 10, 15, 30, 34, 36, 647, 648, 652, 654, 655, 656, 703, 704, 705, 706, 729, 734, 738, 741, 888, 1634, 1651], "dispers": [0, 1], "coeffici": [0, 1, 2, 4, 8, 9, 22, 31, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 610, 611, 612, 613, 614, 616, 617, 619, 622, 624, 736, 768, 769, 770, 773, 799, 837, 839, 840, 841, 842, 843, 1226, 1605], "find": [0, 1, 5, 7, 9, 11, 12, 13, 15, 17, 18, 20, 22, 25, 29, 30, 31, 33, 34, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 478, 513, 542, 554, 649, 653, 654, 656, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 706, 734, 741, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 784, 828, 851, 855, 856, 858, 860, 861, 862, 872, 890, 894, 895, 897, 899, 900, 901, 911, 928, 932, 933, 935, 937, 938, 939, 949, 966, 970, 971, 973, 975, 976, 977, 987, 1004, 1008, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1027, 1045, 1049, 1050, 1052, 1054, 1055, 1056, 1066, 1084, 1088, 1089, 1091, 1093, 1094, 1095, 1105, 1122, 1126, 1127, 1129, 1131, 1132, 1133, 1143, 1160, 1164, 1165, 1167, 1169, 1170, 1171, 1181, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1417, 1418, 1446, 1475, 1508, 1537, 1570, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1648, 1650, 1651, 1797], "effect": [0, 1, 9, 13, 27, 28, 29, 30, 130, 228, 478, 542, 622, 637, 656, 669, 706, 741, 809, 813, 819, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1760], "diffus": [0, 1, 5, 10, 13, 20, 21, 22, 27, 34, 38, 130, 327, 361, 587, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 648, 768, 769, 770, 811, 813, 816, 817, 818, 819, 821, 822, 830, 846, 847, 1226], "tortuos": [0, 1, 130], "network": [0, 1, 2, 3, 4, 15, 16, 20, 21, 22, 25, 29, 30, 31, 32, 33, 34, 38, 72, 98, 123, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 459, 460, 477, 541, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 667, 669, 670, 672, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 720, 729, 730, 733, 734, 738, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 811, 813, 816, 817, 818, 819, 821, 822, 824, 825, 826, 829, 838, 846, 847, 849, 850, 855, 856, 858, 859, 860, 861, 862, 872, 888, 889, 894, 895, 897, 898, 899, 900, 901, 911, 927, 932, 933, 935, 936, 937, 938, 939, 949, 965, 970, 971, 973, 974, 975, 976, 977, 987, 1003, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1027, 1043, 1044, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1066, 1082, 1083, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1105, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1181, 1198, 1226, 1260, 1294, 1328, 1356, 1389, 1417, 1445, 1473, 1507, 1535, 1569, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1640, 1642, 1643, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1740, 1788, 1797, 1811], "format": [0, 1, 7, 8, 20, 26, 27, 30, 32, 34, 479, 531, 543, 551, 553, 554, 556, 558, 566, 569, 573, 607, 622, 637, 722, 849, 852, 855, 856, 865, 867, 888, 891, 894, 895, 904, 906, 927, 929, 932, 933, 942, 944, 965, 967, 970, 971, 980, 982, 1003, 1005, 1008, 1009, 1020, 1022, 1043, 1046, 1049, 1050, 1059, 1061, 1082, 1085, 1088, 1089, 1098, 1100, 1121, 1123, 1126, 1127, 1136, 1138, 1159, 1161, 1164, 1165, 1174, 1176, 1200, 1229, 1263, 1297, 1330, 1359, 1391, 1419, 1447, 1476, 1509, 1538, 1571, 1616, 1620, 1622, 1627, 1659, 1662, 1801, 1802], "factor": [0, 1, 2, 5, 8, 29, 32, 34, 578, 579, 580, 581, 582, 583, 584, 615, 618, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 670, 739, 764, 775, 793, 795, 800, 807, 811, 816, 817, 818, 819, 821, 822, 824, 825, 826, 828, 832, 835, 836, 846, 847, 1605, 1654], "simul": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 17, 18, 20, 22, 23, 26, 31, 34, 35, 38, 119, 130, 163, 228, 261, 294, 327, 361, 394, 665, 711, 763, 1417, 1740, 1811], "mercuri": [0, 1, 4, 31, 33, 669, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355], "intrus": [0, 1, 4, 33], "porosimetri": [0, 1, 4, 33, 669], "curv": [0, 1, 4, 6, 13, 33, 1634], "poros": [0, 1, 8, 26, 130], "obtain": [0, 1, 13, 20, 23, 26, 27, 33, 652, 703, 729, 861, 862, 865, 867, 900, 901, 904, 906, 938, 939, 942, 944, 976, 977, 980, 982, 1014, 1015, 1020, 1022, 1055, 1056, 1059, 1061, 1094, 1095, 1098, 1100, 1132, 1133, 1136, 1138, 1170, 1171, 1174, 1176, 1238, 1272, 1306, 1368, 1485, 1547, 1630, 1631, 1651, 1777], "rel": [0, 1, 4, 554, 1635, 1636, 1656, 1786, 1791, 1804], "The": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 29, 32, 33, 34, 38, 40, 44, 47, 48, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 74, 76, 79, 80, 83, 84, 85, 88, 89, 90, 91, 93, 95, 101, 103, 106, 107, 110, 111, 112, 116, 117, 119, 120, 122, 123, 125, 127, 130, 132, 136, 139, 140, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 163, 165, 169, 172, 173, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 196, 199, 201, 204, 205, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 225, 228, 230, 234, 237, 238, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 261, 263, 267, 270, 271, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 294, 296, 300, 303, 304, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 327, 329, 333, 336, 337, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 361, 363, 367, 370, 371, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 394, 396, 400, 403, 404, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 427, 429, 433, 436, 437, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 465, 466, 471, 474, 477, 478, 479, 482, 485, 486, 489, 490, 491, 494, 495, 497, 498, 500, 502, 506, 507, 508, 509, 510, 511, 512, 526, 542, 543, 545, 547, 553, 554, 555, 557, 558, 559, 562, 565, 566, 567, 568, 569, 570, 572, 573, 574, 607, 622, 637, 647, 648, 650, 651, 652, 653, 654, 655, 656, 665, 669, 678, 699, 701, 702, 703, 704, 705, 706, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 747, 752, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 828, 829, 830, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 850, 851, 852, 855, 856, 857, 859, 860, 861, 862, 865, 866, 867, 868, 871, 872, 873, 874, 877, 878, 880, 881, 883, 885, 888, 889, 890, 891, 894, 895, 896, 898, 899, 900, 901, 904, 905, 906, 907, 910, 911, 912, 913, 916, 917, 919, 920, 922, 924, 927, 928, 929, 932, 933, 934, 936, 937, 938, 939, 942, 943, 944, 945, 948, 949, 950, 951, 954, 955, 957, 958, 960, 962, 965, 966, 967, 970, 971, 972, 974, 975, 976, 977, 980, 981, 982, 983, 986, 987, 988, 989, 992, 993, 995, 996, 998, 1000, 1003, 1004, 1005, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1029, 1032, 1033, 1035, 1036, 1038, 1040, 1044, 1045, 1046, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1065, 1066, 1067, 1068, 1071, 1072, 1074, 1075, 1077, 1079, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1098, 1099, 1100, 1101, 1104, 1105, 1106, 1107, 1110, 1111, 1113, 1114, 1116, 1118, 1121, 1122, 1123, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1136, 1137, 1138, 1139, 1142, 1143, 1144, 1145, 1148, 1149, 1151, 1152, 1154, 1156, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1180, 1181, 1182, 1183, 1186, 1187, 1189, 1190, 1192, 1194, 1199, 1200, 1203, 1206, 1207, 1210, 1211, 1212, 1215, 1216, 1218, 1219, 1221, 1223, 1226, 1227, 1228, 1229, 1233, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1247, 1248, 1250, 1251, 1252, 1254, 1256, 1259, 1261, 1262, 1263, 1267, 1270, 1271, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1284, 1285, 1286, 1288, 1290, 1293, 1295, 1296, 1297, 1301, 1304, 1305, 1306, 1307, 1310, 1311, 1312, 1315, 1316, 1318, 1319, 1320, 1322, 1324, 1327, 1329, 1330, 1333, 1336, 1337, 1340, 1341, 1342, 1345, 1346, 1348, 1349, 1351, 1353, 1357, 1358, 1359, 1363, 1366, 1367, 1368, 1369, 1372, 1373, 1374, 1377, 1378, 1380, 1381, 1382, 1384, 1386, 1390, 1391, 1394, 1397, 1398, 1401, 1402, 1403, 1406, 1407, 1409, 1410, 1412, 1414, 1417, 1418, 1419, 1422, 1425, 1426, 1429, 1430, 1431, 1434, 1435, 1437, 1438, 1440, 1442, 1446, 1447, 1450, 1453, 1454, 1457, 1458, 1459, 1462, 1463, 1465, 1466, 1468, 1470, 1473, 1474, 1475, 1476, 1480, 1483, 1484, 1485, 1486, 1489, 1490, 1491, 1494, 1495, 1497, 1498, 1499, 1501, 1503, 1506, 1508, 1509, 1512, 1515, 1516, 1519, 1520, 1521, 1524, 1525, 1527, 1528, 1530, 1532, 1535, 1536, 1537, 1538, 1542, 1545, 1546, 1547, 1548, 1551, 1552, 1553, 1556, 1557, 1559, 1560, 1561, 1563, 1565, 1568, 1570, 1571, 1574, 1577, 1578, 1581, 1582, 1583, 1586, 1587, 1589, 1590, 1592, 1594, 1597, 1605, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1642, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1666, 1668, 1670, 1672, 1675, 1677, 1681, 1683, 1685, 1688, 1739, 1740, 1742, 1743, 1746, 1757, 1777, 1779, 1781, 1786, 1787, 1788, 1791, 1792, 1797, 1798, 1801, 1802, 1810], "best": [1, 25, 26, 27, 29, 33, 36], "wai": [1, 7, 12, 13, 18, 25, 26, 28, 29, 30, 31, 32, 33, 653, 660, 670, 759], "learn": [1, 23, 25, 29], "openpnm": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 72, 130, 261, 348, 382, 415, 427, 460, 479, 543, 551, 553, 554, 555, 557, 558, 562, 565, 568, 569, 571, 572, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 650, 652, 653, 654, 655, 656, 658, 660, 663, 664, 665, 666, 667, 670, 672, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 720, 725, 729, 730, 733, 734, 738, 741, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 852, 855, 856, 858, 859, 860, 861, 862, 865, 867, 872, 888, 891, 894, 895, 897, 898, 899, 900, 901, 904, 906, 911, 929, 932, 933, 935, 936, 937, 938, 939, 942, 944, 949, 967, 970, 971, 973, 974, 975, 976, 977, 980, 982, 987, 1005, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1020, 1022, 1027, 1046, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1059, 1061, 1066, 1085, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1098, 1100, 1105, 1121, 1123, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1136, 1138, 1143, 1161, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1174, 1176, 1181, 1198, 1200, 1229, 1263, 1297, 1330, 1356, 1359, 1389, 1391, 1419, 1447, 1476, 1509, 1538, 1569, 1571, 1616, 1621, 1629, 1716, 1728, 1740, 1777, 1792, 1801, 1802, 1803, 1806, 1811], "like": [1, 4, 6, 15, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 49, 60, 81, 90, 108, 120, 141, 152, 174, 185, 206, 218, 239, 250, 272, 283, 305, 316, 338, 349, 372, 383, 405, 416, 438, 449, 467, 487, 519, 520, 534, 535, 555, 759, 811, 849, 869, 888, 908, 946, 965, 984, 1024, 1043, 1063, 1082, 1102, 1121, 1140, 1159, 1178, 1208, 1240, 1274, 1308, 1338, 1370, 1399, 1417, 1427, 1455, 1487, 1517, 1549, 1579, 1668, 1672, 1674, 1683, 1685, 1695, 1696, 1707, 1708, 1721, 1722, 1784, 1785], "anyth": [1, 25, 29, 31, 33, 60, 90, 120, 152, 185, 197, 218, 250, 283, 316, 349, 383, 416, 449], "i": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 44, 46, 48, 51, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 72, 76, 78, 80, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 99, 103, 105, 107, 110, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 130, 136, 138, 140, 143, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 169, 171, 173, 176, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 196, 197, 201, 203, 205, 208, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 234, 236, 238, 241, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 261, 267, 269, 271, 274, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 300, 302, 304, 307, 310, 311, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 333, 335, 337, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 367, 369, 371, 374, 377, 378, 379, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 394, 400, 402, 404, 407, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 427, 433, 435, 437, 440, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 464, 466, 469, 470, 471, 472, 473, 474, 475, 478, 482, 484, 486, 489, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 506, 507, 510, 512, 513, 518, 521, 522, 523, 524, 526, 529, 530, 531, 533, 536, 537, 538, 539, 541, 542, 544, 545, 547, 550, 551, 553, 554, 555, 556, 558, 566, 567, 569, 570, 573, 574, 575, 576, 577, 585, 586, 588, 589, 592, 595, 596, 597, 598, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 631, 634, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 662, 665, 668, 671, 673, 677, 679, 693, 697, 699, 700, 702, 703, 704, 705, 706, 707, 712, 713, 714, 717, 718, 719, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 855, 856, 857, 858, 860, 861, 862, 864, 865, 867, 868, 871, 872, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 888, 890, 894, 895, 896, 897, 899, 900, 901, 903, 904, 906, 907, 910, 911, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 925, 927, 928, 932, 933, 934, 935, 937, 938, 939, 941, 942, 944, 945, 948, 949, 952, 953, 954, 955, 956, 957, 959, 960, 961, 962, 963, 966, 970, 971, 972, 973, 975, 976, 977, 979, 980, 982, 983, 986, 987, 990, 991, 992, 993, 994, 995, 997, 998, 999, 1000, 1001, 1003, 1004, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1022, 1023, 1026, 1027, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1045, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1058, 1059, 1061, 1062, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1082, 1084, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1122, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1138, 1139, 1142, 1143, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1157, 1160, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1173, 1174, 1176, 1177, 1180, 1181, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1203, 1205, 1207, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1233, 1235, 1238, 1239, 1242, 1245, 1246, 1247, 1248, 1249, 1251, 1253, 1254, 1255, 1256, 1257, 1259, 1261, 1262, 1267, 1269, 1272, 1273, 1276, 1279, 1280, 1281, 1282, 1283, 1285, 1287, 1288, 1289, 1290, 1291, 1293, 1295, 1296, 1301, 1303, 1306, 1307, 1310, 1313, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1327, 1329, 1333, 1335, 1337, 1340, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1363, 1365, 1368, 1369, 1372, 1375, 1376, 1377, 1378, 1379, 1381, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1394, 1396, 1398, 1401, 1404, 1405, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1422, 1424, 1426, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1446, 1450, 1452, 1454, 1457, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1480, 1482, 1485, 1486, 1489, 1492, 1493, 1494, 1495, 1496, 1498, 1500, 1501, 1502, 1503, 1504, 1506, 1508, 1512, 1514, 1516, 1519, 1522, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1542, 1544, 1547, 1548, 1551, 1554, 1555, 1556, 1557, 1558, 1560, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1574, 1576, 1578, 1581, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1595, 1597, 1604, 1605, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1662, 1663, 1668, 1675, 1677, 1681, 1690, 1694, 1697, 1698, 1699, 1700, 1706, 1709, 1710, 1711, 1714, 1716, 1720, 1723, 1724, 1725, 1726, 1734, 1736, 1737, 1739, 1740, 1742, 1743, 1752, 1754, 1755, 1757, 1760, 1763, 1765, 1766, 1771, 1772, 1773, 1775, 1777, 1783, 1786, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1800, 1801, 1802, 1804, 1806, 1809, 1811], "experi": [1, 10, 33], "In": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 70, 96, 128, 161, 194, 196, 226, 259, 292, 325, 359, 392, 425, 457, 459, 475, 503, 524, 530, 539, 886, 925, 963, 1001, 1041, 1080, 1119, 1157, 1195, 1224, 1257, 1291, 1325, 1354, 1387, 1415, 1443, 1471, 1504, 1533, 1566, 1595, 1626, 1700, 1714, 1726, 1740, 1794], "thi": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 51, 56, 59, 60, 61, 67, 68, 70, 83, 88, 90, 91, 93, 94, 96, 99, 110, 116, 120, 122, 123, 125, 126, 128, 130, 143, 148, 151, 152, 153, 158, 159, 161, 176, 181, 184, 185, 186, 191, 192, 194, 196, 197, 208, 214, 218, 220, 221, 223, 224, 226, 228, 241, 246, 249, 250, 251, 256, 257, 259, 261, 274, 279, 282, 283, 284, 289, 290, 292, 307, 312, 315, 316, 317, 322, 323, 325, 340, 345, 349, 350, 356, 357, 359, 374, 379, 383, 384, 389, 390, 392, 394, 407, 412, 416, 417, 422, 423, 425, 427, 440, 445, 448, 449, 450, 454, 455, 457, 459, 473, 475, 477, 478, 489, 494, 496, 498, 500, 501, 503, 505, 507, 510, 511, 512, 513, 524, 526, 530, 539, 541, 542, 544, 547, 551, 553, 554, 555, 558, 559, 565, 566, 569, 570, 571, 574, 575, 576, 577, 585, 586, 588, 589, 592, 595, 596, 597, 602, 605, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 625, 631, 634, 638, 639, 640, 641, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 668, 671, 673, 677, 679, 693, 697, 699, 700, 702, 703, 704, 705, 706, 707, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 825, 826, 827, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 850, 851, 855, 856, 858, 860, 861, 862, 865, 867, 871, 872, 877, 879, 881, 883, 884, 886, 889, 890, 894, 895, 897, 899, 900, 901, 904, 906, 910, 911, 916, 918, 920, 922, 923, 925, 928, 932, 933, 935, 937, 938, 939, 942, 944, 948, 949, 954, 956, 958, 960, 961, 963, 965, 966, 970, 971, 973, 975, 976, 977, 980, 982, 986, 987, 992, 994, 996, 998, 999, 1001, 1003, 1004, 1008, 1009, 1011, 1013, 1014, 1015, 1016, 1020, 1022, 1026, 1027, 1032, 1034, 1036, 1038, 1039, 1041, 1044, 1045, 1049, 1050, 1052, 1054, 1055, 1056, 1059, 1061, 1065, 1066, 1071, 1073, 1075, 1077, 1078, 1080, 1083, 1084, 1088, 1089, 1091, 1093, 1094, 1095, 1098, 1100, 1104, 1105, 1110, 1112, 1114, 1116, 1117, 1119, 1121, 1122, 1126, 1127, 1129, 1131, 1132, 1133, 1136, 1138, 1142, 1143, 1148, 1150, 1152, 1154, 1155, 1157, 1160, 1164, 1165, 1167, 1169, 1170, 1171, 1174, 1176, 1180, 1181, 1186, 1188, 1190, 1192, 1193, 1195, 1197, 1199, 1210, 1215, 1217, 1219, 1221, 1222, 1224, 1227, 1228, 1230, 1238, 1242, 1247, 1249, 1250, 1252, 1254, 1255, 1257, 1259, 1260, 1261, 1262, 1264, 1272, 1276, 1281, 1283, 1284, 1286, 1288, 1289, 1291, 1293, 1294, 1295, 1296, 1298, 1306, 1310, 1315, 1317, 1318, 1320, 1322, 1323, 1325, 1327, 1329, 1340, 1345, 1347, 1349, 1351, 1352, 1354, 1357, 1358, 1360, 1368, 1372, 1377, 1379, 1380, 1382, 1384, 1385, 1387, 1389, 1390, 1401, 1406, 1408, 1410, 1412, 1413, 1415, 1417, 1418, 1429, 1434, 1436, 1438, 1440, 1441, 1443, 1446, 1457, 1462, 1464, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1477, 1485, 1489, 1494, 1496, 1497, 1499, 1501, 1502, 1504, 1506, 1508, 1519, 1524, 1526, 1528, 1530, 1531, 1533, 1535, 1536, 1537, 1539, 1547, 1551, 1556, 1558, 1559, 1561, 1563, 1564, 1566, 1568, 1570, 1581, 1586, 1588, 1590, 1592, 1593, 1595, 1597, 1605, 1614, 1615, 1616, 1617, 1621, 1622, 1626, 1627, 1629, 1630, 1631, 1633, 1634, 1643, 1648, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1662, 1663, 1670, 1672, 1674, 1675, 1677, 1679, 1681, 1683, 1685, 1690, 1700, 1714, 1726, 1740, 1743, 1760, 1761, 1763, 1764, 1769, 1770, 1777, 1779, 1786, 1791, 1792, 1794, 1797, 1800, 1801, 1802, 1809], "page": [1, 4, 36], "you": [1, 4, 6, 8, 15, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 494, 510, 550, 877, 888, 916, 954, 992, 1032, 1071, 1110, 1148, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586, 1619, 1683, 1685, 1803], "can": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 51, 56, 60, 83, 88, 90, 110, 116, 118, 120, 130, 143, 148, 152, 176, 181, 185, 208, 214, 218, 241, 246, 250, 274, 279, 283, 307, 312, 316, 340, 345, 348, 349, 374, 379, 382, 383, 407, 412, 415, 416, 440, 445, 449, 489, 494, 507, 510, 530, 550, 554, 555, 557, 558, 569, 571, 572, 653, 654, 656, 704, 706, 730, 733, 734, 736, 741, 759, 770, 784, 811, 828, 835, 836, 849, 850, 859, 871, 877, 888, 889, 898, 910, 916, 936, 948, 954, 965, 974, 986, 992, 1003, 1012, 1026, 1032, 1043, 1044, 1053, 1065, 1071, 1082, 1083, 1092, 1104, 1110, 1121, 1130, 1142, 1148, 1159, 1168, 1180, 1186, 1210, 1215, 1227, 1242, 1247, 1250, 1261, 1276, 1281, 1284, 1295, 1310, 1315, 1318, 1340, 1345, 1357, 1372, 1377, 1380, 1401, 1406, 1417, 1429, 1434, 1457, 1462, 1473, 1474, 1489, 1494, 1497, 1519, 1524, 1535, 1536, 1551, 1556, 1559, 1581, 1586, 1605, 1622, 1625, 1634, 1642, 1648, 1650, 1653, 1654, 1683, 1685, 1739, 1740, 1757, 1786, 1791, 1792], "lot": [1, 23, 29, 30, 33, 1803], "help": [1, 17, 25, 26, 28, 29, 30, 526, 927, 1656], "get": [1, 4, 6, 14, 15, 17, 18, 22, 23, 25, 27, 28, 29, 30, 32, 36, 211, 550, 653, 762, 763, 764, 765, 766, 768, 769, 770, 773, 775, 784, 786, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 804, 805, 807, 808, 1003, 1236, 1238, 1259, 1260, 1270, 1272, 1293, 1294, 1304, 1306, 1327, 1366, 1368, 1483, 1485, 1506, 1545, 1547, 1568, 1674, 1675, 1677, 1681, 1801, 1802, 1803], "start": [1, 6, 13, 15, 16, 22, 23, 25, 26, 28, 29, 31, 32, 33, 36, 219, 497, 545, 647, 653, 655, 705, 738, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589, 1642, 1734, 1752, 1806], "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 44, 48, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 76, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 99, 103, 107, 109, 110, 111, 112, 115, 116, 117, 120, 121, 122, 123, 125, 136, 140, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 169, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 197, 201, 205, 207, 208, 209, 210, 213, 214, 215, 218, 219, 220, 221, 223, 228, 234, 238, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254, 256, 261, 267, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 300, 304, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 333, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 367, 371, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 400, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 433, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 459, 466, 468, 470, 471, 478, 479, 482, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 500, 505, 506, 507, 508, 509, 510, 511, 512, 522, 526, 530, 537, 542, 543, 544, 554, 555, 558, 566, 569, 570, 571, 573, 574, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 622, 623, 624, 626, 627, 628, 629, 630, 631, 636, 637, 638, 639, 646, 647, 648, 650, 651, 653, 655, 658, 659, 660, 661, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 699, 701, 702, 705, 718, 719, 721, 725, 727, 728, 732, 736, 738, 747, 752, 754, 755, 757, 759, 766, 770, 781, 784, 786, 790, 797, 799, 806, 808, 813, 828, 829, 832, 838, 849, 850, 851, 852, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 868, 870, 871, 872, 873, 874, 876, 877, 878, 879, 881, 883, 888, 889, 890, 891, 894, 895, 896, 897, 898, 899, 900, 901, 904, 906, 907, 909, 910, 911, 912, 913, 915, 916, 917, 918, 920, 922, 927, 928, 929, 932, 933, 934, 935, 936, 937, 938, 939, 942, 944, 945, 947, 948, 949, 950, 951, 953, 954, 955, 956, 958, 960, 965, 966, 967, 970, 971, 972, 973, 974, 975, 976, 977, 980, 982, 983, 985, 986, 987, 988, 989, 991, 992, 993, 994, 996, 998, 1003, 1004, 1005, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1038, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1077, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1098, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1114, 1116, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1138, 1139, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1152, 1154, 1159, 1160, 1161, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1176, 1177, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1190, 1192, 1199, 1200, 1203, 1207, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1219, 1221, 1228, 1229, 1230, 1233, 1238, 1239, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1252, 1254, 1262, 1263, 1264, 1267, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1286, 1288, 1296, 1297, 1298, 1301, 1306, 1307, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1320, 1322, 1329, 1330, 1333, 1337, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1349, 1351, 1358, 1359, 1360, 1363, 1368, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1382, 1384, 1390, 1391, 1394, 1398, 1400, 1401, 1402, 1403, 1405, 1406, 1407, 1408, 1410, 1412, 1417, 1418, 1419, 1422, 1426, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1438, 1440, 1446, 1447, 1450, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1466, 1468, 1473, 1475, 1476, 1477, 1480, 1485, 1486, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1499, 1501, 1508, 1509, 1512, 1516, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1528, 1530, 1535, 1537, 1538, 1539, 1542, 1547, 1548, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1561, 1563, 1570, 1571, 1574, 1578, 1580, 1581, 1582, 1583, 1585, 1586, 1587, 1588, 1590, 1592, 1605, 1615, 1617, 1618, 1619, 1620, 1625, 1626, 1627, 1629, 1630, 1631, 1633, 1634, 1640, 1641, 1642, 1643, 1648, 1650, 1651, 1653, 1654, 1655, 1656, 1659, 1661, 1662, 1698, 1710, 1724, 1740, 1742, 1743, 1746, 1763, 1766, 1773, 1775, 1790, 1792, 1796, 1797, 1801, 1802, 1803, 1809], "categor": [1, 569], "follow": [1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 70, 96, 99, 128, 130, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 475, 478, 503, 524, 539, 542, 569, 648, 652, 654, 656, 703, 704, 706, 729, 730, 734, 741, 826, 828, 835, 836, 837, 839, 840, 841, 842, 843, 844, 851, 886, 890, 925, 928, 963, 965, 966, 1001, 1004, 1041, 1045, 1080, 1084, 1119, 1122, 1157, 1159, 1160, 1195, 1199, 1224, 1228, 1257, 1262, 1291, 1296, 1325, 1329, 1354, 1358, 1387, 1390, 1415, 1418, 1443, 1446, 1471, 1475, 1504, 1508, 1533, 1537, 1566, 1570, 1595, 1619, 1634, 1642, 1652, 1679, 1700, 1714, 1726, 1794, 1797], "categori": 1, "10": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 197, 578, 579, 580, 581, 582, 583, 584, 653, 793, 795, 835, 836, 840, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1804], "step": [1, 5, 7, 9, 12, 13, 16, 20, 27, 28, 29, 31, 33, 36, 99, 119, 217, 348, 382, 415, 478, 542, 557, 653, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1633, 1656], "numer": [1, 3, 18, 20, 22, 28, 29, 30, 31, 50, 57, 68, 82, 89, 94, 109, 117, 126, 142, 149, 159, 175, 182, 192, 207, 215, 224, 240, 247, 257, 273, 280, 290, 306, 313, 323, 339, 346, 357, 373, 380, 390, 406, 413, 423, 439, 446, 455, 468, 471, 473, 488, 495, 501, 555, 558, 569, 724, 726, 762, 763, 764, 765, 766, 768, 769, 770, 773, 775, 778, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 807, 808, 838, 870, 878, 884, 909, 917, 923, 947, 955, 961, 985, 993, 999, 1025, 1033, 1039, 1064, 1072, 1078, 1103, 1111, 1117, 1141, 1149, 1155, 1179, 1187, 1193, 1209, 1216, 1222, 1241, 1248, 1255, 1275, 1282, 1289, 1309, 1316, 1323, 1339, 1346, 1352, 1371, 1378, 1385, 1400, 1407, 1413, 1428, 1435, 1441, 1456, 1463, 1469, 1488, 1495, 1502, 1518, 1525, 1531, 1550, 1557, 1564, 1580, 1587, 1593, 1801, 1802], "python": [1, 3, 6, 16, 17, 27, 28, 29, 31, 33, 34, 36, 459, 759, 849, 861, 888, 900, 938, 965, 976, 1014, 1043, 1055, 1082, 1094, 1121, 1132, 1159, 1170, 1417, 1604, 1626, 1630, 1631, 1786, 1791, 1803, 1809], "primer": [1, 3, 26], "gener": [1, 3, 4, 5, 6, 8, 11, 14, 15, 16, 21, 22, 27, 28, 29, 30, 31, 34, 48, 50, 69, 72, 80, 82, 95, 107, 109, 127, 140, 142, 160, 173, 175, 193, 205, 207, 225, 238, 240, 258, 271, 273, 291, 304, 306, 324, 337, 339, 358, 371, 373, 391, 404, 406, 424, 437, 439, 456, 466, 468, 474, 478, 486, 488, 502, 526, 542, 569, 646, 647, 648, 655, 705, 721, 733, 738, 828, 829, 835, 836, 838, 849, 851, 855, 861, 868, 870, 885, 888, 890, 894, 900, 907, 909, 924, 927, 928, 932, 938, 945, 947, 962, 965, 966, 970, 976, 983, 985, 1000, 1003, 1004, 1008, 1014, 1023, 1025, 1040, 1043, 1045, 1049, 1055, 1062, 1064, 1079, 1082, 1084, 1088, 1094, 1101, 1103, 1118, 1121, 1122, 1126, 1132, 1139, 1141, 1156, 1159, 1160, 1164, 1170, 1177, 1179, 1194, 1199, 1207, 1209, 1223, 1228, 1239, 1241, 1256, 1262, 1273, 1275, 1290, 1296, 1307, 1309, 1324, 1329, 1337, 1339, 1353, 1358, 1369, 1371, 1386, 1390, 1398, 1400, 1414, 1417, 1418, 1426, 1428, 1442, 1446, 1454, 1456, 1470, 1475, 1486, 1488, 1503, 1508, 1516, 1518, 1532, 1537, 1548, 1550, 1565, 1570, 1578, 1580, 1594, 1626, 1630, 1631, 1633, 1634, 1651, 1657, 1658, 1742, 1781, 1788, 1800], "quick": [1, 3, 4, 6, 10, 25], "visual": [1, 3, 5, 6, 7, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 530, 573, 888], "storag": [1, 3, 28, 30, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "data": [1, 3, 7, 8, 15, 16, 20, 25, 28, 31, 32, 33, 34, 47, 48, 57, 79, 80, 89, 99, 106, 107, 117, 139, 140, 149, 172, 173, 182, 196, 204, 205, 211, 215, 237, 238, 247, 270, 271, 280, 303, 304, 313, 336, 337, 346, 370, 371, 380, 403, 404, 413, 436, 437, 446, 459, 460, 465, 466, 471, 478, 485, 486, 495, 530, 542, 553, 554, 555, 558, 559, 565, 566, 568, 569, 570, 571, 572, 573, 574, 730, 735, 780, 786, 828, 835, 836, 851, 855, 856, 865, 866, 867, 868, 878, 890, 894, 895, 904, 905, 906, 907, 917, 928, 932, 933, 942, 943, 944, 945, 955, 966, 970, 971, 980, 981, 982, 983, 993, 1004, 1008, 1009, 1020, 1021, 1022, 1023, 1033, 1045, 1049, 1050, 1059, 1060, 1061, 1062, 1072, 1084, 1088, 1089, 1098, 1099, 1100, 1101, 1111, 1122, 1126, 1127, 1136, 1137, 1138, 1139, 1149, 1160, 1164, 1165, 1174, 1175, 1176, 1177, 1187, 1199, 1206, 1207, 1216, 1228, 1237, 1239, 1248, 1262, 1271, 1273, 1282, 1296, 1305, 1307, 1316, 1329, 1336, 1337, 1346, 1358, 1367, 1369, 1378, 1390, 1397, 1398, 1407, 1418, 1425, 1426, 1435, 1446, 1453, 1454, 1463, 1475, 1484, 1486, 1495, 1508, 1515, 1516, 1525, 1537, 1546, 1548, 1557, 1570, 1577, 1578, 1587, 1742, 1743, 1744, 1796], "topologi": [1, 3, 6, 26, 28, 888, 1121], "represent": [1, 3, 20, 555, 838, 1659, 1662], "queri": [1, 3, 30, 31, 33, 51, 56, 67, 83, 88, 93, 110, 116, 125, 143, 148, 158, 176, 181, 191, 208, 214, 223, 241, 246, 256, 274, 279, 289, 307, 312, 322, 340, 345, 356, 374, 379, 389, 407, 412, 422, 440, 445, 454, 489, 494, 500, 507, 510, 512, 871, 877, 883, 910, 916, 922, 948, 954, 960, 986, 992, 998, 1026, 1032, 1038, 1065, 1071, 1077, 1104, 1110, 1116, 1121, 1142, 1148, 1154, 1180, 1186, 1192, 1210, 1215, 1221, 1242, 1247, 1254, 1276, 1281, 1288, 1310, 1315, 1322, 1340, 1345, 1351, 1372, 1377, 1384, 1401, 1406, 1412, 1429, 1434, 1440, 1457, 1462, 1468, 1489, 1494, 1501, 1519, 1524, 1530, 1551, 1556, 1563, 1581, 1586, 1592], "manipul": [1, 3, 26, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 494, 510, 877, 916, 954, 992, 1032, 1071, 1110, 1148, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586], "assign": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 21, 22, 26, 27, 28, 30, 33, 34, 44, 51, 52, 53, 56, 63, 65, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 154, 156, 158, 169, 176, 177, 178, 181, 187, 189, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 252, 254, 256, 267, 274, 275, 276, 279, 285, 287, 289, 300, 307, 308, 309, 312, 318, 320, 322, 333, 340, 341, 342, 345, 352, 354, 356, 367, 374, 375, 376, 379, 385, 387, 389, 400, 407, 408, 409, 412, 418, 420, 422, 433, 440, 441, 442, 445, 451, 452, 454, 459, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 513, 526, 555, 653, 744, 835, 836, 849, 857, 871, 873, 874, 877, 883, 888, 896, 910, 912, 913, 916, 922, 934, 948, 950, 951, 954, 960, 965, 972, 986, 988, 989, 992, 998, 1003, 1010, 1026, 1028, 1029, 1032, 1038, 1043, 1051, 1065, 1067, 1068, 1071, 1077, 1082, 1090, 1104, 1106, 1107, 1110, 1116, 1121, 1128, 1142, 1144, 1145, 1148, 1154, 1159, 1166, 1180, 1182, 1183, 1186, 1192, 1203, 1210, 1211, 1212, 1215, 1221, 1227, 1233, 1242, 1243, 1244, 1247, 1254, 1261, 1267, 1276, 1277, 1278, 1281, 1288, 1295, 1301, 1310, 1311, 1312, 1315, 1322, 1333, 1340, 1341, 1342, 1345, 1351, 1357, 1363, 1372, 1373, 1374, 1377, 1384, 1394, 1401, 1402, 1403, 1406, 1412, 1422, 1429, 1430, 1431, 1434, 1440, 1450, 1457, 1458, 1459, 1462, 1468, 1474, 1480, 1489, 1490, 1491, 1494, 1501, 1512, 1519, 1520, 1521, 1524, 1530, 1536, 1542, 1551, 1552, 1553, 1556, 1563, 1574, 1581, 1582, 1583, 1586, 1592, 1617, 1655, 1661, 1743], "geometr": [1, 3, 4, 5, 6, 10, 11, 12, 13, 15, 23, 27, 31, 32, 33, 554, 595, 622, 637, 826, 1043], "properti": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 18, 20, 21, 22, 23, 25, 26, 28, 30, 32, 33, 34, 38, 47, 57, 64, 72, 79, 89, 98, 106, 117, 130, 139, 149, 155, 163, 172, 182, 188, 196, 204, 215, 228, 237, 247, 253, 261, 270, 280, 286, 294, 303, 313, 319, 327, 336, 346, 353, 361, 370, 380, 386, 394, 403, 413, 419, 427, 436, 446, 465, 471, 478, 485, 495, 542, 555, 558, 562, 569, 571, 573, 595, 647, 651, 652, 654, 655, 656, 699, 702, 703, 704, 705, 706, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 758, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 828, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 851, 866, 878, 890, 905, 917, 928, 943, 955, 966, 981, 993, 1004, 1021, 1033, 1043, 1045, 1060, 1072, 1084, 1099, 1111, 1121, 1122, 1137, 1149, 1160, 1175, 1187, 1199, 1206, 1216, 1226, 1228, 1236, 1237, 1238, 1248, 1262, 1270, 1271, 1272, 1282, 1296, 1304, 1305, 1306, 1316, 1329, 1336, 1346, 1358, 1366, 1367, 1368, 1378, 1389, 1390, 1397, 1407, 1418, 1425, 1435, 1446, 1453, 1463, 1473, 1475, 1483, 1484, 1485, 1495, 1508, 1515, 1525, 1535, 1537, 1545, 1546, 1547, 1557, 1570, 1577, 1587, 1742, 1802, 1806], "us": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 23, 25, 26, 27, 32, 34, 35, 36, 51, 52, 53, 56, 60, 83, 84, 85, 88, 90, 110, 111, 112, 116, 120, 130, 143, 144, 145, 148, 152, 176, 177, 178, 181, 185, 196, 197, 208, 209, 210, 214, 218, 241, 242, 243, 246, 250, 274, 275, 276, 279, 283, 307, 308, 309, 312, 316, 340, 341, 342, 345, 348, 349, 374, 375, 376, 379, 382, 383, 407, 408, 409, 412, 415, 416, 440, 441, 442, 445, 449, 459, 460, 477, 478, 489, 490, 491, 494, 507, 508, 509, 510, 513, 530, 542, 550, 554, 555, 556, 557, 558, 565, 566, 573, 597, 602, 605, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 631, 634, 638, 639, 641, 645, 647, 648, 651, 652, 654, 655, 656, 665, 699, 702, 703, 704, 705, 706, 716, 717, 718, 721, 722, 724, 727, 728, 729, 730, 732, 734, 736, 737, 738, 739, 741, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 781, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 826, 828, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 851, 855, 856, 858, 859, 861, 862, 865, 867, 871, 872, 873, 874, 877, 888, 889, 890, 894, 895, 897, 898, 900, 901, 904, 906, 910, 911, 912, 913, 916, 928, 932, 933, 935, 936, 938, 939, 942, 944, 948, 949, 950, 951, 954, 965, 966, 970, 971, 973, 974, 976, 977, 980, 982, 986, 987, 988, 989, 992, 1003, 1004, 1008, 1009, 1011, 1012, 1014, 1015, 1020, 1022, 1026, 1027, 1028, 1029, 1032, 1044, 1045, 1049, 1050, 1052, 1053, 1055, 1056, 1059, 1061, 1065, 1066, 1067, 1068, 1071, 1084, 1088, 1089, 1091, 1092, 1094, 1095, 1098, 1100, 1104, 1105, 1106, 1107, 1110, 1121, 1122, 1126, 1127, 1129, 1130, 1132, 1133, 1136, 1138, 1142, 1143, 1144, 1145, 1148, 1159, 1160, 1164, 1165, 1167, 1168, 1170, 1171, 1174, 1176, 1180, 1181, 1182, 1183, 1186, 1199, 1210, 1211, 1212, 1215, 1226, 1228, 1238, 1242, 1243, 1244, 1247, 1262, 1272, 1276, 1277, 1278, 1281, 1296, 1306, 1310, 1311, 1312, 1315, 1329, 1340, 1341, 1342, 1345, 1358, 1368, 1372, 1373, 1374, 1377, 1390, 1401, 1402, 1403, 1406, 1417, 1418, 1429, 1430, 1431, 1434, 1446, 1457, 1458, 1459, 1462, 1475, 1485, 1489, 1490, 1491, 1494, 1508, 1519, 1520, 1521, 1524, 1537, 1547, 1551, 1552, 1553, 1556, 1570, 1581, 1582, 1583, 1586, 1604, 1605, 1606, 1610, 1612, 1615, 1619, 1622, 1626, 1629, 1630, 1631, 1632, 1633, 1634, 1648, 1650, 1651, 1656, 1657, 1658, 1667, 1668, 1669, 1671, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1740, 1791, 1792, 1800, 1801, 1802, 1803, 1804, 1810], "label": [1, 3, 6, 7, 8, 12, 13, 18, 22, 26, 28, 29, 31, 32, 33, 44, 50, 52, 53, 56, 61, 67, 76, 82, 84, 85, 88, 91, 93, 103, 109, 111, 112, 116, 122, 125, 136, 142, 144, 145, 148, 153, 158, 169, 175, 177, 178, 181, 186, 191, 201, 207, 209, 210, 214, 220, 223, 234, 240, 242, 243, 246, 251, 256, 267, 273, 275, 276, 279, 284, 289, 300, 306, 308, 309, 312, 317, 322, 333, 339, 341, 342, 345, 350, 356, 367, 373, 375, 376, 379, 384, 389, 400, 406, 408, 409, 412, 417, 422, 433, 439, 441, 442, 445, 450, 454, 459, 468, 478, 479, 482, 488, 490, 491, 494, 497, 498, 500, 505, 506, 508, 509, 510, 511, 512, 542, 543, 545, 569, 571, 849, 850, 851, 852, 857, 861, 862, 870, 873, 874, 877, 880, 881, 883, 889, 890, 891, 896, 900, 901, 909, 912, 913, 916, 919, 920, 922, 928, 929, 934, 938, 939, 947, 950, 951, 954, 957, 958, 960, 966, 967, 972, 976, 977, 985, 988, 989, 992, 995, 996, 998, 1003, 1004, 1005, 1010, 1014, 1015, 1025, 1028, 1029, 1032, 1035, 1036, 1038, 1044, 1045, 1046, 1051, 1055, 1056, 1064, 1067, 1068, 1071, 1074, 1075, 1077, 1082, 1083, 1084, 1085, 1090, 1094, 1095, 1103, 1106, 1107, 1110, 1113, 1114, 1116, 1122, 1123, 1128, 1132, 1133, 1141, 1144, 1145, 1148, 1151, 1152, 1154, 1160, 1161, 1166, 1170, 1171, 1179, 1182, 1183, 1186, 1189, 1190, 1192, 1199, 1200, 1203, 1209, 1211, 1212, 1215, 1218, 1219, 1221, 1228, 1229, 1233, 1241, 1243, 1244, 1247, 1251, 1252, 1254, 1262, 1263, 1267, 1275, 1277, 1278, 1281, 1285, 1286, 1288, 1296, 1297, 1301, 1309, 1311, 1312, 1315, 1319, 1320, 1322, 1329, 1330, 1333, 1339, 1341, 1342, 1345, 1348, 1349, 1351, 1358, 1359, 1363, 1371, 1373, 1374, 1377, 1381, 1382, 1384, 1390, 1391, 1394, 1400, 1402, 1403, 1406, 1409, 1410, 1412, 1418, 1419, 1422, 1428, 1430, 1431, 1434, 1437, 1438, 1440, 1446, 1447, 1450, 1456, 1458, 1459, 1462, 1465, 1466, 1468, 1475, 1476, 1480, 1488, 1490, 1491, 1494, 1498, 1499, 1501, 1508, 1509, 1512, 1518, 1520, 1521, 1524, 1527, 1528, 1530, 1537, 1538, 1542, 1550, 1552, 1553, 1556, 1560, 1561, 1563, 1570, 1571, 1574, 1580, 1582, 1583, 1586, 1589, 1590, 1592, 1615, 1617, 1618, 1619, 1623, 1625, 1633, 1648, 1650, 1655, 1656, 1661, 1801, 1810], "defin": [1, 3, 4, 5, 8, 16, 21, 22, 23, 25, 28, 29, 31, 34, 72, 529, 550, 597, 598, 600, 603, 607, 653, 678, 835, 836, 849, 850, 888, 889, 965, 1016, 1017, 1043, 1044, 1082, 1083, 1121, 1159, 1628, 1629, 1648, 1740], "domain": [1, 3, 4, 5, 8, 9, 23, 29, 31, 33, 121, 130, 221, 459, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 513, 542, 543, 545, 851, 852, 880, 888, 890, 891, 919, 927, 928, 929, 957, 965, 966, 967, 995, 1003, 1004, 1005, 1035, 1045, 1046, 1074, 1084, 1085, 1113, 1122, 1123, 1151, 1159, 1160, 1161, 1189, 1199, 1200, 1218, 1228, 1229, 1251, 1262, 1263, 1285, 1296, 1297, 1319, 1329, 1330, 1348, 1358, 1359, 1381, 1390, 1391, 1409, 1418, 1419, 1437, 1446, 1447, 1465, 1475, 1476, 1498, 1508, 1509, 1527, 1537, 1538, 1560, 1570, 1571, 1589, 1633, 1634, 1636, 1642, 1652], "creat": [1, 2, 3, 4, 6, 7, 10, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 33, 34, 45, 61, 77, 91, 104, 122, 137, 153, 170, 186, 202, 220, 235, 251, 268, 284, 301, 317, 334, 350, 368, 384, 401, 417, 434, 450, 463, 483, 498, 511, 517, 531, 532, 555, 558, 570, 647, 648, 655, 705, 738, 833, 855, 856, 863, 865, 867, 881, 888, 894, 895, 902, 904, 906, 920, 927, 932, 933, 940, 942, 944, 958, 965, 970, 971, 978, 980, 982, 996, 1003, 1008, 1009, 1018, 1020, 1022, 1036, 1049, 1050, 1057, 1059, 1061, 1075, 1088, 1089, 1096, 1098, 1100, 1114, 1121, 1126, 1127, 1134, 1136, 1138, 1152, 1159, 1164, 1165, 1172, 1174, 1176, 1190, 1198, 1204, 1219, 1234, 1252, 1260, 1268, 1286, 1294, 1302, 1320, 1328, 1334, 1349, 1356, 1364, 1382, 1395, 1410, 1423, 1438, 1451, 1466, 1481, 1499, 1513, 1528, 1543, 1561, 1569, 1575, 1590, 1634, 1656, 1670, 1672, 1683, 1685, 1693, 1705, 1719, 1740, 1742, 1782, 1788], "phase": [1, 3, 4, 16, 17, 18, 20, 21, 22, 28, 29, 30, 33, 34, 211, 219, 221, 459, 477, 541, 566, 568, 570, 571, 573, 574, 732, 736, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 822, 824, 825, 826, 828, 829, 830, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 1198, 1328, 1356, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1569, 1740, 1800], "singl": [1, 2, 3, 7, 12, 13, 17, 18, 25, 27, 28, 30, 31, 33, 34, 58, 60, 90, 120, 150, 152, 183, 185, 218, 248, 250, 281, 283, 314, 316, 347, 349, 381, 383, 414, 416, 447, 449, 558, 569, 571, 573, 826, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1417, 1616, 1620, 1633, 1650, 1792, 1799], "transport": [1, 2, 3, 5, 7, 8, 9, 12, 15, 18, 26, 27, 29, 33, 261, 327, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 784, 809, 832, 888, 1003, 1811], "invas": [1, 3, 12, 99, 196, 197, 219], "option": [1, 3, 20, 25, 26, 27, 29, 31, 33, 36, 44, 48, 50, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 67, 76, 80, 82, 83, 84, 85, 88, 90, 91, 93, 103, 107, 109, 110, 111, 112, 116, 120, 121, 122, 123, 125, 136, 140, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 169, 173, 175, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 201, 205, 207, 208, 209, 210, 214, 218, 219, 220, 221, 223, 234, 238, 240, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 256, 261, 267, 271, 273, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 300, 304, 306, 307, 308, 309, 312, 314, 316, 317, 318, 319, 320, 322, 333, 337, 339, 340, 341, 342, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 367, 371, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 389, 400, 404, 406, 407, 408, 409, 412, 414, 415, 416, 417, 418, 419, 420, 422, 433, 437, 439, 440, 441, 442, 445, 447, 449, 450, 451, 452, 454, 466, 468, 478, 482, 486, 488, 489, 490, 491, 494, 498, 500, 506, 507, 508, 509, 510, 511, 512, 529, 531, 542, 557, 566, 569, 570, 573, 574, 648, 650, 651, 665, 699, 701, 702, 727, 728, 745, 759, 781, 806, 828, 832, 849, 851, 855, 856, 857, 858, 861, 862, 865, 867, 868, 870, 871, 872, 873, 874, 877, 881, 883, 888, 890, 894, 895, 896, 897, 900, 901, 904, 906, 907, 909, 910, 911, 912, 913, 916, 920, 922, 927, 928, 932, 933, 934, 935, 938, 939, 942, 944, 945, 947, 948, 949, 950, 951, 954, 958, 960, 965, 966, 970, 971, 972, 973, 976, 977, 980, 982, 983, 985, 986, 987, 988, 989, 992, 996, 998, 1004, 1008, 1009, 1010, 1011, 1014, 1015, 1020, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1032, 1036, 1038, 1043, 1045, 1049, 1050, 1051, 1052, 1055, 1056, 1059, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1071, 1075, 1077, 1082, 1084, 1088, 1089, 1090, 1091, 1094, 1095, 1098, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1110, 1114, 1116, 1121, 1122, 1126, 1127, 1128, 1129, 1132, 1133, 1136, 1138, 1139, 1141, 1142, 1143, 1144, 1145, 1148, 1152, 1154, 1159, 1160, 1164, 1165, 1166, 1167, 1170, 1171, 1174, 1176, 1177, 1179, 1180, 1181, 1182, 1183, 1186, 1190, 1192, 1199, 1203, 1207, 1209, 1210, 1211, 1212, 1215, 1219, 1221, 1228, 1233, 1238, 1239, 1241, 1242, 1243, 1244, 1247, 1252, 1254, 1259, 1262, 1267, 1272, 1273, 1275, 1276, 1277, 1278, 1281, 1286, 1288, 1293, 1296, 1301, 1306, 1307, 1309, 1310, 1311, 1312, 1315, 1320, 1322, 1327, 1329, 1333, 1337, 1339, 1340, 1341, 1342, 1345, 1349, 1351, 1358, 1363, 1368, 1369, 1371, 1372, 1373, 1374, 1377, 1382, 1384, 1390, 1394, 1398, 1400, 1401, 1402, 1403, 1406, 1410, 1412, 1417, 1418, 1422, 1426, 1428, 1429, 1430, 1431, 1434, 1438, 1440, 1446, 1450, 1454, 1456, 1457, 1458, 1459, 1462, 1466, 1468, 1475, 1480, 1485, 1486, 1488, 1489, 1490, 1491, 1494, 1499, 1501, 1506, 1508, 1512, 1516, 1518, 1519, 1520, 1521, 1524, 1528, 1530, 1537, 1542, 1547, 1548, 1550, 1551, 1552, 1553, 1556, 1561, 1563, 1568, 1570, 1574, 1578, 1580, 1581, 1582, 1583, 1586, 1590, 1592, 1605, 1618, 1620, 1623, 1626, 1627, 1630, 1631, 1632, 1640, 1642, 1653, 1656, 1657, 1658, 1683, 1781, 1788, 1791, 1801, 1802], "applic": [1, 20, 21, 23, 25, 29, 33, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 489, 507, 871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180, 1210, 1242, 1276, 1310, 1340, 1372, 1401, 1429, 1457, 1489, 1519, 1551, 1581], "refer": [1, 8, 17, 18, 25, 26, 27, 29, 31, 32, 33, 65, 156, 189, 197, 254, 287, 320, 348, 354, 382, 387, 415, 420, 452, 459, 554, 558, 648, 654, 656, 669, 670, 704, 706, 734, 741, 759, 766, 769, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 807, 808, 813, 826, 829, 830, 835, 836, 1679, 1742], "scale": [1, 2, 4, 5, 6, 7, 11, 12, 13, 18, 21, 27, 30, 31, 34, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 459, 468, 478, 488, 541, 542, 554, 565, 574, 578, 579, 580, 581, 582, 583, 584, 595, 652, 654, 656, 703, 704, 706, 721, 729, 734, 735, 741, 789, 826, 828, 851, 870, 890, 909, 928, 947, 966, 985, 1004, 1025, 1045, 1064, 1084, 1103, 1122, 1141, 1160, 1179, 1199, 1209, 1228, 1241, 1262, 1275, 1296, 1309, 1328, 1329, 1339, 1358, 1371, 1389, 1390, 1400, 1418, 1428, 1446, 1456, 1475, 1488, 1508, 1518, 1537, 1550, 1570, 1580, 1605, 1803], "model": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 18, 21, 22, 26, 27, 33, 34, 50, 64, 82, 109, 142, 155, 175, 188, 207, 240, 253, 273, 286, 306, 319, 339, 353, 373, 386, 406, 419, 439, 459, 468, 478, 479, 488, 496, 497, 513, 526, 530, 541, 542, 543, 544, 545, 565, 574, 578, 579, 580, 581, 582, 583, 584, 587, 590, 591, 593, 594, 595, 597, 602, 605, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 631, 634, 638, 639, 641, 645, 647, 648, 651, 652, 653, 654, 655, 656, 699, 702, 703, 704, 705, 706, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 737, 738, 739, 740, 741, 742, 758, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 828, 829, 830, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 851, 852, 870, 879, 880, 890, 891, 909, 918, 919, 928, 929, 947, 956, 957, 966, 967, 985, 994, 995, 1003, 1004, 1005, 1025, 1034, 1035, 1045, 1046, 1064, 1073, 1074, 1084, 1085, 1103, 1112, 1113, 1122, 1123, 1141, 1150, 1151, 1160, 1161, 1179, 1188, 1189, 1198, 1199, 1200, 1209, 1217, 1218, 1226, 1228, 1229, 1241, 1249, 1251, 1262, 1263, 1275, 1283, 1285, 1296, 1297, 1309, 1317, 1319, 1328, 1329, 1330, 1339, 1347, 1348, 1358, 1359, 1371, 1379, 1381, 1389, 1390, 1391, 1400, 1408, 1409, 1418, 1419, 1428, 1436, 1437, 1446, 1447, 1456, 1464, 1465, 1473, 1475, 1476, 1488, 1496, 1498, 1508, 1509, 1518, 1526, 1527, 1535, 1537, 1538, 1550, 1558, 1560, 1570, 1571, 1580, 1588, 1589, 1800, 1803, 1807, 1808], "set": [1, 2, 4, 7, 8, 10, 12, 13, 15, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 45, 49, 51, 58, 59, 60, 61, 64, 72, 77, 81, 83, 90, 91, 98, 99, 104, 108, 110, 120, 122, 130, 137, 141, 143, 150, 151, 152, 153, 155, 163, 170, 174, 176, 183, 184, 185, 186, 188, 196, 197, 202, 206, 208, 218, 220, 228, 235, 239, 241, 248, 249, 250, 251, 253, 261, 268, 272, 274, 281, 282, 283, 284, 286, 294, 301, 305, 307, 314, 315, 316, 317, 319, 327, 334, 338, 340, 347, 349, 350, 353, 361, 368, 372, 374, 381, 383, 384, 386, 394, 401, 405, 407, 414, 416, 417, 419, 427, 434, 438, 440, 447, 448, 449, 450, 460, 463, 467, 477, 483, 487, 489, 498, 507, 511, 517, 519, 520, 532, 534, 535, 558, 566, 654, 656, 704, 706, 734, 741, 832, 849, 855, 856, 861, 862, 863, 869, 871, 881, 888, 894, 895, 900, 901, 902, 908, 910, 920, 927, 932, 933, 938, 939, 940, 946, 948, 958, 965, 970, 971, 976, 977, 978, 984, 986, 996, 1003, 1008, 1009, 1014, 1015, 1018, 1024, 1026, 1036, 1043, 1049, 1050, 1055, 1056, 1057, 1063, 1065, 1075, 1082, 1088, 1089, 1094, 1095, 1096, 1102, 1104, 1114, 1121, 1126, 1127, 1132, 1133, 1134, 1140, 1142, 1152, 1159, 1164, 1165, 1170, 1171, 1172, 1178, 1180, 1190, 1198, 1204, 1208, 1210, 1219, 1226, 1234, 1240, 1242, 1252, 1259, 1260, 1268, 1274, 1276, 1286, 1293, 1294, 1302, 1308, 1310, 1320, 1327, 1328, 1334, 1338, 1340, 1349, 1356, 1364, 1370, 1372, 1382, 1389, 1395, 1399, 1401, 1410, 1417, 1423, 1427, 1429, 1438, 1445, 1451, 1455, 1457, 1466, 1473, 1481, 1487, 1489, 1499, 1506, 1507, 1513, 1517, 1519, 1528, 1535, 1543, 1549, 1551, 1561, 1568, 1569, 1575, 1579, 1581, 1590, 1625, 1626, 1628, 1630, 1631, 1632, 1634, 1642, 1652, 1656, 1659, 1661, 1662, 1693, 1695, 1696, 1705, 1707, 1708, 1719, 1721, 1722, 1739, 1742, 1743, 1746, 1757, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1782, 1784, 1785, 1807, 1808], "attribut": [1, 2, 5, 15, 17, 20, 25, 27, 29, 30, 33, 38, 59, 72, 98, 130, 151, 163, 184, 196, 228, 249, 261, 282, 294, 315, 327, 361, 394, 427, 448, 459, 460, 477, 496, 513, 526, 541, 544, 565, 574, 759, 849, 879, 888, 918, 927, 956, 965, 994, 1003, 1034, 1043, 1073, 1082, 1112, 1121, 1150, 1159, 1188, 1198, 1217, 1226, 1249, 1260, 1283, 1294, 1317, 1328, 1347, 1356, 1379, 1389, 1408, 1417, 1436, 1445, 1464, 1473, 1496, 1507, 1526, 1535, 1558, 1569, 1588, 1665, 1666, 1668, 1675, 1677, 1679, 1681, 1690, 1740, 1746, 1758, 1759, 1796, 1808], "machineri": [1, 2], "workspac": [1, 2, 10, 23, 565, 1663, 1740, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795], "project": [1, 2, 6, 34, 35, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 477, 553, 558, 565, 568, 569, 570, 571, 572, 573, 574, 849, 888, 927, 965, 1003, 1043, 1082, 1121, 1159, 1198, 1226, 1260, 1294, 1328, 1356, 1389, 1417, 1445, 1473, 1507, 1535, 1569, 1616, 1663, 1741, 1742, 1777, 1779, 1781, 1786, 1787, 1788, 1791, 1792], "manag": [1, 2, 30, 459, 830], "cluster": [1, 2, 33, 99, 744, 745, 1617, 1625, 1629, 1640, 1643, 1650, 1655, 1661, 1797], "avail": [1, 2, 8, 11, 21, 23, 25, 31, 32, 33, 34, 36, 479, 543, 558, 784, 852, 891, 929, 967, 1005, 1046, 1085, 1123, 1161, 1200, 1229, 1263, 1297, 1330, 1359, 1391, 1419, 1447, 1476, 1509, 1538, 1571, 1604, 1627], "matrix": [1, 2, 18, 22, 25, 27, 29, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 849, 855, 856, 865, 867, 888, 894, 895, 904, 906, 927, 932, 933, 942, 944, 965, 970, 971, 980, 982, 1003, 1008, 1009, 1020, 1022, 1043, 1049, 1050, 1059, 1061, 1082, 1088, 1089, 1098, 1100, 1121, 1126, 1127, 1136, 1138, 1159, 1164, 1165, 1174, 1176, 1604, 1605, 1620, 1622, 1627, 1644, 1645, 1646, 1647, 1653, 1654, 1659, 1662, 1804], "solver": [1, 2, 16, 18, 20, 22, 23, 59, 151, 184, 249, 282, 315, 448, 547, 1598, 1600, 1602, 1604, 1605], "steadi": [1, 2, 23, 34, 261, 327, 427, 566, 574], "state": [1, 2, 23, 27, 32, 33, 34, 261, 427, 566, 572, 574, 763, 764, 832, 1230, 1264, 1298, 1360, 1477, 1539], "explan": [1, 2, 1702, 1758, 1759, 1780], "unit": [1, 2, 8, 554, 713, 759, 762, 763, 764, 765, 766, 768, 769, 770, 773, 775, 784, 786, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 804, 805, 807, 808, 835, 836, 849, 1082], "reactiv": [1, 2], "conduct": [1, 2, 5, 7, 9, 16, 18, 20, 22, 27, 163, 228, 794, 795, 796, 797, 809, 811, 816, 817, 818, 819, 821, 822, 824, 825, 826, 832, 836, 846, 847], "transient": [1, 2, 327, 348, 361, 382, 394, 415, 566, 574, 665], "softwar": [2, 26, 34, 554, 556], "illustr": [2, 6, 10, 22, 25, 26, 27, 28, 29, 31, 32, 33, 652, 654, 656, 703, 704, 706, 729, 734, 741, 1656], "problem": [2, 11, 12, 22, 25, 27, 28, 29, 327, 811, 1797], "fix": [2, 10, 14, 29, 31, 33, 759, 1797], "appli": [2, 10, 11, 22, 23, 27, 29, 30, 32, 33, 34, 44, 51, 60, 61, 62, 63, 64, 65, 76, 83, 90, 91, 99, 103, 110, 119, 120, 121, 122, 123, 130, 136, 143, 152, 153, 154, 155, 156, 169, 176, 185, 186, 187, 188, 189, 201, 208, 218, 219, 220, 221, 234, 241, 250, 251, 252, 253, 254, 267, 274, 283, 284, 285, 286, 287, 300, 307, 316, 317, 318, 319, 320, 333, 340, 349, 350, 351, 352, 353, 354, 367, 374, 383, 384, 385, 386, 387, 400, 407, 416, 417, 418, 419, 420, 433, 440, 449, 450, 451, 452, 459, 478, 479, 482, 489, 498, 506, 507, 511, 542, 543, 724, 730, 759, 781, 806, 826, 835, 836, 851, 852, 855, 856, 857, 861, 862, 871, 872, 881, 890, 891, 894, 895, 896, 900, 901, 910, 911, 920, 928, 929, 932, 933, 934, 938, 939, 948, 949, 958, 966, 967, 970, 971, 972, 976, 977, 986, 987, 996, 1004, 1005, 1008, 1009, 1010, 1014, 1015, 1026, 1027, 1036, 1045, 1046, 1049, 1050, 1051, 1055, 1056, 1065, 1066, 1075, 1084, 1085, 1088, 1089, 1090, 1094, 1095, 1104, 1105, 1114, 1122, 1123, 1126, 1127, 1128, 1132, 1133, 1142, 1143, 1152, 1160, 1161, 1164, 1165, 1166, 1170, 1171, 1180, 1181, 1190, 1199, 1200, 1203, 1210, 1219, 1227, 1228, 1229, 1233, 1238, 1242, 1252, 1261, 1262, 1263, 1267, 1272, 1276, 1286, 1295, 1296, 1297, 1301, 1306, 1310, 1320, 1329, 1330, 1333, 1340, 1349, 1357, 1358, 1359, 1363, 1368, 1372, 1382, 1390, 1391, 1394, 1401, 1410, 1418, 1419, 1422, 1429, 1438, 1446, 1447, 1450, 1457, 1466, 1474, 1475, 1476, 1480, 1485, 1489, 1499, 1508, 1509, 1512, 1519, 1528, 1536, 1537, 1538, 1542, 1547, 1551, 1561, 1570, 1571, 1574, 1581, 1590, 1615, 1618, 1619, 1623, 1630, 1631, 1633, 1642, 1648, 1650, 1656, 1739, 1757], "valu": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 21, 22, 23, 25, 26, 28, 29, 30, 32, 33, 34, 42, 44, 45, 46, 48, 54, 55, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 76, 77, 78, 80, 86, 87, 88, 90, 92, 93, 94, 95, 103, 104, 105, 107, 114, 115, 116, 120, 121, 123, 124, 125, 126, 127, 134, 136, 137, 138, 140, 146, 147, 148, 150, 152, 154, 156, 157, 158, 159, 160, 167, 169, 170, 171, 173, 179, 180, 181, 183, 185, 187, 189, 190, 191, 192, 193, 197, 201, 202, 203, 205, 212, 213, 214, 218, 219, 221, 222, 223, 224, 225, 232, 234, 235, 236, 238, 244, 245, 246, 248, 250, 252, 254, 255, 256, 257, 258, 265, 267, 268, 269, 271, 277, 278, 279, 281, 283, 285, 287, 288, 289, 290, 291, 298, 300, 301, 302, 304, 310, 311, 312, 314, 316, 318, 320, 321, 322, 323, 324, 331, 333, 334, 335, 337, 343, 344, 345, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 365, 367, 368, 369, 371, 377, 378, 379, 381, 382, 383, 385, 387, 388, 389, 390, 391, 398, 400, 401, 402, 404, 410, 411, 412, 414, 415, 416, 418, 420, 421, 422, 423, 424, 431, 433, 434, 435, 437, 443, 444, 445, 447, 449, 451, 452, 453, 454, 455, 456, 459, 463, 464, 466, 469, 470, 472, 473, 474, 478, 482, 483, 484, 486, 492, 493, 494, 499, 500, 501, 502, 506, 510, 512, 517, 518, 521, 522, 523, 526, 532, 533, 536, 537, 538, 542, 550, 554, 566, 573, 590, 591, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 658, 660, 663, 664, 665, 666, 667, 670, 671, 672, 674, 675, 676, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 759, 762, 763, 764, 765, 766, 768, 769, 770, 773, 775, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 828, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 851, 855, 856, 857, 859, 863, 864, 865, 867, 868, 872, 875, 876, 877, 882, 883, 884, 885, 888, 890, 894, 895, 896, 898, 902, 903, 904, 906, 907, 911, 914, 915, 916, 921, 922, 923, 924, 927, 928, 932, 933, 934, 936, 940, 941, 942, 944, 945, 949, 952, 953, 954, 959, 960, 961, 962, 965, 966, 970, 971, 972, 974, 978, 979, 980, 982, 983, 987, 990, 991, 992, 997, 998, 999, 1000, 1003, 1004, 1008, 1009, 1010, 1012, 1018, 1019, 1020, 1022, 1023, 1027, 1030, 1031, 1032, 1037, 1038, 1039, 1040, 1043, 1045, 1049, 1050, 1051, 1053, 1057, 1058, 1059, 1061, 1062, 1066, 1069, 1070, 1071, 1076, 1077, 1078, 1079, 1082, 1084, 1088, 1089, 1090, 1092, 1096, 1097, 1098, 1100, 1101, 1105, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1121, 1122, 1126, 1127, 1128, 1130, 1134, 1135, 1136, 1138, 1139, 1143, 1146, 1147, 1148, 1153, 1154, 1155, 1156, 1159, 1160, 1164, 1165, 1166, 1168, 1172, 1173, 1174, 1176, 1177, 1181, 1184, 1185, 1186, 1191, 1192, 1193, 1194, 1198, 1199, 1203, 1204, 1205, 1207, 1213, 1214, 1215, 1220, 1221, 1222, 1223, 1227, 1228, 1230, 1233, 1234, 1235, 1236, 1238, 1239, 1245, 1246, 1247, 1253, 1254, 1255, 1256, 1261, 1262, 1264, 1267, 1268, 1269, 1270, 1272, 1273, 1279, 1280, 1281, 1287, 1288, 1289, 1290, 1295, 1296, 1298, 1301, 1302, 1303, 1304, 1306, 1307, 1313, 1314, 1315, 1321, 1322, 1323, 1324, 1328, 1329, 1333, 1334, 1335, 1337, 1343, 1344, 1345, 1350, 1351, 1352, 1353, 1357, 1358, 1360, 1363, 1364, 1365, 1366, 1368, 1369, 1375, 1376, 1377, 1383, 1384, 1385, 1386, 1390, 1394, 1395, 1396, 1398, 1404, 1405, 1406, 1411, 1412, 1413, 1414, 1418, 1422, 1423, 1424, 1426, 1432, 1433, 1434, 1439, 1440, 1441, 1442, 1446, 1450, 1451, 1452, 1454, 1460, 1461, 1462, 1467, 1468, 1469, 1470, 1474, 1475, 1477, 1480, 1481, 1482, 1483, 1485, 1486, 1492, 1493, 1494, 1500, 1501, 1502, 1503, 1508, 1512, 1513, 1514, 1516, 1522, 1523, 1524, 1529, 1530, 1531, 1532, 1536, 1537, 1539, 1542, 1543, 1544, 1545, 1547, 1548, 1554, 1555, 1556, 1562, 1563, 1564, 1565, 1569, 1570, 1574, 1575, 1576, 1578, 1584, 1585, 1586, 1591, 1592, 1593, 1594, 1615, 1617, 1620, 1621, 1622, 1627, 1629, 1641, 1642, 1643, 1651, 1654, 1655, 1657, 1658, 1690, 1693, 1694, 1697, 1698, 1699, 1705, 1706, 1709, 1710, 1711, 1716, 1719, 1720, 1723, 1724, 1725, 1732, 1734, 1737, 1739, 1743, 1747, 1750, 1752, 1753, 1755, 1757, 1782, 1783, 1789, 1790, 1793, 1807, 1808], "rate": [2, 4, 5, 7, 8, 9, 13, 18, 22, 23, 32, 41, 60, 63, 90, 120, 130, 133, 152, 154, 166, 185, 187, 218, 231, 250, 252, 264, 283, 285, 297, 316, 318, 330, 349, 352, 364, 383, 385, 397, 416, 418, 430, 449, 451, 809, 833, 835, 836, 837, 839, 840, 841, 842, 843, 844], "boundari": [2, 4, 5, 8, 9, 11, 13, 18, 23, 30, 33, 40, 60, 62, 63, 64, 65, 74, 90, 101, 120, 121, 123, 130, 132, 152, 154, 155, 156, 165, 185, 187, 188, 189, 199, 218, 219, 221, 230, 250, 252, 253, 254, 263, 283, 285, 286, 287, 296, 316, 318, 319, 320, 329, 349, 351, 352, 353, 354, 363, 383, 385, 386, 387, 396, 416, 418, 419, 420, 429, 449, 451, 452, 850, 889, 1044, 1083, 1615, 1634, 1640, 1642], "condit": [2, 4, 5, 9, 13, 18, 22, 23, 30, 33, 40, 60, 62, 63, 64, 65, 74, 90, 101, 120, 121, 123, 130, 132, 152, 154, 155, 156, 165, 185, 187, 188, 189, 199, 218, 219, 221, 230, 250, 252, 253, 254, 263, 283, 285, 286, 287, 296, 316, 318, 319, 320, 329, 348, 349, 351, 352, 353, 354, 363, 382, 383, 385, 386, 387, 396, 415, 416, 418, 419, 420, 429, 449, 451, 452, 759, 763, 770, 1640], "solv": [2, 5, 8, 18, 22, 23, 29, 32, 62, 351, 835, 836, 1604, 1606, 1610, 1612], "system": [2, 18, 22, 23, 550, 835, 836, 1599, 1601, 1603, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1612, 1613, 1634, 1652], "equat": [2, 5, 7, 10, 18, 21, 22, 23, 32, 33, 768, 773, 799, 813, 814, 829, 830, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 1599, 1601, 1603, 1607, 1609, 1611, 1613], "spars": [2, 33, 849, 855, 856, 865, 867, 888, 894, 895, 904, 906, 927, 932, 933, 942, 944, 965, 970, 971, 980, 982, 1003, 1008, 1009, 1020, 1022, 1043, 1049, 1050, 1059, 1061, 1082, 1088, 1089, 1098, 1100, 1121, 1126, 1127, 1136, 1138, 1159, 1164, 1165, 1174, 1176, 1597, 1604, 1610, 1612, 1617, 1620, 1622, 1627, 1632, 1644, 1645, 1646, 1647, 1655, 1659, 1662, 1804], "matric": [2, 18, 59, 151, 184, 249, 282, 315, 448, 1121], "pressur": [2, 5, 7, 10, 12, 13, 16, 20, 22, 23, 31, 32, 33, 99, 113, 119, 196, 211, 669, 670, 759, 762, 766, 768, 769, 789, 790, 793, 795, 797, 799, 800, 801, 804, 805, 807, 808, 811, 813, 814, 819, 828, 829, 830, 833], "v": [2, 7, 28, 29, 31, 54, 70, 86, 96, 114, 128, 146, 161, 179, 194, 211, 212, 226, 244, 259, 277, 292, 310, 325, 343, 359, 377, 392, 410, 425, 443, 457, 469, 475, 492, 503, 521, 524, 536, 539, 835, 836, 875, 886, 914, 925, 952, 963, 990, 1001, 1030, 1041, 1069, 1080, 1108, 1119, 1146, 1157, 1184, 1195, 1213, 1224, 1245, 1257, 1279, 1291, 1313, 1325, 1343, 1354, 1375, 1387, 1404, 1415, 1432, 1443, 1460, 1471, 1492, 1504, 1522, 1533, 1554, 1566, 1584, 1595, 1697, 1700, 1709, 1714, 1723, 1726, 1789, 1794], "gaug": 2, "convers": [2, 1740], "packag": [2, 13, 16, 25, 31, 33, 35, 554, 557, 566, 759, 799, 1226, 1417, 1473, 1535, 1811], "challeng": [2, 11, 33], "sourc": [2, 10, 11, 34, 35, 36, 38, 62, 64, 72, 74, 90, 98, 99, 113, 118, 119, 121, 123, 130, 155, 163, 188, 196, 197, 211, 216, 217, 219, 221, 228, 253, 261, 283, 286, 294, 319, 327, 353, 361, 386, 394, 415, 419, 427, 430, 431, 447, 448, 451, 452, 460, 461, 465, 466, 468, 469, 471, 473, 474, 477, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 526, 529, 530, 531, 539, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 667, 669, 670, 672, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 822, 824, 825, 826, 828, 829, 830, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 850, 888, 889, 927, 965, 1003, 1016, 1017, 1043, 1082, 1083, 1121, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1136, 1138, 1143, 1159, 1198, 1226, 1260, 1293, 1294, 1327, 1328, 1356, 1357, 1360, 1366, 1368, 1379, 1380, 1389, 1417, 1445, 1473, 1507, 1535, 1569, 1598, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1690, 1702, 1708, 1712, 1713, 1716, 1728, 1740, 1742, 1743, 1744, 1745, 1746, 1747, 1751, 1753, 1758, 1759, 1760, 1777, 1779, 1780, 1781, 1786, 1787, 1788, 1791, 1792, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810], "term": [2, 12, 23, 30, 32, 33, 64, 155, 188, 253, 261, 286, 319, 353, 386, 419, 554, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 888], "function": [2, 6, 7, 11, 15, 17, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 51, 60, 68, 83, 90, 94, 99, 110, 120, 126, 143, 152, 159, 176, 185, 192, 197, 208, 218, 224, 241, 250, 257, 274, 283, 290, 307, 316, 323, 340, 348, 349, 357, 374, 382, 383, 390, 407, 415, 416, 423, 440, 449, 455, 459, 473, 477, 478, 489, 496, 501, 505, 507, 513, 514, 541, 542, 544, 550, 569, 578, 579, 580, 581, 582, 583, 584, 587, 590, 591, 593, 594, 596, 610, 625, 640, 646, 649, 653, 654, 656, 657, 660, 662, 668, 671, 673, 677, 679, 693, 697, 700, 704, 706, 707, 712, 714, 721, 730, 732, 734, 736, 741, 742, 758, 759, 761, 763, 767, 771, 776, 779, 784, 785, 787, 791, 798, 802, 810, 811, 812, 815, 820, 823, 826, 827, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 851, 871, 879, 884, 890, 910, 918, 923, 928, 948, 956, 961, 966, 986, 994, 999, 1004, 1026, 1034, 1039, 1045, 1065, 1073, 1078, 1084, 1104, 1112, 1117, 1121, 1122, 1142, 1150, 1155, 1160, 1180, 1188, 1193, 1199, 1210, 1217, 1222, 1226, 1228, 1242, 1249, 1255, 1262, 1276, 1283, 1289, 1296, 1310, 1317, 1323, 1329, 1340, 1347, 1352, 1358, 1372, 1379, 1385, 1390, 1401, 1408, 1413, 1418, 1429, 1436, 1441, 1446, 1457, 1464, 1469, 1473, 1475, 1489, 1496, 1502, 1508, 1519, 1526, 1531, 1535, 1537, 1551, 1558, 1564, 1570, 1581, 1588, 1593, 1616, 1617, 1619, 1621, 1633, 1634, 1648, 1654, 1655, 1661, 1665, 1671, 1673, 1674, 1683, 1684, 1685, 1686, 1739, 1743, 1757, 1777, 1801, 1802], "how": [2, 4, 6, 7, 8, 9, 10, 11, 12, 15, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 44, 48, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 67, 76, 80, 83, 84, 85, 88, 90, 91, 93, 103, 107, 110, 111, 112, 116, 120, 121, 122, 123, 125, 136, 140, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 169, 173, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 201, 205, 208, 209, 210, 214, 218, 219, 220, 221, 223, 234, 238, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 256, 267, 271, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 300, 304, 307, 308, 309, 312, 314, 316, 317, 318, 319, 320, 322, 333, 337, 340, 341, 342, 345, 347, 349, 350, 351, 352, 353, 354, 356, 367, 371, 374, 375, 376, 379, 381, 383, 384, 385, 386, 387, 389, 400, 404, 407, 408, 409, 412, 414, 416, 417, 418, 419, 420, 422, 433, 437, 440, 441, 442, 445, 447, 449, 450, 451, 452, 454, 466, 478, 482, 486, 489, 490, 491, 494, 498, 500, 506, 507, 508, 509, 510, 511, 512, 542, 569, 651, 699, 702, 727, 728, 730, 733, 832, 851, 857, 868, 871, 873, 874, 877, 881, 883, 890, 896, 907, 910, 912, 913, 916, 920, 922, 928, 934, 945, 948, 950, 951, 954, 958, 960, 966, 972, 983, 986, 988, 989, 992, 996, 998, 1004, 1010, 1023, 1026, 1028, 1029, 1032, 1036, 1038, 1045, 1051, 1062, 1065, 1067, 1068, 1071, 1075, 1077, 1084, 1090, 1101, 1104, 1106, 1107, 1110, 1114, 1116, 1122, 1128, 1139, 1142, 1144, 1145, 1148, 1152, 1154, 1160, 1166, 1177, 1180, 1182, 1183, 1186, 1190, 1192, 1199, 1203, 1207, 1210, 1211, 1212, 1215, 1219, 1221, 1228, 1233, 1239, 1242, 1243, 1244, 1247, 1252, 1254, 1262, 1267, 1273, 1276, 1277, 1278, 1281, 1286, 1288, 1296, 1301, 1307, 1310, 1311, 1312, 1315, 1320, 1322, 1329, 1333, 1337, 1340, 1341, 1342, 1345, 1349, 1351, 1358, 1363, 1369, 1372, 1373, 1374, 1377, 1382, 1384, 1390, 1394, 1398, 1401, 1402, 1403, 1406, 1410, 1412, 1418, 1422, 1426, 1429, 1430, 1431, 1434, 1438, 1440, 1446, 1450, 1454, 1457, 1458, 1459, 1462, 1466, 1468, 1475, 1480, 1486, 1489, 1490, 1491, 1494, 1499, 1501, 1508, 1512, 1516, 1519, 1520, 1521, 1524, 1528, 1530, 1537, 1542, 1548, 1551, 1552, 1553, 1556, 1561, 1563, 1570, 1574, 1578, 1581, 1582, 1583, 1586, 1590, 1592, 1642], "work": [2, 6, 7, 8, 14, 15, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 530, 554, 558, 573, 648, 654, 656, 704, 706, 734, 741, 759, 1226, 1259, 1293, 1327, 1417, 1506, 1568, 1619, 1650, 1670, 1672, 1683, 1685, 1728, 1786, 1791], "conduit": [2, 5, 7, 12, 13, 20, 32, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 811, 816, 817, 818, 819, 821, 822, 824, 825, 826, 832, 846, 847], "shape": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 26, 27, 28, 29, 31, 32, 33, 34, 559, 596, 610, 611, 612, 613, 614, 616, 617, 619, 622, 624, 625, 640, 650, 652, 656, 662, 670, 679, 701, 703, 706, 710, 714, 716, 717, 720, 729, 730, 741, 811, 826, 838, 849, 855, 856, 858, 859, 860, 861, 862, 872, 888, 894, 895, 897, 898, 899, 900, 901, 911, 927, 932, 933, 935, 936, 937, 938, 939, 949, 965, 970, 971, 973, 974, 975, 976, 977, 987, 1003, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1027, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1066, 1082, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1105, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1143, 1159, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1181, 1620, 1623, 1634, 1637, 1642, 1643, 1648, 1652, 1657, 1658, 1716], "built": [2, 6, 8, 10, 20, 25, 566], "deriv": [2, 22, 459], "arbitrari": [2, 26, 27, 710, 730, 927, 965, 1159, 1771, 1799], "throat": [2, 4, 5, 7, 8, 10, 12, 13, 15, 16, 18, 20, 22, 25, 26, 31, 32, 33, 34, 44, 47, 48, 51, 53, 56, 57, 58, 61, 68, 69, 76, 79, 80, 83, 85, 88, 89, 91, 94, 95, 99, 103, 106, 107, 110, 112, 116, 117, 122, 126, 127, 136, 139, 140, 143, 145, 148, 149, 150, 153, 159, 160, 169, 172, 173, 176, 178, 181, 182, 183, 186, 192, 193, 196, 197, 201, 204, 205, 208, 210, 214, 215, 220, 224, 225, 234, 237, 238, 241, 243, 246, 247, 248, 251, 257, 258, 267, 270, 271, 274, 276, 279, 280, 281, 284, 290, 291, 300, 303, 304, 307, 309, 312, 313, 314, 317, 323, 324, 333, 336, 337, 340, 342, 345, 346, 347, 350, 357, 358, 367, 370, 371, 374, 376, 379, 380, 381, 384, 390, 391, 400, 403, 404, 407, 409, 412, 413, 414, 417, 423, 424, 433, 436, 437, 440, 442, 445, 446, 447, 450, 455, 456, 459, 465, 466, 471, 473, 474, 482, 485, 486, 489, 491, 494, 495, 498, 501, 502, 506, 507, 509, 510, 511, 554, 555, 559, 562, 566, 568, 569, 571, 578, 579, 580, 581, 582, 583, 584, 590, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 658, 659, 660, 661, 665, 669, 670, 672, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 701, 703, 704, 706, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 720, 728, 733, 739, 751, 753, 754, 755, 757, 777, 786, 811, 813, 814, 816, 817, 818, 819, 821, 822, 824, 825, 826, 828, 829, 830, 832, 833, 846, 847, 849, 855, 856, 857, 858, 859, 862, 865, 866, 868, 871, 874, 877, 878, 881, 884, 885, 888, 894, 895, 896, 897, 898, 901, 904, 905, 907, 910, 913, 916, 917, 920, 923, 924, 927, 932, 933, 934, 935, 936, 939, 942, 943, 945, 948, 951, 954, 955, 958, 961, 962, 965, 970, 971, 972, 973, 974, 977, 980, 981, 983, 986, 989, 992, 993, 996, 999, 1000, 1003, 1008, 1009, 1010, 1011, 1012, 1015, 1017, 1020, 1021, 1023, 1026, 1029, 1032, 1033, 1036, 1039, 1040, 1043, 1049, 1050, 1051, 1052, 1053, 1056, 1059, 1060, 1062, 1065, 1068, 1071, 1072, 1075, 1078, 1079, 1082, 1088, 1089, 1090, 1091, 1092, 1095, 1098, 1099, 1101, 1104, 1107, 1110, 1111, 1114, 1117, 1118, 1121, 1126, 1127, 1128, 1129, 1130, 1133, 1136, 1137, 1139, 1142, 1145, 1148, 1149, 1152, 1155, 1156, 1159, 1164, 1165, 1166, 1167, 1168, 1171, 1174, 1175, 1177, 1180, 1183, 1186, 1187, 1190, 1193, 1194, 1203, 1206, 1207, 1210, 1212, 1215, 1216, 1219, 1222, 1223, 1233, 1237, 1239, 1242, 1244, 1247, 1248, 1252, 1255, 1256, 1267, 1271, 1273, 1276, 1278, 1281, 1282, 1286, 1289, 1290, 1301, 1305, 1307, 1310, 1312, 1315, 1316, 1320, 1323, 1324, 1333, 1336, 1337, 1340, 1342, 1345, 1346, 1349, 1352, 1353, 1363, 1367, 1369, 1372, 1374, 1377, 1378, 1382, 1385, 1386, 1394, 1397, 1398, 1401, 1403, 1406, 1407, 1410, 1413, 1414, 1422, 1425, 1426, 1429, 1431, 1434, 1435, 1438, 1441, 1442, 1450, 1453, 1454, 1457, 1459, 1462, 1463, 1466, 1469, 1470, 1480, 1484, 1486, 1489, 1491, 1494, 1495, 1499, 1502, 1503, 1512, 1515, 1516, 1519, 1521, 1524, 1525, 1528, 1531, 1532, 1542, 1546, 1548, 1551, 1553, 1556, 1557, 1561, 1564, 1565, 1574, 1577, 1578, 1581, 1583, 1586, 1587, 1590, 1593, 1594, 1616, 1619, 1623, 1625, 1629, 1650, 1651, 1656, 1660, 1796, 1797, 1806], "element": [2, 16, 20, 25, 27, 29, 30, 32, 33, 51, 57, 83, 89, 110, 117, 143, 149, 176, 182, 208, 215, 241, 247, 274, 280, 307, 313, 340, 346, 374, 380, 407, 413, 440, 446, 471, 489, 495, 507, 550, 566, 569, 578, 579, 580, 581, 582, 583, 584, 607, 622, 637, 647, 648, 655, 705, 725, 733, 736, 738, 740, 832, 833, 855, 859, 871, 872, 878, 894, 898, 910, 911, 917, 932, 936, 948, 949, 955, 970, 974, 986, 987, 993, 1008, 1012, 1026, 1027, 1033, 1049, 1053, 1065, 1066, 1072, 1088, 1092, 1104, 1105, 1111, 1126, 1130, 1142, 1143, 1149, 1164, 1168, 1180, 1181, 1187, 1210, 1216, 1242, 1248, 1276, 1282, 1310, 1316, 1340, 1346, 1372, 1378, 1401, 1407, 1429, 1435, 1457, 1463, 1489, 1495, 1519, 1525, 1551, 1557, 1581, 1587, 1617, 1619, 1627, 1655, 1733, 1739, 1746, 1751, 1757, 1760, 1761, 1763, 1764, 1765, 1766, 1771, 1772, 1773, 1775], "tutori": [3, 18, 25, 26, 27, 29, 30, 31], "It": [4, 5, 6, 8, 10, 12, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 60, 90, 120, 152, 185, 197, 218, 250, 283, 316, 349, 383, 416, 449, 541, 554, 648, 759, 965, 1159, 1642, 1651, 1657, 1658, 1667, 1669, 1671, 1673, 1676, 1678, 1680, 1682, 1684, 1686, 1687, 1689, 1777, 1797], "easi": [4, 8, 15, 16, 18, 22, 25, 28, 30, 888], "go": [4, 8, 14, 23, 25, 29, 30], "fact": [4, 27, 28, 29, 31, 32, 33], "code": [4, 6, 13, 14, 16, 17, 22, 25, 27, 29, 33, 34, 558, 652, 654, 656, 703, 704, 706, 729, 734, 741, 759], "block": [4, 22, 25, 26, 29, 33], "produc": [4, 29, 32, 478, 542, 654, 656, 704, 706, 734, 741, 835, 836, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1159, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1389, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1659, 1662, 1786, 1791], "just": [4, 6, 7, 15, 16, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 473, 501, 872, 884, 911, 923, 949, 961, 987, 999, 1027, 1039, 1066, 1078, 1105, 1117, 1143, 1155, 1181, 1193, 1222, 1227, 1250, 1255, 1261, 1284, 1289, 1295, 1318, 1323, 1352, 1357, 1380, 1385, 1413, 1441, 1469, 1474, 1497, 1502, 1531, 1536, 1559, 1564, 1593, 1683, 1685, 1797, 1807, 1808, 1809], "few": [4, 15, 18, 25, 26, 28, 29, 30, 33, 459, 763], "line": [4, 5, 11, 15, 28, 29, 30, 31, 1677, 1728], "import": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 553, 652, 654, 656, 703, 704, 706, 713, 729, 730, 734, 741, 826, 838, 855, 856, 858, 859, 860, 861, 862, 872, 894, 895, 897, 898, 899, 900, 901, 911, 932, 933, 935, 936, 937, 938, 939, 949, 970, 971, 973, 974, 975, 976, 977, 987, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1027, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1066, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1105, 1121, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1143, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1181, 1663, 1683, 1685, 1716, 1728, 1803], "op": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 652, 703, 729, 730, 838, 855, 856, 858, 859, 860, 861, 862, 872, 894, 895, 897, 898, 899, 900, 901, 911, 932, 933, 935, 936, 937, 938, 939, 949, 970, 971, 973, 974, 975, 976, 977, 987, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1027, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1066, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1105, 1121, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1143, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1181, 1651], "paramet": [4, 6, 8, 12, 13, 15, 21, 23, 27, 29, 30, 31, 34, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 74, 76, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 101, 103, 106, 107, 109, 110, 111, 112, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 130, 132, 136, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 165, 169, 172, 173, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 199, 201, 204, 205, 207, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 224, 225, 230, 234, 237, 238, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 261, 263, 267, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 296, 300, 303, 304, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 329, 333, 336, 337, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 363, 367, 370, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 396, 400, 403, 404, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 429, 433, 436, 437, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 459, 460, 465, 466, 468, 471, 473, 474, 478, 479, 482, 485, 486, 488, 489, 490, 491, 494, 495, 496, 497, 498, 500, 501, 502, 506, 507, 508, 509, 510, 511, 512, 526, 529, 531, 542, 543, 544, 545, 550, 553, 554, 555, 557, 558, 559, 561, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 667, 669, 670, 672, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 747, 752, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 822, 824, 825, 826, 828, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 850, 851, 852, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 867, 868, 870, 871, 872, 873, 874, 877, 878, 879, 880, 881, 883, 884, 885, 888, 889, 890, 891, 894, 895, 896, 897, 898, 899, 900, 901, 904, 905, 906, 907, 909, 910, 911, 912, 913, 916, 917, 918, 919, 920, 922, 923, 924, 927, 928, 929, 932, 933, 934, 935, 936, 937, 938, 939, 942, 943, 944, 945, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 960, 961, 962, 965, 966, 967, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 985, 986, 987, 988, 989, 992, 993, 994, 995, 996, 998, 999, 1000, 1003, 1004, 1005, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1159, 1160, 1161, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1198, 1199, 1200, 1203, 1206, 1207, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1227, 1228, 1229, 1233, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1259, 1261, 1262, 1263, 1267, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1293, 1295, 1296, 1297, 1301, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1327, 1328, 1329, 1330, 1333, 1336, 1337, 1339, 1340, 1341, 1342, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1356, 1357, 1358, 1359, 1363, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1389, 1390, 1391, 1394, 1397, 1398, 1400, 1401, 1402, 1403, 1406, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1417, 1418, 1419, 1422, 1425, 1426, 1428, 1429, 1430, 1431, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1446, 1447, 1450, 1453, 1454, 1456, 1457, 1458, 1459, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1474, 1475, 1476, 1480, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1506, 1508, 1509, 1512, 1515, 1516, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1536, 1537, 1538, 1542, 1545, 1546, 1547, 1548, 1550, 1551, 1552, 1553, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1568, 1569, 1570, 1571, 1574, 1577, 1578, 1580, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1605, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1666, 1668, 1670, 1672, 1675, 1677, 1679, 1681, 1683, 1685, 1688, 1742, 1779, 1781, 1786, 1787, 1788, 1791, 1792, 1796, 1798, 1801, 1802, 1803, 1804, 1806, 1807, 1808, 1810], "lc": 4, "1e": [4, 5, 7, 8, 9, 11, 12, 13, 16, 21, 22, 26, 29, 32, 33, 34, 549, 747, 752, 832, 1602, 1604, 1608, 1610, 1804], "4": [4, 6, 7, 8, 11, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 555, 558, 826, 837, 840, 841, 842, 860, 872, 899, 911, 937, 949, 975, 987, 1013, 1027, 1054, 1066, 1093, 1105, 1121, 1131, 1143, 1169, 1181, 1667, 1669, 1671, 1673, 1676, 1678, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1689], "nx": [4, 11, 29, 648, 888], "ny": [4, 648, 888], "nz": [4, 648, 888], "geometri": [4, 5, 7, 9, 11, 12, 13, 20, 21, 23, 29, 30, 34, 459, 559, 652, 653, 703, 729, 1003, 1616], "physic": [4, 5, 7, 9, 12, 13, 16, 18, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 459, 784, 811, 838], "pn": [4, 5, 6, 7, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 652, 703, 729, 730, 736, 838, 855, 856, 858, 859, 860, 861, 862, 872, 894, 895, 897, 898, 899, 900, 901, 911, 932, 933, 935, 936, 937, 938, 939, 949, 970, 971, 973, 974, 975, 976, 977, 987, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1027, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1066, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1105, 1121, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1143, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1181], "cubic": [4, 6, 7, 8, 9, 10, 12, 13, 15, 17, 20, 21, 22, 28, 29, 30, 31, 34, 648, 652, 664, 667, 703, 729, 730, 838, 849, 855, 856, 858, 859, 860, 861, 862, 872, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 932, 933, 935, 936, 937, 938, 939, 949, 965, 970, 971, 973, 974, 975, 976, 977, 987, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1027, 1043, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1066, 1082, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1105, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1143, 1159, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1181, 1634, 1637, 1638, 1642, 1648, 1657, 1658], "space": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 21, 26, 27, 29, 30, 32, 33, 34, 130, 554, 811, 838, 849, 850, 888, 889, 927, 1003, 1044, 1082, 1083, 1638, 1688], "geo": [4, 6, 8, 10, 652, 703, 729], "spheresandcylind": 4, "p": [4, 5, 11, 18, 23, 26, 28, 30, 32, 33, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 477, 478, 542, 637, 762, 768, 769, 833, 849, 851, 858, 860, 861, 888, 890, 897, 899, 900, 927, 928, 935, 937, 938, 965, 966, 973, 975, 976, 1003, 1004, 1011, 1013, 1014, 1043, 1045, 1052, 1054, 1055, 1082, 1084, 1091, 1093, 1094, 1121, 1122, 1129, 1131, 1132, 1159, 1160, 1167, 1169, 1170, 1198, 1199, 1226, 1228, 1260, 1262, 1294, 1296, 1328, 1329, 1356, 1358, 1389, 1390, 1417, 1418, 1445, 1446, 1473, 1475, 1507, 1508, 1535, 1537, 1569, 1570], "t": [4, 6, 7, 8, 10, 11, 15, 17, 18, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 477, 550, 759, 762, 763, 764, 766, 768, 769, 770, 773, 775, 784, 786, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 804, 805, 807, 808, 826, 835, 836, 849, 859, 862, 888, 898, 901, 927, 936, 939, 965, 974, 977, 1003, 1012, 1015, 1043, 1053, 1056, 1082, 1092, 1095, 1121, 1130, 1133, 1159, 1168, 1171, 1198, 1226, 1260, 1294, 1328, 1356, 1389, 1417, 1445, 1473, 1507, 1535, 1569], "hg": [4, 10, 33], "phy": [4, 8, 10, 769], "standard": [4, 6, 7, 22, 26, 28, 30, 31, 33, 566, 654, 704, 734, 855, 856, 894, 895, 927, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165, 1690, 1786, 1791], "algorithm": [4, 5, 7, 8, 9, 10, 12, 13, 16, 17, 18, 22, 23, 34, 38, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 118, 120, 130, 151, 152, 163, 184, 185, 196, 217, 218, 228, 249, 250, 261, 282, 283, 294, 315, 316, 327, 348, 349, 361, 382, 383, 394, 415, 416, 427, 448, 449, 459, 477, 554, 784, 833, 835, 836, 1632, 1740, 1791, 1805], "run": [4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 18, 22, 29, 31, 32, 33, 34, 38, 72, 98, 118, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 459, 478, 496, 497, 513, 541, 542, 544, 545, 554, 647, 653, 655, 705, 730, 738, 851, 879, 880, 890, 918, 919, 928, 956, 957, 966, 994, 995, 1004, 1034, 1035, 1045, 1073, 1074, 1084, 1112, 1113, 1122, 1150, 1151, 1160, 1188, 1189, 1199, 1217, 1218, 1228, 1249, 1251, 1262, 1283, 1285, 1296, 1317, 1319, 1329, 1347, 1348, 1358, 1379, 1381, 1390, 1408, 1409, 1418, 1436, 1437, 1446, 1464, 1465, 1475, 1496, 1498, 1508, 1526, 1527, 1537, 1558, 1560, 1570, 1588, 1589, 1604, 1800], "mip": [4, 10, 33], "set_inlet": 4, "left": [4, 5, 6, 8, 9, 11, 12, 13, 18, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 478, 489, 507, 542, 850, 851, 871, 889, 890, 910, 928, 948, 966, 986, 1004, 1026, 1044, 1045, 1065, 1083, 1084, 1104, 1122, 1142, 1160, 1180, 1199, 1210, 1228, 1242, 1262, 1276, 1296, 1310, 1329, 1340, 1358, 1372, 1390, 1401, 1418, 1429, 1446, 1457, 1475, 1489, 1508, 1519, 1537, 1551, 1570, 1581], "right": [4, 5, 6, 8, 9, 11, 12, 13, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 850, 889, 1044, 1083, 1605], "top": [4, 17, 25, 26, 27, 29, 30, 889, 1044, 1648, 1654], "bottom": [4, 17, 18, 26, 28, 29, 889, 1044, 1648], "result": [4, 6, 7, 10, 11, 12, 18, 20, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 36, 51, 56, 60, 64, 83, 88, 90, 110, 116, 118, 120, 143, 148, 152, 155, 176, 181, 185, 188, 208, 214, 218, 219, 221, 241, 246, 250, 253, 274, 279, 283, 286, 307, 312, 316, 319, 340, 345, 349, 353, 374, 379, 383, 386, 407, 412, 416, 419, 440, 445, 449, 478, 489, 494, 497, 507, 510, 542, 545, 566, 567, 669, 699, 702, 725, 727, 730, 851, 858, 861, 862, 871, 877, 880, 888, 890, 897, 900, 901, 910, 916, 919, 928, 935, 938, 939, 948, 954, 957, 965, 966, 973, 976, 977, 986, 992, 995, 1004, 1011, 1014, 1015, 1026, 1032, 1035, 1045, 1052, 1055, 1056, 1065, 1071, 1074, 1084, 1091, 1094, 1095, 1104, 1110, 1113, 1122, 1129, 1132, 1133, 1142, 1148, 1151, 1160, 1167, 1170, 1171, 1180, 1186, 1189, 1199, 1210, 1215, 1218, 1228, 1242, 1247, 1251, 1262, 1276, 1281, 1285, 1296, 1310, 1315, 1319, 1329, 1340, 1345, 1348, 1358, 1372, 1377, 1381, 1390, 1401, 1406, 1409, 1418, 1429, 1434, 1437, 1446, 1457, 1462, 1465, 1475, 1489, 1494, 1498, 1508, 1519, 1524, 1527, 1537, 1551, 1556, 1560, 1570, 1581, 1586, 1589, 1626, 1630, 1631, 1634, 1641, 1652, 1657, 1658, 1668, 1672, 1685, 1716, 1728, 1740], "plot_intrusion_curv": 4, "give": [4, 8, 23, 25, 27, 28, 32, 60, 90, 120, 152, 185, 218, 219, 221, 250, 283, 316, 349, 383, 416, 449, 710, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165, 1617, 1655, 1742, 1788], "someth": [4, 17, 25, 29, 1809], "As": [4, 5, 12, 13, 15, 16, 18, 21, 22, 23, 27, 29, 30, 31, 32, 34, 759], "anoth": [4, 9, 11, 12, 18, 20, 25, 26, 27, 28, 30, 31, 33, 530, 759, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165, 1230, 1264, 1298, 1360, 1477, 1539, 1764, 1767, 1769, 1770, 1774], "exampl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 23, 25, 26, 29, 31, 34, 652, 654, 656, 703, 704, 706, 729, 730, 734, 741, 838, 855, 856, 858, 859, 860, 861, 862, 872, 894, 895, 897, 898, 899, 900, 901, 911, 932, 933, 935, 936, 937, 938, 939, 949, 970, 971, 973, 974, 975, 976, 977, 987, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1027, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1066, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1105, 1121, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1143, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1181, 1619, 1656, 1670, 1672, 1683, 1685, 1716, 1728, 1803], "found": [4, 5, 6, 7, 11, 12, 13, 17, 23, 25, 26, 27, 28, 29, 30, 32, 33, 54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 377, 410, 443, 469, 492, 521, 536, 651, 718, 719, 728, 752, 799, 858, 859, 860, 861, 862, 872, 875, 897, 898, 899, 900, 901, 911, 914, 935, 936, 937, 938, 939, 949, 952, 973, 974, 975, 976, 977, 987, 990, 1011, 1012, 1013, 1014, 1015, 1016, 1027, 1030, 1052, 1053, 1054, 1055, 1056, 1066, 1069, 1091, 1092, 1093, 1094, 1095, 1105, 1108, 1129, 1130, 1131, 1132, 1133, 1143, 1146, 1167, 1168, 1169, 1170, 1171, 1181, 1184, 1213, 1245, 1279, 1313, 1343, 1375, 1404, 1432, 1460, 1492, 1522, 1554, 1584, 1605, 1616, 1626, 1630, 1631, 1632, 1633, 1648, 1661, 1697, 1709, 1723, 1789], "water": [4, 7, 9, 12, 13, 16, 18, 21, 32, 33, 766, 784, 786, 790, 797, 801, 808, 826, 830, 838, 1417, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596], "sf": [4, 7, 23, 32], "stokesflow": [4, 5, 7, 13, 16, 18, 23, 32, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326], "pin": 4, "pout": 4, "200_000": [4, 18], "101_325": 4, "set_value_bc": [4, 5, 7, 8, 9, 12, 13, 18, 22, 32, 34, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449], "total": [4, 7, 11, 18, 23, 26, 29, 32, 130, 782, 872, 911, 949, 987, 1027, 1066, 1105, 1143, 1181, 1616], "flow": [4, 8, 12, 13, 16, 18, 20, 23, 27, 28, 32, 294, 637, 811, 819, 826], "through": [4, 7, 8, 9, 13, 17, 20, 29, 32, 33, 58, 130, 150, 183, 248, 281, 314, 347, 381, 414, 447, 1016, 1017], "insert": [4, 30, 33, 66, 92, 124, 157, 190, 222, 255, 288, 321, 355, 388, 421, 453, 472, 499, 523, 538, 882, 921, 959, 997, 1037, 1076, 1115, 1153, 1191, 1220, 1253, 1287, 1321, 1350, 1383, 1411, 1439, 1467, 1500, 1529, 1562, 1591, 1656, 1665, 1666, 1699, 1711, 1725, 1793], "known": [4, 7, 8, 9, 11, 22, 27, 29, 31, 784, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165, 1626, 1630, 1631], "darci": [4, 5], "": [4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 44, 49, 56, 59, 60, 67, 71, 74, 76, 81, 88, 90, 93, 97, 101, 103, 108, 116, 118, 120, 125, 129, 130, 132, 136, 141, 148, 151, 152, 158, 162, 165, 169, 174, 181, 184, 185, 191, 195, 199, 201, 206, 214, 218, 223, 227, 230, 234, 239, 246, 249, 250, 256, 260, 263, 267, 272, 279, 282, 283, 289, 293, 296, 300, 305, 312, 315, 316, 322, 326, 329, 333, 338, 345, 349, 356, 360, 363, 367, 372, 379, 383, 389, 393, 396, 400, 405, 412, 416, 422, 426, 429, 433, 438, 445, 448, 449, 454, 458, 459, 467, 476, 482, 487, 494, 496, 500, 504, 506, 510, 512, 519, 520, 525, 526, 530, 534, 535, 540, 544, 550, 554, 555, 558, 570, 571, 573, 622, 637, 647, 652, 653, 654, 655, 656, 659, 661, 669, 703, 704, 705, 706, 729, 733, 734, 738, 741, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 822, 824, 825, 826, 828, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 855, 856, 857, 860, 861, 862, 865, 867, 869, 877, 879, 883, 887, 894, 895, 896, 899, 900, 901, 904, 906, 908, 916, 918, 922, 926, 932, 933, 934, 937, 938, 939, 942, 944, 946, 954, 956, 960, 964, 965, 970, 971, 972, 975, 976, 977, 980, 982, 984, 992, 994, 998, 1002, 1003, 1008, 1009, 1010, 1013, 1014, 1015, 1020, 1022, 1024, 1032, 1034, 1038, 1042, 1049, 1050, 1051, 1054, 1055, 1056, 1059, 1061, 1063, 1071, 1073, 1077, 1081, 1088, 1089, 1090, 1093, 1094, 1095, 1098, 1100, 1102, 1110, 1112, 1116, 1120, 1126, 1127, 1128, 1131, 1132, 1133, 1136, 1138, 1140, 1148, 1150, 1154, 1158, 1159, 1164, 1165, 1166, 1169, 1170, 1171, 1174, 1176, 1178, 1186, 1188, 1192, 1196, 1203, 1208, 1215, 1217, 1221, 1225, 1233, 1240, 1247, 1249, 1250, 1254, 1258, 1267, 1274, 1281, 1283, 1284, 1288, 1292, 1301, 1308, 1315, 1317, 1318, 1322, 1326, 1328, 1333, 1338, 1345, 1347, 1351, 1355, 1363, 1370, 1377, 1379, 1380, 1384, 1388, 1394, 1399, 1406, 1408, 1412, 1416, 1422, 1427, 1434, 1436, 1440, 1444, 1450, 1455, 1462, 1464, 1468, 1472, 1480, 1487, 1494, 1496, 1497, 1501, 1505, 1512, 1517, 1524, 1526, 1530, 1534, 1542, 1549, 1556, 1558, 1559, 1563, 1567, 1574, 1579, 1586, 1588, 1592, 1596, 1632, 1649, 1653, 1654, 1656, 1657, 1658, 1659, 1662, 1665, 1666, 1668, 1672, 1674, 1675, 1677, 1679, 1681, 1683, 1685, 1688, 1695, 1696, 1701, 1707, 1708, 1715, 1721, 1722, 1727, 1740, 1784, 1785, 1787, 1795, 1798, 1806, 1810], "law": [4, 5, 8, 20, 22, 23, 130, 622, 762, 786, 801], "q": [4, 5, 23, 29, 32, 33, 637, 652, 654, 656, 703, 704, 706, 729, 734, 741], "A": [4, 5, 7, 8, 9, 11, 12, 13, 17, 18, 20, 22, 23, 27, 28, 29, 30, 31, 33, 34, 35, 38, 44, 51, 56, 59, 61, 67, 68, 69, 76, 83, 88, 91, 93, 94, 95, 99, 103, 110, 116, 122, 125, 126, 127, 130, 136, 143, 148, 151, 153, 158, 159, 160, 163, 169, 176, 181, 184, 186, 191, 192, 193, 196, 201, 208, 214, 220, 223, 224, 225, 228, 234, 241, 246, 249, 251, 256, 257, 258, 261, 267, 274, 279, 282, 284, 289, 290, 291, 294, 300, 307, 312, 315, 317, 322, 323, 324, 327, 333, 340, 345, 350, 356, 357, 358, 361, 367, 374, 379, 384, 389, 390, 391, 394, 400, 407, 412, 417, 422, 423, 424, 427, 433, 440, 445, 448, 450, 454, 455, 456, 460, 473, 474, 482, 489, 494, 498, 500, 501, 502, 506, 507, 510, 511, 512, 554, 562, 569, 570, 573, 574, 597, 598, 600, 603, 607, 622, 637, 644, 647, 648, 650, 652, 653, 655, 656, 672, 690, 695, 701, 703, 705, 706, 709, 713, 716, 725, 729, 730, 736, 738, 741, 747, 765, 770, 786, 789, 790, 796, 797, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 828, 830, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 857, 860, 871, 877, 881, 883, 884, 885, 888, 896, 899, 910, 916, 920, 922, 923, 924, 934, 937, 948, 954, 958, 960, 961, 962, 965, 972, 975, 986, 992, 996, 998, 999, 1000, 1003, 1010, 1013, 1026, 1032, 1036, 1038, 1039, 1040, 1043, 1051, 1054, 1065, 1071, 1075, 1077, 1078, 1079, 1082, 1090, 1093, 1104, 1110, 1114, 1116, 1117, 1118, 1121, 1128, 1131, 1142, 1148, 1152, 1154, 1155, 1156, 1159, 1166, 1169, 1180, 1186, 1190, 1192, 1193, 1194, 1203, 1210, 1215, 1219, 1221, 1222, 1223, 1226, 1230, 1233, 1236, 1242, 1247, 1252, 1254, 1255, 1256, 1264, 1267, 1270, 1276, 1281, 1286, 1288, 1289, 1290, 1298, 1301, 1304, 1310, 1315, 1320, 1322, 1323, 1324, 1333, 1340, 1345, 1349, 1351, 1352, 1353, 1356, 1360, 1363, 1366, 1372, 1377, 1382, 1384, 1385, 1386, 1394, 1401, 1406, 1410, 1412, 1413, 1414, 1417, 1422, 1429, 1434, 1438, 1440, 1441, 1442, 1450, 1457, 1462, 1466, 1468, 1469, 1470, 1473, 1477, 1480, 1483, 1489, 1494, 1499, 1501, 1502, 1503, 1512, 1519, 1524, 1528, 1530, 1531, 1532, 1535, 1539, 1542, 1545, 1551, 1556, 1561, 1563, 1564, 1565, 1574, 1581, 1586, 1590, 1592, 1593, 1594, 1605, 1607, 1609, 1611, 1613, 1615, 1617, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1639, 1641, 1642, 1643, 1644, 1651, 1653, 1654, 1655, 1657, 1658, 1659, 1662, 1675, 1677, 1679, 1681, 1683, 1685, 1740, 1742, 1743, 1746, 1781, 1796, 1797, 1798, 1801, 1802, 1810], "2": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 55, 87, 99, 115, 147, 180, 213, 228, 245, 278, 311, 344, 378, 411, 444, 470, 493, 522, 537, 550, 555, 578, 579, 580, 581, 582, 583, 584, 590, 597, 598, 600, 603, 607, 622, 637, 652, 669, 678, 703, 729, 769, 790, 801, 813, 814, 821, 822, 826, 829, 830, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 850, 855, 858, 859, 860, 861, 872, 876, 889, 894, 897, 898, 899, 900, 911, 915, 932, 935, 936, 937, 938, 949, 953, 970, 973, 974, 975, 976, 987, 991, 1008, 1011, 1012, 1013, 1014, 1027, 1031, 1044, 1049, 1052, 1053, 1054, 1055, 1066, 1070, 1083, 1088, 1091, 1092, 1093, 1094, 1105, 1109, 1121, 1126, 1129, 1130, 1131, 1132, 1143, 1147, 1164, 1167, 1168, 1169, 1170, 1181, 1185, 1214, 1226, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585, 1617, 1619, 1620, 1623, 1627, 1632, 1643, 1650, 1655, 1683, 1698, 1710, 1716, 1724, 1728, 1786, 1790, 1791], "l": [4, 5, 7, 8, 9, 11, 20, 23, 25, 32, 130, 622, 637, 784, 786], "mu": [4, 5, 23, 31, 32, 637, 759, 770, 803, 807, 808, 1800], "viscos": [4, 5, 7, 13, 21, 23, 31, 587, 590, 591, 759, 770, 792, 803, 804, 805, 806, 807, 808, 824, 825, 826, 1236, 1238, 1270, 1272, 1304, 1306, 1366, 1368, 1483, 1485, 1545, 1547, 1800, 1801, 1802], "mean": [4, 6, 8, 10, 16, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 44, 48, 51, 52, 53, 56, 58, 60, 62, 64, 67, 76, 80, 83, 84, 85, 88, 90, 93, 103, 107, 110, 111, 112, 116, 120, 121, 123, 125, 136, 140, 143, 144, 145, 148, 150, 152, 155, 158, 169, 173, 176, 177, 178, 181, 183, 185, 188, 191, 196, 201, 205, 208, 209, 210, 214, 218, 219, 221, 223, 234, 238, 241, 242, 243, 246, 248, 250, 253, 256, 267, 271, 274, 275, 276, 279, 281, 283, 286, 289, 300, 304, 307, 308, 309, 312, 314, 316, 319, 322, 333, 337, 340, 341, 342, 345, 347, 349, 351, 353, 356, 367, 371, 374, 375, 376, 379, 381, 383, 386, 389, 400, 404, 407, 408, 409, 412, 414, 416, 419, 422, 433, 437, 440, 441, 442, 445, 447, 449, 454, 466, 482, 486, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 530, 558, 569, 573, 647, 651, 653, 654, 655, 699, 702, 704, 705, 727, 728, 734, 738, 752, 759, 832, 857, 858, 861, 862, 868, 871, 872, 873, 874, 877, 883, 896, 897, 900, 901, 907, 910, 911, 912, 913, 916, 922, 934, 935, 938, 939, 945, 948, 949, 950, 951, 954, 960, 972, 973, 976, 977, 983, 986, 987, 988, 989, 992, 998, 1010, 1011, 1014, 1015, 1023, 1026, 1027, 1028, 1029, 1032, 1038, 1051, 1052, 1055, 1056, 1062, 1065, 1066, 1067, 1068, 1071, 1077, 1090, 1091, 1094, 1095, 1101, 1104, 1105, 1106, 1107, 1110, 1116, 1128, 1129, 1132, 1133, 1139, 1142, 1143, 1144, 1145, 1148, 1154, 1166, 1167, 1170, 1171, 1177, 1180, 1181, 1182, 1183, 1186, 1192, 1203, 1207, 1210, 1211, 1212, 1215, 1221, 1233, 1239, 1242, 1243, 1244, 1247, 1254, 1267, 1273, 1276, 1277, 1278, 1281, 1288, 1301, 1307, 1310, 1311, 1312, 1315, 1322, 1333, 1337, 1340, 1341, 1342, 1345, 1351, 1363, 1369, 1372, 1373, 1374, 1377, 1384, 1394, 1398, 1401, 1402, 1403, 1406, 1412, 1422, 1426, 1429, 1430, 1431, 1434, 1440, 1450, 1454, 1457, 1458, 1459, 1462, 1468, 1480, 1486, 1489, 1490, 1491, 1494, 1501, 1512, 1516, 1519, 1520, 1521, 1524, 1530, 1542, 1548, 1551, 1552, 1553, 1556, 1563, 1574, 1578, 1581, 1582, 1583, 1586, 1592, 1651, 1654, 1742], "k": [4, 5, 6, 18, 21, 22, 23, 27, 28, 29, 31, 32, 54, 70, 86, 96, 114, 128, 146, 161, 179, 194, 212, 226, 244, 259, 277, 292, 310, 325, 343, 359, 377, 392, 410, 425, 443, 457, 469, 475, 492, 503, 521, 524, 536, 539, 762, 763, 764, 766, 768, 769, 770, 773, 775, 784, 786, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 804, 805, 807, 808, 835, 836, 865, 875, 886, 904, 914, 925, 942, 952, 963, 980, 990, 1001, 1020, 1030, 1041, 1059, 1069, 1080, 1098, 1108, 1119, 1136, 1146, 1157, 1174, 1184, 1195, 1213, 1224, 1245, 1257, 1279, 1291, 1313, 1325, 1343, 1354, 1375, 1387, 1404, 1415, 1432, 1443, 1460, 1471, 1492, 1504, 1522, 1533, 1554, 1566, 1584, 1595, 1697, 1700, 1709, 1714, 1723, 1726, 1789, 1794], "also": [4, 6, 7, 11, 15, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 197, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 459, 477, 478, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 542, 647, 651, 652, 653, 654, 655, 656, 699, 702, 703, 704, 705, 706, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 851, 857, 858, 861, 862, 871, 872, 873, 874, 877, 883, 888, 890, 896, 897, 900, 901, 910, 911, 912, 913, 916, 922, 928, 934, 935, 938, 939, 948, 949, 950, 951, 954, 960, 966, 972, 973, 976, 977, 986, 987, 988, 989, 992, 998, 1004, 1010, 1011, 1014, 1015, 1026, 1027, 1028, 1029, 1032, 1038, 1045, 1051, 1052, 1055, 1056, 1065, 1066, 1067, 1068, 1071, 1077, 1084, 1090, 1091, 1094, 1095, 1104, 1105, 1106, 1107, 1110, 1116, 1122, 1128, 1129, 1132, 1133, 1142, 1143, 1144, 1145, 1148, 1154, 1160, 1166, 1167, 1170, 1171, 1180, 1181, 1182, 1183, 1186, 1192, 1199, 1203, 1210, 1211, 1212, 1215, 1221, 1228, 1233, 1242, 1243, 1244, 1247, 1254, 1259, 1262, 1267, 1276, 1277, 1278, 1281, 1288, 1293, 1296, 1301, 1310, 1311, 1312, 1315, 1322, 1329, 1333, 1340, 1341, 1342, 1345, 1351, 1358, 1363, 1372, 1373, 1374, 1377, 1384, 1390, 1394, 1401, 1402, 1403, 1406, 1412, 1417, 1418, 1422, 1429, 1430, 1431, 1434, 1440, 1446, 1450, 1457, 1458, 1459, 1462, 1468, 1473, 1475, 1480, 1489, 1490, 1491, 1494, 1501, 1506, 1508, 1512, 1519, 1520, 1521, 1524, 1530, 1535, 1537, 1542, 1551, 1552, 1553, 1556, 1563, 1570, 1574, 1581, 1582, 1583, 1586, 1592, 1617, 1619, 1626, 1630, 1631, 1650, 1661, 1665, 1742, 1786, 1791, 1797], "worth": [4, 14, 20, 26, 28, 29, 30], "explain": [4, 5, 11, 18, 20, 22, 27, 29, 31], "so": [4, 6, 10, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 57, 60, 64, 89, 90, 117, 118, 120, 149, 152, 155, 182, 185, 188, 196, 215, 218, 219, 221, 247, 250, 253, 280, 283, 286, 313, 316, 319, 346, 349, 353, 380, 383, 386, 413, 416, 419, 446, 449, 459, 471, 495, 505, 555, 558, 573, 653, 736, 759, 763, 855, 860, 878, 894, 899, 917, 932, 937, 955, 970, 975, 993, 1003, 1008, 1013, 1016, 1017, 1033, 1049, 1054, 1072, 1088, 1093, 1111, 1126, 1131, 1149, 1159, 1164, 1169, 1187, 1216, 1248, 1282, 1316, 1346, 1378, 1407, 1435, 1463, 1495, 1525, 1557, 1587, 1617, 1623, 1627, 1633, 1650, 1654, 1655, 1656, 1659, 1662, 1777, 1779, 1801, 1802], "capillari": [4, 10, 12, 33, 211, 669, 670, 809, 813, 814, 826, 828, 829, 830, 833], "chang": [4, 6, 23, 25, 27, 29, 31, 32, 34, 36, 62, 351, 965, 1159, 1779], "match": [4, 21, 23, 27, 33, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1417, 1651], "object": [4, 6, 8, 10, 15, 16, 17, 22, 25, 26, 27, 29, 30, 33, 34, 49, 51, 57, 59, 61, 71, 72, 81, 83, 89, 91, 97, 99, 108, 110, 117, 122, 129, 130, 141, 143, 149, 151, 153, 162, 174, 176, 182, 184, 186, 195, 197, 206, 208, 215, 220, 227, 239, 241, 247, 249, 251, 260, 261, 272, 274, 280, 282, 284, 293, 305, 307, 313, 315, 317, 326, 338, 340, 346, 348, 350, 360, 372, 374, 380, 382, 384, 393, 405, 407, 413, 415, 417, 426, 427, 438, 440, 446, 448, 450, 458, 459, 460, 467, 471, 476, 477, 478, 487, 489, 495, 496, 498, 504, 507, 511, 513, 519, 520, 525, 526, 529, 531, 534, 535, 540, 541, 542, 544, 555, 559, 562, 565, 566, 568, 569, 570, 571, 574, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 658, 660, 663, 664, 665, 666, 667, 670, 672, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 851, 865, 867, 869, 871, 878, 879, 881, 887, 888, 890, 904, 906, 908, 910, 917, 918, 920, 926, 927, 928, 942, 944, 946, 948, 955, 956, 958, 964, 965, 966, 980, 982, 984, 986, 993, 994, 996, 1002, 1004, 1020, 1022, 1024, 1026, 1033, 1034, 1036, 1042, 1043, 1045, 1059, 1061, 1063, 1065, 1072, 1073, 1075, 1081, 1082, 1084, 1098, 1100, 1102, 1104, 1111, 1112, 1114, 1120, 1121, 1122, 1136, 1138, 1140, 1142, 1149, 1150, 1152, 1158, 1159, 1160, 1174, 1176, 1178, 1180, 1187, 1188, 1190, 1196, 1198, 1199, 1208, 1210, 1216, 1217, 1219, 1225, 1227, 1228, 1230, 1240, 1242, 1248, 1249, 1250, 1252, 1258, 1261, 1262, 1264, 1274, 1276, 1282, 1283, 1284, 1286, 1292, 1295, 1296, 1298, 1308, 1310, 1316, 1317, 1318, 1320, 1326, 1328, 1329, 1338, 1340, 1346, 1347, 1349, 1355, 1356, 1357, 1358, 1360, 1370, 1372, 1378, 1379, 1380, 1382, 1388, 1389, 1390, 1399, 1401, 1407, 1408, 1410, 1416, 1417, 1418, 1427, 1429, 1435, 1436, 1438, 1444, 1446, 1455, 1457, 1463, 1464, 1466, 1472, 1474, 1475, 1477, 1487, 1489, 1495, 1496, 1497, 1499, 1505, 1508, 1517, 1519, 1525, 1526, 1528, 1534, 1536, 1537, 1539, 1549, 1551, 1557, 1558, 1559, 1561, 1567, 1569, 1570, 1579, 1581, 1587, 1588, 1590, 1596, 1605, 1616, 1618, 1635, 1636, 1649, 1659, 1662, 1695, 1696, 1701, 1707, 1708, 1715, 1721, 1722, 1727, 1729, 1735, 1740, 1742, 1743, 1747, 1753, 1777, 1779, 1781, 1784, 1785, 1786, 1788, 1791, 1795, 1796, 1801, 1802, 1804, 1807, 1808], "control": [4, 27, 29, 33, 44, 50, 51, 58, 60, 61, 62, 63, 64, 65, 76, 82, 83, 90, 91, 103, 109, 110, 120, 122, 130, 136, 142, 143, 150, 152, 153, 154, 155, 156, 169, 175, 176, 183, 185, 186, 187, 188, 189, 201, 207, 208, 218, 219, 220, 221, 234, 240, 241, 248, 250, 251, 252, 253, 254, 267, 273, 274, 281, 283, 284, 285, 286, 287, 300, 306, 307, 314, 316, 317, 318, 319, 320, 333, 339, 340, 347, 349, 350, 351, 352, 353, 354, 367, 373, 374, 381, 383, 384, 385, 386, 387, 400, 406, 407, 414, 416, 417, 418, 419, 420, 433, 439, 440, 447, 449, 450, 451, 452, 468, 482, 488, 489, 498, 506, 507, 511, 647, 648, 651, 652, 654, 655, 656, 699, 702, 703, 704, 705, 706, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 857, 860, 870, 871, 881, 896, 899, 909, 910, 920, 934, 937, 947, 948, 958, 972, 975, 985, 986, 996, 1010, 1013, 1025, 1026, 1036, 1051, 1054, 1064, 1065, 1075, 1090, 1093, 1103, 1104, 1114, 1128, 1131, 1141, 1142, 1152, 1166, 1169, 1179, 1180, 1190, 1203, 1209, 1210, 1219, 1233, 1241, 1242, 1252, 1267, 1275, 1276, 1286, 1301, 1309, 1310, 1320, 1333, 1339, 1340, 1349, 1363, 1371, 1372, 1382, 1394, 1400, 1401, 1410, 1422, 1428, 1429, 1438, 1450, 1456, 1457, 1466, 1480, 1488, 1489, 1499, 1512, 1518, 1519, 1528, 1542, 1550, 1551, 1561, 1574, 1580, 1581, 1590, 1616, 1618, 1634, 1642, 1652, 1777], "possess": [4, 30, 459, 780], "demand": [4, 1121], "let": [4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 557], "weibul": [4, 6, 654, 704, 734], "first": [4, 6, 7, 8, 10, 12, 13, 16, 17, 18, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 36, 55, 87, 115, 130, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 470, 493, 522, 537, 725, 770, 855, 876, 894, 915, 932, 953, 970, 991, 1008, 1031, 1049, 1070, 1088, 1109, 1126, 1147, 1164, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585, 1619, 1628, 1651, 1698, 1710, 1724, 1734, 1737, 1752, 1755, 1790], "store": [4, 6, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 59, 130, 151, 163, 184, 196, 228, 249, 261, 282, 294, 315, 327, 348, 361, 382, 394, 415, 427, 448, 459, 460, 478, 496, 541, 542, 544, 550, 554, 558, 568, 569, 653, 713, 736, 786, 838, 849, 851, 865, 867, 879, 888, 890, 904, 906, 918, 928, 942, 944, 956, 965, 966, 980, 982, 994, 1004, 1020, 1022, 1034, 1043, 1045, 1059, 1061, 1073, 1082, 1084, 1098, 1100, 1112, 1121, 1122, 1136, 1138, 1150, 1159, 1160, 1174, 1176, 1188, 1199, 1217, 1228, 1249, 1262, 1283, 1296, 1317, 1329, 1347, 1358, 1379, 1390, 1408, 1417, 1418, 1436, 1446, 1464, 1475, 1496, 1508, 1526, 1537, 1558, 1570, 1588, 1668, 1675, 1677, 1681, 1740, 1742, 1777], "exist": [4, 6, 11, 12, 13, 22, 28, 29, 30, 31, 32, 34, 56, 60, 61, 64, 67, 88, 90, 91, 93, 116, 120, 121, 122, 123, 125, 148, 152, 153, 155, 158, 181, 185, 186, 188, 191, 214, 218, 219, 220, 221, 223, 246, 250, 251, 253, 256, 279, 283, 284, 286, 289, 312, 316, 317, 319, 322, 345, 349, 350, 353, 356, 379, 383, 384, 386, 389, 412, 416, 417, 419, 422, 445, 449, 450, 454, 478, 494, 498, 500, 510, 511, 512, 542, 739, 753, 759, 851, 877, 881, 883, 890, 916, 920, 922, 928, 954, 958, 960, 966, 992, 996, 998, 1004, 1032, 1036, 1038, 1045, 1071, 1075, 1077, 1084, 1110, 1114, 1116, 1122, 1148, 1152, 1154, 1160, 1186, 1190, 1192, 1199, 1215, 1219, 1221, 1228, 1247, 1252, 1254, 1262, 1281, 1286, 1288, 1296, 1315, 1320, 1322, 1329, 1345, 1349, 1351, 1358, 1377, 1382, 1384, 1390, 1406, 1410, 1412, 1418, 1434, 1438, 1440, 1446, 1462, 1466, 1468, 1475, 1494, 1499, 1501, 1508, 1524, 1528, 1530, 1537, 1556, 1561, 1563, 1570, 1586, 1590, 1592, 1621, 1623, 1643, 1781, 1786], "dummi": [4, 1683], "variabl": [4, 17, 21, 23, 30, 59, 151, 184, 249, 282, 315, 448, 732, 736, 811, 835, 836, 838], "we": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 759, 835, 836], "compar": [4, 7, 23, 32], "later": [4, 15, 23, 26, 27, 29, 30, 1656], "gmod": 4, "old_diamet": 4, "pop": [4, 25, 33], "diamet": [4, 6, 8, 9, 10, 11, 15, 18, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 478, 496, 497, 542, 544, 545, 555, 578, 579, 580, 581, 582, 583, 584, 597, 598, 599, 600, 601, 602, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 650, 653, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685, 689, 690, 691, 692, 694, 695, 696, 701, 702, 708, 709, 715, 716, 718, 719, 720, 813, 814, 817, 828, 829, 830, 851, 879, 880, 890, 918, 919, 928, 956, 957, 966, 994, 995, 1004, 1034, 1035, 1045, 1073, 1074, 1084, 1112, 1113, 1122, 1150, 1151, 1160, 1188, 1189, 1199, 1217, 1218, 1228, 1249, 1251, 1262, 1283, 1285, 1296, 1317, 1319, 1329, 1347, 1348, 1358, 1379, 1381, 1390, 1408, 1409, 1418, 1436, 1437, 1446, 1464, 1465, 1475, 1496, 1498, 1508, 1526, 1527, 1537, 1558, 1560, 1570, 1588, 1589], "add_model": [4, 5, 6, 7, 11, 12, 13, 18, 21, 22, 29, 30, 31, 32, 33, 479, 543, 652, 703, 729, 730, 838, 852, 891, 929, 967, 1005, 1046, 1085, 1123, 1161, 1200, 1229, 1263, 1297, 1330, 1359, 1391, 1419, 1447, 1476, 1509, 1538, 1571], "propnam": [4, 6, 7, 8, 11, 12, 13, 18, 21, 22, 27, 29, 30, 31, 32, 33, 47, 48, 64, 79, 80, 106, 107, 139, 140, 155, 172, 173, 188, 204, 205, 237, 238, 253, 270, 271, 286, 303, 304, 319, 336, 337, 353, 370, 371, 386, 403, 404, 419, 436, 437, 465, 466, 478, 485, 486, 496, 497, 513, 542, 544, 545, 569, 652, 703, 729, 730, 838, 851, 866, 868, 879, 880, 890, 905, 907, 918, 919, 928, 943, 945, 956, 957, 966, 981, 983, 994, 995, 1004, 1021, 1023, 1034, 1035, 1045, 1060, 1062, 1073, 1074, 1084, 1099, 1101, 1112, 1113, 1122, 1137, 1139, 1150, 1151, 1160, 1175, 1177, 1188, 1189, 1199, 1206, 1207, 1217, 1218, 1228, 1236, 1237, 1238, 1239, 1249, 1251, 1262, 1270, 1271, 1272, 1273, 1283, 1285, 1296, 1304, 1305, 1306, 1307, 1317, 1319, 1329, 1336, 1337, 1347, 1348, 1358, 1366, 1367, 1368, 1369, 1379, 1381, 1390, 1397, 1398, 1408, 1409, 1418, 1425, 1426, 1436, 1437, 1446, 1453, 1454, 1464, 1465, 1475, 1483, 1484, 1485, 1486, 1496, 1498, 1508, 1515, 1516, 1526, 1527, 1537, 1545, 1546, 1547, 1548, 1558, 1560, 1570, 1577, 1578, 1588, 1589, 1806], "pore_s": [4, 6, 29, 30, 652, 703, 729], "0": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 62, 68, 94, 99, 126, 159, 192, 196, 224, 257, 290, 323, 351, 357, 390, 423, 455, 473, 501, 555, 566, 573, 578, 579, 580, 581, 582, 583, 584, 587, 590, 591, 647, 648, 652, 653, 654, 655, 656, 699, 703, 704, 705, 706, 723, 725, 729, 734, 735, 736, 737, 738, 741, 766, 782, 784, 790, 797, 801, 808, 829, 830, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 855, 856, 858, 859, 860, 861, 862, 872, 884, 894, 895, 897, 898, 899, 900, 901, 911, 923, 932, 933, 935, 936, 937, 938, 939, 949, 961, 965, 970, 971, 973, 974, 975, 976, 977, 987, 999, 1003, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1027, 1039, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1066, 1078, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1105, 1117, 1121, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1143, 1155, 1159, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1181, 1193, 1222, 1255, 1289, 1323, 1352, 1385, 1413, 1441, 1469, 1502, 1531, 1564, 1593, 1615, 1616, 1619, 1634, 1642, 1643, 1648, 1652, 1653, 1654, 1657, 1658, 1667, 1669, 1671, 1673, 1676, 1678, 1680, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1734, 1752, 1803], "5": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 555, 578, 579, 580, 581, 582, 583, 584, 590, 620, 635, 653, 656, 706, 730, 741, 759, 769, 801, 808, 835, 836, 837, 838, 840, 841, 842, 855, 856, 858, 859, 860, 861, 862, 872, 894, 895, 897, 898, 899, 900, 901, 911, 932, 933, 935, 936, 937, 938, 939, 949, 970, 971, 973, 974, 975, 976, 977, 987, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1027, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1066, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1105, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1143, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1181, 1619, 1803], "loc": [4, 6, 29, 30, 652, 654, 656, 703, 704, 706, 729, 734, 741], "now": [4, 6, 7, 8, 10, 12, 13, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 652, 703, 729], "show_hist": 4, "glanc": 4, "histogram": [4, 6, 34, 733], "two": [4, 6, 11, 12, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 36, 99, 554, 555, 571, 601, 603, 647, 655, 705, 726, 738, 747, 752, 826, 835, 836, 858, 861, 862, 872, 897, 900, 901, 911, 935, 938, 939, 949, 973, 976, 977, 987, 1003, 1011, 1014, 1015, 1027, 1052, 1055, 1056, 1066, 1091, 1094, 1095, 1105, 1121, 1129, 1132, 1133, 1143, 1167, 1170, 1171, 1181, 1619, 1626, 1628, 1630, 1631, 1643, 1655, 1663, 1681, 1683, 1685, 1739, 1757, 1763, 1766, 1768, 1773], "more": [4, 5, 8, 13, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 51, 52, 53, 56, 60, 67, 76, 83, 84, 85, 88, 90, 93, 103, 110, 111, 112, 116, 120, 125, 136, 143, 144, 145, 148, 152, 158, 169, 176, 177, 178, 181, 185, 191, 196, 201, 208, 209, 210, 214, 218, 223, 234, 241, 242, 243, 246, 250, 256, 267, 274, 275, 276, 279, 283, 289, 300, 307, 308, 309, 312, 316, 322, 333, 340, 341, 342, 345, 349, 356, 367, 374, 375, 376, 379, 383, 389, 400, 407, 408, 409, 412, 416, 422, 433, 440, 441, 442, 445, 449, 454, 478, 479, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 542, 543, 556, 656, 706, 741, 835, 836, 851, 852, 857, 858, 861, 862, 871, 872, 873, 874, 877, 883, 888, 890, 891, 896, 897, 900, 901, 910, 911, 912, 913, 916, 922, 928, 929, 934, 935, 938, 939, 948, 949, 950, 951, 954, 960, 966, 967, 972, 973, 976, 977, 986, 987, 988, 989, 992, 998, 1004, 1005, 1010, 1011, 1014, 1015, 1026, 1027, 1028, 1029, 1032, 1038, 1045, 1046, 1051, 1052, 1055, 1056, 1065, 1066, 1067, 1068, 1071, 1077, 1084, 1085, 1090, 1091, 1094, 1095, 1104, 1105, 1106, 1107, 1110, 1116, 1122, 1123, 1128, 1129, 1132, 1133, 1142, 1143, 1144, 1145, 1148, 1154, 1160, 1161, 1166, 1167, 1170, 1171, 1180, 1181, 1182, 1183, 1186, 1192, 1199, 1200, 1203, 1210, 1211, 1212, 1215, 1221, 1228, 1229, 1233, 1242, 1243, 1244, 1247, 1254, 1262, 1263, 1267, 1276, 1277, 1278, 1281, 1288, 1296, 1297, 1301, 1310, 1311, 1312, 1315, 1322, 1329, 1330, 1333, 1340, 1341, 1342, 1345, 1351, 1358, 1359, 1363, 1372, 1373, 1374, 1377, 1384, 1390, 1391, 1394, 1401, 1402, 1403, 1406, 1412, 1418, 1419, 1422, 1429, 1430, 1431, 1434, 1440, 1446, 1447, 1450, 1457, 1458, 1459, 1462, 1468, 1475, 1476, 1480, 1489, 1490, 1491, 1494, 1501, 1508, 1509, 1512, 1519, 1520, 1521, 1524, 1530, 1537, 1538, 1542, 1551, 1552, 1553, 1556, 1563, 1570, 1571, 1574, 1581, 1582, 1583, 1586, 1592, 1626, 1630, 1631, 1633, 1690, 1763, 1786, 1791, 1807, 1808], "complex": [4, 26, 29, 30, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 494, 510, 877, 916, 954, 992, 1032, 1071, 1110, 1148, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586], "task": [4, 27], "permeabilti": 5, "note": [5, 6, 7, 8, 9, 11, 12, 13, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 51, 52, 53, 56, 60, 62, 64, 68, 83, 84, 85, 88, 90, 94, 99, 110, 111, 112, 116, 120, 126, 130, 143, 144, 145, 148, 152, 155, 159, 176, 177, 178, 181, 185, 188, 192, 196, 197, 208, 209, 210, 214, 218, 224, 241, 242, 243, 246, 250, 253, 257, 261, 274, 275, 276, 279, 283, 286, 290, 307, 308, 309, 312, 316, 319, 323, 340, 341, 342, 345, 349, 351, 353, 357, 374, 375, 376, 379, 383, 386, 390, 394, 407, 408, 409, 412, 416, 419, 423, 440, 441, 442, 445, 449, 455, 473, 478, 479, 489, 490, 491, 494, 496, 501, 507, 508, 509, 510, 530, 542, 543, 544, 554, 555, 556, 558, 559, 565, 566, 572, 574, 597, 602, 605, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 645, 648, 653, 656, 658, 660, 706, 713, 715, 716, 717, 718, 719, 720, 724, 736, 741, 759, 763, 766, 773, 782, 784, 786, 790, 797, 799, 801, 808, 811, 813, 814, 821, 822, 829, 830, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 849, 851, 852, 855, 856, 859, 861, 862, 865, 867, 871, 872, 873, 874, 877, 879, 884, 888, 890, 891, 894, 895, 898, 900, 901, 904, 906, 910, 911, 912, 913, 916, 918, 923, 927, 928, 929, 932, 933, 936, 938, 939, 942, 944, 948, 949, 950, 951, 954, 956, 961, 965, 966, 967, 970, 971, 974, 976, 977, 980, 982, 986, 987, 988, 989, 992, 994, 999, 1003, 1004, 1005, 1008, 1009, 1012, 1014, 1015, 1016, 1017, 1020, 1022, 1026, 1027, 1028, 1029, 1032, 1034, 1039, 1045, 1046, 1049, 1050, 1053, 1055, 1056, 1059, 1061, 1065, 1066, 1067, 1068, 1071, 1073, 1078, 1082, 1084, 1085, 1088, 1089, 1092, 1094, 1095, 1098, 1100, 1104, 1105, 1106, 1107, 1110, 1112, 1117, 1122, 1123, 1126, 1127, 1130, 1132, 1133, 1136, 1138, 1142, 1143, 1144, 1145, 1148, 1150, 1155, 1159, 1160, 1161, 1164, 1165, 1168, 1170, 1171, 1174, 1176, 1180, 1181, 1182, 1183, 1186, 1188, 1193, 1199, 1200, 1210, 1211, 1212, 1215, 1217, 1222, 1227, 1228, 1229, 1242, 1243, 1244, 1247, 1249, 1250, 1255, 1259, 1261, 1262, 1263, 1276, 1277, 1278, 1281, 1283, 1284, 1289, 1293, 1295, 1296, 1297, 1310, 1311, 1312, 1315, 1317, 1318, 1323, 1327, 1329, 1330, 1340, 1341, 1342, 1345, 1347, 1352, 1357, 1358, 1359, 1372, 1373, 1374, 1377, 1379, 1380, 1385, 1390, 1391, 1401, 1402, 1403, 1406, 1408, 1413, 1418, 1419, 1429, 1430, 1431, 1434, 1436, 1441, 1446, 1447, 1457, 1458, 1459, 1462, 1464, 1469, 1474, 1475, 1476, 1489, 1490, 1491, 1494, 1496, 1497, 1502, 1506, 1508, 1509, 1519, 1520, 1521, 1524, 1526, 1531, 1536, 1537, 1538, 1551, 1552, 1553, 1556, 1558, 1559, 1564, 1568, 1570, 1571, 1581, 1582, 1583, 1586, 1588, 1593, 1604, 1605, 1617, 1619, 1621, 1623, 1626, 1627, 1630, 1631, 1632, 1633, 1634, 1642, 1650, 1651, 1654, 1655, 1656, 1661, 1668, 1679, 1742, 1777, 1786, 1791, 1792, 1797, 1801, 1802], "calcualt": [5, 759], "an": [5, 7, 8, 9, 12, 13, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 50, 60, 64, 68, 71, 72, 79, 80, 82, 90, 94, 97, 106, 107, 109, 119, 120, 121, 123, 126, 129, 130, 139, 140, 142, 152, 155, 159, 162, 172, 173, 175, 185, 188, 192, 195, 197, 204, 205, 207, 218, 219, 221, 224, 227, 237, 238, 240, 250, 253, 257, 260, 261, 270, 271, 273, 283, 286, 290, 293, 303, 304, 306, 316, 319, 323, 326, 336, 337, 339, 348, 349, 353, 357, 360, 370, 371, 373, 382, 383, 386, 390, 393, 403, 404, 406, 415, 416, 419, 423, 426, 427, 436, 437, 439, 449, 455, 458, 459, 460, 465, 466, 468, 473, 476, 485, 486, 488, 501, 504, 525, 526, 530, 540, 553, 554, 555, 557, 558, 565, 566, 567, 568, 569, 570, 571, 572, 647, 648, 652, 655, 669, 678, 703, 705, 710, 713, 721, 724, 729, 730, 738, 739, 745, 752, 759, 762, 763, 780, 781, 782, 783, 803, 806, 807, 813, 829, 832, 833, 855, 856, 859, 860, 861, 866, 868, 870, 872, 884, 887, 894, 895, 898, 899, 900, 905, 907, 909, 911, 923, 926, 927, 932, 933, 936, 937, 938, 943, 945, 947, 949, 961, 964, 965, 970, 971, 974, 975, 976, 981, 983, 985, 987, 999, 1002, 1003, 1008, 1009, 1012, 1013, 1014, 1021, 1023, 1025, 1027, 1039, 1042, 1049, 1050, 1053, 1054, 1055, 1060, 1062, 1064, 1066, 1078, 1081, 1088, 1089, 1092, 1093, 1094, 1099, 1101, 1103, 1105, 1117, 1120, 1121, 1126, 1127, 1130, 1131, 1132, 1137, 1139, 1141, 1143, 1155, 1158, 1159, 1164, 1165, 1168, 1169, 1170, 1175, 1177, 1179, 1181, 1193, 1196, 1198, 1206, 1207, 1209, 1222, 1225, 1227, 1230, 1237, 1238, 1239, 1241, 1255, 1258, 1261, 1264, 1271, 1272, 1273, 1275, 1289, 1292, 1295, 1298, 1305, 1306, 1307, 1309, 1323, 1326, 1336, 1337, 1339, 1352, 1355, 1356, 1357, 1360, 1367, 1368, 1369, 1371, 1385, 1388, 1389, 1397, 1398, 1400, 1413, 1416, 1425, 1426, 1428, 1441, 1444, 1453, 1454, 1456, 1469, 1472, 1473, 1474, 1477, 1484, 1485, 1486, 1488, 1502, 1505, 1515, 1516, 1518, 1531, 1534, 1535, 1536, 1539, 1546, 1547, 1548, 1550, 1564, 1567, 1569, 1577, 1578, 1580, 1593, 1596, 1605, 1616, 1617, 1622, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1637, 1638, 1643, 1648, 1655, 1657, 1658, 1661, 1666, 1670, 1672, 1679, 1685, 1688, 1701, 1715, 1727, 1740, 1760, 1765, 1771, 1772, 1781, 1788, 1795, 1796, 1807, 1808, 1809], "extract": [5, 8, 9, 12, 18, 23, 26, 27, 29, 30, 34, 478, 542, 554, 555, 557, 558, 811, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1675, 1677, 1679, 1681, 1683, 1685, 1792], "from": [5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 22, 23, 26, 27, 28, 30, 31, 33, 34, 39, 45, 60, 61, 64, 70, 73, 77, 90, 91, 96, 100, 104, 120, 121, 122, 123, 128, 131, 137, 152, 153, 155, 161, 164, 170, 185, 186, 188, 194, 198, 202, 218, 219, 220, 221, 226, 229, 235, 250, 251, 253, 259, 262, 268, 283, 284, 286, 292, 295, 301, 316, 317, 319, 325, 328, 334, 349, 350, 353, 359, 362, 368, 383, 384, 386, 392, 395, 401, 416, 417, 419, 425, 428, 434, 449, 450, 457, 459, 461, 463, 475, 477, 480, 483, 498, 503, 511, 515, 517, 524, 526, 527, 532, 539, 554, 555, 558, 559, 566, 569, 570, 574, 650, 651, 652, 654, 656, 662, 663, 664, 666, 667, 701, 703, 704, 706, 713, 717, 718, 725, 728, 729, 734, 741, 757, 765, 770, 773, 777, 780, 783, 784, 799, 830, 833, 838, 850, 853, 863, 881, 886, 888, 889, 892, 902, 920, 925, 927, 930, 940, 958, 963, 968, 978, 996, 1001, 1006, 1016, 1017, 1018, 1036, 1041, 1044, 1047, 1057, 1075, 1080, 1083, 1086, 1096, 1114, 1119, 1124, 1134, 1152, 1157, 1159, 1162, 1172, 1190, 1195, 1201, 1204, 1219, 1224, 1231, 1234, 1236, 1250, 1252, 1257, 1265, 1268, 1270, 1284, 1286, 1291, 1299, 1302, 1304, 1318, 1320, 1325, 1331, 1334, 1349, 1354, 1361, 1364, 1366, 1380, 1382, 1387, 1392, 1395, 1410, 1415, 1417, 1420, 1423, 1438, 1443, 1448, 1451, 1466, 1471, 1473, 1478, 1481, 1483, 1497, 1499, 1504, 1510, 1513, 1528, 1533, 1535, 1540, 1543, 1545, 1559, 1561, 1566, 1572, 1575, 1590, 1595, 1605, 1616, 1620, 1622, 1623, 1631, 1642, 1651, 1659, 1660, 1661, 1662, 1665, 1668, 1670, 1672, 1675, 1677, 1679, 1681, 1683, 1685, 1691, 1693, 1700, 1703, 1705, 1714, 1716, 1717, 1719, 1726, 1728, 1730, 1733, 1748, 1751, 1761, 1764, 1765, 1772, 1777, 1778, 1779, 1782, 1786, 1787, 1794, 1797, 1798, 1803], "porespi": [5, 8, 9, 11, 557], "similar": [5, 7, 8, 9, 11, 12, 13, 23, 29, 31, 33, 670], "numpi": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 56, 59, 67, 88, 93, 116, 125, 148, 151, 158, 181, 184, 191, 214, 223, 246, 249, 256, 279, 282, 289, 312, 315, 322, 345, 348, 356, 379, 382, 389, 412, 415, 422, 445, 448, 454, 494, 500, 510, 512, 550, 644, 647, 648, 652, 653, 654, 655, 656, 660, 666, 672, 690, 695, 701, 703, 704, 705, 706, 709, 713, 716, 729, 730, 734, 738, 741, 747, 765, 786, 789, 790, 796, 797, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 833, 838, 846, 847, 859, 861, 877, 883, 898, 900, 916, 922, 936, 938, 954, 960, 974, 976, 992, 998, 1012, 1014, 1032, 1038, 1053, 1055, 1071, 1077, 1092, 1094, 1110, 1116, 1121, 1130, 1132, 1148, 1154, 1168, 1170, 1186, 1192, 1215, 1221, 1247, 1254, 1281, 1288, 1315, 1322, 1345, 1351, 1377, 1384, 1406, 1412, 1434, 1440, 1462, 1468, 1494, 1501, 1524, 1530, 1556, 1563, 1586, 1592, 1605, 1626, 1630, 1631, 1639, 1657, 1658, 1679, 1716, 1798, 1801, 1802, 1803, 1810], "np": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 52, 56, 60, 68, 69, 72, 84, 88, 90, 94, 95, 98, 99, 111, 116, 120, 126, 127, 130, 144, 148, 152, 159, 160, 163, 177, 181, 185, 192, 193, 196, 209, 214, 218, 224, 225, 228, 242, 246, 250, 257, 258, 261, 275, 279, 283, 290, 291, 294, 308, 312, 316, 323, 324, 327, 341, 345, 349, 357, 358, 361, 375, 379, 383, 390, 391, 394, 408, 412, 416, 423, 424, 427, 441, 445, 449, 455, 456, 460, 473, 474, 477, 478, 490, 494, 501, 502, 508, 510, 542, 648, 730, 745, 747, 803, 807, 838, 849, 851, 855, 856, 872, 873, 877, 884, 885, 888, 890, 894, 895, 911, 912, 916, 923, 924, 927, 928, 932, 933, 949, 950, 954, 961, 962, 965, 966, 970, 971, 987, 988, 992, 999, 1000, 1003, 1004, 1008, 1009, 1027, 1028, 1032, 1039, 1040, 1043, 1045, 1049, 1050, 1066, 1067, 1071, 1078, 1079, 1082, 1084, 1088, 1089, 1105, 1106, 1110, 1117, 1118, 1121, 1122, 1126, 1127, 1143, 1144, 1148, 1155, 1156, 1159, 1160, 1164, 1165, 1181, 1182, 1186, 1193, 1194, 1198, 1199, 1211, 1215, 1222, 1223, 1226, 1227, 1228, 1243, 1247, 1255, 1256, 1260, 1261, 1262, 1277, 1281, 1289, 1290, 1294, 1295, 1296, 1311, 1315, 1323, 1324, 1328, 1329, 1341, 1345, 1352, 1353, 1356, 1357, 1358, 1373, 1377, 1385, 1386, 1389, 1390, 1402, 1406, 1413, 1414, 1417, 1418, 1430, 1434, 1441, 1442, 1445, 1446, 1458, 1462, 1469, 1470, 1473, 1474, 1475, 1490, 1494, 1502, 1503, 1507, 1508, 1520, 1524, 1531, 1532, 1535, 1536, 1537, 1552, 1556, 1564, 1565, 1569, 1570, 1582, 1586, 1593, 1594, 1604, 1625, 1629, 1639, 1803], "set_mpl_styl": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34], "seed": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 21, 26, 27, 29, 30, 32, 33, 34, 578, 579, 580, 581, 582, 583, 584, 647, 648, 652, 654, 655, 656, 698, 699, 703, 704, 705, 706, 729, 734, 738, 741], "matplotlib": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 21, 26, 28, 29, 30, 33, 34, 531, 652, 654, 656, 703, 704, 706, 729, 734, 741], "inlin": [5, 7, 8, 9, 11, 12, 13, 21, 34], "set_printopt": [5, 7, 8, 9, 10, 11, 12, 13, 21], "precis": [5, 7, 8, 9, 10, 11, 12, 13, 21], "15": [5, 6, 8, 9, 11, 12, 13, 18, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34], "6": [5, 6, 8, 9, 11, 12, 13, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 587, 590, 832, 835, 836, 837, 840, 861, 872, 888, 900, 911, 938, 949, 976, 987, 1014, 1027, 1055, 1066, 1094, 1105, 1132, 1143, 1170, 1181, 1633, 1652], "add_model_collect": [5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 21, 29, 34], "collect": [5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 21, 34, 479, 543, 852, 891, 929, 967, 1005, 1046, 1085, 1123, 1161, 1200, 1229, 1263, 1297, 1330, 1359, 1391, 1419, 1447, 1476, 1509, 1538, 1571], "spheres_and_cylind": [5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 23, 29, 34], "regenerate_model": [5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 29, 31, 34, 459, 478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "assum": [5, 7, 8, 10, 11, 12, 13, 23, 25, 26, 28, 29, 30, 32, 33, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 650, 653, 658, 659, 660, 661, 662, 663, 664, 666, 667, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 701, 759, 784, 811, 813, 814, 835, 836, 838, 855, 888, 894, 927, 932, 970, 1008, 1017, 1049, 1088, 1126, 1164, 1615, 1620, 1643, 1648], "flowsthrough": 5, "porou": [5, 7, 8, 9, 10, 12, 13, 23, 26, 33, 35, 130, 1811], "medium": [5, 7, 9, 12, 13, 23, 832], "fluid": [5, 7, 8, 10, 12, 13, 20, 23, 32, 33, 99, 121, 123, 196, 219, 221, 811, 833], "ani": [5, 6, 8, 9, 17, 18, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 36, 44, 51, 52, 53, 56, 60, 67, 76, 83, 84, 85, 88, 90, 93, 103, 110, 111, 112, 116, 120, 121, 123, 125, 136, 143, 144, 145, 148, 152, 158, 169, 176, 177, 178, 181, 185, 191, 201, 208, 209, 210, 214, 218, 219, 221, 223, 234, 241, 242, 243, 246, 250, 256, 267, 274, 275, 276, 279, 283, 289, 300, 307, 308, 309, 312, 316, 322, 333, 340, 341, 342, 345, 349, 356, 367, 374, 375, 376, 379, 383, 389, 400, 407, 408, 409, 412, 416, 422, 433, 440, 441, 442, 445, 449, 454, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 555, 565, 566, 569, 574, 653, 730, 752, 753, 754, 755, 757, 759, 832, 857, 858, 861, 862, 871, 872, 873, 874, 877, 883, 888, 896, 897, 900, 901, 910, 911, 912, 913, 916, 922, 934, 935, 938, 939, 948, 949, 950, 951, 954, 960, 965, 972, 973, 976, 977, 986, 987, 988, 989, 992, 998, 1010, 1011, 1014, 1015, 1026, 1027, 1028, 1029, 1032, 1038, 1051, 1052, 1055, 1056, 1065, 1066, 1067, 1068, 1071, 1077, 1090, 1091, 1094, 1095, 1104, 1105, 1106, 1107, 1110, 1116, 1128, 1129, 1132, 1133, 1142, 1143, 1144, 1145, 1148, 1154, 1166, 1167, 1170, 1171, 1180, 1181, 1182, 1183, 1186, 1192, 1203, 1210, 1211, 1212, 1215, 1221, 1233, 1242, 1243, 1244, 1247, 1254, 1267, 1276, 1277, 1278, 1281, 1288, 1301, 1310, 1311, 1312, 1315, 1322, 1333, 1340, 1341, 1342, 1345, 1351, 1363, 1372, 1373, 1374, 1377, 1384, 1389, 1394, 1401, 1402, 1403, 1406, 1412, 1422, 1429, 1430, 1431, 1434, 1440, 1450, 1457, 1458, 1459, 1462, 1468, 1480, 1489, 1490, 1491, 1494, 1501, 1512, 1519, 1520, 1521, 1524, 1530, 1542, 1551, 1552, 1553, 1556, 1563, 1574, 1581, 1582, 1583, 1586, 1592, 1617, 1621, 1626, 1629, 1630, 1631, 1633, 1649, 1650, 1654, 1661, 1740, 1779, 1786, 1801, 1802, 1807, 1808], "other": [5, 6, 7, 8, 11, 12, 13, 17, 18, 23, 25, 27, 29, 31, 32, 33, 34, 60, 62, 90, 120, 121, 123, 152, 185, 218, 219, 221, 250, 283, 316, 349, 351, 383, 416, 449, 459, 478, 542, 550, 551, 565, 566, 571, 573, 574, 647, 651, 652, 654, 655, 656, 699, 702, 703, 704, 705, 706, 721, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 747, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 850, 851, 860, 865, 867, 889, 890, 899, 904, 906, 927, 928, 937, 942, 944, 966, 975, 980, 982, 1003, 1004, 1013, 1020, 1022, 1044, 1045, 1054, 1059, 1061, 1082, 1083, 1084, 1093, 1098, 1100, 1122, 1131, 1136, 1138, 1160, 1169, 1174, 1176, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1618, 1622, 1641, 1649, 1654, 1656, 1679, 1740, 1763, 1776, 1797], "To": [5, 6, 7, 8, 9, 10, 12, 13, 21, 23, 25, 28, 29, 31, 32, 33, 34, 36, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 494, 510, 565, 865, 867, 877, 904, 906, 916, 942, 944, 954, 980, 982, 992, 1003, 1020, 1022, 1032, 1059, 1061, 1071, 1098, 1100, 1110, 1136, 1138, 1148, 1174, 1176, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586, 1634, 1656, 1683, 1685], "hydraul": [5, 13, 32, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 811, 819, 824, 825, 826], "must": [5, 7, 8, 12, 13, 16, 20, 23, 25, 28, 29, 30, 31, 33, 63, 65, 68, 94, 126, 154, 156, 159, 187, 189, 192, 197, 221, 224, 252, 254, 257, 285, 287, 290, 318, 320, 323, 352, 354, 357, 385, 387, 390, 394, 418, 420, 423, 451, 452, 455, 473, 501, 558, 570, 573, 736, 759, 766, 790, 797, 801, 808, 835, 836, 838, 850, 859, 884, 898, 923, 936, 961, 974, 999, 1012, 1039, 1053, 1078, 1083, 1092, 1117, 1130, 1155, 1168, 1193, 1222, 1255, 1289, 1323, 1352, 1385, 1389, 1413, 1417, 1441, 1469, 1502, 1531, 1564, 1593, 1604, 1615, 1623, 1627, 1642, 1653, 1654, 1661, 1668, 1679, 1772, 1798], "here": [5, 6, 7, 8, 12, 13, 16, 17, 25, 26, 27, 28, 29, 30, 31, 34, 556, 713, 786, 835, 836, 872, 911, 949, 987, 1027, 1066, 1105, 1143, 1181, 1605, 1675, 1677], "basic": [5, 8, 9, 10, 12, 13, 16, 17, 25, 26, 27, 28, 31, 34, 348, 382, 415, 648, 781, 806, 814, 1238, 1272, 1306, 1368, 1485, 1547, 1796], "includ": [5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 51, 52, 53, 56, 60, 76, 83, 84, 85, 88, 90, 103, 110, 111, 112, 116, 120, 121, 123, 136, 143, 144, 145, 148, 152, 169, 176, 177, 178, 181, 185, 201, 208, 209, 210, 214, 218, 219, 221, 234, 241, 242, 243, 246, 250, 267, 274, 275, 276, 279, 283, 300, 307, 308, 309, 312, 316, 333, 340, 341, 342, 345, 349, 367, 374, 375, 376, 379, 383, 400, 407, 408, 409, 412, 416, 433, 440, 441, 442, 445, 449, 482, 489, 490, 491, 494, 506, 507, 508, 509, 510, 570, 574, 759, 809, 857, 860, 861, 871, 873, 874, 877, 896, 899, 900, 910, 912, 913, 916, 934, 937, 938, 948, 950, 951, 954, 972, 975, 976, 986, 988, 989, 992, 1010, 1013, 1014, 1026, 1028, 1029, 1032, 1051, 1054, 1055, 1065, 1067, 1068, 1071, 1090, 1093, 1094, 1104, 1106, 1107, 1110, 1128, 1131, 1132, 1142, 1144, 1145, 1148, 1166, 1169, 1170, 1180, 1182, 1183, 1186, 1203, 1210, 1211, 1212, 1215, 1233, 1242, 1243, 1244, 1247, 1267, 1276, 1277, 1278, 1281, 1301, 1310, 1311, 1312, 1315, 1333, 1340, 1341, 1342, 1345, 1363, 1372, 1373, 1374, 1377, 1394, 1401, 1402, 1403, 1406, 1422, 1429, 1430, 1431, 1434, 1450, 1457, 1458, 1459, 1462, 1480, 1489, 1490, 1491, 1494, 1512, 1519, 1520, 1521, 1524, 1542, 1551, 1552, 1553, 1556, 1574, 1581, 1582, 1583, 1586, 1632, 1786, 1791, 1807, 1808], "generic_hydraul": [5, 18, 32, 593, 594], "1": [5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 99, 197, 554, 555, 573, 587, 590, 597, 598, 600, 603, 607, 613, 622, 623, 628, 637, 638, 647, 648, 655, 656, 670, 699, 705, 706, 725, 735, 737, 738, 741, 759, 766, 769, 781, 782, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 813, 821, 822, 826, 829, 830, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 850, 855, 856, 858, 859, 860, 861, 862, 865, 872, 888, 889, 894, 895, 897, 898, 899, 900, 901, 904, 911, 927, 932, 933, 935, 936, 937, 938, 939, 942, 949, 970, 971, 973, 974, 975, 976, 977, 980, 987, 1003, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1020, 1027, 1044, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1059, 1066, 1083, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1098, 1105, 1121, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1136, 1143, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1174, 1181, 1238, 1272, 1306, 1368, 1485, 1547, 1615, 1616, 1617, 1619, 1620, 1621, 1625, 1632, 1639, 1642, 1650, 1654, 1655, 1657, 1658, 1659, 1661, 1662, 1679, 1683, 1685, 1716, 1728, 1736, 1754, 1803], "01": [5, 7, 9, 10, 11, 13, 29, 31, 34], "00": [5, 7, 8, 9, 10], "warn": [5, 6, 7, 9, 10, 11, 13, 34, 573, 1666, 1688, 1803], "entry_pressur": [5, 8, 33, 34, 593, 594], "wa": [5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 28, 29, 30, 31, 32, 33, 34, 68, 69, 94, 95, 126, 127, 159, 160, 192, 193, 224, 225, 257, 258, 290, 291, 323, 324, 357, 358, 390, 391, 423, 424, 455, 456, 459, 473, 474, 478, 501, 502, 542, 554, 571, 719, 851, 884, 885, 890, 923, 924, 928, 961, 962, 966, 999, 1000, 1004, 1039, 1040, 1045, 1078, 1079, 1084, 1117, 1118, 1122, 1155, 1156, 1160, 1193, 1194, 1199, 1222, 1223, 1228, 1255, 1256, 1262, 1289, 1290, 1296, 1323, 1324, 1329, 1352, 1353, 1358, 1385, 1386, 1390, 1413, 1414, 1418, 1441, 1442, 1446, 1469, 1470, 1475, 1502, 1503, 1508, 1531, 1532, 1537, 1564, 1565, 1570, 1593, 1594, 1632], "sinc": [5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 99, 496, 544, 555, 566, 763, 850, 861, 879, 888, 889, 900, 918, 938, 956, 976, 994, 1014, 1034, 1044, 1055, 1073, 1083, 1094, 1112, 1132, 1150, 1170, 1188, 1217, 1226, 1249, 1283, 1317, 1347, 1379, 1408, 1436, 1464, 1496, 1526, 1558, 1588, 1626, 1630, 1631, 1653, 1654, 1667, 1669, 1671, 1673, 1676, 1678, 1680, 1682, 1684, 1686, 1687, 1689, 1740], "miss": [5, 7, 10, 13, 28, 34, 829, 1653], "_model": [5, 7, 10, 13, 34], "py": [5, 7, 9, 10, 13, 34, 565, 1604], "480": [5, 7, 10, 13, 34], "surface_tens": [5, 12, 13, 31, 33, 34, 590, 591, 788, 813, 814, 828, 829, 830], "diffusive_conduct": [5, 8, 10, 12, 13, 20, 22, 593, 594, 811], "x": [5, 6, 7, 9, 11, 12, 13, 18, 20, 22, 23, 26, 27, 31, 38, 59, 130, 151, 163, 184, 228, 249, 261, 282, 294, 315, 327, 361, 394, 427, 448, 555, 648, 733, 828, 830, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 965, 1003, 1121, 1159, 1294, 1615, 1617, 1620, 1621, 1632, 1633, 1634, 1642, 1643, 1652, 1653, 1654, 1655, 1800, 1803], "direct": [5, 8, 9, 11, 12, 13, 15, 20, 27, 30, 33, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 459, 648, 713, 849, 861, 865, 888, 900, 904, 927, 938, 942, 976, 980, 1014, 1020, 1055, 1059, 1082, 1094, 1098, 1132, 1136, 1170, 1174, 1600, 1605, 1615, 1637, 1638, 1654], "constant": [5, 9, 22, 27, 50, 63, 65, 82, 109, 142, 154, 156, 175, 187, 189, 207, 240, 252, 254, 273, 285, 287, 306, 318, 320, 339, 352, 354, 373, 385, 387, 406, 418, 420, 439, 451, 452, 468, 478, 488, 542, 590, 591, 759, 786, 811, 835, 836, 851, 870, 890, 909, 928, 947, 966, 985, 1004, 1025, 1045, 1064, 1084, 1103, 1122, 1141, 1160, 1179, 1199, 1209, 1228, 1241, 1262, 1275, 1296, 1309, 1329, 1339, 1358, 1371, 1390, 1400, 1417, 1418, 1428, 1446, 1456, 1475, 1488, 1508, 1518, 1537, 1550, 1570, 1580], "side": [5, 9, 10, 11, 20, 23, 30, 32, 33, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 1605], "procedur": [5, 8, 9, 12, 13, 197], "y": [5, 9, 12, 13, 22, 26, 27, 31, 197, 550, 555, 733, 828, 838, 965, 1003, 1121, 1159, 1260, 1634, 1642, 1652, 1653, 1654], "z": [5, 9, 12, 13, 26, 31, 555, 781, 806, 965, 1003, 1121, 1159, 1238, 1272, 1306, 1368, 1485, 1547, 1615, 1624, 1634, 1642, 1651, 1652, 1653, 1654, 1657], "inlet": [5, 7, 8, 9, 11, 12, 13, 33, 34, 219, 1616, 1629, 1635, 1636, 1640, 1643, 1661], "outlet": [5, 7, 8, 9, 11, 12, 13, 33, 34, 99, 123, 197, 221, 1616, 1635, 1636, 1640, 1643], "updat": [5, 6, 7, 12, 13, 22, 28, 29, 34, 36, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 498, 511, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590, 1622, 1767, 1774], "soln": [5, 7, 32, 34, 59, 151, 184, 249, 282, 315, 448, 550, 835, 836], "solut": [5, 7, 22, 23, 33, 38, 59, 130, 151, 163, 184, 228, 249, 261, 282, 294, 315, 327, 348, 361, 382, 394, 415, 427, 448, 550, 770, 784, 835, 836, 1605], "dict": [5, 22, 27, 30, 31, 32, 55, 70, 72, 87, 96, 115, 128, 130, 147, 161, 180, 194, 213, 226, 245, 259, 261, 278, 292, 311, 325, 344, 359, 378, 392, 411, 425, 427, 444, 457, 459, 460, 470, 475, 479, 493, 503, 522, 524, 537, 539, 543, 553, 554, 555, 557, 562, 571, 652, 654, 656, 703, 704, 706, 725, 729, 734, 741, 745, 747, 752, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 778, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 807, 808, 828, 835, 836, 837, 839, 840, 841, 842, 843, 844, 849, 852, 876, 886, 888, 891, 915, 925, 929, 953, 963, 965, 967, 991, 1001, 1005, 1031, 1041, 1043, 1046, 1070, 1080, 1082, 1085, 1109, 1119, 1121, 1123, 1147, 1157, 1159, 1161, 1185, 1195, 1198, 1200, 1214, 1224, 1229, 1230, 1236, 1246, 1257, 1263, 1264, 1270, 1280, 1291, 1297, 1298, 1304, 1314, 1325, 1330, 1344, 1354, 1356, 1359, 1360, 1366, 1376, 1387, 1389, 1391, 1405, 1415, 1419, 1433, 1443, 1447, 1461, 1471, 1476, 1477, 1483, 1493, 1504, 1509, 1523, 1533, 1538, 1539, 1545, 1555, 1566, 1569, 1571, 1585, 1595, 1621, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1637, 1638, 1642, 1679, 1690, 1698, 1700, 1710, 1714, 1716, 1724, 1726, 1790, 1794, 1796, 1797, 1798, 1801, 1802, 1809, 1810], "quantiti": [5, 8, 16, 20, 22, 32, 34, 62, 351, 835, 836, 837, 839, 840, 841, 842, 843, 844], "kei": [5, 6, 15, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 45, 46, 47, 51, 54, 55, 57, 66, 70, 77, 78, 79, 83, 86, 87, 89, 92, 96, 104, 105, 106, 110, 114, 115, 117, 124, 128, 137, 138, 139, 143, 146, 147, 149, 157, 161, 170, 171, 172, 176, 179, 180, 182, 190, 194, 202, 203, 204, 208, 212, 213, 215, 222, 226, 235, 236, 237, 241, 244, 245, 247, 255, 259, 268, 269, 270, 274, 277, 278, 280, 288, 292, 301, 302, 303, 307, 310, 311, 313, 321, 325, 334, 335, 336, 340, 343, 344, 346, 355, 359, 368, 369, 370, 374, 377, 378, 380, 388, 392, 401, 402, 403, 407, 410, 411, 413, 421, 425, 434, 435, 436, 440, 443, 444, 446, 453, 457, 463, 464, 465, 469, 470, 471, 472, 475, 483, 484, 485, 489, 492, 493, 495, 499, 503, 507, 517, 518, 521, 522, 523, 524, 526, 532, 533, 536, 537, 538, 539, 569, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 650, 651, 652, 653, 654, 656, 658, 660, 663, 664, 665, 666, 667, 670, 674, 675, 676, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 699, 701, 702, 703, 704, 706, 708, 709, 710, 711, 715, 716, 717, 718, 719, 720, 725, 726, 727, 728, 729, 730, 731, 732, 734, 736, 739, 740, 741, 745, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 781, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 863, 864, 866, 871, 875, 876, 878, 882, 886, 888, 902, 903, 905, 910, 914, 915, 917, 921, 925, 940, 941, 943, 948, 952, 953, 955, 959, 963, 965, 978, 979, 981, 986, 990, 991, 993, 997, 1001, 1018, 1019, 1021, 1026, 1030, 1031, 1033, 1037, 1041, 1043, 1057, 1058, 1060, 1065, 1069, 1070, 1072, 1076, 1080, 1082, 1096, 1097, 1099, 1104, 1108, 1109, 1111, 1115, 1119, 1121, 1134, 1135, 1137, 1142, 1146, 1147, 1149, 1153, 1157, 1159, 1172, 1173, 1175, 1180, 1184, 1185, 1187, 1191, 1195, 1204, 1205, 1206, 1210, 1213, 1214, 1216, 1220, 1224, 1234, 1235, 1236, 1237, 1242, 1245, 1246, 1248, 1253, 1257, 1259, 1268, 1269, 1270, 1271, 1276, 1279, 1280, 1282, 1287, 1291, 1293, 1302, 1303, 1304, 1305, 1310, 1313, 1314, 1316, 1321, 1325, 1327, 1334, 1335, 1336, 1340, 1343, 1344, 1346, 1350, 1354, 1364, 1365, 1366, 1367, 1372, 1375, 1376, 1378, 1383, 1387, 1395, 1396, 1397, 1401, 1404, 1405, 1407, 1411, 1415, 1423, 1424, 1425, 1429, 1432, 1433, 1435, 1439, 1443, 1451, 1452, 1453, 1457, 1460, 1461, 1463, 1467, 1471, 1481, 1482, 1483, 1484, 1489, 1492, 1493, 1495, 1500, 1504, 1506, 1513, 1514, 1515, 1519, 1522, 1523, 1525, 1529, 1533, 1543, 1544, 1545, 1546, 1551, 1554, 1555, 1557, 1562, 1566, 1568, 1575, 1576, 1577, 1581, 1584, 1585, 1587, 1591, 1595, 1666, 1668, 1670, 1672, 1675, 1677, 1681, 1683, 1685, 1688, 1693, 1694, 1697, 1698, 1699, 1700, 1705, 1706, 1709, 1710, 1711, 1714, 1716, 1719, 1720, 1723, 1724, 1725, 1726, 1739, 1757, 1782, 1783, 1789, 1790, 1793, 1794, 1797, 1798, 1801, 1802, 1810], "e": [5, 8, 13, 16, 17, 18, 25, 27, 28, 29, 30, 31, 33, 36, 48, 57, 62, 70, 80, 89, 96, 107, 117, 128, 140, 149, 161, 173, 182, 194, 205, 215, 226, 238, 247, 259, 271, 280, 292, 304, 313, 325, 337, 346, 348, 351, 359, 371, 380, 382, 392, 404, 413, 415, 425, 437, 446, 457, 466, 471, 475, 478, 486, 495, 503, 524, 529, 530, 539, 542, 555, 569, 570, 597, 602, 605, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 631, 634, 638, 639, 641, 645, 647, 652, 654, 655, 656, 703, 704, 705, 706, 729, 733, 734, 738, 741, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 850, 851, 868, 878, 886, 888, 889, 890, 907, 917, 925, 928, 945, 955, 963, 966, 983, 993, 1001, 1003, 1004, 1023, 1033, 1041, 1044, 1045, 1062, 1072, 1080, 1082, 1083, 1084, 1101, 1111, 1119, 1122, 1139, 1149, 1157, 1160, 1177, 1187, 1195, 1199, 1207, 1216, 1224, 1226, 1228, 1239, 1248, 1257, 1259, 1262, 1273, 1282, 1291, 1293, 1296, 1307, 1316, 1325, 1327, 1329, 1337, 1346, 1354, 1358, 1369, 1378, 1387, 1390, 1398, 1407, 1415, 1418, 1426, 1435, 1443, 1446, 1454, 1463, 1471, 1475, 1486, 1495, 1504, 1506, 1508, 1516, 1525, 1533, 1537, 1548, 1557, 1566, 1568, 1570, 1578, 1587, 1595, 1605, 1622, 1640, 1643, 1668, 1670, 1677, 1683, 1700, 1714, 1726, 1739, 1757, 1763, 1766, 1773, 1775, 1781, 1788, 1794, 1806], "ndarrai": [5, 27, 31, 47, 48, 59, 68, 69, 79, 80, 94, 95, 106, 107, 119, 121, 123, 126, 127, 139, 140, 151, 159, 160, 172, 173, 184, 192, 193, 204, 205, 219, 221, 224, 225, 237, 238, 249, 257, 258, 270, 271, 282, 290, 291, 303, 304, 315, 323, 324, 336, 337, 348, 357, 358, 370, 371, 382, 390, 391, 403, 404, 415, 423, 424, 436, 437, 448, 455, 456, 465, 466, 473, 474, 485, 486, 501, 502, 550, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 648, 650, 651, 653, 656, 658, 660, 663, 664, 665, 666, 667, 670, 672, 674, 675, 676, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 699, 701, 702, 706, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 720, 724, 727, 728, 730, 732, 733, 736, 737, 739, 741, 745, 747, 762, 763, 764, 765, 766, 768, 769, 770, 773, 775, 777, 783, 784, 786, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 803, 804, 805, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 833, 846, 847, 858, 859, 866, 868, 884, 885, 897, 898, 905, 907, 923, 924, 935, 936, 943, 945, 961, 962, 973, 974, 981, 983, 999, 1000, 1011, 1012, 1021, 1023, 1039, 1040, 1052, 1053, 1060, 1062, 1078, 1079, 1091, 1092, 1099, 1101, 1117, 1118, 1129, 1130, 1137, 1139, 1155, 1156, 1167, 1168, 1175, 1177, 1193, 1194, 1206, 1207, 1222, 1223, 1227, 1237, 1238, 1239, 1255, 1256, 1259, 1261, 1271, 1272, 1273, 1289, 1290, 1293, 1295, 1305, 1306, 1307, 1323, 1324, 1327, 1336, 1337, 1352, 1353, 1357, 1367, 1368, 1369, 1385, 1386, 1397, 1398, 1413, 1414, 1425, 1426, 1441, 1442, 1453, 1454, 1469, 1470, 1474, 1484, 1485, 1486, 1502, 1503, 1506, 1515, 1516, 1531, 1532, 1536, 1546, 1547, 1548, 1564, 1565, 1568, 1577, 1578, 1593, 1594, 1605, 1617, 1619, 1620, 1622, 1625, 1627, 1628, 1629, 1631, 1632, 1637, 1638, 1639, 1642, 1651, 1652, 1653, 1654, 1655, 1661, 1804], "last": [5, 11, 25, 27, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 470, 493, 522, 537, 855, 876, 894, 915, 932, 953, 970, 991, 1008, 1031, 1049, 1070, 1088, 1109, 1126, 1147, 1164, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585, 1698, 1710, 1724, 1736, 1754, 1790], "cell": [5, 6, 11, 25, 29, 33, 34, 648, 849, 1082, 1159], "abov": [5, 6, 7, 11, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 723, 1633, 1652, 1677, 1786, 1791], "new": [5, 6, 8, 16, 17, 18, 20, 22, 25, 27, 28, 29, 30, 31, 33, 36, 45, 77, 104, 137, 170, 196, 202, 235, 268, 301, 334, 368, 401, 434, 463, 483, 517, 532, 648, 759, 786, 863, 902, 940, 978, 1018, 1057, 1096, 1134, 1172, 1204, 1234, 1268, 1302, 1334, 1364, 1395, 1423, 1451, 1481, 1513, 1543, 1575, 1616, 1618, 1619, 1623, 1650, 1652, 1654, 1656, 1670, 1672, 1683, 1685, 1693, 1705, 1719, 1742, 1763, 1766, 1773, 1775, 1781, 1782, 1788], "comput": [5, 15, 22, 23, 27, 28, 30, 31, 32, 33, 34, 35, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 478, 486, 496, 542, 544, 554, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 678, 759, 763, 764, 781, 782, 783, 788, 789, 803, 806, 807, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 833, 846, 847, 851, 868, 879, 890, 907, 918, 928, 945, 956, 966, 983, 994, 1004, 1023, 1034, 1045, 1062, 1073, 1084, 1101, 1112, 1122, 1139, 1150, 1160, 1177, 1188, 1199, 1207, 1217, 1226, 1228, 1239, 1249, 1262, 1273, 1283, 1296, 1307, 1317, 1329, 1337, 1347, 1358, 1369, 1379, 1390, 1398, 1408, 1418, 1426, 1436, 1446, 1454, 1464, 1473, 1475, 1486, 1496, 1508, 1516, 1526, 1535, 1537, 1548, 1558, 1570, 1578, 1588, 1604, 1639, 1661], "visul": 5, "ax": [5, 6, 7, 8, 9, 18, 26, 28, 29, 30, 33, 34, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 531, 1599, 1601, 1603, 1604, 1605, 1607, 1609, 1611, 1613, 1621], "plot_connect": [5, 6, 8, 18, 26, 28, 33, 34], "plot_coordin": [5, 8, 9, 18, 26, 28, 33, 34], "color_bi": [5, 8, 9, 18, 26, 33, 34], "k_": [5, 13], "ab": [5, 8, 9, 12, 13, 20, 622], "frac": [5, 7, 8, 9, 10, 12, 13, 20, 22, 23, 32, 622, 637, 786, 814, 826, 830, 835, 836], "delta": [5, 8, 20, 23, 32, 130, 622, 637], "where": [5, 7, 10, 12, 13, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 56, 60, 61, 62, 63, 64, 65, 67, 68, 69, 88, 90, 91, 93, 94, 95, 116, 120, 122, 125, 126, 127, 148, 152, 153, 154, 155, 156, 158, 159, 160, 181, 185, 186, 187, 188, 189, 191, 192, 193, 214, 218, 220, 223, 224, 225, 246, 250, 251, 252, 253, 254, 256, 257, 258, 279, 283, 284, 285, 286, 287, 289, 290, 291, 312, 316, 317, 318, 319, 320, 322, 323, 324, 345, 349, 350, 351, 352, 353, 354, 356, 357, 358, 379, 383, 384, 385, 386, 387, 389, 390, 391, 412, 416, 417, 418, 419, 420, 422, 423, 424, 445, 449, 450, 451, 452, 454, 455, 456, 459, 473, 474, 478, 494, 498, 500, 501, 502, 510, 511, 512, 542, 555, 559, 601, 603, 653, 736, 757, 821, 822, 826, 830, 835, 836, 850, 851, 860, 861, 862, 877, 881, 883, 884, 885, 889, 890, 899, 900, 901, 916, 920, 922, 923, 924, 928, 937, 938, 939, 954, 958, 960, 961, 962, 966, 975, 976, 977, 992, 996, 998, 999, 1000, 1004, 1013, 1014, 1015, 1032, 1036, 1038, 1039, 1040, 1044, 1045, 1054, 1055, 1056, 1071, 1075, 1077, 1078, 1079, 1083, 1084, 1093, 1094, 1095, 1110, 1114, 1116, 1117, 1118, 1122, 1131, 1132, 1133, 1148, 1152, 1154, 1155, 1156, 1160, 1169, 1170, 1171, 1186, 1190, 1192, 1193, 1194, 1199, 1215, 1219, 1221, 1222, 1223, 1228, 1230, 1247, 1252, 1254, 1255, 1256, 1262, 1264, 1281, 1286, 1288, 1289, 1290, 1296, 1298, 1315, 1320, 1322, 1323, 1324, 1329, 1345, 1349, 1351, 1352, 1353, 1358, 1360, 1377, 1382, 1384, 1385, 1386, 1390, 1406, 1410, 1412, 1413, 1414, 1418, 1434, 1438, 1440, 1441, 1442, 1446, 1462, 1466, 1468, 1469, 1470, 1473, 1475, 1477, 1494, 1499, 1501, 1502, 1503, 1508, 1524, 1528, 1530, 1531, 1532, 1535, 1537, 1539, 1556, 1561, 1563, 1564, 1565, 1570, 1586, 1590, 1592, 1593, 1594, 1604, 1623, 1654, 1803], "area": [5, 9, 11, 23, 32, 554, 622, 637, 641, 642, 643, 644, 645, 648, 658, 659, 660, 661, 674, 675, 676, 701, 708, 709, 710, 711, 717, 811, 819, 826, 835, 836, 888, 1635, 1636], "distanc": [5, 11, 29, 648, 653, 719, 747, 748, 749, 750, 752, 756, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1615, 1616, 1650], "between": [5, 6, 7, 10, 11, 18, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 459, 551, 566, 678, 712, 713, 718, 719, 726, 735, 748, 749, 756, 835, 836, 849, 888, 927, 1003, 1017, 1082, 1121, 1618, 1619, 1628, 1632, 1633, 1634, 1638, 1801, 1802], "differ": [5, 8, 11, 12, 20, 21, 23, 25, 26, 27, 29, 31, 32, 34, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 558, 569, 571, 582, 596, 647, 653, 655, 705, 738, 759, 811, 826, 835, 836, 1003, 1159, 1605, 1773, 1774], "were": [5, 6, 9, 11, 17, 21, 25, 26, 28, 29, 30, 31, 50, 82, 99, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 468, 488, 718, 752, 858, 860, 862, 870, 897, 899, 901, 909, 935, 937, 939, 947, 973, 975, 977, 985, 1011, 1013, 1015, 1025, 1052, 1054, 1056, 1064, 1091, 1093, 1095, 1103, 1129, 1131, 1133, 1141, 1167, 1169, 1171, 1179, 1209, 1241, 1275, 1309, 1339, 1371, 1400, 1428, 1456, 1488, 1518, 1550, 1580, 1618, 1622], "have": [5, 6, 8, 12, 13, 15, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 44, 60, 64, 76, 90, 103, 120, 136, 152, 155, 169, 185, 188, 201, 218, 234, 250, 253, 267, 283, 286, 300, 316, 319, 333, 349, 353, 367, 383, 386, 400, 416, 419, 433, 449, 482, 506, 559, 596, 610, 625, 653, 679, 759, 850, 857, 858, 861, 862, 872, 889, 896, 897, 900, 901, 911, 934, 935, 938, 939, 949, 972, 973, 976, 977, 987, 1010, 1011, 1014, 1015, 1027, 1044, 1051, 1052, 1055, 1056, 1066, 1083, 1090, 1091, 1094, 1095, 1105, 1121, 1128, 1129, 1132, 1133, 1143, 1166, 1167, 1170, 1171, 1181, 1203, 1233, 1267, 1301, 1333, 1363, 1394, 1422, 1450, 1480, 1512, 1542, 1574, 1621, 1626, 1630, 1631, 1746, 1768], "simplifi": [5, 23], "nbval_ignore_output": [5, 9], "mode": [5, 6, 7, 9, 12, 13, 15, 18, 28, 29, 31, 33, 36, 44, 48, 50, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 67, 76, 80, 82, 83, 84, 85, 88, 90, 91, 93, 103, 107, 109, 110, 111, 112, 116, 120, 121, 122, 123, 125, 136, 140, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 169, 173, 175, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 201, 205, 207, 208, 209, 210, 214, 218, 219, 220, 221, 223, 234, 238, 240, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 256, 267, 271, 273, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 300, 304, 306, 307, 308, 309, 312, 314, 316, 317, 318, 319, 320, 322, 333, 337, 339, 340, 341, 342, 345, 347, 349, 350, 351, 352, 353, 354, 356, 367, 371, 373, 374, 375, 376, 379, 381, 383, 384, 385, 386, 387, 389, 400, 404, 406, 407, 408, 409, 412, 414, 416, 417, 418, 419, 420, 422, 433, 437, 439, 440, 441, 442, 445, 447, 449, 450, 451, 452, 454, 466, 468, 482, 486, 488, 489, 490, 491, 494, 498, 500, 506, 507, 508, 509, 510, 511, 512, 578, 579, 580, 581, 582, 583, 584, 651, 698, 699, 702, 727, 728, 781, 806, 828, 829, 830, 832, 857, 858, 861, 862, 868, 870, 871, 872, 873, 874, 877, 881, 883, 896, 897, 900, 901, 907, 909, 910, 911, 912, 913, 916, 920, 922, 934, 935, 938, 939, 945, 947, 948, 949, 950, 951, 954, 958, 960, 972, 973, 976, 977, 983, 985, 986, 987, 988, 989, 992, 996, 998, 1010, 1011, 1014, 1015, 1023, 1025, 1026, 1027, 1028, 1029, 1032, 1036, 1038, 1051, 1052, 1055, 1056, 1062, 1064, 1065, 1066, 1067, 1068, 1071, 1075, 1077, 1090, 1091, 1094, 1095, 1101, 1103, 1104, 1105, 1106, 1107, 1110, 1114, 1116, 1128, 1129, 1132, 1133, 1139, 1141, 1142, 1143, 1144, 1145, 1148, 1152, 1154, 1166, 1167, 1170, 1171, 1177, 1179, 1180, 1181, 1182, 1183, 1186, 1190, 1192, 1203, 1207, 1209, 1210, 1211, 1212, 1215, 1219, 1221, 1233, 1238, 1239, 1241, 1242, 1243, 1244, 1247, 1252, 1254, 1267, 1272, 1273, 1275, 1276, 1277, 1278, 1281, 1286, 1288, 1301, 1306, 1307, 1309, 1310, 1311, 1312, 1315, 1320, 1322, 1333, 1337, 1339, 1340, 1341, 1342, 1345, 1349, 1351, 1363, 1368, 1369, 1371, 1372, 1373, 1374, 1377, 1382, 1384, 1394, 1398, 1400, 1401, 1402, 1403, 1406, 1410, 1412, 1422, 1426, 1428, 1429, 1430, 1431, 1434, 1438, 1440, 1450, 1454, 1456, 1457, 1458, 1459, 1462, 1466, 1468, 1480, 1485, 1486, 1488, 1489, 1490, 1491, 1494, 1499, 1501, 1512, 1516, 1518, 1519, 1520, 1521, 1524, 1528, 1530, 1542, 1547, 1548, 1550, 1551, 1552, 1553, 1556, 1561, 1563, 1574, 1578, 1580, 1581, 1582, 1583, 1586, 1590, 1592, 1618, 1656], "group": [5, 9, 12, 13, 22, 36, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 554, 558, 1619], "topotool": [5, 9, 11, 18, 26, 28, 888, 1651], "get_domain_area": [5, 9, 11], "get_domain_length": [5, 9, 11], "delta_p": 5, "print": [5, 6, 7, 8, 9, 11, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 513, 566, 567, 858, 859, 860, 861, 862, 872, 897, 898, 899, 900, 901, 911, 935, 936, 937, 938, 939, 949, 973, 974, 975, 976, 977, 987, 1011, 1012, 1013, 1014, 1015, 1027, 1052, 1053, 1054, 1055, 1056, 1066, 1091, 1092, 1093, 1094, 1095, 1105, 1121, 1129, 1130, 1131, 1132, 1133, 1143, 1167, 1168, 1169, 1170, 1171, 1181, 1473, 1535, 1683, 1685, 1716, 1728, 1740, 1801, 1802], "f": [5, 6, 8, 9, 11, 21, 22, 29, 31, 33, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 475, 503, 524, 539, 567, 570, 759, 835, 836, 886, 925, 963, 1001, 1041, 1080, 1119, 1157, 1195, 1224, 1257, 1291, 1325, 1354, 1387, 1415, 1443, 1471, 1504, 1533, 1566, 1595, 1700, 1714, 1726, 1794], "98e": 5, "12": [5, 6, 8, 18, 22, 26, 27, 28, 29, 30, 32, 33, 590], "1000": [5, 21, 652, 703, 729, 828, 829, 830, 1602, 1604, 1608, 1610], "2f": [5, 9, 11], "md": 5, "03": [5, 31, 34], "attempt": [5, 8, 9, 11, 18, 27, 31, 32, 64, 155, 188, 253, 286, 319, 353, 386, 419, 1417], "estim": [5, 9, 10, 11, 21, 31, 769, 770], "low": [5, 9, 11, 29, 647, 655, 705, 738, 786, 1230, 1264, 1298, 1360, 1477, 1539], "_topotool": [5, 9, 11], "1033": [5, 9], "length": [5, 6, 7, 8, 9, 11, 18, 20, 23, 25, 26, 28, 32, 56, 60, 67, 68, 69, 88, 90, 93, 94, 95, 116, 120, 125, 126, 127, 148, 152, 158, 159, 160, 181, 185, 191, 192, 193, 214, 218, 223, 224, 225, 246, 250, 256, 257, 258, 279, 283, 289, 290, 291, 312, 316, 322, 323, 324, 345, 349, 356, 357, 358, 379, 383, 389, 390, 391, 412, 416, 422, 423, 424, 445, 449, 454, 455, 456, 473, 474, 478, 494, 500, 501, 502, 510, 512, 542, 554, 555, 571, 578, 579, 580, 581, 582, 583, 584, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 622, 637, 647, 650, 651, 652, 654, 655, 656, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 715, 716, 717, 718, 719, 720, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 747, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 828, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 851, 859, 872, 877, 883, 884, 885, 888, 890, 898, 911, 916, 922, 923, 924, 928, 936, 949, 954, 960, 961, 962, 966, 974, 987, 992, 998, 999, 1000, 1004, 1012, 1027, 1032, 1038, 1039, 1040, 1045, 1053, 1066, 1071, 1077, 1078, 1079, 1084, 1092, 1105, 1110, 1116, 1117, 1118, 1122, 1130, 1143, 1148, 1154, 1155, 1156, 1160, 1168, 1181, 1186, 1192, 1193, 1194, 1199, 1215, 1221, 1222, 1223, 1228, 1247, 1254, 1255, 1256, 1262, 1281, 1288, 1289, 1290, 1296, 1315, 1322, 1323, 1324, 1329, 1345, 1351, 1352, 1353, 1358, 1377, 1384, 1385, 1386, 1390, 1406, 1412, 1413, 1414, 1418, 1434, 1440, 1441, 1442, 1446, 1462, 1468, 1469, 1470, 1475, 1494, 1501, 1502, 1503, 1508, 1524, 1530, 1531, 1532, 1537, 1556, 1563, 1564, 1565, 1570, 1586, 1592, 1593, 1594, 1627, 1629, 1636, 1643, 1656], "could": [5, 8, 9, 11, 18, 20, 22, 27, 29, 31, 33, 718, 719, 1016, 1017], "1077": [5, 9], "ad": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 22, 25, 26, 27, 30, 33, 36, 61, 91, 122, 153, 186, 196, 220, 251, 261, 284, 317, 348, 350, 382, 384, 415, 417, 450, 459, 477, 478, 498, 511, 541, 542, 550, 595, 652, 665, 703, 719, 729, 850, 851, 881, 889, 890, 920, 928, 958, 966, 996, 1004, 1036, 1043, 1044, 1045, 1075, 1083, 1084, 1114, 1122, 1152, 1160, 1190, 1199, 1219, 1228, 1252, 1262, 1286, 1296, 1320, 1329, 1349, 1358, 1382, 1390, 1410, 1418, 1438, 1446, 1466, 1475, 1499, 1508, 1528, 1537, 1561, 1570, 1590, 1616, 1618, 1619, 1623, 1633, 1649, 1786, 1796], "07": [5, 8, 13], "method": [5, 6, 8, 10, 11, 16, 22, 23, 26, 27, 29, 31, 33, 34, 38, 59, 60, 70, 72, 90, 96, 98, 120, 128, 130, 151, 152, 161, 163, 184, 185, 194, 196, 197, 218, 226, 228, 249, 250, 259, 261, 282, 283, 292, 294, 315, 316, 325, 327, 349, 359, 361, 383, 392, 394, 416, 425, 427, 448, 449, 457, 459, 460, 475, 477, 503, 505, 524, 526, 539, 541, 549, 565, 574, 652, 654, 656, 703, 704, 706, 717, 729, 734, 741, 763, 764, 786, 793, 795, 832, 849, 855, 856, 865, 867, 872, 886, 888, 894, 895, 904, 906, 911, 925, 927, 932, 933, 942, 944, 949, 963, 965, 970, 971, 980, 982, 987, 1001, 1003, 1008, 1009, 1017, 1020, 1022, 1027, 1041, 1043, 1049, 1050, 1059, 1061, 1066, 1080, 1082, 1088, 1089, 1098, 1100, 1105, 1119, 1121, 1126, 1127, 1136, 1138, 1143, 1157, 1159, 1164, 1165, 1174, 1176, 1181, 1195, 1198, 1224, 1226, 1227, 1250, 1257, 1259, 1260, 1261, 1284, 1291, 1293, 1294, 1295, 1318, 1325, 1327, 1328, 1354, 1356, 1357, 1380, 1387, 1389, 1415, 1417, 1443, 1445, 1471, 1473, 1474, 1497, 1504, 1506, 1507, 1533, 1535, 1536, 1559, 1566, 1568, 1569, 1595, 1598, 1600, 1602, 1604, 1605, 1606, 1608, 1610, 1612, 1615, 1619, 1625, 1633, 1644, 1650, 1651, 1656, 1657, 1658, 1664, 1667, 1669, 1670, 1672, 1674, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1687, 1689, 1690, 1700, 1702, 1714, 1726, 1759, 1777, 1794, 1797, 1801, 1802, 1807], "base": [5, 6, 7, 12, 18, 21, 23, 26, 29, 31, 33, 34, 36, 555, 566, 651, 699, 702, 723, 724, 726, 727, 728, 730, 731, 732, 735, 736, 737, 739, 740, 777, 801, 832, 833, 835, 836, 965, 1003, 1159, 1598, 1600, 1602, 1605, 1634, 1661, 1668, 1672, 1674, 1675, 1677, 1679, 1681, 1683, 1685, 1796, 1797, 1807, 1808], "scipi": [5, 7, 20, 27, 28, 33, 36, 652, 654, 656, 703, 704, 706, 729, 734, 741, 855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164, 1610, 1612, 1617, 1620, 1622, 1627, 1632, 1655, 1659, 1662], "convexhul": 5, "approxim": [5, 11, 13, 23, 31, 620, 635], "both": [5, 10, 12, 15, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 51, 57, 83, 89, 110, 117, 143, 149, 176, 182, 208, 215, 241, 247, 274, 280, 307, 313, 340, 346, 374, 380, 407, 413, 440, 446, 471, 489, 495, 507, 755, 759, 769, 832, 835, 836, 871, 878, 910, 917, 948, 955, 986, 993, 1026, 1033, 1065, 1072, 1104, 1111, 1142, 1149, 1180, 1187, 1210, 1216, 1242, 1248, 1276, 1282, 1310, 1316, 1340, 1346, 1372, 1378, 1401, 1407, 1429, 1435, 1457, 1463, 1489, 1495, 1519, 1525, 1551, 1557, 1581, 1587, 1620, 1626, 1630, 1631, 1643, 1655, 1661, 1766], "without": [5, 16, 18, 29, 30, 31, 32, 33, 653, 1121, 1649, 1650, 1670, 1672], "necessarili": [5, 15], "locat": [5, 6, 8, 11, 18, 20, 22, 25, 26, 27, 28, 29, 31, 32, 33, 44, 51, 52, 53, 56, 60, 61, 63, 64, 65, 67, 69, 76, 83, 84, 85, 88, 90, 91, 93, 95, 103, 110, 111, 112, 116, 120, 121, 122, 123, 125, 127, 136, 143, 144, 145, 148, 152, 153, 154, 155, 156, 158, 160, 169, 176, 177, 178, 181, 185, 186, 187, 188, 189, 191, 193, 201, 208, 209, 210, 214, 218, 219, 220, 221, 223, 225, 234, 241, 242, 243, 246, 250, 251, 252, 253, 254, 256, 258, 267, 274, 275, 276, 279, 283, 284, 285, 286, 287, 289, 291, 300, 307, 308, 309, 312, 316, 317, 318, 319, 320, 322, 324, 333, 340, 341, 342, 345, 349, 350, 352, 353, 354, 356, 358, 367, 374, 375, 376, 379, 383, 384, 385, 386, 387, 389, 391, 400, 407, 408, 409, 412, 416, 417, 418, 419, 420, 422, 424, 433, 440, 441, 442, 445, 449, 450, 451, 452, 454, 456, 459, 474, 478, 479, 482, 489, 490, 491, 494, 497, 498, 500, 502, 506, 507, 508, 509, 510, 511, 512, 542, 543, 545, 554, 558, 653, 718, 719, 769, 849, 851, 852, 855, 856, 857, 858, 865, 867, 871, 873, 874, 877, 880, 881, 883, 885, 890, 891, 894, 895, 896, 897, 904, 906, 910, 912, 913, 916, 919, 920, 922, 924, 927, 928, 929, 932, 933, 934, 935, 942, 944, 948, 950, 951, 954, 957, 958, 960, 962, 966, 967, 970, 971, 972, 973, 980, 982, 986, 988, 989, 992, 995, 996, 998, 1000, 1004, 1005, 1008, 1009, 1010, 1011, 1020, 1022, 1026, 1028, 1029, 1032, 1035, 1036, 1038, 1040, 1045, 1046, 1049, 1050, 1051, 1052, 1059, 1061, 1065, 1067, 1068, 1071, 1074, 1075, 1077, 1079, 1082, 1084, 1085, 1088, 1089, 1090, 1091, 1098, 1100, 1104, 1106, 1107, 1110, 1113, 1114, 1116, 1118, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1136, 1138, 1142, 1144, 1145, 1148, 1151, 1152, 1154, 1156, 1160, 1161, 1164, 1165, 1166, 1167, 1174, 1176, 1180, 1182, 1183, 1186, 1189, 1190, 1192, 1194, 1199, 1200, 1203, 1210, 1211, 1212, 1215, 1218, 1219, 1221, 1223, 1228, 1229, 1230, 1233, 1242, 1243, 1244, 1247, 1251, 1252, 1254, 1256, 1262, 1263, 1264, 1267, 1276, 1277, 1278, 1281, 1285, 1286, 1288, 1290, 1296, 1297, 1298, 1301, 1310, 1311, 1312, 1315, 1319, 1320, 1322, 1324, 1329, 1330, 1333, 1340, 1341, 1342, 1345, 1348, 1349, 1351, 1353, 1358, 1359, 1360, 1363, 1372, 1373, 1374, 1377, 1381, 1382, 1384, 1386, 1390, 1391, 1394, 1401, 1402, 1403, 1406, 1409, 1410, 1412, 1414, 1418, 1419, 1422, 1429, 1430, 1431, 1434, 1437, 1438, 1440, 1442, 1446, 1447, 1450, 1457, 1458, 1459, 1462, 1465, 1466, 1468, 1470, 1475, 1476, 1477, 1480, 1489, 1490, 1491, 1494, 1498, 1499, 1501, 1503, 1508, 1509, 1512, 1519, 1520, 1521, 1524, 1527, 1528, 1530, 1532, 1537, 1538, 1539, 1542, 1551, 1552, 1553, 1556, 1560, 1561, 1563, 1565, 1570, 1571, 1574, 1581, 1582, 1583, 1586, 1589, 1590, 1592, 1594, 1615, 1622, 1625, 1627, 1650], "almost": [5, 23, 25, 28, 29], "flat": [5, 567, 1728, 1799], "plane": [5, 11, 601, 603], "ha": [5, 6, 7, 8, 14, 15, 16, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 70, 76, 96, 103, 128, 136, 161, 169, 194, 201, 226, 234, 259, 267, 292, 300, 325, 333, 359, 367, 392, 400, 425, 433, 457, 459, 475, 477, 482, 503, 506, 524, 530, 539, 601, 603, 640, 763, 826, 835, 836, 855, 856, 857, 886, 894, 895, 896, 925, 932, 933, 934, 963, 970, 971, 972, 1001, 1008, 1009, 1010, 1041, 1049, 1050, 1051, 1080, 1088, 1089, 1090, 1119, 1121, 1126, 1127, 1128, 1157, 1164, 1165, 1166, 1195, 1203, 1224, 1226, 1233, 1257, 1260, 1267, 1291, 1294, 1301, 1325, 1333, 1354, 1363, 1387, 1394, 1415, 1422, 1443, 1450, 1471, 1473, 1480, 1504, 1512, 1533, 1535, 1542, 1566, 1574, 1595, 1661, 1668, 1700, 1714, 1716, 1726, 1728, 1760, 1794, 1807, 1808], "spheric": [5, 11, 23, 26, 29, 32, 34, 663, 666, 678, 715, 716, 717, 718, 719, 720, 965, 1634, 1642, 1658], "cylindr": [5, 11, 23, 26, 32, 620, 635, 675, 709, 716, 718, 719, 811, 814, 829, 965, 1634, 1642], "each": [5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 48, 58, 60, 63, 65, 79, 80, 90, 106, 107, 120, 139, 140, 150, 152, 154, 156, 172, 173, 183, 185, 187, 189, 204, 205, 218, 219, 221, 237, 238, 248, 250, 252, 254, 270, 271, 281, 283, 285, 287, 303, 304, 314, 316, 318, 320, 336, 337, 347, 349, 352, 354, 370, 371, 381, 383, 385, 387, 403, 404, 414, 416, 418, 420, 436, 437, 447, 449, 451, 452, 459, 465, 466, 478, 485, 486, 526, 542, 555, 558, 571, 607, 620, 622, 635, 637, 647, 648, 653, 655, 678, 705, 733, 738, 744, 745, 746, 748, 749, 752, 756, 759, 763, 768, 769, 770, 777, 778, 781, 782, 783, 788, 792, 794, 803, 806, 807, 832, 833, 849, 850, 851, 855, 856, 858, 859, 860, 861, 862, 865, 866, 867, 868, 872, 888, 889, 890, 894, 895, 897, 898, 899, 900, 901, 904, 905, 906, 907, 911, 927, 928, 932, 933, 935, 936, 937, 938, 939, 942, 943, 944, 945, 949, 966, 970, 971, 973, 974, 975, 976, 977, 980, 981, 982, 983, 987, 1003, 1004, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1027, 1044, 1045, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1066, 1082, 1083, 1084, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1098, 1099, 1100, 1101, 1105, 1121, 1122, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1138, 1139, 1143, 1159, 1160, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1181, 1199, 1206, 1207, 1227, 1228, 1230, 1236, 1237, 1239, 1261, 1262, 1264, 1270, 1271, 1273, 1295, 1296, 1298, 1304, 1305, 1307, 1329, 1336, 1337, 1357, 1358, 1360, 1366, 1367, 1369, 1390, 1397, 1398, 1418, 1425, 1426, 1446, 1453, 1454, 1474, 1475, 1477, 1483, 1484, 1486, 1508, 1515, 1516, 1536, 1537, 1539, 1545, 1546, 1548, 1570, 1577, 1578, 1617, 1618, 1619, 1621, 1626, 1627, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1641, 1642, 1648, 1651, 1653, 1654, 1655, 1656, 1661, 1679, 1728, 1739, 1757, 1792, 1797, 1798, 1801, 1802], "necessari": [5, 7, 17, 22, 23, 27, 29, 33, 647, 651, 652, 654, 655, 656, 699, 702, 703, 704, 705, 706, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 1656, 1786, 1809], "accordingli": [5, 1622], "These": [5, 8, 12, 15, 18, 25, 26, 27, 28, 29, 31, 33, 34, 65, 156, 189, 254, 287, 320, 354, 387, 420, 452, 554, 595, 838, 849, 859, 898, 936, 974, 1012, 1053, 1082, 1092, 1121, 1130, 1168, 1623], "altern": [5, 25, 31, 835, 836], "choos": [5, 8, 12], "hydraulic_size_factor": [5, 6, 8, 18, 23, 27, 29, 32, 578, 579, 580, 581, 582, 583, 584, 824, 825], "For": [5, 6, 8, 11, 12, 13, 15, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452, 459, 478, 542, 656, 706, 741, 759, 835, 836, 851, 888, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1417, 1418, 1446, 1475, 1508, 1537, 1570, 1615, 1633, 1650, 1743], "inform": [5, 6, 8, 10, 12, 15, 25, 27, 28, 31, 32, 33, 479, 543, 656, 706, 741, 828, 852, 891, 929, 967, 1005, 1046, 1085, 1123, 1161, 1200, 1229, 1263, 1297, 1330, 1359, 1391, 1419, 1447, 1476, 1509, 1538, 1571, 1786, 1791, 1801, 1802], "see": [5, 13, 15, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 61, 62, 63, 65, 91, 122, 153, 154, 156, 186, 187, 189, 220, 251, 252, 254, 284, 285, 287, 317, 318, 320, 350, 351, 352, 354, 384, 385, 387, 417, 418, 420, 450, 451, 452, 478, 479, 498, 511, 542, 543, 556, 566, 773, 821, 822, 851, 852, 881, 890, 891, 920, 928, 929, 958, 966, 967, 996, 1004, 1005, 1036, 1045, 1046, 1075, 1084, 1085, 1114, 1122, 1123, 1152, 1160, 1161, 1190, 1199, 1200, 1219, 1228, 1229, 1252, 1262, 1263, 1286, 1296, 1297, 1320, 1329, 1330, 1349, 1358, 1359, 1382, 1390, 1391, 1410, 1418, 1419, 1438, 1446, 1447, 1466, 1475, 1476, 1499, 1508, 1509, 1528, 1537, 1538, 1561, 1570, 1571, 1590, 1625, 1634, 1670, 1672, 1786, 1791], "notebook": [5, 8, 15, 16, 20, 21, 22, 23, 24, 26, 31, 32, 33], "show": [6, 7, 8, 9, 10, 26, 27, 28, 29, 31, 33, 34, 652, 654, 656, 703, 704, 706, 729, 730, 734, 741], "your": [6, 17, 18, 29, 30, 36], "veri": [6, 10, 17, 20, 25, 26, 27, 28, 29, 30, 32, 196, 759, 786, 861, 862, 900, 901, 938, 939, 976, 977, 1014, 1015, 1055, 1056, 1094, 1095, 1132, 1133, 1170, 1171, 1630, 1631, 1663], "own": [6, 15, 18, 26, 29, 30, 788, 789], "custom": [6, 7, 15, 16, 25, 651, 699, 702, 727, 728, 730, 1743], "describ": [6, 20, 22, 23, 27, 28, 29, 30, 813, 829, 927], "calcul": [6, 7, 10, 21, 23, 30, 34, 58, 130, 150, 183, 228, 248, 281, 314, 347, 381, 414, 427, 447, 530, 566, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 640, 641, 642, 643, 644, 645, 647, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 745, 758, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 811, 813, 814, 816, 817, 818, 819, 821, 822, 824, 825, 826, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 888, 1226, 1230, 1264, 1298, 1360, 1389, 1477, 1539], "next": [6, 8, 10, 12, 13, 15, 26, 27, 29, 33, 34, 196, 725], "add": [6, 7, 8, 11, 15, 16, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 35, 60, 61, 62, 63, 64, 65, 90, 91, 120, 121, 122, 123, 152, 153, 154, 155, 156, 185, 186, 187, 188, 189, 218, 219, 220, 221, 250, 251, 252, 253, 254, 283, 284, 285, 286, 287, 316, 317, 318, 319, 320, 349, 350, 351, 352, 353, 354, 383, 384, 385, 386, 387, 416, 417, 418, 419, 420, 449, 450, 451, 452, 459, 478, 479, 498, 505, 511, 542, 543, 652, 703, 729, 850, 851, 852, 881, 889, 890, 891, 920, 928, 929, 958, 966, 967, 996, 1004, 1005, 1036, 1044, 1045, 1046, 1075, 1083, 1084, 1085, 1114, 1122, 1123, 1152, 1160, 1161, 1190, 1199, 1200, 1219, 1227, 1228, 1229, 1252, 1261, 1262, 1263, 1286, 1295, 1296, 1297, 1320, 1329, 1330, 1349, 1357, 1358, 1359, 1382, 1389, 1390, 1391, 1410, 1418, 1419, 1438, 1446, 1447, 1466, 1474, 1475, 1476, 1499, 1508, 1509, 1528, 1536, 1537, 1538, 1561, 1570, 1571, 1590, 1616, 1618, 1623, 1649, 1690], "might": [6, 15, 26, 27, 28, 31, 32, 550, 573, 718, 719, 724, 861, 862, 900, 901, 938, 939, 976, 977, 1014, 1015, 1055, 1056, 1094, 1095, 1132, 1133, 1170, 1171, 1626, 1630, 1631, 1633, 1656, 1777], "our": [6, 8, 15, 18, 20, 22, 23, 25, 26, 29, 31, 33, 36], "pyplot": [6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 26, 28, 29, 30, 33, 34, 652, 654, 656, 703, 704, 706, 729, 734, 741], "plt": [6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 26, 28, 29, 30, 33, 34, 652, 654, 656, 703, 704, 706, 729, 734, 741], "spst": [6, 29], "lattic": [6, 10, 849, 888, 889, 927, 1044, 1082], "given": [6, 7, 12, 13, 16, 17, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 50, 51, 52, 53, 54, 56, 58, 60, 61, 63, 64, 65, 67, 69, 74, 76, 82, 83, 84, 85, 86, 88, 90, 91, 93, 95, 101, 103, 109, 110, 111, 112, 114, 116, 120, 121, 122, 123, 125, 127, 132, 136, 142, 143, 144, 145, 146, 148, 150, 152, 153, 154, 155, 156, 158, 160, 165, 169, 175, 176, 177, 178, 179, 181, 183, 185, 186, 187, 188, 189, 191, 193, 199, 201, 207, 208, 209, 210, 212, 214, 217, 218, 219, 220, 221, 223, 225, 230, 234, 240, 241, 242, 243, 244, 246, 248, 250, 251, 252, 253, 254, 256, 258, 263, 267, 273, 274, 275, 276, 277, 279, 281, 283, 284, 285, 286, 287, 289, 291, 296, 300, 306, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 322, 324, 329, 333, 339, 340, 341, 342, 343, 345, 347, 349, 350, 352, 353, 354, 356, 358, 363, 367, 373, 374, 375, 376, 377, 379, 381, 383, 384, 385, 386, 387, 389, 391, 396, 400, 406, 407, 408, 409, 410, 412, 414, 416, 417, 418, 419, 420, 422, 424, 429, 433, 439, 440, 441, 442, 443, 445, 447, 449, 450, 451, 452, 454, 456, 459, 468, 469, 474, 478, 482, 488, 489, 490, 491, 492, 494, 496, 498, 500, 502, 506, 507, 508, 509, 510, 511, 512, 521, 536, 542, 544, 553, 558, 559, 561, 566, 567, 569, 573, 574, 652, 653, 654, 656, 703, 704, 706, 723, 724, 729, 730, 731, 732, 733, 734, 735, 736, 740, 741, 766, 773, 777, 780, 782, 790, 797, 801, 808, 814, 828, 832, 833, 835, 836, 837, 839, 840, 841, 842, 843, 844, 849, 850, 851, 857, 858, 860, 861, 862, 870, 871, 872, 873, 874, 875, 877, 879, 881, 883, 885, 888, 889, 890, 896, 897, 899, 900, 901, 909, 910, 911, 912, 913, 914, 916, 918, 920, 922, 924, 927, 928, 934, 935, 937, 938, 939, 947, 948, 949, 950, 951, 952, 954, 956, 958, 960, 962, 965, 966, 972, 973, 975, 976, 977, 985, 986, 987, 988, 989, 990, 992, 994, 996, 998, 1000, 1004, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1034, 1036, 1038, 1040, 1043, 1044, 1045, 1051, 1052, 1054, 1055, 1056, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1073, 1075, 1077, 1079, 1082, 1083, 1084, 1090, 1091, 1093, 1094, 1095, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1114, 1116, 1118, 1121, 1122, 1128, 1129, 1131, 1132, 1133, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1150, 1152, 1154, 1156, 1159, 1160, 1166, 1167, 1169, 1170, 1171, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1190, 1192, 1194, 1199, 1203, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1219, 1221, 1223, 1227, 1228, 1233, 1238, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1252, 1254, 1256, 1259, 1261, 1262, 1267, 1272, 1275, 1276, 1277, 1278, 1279, 1281, 1283, 1284, 1286, 1288, 1290, 1293, 1295, 1296, 1301, 1306, 1309, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1320, 1322, 1324, 1327, 1329, 1333, 1339, 1340, 1341, 1342, 1343, 1345, 1347, 1349, 1351, 1353, 1356, 1357, 1358, 1363, 1368, 1371, 1372, 1373, 1374, 1375, 1377, 1379, 1380, 1382, 1384, 1386, 1390, 1394, 1400, 1401, 1402, 1403, 1404, 1406, 1408, 1410, 1412, 1414, 1417, 1418, 1422, 1428, 1429, 1430, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1446, 1450, 1456, 1457, 1458, 1459, 1460, 1462, 1464, 1466, 1468, 1470, 1474, 1475, 1480, 1485, 1488, 1489, 1490, 1491, 1492, 1494, 1496, 1497, 1499, 1501, 1503, 1506, 1508, 1512, 1518, 1519, 1520, 1521, 1522, 1524, 1526, 1528, 1530, 1532, 1536, 1537, 1542, 1547, 1550, 1551, 1552, 1553, 1554, 1556, 1558, 1559, 1561, 1563, 1565, 1568, 1570, 1574, 1580, 1581, 1582, 1583, 1584, 1586, 1588, 1590, 1592, 1594, 1599, 1601, 1603, 1607, 1609, 1611, 1613, 1615, 1616, 1617, 1620, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1639, 1640, 1641, 1642, 1643, 1649, 1650, 1652, 1653, 1654, 1655, 1659, 1661, 1662, 1670, 1672, 1679, 1681, 1683, 1685, 1697, 1709, 1723, 1739, 1740, 1742, 1757, 1788, 1789, 1791, 1799, 1809], "yet": [6, 22, 27, 36, 478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1797], "onli": [6, 7, 10, 12, 13, 14, 16, 17, 18, 23, 26, 27, 28, 29, 30, 31, 32, 33, 44, 50, 51, 52, 53, 56, 67, 76, 82, 83, 84, 85, 88, 93, 103, 109, 110, 111, 112, 116, 123, 125, 136, 142, 143, 144, 145, 148, 158, 169, 175, 176, 177, 178, 181, 191, 201, 207, 208, 209, 210, 214, 223, 234, 240, 241, 242, 243, 246, 256, 267, 273, 274, 275, 276, 279, 289, 300, 306, 307, 308, 309, 312, 322, 333, 339, 340, 341, 342, 345, 356, 367, 373, 374, 375, 376, 379, 389, 400, 406, 407, 408, 409, 412, 422, 433, 439, 440, 441, 442, 445, 454, 468, 478, 482, 488, 489, 490, 491, 494, 496, 500, 506, 507, 508, 509, 510, 512, 529, 542, 544, 559, 565, 573, 574, 597, 602, 605, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 631, 634, 638, 639, 641, 645, 648, 711, 759, 763, 784, 832, 835, 836, 851, 855, 856, 857, 858, 861, 862, 865, 867, 870, 871, 872, 873, 874, 877, 879, 883, 888, 890, 894, 895, 896, 897, 900, 901, 904, 906, 909, 910, 911, 912, 913, 916, 918, 922, 928, 932, 933, 934, 935, 938, 939, 942, 944, 947, 948, 949, 950, 951, 954, 956, 960, 966, 970, 971, 972, 973, 976, 977, 980, 982, 985, 986, 987, 988, 989, 992, 994, 998, 1004, 1008, 1009, 1010, 1011, 1014, 1015, 1020, 1022, 1025, 1026, 1027, 1028, 1029, 1032, 1034, 1038, 1045, 1049, 1050, 1051, 1052, 1055, 1056, 1059, 1061, 1064, 1065, 1066, 1067, 1068, 1071, 1073, 1077, 1084, 1088, 1089, 1090, 1091, 1094, 1095, 1098, 1100, 1103, 1104, 1105, 1106, 1107, 1110, 1112, 1116, 1122, 1126, 1127, 1128, 1129, 1132, 1133, 1136, 1138, 1141, 1142, 1143, 1144, 1145, 1148, 1150, 1154, 1160, 1164, 1165, 1166, 1167, 1170, 1171, 1174, 1176, 1179, 1180, 1181, 1182, 1183, 1186, 1188, 1192, 1199, 1203, 1209, 1210, 1211, 1212, 1215, 1217, 1221, 1226, 1228, 1233, 1241, 1242, 1243, 1244, 1247, 1249, 1254, 1262, 1267, 1275, 1276, 1277, 1278, 1281, 1283, 1288, 1296, 1301, 1309, 1310, 1311, 1312, 1315, 1317, 1322, 1329, 1333, 1339, 1340, 1341, 1342, 1345, 1347, 1351, 1358, 1363, 1371, 1372, 1373, 1374, 1377, 1379, 1384, 1390, 1394, 1400, 1401, 1402, 1403, 1406, 1408, 1412, 1418, 1422, 1428, 1429, 1430, 1431, 1434, 1436, 1440, 1446, 1450, 1456, 1457, 1458, 1459, 1462, 1464, 1468, 1475, 1480, 1488, 1489, 1490, 1491, 1494, 1496, 1501, 1508, 1512, 1518, 1519, 1520, 1521, 1524, 1526, 1530, 1537, 1542, 1550, 1551, 1552, 1553, 1556, 1558, 1563, 1570, 1574, 1580, 1581, 1582, 1583, 1586, 1588, 1592, 1618, 1626, 1630, 1631, 1640, 1651, 1679, 1683, 1685, 1728, 1740, 1797, 1801, 1802], "dictat": [6, 20, 33, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 478, 486, 542, 851, 868, 890, 907, 928, 945, 966, 983, 1004, 1023, 1045, 1062, 1084, 1101, 1122, 1139, 1160, 1177, 1199, 1207, 1228, 1239, 1262, 1273, 1296, 1307, 1329, 1337, 1358, 1369, 1390, 1398, 1418, 1426, 1446, 1454, 1475, 1486, 1508, 1516, 1537, 1548, 1570, 1578], "upper": [6, 27, 28, 29, 735, 855, 865, 894, 904, 932, 942, 970, 980, 1008, 1020, 1049, 1059, 1088, 1098, 1126, 1136, 1164, 1174, 1620, 1645, 1647, 1659, 1662], "limit": [6, 10, 13, 15, 23, 25, 26, 29, 33, 653, 723, 735, 832, 1656], "don": [6, 8, 10, 11, 15, 17, 18, 23, 29, 36], "want": [6, 8, 15, 16, 20, 25, 28, 29, 30, 32, 36, 1619, 1803], "exce": [6, 33], "overlap": [6, 28, 29, 30, 653, 718, 719], "neighbor": [6, 7, 20, 23, 29, 33, 48, 80, 99, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 486, 646, 648, 651, 653, 658, 659, 660, 661, 699, 702, 727, 728, 746, 748, 749, 849, 858, 860, 861, 862, 868, 872, 888, 897, 899, 900, 901, 907, 911, 935, 937, 938, 939, 945, 949, 973, 975, 976, 977, 983, 987, 1003, 1011, 1013, 1014, 1015, 1023, 1027, 1052, 1054, 1055, 1056, 1062, 1066, 1082, 1091, 1093, 1094, 1095, 1101, 1105, 1129, 1131, 1132, 1133, 1139, 1143, 1167, 1169, 1170, 1171, 1177, 1181, 1207, 1239, 1273, 1307, 1337, 1369, 1398, 1426, 1454, 1486, 1516, 1548, 1578, 1624, 1626, 1630, 1631, 1650, 1654], "caus": [6, 18, 29, 33, 1650], "paradox": [6, 653], "neg": [6, 29, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 1620], "ll": [6, 15, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33], "larg": [6, 17, 18, 20, 28, 29, 33, 718, 719, 861, 862, 900, 901, 938, 939, 976, 977, 1014, 1015, 1016, 1017, 1055, 1056, 1094, 1095, 1132, 1133, 1170, 1171, 1630, 1631], "do": [6, 7, 8, 12, 13, 18, 23, 25, 27, 28, 29, 30, 31, 32, 33, 64, 155, 188, 253, 286, 319, 353, 386, 419, 759, 1765], "need": [6, 8, 10, 11, 12, 13, 15, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 459, 555, 759, 811, 1616, 1627], "express": [6, 23, 27, 32], "scientif": [6, 25], "notat": [6, 20, 23, 29, 30], "below": [6, 8, 10, 11, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 553, 723, 747, 752, 759, 1652, 1656], "25": [6, 18, 29, 30, 31, 32, 33, 35, 119, 861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170, 1803], "under": [6, 8, 22, 23, 29, 541, 569, 1675, 1677, 1681, 1797], "fig": [6, 7, 8, 9, 28, 29, 30, 654, 704, 734], "readi": [6, 8, 14, 20, 22, 35], "dictionari": [6, 15, 22, 28, 29, 30, 31, 32, 33, 45, 46, 47, 57, 66, 77, 78, 79, 89, 92, 104, 105, 106, 117, 124, 137, 138, 139, 149, 157, 170, 171, 172, 182, 190, 202, 203, 204, 215, 222, 235, 236, 237, 247, 255, 268, 269, 270, 280, 288, 301, 302, 303, 313, 321, 334, 335, 336, 346, 355, 368, 369, 370, 380, 388, 401, 402, 403, 413, 421, 434, 435, 436, 446, 453, 459, 460, 463, 464, 465, 471, 472, 479, 483, 484, 485, 495, 499, 517, 518, 523, 526, 532, 533, 538, 543, 553, 554, 555, 557, 569, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 650, 651, 652, 653, 654, 656, 658, 660, 663, 664, 665, 666, 667, 670, 674, 675, 676, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 699, 701, 702, 703, 704, 706, 708, 709, 710, 711, 715, 716, 717, 718, 719, 720, 726, 727, 728, 729, 730, 731, 732, 734, 736, 739, 740, 741, 762, 763, 764, 765, 766, 768, 769, 770, 773, 775, 777, 781, 784, 786, 788, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 828, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 852, 863, 864, 866, 878, 882, 891, 902, 903, 905, 917, 921, 929, 940, 941, 943, 955, 959, 967, 978, 979, 981, 993, 997, 1005, 1018, 1019, 1021, 1033, 1037, 1046, 1057, 1058, 1060, 1072, 1076, 1085, 1096, 1097, 1099, 1111, 1115, 1123, 1134, 1135, 1137, 1149, 1153, 1161, 1172, 1173, 1175, 1187, 1191, 1200, 1204, 1205, 1206, 1216, 1220, 1227, 1229, 1234, 1235, 1236, 1237, 1248, 1253, 1259, 1261, 1263, 1268, 1269, 1270, 1271, 1282, 1287, 1293, 1295, 1297, 1302, 1303, 1304, 1305, 1316, 1321, 1327, 1330, 1334, 1335, 1336, 1346, 1350, 1357, 1359, 1364, 1365, 1366, 1367, 1378, 1383, 1391, 1395, 1396, 1397, 1407, 1411, 1419, 1423, 1424, 1425, 1435, 1439, 1447, 1451, 1452, 1453, 1463, 1467, 1474, 1476, 1481, 1482, 1483, 1484, 1495, 1500, 1506, 1509, 1513, 1514, 1515, 1525, 1529, 1536, 1538, 1543, 1544, 1545, 1546, 1557, 1562, 1568, 1571, 1575, 1576, 1577, 1587, 1591, 1624, 1626, 1627, 1628, 1630, 1631, 1632, 1637, 1638, 1642, 1670, 1672, 1683, 1685, 1690, 1693, 1694, 1699, 1705, 1706, 1711, 1719, 1720, 1725, 1777, 1782, 1783, 1793, 1796, 1797, 1798, 1801, 1802, 1809, 1810], "contain": [6, 8, 10, 14, 16, 17, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 47, 48, 50, 51, 56, 57, 67, 68, 79, 80, 82, 83, 88, 89, 93, 94, 99, 106, 107, 109, 110, 116, 117, 125, 126, 139, 140, 142, 143, 148, 149, 158, 159, 172, 173, 175, 176, 181, 182, 191, 192, 204, 205, 207, 208, 214, 215, 223, 224, 237, 238, 240, 241, 246, 247, 256, 257, 270, 271, 273, 274, 279, 280, 289, 290, 303, 304, 306, 307, 312, 313, 322, 323, 336, 337, 339, 340, 345, 346, 348, 356, 357, 370, 371, 373, 374, 379, 380, 382, 389, 390, 403, 404, 406, 407, 412, 413, 415, 422, 423, 436, 437, 439, 440, 445, 446, 454, 455, 459, 465, 466, 468, 471, 473, 485, 486, 488, 489, 494, 495, 500, 501, 507, 510, 512, 526, 531, 547, 551, 553, 555, 558, 559, 565, 566, 569, 570, 571, 572, 573, 574, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 670, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 725, 727, 728, 729, 730, 732, 734, 736, 737, 739, 741, 742, 745, 747, 758, 762, 763, 764, 765, 766, 768, 769, 770, 773, 775, 777, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 828, 832, 833, 835, 836, 837, 839, 840, 841, 842, 843, 844, 846, 847, 855, 856, 858, 859, 860, 861, 862, 866, 868, 870, 871, 877, 878, 883, 884, 894, 895, 897, 898, 899, 900, 901, 905, 907, 909, 910, 916, 917, 922, 923, 932, 933, 935, 936, 937, 938, 939, 943, 945, 947, 948, 954, 955, 960, 961, 970, 971, 973, 974, 975, 976, 977, 981, 983, 985, 986, 992, 993, 998, 999, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1021, 1023, 1025, 1026, 1032, 1033, 1038, 1039, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1060, 1062, 1064, 1065, 1071, 1072, 1077, 1078, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1099, 1101, 1103, 1104, 1110, 1111, 1116, 1117, 1121, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1139, 1141, 1142, 1148, 1149, 1154, 1155, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1175, 1177, 1179, 1180, 1186, 1187, 1192, 1193, 1206, 1207, 1209, 1210, 1215, 1216, 1221, 1222, 1230, 1237, 1239, 1241, 1242, 1247, 1248, 1254, 1255, 1264, 1271, 1273, 1275, 1276, 1281, 1282, 1288, 1289, 1298, 1305, 1307, 1309, 1310, 1315, 1316, 1322, 1323, 1336, 1337, 1339, 1340, 1345, 1346, 1351, 1352, 1360, 1367, 1369, 1371, 1372, 1377, 1378, 1384, 1385, 1397, 1398, 1400, 1401, 1406, 1407, 1412, 1413, 1425, 1426, 1428, 1429, 1434, 1435, 1440, 1441, 1453, 1454, 1456, 1457, 1462, 1463, 1468, 1469, 1477, 1484, 1486, 1488, 1489, 1494, 1495, 1501, 1502, 1515, 1516, 1518, 1519, 1524, 1525, 1530, 1531, 1539, 1546, 1548, 1550, 1551, 1556, 1557, 1563, 1564, 1577, 1578, 1580, 1581, 1586, 1587, 1592, 1593, 1597, 1614, 1617, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1635, 1636, 1637, 1638, 1639, 1655, 1657, 1658, 1661, 1663, 1716, 1728, 1740, 1742, 1769, 1770, 1777, 1787, 1792, 1797, 1801, 1802], "everyth": [6, 8], "pro": 6, "tip": 6, "rememb": 6, "treat": [6, 22, 219, 221, 505, 1003, 1626, 1630, 1631, 1642, 1661], "list": [6, 16, 18, 22, 27, 28, 29, 30, 31, 33, 40, 44, 51, 52, 53, 56, 57, 60, 61, 67, 74, 76, 83, 84, 85, 88, 89, 90, 91, 93, 101, 103, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 132, 136, 143, 144, 145, 148, 149, 152, 153, 158, 165, 169, 176, 177, 178, 181, 182, 185, 186, 191, 196, 199, 201, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 230, 234, 241, 242, 243, 246, 247, 250, 251, 256, 263, 267, 274, 275, 276, 279, 280, 283, 284, 289, 296, 300, 307, 308, 309, 312, 313, 316, 317, 322, 329, 333, 340, 341, 342, 345, 346, 349, 350, 356, 363, 367, 374, 375, 376, 379, 380, 383, 384, 389, 396, 400, 407, 408, 409, 412, 413, 416, 417, 422, 429, 433, 440, 441, 442, 445, 446, 449, 450, 454, 471, 482, 489, 490, 491, 494, 495, 496, 498, 500, 506, 507, 508, 509, 510, 511, 512, 530, 544, 555, 566, 568, 569, 570, 571, 573, 574, 613, 623, 628, 638, 647, 648, 655, 705, 725, 736, 737, 738, 740, 752, 759, 770, 773, 777, 814, 828, 849, 850, 857, 858, 859, 860, 861, 862, 871, 873, 874, 877, 878, 879, 881, 883, 888, 889, 896, 897, 898, 899, 900, 901, 910, 912, 913, 916, 917, 918, 920, 922, 927, 934, 935, 936, 937, 938, 939, 948, 950, 951, 954, 955, 956, 958, 960, 965, 972, 973, 974, 975, 976, 977, 986, 988, 989, 992, 993, 994, 996, 998, 1003, 1010, 1011, 1012, 1013, 1014, 1015, 1026, 1028, 1029, 1032, 1033, 1034, 1036, 1038, 1043, 1044, 1051, 1052, 1053, 1054, 1055, 1056, 1065, 1067, 1068, 1071, 1072, 1073, 1075, 1077, 1082, 1083, 1090, 1091, 1092, 1093, 1094, 1095, 1104, 1106, 1107, 1110, 1111, 1112, 1114, 1116, 1121, 1128, 1129, 1130, 1131, 1132, 1133, 1142, 1144, 1145, 1148, 1149, 1150, 1152, 1154, 1159, 1166, 1167, 1168, 1169, 1170, 1171, 1180, 1182, 1183, 1186, 1187, 1188, 1190, 1192, 1203, 1210, 1211, 1212, 1215, 1216, 1217, 1219, 1221, 1230, 1233, 1242, 1243, 1244, 1247, 1248, 1249, 1252, 1254, 1264, 1267, 1276, 1277, 1278, 1281, 1282, 1283, 1286, 1288, 1298, 1301, 1310, 1311, 1312, 1315, 1316, 1317, 1320, 1322, 1333, 1340, 1341, 1342, 1345, 1346, 1347, 1349, 1351, 1356, 1360, 1363, 1372, 1373, 1374, 1377, 1378, 1379, 1382, 1384, 1394, 1401, 1402, 1403, 1406, 1407, 1408, 1410, 1412, 1422, 1429, 1430, 1431, 1434, 1435, 1436, 1438, 1440, 1450, 1457, 1458, 1459, 1462, 1463, 1464, 1466, 1468, 1477, 1480, 1489, 1490, 1491, 1494, 1495, 1496, 1499, 1501, 1512, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1530, 1539, 1542, 1551, 1552, 1553, 1556, 1557, 1558, 1561, 1563, 1574, 1581, 1582, 1583, 1586, 1587, 1588, 1590, 1592, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1628, 1630, 1631, 1632, 1634, 1641, 1642, 1649, 1650, 1651, 1652, 1655, 1656, 1679, 1690, 1728, 1729, 1730, 1731, 1733, 1736, 1739, 1740, 1742, 1746, 1747, 1748, 1749, 1751, 1754, 1757, 1777, 1781, 1788, 1796, 1797, 1799, 1801, 1802, 1807, 1808], "quickli": [6, 20, 25, 26], "view": [6, 8, 16, 17, 27, 31, 49, 71, 81, 97, 108, 129, 141, 162, 174, 195, 206, 227, 239, 260, 272, 293, 305, 326, 338, 360, 372, 393, 405, 426, 438, 458, 467, 476, 487, 504, 519, 520, 525, 534, 535, 540, 567, 869, 887, 908, 926, 946, 964, 984, 1002, 1024, 1042, 1063, 1081, 1102, 1120, 1140, 1158, 1178, 1196, 1208, 1225, 1240, 1258, 1274, 1292, 1308, 1326, 1338, 1355, 1370, 1388, 1399, 1416, 1427, 1444, 1455, 1472, 1473, 1487, 1505, 1517, 1534, 1535, 1549, 1567, 1579, 1596, 1695, 1696, 1701, 1707, 1708, 1715, 1721, 1722, 1727, 1740, 1784, 1785, 1795], "alreadi": [6, 10, 13, 15, 28, 30, 31, 32, 33, 60, 64, 90, 120, 121, 123, 152, 155, 185, 188, 218, 219, 221, 250, 253, 283, 286, 316, 319, 349, 353, 383, 386, 416, 419, 449, 653, 850, 865, 867, 889, 904, 906, 942, 944, 980, 982, 1020, 1022, 1043, 1044, 1059, 1061, 1083, 1098, 1100, 1136, 1138, 1174, 1176, 1627, 1760], "dict_kei": [6, 25, 31, 32], "max_siz": [6, 8, 18, 27, 29, 32, 578, 579, 580, 581, 582, 583, 584], "volum": [6, 8, 12, 13, 18, 21, 27, 29, 30, 32, 33, 496, 544, 554, 578, 579, 580, 581, 582, 583, 584, 601, 603, 650, 663, 664, 665, 666, 667, 715, 716, 717, 718, 719, 720, 763, 764, 770, 833, 879, 918, 956, 994, 1034, 1073, 1112, 1150, 1188, 1217, 1249, 1283, 1317, 1347, 1379, 1408, 1436, 1464, 1496, 1526, 1558, 1588], "cross_sectional_area": [6, 7, 8, 18, 27, 29, 32, 578, 579, 580, 581, 582, 583, 584, 658, 659, 660, 661, 669, 670, 701, 717, 819, 826], "total_volum": [6, 8, 11, 18, 27, 29, 32, 582], "lens_volum": [6, 8, 18, 27, 29, 32, 582], "diffusive_size_factor": [6, 8, 18, 23, 27, 29, 32, 578, 579, 580, 581, 582, 583, 584, 816, 817, 818, 819, 821, 822, 846, 847], "return": [6, 7, 12, 13, 15, 17, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 38, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 72, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 124, 125, 126, 127, 130, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 163, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 192, 193, 196, 197, 201, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 222, 223, 224, 225, 228, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 261, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 290, 291, 294, 300, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 321, 322, 323, 324, 327, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 355, 356, 357, 358, 361, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 388, 389, 390, 391, 394, 400, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 421, 422, 423, 424, 427, 433, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 453, 454, 455, 456, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 478, 482, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 499, 500, 501, 502, 506, 507, 508, 509, 510, 512, 513, 518, 521, 522, 523, 529, 530, 533, 536, 537, 538, 542, 550, 553, 554, 555, 557, 558, 562, 569, 570, 571, 607, 622, 637, 644, 647, 648, 650, 651, 652, 653, 655, 656, 660, 666, 672, 678, 690, 695, 699, 701, 702, 703, 705, 706, 709, 713, 716, 724, 727, 728, 729, 730, 732, 733, 736, 737, 738, 739, 741, 745, 747, 752, 763, 765, 769, 777, 780, 782, 783, 784, 786, 789, 790, 796, 797, 803, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 822, 824, 825, 826, 828, 832, 833, 835, 836, 837, 839, 840, 841, 842, 843, 844, 846, 847, 849, 851, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 882, 883, 884, 885, 888, 890, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 921, 922, 923, 924, 927, 928, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 947, 948, 949, 950, 951, 952, 953, 954, 955, 959, 960, 961, 962, 965, 966, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 982, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 997, 998, 999, 1000, 1003, 1004, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1043, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1076, 1077, 1078, 1079, 1082, 1084, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1153, 1154, 1155, 1156, 1159, 1160, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1192, 1193, 1194, 1199, 1203, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1220, 1221, 1222, 1223, 1228, 1230, 1233, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1253, 1254, 1255, 1256, 1259, 1262, 1264, 1267, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1287, 1288, 1289, 1290, 1293, 1296, 1298, 1301, 1303, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1321, 1322, 1323, 1324, 1327, 1329, 1333, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1350, 1351, 1352, 1353, 1358, 1360, 1363, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1383, 1384, 1385, 1386, 1390, 1394, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1411, 1412, 1413, 1414, 1418, 1422, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1439, 1440, 1441, 1442, 1446, 1450, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1467, 1468, 1469, 1470, 1475, 1477, 1480, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1500, 1501, 1502, 1503, 1506, 1508, 1512, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1529, 1530, 1531, 1532, 1537, 1539, 1542, 1544, 1545, 1546, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1562, 1563, 1564, 1565, 1568, 1570, 1574, 1576, 1577, 1578, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1591, 1592, 1593, 1594, 1605, 1616, 1617, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1661, 1662, 1675, 1677, 1679, 1681, 1685, 1688, 1690, 1694, 1697, 1698, 1699, 1706, 1709, 1710, 1711, 1720, 1723, 1724, 1725, 1731, 1732, 1734, 1736, 1739, 1742, 1749, 1750, 1752, 1754, 1757, 1762, 1763, 1766, 1768, 1771, 1773, 1775, 1781, 1783, 1788, 1789, 1790, 1793, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1806, 1810], "argument": [6, 15, 25, 26, 27, 28, 31, 56, 61, 64, 67, 88, 91, 93, 116, 122, 125, 148, 153, 155, 158, 181, 186, 188, 191, 214, 220, 223, 246, 251, 253, 256, 279, 284, 286, 289, 312, 317, 319, 322, 345, 350, 353, 356, 379, 384, 386, 389, 412, 417, 419, 422, 445, 450, 454, 478, 494, 498, 500, 510, 511, 512, 542, 550, 554, 569, 730, 737, 759, 811, 838, 851, 855, 856, 860, 872, 877, 881, 883, 890, 894, 895, 899, 911, 916, 920, 922, 927, 928, 932, 933, 937, 949, 954, 958, 960, 966, 970, 971, 975, 987, 992, 996, 998, 1004, 1008, 1009, 1013, 1027, 1032, 1036, 1038, 1045, 1049, 1050, 1054, 1066, 1071, 1075, 1077, 1084, 1088, 1089, 1093, 1105, 1110, 1114, 1116, 1122, 1126, 1127, 1131, 1143, 1148, 1152, 1154, 1160, 1164, 1165, 1169, 1181, 1186, 1190, 1192, 1199, 1215, 1219, 1221, 1228, 1247, 1252, 1254, 1262, 1281, 1286, 1288, 1296, 1315, 1320, 1322, 1329, 1345, 1349, 1351, 1358, 1377, 1382, 1384, 1390, 1406, 1410, 1412, 1418, 1434, 1438, 1440, 1446, 1462, 1466, 1468, 1475, 1494, 1499, 1501, 1508, 1524, 1528, 1530, 1537, 1556, 1561, 1563, 1570, 1586, 1590, 1592, 1625, 1642, 1654, 1668, 1685, 1740], "misc": [6, 29, 31, 730], "_basic_math": 6, "product": [6, 29, 578, 579, 580, 581, 582, 583, 584], "target": [6, 7, 513, 526, 651, 652, 654, 656, 699, 702, 703, 704, 706, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 739, 740, 741, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 828, 832, 833, 844, 846, 847, 1651], "prop": [6, 27, 29, 31, 50, 51, 82, 83, 109, 110, 142, 143, 175, 176, 207, 208, 240, 241, 273, 274, 306, 307, 339, 340, 373, 374, 406, 407, 439, 440, 468, 488, 489, 507, 578, 579, 580, 581, 582, 583, 584, 587, 590, 651, 698, 699, 702, 723, 725, 727, 728, 730, 731, 732, 735, 736, 737, 739, 740, 777, 780, 781, 806, 870, 871, 909, 910, 947, 948, 985, 986, 1025, 1026, 1064, 1065, 1103, 1104, 1121, 1141, 1142, 1179, 1180, 1209, 1210, 1241, 1242, 1275, 1276, 1309, 1310, 1339, 1340, 1371, 1372, 1400, 1401, 1428, 1429, 1456, 1457, 1488, 1489, 1518, 1519, 1550, 1551, 1580, 1581], "final": [6, 15, 20, 23, 25, 32, 33, 34, 1003, 1605, 1672, 1685], "forget": [6, 10, 20], "els": [6, 29, 46, 66, 78, 92, 105, 124, 138, 157, 171, 190, 197, 203, 222, 236, 255, 269, 288, 302, 321, 335, 355, 369, 388, 402, 421, 435, 453, 464, 472, 484, 499, 518, 523, 533, 538, 864, 882, 903, 921, 941, 959, 979, 997, 1019, 1037, 1058, 1076, 1097, 1115, 1135, 1153, 1173, 1191, 1205, 1220, 1235, 1253, 1269, 1287, 1303, 1321, 1335, 1350, 1365, 1383, 1396, 1411, 1424, 1439, 1452, 1467, 1482, 1500, 1514, 1529, 1544, 1562, 1576, 1591, 1690, 1694, 1699, 1706, 1711, 1720, 1725, 1783, 1793], "appear": [6, 17, 22, 27, 29, 31, 1679, 1681], "been": [6, 7, 8, 13, 14, 18, 20, 25, 27, 28, 29, 30, 31, 32, 33, 44, 64, 76, 103, 136, 155, 169, 188, 201, 234, 253, 267, 286, 300, 319, 333, 353, 367, 386, 400, 419, 433, 482, 506, 653, 826, 857, 896, 934, 972, 1010, 1051, 1090, 1128, 1166, 1203, 1233, 1267, 1301, 1333, 1363, 1394, 1422, 1450, 1480, 1512, 1542, 1574, 1626], "net": [6, 8, 10, 17, 18, 20, 22, 23, 26, 28, 29, 30, 32, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 835, 836], "0x7fdd063ff810": 6, "valid": [6, 8, 18, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 473, 501, 766, 784, 790, 797, 801, 808, 884, 923, 961, 999, 1039, 1078, 1117, 1155, 1193, 1222, 1255, 1289, 1323, 1352, 1385, 1413, 1441, 1469, 1502, 1531, 1564, 1593, 1806], "coord": [6, 8, 18, 22, 26, 27, 28, 29, 30, 32, 555, 600, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 629, 630, 631, 632, 633, 634, 683, 684, 685, 686, 687, 688, 849, 888, 927, 965, 1003, 1043, 1082, 1121, 1159, 1623, 1641, 1653, 1654], "625": [6, 33], "3": [6, 7, 8, 11, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 47, 79, 99, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 478, 485, 542, 554, 555, 587, 590, 607, 622, 637, 652, 678, 703, 713, 729, 764, 765, 769, 797, 799, 833, 835, 836, 837, 838, 840, 841, 842, 843, 851, 860, 861, 866, 872, 890, 899, 900, 905, 911, 928, 937, 938, 943, 949, 965, 966, 975, 976, 981, 987, 1003, 1004, 1013, 1014, 1021, 1027, 1045, 1054, 1055, 1060, 1066, 1084, 1093, 1094, 1099, 1105, 1121, 1122, 1131, 1132, 1137, 1143, 1159, 1160, 1169, 1170, 1175, 1181, 1199, 1206, 1228, 1237, 1262, 1271, 1296, 1305, 1329, 1336, 1358, 1367, 1390, 1397, 1418, 1425, 1446, 1453, 1475, 1484, 1508, 1515, 1537, 1546, 1570, 1577, 1615, 1619, 1621, 1623, 1633, 1639, 1641, 1653, 1654, 1666, 1667, 1669, 1671, 1673, 1676, 1678, 1680, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1728], "conn": [6, 7, 8, 18, 22, 26, 27, 28, 29, 30, 32, 33, 555, 713, 849, 888, 927, 965, 1003, 1043, 1082, 1121, 1159, 1617, 1620, 1623, 1643, 1655], "1200": [6, 33], "coordination_numb": [6, 8, 15, 18, 27, 29, 30, 32], "7": [6, 7, 8, 10, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 36, 566, 578, 579, 580, 581, 582, 583, 584, 587, 826, 861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170, 1619], "8": [6, 8, 12, 13, 15, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 637, 766, 786, 797, 835, 836], "9": [6, 7, 8, 9, 12, 15, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 587, 590, 647, 655, 705, 738, 830, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1619], "11": [6, 8, 18, 26, 27, 28, 29, 30, 31, 32, 33, 587], "13": [6, 8, 18, 23, 26, 27, 28, 29, 30, 32, 33], "14": [6, 8, 18, 23, 26, 27, 28, 29, 30, 32, 33, 587, 888], "16": [6, 8, 18, 23, 26, 27, 29, 30, 32, 33, 587], "17": [6, 7, 8, 18, 23, 26, 27, 29, 30, 32, 33, 587], "18": [6, 8, 18, 23, 26, 27, 29, 30, 32, 33, 35, 769, 888], "surfac": [6, 8, 10, 12, 13, 18, 22, 26, 27, 28, 30, 32, 33, 34, 566, 658, 659, 660, 661, 670, 701, 708, 709, 710, 711, 717, 770, 788, 789, 790, 813, 814, 828, 1615, 1633, 1634, 1648, 1652], "96": [6, 26, 33], "front": [6, 7, 8, 10, 18, 22, 26, 28, 29, 30, 32, 889, 1044], "back": [6, 7, 8, 18, 22, 26, 27, 28, 29, 30, 32, 648, 650, 701, 724, 828, 889, 1044], "hist": [6, 29, 652, 654, 656, 703, 704, 706, 729, 734, 741], "ax1": 6, "ax2": 6, "subplot": [6, 7, 8, 9, 18, 28, 29, 30], "figsiz": [6, 8, 9, 12, 13, 18, 28, 29, 30, 531], "bin": [6, 652, 654, 656, 703, 704, 706, 729, 734, 741], "edgecolor": [6, 18, 29], "set_titl": 6, "approach": [6, 17, 28, 29, 30, 33, 36, 648, 763, 813, 814, 829], "most": [6, 8, 11, 15, 18, 25, 28, 31, 32, 33, 196, 759, 814, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "simpl": [6, 8, 10, 23, 25, 26, 27, 28, 30, 31, 32, 849, 888, 927, 1082, 1716, 1728], "straight": [6, 712, 713], "forward": 6, "modul": [6, 11, 22, 26, 27, 29, 32, 37, 348, 382, 415, 459, 547, 551, 575, 576, 577, 585, 586, 588, 589, 592, 595, 596, 610, 625, 640, 646, 649, 654, 656, 657, 662, 668, 671, 673, 677, 679, 693, 697, 700, 704, 706, 707, 712, 714, 721, 734, 741, 742, 758, 760, 761, 767, 771, 776, 779, 785, 787, 791, 798, 802, 809, 810, 812, 815, 820, 823, 827, 831, 834, 845, 848, 1197, 1597, 1614, 1632, 1659, 1662, 1663], "second": [6, 8, 18, 22, 23, 25, 31, 557, 1619, 1628, 1656, 1683, 1685], "latter": [6, 835, 836, 1626], "recommend": [6, 29, 30, 36, 554, 1650], "fetch": [6, 10, 16, 27, 29, 31, 32, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 759, 780, 866, 905, 943, 981, 1021, 1060, 1099, 1137, 1175, 1206, 1236, 1237, 1238, 1270, 1271, 1272, 1304, 1305, 1306, 1336, 1366, 1367, 1368, 1397, 1425, 1453, 1483, 1484, 1485, 1515, 1545, 1546, 1547, 1577], "statist": [6, 15, 29], "case": [6, 10, 11, 17, 20, 23, 28, 30, 31, 32, 33, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 475, 503, 524, 530, 539, 653, 759, 835, 836, 886, 925, 963, 1001, 1041, 1080, 1119, 1157, 1195, 1224, 1257, 1291, 1325, 1354, 1387, 1415, 1443, 1471, 1504, 1533, 1566, 1595, 1619, 1626, 1650, 1700, 1714, 1726, 1740, 1794], "weibull_min": [6, 29, 652, 656, 703, 706, 729, 741], "genert": 6, "number": [6, 14, 15, 18, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53, 84, 85, 111, 112, 119, 144, 145, 177, 178, 209, 210, 217, 242, 243, 275, 276, 308, 309, 341, 342, 375, 376, 408, 409, 441, 442, 490, 491, 508, 509, 555, 620, 635, 647, 648, 650, 653, 654, 655, 656, 704, 705, 706, 721, 733, 734, 738, 741, 744, 745, 746, 747, 828, 835, 836, 849, 858, 872, 873, 874, 888, 897, 911, 912, 913, 935, 949, 950, 951, 965, 973, 987, 988, 989, 1003, 1011, 1027, 1028, 1029, 1052, 1066, 1067, 1068, 1082, 1091, 1105, 1106, 1107, 1129, 1143, 1144, 1145, 1159, 1167, 1181, 1182, 1183, 1211, 1212, 1226, 1243, 1244, 1277, 1278, 1311, 1312, 1341, 1342, 1373, 1374, 1402, 1403, 1430, 1431, 1458, 1459, 1490, 1491, 1520, 1521, 1552, 1553, 1582, 1583, 1604, 1617, 1620, 1623, 1624, 1625, 1627, 1634, 1643, 1651, 1655, 1657, 1658, 1661, 1663, 1685, 1688, 1732, 1750, 1797], "rv": [6, 29], "arrai": [6, 18, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 47, 48, 50, 56, 59, 60, 61, 67, 68, 69, 79, 80, 82, 88, 90, 91, 93, 94, 95, 106, 107, 109, 116, 119, 120, 122, 125, 126, 127, 139, 140, 142, 148, 151, 152, 153, 158, 159, 160, 172, 173, 175, 181, 184, 185, 186, 191, 192, 193, 197, 204, 205, 207, 214, 218, 220, 223, 224, 225, 237, 238, 240, 246, 249, 250, 251, 256, 257, 258, 270, 271, 273, 279, 282, 283, 284, 289, 290, 291, 303, 304, 306, 312, 315, 316, 317, 322, 323, 324, 336, 337, 339, 345, 348, 349, 350, 356, 357, 358, 370, 371, 373, 379, 382, 383, 384, 389, 390, 391, 403, 404, 406, 412, 415, 416, 417, 422, 423, 424, 436, 437, 439, 445, 448, 449, 450, 454, 455, 456, 465, 466, 468, 473, 474, 478, 485, 486, 488, 494, 498, 500, 501, 502, 505, 510, 511, 512, 542, 550, 569, 573, 607, 622, 637, 647, 648, 651, 652, 653, 654, 655, 656, 678, 699, 702, 703, 704, 705, 706, 713, 721, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 747, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 851, 855, 856, 858, 860, 861, 862, 866, 868, 870, 872, 877, 881, 883, 884, 885, 890, 894, 895, 897, 899, 900, 901, 905, 907, 909, 911, 916, 920, 922, 923, 924, 927, 928, 932, 933, 935, 937, 938, 939, 943, 945, 947, 949, 954, 958, 960, 961, 962, 965, 966, 970, 971, 973, 975, 976, 977, 981, 983, 985, 987, 992, 996, 998, 999, 1000, 1003, 1004, 1008, 1009, 1011, 1013, 1014, 1015, 1021, 1023, 1025, 1027, 1032, 1036, 1038, 1039, 1040, 1045, 1049, 1050, 1052, 1054, 1055, 1056, 1060, 1062, 1064, 1066, 1071, 1075, 1077, 1078, 1079, 1084, 1088, 1089, 1091, 1093, 1094, 1095, 1099, 1101, 1103, 1105, 1110, 1114, 1116, 1117, 1118, 1121, 1122, 1126, 1127, 1129, 1131, 1132, 1133, 1137, 1139, 1141, 1143, 1148, 1152, 1154, 1155, 1156, 1159, 1160, 1164, 1165, 1167, 1169, 1170, 1171, 1175, 1177, 1179, 1181, 1186, 1190, 1192, 1193, 1194, 1199, 1206, 1207, 1209, 1215, 1219, 1221, 1222, 1223, 1228, 1237, 1239, 1241, 1247, 1252, 1254, 1255, 1256, 1262, 1271, 1273, 1275, 1281, 1286, 1288, 1289, 1290, 1296, 1305, 1307, 1309, 1315, 1320, 1322, 1323, 1324, 1329, 1336, 1337, 1339, 1345, 1349, 1351, 1352, 1353, 1358, 1367, 1369, 1371, 1377, 1382, 1384, 1385, 1386, 1390, 1397, 1398, 1400, 1406, 1410, 1412, 1413, 1414, 1418, 1425, 1426, 1428, 1434, 1438, 1440, 1441, 1442, 1446, 1453, 1454, 1456, 1462, 1466, 1468, 1469, 1470, 1475, 1484, 1486, 1488, 1494, 1499, 1501, 1502, 1503, 1508, 1515, 1516, 1518, 1524, 1528, 1530, 1531, 1532, 1537, 1546, 1548, 1550, 1556, 1561, 1563, 1564, 1565, 1570, 1577, 1578, 1580, 1586, 1590, 1592, 1593, 1594, 1605, 1615, 1617, 1620, 1621, 1622, 1623, 1625, 1626, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1639, 1642, 1643, 1651, 1652, 1655, 1657, 1658, 1661, 1716, 1796, 1798, 1801, 1802, 1803, 1810], "put": [6, 15, 28, 29, 197, 459, 571, 1653], "one": [6, 9, 15, 17, 18, 23, 25, 27, 28, 29, 30, 31, 32, 33, 44, 51, 52, 53, 56, 60, 67, 76, 83, 84, 85, 88, 90, 93, 103, 110, 111, 112, 116, 120, 125, 136, 143, 144, 145, 148, 152, 158, 169, 176, 177, 178, 181, 185, 191, 201, 208, 209, 210, 214, 218, 223, 234, 241, 242, 243, 246, 250, 256, 267, 274, 275, 276, 279, 283, 289, 300, 307, 308, 309, 312, 316, 322, 333, 340, 341, 342, 345, 349, 356, 367, 374, 375, 376, 379, 383, 389, 400, 407, 408, 409, 412, 416, 422, 433, 440, 441, 442, 445, 449, 454, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 530, 558, 571, 716, 769, 849, 857, 858, 861, 862, 865, 867, 871, 872, 873, 874, 877, 883, 888, 896, 897, 900, 901, 904, 906, 910, 911, 912, 913, 916, 922, 927, 934, 935, 938, 939, 942, 944, 948, 949, 950, 951, 954, 960, 965, 972, 973, 976, 977, 980, 982, 986, 987, 988, 989, 992, 998, 1003, 1010, 1011, 1014, 1015, 1020, 1022, 1026, 1027, 1028, 1029, 1032, 1038, 1043, 1051, 1052, 1055, 1056, 1059, 1061, 1065, 1066, 1067, 1068, 1071, 1077, 1082, 1090, 1091, 1094, 1095, 1098, 1100, 1104, 1105, 1106, 1107, 1110, 1116, 1121, 1128, 1129, 1132, 1133, 1136, 1138, 1142, 1143, 1144, 1145, 1148, 1154, 1159, 1166, 1167, 1170, 1171, 1174, 1176, 1180, 1181, 1182, 1183, 1186, 1192, 1203, 1210, 1211, 1212, 1215, 1221, 1233, 1242, 1243, 1244, 1247, 1254, 1267, 1276, 1277, 1278, 1281, 1288, 1301, 1310, 1311, 1312, 1315, 1322, 1333, 1340, 1341, 1342, 1345, 1351, 1363, 1372, 1373, 1374, 1377, 1384, 1394, 1401, 1402, 1403, 1406, 1412, 1417, 1422, 1429, 1430, 1431, 1434, 1440, 1450, 1457, 1458, 1459, 1462, 1468, 1480, 1489, 1490, 1491, 1494, 1501, 1512, 1519, 1520, 1521, 1524, 1530, 1542, 1551, 1552, 1553, 1556, 1563, 1574, 1581, 1582, 1583, 1586, 1592, 1617, 1620, 1626, 1630, 1631, 1633, 1649, 1654, 1655, 1656, 1690, 1740, 1773, 1777, 1781, 1788, 1792], "c": [6, 7, 8, 25, 26, 28, 29, 33, 36, 652, 656, 703, 706, 725, 729, 741, 769, 833, 835, 836, 838, 1653, 1654, 1683, 1685, 1786, 1791], "random_st": 6, "none": [6, 15, 27, 29, 30, 32, 39, 44, 45, 46, 50, 51, 52, 53, 56, 59, 60, 61, 63, 65, 66, 67, 69, 70, 73, 76, 77, 78, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 100, 103, 104, 105, 109, 110, 111, 112, 113, 116, 120, 122, 124, 125, 127, 128, 131, 136, 137, 138, 142, 143, 144, 145, 148, 151, 152, 153, 154, 156, 157, 158, 160, 161, 164, 169, 170, 171, 175, 176, 177, 178, 181, 184, 185, 186, 187, 189, 190, 191, 193, 194, 198, 201, 202, 203, 207, 208, 209, 210, 214, 218, 219, 220, 221, 222, 223, 225, 226, 229, 234, 235, 236, 240, 241, 242, 243, 246, 249, 250, 251, 252, 254, 255, 256, 258, 259, 262, 267, 268, 269, 273, 274, 275, 276, 279, 282, 283, 284, 285, 287, 288, 289, 291, 292, 295, 300, 301, 302, 306, 307, 308, 309, 312, 315, 316, 317, 318, 320, 321, 322, 324, 325, 328, 333, 334, 335, 339, 340, 341, 342, 345, 348, 349, 350, 352, 354, 355, 356, 358, 359, 362, 367, 368, 369, 373, 374, 375, 376, 379, 382, 383, 384, 385, 387, 388, 389, 391, 392, 395, 400, 401, 402, 406, 407, 408, 409, 412, 415, 416, 417, 418, 420, 421, 422, 424, 425, 428, 433, 434, 435, 439, 440, 441, 442, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 461, 463, 464, 468, 472, 474, 475, 480, 482, 483, 484, 488, 489, 490, 491, 494, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 515, 517, 518, 523, 524, 527, 531, 532, 533, 538, 539, 544, 545, 549, 559, 565, 566, 569, 570, 573, 574, 578, 579, 580, 581, 582, 583, 584, 647, 648, 655, 699, 705, 734, 738, 745, 828, 829, 830, 853, 855, 856, 857, 859, 863, 864, 870, 871, 873, 874, 877, 879, 880, 881, 882, 883, 885, 886, 889, 892, 894, 895, 896, 898, 902, 903, 909, 910, 912, 913, 916, 918, 919, 920, 921, 922, 924, 925, 930, 932, 933, 934, 936, 940, 941, 947, 948, 950, 951, 954, 956, 957, 958, 959, 960, 962, 963, 968, 970, 971, 972, 974, 978, 979, 985, 986, 988, 989, 992, 994, 995, 996, 997, 998, 1000, 1001, 1006, 1008, 1009, 1010, 1012, 1016, 1017, 1018, 1019, 1025, 1026, 1028, 1029, 1032, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1044, 1047, 1049, 1050, 1051, 1053, 1057, 1058, 1064, 1065, 1067, 1068, 1071, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1086, 1088, 1089, 1090, 1092, 1096, 1097, 1103, 1104, 1106, 1107, 1110, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1124, 1126, 1127, 1128, 1130, 1134, 1135, 1141, 1142, 1144, 1145, 1148, 1150, 1151, 1152, 1153, 1154, 1156, 1157, 1162, 1164, 1165, 1166, 1168, 1172, 1173, 1179, 1180, 1182, 1183, 1186, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1201, 1203, 1204, 1205, 1209, 1210, 1211, 1212, 1215, 1217, 1218, 1219, 1220, 1221, 1223, 1224, 1231, 1233, 1234, 1235, 1241, 1242, 1243, 1244, 1247, 1251, 1252, 1253, 1254, 1256, 1257, 1259, 1265, 1267, 1268, 1269, 1275, 1276, 1277, 1278, 1281, 1285, 1286, 1287, 1288, 1290, 1291, 1293, 1299, 1301, 1302, 1303, 1309, 1310, 1311, 1312, 1315, 1319, 1320, 1321, 1322, 1324, 1325, 1327, 1331, 1333, 1334, 1335, 1339, 1340, 1341, 1342, 1345, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1361, 1363, 1364, 1365, 1371, 1372, 1373, 1374, 1377, 1381, 1382, 1383, 1384, 1386, 1387, 1392, 1394, 1395, 1396, 1400, 1401, 1402, 1403, 1406, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1420, 1422, 1423, 1424, 1428, 1429, 1430, 1431, 1434, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1448, 1450, 1451, 1452, 1456, 1457, 1458, 1459, 1462, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1478, 1480, 1481, 1482, 1488, 1489, 1490, 1491, 1494, 1498, 1499, 1500, 1501, 1503, 1504, 1506, 1510, 1512, 1513, 1514, 1518, 1519, 1520, 1521, 1524, 1526, 1527, 1528, 1529, 1530, 1532, 1533, 1540, 1542, 1543, 1544, 1550, 1551, 1552, 1553, 1556, 1560, 1561, 1562, 1563, 1565, 1566, 1568, 1572, 1574, 1575, 1576, 1580, 1581, 1582, 1583, 1586, 1588, 1589, 1590, 1591, 1592, 1594, 1595, 1605, 1609, 1615, 1620, 1632, 1633, 1635, 1636, 1640, 1656, 1668, 1674, 1675, 1677, 1679, 1681, 1691, 1693, 1694, 1699, 1700, 1703, 1705, 1706, 1711, 1712, 1714, 1717, 1719, 1720, 1725, 1726, 1739, 1742, 1744, 1757, 1778, 1781, 1782, 1783, 1788, 1791, 1792, 1793, 1794], "would": [6, 7, 11, 17, 18, 20, 22, 25, 26, 28, 30, 31, 648, 833, 1656], "overwrit": [6, 25, 30, 31, 33, 60, 61, 90, 91, 120, 121, 122, 123, 152, 153, 185, 186, 218, 219, 220, 221, 250, 251, 283, 284, 316, 317, 349, 350, 383, 384, 416, 417, 449, 450, 498, 511, 759, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590], "advantag": [6, 30, 888], "regener": [6, 10, 15, 21, 22, 29, 30, 31, 478, 479, 497, 542, 543, 545, 730, 851, 852, 880, 890, 891, 919, 928, 929, 957, 966, 967, 995, 1004, 1005, 1035, 1045, 1046, 1074, 1084, 1085, 1113, 1122, 1123, 1151, 1160, 1161, 1189, 1199, 1200, 1218, 1228, 1229, 1251, 1262, 1263, 1285, 1296, 1297, 1319, 1329, 1330, 1348, 1358, 1359, 1381, 1390, 1391, 1409, 1418, 1419, 1437, 1446, 1447, 1465, 1475, 1476, 1498, 1508, 1509, 1527, 1537, 1538, 1560, 1570, 1571, 1589], "programmat": [6, 16], "b": [6, 10, 18, 20, 22, 25, 33, 35, 38, 59, 130, 151, 163, 184, 228, 249, 261, 282, 294, 315, 327, 361, 394, 427, 448, 554, 590, 669, 725, 732, 770, 826, 838, 844, 861, 862, 900, 901, 938, 939, 976, 977, 1014, 1015, 1055, 1056, 1094, 1095, 1132, 1133, 1170, 1171, 1599, 1601, 1603, 1604, 1605, 1607, 1609, 1611, 1613, 1630, 1631, 1653, 1654, 1683], "save": [6, 7, 16, 17, 30, 34, 557, 559, 565, 566, 568, 572, 573, 574, 865, 867, 904, 906, 942, 944, 980, 982, 1020, 1022, 1059, 1061, 1098, 1100, 1121, 1136, 1138, 1174, 1176, 1627, 1674, 1679, 1779, 1787, 1791, 1792], "file": [6, 14, 26, 34, 36, 553, 554, 557, 558, 559, 561, 565, 566, 567, 568, 570, 571, 572, 573, 574, 1616, 1777, 1786, 1791, 1792], "retain": [6, 33], "parametr": 6, "studi": [6, 10, 28, 33], "easili": [6, 8, 16, 29, 33, 36, 196], "hard": [6, 17], "previous": [6, 30, 36], "revers": [6, 197, 1739, 1757], "look": [6, 8, 10, 17, 18, 22, 23, 25, 28, 29, 30, 31, 32, 36, 196, 653, 759, 777, 799, 888, 1621, 1679, 1690, 1786, 1791], "up": [6, 8, 11, 17, 23, 27, 28, 29, 31, 33, 36, 196, 759, 777, 784, 799], "random": [6, 7, 8, 9, 10, 12, 13, 15, 20, 21, 22, 27, 29, 30, 31, 33, 34, 578, 579, 580, 581, 582, 583, 584, 648, 652, 654, 656, 703, 704, 706, 718, 719, 721, 729, 730, 734, 741, 813, 838, 855, 856, 888, 894, 895, 932, 933, 965, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1159, 1164, 1165, 1648, 1651, 1685], "correspond": [6, 9, 18, 21, 27, 28, 29, 30, 31, 32, 33, 54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 377, 410, 443, 469, 478, 492, 521, 526, 536, 542, 558, 566, 569, 656, 706, 713, 733, 736, 741, 752, 759, 763, 784, 851, 855, 856, 859, 861, 862, 875, 890, 894, 895, 898, 900, 901, 914, 928, 932, 933, 936, 938, 939, 952, 966, 970, 971, 974, 976, 977, 990, 1003, 1004, 1008, 1009, 1012, 1014, 1015, 1030, 1045, 1049, 1050, 1053, 1055, 1056, 1069, 1084, 1088, 1089, 1092, 1094, 1095, 1108, 1122, 1126, 1127, 1130, 1132, 1133, 1146, 1160, 1164, 1165, 1168, 1170, 1171, 1184, 1199, 1213, 1228, 1245, 1262, 1279, 1296, 1313, 1329, 1343, 1358, 1375, 1390, 1404, 1418, 1432, 1446, 1460, 1475, 1492, 1508, 1522, 1537, 1554, 1570, 1584, 1619, 1625, 1627, 1652, 1661, 1697, 1709, 1723, 1789], "determin": [6, 8, 9, 10, 20, 22, 28, 32, 33, 566, 759, 828, 832, 835, 836, 888, 1621, 1635, 1636, 1637, 1638, 1641, 1643, 1804], "cumul": [6, 28, 29, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447], "probabl": [6, 17, 28, 29, 31, 33], "allow": [6, 25, 26, 29, 31, 459, 555, 566, 648, 730, 759, 1260, 1294, 1417, 1633, 1746, 1777], "user": [6, 7, 12, 13, 14, 15, 16, 25, 26, 27, 30, 31, 34, 557, 573, 730, 849, 888, 965, 1043, 1082, 1121, 1159, 1389, 1633], "instanc": [6, 16, 17, 25, 26, 27, 28, 29, 30, 31, 478, 542, 759, 850, 851, 889, 890, 928, 966, 1004, 1044, 1045, 1083, 1084, 1121, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1417, 1418, 1446, 1473, 1475, 1508, 1535, 1537, 1570, 1605, 1615, 1633, 1650, 1740, 1743, 1777], "spatial": [6, 10, 648, 747, 752, 860, 899, 937, 975, 1013, 1054, 1093, 1121, 1131, 1169, 1634, 1659, 1662], "correl": [6, 646, 648, 732, 769, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 800, 803, 804, 805, 807, 808], "origin": [6, 7, 11, 22, 33, 34, 832, 1642, 1652, 1670, 1672, 1683, 1685, 1742], "make": [6, 7, 8, 15, 16, 17, 18, 22, 25, 26, 28, 29, 30, 31, 32, 51, 52, 53, 56, 83, 84, 85, 88, 110, 111, 112, 116, 143, 144, 145, 148, 176, 177, 178, 181, 208, 209, 210, 214, 241, 242, 243, 246, 274, 275, 276, 279, 307, 308, 309, 312, 340, 341, 342, 345, 374, 375, 376, 379, 407, 408, 409, 412, 440, 441, 442, 445, 489, 490, 491, 494, 507, 508, 509, 510, 826, 828, 838, 871, 873, 874, 877, 910, 912, 913, 916, 948, 950, 951, 954, 986, 988, 989, 992, 1026, 1028, 1029, 1032, 1065, 1067, 1068, 1071, 1104, 1106, 1107, 1110, 1142, 1144, 1145, 1148, 1180, 1182, 1183, 1186, 1210, 1211, 1212, 1215, 1242, 1243, 1244, 1247, 1276, 1277, 1278, 1281, 1310, 1311, 1312, 1315, 1340, 1341, 1342, 1345, 1372, 1373, 1374, 1377, 1401, 1402, 1403, 1406, 1429, 1430, 1431, 1434, 1457, 1458, 1459, 1462, 1489, 1490, 1491, 1494, 1519, 1520, 1521, 1524, 1551, 1552, 1553, 1556, 1581, 1582, 1583, 1586, 1616, 1619, 1649, 1656, 1657, 1658, 1781], "sure": [6, 8, 20, 29, 36, 1619], "afterward": 6, "pore_se": [6, 15, 29, 30, 652, 703, 729], "num_rang": [6, 15, 29, 30, 578, 579, 580, 581, 582, 583, 584, 647, 655, 699, 705, 738], "99": [6, 26, 29, 33], "ve": [6, 18, 36], "settl": 6, "should": [6, 8, 11, 15, 18, 22, 25, 27, 28, 29, 32, 33, 36, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 85, 88, 89, 90, 91, 93, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 189, 191, 208, 209, 210, 214, 215, 218, 219, 220, 223, 241, 242, 243, 246, 247, 248, 250, 251, 252, 253, 254, 256, 274, 275, 276, 279, 280, 281, 283, 284, 285, 286, 287, 289, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 322, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 374, 375, 376, 379, 380, 381, 383, 384, 385, 386, 387, 389, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 422, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 454, 471, 478, 479, 489, 490, 491, 494, 495, 497, 498, 500, 507, 508, 509, 510, 511, 512, 526, 530, 542, 543, 545, 554, 555, 567, 569, 597, 602, 605, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 631, 634, 638, 639, 641, 645, 648, 718, 719, 739, 740, 759, 832, 835, 836, 851, 852, 860, 871, 873, 874, 877, 878, 880, 881, 883, 889, 890, 891, 899, 910, 912, 913, 916, 917, 919, 920, 922, 928, 929, 937, 948, 950, 951, 954, 955, 957, 958, 960, 966, 967, 975, 986, 988, 989, 992, 993, 995, 996, 998, 1004, 1005, 1013, 1016, 1017, 1026, 1028, 1029, 1032, 1033, 1035, 1036, 1038, 1044, 1045, 1046, 1054, 1065, 1067, 1068, 1071, 1072, 1074, 1075, 1077, 1084, 1085, 1093, 1104, 1106, 1107, 1110, 1111, 1113, 1114, 1116, 1122, 1123, 1131, 1142, 1144, 1145, 1148, 1149, 1151, 1152, 1154, 1160, 1161, 1169, 1180, 1182, 1183, 1186, 1187, 1189, 1190, 1192, 1199, 1200, 1210, 1211, 1212, 1215, 1216, 1218, 1219, 1221, 1228, 1229, 1242, 1243, 1244, 1247, 1248, 1251, 1252, 1254, 1262, 1263, 1276, 1277, 1278, 1281, 1282, 1285, 1286, 1288, 1296, 1297, 1310, 1311, 1312, 1315, 1316, 1319, 1320, 1322, 1329, 1330, 1340, 1341, 1342, 1345, 1346, 1348, 1349, 1351, 1358, 1359, 1372, 1373, 1374, 1377, 1378, 1381, 1382, 1384, 1390, 1391, 1401, 1402, 1403, 1406, 1407, 1409, 1410, 1412, 1418, 1419, 1429, 1430, 1431, 1434, 1435, 1437, 1438, 1440, 1446, 1447, 1457, 1458, 1459, 1462, 1463, 1465, 1466, 1468, 1475, 1476, 1489, 1490, 1491, 1494, 1495, 1498, 1499, 1501, 1508, 1509, 1519, 1520, 1521, 1524, 1525, 1527, 1528, 1530, 1537, 1538, 1551, 1552, 1553, 1556, 1557, 1560, 1561, 1563, 1570, 1571, 1581, 1582, 1583, 1586, 1587, 1589, 1590, 1592, 1615, 1616, 1619, 1623, 1627, 1642, 1649, 1650, 1652, 1654, 1660, 1688, 1797], "alwai": [6, 27, 29, 33, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 965, 1653, 1654], "less": [6, 11, 27, 29, 719], "than": [6, 7, 18, 23, 26, 27, 29, 30, 31, 33, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 99, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 571, 763, 766, 790, 808, 857, 861, 865, 867, 871, 873, 874, 877, 883, 896, 900, 904, 906, 910, 912, 913, 916, 922, 934, 938, 942, 944, 948, 950, 951, 954, 960, 972, 976, 980, 982, 986, 988, 989, 992, 998, 1010, 1014, 1020, 1022, 1026, 1028, 1029, 1032, 1038, 1051, 1055, 1059, 1061, 1065, 1067, 1068, 1071, 1077, 1090, 1094, 1098, 1100, 1104, 1106, 1107, 1110, 1116, 1128, 1132, 1136, 1138, 1142, 1144, 1145, 1148, 1154, 1166, 1170, 1174, 1176, 1180, 1182, 1183, 1186, 1192, 1203, 1210, 1211, 1212, 1215, 1221, 1233, 1242, 1243, 1244, 1247, 1254, 1267, 1276, 1277, 1278, 1281, 1288, 1301, 1310, 1311, 1312, 1315, 1322, 1333, 1340, 1341, 1342, 1345, 1351, 1363, 1372, 1373, 1374, 1377, 1384, 1394, 1401, 1402, 1403, 1406, 1412, 1422, 1429, 1430, 1431, 1434, 1440, 1450, 1457, 1458, 1459, 1462, 1468, 1480, 1489, 1490, 1491, 1494, 1501, 1512, 1519, 1520, 1521, 1524, 1530, 1542, 1551, 1552, 1553, 1556, 1563, 1574, 1581, 1582, 1583, 1586, 1592, 1626, 1630, 1631], "equal": [6, 7, 22, 25, 27, 724, 830, 835, 836, 888, 1643, 1739, 1757], "thei": [6, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 99, 530, 554, 573, 648, 653, 658, 659, 660, 661, 759, 835, 836, 838, 849, 850, 858, 860, 862, 888, 889, 897, 899, 901, 935, 937, 939, 973, 975, 977, 1003, 1011, 1013, 1015, 1044, 1052, 1054, 1056, 1082, 1083, 1091, 1093, 1095, 1121, 1129, 1131, 1133, 1159, 1167, 1169, 1171, 1230, 1264, 1298, 1360, 1389, 1417, 1477, 1539, 1617, 1643, 1648, 1650, 1654, 1655, 1742, 1743], "connect": [6, 10, 18, 22, 23, 26, 27, 29, 32, 33, 34, 99, 555, 712, 713, 718, 719, 750, 751, 754, 755, 757, 828, 830, 849, 855, 856, 858, 859, 860, 888, 894, 895, 897, 898, 899, 927, 932, 933, 935, 936, 937, 965, 970, 971, 973, 974, 975, 1003, 1008, 1009, 1011, 1012, 1013, 1017, 1043, 1049, 1050, 1052, 1053, 1054, 1082, 1088, 1089, 1091, 1092, 1093, 1121, 1126, 1127, 1129, 1130, 1131, 1159, 1164, 1165, 1167, 1168, 1169, 1616, 1617, 1618, 1619, 1620, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1640, 1643, 1649, 1650, 1651, 1655, 1656, 1661], "otherwis": [6, 54, 68, 86, 94, 114, 126, 146, 159, 179, 192, 212, 224, 244, 257, 277, 290, 310, 323, 343, 357, 377, 390, 410, 423, 443, 455, 469, 473, 492, 501, 521, 536, 571, 781, 806, 860, 872, 875, 884, 899, 911, 914, 923, 937, 949, 952, 961, 975, 987, 990, 999, 1013, 1027, 1030, 1039, 1054, 1066, 1069, 1078, 1093, 1105, 1108, 1117, 1131, 1143, 1146, 1155, 1169, 1181, 1184, 1193, 1213, 1222, 1238, 1245, 1255, 1272, 1279, 1289, 1306, 1313, 1323, 1343, 1352, 1368, 1375, 1385, 1404, 1413, 1432, 1441, 1460, 1469, 1485, 1492, 1502, 1522, 1531, 1547, 1554, 1564, 1584, 1593, 1643, 1675, 1677, 1681, 1697, 1709, 1716, 1723, 1789, 1796, 1804], "re": [6, 15, 17, 18, 27, 29, 31, 36, 118, 647, 655, 705, 735, 738, 759], "realli": [6, 25, 27, 28, 29, 30, 33], "break": [6, 17, 27, 33], "happen": [6, 15, 29, 30, 31, 32, 718, 719], "d": [6, 8, 20, 23, 25, 27, 28, 31, 39, 43, 49, 54, 70, 71, 73, 75, 81, 86, 96, 97, 100, 102, 108, 114, 128, 129, 131, 135, 141, 146, 161, 162, 164, 168, 174, 179, 194, 195, 198, 200, 206, 212, 226, 227, 229, 233, 239, 244, 259, 260, 262, 266, 272, 277, 292, 293, 295, 299, 305, 310, 325, 326, 328, 332, 338, 343, 359, 360, 362, 366, 372, 377, 392, 393, 395, 399, 405, 410, 425, 426, 428, 432, 438, 443, 457, 458, 461, 462, 467, 469, 475, 476, 480, 481, 487, 492, 503, 504, 515, 516, 519, 520, 521, 524, 525, 527, 528, 534, 535, 536, 539, 540, 554, 769, 797, 826, 853, 854, 869, 875, 886, 887, 892, 893, 908, 914, 925, 926, 930, 931, 946, 952, 963, 964, 968, 969, 984, 990, 1001, 1002, 1006, 1007, 1024, 1030, 1041, 1042, 1047, 1048, 1063, 1069, 1080, 1081, 1086, 1087, 1102, 1108, 1119, 1120, 1124, 1125, 1140, 1146, 1157, 1158, 1162, 1163, 1178, 1184, 1195, 1196, 1201, 1202, 1208, 1213, 1224, 1225, 1231, 1232, 1240, 1245, 1257, 1258, 1265, 1266, 1274, 1279, 1291, 1292, 1299, 1300, 1308, 1313, 1325, 1326, 1331, 1332, 1338, 1343, 1354, 1355, 1361, 1362, 1370, 1375, 1387, 1388, 1392, 1393, 1399, 1404, 1415, 1416, 1420, 1421, 1427, 1432, 1443, 1444, 1448, 1449, 1455, 1460, 1471, 1472, 1478, 1479, 1487, 1492, 1504, 1505, 1510, 1511, 1517, 1522, 1533, 1534, 1540, 1541, 1549, 1554, 1566, 1567, 1572, 1573, 1579, 1584, 1595, 1596, 1683, 1685, 1691, 1692, 1695, 1696, 1697, 1700, 1701, 1703, 1704, 1707, 1708, 1709, 1714, 1715, 1716, 1717, 1718, 1721, 1722, 1723, 1726, 1727, 1778, 1784, 1785, 1789, 1794, 1795, 1798, 1810], "check": [6, 25, 27, 32, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 473, 501, 759, 884, 923, 961, 999, 1039, 1078, 1117, 1155, 1193, 1222, 1230, 1255, 1264, 1289, 1298, 1323, 1352, 1360, 1385, 1413, 1441, 1469, 1477, 1502, 1531, 1539, 1564, 1593, 1633, 1640, 1641, 1644, 1690, 1796, 1797, 1804, 1806], "consist": [6, 11, 23, 27, 32, 554, 558, 622, 637, 1356, 1743], "carefulli": [6, 32, 33, 1650], "ensur": [6, 7, 9, 11, 16, 27, 29, 31, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 473, 496, 501, 530, 544, 759, 879, 884, 918, 923, 956, 961, 994, 999, 1034, 1039, 1073, 1078, 1112, 1117, 1150, 1155, 1188, 1193, 1217, 1222, 1249, 1255, 1283, 1289, 1317, 1323, 1347, 1352, 1379, 1385, 1408, 1413, 1436, 1441, 1464, 1469, 1496, 1502, 1526, 1531, 1558, 1564, 1588, 1593, 1743, 1809], "thoat": 6, "smaller": [6, 29], "provid": [6, 10, 11, 21, 28, 29, 30, 31, 32, 33, 35, 40, 49, 60, 71, 74, 81, 90, 97, 101, 108, 120, 129, 132, 141, 152, 162, 165, 174, 185, 195, 199, 206, 218, 219, 221, 227, 230, 239, 250, 260, 263, 272, 283, 293, 296, 305, 316, 326, 329, 338, 349, 360, 363, 372, 383, 393, 396, 405, 416, 426, 429, 438, 449, 458, 467, 476, 487, 504, 513, 519, 520, 525, 534, 535, 540, 541, 558, 647, 651, 652, 653, 654, 655, 656, 699, 702, 703, 704, 705, 706, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 869, 887, 908, 926, 927, 946, 964, 984, 1002, 1024, 1042, 1063, 1081, 1102, 1120, 1140, 1158, 1178, 1196, 1208, 1225, 1240, 1258, 1259, 1274, 1292, 1293, 1308, 1326, 1327, 1338, 1355, 1370, 1388, 1399, 1416, 1417, 1427, 1444, 1455, 1472, 1487, 1505, 1506, 1517, 1534, 1549, 1567, 1568, 1579, 1596, 1627, 1632, 1633, 1695, 1696, 1701, 1707, 1708, 1715, 1721, 1722, 1727, 1740, 1777, 1784, 1785, 1792, 1795, 1801, 1802], "call": [6, 8, 10, 11, 13, 15, 17, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 59, 60, 68, 90, 94, 120, 126, 151, 152, 159, 184, 185, 192, 218, 224, 249, 250, 257, 282, 283, 290, 315, 316, 323, 348, 349, 357, 382, 383, 390, 415, 416, 423, 448, 449, 455, 459, 473, 478, 496, 501, 514, 526, 530, 542, 544, 656, 706, 741, 759, 851, 879, 884, 890, 918, 923, 928, 956, 961, 966, 994, 999, 1004, 1034, 1039, 1045, 1073, 1078, 1084, 1112, 1117, 1122, 1150, 1155, 1160, 1188, 1193, 1199, 1217, 1222, 1228, 1249, 1250, 1255, 1262, 1283, 1284, 1289, 1296, 1317, 1318, 1323, 1329, 1347, 1352, 1358, 1379, 1380, 1385, 1390, 1408, 1413, 1418, 1436, 1441, 1446, 1464, 1469, 1475, 1496, 1497, 1502, 1508, 1526, 1531, 1537, 1558, 1559, 1564, 1570, 1588, 1593], "from_neighbor_por": [6, 29, 30, 578, 579, 580, 581, 582, 583, 584], "either": [6, 13, 18, 20, 22, 25, 27, 28, 29, 31, 32, 33, 68, 70, 94, 96, 99, 126, 128, 159, 161, 192, 194, 224, 226, 257, 259, 290, 292, 323, 325, 357, 359, 390, 392, 394, 423, 425, 455, 457, 473, 475, 501, 503, 524, 539, 557, 733, 770, 832, 884, 886, 923, 925, 961, 963, 965, 999, 1001, 1003, 1039, 1041, 1078, 1080, 1117, 1119, 1155, 1157, 1159, 1193, 1195, 1222, 1224, 1227, 1250, 1255, 1257, 1261, 1284, 1289, 1291, 1295, 1318, 1323, 1325, 1352, 1354, 1357, 1380, 1385, 1387, 1413, 1415, 1441, 1443, 1469, 1471, 1474, 1497, 1502, 1504, 1531, 1533, 1536, 1559, 1564, 1566, 1593, 1595, 1615, 1622, 1625, 1627, 1629, 1642, 1645, 1668, 1679, 1700, 1714, 1726, 1740, 1775, 1794], "minimum": [6, 29, 651, 699, 702, 727, 728, 833, 1648, 1651], "mayb": 6, "down": [6, 17, 23, 27, 33], "distinct": 6, "demonstr": [6, 12, 16, 21, 28, 29, 30, 31, 32, 33, 34], "min": [6, 29, 30, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 486, 578, 579, 580, 581, 582, 583, 584, 651, 698, 699, 702, 727, 728, 868, 907, 945, 983, 1023, 1062, 1101, 1139, 1177, 1207, 1239, 1273, 1307, 1337, 1369, 1398, 1426, 1454, 1486, 1516, 1548, 1578], "throat_siz": [6, 29, 30], "diameter_2": 6, "carefuli": 6, "chosen": [6, 31, 1650], "reason": [6, 11, 15, 16, 17, 21, 23, 25, 28, 29, 31, 32], "mention": [6, 22], "If": [6, 17, 20, 22, 27, 28, 29, 30, 31, 33, 34, 35, 36, 40, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 65, 67, 69, 70, 74, 82, 83, 84, 85, 86, 88, 90, 93, 95, 96, 101, 109, 110, 111, 112, 114, 116, 120, 121, 123, 125, 127, 128, 132, 142, 143, 144, 145, 146, 148, 150, 152, 154, 156, 158, 160, 161, 165, 175, 176, 177, 178, 179, 181, 183, 185, 187, 189, 191, 193, 194, 199, 207, 208, 209, 210, 212, 214, 218, 219, 221, 223, 225, 226, 230, 240, 241, 242, 243, 244, 246, 248, 250, 252, 254, 256, 258, 259, 263, 273, 274, 275, 276, 277, 279, 281, 283, 285, 287, 289, 291, 292, 296, 306, 307, 308, 309, 310, 312, 314, 316, 318, 320, 322, 324, 325, 329, 339, 340, 341, 342, 343, 345, 347, 348, 349, 351, 352, 354, 356, 358, 359, 363, 373, 374, 375, 376, 377, 379, 381, 382, 383, 385, 387, 389, 391, 392, 396, 406, 407, 408, 409, 410, 412, 414, 415, 416, 418, 420, 422, 424, 425, 429, 439, 440, 441, 442, 443, 445, 447, 449, 451, 452, 454, 456, 457, 468, 469, 474, 475, 478, 488, 489, 490, 491, 492, 494, 496, 500, 502, 503, 507, 508, 509, 510, 512, 521, 524, 536, 539, 542, 544, 550, 558, 569, 571, 573, 653, 699, 702, 725, 727, 745, 762, 763, 764, 765, 766, 768, 769, 770, 773, 775, 781, 784, 786, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 804, 805, 806, 807, 808, 814, 828, 832, 838, 849, 851, 855, 856, 858, 860, 861, 862, 865, 867, 870, 871, 872, 873, 874, 875, 877, 879, 883, 885, 886, 888, 890, 894, 895, 897, 899, 900, 901, 904, 906, 909, 910, 911, 912, 913, 914, 916, 918, 922, 924, 925, 927, 928, 932, 933, 935, 937, 938, 939, 942, 944, 947, 948, 949, 950, 951, 952, 954, 956, 960, 962, 963, 965, 966, 970, 971, 973, 975, 976, 977, 980, 982, 985, 986, 987, 988, 989, 990, 992, 994, 998, 1000, 1001, 1004, 1008, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1020, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1034, 1038, 1040, 1041, 1043, 1045, 1049, 1050, 1052, 1054, 1055, 1056, 1059, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1073, 1077, 1079, 1080, 1082, 1084, 1088, 1089, 1091, 1093, 1094, 1095, 1098, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1116, 1118, 1119, 1121, 1122, 1126, 1127, 1129, 1131, 1132, 1133, 1136, 1138, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1150, 1154, 1156, 1157, 1159, 1160, 1164, 1165, 1167, 1169, 1170, 1171, 1174, 1176, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1192, 1194, 1195, 1199, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1221, 1223, 1224, 1228, 1238, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1254, 1256, 1257, 1259, 1262, 1272, 1275, 1276, 1277, 1278, 1279, 1281, 1283, 1288, 1290, 1291, 1293, 1296, 1306, 1309, 1310, 1311, 1312, 1313, 1315, 1317, 1322, 1324, 1325, 1327, 1329, 1339, 1340, 1341, 1342, 1343, 1345, 1347, 1351, 1353, 1354, 1358, 1368, 1371, 1372, 1373, 1374, 1375, 1377, 1379, 1384, 1386, 1387, 1390, 1400, 1401, 1402, 1403, 1404, 1406, 1408, 1412, 1414, 1415, 1417, 1418, 1428, 1429, 1430, 1431, 1432, 1434, 1436, 1440, 1442, 1443, 1446, 1456, 1457, 1458, 1459, 1460, 1462, 1464, 1468, 1470, 1471, 1475, 1485, 1488, 1489, 1490, 1491, 1492, 1494, 1496, 1501, 1503, 1504, 1506, 1508, 1518, 1519, 1520, 1521, 1522, 1524, 1526, 1530, 1532, 1533, 1537, 1547, 1550, 1551, 1552, 1553, 1554, 1556, 1558, 1563, 1565, 1566, 1568, 1570, 1580, 1581, 1582, 1583, 1584, 1586, 1588, 1592, 1594, 1595, 1615, 1619, 1620, 1625, 1626, 1629, 1630, 1631, 1632, 1633, 1634, 1640, 1642, 1643, 1653, 1654, 1655, 1656, 1675, 1677, 1681, 1690, 1697, 1700, 1709, 1714, 1716, 1723, 1726, 1739, 1742, 1757, 1765, 1772, 1781, 1788, 1789, 1791, 1792, 1794, 1801, 1802], "some": [6, 10, 11, 12, 18, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 459, 513, 550, 739, 759, 833, 835, 836, 1121, 1417, 1633, 1654, 1656], "unhappi": 6, "reduc": [6, 11, 30, 33, 130, 1620], "small": [6, 14, 18, 20, 26, 28, 29, 33, 566], "after": [6, 7, 8, 10, 23, 29, 31, 33, 34, 573, 653, 1622, 1661], "power": [6, 22, 29, 30, 33, 648, 781, 806, 1238, 1272, 1306, 1368, 1485, 1547], "util": [6, 29, 31, 1716, 1728, 1803], "properli": [6, 7, 36], "instead": [6, 15, 18, 20, 23, 25, 28, 29, 30, 31, 32, 1667, 1669, 1671, 1673, 1676, 1678, 1680, 1682, 1684, 1686, 1687, 1689], "essenti": [6, 27, 28, 29, 30, 459, 555, 1617, 1634, 1654, 1655], "done": [6, 8, 10, 16, 17, 20, 25, 26, 27, 28, 29, 32, 33, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 486, 570, 759, 868, 907, 945, 983, 1023, 1062, 1101, 1139, 1177, 1207, 1239, 1273, 1307, 1337, 1369, 1398, 1426, 1454, 1486, 1516, 1548, 1578], "plot": [6, 7, 10, 12, 13, 26, 28, 29, 30, 33], "itself": [6, 17, 28, 29, 59, 151, 184, 249, 282, 315, 448, 513, 1620, 1739, 1757, 1767, 1774, 1776], "ahould": 6, "ideal": [6, 25, 759, 762], "paraview": [6, 26, 36, 572, 573], "plot_networkx": 6, "ig": 6, "fri": 7, "combarn": 7, "1971": 7, "longitudin": 7, "c_": [7, 22, 130, 835, 836], "erfc": 7, "bigl": 7, "ut": 7, "d_": [7, 8, 9, 12, 20, 23, 130, 622], "bigr": 7, "exp": [7, 835, 836, 841], "ux": 7, "time": [7, 8, 11, 17, 23, 25, 27, 28, 29, 30, 33, 34, 196, 348, 382, 415, 478, 542, 550, 647, 655, 705, 738, 851, 890, 928, 966, 1004, 1045, 1084, 1121, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1627, 1792], "u": [7, 25, 26, 28], "averag": [7, 8, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 486, 648, 671, 672, 772, 774, 777, 830, 868, 907, 945, 983, 1023, 1062, 1101, 1139, 1177, 1207, 1239, 1273, 1307, 1337, 1369, 1398, 1426, 1454, 1486, 1516, 1548, 1578, 1651], "veloc": 7, "concentr": [7, 8, 9, 20, 22, 23, 27, 34, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 784, 786, 835, 836], "complementari": [7, 26], "error": [7, 11, 22, 25, 27, 29, 31, 64, 155, 188, 253, 286, 319, 353, 386, 419], "implement": [7, 12, 16, 22, 27, 31, 228, 427, 759, 829, 830], "fit": [7, 8, 31], "special": [7, 11, 29, 32, 33, 1417], "optim": [7, 196, 1016, 1017], "curve_fit": 7, "2d": [7, 30, 559, 597, 602, 605, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 631, 634, 638, 639, 641, 645, 696, 711, 888, 965, 1003, 1159, 1621, 1634, 1642, 1653, 1657], "3d": [7, 30, 566, 648, 965, 1621, 1634, 1642, 1653, 1654], "well": [7, 8, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 62, 351, 554, 837, 839, 840, 841, 842, 843, 844, 865, 867, 904, 906, 942, 944, 965, 980, 982, 1017, 1020, 1022, 1059, 1061, 1098, 1100, 1136, 1138, 1159, 1174, 1176, 1634, 1663], "etc": [7, 8, 12, 13, 16, 23, 27, 30, 32, 34, 737, 759, 1648], "entri": [7, 12, 13, 16, 18, 20, 22, 28, 29, 33, 196, 526, 736, 759, 813, 814, 828, 865, 904, 942, 980, 1020, 1059, 1098, 1136, 1174, 1690, 1796, 1804], "40": [7, 10, 30, 32, 33, 790, 826], "electrical_conduct": [7, 594, 821, 822], "accumul": 7, "mass": [7, 18, 20, 22, 23, 32, 762, 765, 778, 783, 835], "occur": [7, 17, 18, 27, 29, 31, 32, 33, 130, 196, 1653], "order": [7, 22, 27, 28, 29, 31, 33, 55, 60, 87, 90, 115, 120, 147, 152, 180, 185, 196, 213, 218, 219, 221, 245, 250, 278, 283, 311, 316, 344, 349, 378, 383, 411, 416, 444, 449, 470, 493, 496, 522, 526, 530, 537, 544, 736, 828, 858, 862, 876, 879, 897, 901, 915, 918, 935, 939, 953, 956, 973, 977, 991, 994, 1011, 1015, 1031, 1034, 1052, 1056, 1070, 1073, 1091, 1095, 1109, 1112, 1129, 1133, 1147, 1150, 1167, 1171, 1185, 1188, 1214, 1217, 1246, 1249, 1280, 1283, 1314, 1317, 1344, 1347, 1376, 1379, 1405, 1408, 1433, 1436, 1461, 1464, 1493, 1496, 1523, 1526, 1555, 1558, 1585, 1588, 1633, 1651, 1698, 1710, 1724, 1739, 1757, 1790], "surround": [7, 813], "its": [7, 11, 12, 16, 23, 26, 29, 30, 31, 33, 34, 99, 748, 749, 759, 770, 788, 789, 1618], "def": [7, 12, 13, 15, 25, 31, 1683, 1685, 1803], "effective_pore_volum": 7, "throat_volum": [7, 11, 29, 665], "pore_volum": [7, 11, 29, 30, 650, 665], "pvol": 7, "tvol": 7, "vtot": 7, "sum": [7, 8, 11, 12, 13, 25, 28, 29, 32, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 740, 782, 872, 911, 949, 987, 1027, 1066, 1105, 1143, 1181], "assert": 7, "isclos": 7, "effective_volum": 7, "field": [7, 1798, 1810], "therefor": [7, 9, 11, 12, 13, 21, 23, 27, 33, 554, 601, 603, 835, 836], "netwok": 7, "prior": [7, 16, 33], "advectiondiffus": [7, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "algorthim": 7, "50": [7, 10, 11, 23, 28, 29, 31, 33, 652, 654, 656, 703, 704, 706, 729, 734, 741], "rang": [7, 12, 13, 15, 25, 29, 33, 35, 1634, 1736, 1754], "timestep": 7, "tell": [7, 17, 18, 22, 25, 28, 29, 33], "rather": [7, 16, 22, 29, 33, 763, 861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170, 1626, 1630, 1631], "default": [7, 21, 25, 30, 31, 32, 34, 36, 44, 46, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 78, 83, 89, 90, 91, 92, 103, 105, 110, 117, 120, 121, 122, 123, 124, 136, 138, 143, 149, 150, 152, 153, 154, 155, 156, 157, 169, 171, 176, 182, 183, 185, 186, 187, 188, 189, 190, 201, 203, 208, 215, 218, 219, 220, 221, 222, 228, 234, 236, 241, 247, 248, 250, 251, 252, 253, 254, 255, 267, 269, 274, 280, 281, 283, 284, 285, 286, 287, 288, 300, 302, 307, 313, 314, 316, 317, 318, 319, 320, 321, 333, 335, 340, 346, 347, 349, 350, 351, 352, 353, 354, 355, 367, 369, 374, 380, 381, 383, 384, 385, 386, 387, 388, 400, 402, 407, 413, 414, 416, 417, 418, 419, 420, 421, 433, 435, 440, 446, 447, 449, 450, 451, 452, 453, 464, 471, 472, 478, 479, 482, 484, 489, 495, 498, 499, 506, 507, 511, 518, 523, 529, 533, 538, 542, 543, 554, 561, 566, 567, 569, 570, 571, 573, 574, 647, 650, 651, 653, 655, 699, 701, 702, 705, 724, 727, 728, 738, 759, 781, 806, 828, 832, 849, 851, 852, 855, 856, 857, 858, 860, 861, 862, 864, 865, 867, 871, 872, 878, 881, 882, 888, 890, 891, 894, 895, 896, 897, 899, 900, 901, 903, 904, 906, 910, 911, 917, 920, 921, 928, 929, 932, 933, 934, 935, 937, 938, 939, 941, 942, 944, 948, 949, 955, 958, 959, 965, 966, 967, 970, 971, 972, 973, 975, 976, 977, 979, 980, 982, 986, 987, 993, 996, 997, 1003, 1004, 1005, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1019, 1020, 1022, 1026, 1027, 1033, 1036, 1037, 1043, 1045, 1046, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1058, 1059, 1061, 1065, 1066, 1072, 1075, 1076, 1082, 1084, 1085, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1100, 1104, 1105, 1111, 1114, 1115, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1138, 1142, 1143, 1149, 1152, 1153, 1159, 1160, 1161, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1173, 1174, 1176, 1180, 1181, 1187, 1190, 1191, 1199, 1200, 1203, 1205, 1210, 1216, 1219, 1220, 1228, 1229, 1233, 1235, 1238, 1242, 1248, 1252, 1253, 1262, 1263, 1267, 1269, 1272, 1276, 1282, 1286, 1287, 1296, 1297, 1301, 1303, 1306, 1310, 1316, 1320, 1321, 1329, 1330, 1333, 1335, 1340, 1346, 1349, 1350, 1358, 1359, 1363, 1365, 1368, 1372, 1378, 1382, 1383, 1390, 1391, 1394, 1396, 1401, 1407, 1410, 1411, 1418, 1419, 1422, 1424, 1429, 1435, 1438, 1439, 1446, 1447, 1450, 1452, 1457, 1463, 1466, 1467, 1475, 1476, 1480, 1482, 1485, 1489, 1495, 1499, 1500, 1508, 1509, 1512, 1514, 1519, 1525, 1528, 1529, 1537, 1538, 1542, 1544, 1547, 1551, 1557, 1561, 1562, 1570, 1571, 1574, 1576, 1581, 1587, 1590, 1591, 1605, 1615, 1618, 1619, 1620, 1626, 1630, 1631, 1633, 1648, 1656, 1694, 1699, 1706, 1711, 1720, 1725, 1736, 1754, 1783, 1793], "which": [7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 44, 50, 58, 72, 76, 82, 99, 103, 109, 121, 123, 130, 136, 142, 150, 169, 175, 183, 196, 201, 207, 219, 221, 234, 240, 248, 261, 267, 273, 281, 300, 306, 314, 333, 339, 347, 348, 367, 373, 381, 382, 394, 400, 406, 414, 415, 427, 433, 439, 447, 459, 460, 468, 478, 479, 482, 488, 497, 506, 513, 526, 530, 531, 542, 543, 545, 550, 554, 566, 569, 571, 573, 622, 637, 647, 651, 652, 653, 654, 655, 656, 699, 702, 703, 704, 705, 706, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 747, 752, 754, 759, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 851, 852, 855, 856, 857, 859, 860, 870, 880, 888, 890, 891, 894, 895, 896, 898, 899, 909, 919, 928, 929, 932, 933, 934, 936, 937, 947, 957, 965, 966, 967, 970, 971, 972, 974, 975, 985, 995, 1003, 1004, 1005, 1008, 1009, 1010, 1012, 1013, 1025, 1035, 1045, 1046, 1049, 1050, 1051, 1053, 1054, 1064, 1074, 1082, 1084, 1085, 1088, 1089, 1090, 1092, 1093, 1103, 1113, 1121, 1122, 1123, 1126, 1127, 1128, 1130, 1131, 1141, 1151, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1179, 1189, 1198, 1199, 1200, 1203, 1209, 1218, 1227, 1228, 1229, 1233, 1241, 1251, 1260, 1261, 1262, 1263, 1267, 1275, 1285, 1294, 1295, 1296, 1297, 1301, 1309, 1319, 1329, 1330, 1333, 1339, 1348, 1356, 1357, 1358, 1359, 1363, 1371, 1381, 1389, 1390, 1391, 1394, 1400, 1409, 1417, 1418, 1419, 1422, 1428, 1437, 1446, 1447, 1450, 1456, 1465, 1474, 1475, 1476, 1480, 1488, 1498, 1508, 1509, 1512, 1518, 1527, 1536, 1537, 1538, 1542, 1550, 1560, 1569, 1570, 1571, 1574, 1580, 1589, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1626, 1629, 1632, 1633, 1642, 1643, 1648, 1649, 1650, 1651, 1654, 1655, 1656, 1660, 1670, 1672, 1675, 1677, 1681, 1683, 1685, 1688, 1740, 1786, 1791, 1796, 1797], "interv": [7, 348, 382, 415, 550], "integr": [7, 23, 32, 348, 382, 415, 550], "span": [7, 348, 382, 415, 1643, 1651], "tspan": [7, 348, 382, 415, 550], "mod": [7, 29], "ad_dif_conduct": [7, 594], "ad_dif": [7, 594], "s_scheme": [7, 811], "powerlaw": [7, 811], "transientadvectiondiffus": [7, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360], "_updat": [7, 12, 13], "set_outflow_bc": 7, "100": [7, 8, 9, 11, 18, 25, 26, 33, 862, 901, 939, 977, 1015, 1056, 1095, 1133, 1171], "saveat": [7, 348, 382, 415, 550], "x0": [7, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 550, 1605, 1609], "ps_front": 7, "ts_front": 7, "find_neighbor_throat": [7, 28, 30, 33, 872, 911, 949, 987, 1027, 1066, 1105, 1121, 1143, 1181], "xor": [7, 28, 30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 857, 858, 861, 862, 871, 872, 873, 874, 877, 883, 896, 897, 900, 901, 910, 911, 912, 913, 916, 922, 934, 935, 938, 939, 948, 949, 950, 951, 954, 960, 972, 973, 976, 977, 986, 987, 988, 989, 992, 998, 1010, 1011, 1014, 1015, 1026, 1027, 1028, 1029, 1032, 1038, 1051, 1052, 1055, 1056, 1065, 1066, 1067, 1068, 1071, 1077, 1090, 1091, 1094, 1095, 1104, 1105, 1106, 1107, 1110, 1116, 1128, 1129, 1132, 1133, 1142, 1143, 1144, 1145, 1148, 1154, 1166, 1167, 1170, 1171, 1180, 1181, 1182, 1183, 1186, 1192, 1203, 1210, 1211, 1212, 1215, 1221, 1233, 1242, 1243, 1244, 1247, 1254, 1267, 1276, 1277, 1278, 1281, 1288, 1301, 1310, 1311, 1312, 1315, 1322, 1333, 1340, 1341, 1342, 1345, 1351, 1363, 1372, 1373, 1374, 1377, 1384, 1394, 1401, 1402, 1403, 1406, 1412, 1422, 1429, 1430, 1431, 1434, 1440, 1450, 1457, 1458, 1459, 1462, 1468, 1480, 1489, 1490, 1491, 1494, 1501, 1512, 1519, 1520, 1521, 1524, 1530, 1542, 1551, 1552, 1553, 1556, 1563, 1574, 1581, 1582, 1583, 1586, 1592, 1626, 1630, 1631], "count": [7, 29, 52, 53, 84, 85, 111, 112, 144, 145, 177, 178, 209, 210, 242, 243, 275, 276, 308, 309, 341, 342, 375, 376, 408, 409, 441, 442, 490, 491, 508, 509, 554, 747, 858, 861, 862, 872, 873, 874, 897, 900, 901, 911, 912, 913, 935, 938, 939, 949, 950, 951, 973, 976, 977, 987, 988, 989, 1011, 1014, 1015, 1027, 1028, 1029, 1052, 1055, 1056, 1066, 1067, 1068, 1091, 1094, 1095, 1105, 1106, 1107, 1129, 1132, 1133, 1143, 1144, 1145, 1167, 1170, 1171, 1181, 1182, 1183, 1211, 1212, 1243, 1244, 1277, 1278, 1311, 1312, 1341, 1342, 1373, 1374, 1402, 1403, 1430, 1431, 1458, 1459, 1490, 1491, 1520, 1521, 1552, 1553, 1582, 1583, 1648], "c_avg": 7, "ti": 7, "c_front": 7, "q_front": 7, "append": [7, 12, 13, 25, 30, 31, 1623, 1656, 1733, 1751], "o": [7, 10, 12, 13, 30, 33, 34, 1786, 1791], "legend": [7, 12, 13, 30, 33], "set_xlabel": [7, 30], "set_ylabel": [7, 30], "being": [7, 13, 18, 22, 25, 30, 31, 33, 64, 155, 188, 253, 286, 319, 353, 386, 419, 478, 542, 571, 732, 736, 851, 855, 856, 890, 894, 895, 928, 932, 933, 966, 970, 971, 1004, 1008, 1009, 1045, 1049, 1050, 1084, 1088, 1089, 1122, 1126, 1127, 1160, 1164, 1165, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1786, 1804], "effictivli": 7, "fittiong": 7, "dl": 7, "el1": 7, "el2": 7, "el3": 7, "v_pred": 7, "q_throat": 7, "a_throat": 7, "v_throat": 7, "g": [7, 20, 23, 26, 29, 30, 31, 33, 36, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 478, 486, 542, 555, 562, 569, 669, 670, 762, 764, 765, 766, 784, 790, 793, 795, 796, 797, 801, 804, 805, 807, 808, 813, 835, 836, 849, 850, 851, 868, 889, 890, 907, 928, 945, 966, 983, 1004, 1023, 1044, 1045, 1062, 1082, 1083, 1084, 1101, 1122, 1139, 1160, 1177, 1199, 1207, 1228, 1239, 1262, 1273, 1296, 1307, 1329, 1337, 1358, 1369, 1390, 1398, 1418, 1426, 1446, 1454, 1475, 1486, 1508, 1516, 1537, 1548, 1570, 1578, 1627, 1670, 1683, 1781, 1788], "xdata": 7, "float": [7, 16, 20, 28, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 348, 352, 354, 382, 385, 387, 415, 418, 420, 451, 452, 550, 566, 654, 656, 704, 706, 723, 732, 734, 735, 741, 747, 752, 770, 813, 828, 832, 833, 835, 836, 1227, 1261, 1295, 1357, 1474, 1536, 1626, 1656, 1683, 1685, 1804], "ydata": 7, "popt": 7, "pcov": 7, "p0": 7, "disp_coeff": 7, "v_fit": 7, "4e": [7, 26], "m": [7, 21, 23, 29, 35, 554, 590, 669, 732, 764, 765, 766, 770, 789, 790, 796, 797, 801, 808, 835, 836], "6581e": 7, "09": [7, 9, 11, 13, 29], "3610e": 7, "04": [7, 13], "0669e": 7, "05": [7, 29, 31, 587, 590, 784], "el": 7, "zero": [7, 20, 27, 28, 33, 555, 601, 603, 832, 835, 836, 849, 855, 856, 865, 867, 888, 894, 895, 904, 906, 927, 932, 933, 942, 944, 965, 970, 971, 980, 982, 1003, 1008, 1009, 1020, 1022, 1043, 1049, 1050, 1059, 1061, 1082, 1088, 1089, 1098, 1100, 1121, 1126, 1127, 1136, 1138, 1159, 1164, 1165, 1174, 1176, 1627], "len": [7, 11, 13, 29, 32, 478, 542, 582, 678, 716, 719, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "torutous": 8, "complic": [8, 17, 20, 28, 29, 30, 31, 33], "multipli": [8, 25, 30, 830, 832, 1616], "divid": [8, 13], "eff": [8, 9, 12, 130], "epsilon": [8, 768], "tau": 8, "correct": [8, 9, 11, 21, 23, 28, 29, 30, 32, 33, 478, 496, 497, 542, 544, 545, 811, 817, 851, 879, 880, 890, 918, 919, 928, 956, 957, 966, 994, 995, 1004, 1034, 1035, 1045, 1073, 1074, 1084, 1112, 1113, 1122, 1150, 1151, 1160, 1188, 1189, 1199, 1217, 1218, 1228, 1249, 1251, 1262, 1283, 1285, 1296, 1317, 1319, 1329, 1347, 1348, 1358, 1379, 1381, 1390, 1408, 1409, 1418, 1436, 1437, 1446, 1464, 1465, 1475, 1496, 1498, 1508, 1526, 1527, 1537, 1558, 1560, 1570, 1588, 1589], "windi": 8, "path": [8, 10, 554, 558, 568, 572, 712, 713, 1632, 1786, 1787, 1791], "matter": 8, "move": [8, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 1615, 1620], "substanc": 8, "classic": [8, 196], "definit": [8, 15, 22, 23, 31, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452, 1159, 1777], "actual": [8, 15, 16, 17, 18, 22, 23, 25, 27, 28, 29, 30, 31, 33, 554, 565, 569, 656, 660, 706, 741, 833, 1633, 1661, 1792], "realiti": [8, 23, 31], "mani": [8, 15, 16, 18, 20, 25, 29, 31, 566, 733, 759, 813, 829, 888], "pathwai": 8, "thought": [8, 27, 33], "l_": 8, "repres": [8, 18, 28, 30, 33, 550, 622, 637, 656, 706, 741, 763, 835, 836, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165, 1356, 1417, 1616, 1617, 1653, 1655], "microstructur": 8, "materi": [8, 10, 12, 13, 26, 33, 58, 130, 150, 183, 248, 281, 314, 347, 381, 414, 447, 814, 1811], "toray090": 8, "carbon": 8, "paper": 8, "sand": [8, 33], "stone": 8, "electrospun": 8, "fiber": 8, "sphere": [8, 10, 11, 23, 26, 29, 30, 34, 579, 581, 582, 607, 620, 622, 635, 637, 650, 678, 690, 813, 1658], "cylind": [8, 10, 11, 23, 26, 29, 579, 582, 598, 600, 607, 612, 614, 620, 622, 627, 629, 635, 637, 678, 681, 683, 690, 813, 829, 1657], "all": [8, 10, 15, 16, 17, 20, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 44, 51, 52, 53, 56, 57, 60, 61, 62, 63, 64, 65, 67, 73, 74, 76, 83, 84, 85, 88, 89, 90, 91, 93, 99, 100, 101, 103, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 131, 132, 133, 134, 136, 143, 144, 145, 148, 149, 152, 153, 154, 155, 156, 158, 164, 165, 166, 167, 169, 176, 177, 178, 181, 182, 185, 186, 187, 188, 189, 191, 196, 198, 199, 201, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 229, 230, 231, 232, 234, 241, 242, 243, 246, 247, 250, 251, 252, 253, 254, 256, 262, 263, 264, 265, 267, 274, 275, 276, 279, 280, 283, 284, 285, 286, 287, 289, 295, 296, 297, 298, 300, 307, 308, 309, 312, 313, 316, 317, 318, 319, 320, 322, 328, 329, 330, 331, 333, 340, 341, 342, 345, 346, 349, 350, 351, 352, 353, 354, 356, 362, 363, 364, 365, 367, 374, 375, 376, 379, 380, 383, 384, 385, 386, 387, 389, 395, 396, 397, 398, 400, 407, 408, 409, 412, 413, 416, 417, 418, 419, 420, 422, 428, 429, 430, 431, 433, 440, 441, 442, 445, 446, 449, 450, 451, 452, 454, 459, 461, 471, 478, 479, 480, 482, 489, 490, 491, 494, 495, 496, 497, 498, 500, 506, 507, 508, 509, 510, 511, 512, 515, 526, 527, 542, 543, 544, 545, 558, 562, 568, 569, 571, 652, 653, 665, 703, 721, 729, 730, 759, 838, 851, 852, 853, 855, 856, 857, 858, 860, 861, 862, 871, 872, 873, 874, 877, 878, 879, 880, 881, 883, 890, 891, 892, 894, 895, 896, 897, 899, 900, 901, 910, 911, 912, 913, 916, 917, 918, 919, 920, 922, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 948, 949, 950, 951, 954, 955, 956, 957, 958, 960, 966, 967, 968, 970, 971, 972, 973, 975, 976, 977, 986, 987, 988, 989, 992, 993, 994, 995, 996, 998, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1026, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1038, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1074, 1075, 1077, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1104, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1114, 1116, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1151, 1152, 1154, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1189, 1190, 1192, 1199, 1200, 1201, 1203, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1221, 1228, 1229, 1230, 1231, 1233, 1242, 1243, 1244, 1247, 1248, 1249, 1251, 1252, 1254, 1259, 1262, 1263, 1264, 1265, 1267, 1276, 1277, 1278, 1281, 1282, 1283, 1285, 1286, 1288, 1293, 1296, 1297, 1298, 1299, 1301, 1310, 1311, 1312, 1315, 1316, 1317, 1319, 1320, 1322, 1327, 1329, 1330, 1331, 1333, 1340, 1341, 1342, 1345, 1346, 1347, 1348, 1349, 1351, 1356, 1358, 1359, 1360, 1361, 1363, 1372, 1373, 1374, 1377, 1378, 1379, 1381, 1382, 1384, 1389, 1390, 1391, 1392, 1394, 1401, 1402, 1403, 1406, 1407, 1408, 1409, 1410, 1412, 1417, 1418, 1419, 1420, 1422, 1429, 1430, 1431, 1434, 1435, 1436, 1437, 1438, 1440, 1446, 1447, 1448, 1450, 1457, 1458, 1459, 1462, 1463, 1464, 1465, 1466, 1468, 1475, 1476, 1477, 1478, 1480, 1489, 1490, 1491, 1494, 1495, 1496, 1498, 1499, 1501, 1506, 1508, 1509, 1510, 1512, 1519, 1520, 1521, 1524, 1525, 1526, 1527, 1528, 1530, 1537, 1538, 1539, 1540, 1542, 1551, 1552, 1553, 1556, 1557, 1558, 1560, 1561, 1563, 1568, 1570, 1571, 1572, 1574, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1590, 1592, 1598, 1600, 1605, 1615, 1616, 1617, 1620, 1621, 1626, 1630, 1631, 1633, 1640, 1648, 1649, 1650, 1652, 1655, 1659, 1662, 1675, 1677, 1681, 1690, 1691, 1703, 1717, 1730, 1740, 1742, 1746, 1748, 1761, 1763, 1764, 1766, 1773, 1775, 1777, 1778, 1791, 1792, 1796, 1798, 1801, 1802, 1807, 1808, 1809], "notic": [8, 31, 33], "0x7f84b87815e0": 8, "180": [8, 12, 13, 25, 33, 669], "36": [8, 11, 26, 29, 31, 33], "thermophys": [8, 10, 31, 758, 1389], "about": [8, 16, 17, 18, 22, 27, 28, 30, 31, 32, 33, 835, 836, 837, 839, 840, 841, 842, 843, 844, 872, 911, 949, 987, 1027, 1066, 1105, 1143, 1181, 1634, 1652, 1653, 1654], "air": [8, 12, 13, 17, 20, 31, 33, 34, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225], "remov": [8, 18, 23, 25, 26, 29, 30, 33, 36, 39, 54, 55, 60, 61, 64, 73, 86, 87, 90, 91, 100, 114, 115, 120, 121, 122, 123, 131, 146, 147, 152, 153, 155, 164, 179, 180, 185, 186, 188, 198, 212, 213, 218, 219, 220, 221, 229, 244, 245, 250, 251, 253, 262, 277, 278, 283, 284, 286, 295, 310, 311, 316, 317, 319, 328, 343, 344, 349, 350, 353, 362, 377, 378, 383, 384, 386, 395, 410, 411, 416, 417, 419, 428, 443, 444, 449, 450, 461, 469, 470, 480, 492, 493, 498, 511, 515, 521, 522, 527, 536, 537, 853, 855, 856, 875, 876, 881, 888, 892, 894, 895, 914, 915, 920, 930, 932, 933, 952, 953, 958, 968, 970, 971, 990, 991, 996, 1006, 1008, 1009, 1030, 1031, 1036, 1047, 1049, 1050, 1069, 1070, 1075, 1086, 1088, 1089, 1108, 1109, 1114, 1124, 1126, 1127, 1146, 1147, 1152, 1162, 1164, 1165, 1184, 1185, 1190, 1201, 1213, 1214, 1219, 1231, 1245, 1246, 1250, 1252, 1265, 1279, 1280, 1284, 1286, 1299, 1313, 1314, 1318, 1320, 1331, 1343, 1344, 1349, 1361, 1375, 1376, 1380, 1382, 1392, 1404, 1405, 1410, 1420, 1432, 1433, 1438, 1448, 1460, 1461, 1466, 1478, 1492, 1493, 1497, 1499, 1510, 1522, 1523, 1528, 1540, 1554, 1555, 1559, 1561, 1572, 1584, 1585, 1590, 1620, 1622, 1626, 1631, 1660, 1667, 1669, 1671, 1673, 1676, 1678, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1691, 1697, 1698, 1703, 1709, 1710, 1717, 1723, 1724, 1730, 1736, 1748, 1754, 1761, 1764, 1765, 1771, 1778, 1779, 1789, 1790, 1797], "del": [8, 25, 30, 31, 1250, 1284, 1318, 1380, 1497, 1559], "purpos": [8, 15, 20, 21, 29, 31, 33, 724], "fickiandiffus": [8, 9, 12, 22, 34, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162], "fd": [8, 12, 22, 34], "requir": [8, 10, 12, 13, 14, 15, 17, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 123, 496, 544, 566, 730, 759, 813, 829, 833, 879, 888, 918, 956, 994, 1034, 1073, 1112, 1121, 1150, 1188, 1217, 1249, 1283, 1317, 1347, 1379, 1389, 1408, 1436, 1464, 1496, 1526, 1558, 1588, 1616, 1641], "pretti": [8, 30, 513], "much": [8, 20, 23, 25, 28, 29, 30, 32], "everi": [8, 15, 16, 27, 29, 30, 31, 36, 1227, 1261, 1295, 1357, 1474, 1536, 1801, 1802], "specifi": [8, 18, 20, 22, 29, 30, 31, 33, 44, 51, 52, 53, 54, 56, 58, 59, 60, 61, 63, 64, 65, 67, 76, 83, 84, 85, 86, 88, 90, 91, 93, 103, 110, 111, 112, 114, 116, 120, 121, 122, 123, 125, 130, 136, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 158, 169, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 191, 197, 201, 208, 209, 210, 212, 214, 218, 219, 220, 221, 223, 234, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 256, 267, 274, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 289, 300, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 322, 333, 340, 341, 342, 343, 345, 347, 349, 350, 352, 353, 354, 356, 367, 374, 375, 376, 377, 379, 381, 383, 384, 385, 386, 387, 389, 394, 400, 407, 408, 409, 410, 412, 414, 416, 417, 418, 419, 420, 422, 433, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 454, 459, 469, 482, 489, 490, 491, 492, 494, 496, 498, 500, 506, 507, 508, 509, 510, 511, 512, 521, 536, 544, 555, 558, 559, 566, 569, 570, 574, 647, 648, 652, 655, 656, 703, 705, 706, 729, 738, 741, 780, 781, 806, 811, 849, 850, 855, 856, 857, 858, 861, 862, 865, 867, 871, 873, 874, 875, 877, 879, 881, 883, 888, 894, 895, 896, 897, 900, 901, 904, 906, 910, 912, 913, 914, 916, 918, 920, 922, 927, 932, 933, 934, 935, 938, 939, 942, 944, 948, 950, 951, 952, 954, 956, 958, 960, 965, 970, 971, 972, 973, 976, 977, 980, 982, 986, 988, 989, 990, 992, 994, 996, 998, 1003, 1008, 1009, 1010, 1011, 1014, 1015, 1017, 1020, 1022, 1026, 1028, 1029, 1030, 1032, 1034, 1036, 1038, 1043, 1049, 1050, 1051, 1052, 1055, 1056, 1059, 1061, 1065, 1067, 1068, 1069, 1071, 1073, 1075, 1077, 1082, 1083, 1088, 1089, 1090, 1091, 1094, 1095, 1098, 1100, 1104, 1106, 1107, 1108, 1110, 1112, 1114, 1116, 1121, 1126, 1127, 1128, 1129, 1132, 1133, 1136, 1138, 1142, 1144, 1145, 1146, 1148, 1150, 1152, 1154, 1159, 1164, 1165, 1166, 1167, 1170, 1171, 1174, 1176, 1180, 1182, 1183, 1184, 1186, 1188, 1190, 1192, 1203, 1210, 1211, 1212, 1213, 1215, 1217, 1219, 1221, 1233, 1238, 1242, 1243, 1244, 1245, 1247, 1249, 1252, 1254, 1259, 1267, 1272, 1276, 1277, 1278, 1279, 1281, 1283, 1286, 1288, 1293, 1301, 1306, 1310, 1311, 1312, 1313, 1315, 1317, 1320, 1322, 1327, 1333, 1340, 1341, 1342, 1343, 1345, 1347, 1349, 1351, 1363, 1368, 1372, 1373, 1374, 1375, 1377, 1379, 1382, 1384, 1389, 1394, 1401, 1402, 1403, 1404, 1406, 1408, 1410, 1412, 1422, 1429, 1430, 1431, 1432, 1434, 1436, 1438, 1440, 1450, 1457, 1458, 1459, 1460, 1462, 1464, 1466, 1468, 1480, 1485, 1489, 1490, 1491, 1492, 1494, 1496, 1499, 1501, 1506, 1512, 1519, 1520, 1521, 1522, 1524, 1526, 1528, 1530, 1542, 1547, 1551, 1552, 1553, 1554, 1556, 1558, 1561, 1563, 1568, 1574, 1581, 1582, 1583, 1584, 1586, 1588, 1590, 1592, 1615, 1618, 1626, 1630, 1631, 1633, 1634, 1640, 1642, 1651, 1679, 1697, 1709, 1723, 1779, 1786, 1789], "c_in": [8, 9], "c_out": [8, 9], "attach": [8, 15, 25, 28, 30, 31, 562, 647, 652, 654, 655, 656, 703, 704, 705, 706, 729, 733, 734, 738, 741, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 1417, 1656, 1801, 1802], "know": [8, 14, 15, 18, 23, 25, 26, 27, 28, 29, 31, 32, 33, 36], "take": [8, 10, 23, 25, 27, 29, 31, 196, 1798], "interpol": [8, 32, 34, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 486, 814, 828, 868, 907, 945, 983, 1023, 1062, 1101, 1139, 1177, 1207, 1239, 1273, 1307, 1337, 1369, 1398, 1426, 1454, 1486, 1516, 1548, 1578], "pc": [8, 10, 12, 31, 33, 759, 768, 789, 793, 795, 800, 804, 805, 807, 833], "tc": [8, 31, 759, 763, 764, 768, 775, 789, 796, 799, 800, 804, 805, 807], "interpolate_data": [8, 32], "size_bi": [8, 9, 26], "markers": [8, 9, 18, 26, 28], "400": [8, 26, 29], "linewidth": [8, 18, 26], "_": [8, 9, 16, 23, 33], "axi": [8, 9, 29, 32, 531, 554, 733, 828, 1615, 1621, 1633, 1642, 1648, 1653, 1654], "off": [8, 9, 18, 33, 759, 1654], "fick": [8, 20, 23, 130, 622], "shown": [8, 11, 16, 21, 22, 23, 26, 27, 28, 30, 32, 33, 34], "n_a": [8, 20, 622], "molar": [8, 763, 765, 770], "mole": [8, 763, 772, 774, 778, 781, 782, 783, 806, 1227, 1230, 1238, 1259, 1261, 1264, 1272, 1293, 1295, 1298, 1306, 1327, 1357, 1360, 1368, 1474, 1477, 1485, 1506, 1536, 1539, 1547, 1568], "per": [8, 10, 766, 784, 790, 797, 801, 808, 826], "rate_inlet": 8, "5e": [8, 10, 15, 26, 29, 32, 829, 830], "mol": [8, 762, 764, 765, 770, 775, 784, 786, 793, 795, 796, 804, 805, 807, 835, 836], "88846e": 8, "d_eff": [8, 9], "6e": 8, "776925e": 8, "measur": [8, 9], "varepsilon": 8, "But": [8, 30, 31], "pleas": [8, 9, 35], "v_p": 8, "v_t": 8, "v_bulk": 8, "prod": 8, "429901e": 8, "02": [8, 197], "d_ab": 8, "270571e": 8, "ratio": [9, 13, 23, 613, 623, 628, 638, 669, 726, 830], "conducit": 9, "pure": [9, 27, 32, 327, 759, 764, 766, 789, 790, 793, 795, 796, 797, 799, 800, 801, 804, 805, 807, 808, 1227, 1261, 1295, 1357, 1474, 1536], "brine": 9, "sigma_": 9, "factior": 9, "299e": 9, "diff": [9, 29], "colour": [9, 34], "media": [9, 10, 35, 813, 826], "research": [9, 35, 826], "process": [9, 10, 13, 15, 20, 22, 25, 29, 30, 32, 478, 542, 652, 703, 729, 809, 811, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1617, 1655], "substitut": [9, 23, 1604, 1665, 1666, 1688], "electron": [9, 23, 228, 835, 836], "analag": 9, "sigma": [9, 10, 20, 763, 768, 781, 788, 806, 814, 830, 1238, 1272, 1306, 1368, 1485, 1547], "respect": [9, 23, 27, 31, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 559, 733, 835, 836, 866, 905, 943, 981, 1021, 1060, 1099, 1137, 1175, 1206, 1237, 1271, 1305, 1336, 1367, 1397, 1425, 1453, 1484, 1515, 1546, 1577, 1653, 1804], "pai": 9, "attent": 9, "mai": [9, 11, 17, 20, 25, 27, 28, 29, 30, 31, 35, 60, 90, 120, 121, 123, 152, 185, 218, 219, 221, 250, 283, 316, 349, 383, 416, 449, 478, 542, 566, 647, 653, 655, 705, 738, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1633], "underestim": [9, 11], "r": [9, 11, 12, 13, 26, 32, 33, 505, 669, 670, 813, 814, 830, 837, 839, 840, 841, 842, 843, 844, 860, 899, 937, 965, 975, 1013, 1054, 1093, 1131, 1169, 1634, 1642, 1652, 1653], "34": [9, 26, 33], "10089643222": 9, "common": [10, 18, 25, 26, 27, 28, 29, 30, 858, 861, 862, 872, 897, 900, 901, 911, 935, 938, 939, 949, 973, 976, 977, 987, 1011, 1014, 1015, 1027, 1052, 1055, 1056, 1066, 1091, 1094, 1095, 1105, 1129, 1132, 1133, 1143, 1167, 1170, 1171, 1181, 1626, 1630, 1631, 1656], "techniqu": 10, "w": [10, 16, 17, 18, 35, 554, 783, 796, 797, 826], "loglevel": [10, 23], "20": [10, 18, 26, 27, 29, 30, 33, 835, 836, 888], "um": [10, 29], "topolog": [10, 29, 31, 742, 748, 749, 750, 1121, 1649, 1797], "conveni": [10, 27, 28, 30, 31, 32, 33, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 835, 836], "half": [10, 11, 29, 32, 653, 665], "smallest": [10, 29, 33, 1804], "neighbour": [10, 665], "invad": [10, 12, 13, 33, 99, 121, 196, 219, 814, 828, 832, 833, 1629], "tension": [10, 12, 13, 33, 770, 788, 789, 790, 813, 814, 828], "cours": [10, 25, 28, 30], "name": [10, 11, 12, 13, 15, 17, 25, 26, 29, 30, 31, 34, 36, 38, 57, 60, 64, 72, 89, 90, 98, 117, 120, 130, 149, 152, 155, 163, 182, 185, 188, 196, 215, 218, 228, 247, 250, 253, 261, 280, 283, 286, 294, 313, 316, 319, 327, 346, 349, 353, 361, 380, 383, 386, 394, 413, 416, 419, 427, 446, 449, 459, 460, 471, 477, 478, 495, 497, 513, 542, 545, 553, 555, 558, 561, 566, 568, 569, 572, 573, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 650, 652, 653, 654, 656, 658, 660, 663, 664, 665, 666, 667, 670, 674, 675, 676, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 701, 703, 704, 706, 708, 709, 710, 711, 715, 716, 717, 718, 719, 720, 729, 734, 737, 741, 759, 762, 763, 764, 765, 766, 768, 769, 770, 773, 775, 780, 784, 786, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 804, 805, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 833, 844, 846, 847, 849, 851, 878, 880, 888, 890, 917, 919, 927, 928, 955, 957, 965, 966, 993, 995, 1003, 1004, 1033, 1035, 1043, 1045, 1072, 1074, 1082, 1084, 1111, 1113, 1121, 1122, 1149, 1151, 1159, 1160, 1187, 1189, 1198, 1199, 1216, 1218, 1226, 1227, 1228, 1236, 1248, 1250, 1251, 1259, 1260, 1261, 1262, 1270, 1282, 1284, 1285, 1293, 1294, 1295, 1296, 1304, 1316, 1318, 1319, 1327, 1328, 1329, 1346, 1348, 1356, 1357, 1358, 1366, 1378, 1380, 1381, 1389, 1390, 1407, 1409, 1417, 1418, 1435, 1437, 1445, 1446, 1463, 1465, 1473, 1474, 1475, 1483, 1495, 1497, 1498, 1506, 1507, 1508, 1525, 1527, 1535, 1536, 1537, 1545, 1557, 1559, 1560, 1568, 1569, 1570, 1587, 1589, 1656, 1668, 1740, 1742, 1777, 1781, 1786, 1788, 1791, 1797, 1798, 1806], "calul": 10, "washburn": [10, 33, 593, 594, 830, 833], "p_c": [10, 33, 814, 830], "co": [10, 730, 814, 830], "theta": [10, 814, 830], "r_t": [10, 826], "contact": [10, 11, 12, 13, 33, 719, 813, 814, 828], "angl": [10, 12, 13, 33, 813, 814, 828], "while": [10, 16, 17, 25, 26, 27, 31, 33, 38, 61, 72, 91, 98, 122, 130, 153, 163, 186, 196, 220, 228, 251, 261, 284, 294, 317, 327, 350, 361, 384, 394, 417, 427, 450, 498, 511, 835, 836, 881, 920, 927, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590], "radiu": [10, 29, 32, 34, 813, 828, 829, 830, 860, 899, 937, 965, 975, 1013, 1054, 1093, 1131, 1169, 1634, 1642, 1656, 1657, 1658], "setup": [10, 33], "invasionpercol": [10, 13, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "ordinarypercol": [10, 12], "class": [10, 15, 16, 17, 21, 25, 27, 28, 30, 32, 33, 34, 37, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 477, 505, 513, 526, 541, 546, 547, 548, 549, 555, 558, 559, 826, 848, 849, 888, 927, 965, 1003, 1043, 1082, 1121, 1159, 1197, 1198, 1226, 1260, 1294, 1328, 1356, 1389, 1417, 1445, 1473, 1507, 1535, 1569, 1597, 1598, 1600, 1602, 1604, 1606, 1608, 1610, 1612, 1664, 1690, 1702, 1716, 1728, 1740, 1743, 1744, 1746, 1758, 1759, 1777, 1792, 1801, 1802, 1803], "ordinari": [10, 33], "percol": [10, 26, 29, 99, 196, 197, 211, 833, 1617, 1625, 1629, 1643, 1655], "access": [10, 14, 15, 17, 22, 25, 27, 30, 31, 33, 36, 196, 555, 647, 651, 652, 654, 655, 656, 699, 702, 703, 704, 705, 706, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176, 1417, 1670, 1683], "penetr": 10, "possibli": [10, 31], "directli": [10, 17, 22, 23, 25, 27, 28, 29, 30, 31, 33, 762, 763, 764, 765, 766, 768, 769, 770, 773, 775, 784, 786, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 804, 805, 807, 808, 850, 889, 1044, 1083, 1631, 1654], "though": [10, 18, 26, 27, 29, 30, 856, 888, 895, 933, 971, 1009, 1050, 1089, 1127, 1165], "frequent": [10, 36, 835, 836], "subclass": [10, 27, 38, 72, 130, 163, 228, 261, 294, 327, 394, 427, 460, 526, 550, 1198, 1356, 1389, 1569, 1716, 1728], "sever": [10, 16, 22, 25, 26, 27, 28, 29, 30, 31, 33, 477, 479, 543, 759, 832, 852, 891, 929, 967, 1005, 1046, 1085, 1121, 1123, 1161, 1200, 1229, 1263, 1297, 1330, 1359, 1391, 1419, 1447, 1476, 1509, 1538, 1571], "drainag": [10, 12, 13, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "set_inlet_bc": [10, 12, 13, 33], "messag": [10, 18, 25, 29], "analyz": [10, 29], "pc_curv": [10, 33, 98], "semilogx": 10, "modulenotfounderror": [11, 34], "traceback": 11, "recent": 11, "No": [11, 27, 28, 1618], "cubes_and_cuboid": [11, 23], "vol_void": 11, "vol_bulk": 11, "poro": 11, "2022": [11, 23], "47": [11, 26, 29, 33], "485": 11, "499": 11, "21": [11, 18, 26, 27, 30, 31, 33], "One": [11, 20, 25, 26, 27, 28, 29, 30, 31, 33, 752, 826, 1230, 1264, 1298, 1360, 1477, 1539], "correctli": [11, 1656], "erron": 11, "addit": [11, 20, 21, 26, 27, 29, 30, 31, 459, 478, 479, 542, 543, 716, 759, 838, 849, 851, 852, 890, 891, 928, 929, 966, 967, 1004, 1005, 1045, 1046, 1082, 1084, 1085, 1122, 1123, 1160, 1161, 1199, 1200, 1228, 1229, 1262, 1263, 1296, 1297, 1329, 1330, 1358, 1359, 1390, 1391, 1418, 1419, 1446, 1447, 1475, 1476, 1508, 1509, 1537, 1538, 1570, 1571], "figur": [11, 12, 13, 23, 30], "green": [11, 28, 29, 33], "center": [11, 23, 26, 27, 32, 719, 756, 828, 849, 888, 927, 1082, 1159, 1642], "ignor": [11, 23, 61, 64, 69, 91, 95, 122, 127, 153, 155, 160, 186, 188, 193, 220, 225, 251, 253, 258, 284, 286, 291, 317, 319, 324, 350, 353, 358, 384, 386, 391, 417, 419, 424, 450, 456, 474, 498, 502, 511, 699, 702, 727, 781, 806, 855, 881, 885, 894, 920, 924, 932, 958, 962, 970, 996, 1000, 1008, 1036, 1040, 1049, 1075, 1079, 1088, 1114, 1118, 1126, 1152, 1156, 1164, 1190, 1194, 1219, 1223, 1238, 1252, 1256, 1272, 1286, 1290, 1306, 1320, 1324, 1349, 1353, 1368, 1382, 1386, 1410, 1414, 1438, 1442, 1466, 1470, 1485, 1499, 1503, 1528, 1532, 1547, 1561, 1565, 1590, 1594, 1605, 1653, 1654, 1801, 1802, 1803], "far": [11, 23, 29, 30, 1642], "overestim": 11, "becaus": [11, 18, 23, 25, 27, 28, 29, 30, 31, 32, 33, 648, 653, 861, 862, 900, 901, 938, 939, 976, 977, 1014, 1015, 1055, 1056, 1094, 1095, 1132, 1133, 1170, 1171, 1630, 1631, 1742], "real": [11, 20, 573], "depend": [11, 20, 23, 27, 31, 33, 36, 478, 529, 530, 531, 542, 569, 811, 835, 836, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "account": [11, 12, 13, 20, 23, 32, 660, 715, 716, 717, 720, 813, 829, 833, 1661], "pendular_r": [11, 716, 718], "tackl": 11, "end": [11, 23, 27, 28, 29, 32, 622, 637, 647, 655, 678, 705, 718, 719, 738, 755, 759, 811, 1620, 1652, 1661, 1729, 1740, 1747, 1801, 1802], "vol_void_initi": 11, "vol_void_correct": 11, "poro_initi": 11, "poro_correct": 11, "initi": [11, 16, 17, 22, 29, 32, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 550], "5f": 11, "12852": 11, "12590": 11, "although": [11, 23, 27, 759, 835, 836], "neglig": [11, 601, 603], "too": [11, 27, 1230, 1264, 1298, 1360, 1477, 1539], "high": [11, 29, 33, 647, 655, 705, 738, 888, 1230, 1264, 1298, 1360, 1477, 1539], "neglect": [11, 33], "pendular": [11, 719], "ring": [11, 719, 1657], "resid": [11, 718, 719], "radii": [11, 29, 719], "howev": [11, 12, 13, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 52, 53, 84, 85, 111, 112, 144, 145, 177, 178, 196, 209, 210, 242, 243, 275, 276, 308, 309, 341, 342, 375, 376, 408, 409, 441, 442, 490, 491, 508, 509, 759, 873, 874, 912, 913, 950, 951, 988, 989, 1028, 1029, 1067, 1068, 1106, 1107, 1144, 1145, 1182, 1183, 1211, 1212, 1243, 1244, 1277, 1278, 1311, 1312, 1341, 1342, 1373, 1374, 1402, 1403, 1430, 1431, 1458, 1459, 1490, 1491, 1520, 1521, 1552, 1553, 1582, 1583], "segment": 11, "region": [11, 29, 855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164], "regular": 11, "fill": [11, 28, 30, 33, 832, 833], "perfectli": [11, 670, 1634], "im": [11, 26, 28, 849, 856, 888, 895, 927, 933, 965, 971, 1003, 1009, 1043, 1050, 1082, 1089, 1121, 1127, 1159, 1165, 1657, 1658], "overlapping_spher": 11, "maxit": [11, 1602, 1604, 1605, 1608, 1610], "imshow": [11, 28], "im_poro": 11, "metric": 11, "imag": [11, 18, 23, 26, 28, 29, 34, 554, 648, 855, 894, 927, 932, 970, 1008, 1049, 1088, 1126, 1164, 1657, 1658], "1f": 11, "63": [11, 26, 33], "snow": 11, "snow2": 11, "boundary_width": 11, "io": [11, 26, 34, 1792], "network_from_porespi": 11, "inscribed_diamet": 11, "throat_length": [11, 29, 578, 579, 580, 581, 582, 583, 584, 708, 709, 710, 711, 715, 716, 717, 720], "regen_mod": [11, 12, 13, 22, 31, 478, 479, 542, 543, 851, 852, 890, 891, 928, 929, 966, 967, 1004, 1005, 1045, 1046, 1084, 1085, 1122, 1123, 1160, 1161, 1199, 1200, 1228, 1229, 1262, 1263, 1296, 1297, 1329, 1330, 1358, 1359, 1390, 1391, 1418, 1419, 1446, 1447, 1475, 1476, 1508, 1509, 1537, 1538, 1570, 1571], "normal": [11, 29, 30, 31, 36, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 478, 542, 648, 759, 766, 790, 797, 799, 808, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1159, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1616, 1809], "cube": [11, 580, 599, 613, 628, 650, 682], "cuboid": [11, 29, 580, 581, 599, 606, 613, 615, 621, 628, 630, 636, 682, 684, 689], "pnm_poro": 11, "pnm": [11, 20, 32, 33, 722, 1786, 1791, 1792], "67": [11, 26, 33], "better": [11, 13, 31, 34], "indic": [12, 13, 15, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 56, 57, 58, 61, 62, 63, 64, 65, 67, 68, 69, 88, 89, 91, 93, 94, 95, 116, 117, 121, 122, 125, 126, 127, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 214, 215, 219, 220, 221, 223, 224, 225, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 279, 280, 281, 284, 285, 286, 287, 289, 290, 291, 312, 313, 314, 317, 318, 319, 320, 322, 323, 324, 345, 346, 347, 350, 351, 352, 353, 354, 356, 357, 358, 379, 380, 381, 384, 385, 386, 387, 389, 390, 391, 412, 413, 414, 417, 418, 419, 420, 422, 423, 424, 445, 446, 447, 450, 451, 452, 454, 455, 456, 459, 471, 473, 474, 478, 479, 494, 495, 498, 500, 501, 502, 510, 511, 512, 542, 543, 555, 567, 569, 647, 648, 655, 705, 738, 752, 781, 806, 849, 850, 851, 852, 855, 856, 859, 861, 862, 865, 867, 877, 878, 881, 883, 884, 885, 888, 889, 890, 891, 894, 895, 898, 900, 901, 904, 906, 916, 917, 920, 922, 923, 924, 927, 928, 929, 932, 933, 936, 938, 939, 942, 944, 954, 955, 958, 960, 961, 962, 965, 966, 967, 970, 971, 974, 976, 977, 980, 982, 992, 993, 996, 998, 999, 1000, 1003, 1004, 1005, 1008, 1009, 1012, 1014, 1015, 1016, 1020, 1022, 1032, 1033, 1036, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1049, 1050, 1053, 1055, 1056, 1059, 1061, 1071, 1072, 1075, 1077, 1078, 1079, 1082, 1083, 1084, 1085, 1088, 1089, 1092, 1094, 1095, 1098, 1100, 1110, 1111, 1114, 1116, 1117, 1118, 1121, 1122, 1123, 1126, 1127, 1130, 1132, 1133, 1136, 1138, 1148, 1149, 1152, 1154, 1155, 1156, 1159, 1160, 1161, 1164, 1165, 1168, 1170, 1171, 1174, 1176, 1186, 1187, 1190, 1192, 1193, 1194, 1199, 1200, 1215, 1216, 1219, 1221, 1222, 1223, 1228, 1229, 1230, 1238, 1247, 1248, 1252, 1254, 1255, 1256, 1262, 1263, 1264, 1272, 1281, 1282, 1286, 1288, 1289, 1290, 1296, 1297, 1298, 1306, 1315, 1316, 1320, 1322, 1323, 1324, 1329, 1330, 1345, 1346, 1349, 1351, 1352, 1353, 1358, 1359, 1360, 1368, 1377, 1378, 1382, 1384, 1385, 1386, 1390, 1391, 1406, 1407, 1410, 1412, 1413, 1414, 1418, 1419, 1434, 1435, 1438, 1440, 1441, 1442, 1446, 1447, 1462, 1463, 1466, 1468, 1469, 1470, 1475, 1476, 1477, 1485, 1494, 1495, 1499, 1501, 1502, 1503, 1508, 1509, 1524, 1525, 1528, 1530, 1531, 1532, 1537, 1538, 1539, 1547, 1556, 1557, 1561, 1563, 1564, 1565, 1570, 1571, 1586, 1587, 1590, 1592, 1593, 1594, 1615, 1617, 1621, 1622, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1635, 1636, 1640, 1642, 1643, 1651, 1655, 1660, 1661, 1807, 1808], "concept": [12, 23, 25, 29], "mechan": [12, 15, 33], "info": [12, 13, 1226, 1260, 1294, 1356, 1473, 1535], "similarli": [12, 17, 29], "072": [12, 13, 33], "contact_angl": [12, 13, 31, 33, 590, 591, 813, 814, 828, 829, 830], "partial": [12, 30], "non": [12, 13, 20, 22, 27, 28, 33, 211, 753, 814, 833, 849, 855, 856, 865, 867, 888, 894, 895, 904, 906, 927, 932, 933, 942, 944, 965, 970, 971, 980, 982, 1003, 1008, 1009, 1020, 1022, 1043, 1049, 1050, 1059, 1061, 1082, 1088, 1089, 1098, 1100, 1121, 1126, 1127, 1136, 1138, 1159, 1164, 1165, 1174, 1176, 1621, 1627], "wet": [12, 13, 33, 211, 670, 814, 826, 833], "accomplish": [12, 30, 32, 33, 1003, 1121], "invasonpercol": 12, "drn": [12, 33], "occup": [12, 777, 832, 1661], "point": [12, 13, 15, 18, 26, 27, 28, 29, 30, 31, 32, 34, 36, 119, 348, 382, 415, 550, 557, 652, 654, 656, 678, 703, 704, 706, 718, 726, 729, 731, 734, 740, 741, 745, 753, 757, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 833, 838, 844, 846, 847, 965, 1003, 1159, 1620, 1623, 1633, 1634, 1639, 1641, 1642, 1652, 1654], "invasion_pressur": [12, 33, 99], "10000": [12, 654, 656, 704, 706, 734, 741], "costum": [12, 13, 34], "sat_upd": 12, "nwp": [12, 13, 33, 833], "wp": [12, 13, 33, 833], "pore_mask": [12, 13], "throat_mask": [12, 13], "sat_p": [12, 13], "sat_t": [12, 13], "sat1": [12, 13], "bulk": [12, 13, 25], "sat": [12, 13], "cancel": [12, 13, 23], "out": [12, 13, 20, 23, 25, 27, 28, 29, 31, 32, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 470, 493, 522, 537, 777, 876, 915, 953, 991, 1031, 1070, 1109, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585, 1679, 1698, 1710, 1724, 1736, 1754, 1790], "remain": [12, 13, 33, 653, 1743], "fraction": [12, 13, 29, 763, 772, 774, 778, 781, 782, 783, 806, 833, 835, 836, 888, 1227, 1230, 1238, 1259, 1261, 1264, 1272, 1293, 1295, 1298, 1306, 1327, 1357, 1360, 1368, 1474, 1477, 1485, 1506, 1536, 1539, 1547, 1568, 1642], "rate_": 12, "fickian": [12, 23, 34, 130], "conduit_conduct": [12, 13], "wherea": [12, 13, 23, 835, 836, 1629], "generic_diffusive_conduct": 12, "same": [12, 13, 16, 17, 20, 23, 25, 26, 28, 29, 30, 31, 32, 33, 60, 63, 65, 90, 120, 152, 154, 156, 185, 187, 189, 218, 219, 221, 250, 252, 254, 283, 285, 287, 316, 318, 320, 349, 352, 354, 383, 385, 387, 416, 418, 420, 449, 451, 452, 479, 543, 571, 572, 650, 701, 718, 719, 755, 763, 813, 829, 835, 836, 852, 859, 872, 891, 898, 911, 927, 929, 936, 949, 967, 974, 987, 1005, 1012, 1027, 1046, 1053, 1066, 1085, 1092, 1105, 1123, 1130, 1143, 1161, 1168, 1181, 1200, 1229, 1263, 1297, 1330, 1359, 1391, 1419, 1447, 1476, 1509, 1538, 1571, 1617, 1618, 1621, 1625, 1627, 1640, 1642, 1643, 1655, 1746, 1777, 1798], "calcuat": [12, 13, 29, 693, 694, 695, 696, 697, 700, 707, 714], "rate_calc": [12, 13], "keyword": [12, 13, 478, 542, 550, 759, 838, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1626, 1630, 1631], "val": [12, 13, 15, 31, 478, 542, 780, 782, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1236, 1238, 1262, 1270, 1272, 1296, 1304, 1306, 1329, 1358, 1366, 1368, 1390, 1418, 1446, 1475, 1483, 1485, 1508, 1537, 1545, 1547, 1570], "focus": [12, 13], "diff_in": 12, "diff_out": 12, "presenc": [12, 13, 31], "model_mp_cond": [12, 13], "conduit_diffusive_conduct": 12, "throat_conduct": [12, 13, 821, 822, 832, 846, 847], "defer": [12, 13, 15, 22, 29, 30, 31, 478, 479, 542, 543, 851, 852, 890, 891, 928, 929, 966, 967, 1004, 1005, 1045, 1046, 1084, 1085, 1122, 1123, 1160, 1161, 1199, 1200, 1228, 1229, 1262, 1263, 1296, 1297, 1329, 1330, 1358, 1359, 1390, 1391, 1418, 1419, 1446, 1447, 1475, 1476, 1508, 1509, 1537, 1538, 1570, 1571], "over": [12, 13, 23, 29, 30, 34, 648, 759, 763, 777, 1604, 1777], "snwparr": [12, 13], "reldiff_nwp": 12, "reldiff_wp": 12, "uniqu": [12, 16, 28, 30, 849, 858, 862, 888, 897, 901, 935, 939, 965, 973, 977, 1011, 1015, 1043, 1052, 1056, 1082, 1091, 1095, 1121, 1129, 1133, 1159, 1167, 1171, 1417, 1656, 1742, 1788], "sat_point": 12, "rate_single_nwp": 12, "rate_single_wp": 12, "rate_mult_nwp": 12, "rate_mult_wp": 12, "dr_nwp": 12, "dr_wp": 12, "xlabel": [12, 13, 33], "snwp": [12, 13, 33], "ylabel": [12, 13, 33], "dr": [12, 830], "titl": [12, 13], "0x7f0f208adf40": 12, "sequenc": [13, 25, 33, 197], "asum": 13, "ip": [13, 33], "impplement": 13, "face": [13, 26, 130, 850, 888, 889, 1044, 1082, 1083, 1616, 1633, 1634, 1648, 1652], "By": [13, 23, 479, 543, 759, 852, 891, 929, 967, 1003, 1005, 1046, 1085, 1123, 1159, 1161, 1200, 1229, 1263, 1297, 1330, 1359, 1391, 1419, 1447, 1476, 1509, 1538, 1571, 1633], "finlets_init": 13, "finlet": 13, "satur": [13, 33, 211, 766, 790, 797, 808], "sat_occ_upd": 13, "ran": 13, "befor": [13, 28, 29, 30, 31, 33, 34, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 496, 498, 511, 530, 544, 759, 828, 879, 881, 918, 920, 956, 958, 994, 996, 1034, 1036, 1073, 1075, 1112, 1114, 1150, 1152, 1188, 1190, 1217, 1219, 1249, 1252, 1283, 1286, 1317, 1320, 1347, 1349, 1379, 1382, 1408, 1410, 1436, 1438, 1464, 1466, 1496, 1499, 1526, 1528, 1558, 1561, 1588, 1590, 1656, 1735, 1753], "int": [13, 23, 28, 52, 53, 60, 84, 85, 90, 111, 112, 119, 120, 144, 145, 152, 177, 178, 185, 209, 210, 218, 242, 243, 250, 275, 276, 283, 308, 309, 316, 341, 342, 349, 375, 376, 383, 408, 409, 416, 441, 442, 449, 490, 491, 508, 509, 555, 620, 635, 647, 648, 655, 705, 738, 873, 874, 888, 912, 913, 950, 951, 965, 988, 989, 1003, 1028, 1029, 1067, 1068, 1106, 1107, 1144, 1145, 1159, 1182, 1183, 1211, 1212, 1243, 1244, 1277, 1278, 1311, 1312, 1341, 1342, 1373, 1374, 1402, 1403, 1430, 1431, 1458, 1459, 1490, 1491, 1520, 1521, 1552, 1553, 1582, 1583, 1624, 1657, 1658, 1666, 1683, 1685, 1688], "invasion_sequ": [13, 33, 99, 197], "mask": [13, 25, 28, 56, 61, 68, 69, 88, 91, 94, 95, 116, 122, 126, 127, 148, 153, 159, 160, 181, 186, 192, 193, 214, 220, 224, 225, 246, 251, 257, 258, 279, 284, 290, 291, 312, 317, 323, 324, 345, 350, 357, 358, 379, 384, 390, 391, 412, 417, 423, 424, 445, 450, 455, 456, 473, 474, 494, 498, 501, 502, 510, 511, 861, 862, 877, 881, 884, 885, 900, 901, 916, 920, 923, 924, 927, 938, 939, 954, 958, 961, 962, 976, 977, 992, 996, 999, 1000, 1014, 1015, 1032, 1036, 1039, 1040, 1055, 1056, 1071, 1075, 1078, 1079, 1094, 1095, 1110, 1114, 1117, 1118, 1132, 1133, 1148, 1152, 1155, 1156, 1170, 1171, 1186, 1190, 1193, 1194, 1215, 1219, 1222, 1223, 1247, 1252, 1255, 1256, 1281, 1286, 1289, 1290, 1315, 1320, 1323, 1324, 1345, 1349, 1352, 1353, 1377, 1382, 1385, 1386, 1406, 1410, 1413, 1414, 1434, 1438, 1441, 1442, 1462, 1466, 1469, 1470, 1494, 1499, 1502, 1503, 1524, 1528, 1531, 1532, 1556, 1561, 1564, 1565, 1586, 1590, 1593, 1594, 1621, 1622, 1625, 1629, 1642], "within": [13, 25, 27, 29, 31, 32, 529, 723, 752, 790, 797, 833, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1619, 1634, 1650, 1656], "thorat": 13, "meet": [13, 32, 601, 603], "rphase": 13, "ephas": 13, "q_": 13, "stoke": [13, 637], "generic_hydraulic_conduct": 13, "st_p": 13, "relativep": 13, "flow_in": 13, "flow_out": 13, "detail": [13, 15, 23, 25, 26, 27, 29, 30, 31, 32, 34, 478, 542, 556, 813, 829, 835, 836, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1625], "plesas": 13, "conduit_hydraulic_conduct": 13, "hydraulic_conduct": [13, 16, 18, 32, 593, 594, 811, 819], "select": [13, 29, 31, 34, 62, 351, 596, 610, 625, 640, 649, 657, 662, 668, 673, 679, 693, 697, 700, 707, 714, 835, 836, 1614, 1650, 1670, 1683], "higher": [13, 26, 32, 33, 99, 713, 766, 790, 797, 808], "snwp_num": 13, "max_seq": 13, "max": [13, 29, 30, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 486, 651, 699, 702, 727, 728, 828, 829, 830, 868, 907, 945, 983, 1023, 1062, 1101, 1139, 1177, 1207, 1239, 1273, 1307, 1337, 1369, 1398, 1426, 1454, 1486, 1516, 1548, 1578], "stop": [13, 1734, 1752], "relperm_nwp": 13, "relperm_wp": 13, "rate_abs_nwp": 13, "rate_abs_wp": 13, "rate_enwp": 13, "rate_ewp": 13, "06": [13, 16, 29, 549, 587, 590, 747, 752, 829, 830, 832], "08": [13, 31, 34, 587, 590, 1602, 1604, 1608, 1610], "kr_nwp": 13, "kr_wp": 13, "kr": 13, "0x7ffb2a5f8040": 13, "folder": [14, 34, 36, 554, 558], "contribut": 14, "develop": [14, 16, 21, 26, 30, 33, 36, 554], "quit": [14, 26, 28, 29, 33, 653, 850, 889, 1044, 1083], "perman": 14, "repositori": 14, "via": [14, 17, 26, 27, 31, 33, 36, 550, 1003], "github": [14, 36, 1679], "NOT": [14, 33, 478, 542, 555, 715, 717, 720, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "test": [14, 23, 25, 27, 724, 759, 1800], "suit": [14, 29, 31, 1473, 1535], "gaurante": 14, "usual": [14, 17, 23, 27, 30], "them": [14, 15, 16, 18, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 459, 478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1615, 1618, 1643, 1648, 1655, 1656, 1739, 1757], "encourag": 14, "__version__": 14, "reader": 14, "least": [14, 25, 1633, 1641], "version": [14, 18, 25, 28, 29, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 468, 488, 763, 799, 870, 909, 947, 985, 1025, 1064, 1103, 1141, 1179, 1209, 1241, 1275, 1309, 1339, 1371, 1400, 1428, 1456, 1488, 1518, 1550, 1580, 1667, 1669, 1671, 1673, 1676, 1678, 1680, 1682, 1684, 1686, 1687, 1689, 1742], "inten": 14, "part": [15, 23, 27, 28, 32, 622, 637, 766, 790, 797, 801, 808, 861, 862, 900, 901, 938, 939, 976, 977, 1014, 1015, 1055, 1056, 1094, 1095, 1132, 1133, 1170, 1171, 1625, 1630, 1631, 1643, 1655, 1668, 1670, 1681, 1683], "design": [15, 17, 22, 23, 26, 478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "cover": [15, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "pore_to_pore_dist": [15, 30], "those": [15, 28, 30, 34, 348, 382, 415, 558, 648, 651, 699, 702, 727, 728, 858, 861, 862, 872, 897, 900, 901, 911, 935, 938, 939, 949, 973, 976, 977, 987, 1011, 1014, 1015, 1027, 1052, 1055, 1056, 1066, 1091, 1094, 1095, 1105, 1129, 1132, 1133, 1143, 1167, 1170, 1171, 1181, 1624, 1626, 1630, 1631], "receiv": [15, 28, 44, 56, 76, 88, 103, 116, 136, 148, 169, 181, 201, 214, 234, 246, 267, 279, 300, 312, 333, 345, 367, 379, 400, 412, 433, 445, 482, 494, 506, 510, 759, 857, 877, 896, 916, 934, 954, 972, 992, 1010, 1032, 1051, 1071, 1090, 1110, 1128, 1148, 1166, 1186, 1203, 1215, 1233, 1247, 1267, 1281, 1301, 1315, 1333, 1345, 1363, 1377, 1394, 1406, 1422, 1434, 1450, 1462, 1480, 1494, 1512, 1524, 1542, 1556, 1574, 1586], "avoid": [15, 17, 27, 29, 33, 557], "long": [15, 25, 27, 29, 30, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 473, 501, 730, 745, 855, 860, 884, 894, 899, 923, 932, 937, 961, 970, 975, 999, 1008, 1013, 1039, 1049, 1054, 1078, 1088, 1093, 1117, 1126, 1131, 1155, 1164, 1169, 1193, 1222, 1227, 1255, 1261, 1289, 1295, 1323, 1352, 1357, 1385, 1413, 1441, 1469, 1474, 1502, 1531, 1536, 1564, 1593, 1625, 1629], "tail": [15, 29, 647, 655, 705, 738, 1121], "And": [15, 20, 22, 25, 26, 27, 29, 30, 32], "featur": [15, 16, 17, 22, 25, 27, 28, 29, 30, 36, 459, 526, 554, 828], "rand": [15, 20, 22, 29, 31, 652, 654, 656, 703, 704, 706, 729, 730, 734, 741, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165], "5292881": 15, "62911362": 15, "56165803": 15, "52692991": 15, "45419288": 15, "58753647": 15, "46255233": 15, "7350638": 15, "77819766": 15, "wonder": [15, 25], "why": [15, 18, 25], "write": [15, 16, 20, 22, 23, 25, 27, 29, 561, 562, 565, 573], "pass": [15, 25, 27, 29, 30, 31, 348, 382, 415, 478, 497, 542, 545, 759, 762, 763, 764, 765, 766, 768, 769, 770, 773, 775, 784, 786, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 804, 805, 807, 808, 811, 838, 851, 880, 890, 919, 928, 957, 966, 995, 1004, 1035, 1045, 1074, 1084, 1113, 1122, 1151, 1160, 1189, 1199, 1218, 1228, 1251, 1262, 1285, 1296, 1319, 1329, 1348, 1358, 1381, 1390, 1409, 1418, 1437, 1446, 1465, 1475, 1498, 1508, 1527, 1537, 1560, 1570, 1589, 1650, 1657, 1658, 1683, 1740, 1788], "what": [15, 17, 18, 22, 23, 25, 27, 28, 29, 30, 31, 36, 759, 828, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165, 1648], "forc": [15, 29, 62, 351], "expect": [15, 16, 26, 29, 31, 1777], "caught": [15, 25], "written": [15, 16, 22, 25, 27, 29, 30, 32, 573], "abil": [15, 25, 27, 31, 32, 459, 513], "variou": [15, 16, 28, 29, 31, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452, 558, 610, 625, 640, 662, 679, 714], "placesn": 15, "throughout": [15, 20, 27, 29, 30, 1417], "script": [15, 30, 1604], "desir": [15, 27, 28, 29, 30, 31, 478, 529, 542, 559, 561, 565, 566, 570, 572, 574, 780, 851, 855, 856, 890, 894, 895, 927, 928, 932, 933, 966, 970, 971, 1004, 1008, 1009, 1045, 1049, 1050, 1084, 1088, 1089, 1122, 1126, 1127, 1160, 1164, 1165, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1651], "proudc": 15, "relev": [16, 25, 30], "particularli": [16, 27, 30], "thing": [16, 27, 28, 29, 30, 31, 33, 36], "toler": [16, 1648, 1804], "overview": [16, 25, 29], "behavior": [16, 25, 26, 29, 30, 31, 670], "plenti": 16, "good": [16, 25, 26, 29], "demo": [16, 17, 18, 25, 27, 31, 32, 33, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081], "uuid": [16, 1742], "f7c8bae0": 16, "874a": 16, "4273": 16, "b516": 16, "ea1b85a60522": 16, "default_domain": 16, "domain_1": 16, "cach": 16, "true": [16, 22, 25, 26, 27, 28, 29, 30, 33, 56, 62, 67, 68, 69, 88, 93, 94, 95, 99, 116, 125, 126, 127, 148, 158, 159, 160, 181, 191, 192, 193, 197, 214, 223, 224, 225, 246, 256, 257, 258, 279, 289, 290, 291, 312, 322, 323, 324, 345, 351, 356, 357, 358, 379, 389, 390, 391, 412, 422, 423, 424, 445, 454, 455, 456, 459, 473, 474, 494, 500, 501, 502, 510, 512, 571, 597, 602, 605, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 631, 634, 638, 639, 641, 645, 699, 702, 711, 727, 728, 855, 856, 858, 860, 861, 862, 872, 877, 883, 884, 885, 894, 895, 897, 899, 900, 901, 911, 916, 922, 923, 924, 927, 932, 933, 935, 937, 938, 939, 949, 954, 960, 961, 962, 970, 971, 973, 975, 976, 977, 987, 992, 998, 999, 1000, 1008, 1009, 1011, 1013, 1014, 1015, 1027, 1032, 1038, 1039, 1040, 1049, 1050, 1052, 1054, 1055, 1056, 1066, 1071, 1077, 1078, 1079, 1088, 1089, 1091, 1093, 1094, 1095, 1105, 1110, 1116, 1117, 1118, 1126, 1127, 1129, 1131, 1132, 1133, 1143, 1148, 1154, 1155, 1156, 1164, 1165, 1167, 1169, 1170, 1171, 1181, 1186, 1192, 1193, 1194, 1215, 1221, 1222, 1223, 1230, 1247, 1254, 1255, 1256, 1264, 1281, 1288, 1289, 1290, 1298, 1315, 1322, 1323, 1324, 1345, 1351, 1352, 1353, 1360, 1377, 1384, 1385, 1386, 1406, 1412, 1413, 1414, 1434, 1440, 1441, 1442, 1462, 1468, 1469, 1470, 1477, 1494, 1501, 1502, 1503, 1524, 1530, 1531, 1532, 1539, 1556, 1563, 1564, 1565, 1586, 1592, 1593, 1594, 1617, 1620, 1621, 1622, 1626, 1629, 1630, 1631, 1634, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1651, 1655, 1768, 1796, 1804, 1807, 1808], "phase_01": [16, 22, 31, 32, 1801, 1802], "variable_prop": 16, "typedset": [16, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776], "f_rtol": 16, "newton_maxit": 16, "5000": 16, "relaxation_factor": 16, "x_rtol": 16, "behav": 16, "somewhat": [16, 32], "dataclass": [16, 849, 888, 965, 1043, 1082, 1121, 1159], "sorri": 16, "explor": [16, 26, 27, 29, 813, 829, 872, 911, 949, 987, 1027, 1066, 1105, 1143, 1181], "talk": 16, "onc": [16, 25, 29, 31, 32, 36, 479, 543, 852, 891, 929, 967, 1005, 1046, 1085, 1123, 1161, 1200, 1229, 1263, 1297, 1330, 1359, 1391, 1419, 1447, 1476, 1509, 1538, 1571, 1634, 1739, 1757], "subsequ": [16, 33, 647, 655, 705, 738], "try": [16, 18, 25, 27, 34], "except": [16, 18, 20, 25, 27, 34, 60, 68, 90, 94, 120, 121, 123, 126, 152, 159, 185, 192, 197, 218, 219, 221, 224, 250, 257, 283, 290, 316, 323, 349, 357, 383, 390, 416, 423, 449, 455, 473, 501, 530, 884, 923, 927, 961, 999, 1039, 1078, 1117, 1155, 1193, 1222, 1255, 1289, 1323, 1352, 1385, 1413, 1441, 1469, 1502, 1531, 1564, 1593], "accept": [16, 27, 30, 44, 50, 51, 52, 53, 56, 67, 76, 82, 83, 84, 85, 88, 93, 103, 109, 110, 111, 112, 116, 125, 136, 142, 143, 144, 145, 148, 158, 169, 175, 176, 177, 178, 181, 191, 201, 207, 208, 209, 210, 214, 223, 234, 240, 241, 242, 243, 246, 256, 267, 273, 274, 275, 276, 279, 289, 300, 306, 307, 308, 309, 312, 322, 333, 339, 340, 341, 342, 345, 356, 367, 373, 374, 375, 376, 379, 389, 400, 406, 407, 408, 409, 412, 422, 433, 439, 440, 441, 442, 445, 454, 468, 482, 488, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 652, 654, 703, 704, 729, 734, 838, 857, 858, 861, 862, 870, 871, 872, 873, 874, 877, 883, 896, 897, 900, 901, 909, 910, 911, 912, 913, 916, 922, 934, 935, 938, 939, 947, 948, 949, 950, 951, 954, 960, 972, 973, 976, 977, 985, 986, 987, 988, 989, 992, 998, 1010, 1011, 1014, 1015, 1025, 1026, 1027, 1028, 1029, 1032, 1038, 1051, 1052, 1055, 1056, 1064, 1065, 1066, 1067, 1068, 1071, 1077, 1090, 1091, 1094, 1095, 1103, 1104, 1105, 1106, 1107, 1110, 1116, 1128, 1129, 1132, 1133, 1141, 1142, 1143, 1144, 1145, 1148, 1154, 1166, 1167, 1170, 1171, 1179, 1180, 1181, 1182, 1183, 1186, 1192, 1203, 1209, 1210, 1211, 1212, 1215, 1221, 1233, 1241, 1242, 1243, 1244, 1247, 1254, 1267, 1275, 1276, 1277, 1278, 1281, 1288, 1301, 1309, 1310, 1311, 1312, 1315, 1322, 1333, 1339, 1340, 1341, 1342, 1345, 1351, 1363, 1371, 1372, 1373, 1374, 1377, 1384, 1394, 1400, 1401, 1402, 1403, 1406, 1412, 1422, 1428, 1429, 1430, 1431, 1434, 1440, 1450, 1456, 1457, 1458, 1459, 1462, 1468, 1480, 1488, 1489, 1490, 1491, 1494, 1501, 1512, 1518, 1519, 1520, 1521, 1524, 1530, 1542, 1550, 1551, 1552, 1553, 1556, 1563, 1574, 1580, 1581, 1582, 1583, 1586, 1592, 1626, 1630, 1631], "reciev": 16, "str": [16, 25, 40, 44, 47, 48, 50, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 74, 76, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 93, 101, 103, 106, 107, 109, 110, 111, 112, 116, 117, 120, 121, 122, 123, 125, 132, 136, 139, 140, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 165, 169, 172, 173, 175, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 189, 191, 199, 201, 204, 205, 207, 208, 209, 210, 214, 215, 218, 219, 220, 221, 223, 230, 234, 237, 238, 240, 241, 242, 243, 246, 247, 248, 250, 251, 252, 253, 254, 256, 263, 267, 270, 271, 273, 274, 275, 276, 279, 280, 281, 283, 284, 285, 286, 287, 289, 296, 300, 303, 304, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 322, 329, 333, 336, 337, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 363, 367, 370, 371, 373, 374, 375, 376, 379, 380, 381, 383, 384, 385, 386, 387, 389, 396, 400, 403, 404, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 422, 429, 433, 436, 437, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 454, 465, 466, 468, 471, 478, 479, 482, 485, 486, 488, 489, 490, 491, 494, 495, 497, 498, 500, 506, 507, 508, 509, 510, 511, 512, 542, 543, 545, 553, 554, 557, 558, 561, 566, 568, 569, 572, 573, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 650, 651, 652, 653, 654, 656, 658, 660, 663, 664, 665, 666, 667, 670, 674, 675, 676, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 699, 701, 702, 703, 704, 706, 708, 709, 710, 711, 715, 716, 717, 718, 719, 720, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 739, 741, 745, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 822, 824, 825, 826, 828, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 850, 851, 852, 855, 856, 857, 858, 861, 862, 865, 866, 867, 868, 870, 871, 872, 873, 874, 877, 878, 880, 881, 883, 888, 889, 890, 891, 894, 895, 896, 897, 900, 901, 904, 905, 906, 907, 909, 910, 911, 912, 913, 916, 917, 919, 920, 922, 927, 928, 929, 932, 933, 934, 935, 938, 939, 942, 943, 944, 945, 947, 948, 949, 950, 951, 954, 955, 957, 958, 960, 965, 966, 967, 970, 971, 972, 973, 976, 977, 980, 981, 982, 983, 985, 986, 987, 988, 989, 992, 993, 995, 996, 998, 1004, 1005, 1008, 1009, 1010, 1011, 1014, 1015, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1032, 1033, 1035, 1036, 1038, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1055, 1056, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1071, 1072, 1074, 1075, 1077, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1091, 1094, 1095, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1110, 1111, 1113, 1114, 1116, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1132, 1133, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1151, 1152, 1154, 1159, 1160, 1161, 1164, 1165, 1166, 1167, 1170, 1171, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1183, 1186, 1187, 1189, 1190, 1192, 1199, 1200, 1203, 1206, 1207, 1209, 1210, 1211, 1212, 1215, 1216, 1218, 1219, 1221, 1228, 1229, 1233, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1247, 1248, 1250, 1251, 1252, 1254, 1259, 1262, 1263, 1267, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1281, 1282, 1284, 1285, 1286, 1288, 1293, 1296, 1297, 1301, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1315, 1316, 1318, 1319, 1320, 1322, 1327, 1329, 1330, 1333, 1336, 1337, 1339, 1340, 1341, 1342, 1345, 1346, 1348, 1349, 1351, 1358, 1359, 1363, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1377, 1378, 1380, 1381, 1382, 1384, 1390, 1391, 1394, 1397, 1398, 1400, 1401, 1402, 1403, 1406, 1407, 1409, 1410, 1412, 1417, 1418, 1419, 1422, 1425, 1426, 1428, 1429, 1430, 1431, 1434, 1435, 1437, 1438, 1440, 1446, 1447, 1450, 1453, 1454, 1456, 1457, 1458, 1459, 1462, 1463, 1465, 1466, 1468, 1475, 1476, 1480, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1494, 1495, 1497, 1498, 1499, 1501, 1506, 1508, 1509, 1512, 1515, 1516, 1518, 1519, 1520, 1521, 1524, 1525, 1527, 1528, 1530, 1537, 1538, 1542, 1545, 1546, 1547, 1548, 1550, 1551, 1552, 1553, 1556, 1557, 1559, 1560, 1561, 1563, 1568, 1570, 1571, 1574, 1577, 1578, 1580, 1581, 1582, 1583, 1586, 1587, 1589, 1590, 1592, 1605, 1615, 1618, 1623, 1626, 1630, 1631, 1633, 1648, 1650, 1656, 1666, 1668, 1670, 1672, 1675, 1677, 1679, 1681, 1683, 1685, 1688, 1742, 1781, 1786, 1787, 1788, 1791, 1792, 1801, 1802, 1806], "getattr": 16, "still": [16, 22, 26, 33, 36], "tab": [16, 17, 29, 34], "complet": [16, 29, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 498, 511, 832, 835, 836, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590], "when": [16, 18, 22, 25, 27, 28, 29, 30, 31, 33, 34, 51, 60, 83, 90, 110, 120, 143, 152, 176, 185, 208, 218, 241, 250, 261, 274, 283, 307, 316, 340, 349, 374, 383, 407, 416, 440, 449, 459, 478, 489, 507, 542, 570, 650, 653, 678, 701, 811, 828, 832, 851, 871, 890, 910, 928, 948, 966, 986, 1004, 1026, 1045, 1065, 1084, 1104, 1122, 1142, 1160, 1180, 1199, 1210, 1228, 1242, 1262, 1276, 1296, 1310, 1329, 1340, 1358, 1372, 1390, 1401, 1418, 1429, 1446, 1457, 1475, 1489, 1508, 1519, 1537, 1551, 1570, 1581, 1605, 1632, 1656, 1666, 1688, 1740, 1792, 1801, 1802], "consid": [16, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 123, 221, 653, 660, 718, 719, 747, 752, 819, 861, 862, 900, 901, 938, 939, 976, 977, 1014, 1015, 1055, 1056, 1094, 1095, 1121, 1132, 1133, 1170, 1171, 1617, 1621, 1625, 1629, 1630, 1631, 1633, 1642, 1661, 1690], "trait": 16, "attr": 16, "pydant": 16, "had": [16, 18, 22, 30], "major": [16, 30, 459], "drawback": 16, "clutter": 16, "item": [16, 17, 25, 28, 29, 31, 39, 73, 100, 131, 164, 196, 198, 229, 262, 295, 328, 362, 395, 428, 461, 480, 515, 527, 828, 837, 839, 840, 841, 842, 843, 844, 853, 892, 930, 968, 1006, 1047, 1086, 1124, 1162, 1201, 1230, 1231, 1264, 1265, 1298, 1299, 1331, 1360, 1361, 1392, 1420, 1448, 1477, 1478, 1510, 1539, 1540, 1572, 1670, 1672, 1683, 1685, 1691, 1703, 1716, 1717, 1728, 1730, 1736, 1739, 1741, 1745, 1748, 1754, 1757, 1760, 1778, 1801, 1802], "dir": [16, 25], "startswith": [16, 25, 28], "certain": [16, 30, 1605, 1650], "futur": [16, 865, 867, 904, 906, 942, 944, 980, 982, 1020, 1022, 1059, 1061, 1098, 1100, 1121, 1136, 1138, 1174, 1176], "typedlist": [16, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757], "insist": [16, 36], "cannot": [16, 18, 20, 25, 27, 28, 31, 64, 99, 155, 188, 253, 286, 319, 353, 386, 419, 1121], "prevent": [16, 29, 31, 647, 655, 705, 738], "doe": [16, 17, 22, 27, 28, 29, 31, 32, 33, 61, 62, 68, 70, 91, 94, 96, 122, 126, 128, 153, 159, 161, 186, 192, 194, 197, 220, 224, 226, 251, 257, 259, 284, 290, 292, 317, 323, 325, 350, 351, 357, 359, 384, 390, 392, 417, 423, 425, 450, 455, 457, 473, 475, 498, 501, 503, 511, 524, 539, 555, 573, 715, 716, 717, 718, 719, 720, 833, 881, 884, 886, 920, 923, 925, 958, 961, 963, 996, 999, 1001, 1036, 1039, 1041, 1075, 1078, 1080, 1114, 1117, 1119, 1152, 1155, 1157, 1190, 1193, 1195, 1219, 1222, 1224, 1252, 1255, 1257, 1286, 1289, 1291, 1320, 1323, 1325, 1349, 1352, 1354, 1382, 1385, 1387, 1410, 1413, 1415, 1438, 1441, 1443, 1466, 1469, 1471, 1499, 1502, 1504, 1528, 1531, 1533, 1561, 1564, 1566, 1590, 1593, 1595, 1633, 1653, 1700, 1714, 1726, 1779, 1794, 1797], "place": [16, 26, 27, 29, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 456, 474, 497, 502, 545, 566, 573, 648, 653, 724, 730, 855, 856, 880, 885, 894, 895, 919, 924, 932, 933, 957, 962, 970, 971, 995, 1000, 1008, 1009, 1035, 1040, 1049, 1050, 1074, 1079, 1088, 1089, 1113, 1118, 1126, 1127, 1151, 1156, 1164, 1165, 1189, 1194, 1218, 1223, 1251, 1256, 1285, 1290, 1319, 1324, 1348, 1353, 1381, 1386, 1409, 1414, 1437, 1442, 1465, 1470, 1498, 1503, 1527, 1532, 1560, 1565, 1589, 1594, 1653, 1654, 1738, 1739, 1756, 1757], "usabl": 16, "even": [16, 18, 26, 29, 30, 31, 750, 861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170], "overload": [16, 25, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 468, 488, 870, 909, 947, 985, 1025, 1064, 1103, 1141, 1179, 1209, 1241, 1275, 1309, 1339, 1371, 1400, 1428, 1456, 1488, 1518, 1550, 1580], "__new__": 16, "base2": [16, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 505], "descend": [16, 459, 1739, 1757], "core": [16, 1604], "97a84c2c": 16, "100d": 16, "433b": 16, "97f7": 16, "f700c2c7a7b4": 16, "dure": [16, 26, 29, 30, 459, 1656, 1746], "reload": 16, "worri": [17, 23], "until": [17, 33, 653, 1681], "equival": [17, 31, 60, 68, 90, 94, 120, 126, 152, 159, 185, 192, 218, 224, 250, 257, 283, 290, 316, 323, 349, 357, 383, 390, 416, 423, 449, 455, 473, 497, 501, 545, 858, 861, 862, 872, 880, 884, 897, 900, 901, 911, 919, 923, 935, 938, 939, 949, 957, 961, 973, 976, 977, 987, 995, 999, 1011, 1014, 1015, 1027, 1035, 1039, 1052, 1055, 1056, 1066, 1074, 1078, 1091, 1094, 1095, 1105, 1113, 1117, 1129, 1132, 1133, 1143, 1151, 1155, 1167, 1170, 1171, 1181, 1189, 1193, 1218, 1222, 1251, 1255, 1259, 1285, 1289, 1293, 1319, 1323, 1327, 1348, 1352, 1381, 1385, 1409, 1413, 1437, 1441, 1465, 1469, 1498, 1502, 1506, 1527, 1531, 1560, 1564, 1568, 1589, 1593, 1626, 1630, 1631, 1683, 1685], "web": 17, "browser": [17, 34], "window": 17, "insid": [17, 678, 828, 1017], "isol": [17, 18, 28, 1618, 1629, 1648, 1797], "associ": [17, 394, 459, 526, 647, 651, 652, 654, 655, 656, 699, 702, 703, 704, 705, 706, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 737, 738, 739, 740, 741, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 786, 788, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 824, 825, 826, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 1417, 1740, 1791], "There": [17, 25, 26, 28, 29, 30, 31, 32, 555, 713], "open": [17, 34, 35, 36, 572, 835, 836, 1625, 1740, 1777, 1786], "regist": [17, 1740], "load": [17, 553, 554, 557, 558, 1786, 1787, 1792], "verifi": [17, 23, 32], "current": [17, 18, 22, 26, 31, 34, 38, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 554, 835, 836, 837, 839, 840, 841, 842, 843, 844, 1656, 1742, 1786, 1787, 1791, 1792], "empti": [17, 30, 31, 32, 51, 55, 60, 83, 87, 90, 110, 115, 120, 143, 147, 152, 176, 180, 185, 208, 213, 218, 241, 245, 250, 274, 278, 283, 307, 311, 316, 340, 344, 349, 374, 378, 383, 407, 411, 416, 440, 444, 449, 470, 489, 493, 507, 522, 537, 752, 871, 876, 910, 915, 948, 953, 986, 991, 1026, 1031, 1065, 1070, 1104, 1109, 1142, 1147, 1180, 1185, 1210, 1214, 1242, 1246, 1276, 1280, 1310, 1314, 1340, 1344, 1372, 1376, 1389, 1401, 1405, 1429, 1433, 1457, 1461, 1489, 1493, 1519, 1523, 1551, 1555, 1581, 1585, 1632, 1690, 1698, 1710, 1724, 1736, 1754, 1771, 1788, 1790, 1796], "automat": [17, 27, 29, 31, 32, 566, 730, 1604, 1633, 1742, 1788], "id": [17, 26, 34, 849, 865, 867, 888, 904, 906, 927, 942, 944, 965, 980, 982, 1003, 1020, 1022, 1043, 1059, 1061, 1082, 1098, 1100, 1121, 1136, 1138, 1159, 1174, 1176], "0x7f8b040bd720": 17, "possibl": [17, 22, 25, 26, 27, 28, 29, 30, 31, 36, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 530, 718, 719, 861, 862, 900, 901, 938, 939, 965, 976, 977, 1014, 1015, 1055, 1056, 1094, 1095, 1132, 1133, 1159, 1170, 1171, 1605, 1619, 1630, 1631, 1651, 1740], "proj": [17, 1742, 1781, 1788], "new_project": 17, "pn2": 17, "activ": [17, 36, 1777], "proj_01": [17, 1788], "proj_02": [17, 1781], "0x7f8b4891fc20": 17, "purg": [17, 30, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 498, 511, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590], "close_project": 17, "again": [17, 20, 28, 29, 32, 653], "pattern": [17, 18, 33, 648, 830], "ONE": 17, "session": [17, 1777], "enabl": [17, 33, 569, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "lookup": [17, 28, 30, 31, 32, 773, 786, 1417], "relationship": [17, 23], "belong": [17, 18, 22, 30, 33, 99, 478, 542, 745, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1617, 1655, 1740], "scan": [17, 29, 1016, 1017], "0x7f8b0355d680": 17, "handl": [17, 26, 28, 29, 31, 33, 60, 61, 90, 91, 120, 122, 152, 153, 185, 186, 218, 219, 220, 221, 250, 251, 283, 284, 316, 317, 349, 350, 383, 384, 416, 417, 449, 450, 478, 498, 511, 542, 550, 557, 567, 570, 730, 759, 851, 881, 890, 920, 928, 958, 966, 996, 1003, 1004, 1036, 1045, 1075, 1084, 1114, 1122, 1152, 1160, 1190, 1199, 1219, 1228, 1250, 1252, 1262, 1284, 1286, 1296, 1318, 1320, 1329, 1349, 1358, 1380, 1382, 1390, 1410, 1418, 1438, 1446, 1466, 1475, 1497, 1499, 1508, 1528, 1537, 1559, 1561, 1570, 1590, 1604, 1781, 1796], "trigger": [17, 25, 31], "search": [17, 30, 56, 67, 88, 93, 99, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 454, 494, 500, 510, 512, 653, 860, 877, 883, 899, 916, 922, 937, 954, 960, 975, 992, 998, 1013, 1032, 1038, 1054, 1071, 1077, 1093, 1110, 1116, 1131, 1148, 1154, 1169, 1186, 1192, 1215, 1221, 1247, 1254, 1281, 1288, 1315, 1322, 1345, 1351, 1377, 1384, 1406, 1412, 1434, 1440, 1462, 1468, 1494, 1501, 1524, 1530, 1556, 1563, 1586, 1592], "seem": [17, 25, 30], "convolut": [17, 23, 648], "benefit": [17, 29, 31], "v1": 17, "lead": [17, 18, 28, 29, 1619], "memori": [17, 28, 30, 557, 1605], "leak": 17, "tricki": 17, "delet": [17, 25, 26, 28, 30, 64, 155, 188, 253, 286, 319, 353, 386, 419, 888, 1651, 1668, 1670, 1672, 1786], "syntact": [17, 31], "sugar": [17, 31], "behind": [17, 22, 25, 28, 31, 1417], "scene": [17, 22, 25, 28, 31, 1417], "uphold": 17, "issu": [18, 573], "main": [18, 23, 27, 29, 31, 33, 60, 90, 118, 120, 152, 185, 218, 228, 250, 283, 316, 349, 383, 416, 449, 477, 526, 835, 836, 1121, 1743], "bodi": [18, 26, 29, 32, 640, 641, 642, 643, 644, 645, 650, 658, 659, 660, 661, 662, 663, 664, 666, 667, 715, 716, 717, 720, 833, 849, 1801, 1802], "fairli": 18, "tomogram": 18, "creativ": 18, "stitch": [18, 1649], "togeth": [18, 22, 29, 30, 32, 33, 554], "singular": [18, 27], "plot_tutori": [18, 27], "font_siz": 18, "trim": [18, 26, 28, 33, 759, 888, 927, 965, 1003, 1634, 1649, 1651, 1797], "30": [18, 25, 26, 33], "31": [18, 26, 31, 33, 587], "plu": [18, 25, 1652, 1654], "constitut": [18, 1356], "rest": [18, 26, 31, 33, 927, 1807, 1808], "100_000": [18, 32], "ill": 18, "todens": [18, 20, 22, 27, 28], "pcolormesh": 18, "reflect": [18, 27, 1634, 1652], "row": [18, 20, 27, 28, 752, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176, 1656], "diagon": [18, 20, 28, 849, 1082, 1605, 1654], "column": [18, 23, 27, 28, 29, 32, 33, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 558, 571, 713, 855, 856, 866, 894, 895, 905, 932, 933, 943, 970, 971, 981, 1008, 1009, 1021, 1049, 1050, 1060, 1088, 1089, 1099, 1126, 1127, 1137, 1164, 1165, 1175, 1206, 1237, 1271, 1305, 1336, 1367, 1397, 1425, 1453, 1484, 1515, 1546, 1577, 1627, 1716], "NO": [18, 27], "present": [18, 20, 26, 27, 28, 30, 31, 44, 51, 52, 53, 56, 60, 67, 70, 76, 83, 84, 85, 88, 90, 93, 96, 103, 110, 111, 112, 116, 120, 121, 123, 125, 128, 136, 143, 144, 145, 148, 152, 158, 161, 169, 176, 177, 178, 181, 185, 191, 194, 201, 208, 209, 210, 214, 218, 219, 221, 223, 226, 234, 241, 242, 243, 246, 250, 256, 259, 267, 274, 275, 276, 279, 283, 289, 292, 300, 307, 308, 309, 312, 316, 322, 325, 333, 340, 341, 342, 345, 349, 356, 359, 367, 374, 375, 376, 379, 383, 389, 392, 400, 407, 408, 409, 412, 416, 422, 425, 433, 440, 441, 442, 445, 449, 454, 457, 475, 482, 489, 490, 491, 494, 500, 503, 506, 507, 508, 509, 510, 512, 524, 539, 715, 717, 720, 786, 857, 865, 867, 871, 873, 874, 877, 883, 886, 896, 904, 906, 910, 912, 913, 916, 922, 925, 934, 942, 944, 948, 950, 951, 954, 960, 963, 972, 980, 982, 986, 988, 989, 992, 998, 1001, 1010, 1020, 1022, 1026, 1028, 1029, 1032, 1038, 1041, 1051, 1059, 1061, 1065, 1067, 1068, 1071, 1077, 1080, 1090, 1098, 1100, 1104, 1106, 1107, 1110, 1116, 1119, 1128, 1136, 1138, 1142, 1144, 1145, 1148, 1154, 1157, 1166, 1174, 1176, 1180, 1182, 1183, 1186, 1192, 1195, 1203, 1210, 1211, 1212, 1215, 1221, 1224, 1233, 1242, 1243, 1244, 1247, 1254, 1257, 1267, 1276, 1277, 1278, 1281, 1288, 1291, 1301, 1310, 1311, 1312, 1315, 1322, 1325, 1333, 1340, 1341, 1342, 1345, 1351, 1354, 1363, 1372, 1373, 1374, 1377, 1384, 1387, 1394, 1401, 1402, 1403, 1406, 1412, 1415, 1422, 1429, 1430, 1431, 1434, 1440, 1443, 1450, 1457, 1458, 1459, 1462, 1468, 1471, 1480, 1489, 1490, 1491, 1494, 1501, 1504, 1512, 1519, 1520, 1521, 1524, 1530, 1533, 1542, 1551, 1552, 1553, 1556, 1563, 1566, 1574, 1581, 1582, 1583, 1586, 1592, 1595, 1700, 1714, 1726, 1734, 1737, 1752, 1755, 1760, 1792, 1794], "balanc": [18, 20, 22, 23, 32], "coupl": [18, 20, 36], "sai": [18, 30], "form": [18, 20, 23, 28, 29, 31, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 678, 718, 773, 781, 806, 813, 849, 965, 1082, 1159, 1238, 1272, 1306, 1368, 1485, 1547, 1615, 1650, 1654], "independ": [18, 732, 736, 763, 838], "exchang": [18, 835, 836], "mini": [18, 25, 29], "ey": [18, 34], "begin": [18, 23, 27, 33], "libari": 18, "among": 18, "cluster_numb": 18, "cluster_s": 18, "0x7f87906e09f0": 18, "32": [18, 25, 26, 33], "19": [18, 26, 27, 30, 32, 33], "inspect": [18, 20, 23, 26, 27, 29, 30, 31, 530, 1121], "proper": [18, 20, 29, 811], "clearli": [18, 25, 29, 30, 33], "previou": [18, 22, 23, 34], "200000": 18, "172366": 18, "51558808": 18, "186332": 18, "80871864": 18, "177551": 18, "99158564": 18, "130323": 18, "55996993": 18, "144072": 18, "89300227": 18, "142190": 18, "7577238": 18, "100662": 18, "67394235": 18, "106003": 18, "3205264": 18, "116955": 18, "67025909": 18, "114165": 18, "16085211": 18, "109754": 18, "36451205": 18, "100000": 18, "pathcollect": 18, "0x7f8788e9a190": 18, "output": [20, 26, 27, 30, 33, 34, 36, 572, 1677, 1801, 1802], "underli": 20, "speci": [20, 22, 27, 759, 763, 768, 769, 778, 783, 786, 788, 792, 794, 803, 835, 836, 1227, 1230, 1250, 1259, 1261, 1264, 1284, 1293, 1295, 1298, 1318, 1327, 1356, 1357, 1360, 1380, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1474, 1477, 1497, 1506, 1536, 1539, 1559, 1568], "j": [20, 23, 27, 28, 32, 35, 197, 648, 757, 766, 769, 775, 790, 797, 801, 808, 813, 826, 830, 1627, 1654, 1661], "c_a": [20, 22, 622], "composit": [20, 759, 763, 1226, 1260, 1294, 1473, 1535, 1800], "temperatur": [20, 21, 22, 27, 31, 32, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 486, 587, 590, 759, 762, 763, 764, 766, 768, 769, 770, 773, 775, 784, 786, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 804, 805, 807, 808, 817, 835, 836, 868, 907, 945, 983, 1023, 1062, 1101, 1139, 1177, 1207, 1239, 1273, 1307, 1337, 1369, 1398, 1426, 1454, 1486, 1516, 1548, 1578], "subject": [20, 29, 31, 32], "2x2": 20, "nt": [20, 22, 23, 26, 27, 28, 29, 32, 33, 38, 47, 53, 67, 68, 69, 72, 79, 85, 93, 94, 95, 98, 106, 112, 125, 126, 127, 130, 139, 145, 158, 159, 160, 163, 172, 178, 191, 192, 193, 196, 204, 210, 223, 224, 225, 228, 237, 243, 256, 257, 258, 261, 270, 276, 289, 290, 291, 294, 303, 309, 322, 323, 324, 327, 336, 342, 356, 357, 358, 361, 370, 376, 389, 390, 391, 394, 403, 409, 422, 423, 424, 427, 436, 442, 454, 455, 456, 460, 465, 473, 474, 477, 485, 491, 500, 501, 502, 509, 512, 607, 622, 637, 678, 713, 849, 855, 856, 866, 874, 883, 884, 885, 888, 894, 895, 905, 913, 922, 923, 924, 927, 932, 933, 943, 951, 960, 961, 962, 965, 970, 971, 981, 989, 998, 999, 1000, 1003, 1008, 1009, 1021, 1029, 1038, 1039, 1040, 1043, 1049, 1050, 1060, 1068, 1077, 1078, 1079, 1082, 1088, 1089, 1099, 1107, 1116, 1117, 1118, 1121, 1126, 1127, 1137, 1145, 1154, 1155, 1156, 1159, 1164, 1165, 1175, 1183, 1192, 1193, 1194, 1198, 1206, 1212, 1221, 1222, 1223, 1226, 1237, 1244, 1254, 1255, 1256, 1260, 1271, 1278, 1288, 1289, 1290, 1294, 1305, 1312, 1322, 1323, 1324, 1328, 1336, 1342, 1351, 1352, 1353, 1356, 1367, 1374, 1384, 1385, 1386, 1389, 1397, 1403, 1412, 1413, 1414, 1417, 1425, 1431, 1440, 1441, 1442, 1445, 1453, 1459, 1468, 1469, 1470, 1473, 1484, 1491, 1501, 1502, 1503, 1507, 1515, 1521, 1530, 1531, 1532, 1535, 1546, 1553, 1563, 1564, 1565, 1569, 1577, 1583, 1592, 1593, 1594, 1625, 1629], "interest": [20, 29, 31, 32, 33, 770, 781, 806, 835, 836, 837, 839, 840, 841, 842, 843, 844, 1621], "awai": [20, 25], "At": [20, 29, 669, 715, 717, 720, 1641], "absenc": 20, "reaction": [20, 22, 130, 261, 361, 809, 835, 836], "thu": [20, 27, 28, 29, 33, 58, 130, 150, 183, 248, 281, 314, 347, 381, 414, 447, 622, 637, 660, 861, 862, 900, 901, 938, 939, 976, 977, 1014, 1015, 1055, 1056, 1094, 1095, 1132, 1133, 1159, 1170, 1171, 1626, 1630, 1631], "summat": 20, "g_": [20, 22, 23], "x_j": 20, "x_i": [20, 22, 763, 781, 806, 1238, 1272, 1306, 1368, 1485, 1547], "linear": [20, 22, 23, 31, 32, 427, 554, 590, 781, 806, 835, 836, 837, 838, 840, 841, 842, 843, 844, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1121, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176, 1238, 1272, 1306, 1368, 1485, 1547, 1599, 1601, 1603, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1612, 1613, 1654], "hand": [20, 23, 25, 26, 28, 29, 31, 32, 33, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 1605], "csgraph": [20, 33, 1617, 1632, 1655], "csg": [20, 33], "am": [20, 27, 28, 33, 849, 855, 865, 888, 894, 904, 927, 932, 942, 965, 970, 980, 1003, 1008, 1020, 1043, 1049, 1059, 1082, 1088, 1098, 1121, 1126, 1136, 1159, 1164, 1174, 1620, 1622, 1627, 1644, 1645, 1646, 1647], "create_adjacency_matrix": [20, 27, 28, 33, 865, 904, 942, 980, 1020, 1059, 1098, 1136, 1174], "weight": [20, 27, 28, 33, 648, 762, 763, 764, 765, 772, 774, 777, 781, 783, 793, 795, 796, 804, 805, 806, 807, 817, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176, 1238, 1272, 1306, 1368, 1485, 1547, 1632, 1651, 1659, 1662], "fmt": [20, 28, 33, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "csr": [20, 27, 33, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "triu": [20, 27, 28, 33, 855, 865, 894, 904, 932, 942, 970, 980, 1008, 1020, 1049, 1059, 1088, 1098, 1126, 1136, 1164, 1174], "fals": [20, 26, 27, 28, 30, 33, 56, 59, 61, 62, 67, 88, 91, 93, 99, 116, 122, 125, 148, 151, 153, 158, 181, 184, 186, 191, 214, 220, 223, 246, 249, 251, 256, 279, 282, 284, 289, 312, 315, 317, 322, 345, 350, 351, 356, 379, 384, 389, 412, 417, 422, 445, 448, 450, 454, 494, 498, 500, 510, 511, 512, 529, 531, 549, 563, 565, 567, 569, 571, 855, 856, 858, 860, 861, 862, 872, 877, 881, 883, 894, 895, 897, 899, 900, 901, 911, 916, 920, 922, 932, 933, 935, 937, 938, 939, 949, 954, 958, 960, 970, 971, 973, 975, 976, 977, 987, 992, 996, 998, 1008, 1009, 1011, 1013, 1014, 1015, 1027, 1032, 1036, 1038, 1049, 1050, 1052, 1054, 1055, 1056, 1066, 1071, 1075, 1077, 1088, 1089, 1091, 1093, 1094, 1095, 1105, 1110, 1114, 1116, 1126, 1127, 1129, 1131, 1132, 1133, 1143, 1148, 1152, 1154, 1164, 1165, 1167, 1169, 1170, 1171, 1181, 1186, 1190, 1192, 1215, 1219, 1221, 1247, 1252, 1254, 1281, 1286, 1288, 1315, 1320, 1322, 1345, 1349, 1351, 1377, 1382, 1384, 1406, 1410, 1412, 1434, 1438, 1440, 1462, 1466, 1468, 1494, 1499, 1501, 1524, 1528, 1530, 1556, 1561, 1563, 1586, 1590, 1592, 1626, 1630, 1631, 1641, 1690, 1739, 1757, 1796, 1804, 1807, 1808], "laplacian": 20, "08951573": 20, "41769587": 20, "67181987": 20, "37792393": 20, "96022806": 20, "3788836": 20, "70706373": 20, "66729179": 20, "trivial": [20, 28, 30, 33, 196], "movement": [20, 33], "r_i": [20, 23], "replac": [20, 29, 30, 31, 36, 573, 648, 723], "b_i": 20, "x_0": 20, "r_3": 20, "dtype": [20, 27, 28, 33, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "n": [20, 23, 25, 28, 31, 33, 555, 620, 635, 670, 725, 769, 770, 789, 790, 813, 835, 836, 860, 861, 899, 900, 937, 938, 965, 975, 976, 1003, 1013, 1014, 1054, 1055, 1093, 1094, 1131, 1132, 1159, 1169, 1170, 1617, 1620, 1623, 1632, 1633, 1643, 1655, 1661, 1679], "linalg": [20, 1610, 1612], "45178203": 20, "59660076": 20, "21330912": 20, "convert": [20, 21, 28, 29, 33, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 473, 501, 562, 571, 648, 763, 778, 784, 838, 859, 884, 898, 923, 936, 961, 974, 999, 1012, 1039, 1053, 1078, 1092, 1117, 1130, 1155, 1168, 1193, 1222, 1255, 1289, 1323, 1352, 1385, 1413, 1441, 1469, 1502, 1531, 1564, 1593, 1605, 1620, 1627, 1634, 1659, 1662, 1798, 1807, 1808, 1809, 1810], "dens": 20, "larger": [20, 23, 29, 33], "natur": [20, 25, 26, 781, 806, 813, 829, 1003, 1238, 1272, 1306, 1368, 1485, 1547], "particular": 20, "bc": [20, 22, 32, 33, 40, 41, 42, 60, 74, 90, 101, 120, 132, 133, 134, 152, 165, 166, 167, 185, 197, 199, 218, 230, 231, 232, 250, 263, 264, 265, 283, 296, 297, 298, 316, 329, 330, 331, 349, 363, 364, 365, 383, 396, 397, 398, 416, 429, 430, 431, 449], "coo": [20, 27, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176, 1620, 1622, 1659, 1662], "manner": [20, 567, 1618], "index": [20, 25, 27, 28, 29, 30, 31, 33, 459, 555, 713, 750, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1626, 1735, 1736, 1753, 1754], "hit": [20, 29], "Then": [20, 29, 30, 34], "diag": 20, "setdiag": 20, "eliminate_zero": [20, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165], "spsolv": [20, 1606, 1612], "tocsr": 20, "identi": 20, "effort": 20, "deal": [20, 31, 32, 1614], "becom": [20, 23, 28, 30, 832, 1801, 1802], "intract": 20, "si": [21, 29, 554], "relat": [21, 23, 26, 29, 31, 33, 669, 670, 759, 809], "tabl": [21, 23, 27, 1605, 1801, 1802, 1807, 1808], "pa": [21, 31, 33, 762, 768, 769, 770, 789, 793, 795, 800, 804, 805, 807, 808], "emperatur": 21, "examin": 21, "section": [21, 22, 23, 27, 29, 32, 554, 601, 603, 641, 642, 643, 644, 645, 648, 658, 660, 674, 675, 676, 693, 694, 695, 696, 701, 715, 811, 819, 821, 822, 1635, 1665, 1666, 1668, 1670, 1672, 1679, 1683, 1685], "298": 21, "101325": 21, "water_correl": [21, 31, 32, 591], "mean_vi": 21, "3f": 21, "mpa": 21, "893": 21, "report": [21, 31, 1769, 1770], "celsiu": 21, "incorrect": 21, "unyt": 21, "pint": 21, "despit": [21, 571], "broad": 21, "due": [21, 29, 30, 32, 759], "overhead": 21, "pre": [21, 22, 27, 29, 31, 33, 622, 637, 652, 703, 729], "progress": [22, 24, 33], "incorpor": 22, "chemic": [22, 31, 759, 763, 773, 786, 799, 1226, 1417, 1473, 1535], "0x7f54eba79d60": 22, "ph": 22, "varieti": [22, 26, 27, 31, 32, 1777], "standar": 22, "a_0": 22, "a_1": 22, "a_3": 22, "rightarrow": [22, 23], "r_a": 22, "kc_a": 22, "kinet": [22, 835, 836], "strong": [22, 31], "source_term": [22, 838], "power_law": 22, "specif": [22, 23, 25, 28, 29, 30, 33, 40, 74, 101, 119, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 558, 730, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165, 1614, 1633, 1648, 1683, 1685, 1740], "isotherm": 22, "a1": [22, 31, 759, 837, 839, 840, 841, 842, 843], "a2": [22, 31, 837, 839, 840, 841, 842, 843], "a3": [22, 31, 837, 840, 841, 842, 843], "unpack": 22, "retriev": [22, 23, 25, 29, 30, 57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 459, 471, 495, 652, 703, 729, 878, 917, 955, 993, 1033, 1072, 1111, 1149, 1187, 1216, 1248, 1282, 1316, 1346, 1378, 1407, 1435, 1463, 1495, 1525, 1557, 1587, 1740], "throw": [22, 27, 31, 1803], "scalar": [22, 30, 31, 58, 63, 65, 150, 154, 156, 183, 187, 189, 248, 252, 254, 281, 285, 287, 314, 318, 320, 347, 348, 352, 354, 381, 382, 385, 387, 414, 415, 418, 420, 447, 451, 452, 554, 573, 724, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 781, 784, 786, 788, 789, 790, 792, 793, 795, 796, 797, 799, 800, 801, 804, 805, 806, 807, 808, 850, 860, 872, 889, 899, 911, 937, 949, 965, 975, 987, 1003, 1013, 1027, 1044, 1054, 1066, 1083, 1093, 1105, 1131, 1143, 1159, 1169, 1181, 1227, 1238, 1259, 1261, 1272, 1293, 1295, 1306, 1327, 1357, 1368, 1474, 1485, 1506, 1536, 1547, 1568, 1616, 1634, 1635, 1636, 1642, 1648, 1651, 1653, 1654], "string": [22, 25, 44, 52, 53, 57, 60, 76, 84, 85, 89, 90, 103, 111, 112, 117, 120, 136, 144, 145, 149, 152, 169, 177, 178, 182, 185, 201, 209, 210, 215, 218, 219, 221, 234, 242, 243, 247, 250, 267, 275, 276, 280, 283, 300, 308, 309, 313, 316, 333, 341, 342, 346, 349, 367, 375, 376, 380, 383, 400, 408, 409, 413, 416, 433, 441, 442, 446, 449, 471, 482, 490, 491, 495, 496, 506, 508, 509, 544, 566, 569, 770, 857, 873, 874, 878, 879, 896, 912, 913, 917, 918, 934, 950, 951, 955, 956, 972, 988, 989, 993, 994, 1010, 1028, 1029, 1033, 1034, 1051, 1067, 1068, 1072, 1073, 1090, 1106, 1107, 1111, 1112, 1128, 1144, 1145, 1149, 1150, 1166, 1182, 1183, 1187, 1188, 1203, 1211, 1212, 1216, 1217, 1233, 1243, 1244, 1248, 1249, 1267, 1277, 1278, 1282, 1283, 1301, 1311, 1312, 1316, 1317, 1333, 1341, 1342, 1346, 1347, 1363, 1373, 1374, 1378, 1379, 1394, 1402, 1403, 1407, 1408, 1422, 1430, 1431, 1435, 1436, 1450, 1458, 1459, 1463, 1464, 1480, 1490, 1491, 1495, 1496, 1512, 1520, 1521, 1525, 1526, 1542, 1552, 1553, 1557, 1558, 1574, 1582, 1583, 1587, 1588, 1619, 1666, 1668, 1679, 1688, 1786, 1791, 1801, 1802], "set_sourc": 22, "act": [22, 25, 27, 659, 661, 722, 1616, 1809], "seen": [22, 26, 27, 29, 30, 31, 32], "fick_02": 22, "0x7f54eb37e860": 22, "boolean": [22, 25, 26, 33, 50, 56, 61, 67, 68, 69, 82, 88, 91, 93, 94, 95, 109, 116, 122, 125, 126, 127, 142, 148, 153, 158, 159, 160, 175, 181, 186, 191, 192, 193, 207, 214, 220, 223, 224, 225, 240, 246, 251, 256, 257, 258, 273, 279, 284, 289, 290, 291, 306, 312, 317, 322, 323, 324, 339, 345, 350, 356, 357, 358, 373, 379, 384, 389, 390, 391, 406, 412, 417, 422, 423, 424, 439, 445, 450, 454, 455, 456, 468, 473, 474, 488, 494, 498, 500, 501, 502, 505, 510, 511, 512, 569, 861, 862, 870, 877, 881, 883, 884, 885, 900, 901, 909, 916, 920, 922, 923, 924, 938, 939, 947, 954, 958, 960, 961, 962, 976, 977, 985, 992, 996, 998, 999, 1000, 1014, 1015, 1025, 1032, 1036, 1038, 1039, 1040, 1055, 1056, 1064, 1071, 1075, 1077, 1078, 1079, 1094, 1095, 1103, 1110, 1114, 1116, 1117, 1118, 1132, 1133, 1141, 1148, 1152, 1154, 1155, 1156, 1170, 1171, 1179, 1186, 1190, 1192, 1193, 1194, 1209, 1215, 1219, 1221, 1222, 1223, 1241, 1247, 1252, 1254, 1255, 1256, 1275, 1281, 1286, 1288, 1289, 1290, 1309, 1315, 1320, 1322, 1323, 1324, 1339, 1345, 1349, 1351, 1352, 1353, 1371, 1377, 1382, 1384, 1385, 1386, 1400, 1406, 1410, 1412, 1413, 1414, 1428, 1434, 1438, 1440, 1441, 1442, 1456, 1462, 1466, 1468, 1469, 1470, 1488, 1494, 1499, 1501, 1502, 1503, 1518, 1524, 1528, 1530, 1531, 1532, 1550, 1556, 1561, 1563, 1564, 1565, 1580, 1586, 1590, 1592, 1593, 1594, 1617, 1621, 1622, 1625, 1626, 1629, 1630, 1631, 1641, 1642, 1643, 1651, 1655, 1801, 1802], "another_react": 22, "printout": [22, 26, 31], "initial_guess": [22, 32], "awar": [22, 25, 573], "iter": [22, 29, 38, 45, 70, 72, 77, 96, 98, 104, 128, 130, 137, 161, 163, 170, 194, 196, 202, 226, 228, 235, 259, 261, 268, 292, 294, 301, 325, 327, 334, 359, 361, 368, 392, 394, 401, 425, 427, 434, 457, 463, 475, 483, 503, 517, 524, 532, 539, 578, 579, 580, 581, 582, 583, 584, 653, 863, 886, 902, 925, 940, 963, 978, 1001, 1018, 1041, 1057, 1080, 1096, 1119, 1134, 1157, 1172, 1195, 1204, 1224, 1234, 1257, 1268, 1291, 1302, 1325, 1334, 1354, 1364, 1387, 1395, 1415, 1423, 1443, 1451, 1471, 1481, 1504, 1513, 1533, 1543, 1566, 1575, 1595, 1602, 1605, 1693, 1700, 1705, 1714, 1719, 1726, 1728, 1733, 1746, 1751, 1758, 1759, 1782, 1794], "henc": [22, 27, 29], "guess": [22, 59, 151, 184, 249, 282, 315, 448], "0x7f54eb37eb80": 22, "s1": [22, 835, 836, 837, 839, 840, 841, 842, 843, 844], "s2": [22, 835, 836, 837, 839, 840, 841, 842, 843, 844], "recal": [22, 29, 32], "self": [22, 25, 514], "explanatori": 22, "patankar": 22, "ref": [22, 835, 836], "slope": [22, 732, 835, 836, 837, 839, 840, 841, 842, 843, 844, 1654], "intercept": [22, 27, 732, 835, 836, 837, 839, 840, 841, 842, 843, 844], "outlin": [22, 28, 29, 31, 33, 197, 478, 542, 553, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "around": [22, 23, 25, 32, 648, 1016], "flux": [22, 130], "consumpt": 22, "further": [22, 23, 26, 31], "expresss": 22, "abl": [22, 27, 28], "proce": [22, 28, 29, 99], "s_1": 22, "s_2": 22, "unknown": [22, 31, 59, 151, 184, 249, 282, 315, 448], "newton": 22, "rearrang": [22, 23], "lump": 22, "enter": [22, 23, 26, 58, 121, 150, 183, 248, 281, 314, 347, 381, 414, 447, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165], "revisit": 22, "hidden": 22, "_build_a": 22, "_build_b": 22, "_apply_bc": 22, "_apply_sourc": 22, "rh": [22, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 550], "evolv": 22, "30291308": 22, "56249654": 22, "74041654": 22, "07583567": 22, "24782753": 22, "2655116": 22, "60911589": 22, "36128836": 22, "91975851": 22, "26868475": 22, "91065722": 22, "42603023": 22, "15076939": 22, "74106449": 22, "68675595": 22, "1746982": 22, "22146729": 22, "31081007": 22, "11252055": 22, "06064599": 22, "23534419": 22, "ultim": [23, 32], "come": [23, 31], "sum_k": 23, "nb": 23, "m_": 23, "ik": 23, "c_i": 23, "c_k": 23, "overal": 23, "exit": [23, 58, 123, 150, 183, 221, 248, 281, 314, 347, 381, 414, 447], "n_p": 23, "cross": [23, 29, 32, 554, 601, 603, 641, 642, 643, 644, 645, 648, 658, 660, 674, 675, 676, 693, 694, 695, 696, 701, 715, 811, 819, 1635], "subscript": [23, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "denot": 23, "diffusion": 23, "transfer": [23, 835, 836, 1003], "cdot": [23, 763, 781, 806, 826, 1238, 1272, 1306, 1368, 1485, 1547], "assembli": 23, "seri": [23, 26, 27, 32, 33, 620, 635], "electr": [23, 821, 822], "circuit": [23, 835, 836], "analogi": 23, "resist": 23, "invers": [23, 32, 1654], "r_": [23, 835, 836], "r_k": 23, "superscript": 23, "entir": [23, 27, 30, 31, 33, 811, 1640, 1674, 1679], "rewritten": 23, "g_i": 23, "g_k": 23, "simplic": 23, "assumpt": [23, 713], "pi": [23, 32, 637], "d_i": 23, "ell_i": 23, "quad": 23, "d_k": 23, "ell_k": 23, "ell_": 23, "literatur": 23, "text": [23, 1656], "past": 23, "sake": [23, 27], "clariti": 23, "introduc": [23, 26, 27, 29, 31], "terminologi": [23, 30], "coin": 23, "mathcal": 23, "decoupl": 23, "word": [23, 27, 28, 33, 654, 704, 734], "join": [23, 25, 563, 571, 1670, 1683], "_func": 23, "__all__": 23, "circles_and_rectangl": 23, "cones_and_cylind": 23, "intersecting_con": 23, "hybrid_cones_and_cylind": 23, "trapezoids_and_rectangl": 23, "hybrid_trapezoids_and_rectangl": 23, "intersecting_trapezoid": 23, "pyramids_and_cuboid": 23, "intersecting_pyramid": 23, "hybrid_pyramids_and_cuboid": 23, "squares_and_rectangl": 23, "ncylinders_in_seri": 23, "involv": [23, 33], "molecular": [23, 27, 762, 763, 764, 765, 783, 793, 795, 796, 804, 805, 807, 817], "heat": [23, 163, 775, 1003], "choic": [23, 29, 31], "taken": [23, 29, 31, 713, 1473, 1535, 1620], "dc": 23, "dx": [23, 830], "posit": [23, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 713, 1656], "gradient": [23, 31, 58, 62, 150, 183, 248, 281, 314, 347, 351, 381, 414, 447, 1605], "int_": 23, "bigg": [23, 32], "big": [23, 835, 836], "combin": [23, 26, 30, 31, 571, 622, 637, 888, 1003, 1605, 1649, 1650, 1677], "_i": 23, "_k": 23, "a_i": 23, "a_": [23, 835, 836, 837, 839, 840, 841, 842, 843], "a_k": 23, "declar": 23, "earlier": 23, "breviti": 23, "nitti": 23, "gritti": 23, "pointer": 23, "slightli": [23, 27, 33], "satisfi": [23, 30, 56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 454, 494, 500, 510, 512, 877, 883, 916, 922, 954, 960, 992, 998, 1032, 1038, 1071, 1077, 1110, 1116, 1148, 1154, 1186, 1192, 1215, 1221, 1247, 1254, 1281, 1288, 1315, 1322, 1345, 1351, 1377, 1384, 1406, 1412, 1434, 1440, 1462, 1468, 1494, 1501, 1524, 1530, 1556, 1563, 1586, 1592, 1624], "drop": [23, 26, 1622], "along": [23, 26, 27, 30, 31, 478, 542, 828, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1615, 1648, 1654], "p_i": 23, "p_k": 23, "slip": 23, "wall": 23, "gradual": 23, "dp": [23, 659, 661], "i_p": 23, "rho": [23, 31, 765, 788], "da": 23, "volumetr": 23, "polar": 23, "moment": 23, "inertia": 23, "calculu": 23, "p_j": 23, "friction": 23, "loss": [23, 27, 32], "inerti": 23, "safe": 23, "keep": [23, 28, 29, 36, 61, 91, 122, 153, 186, 196, 220, 251, 284, 317, 350, 384, 417, 450, 498, 511, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1417, 1438, 1466, 1499, 1528, 1561, 1590, 1683, 1685, 1797], "expand": [23, 30, 653], "cylidnr": 23, "128": [23, 33], "hagen": [23, 826], "poiseuil": [23, 32, 826], "ell": 23, "individu": [23, 27, 30, 31, 32, 33, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447, 513, 759, 1356, 1654], "resistor": [23, 27, 32], "eventu": [23, 31], "discuss": [23, 25, 26, 27, 759], "third": [23, 28, 835, 836, 1683], "machin": 23, "voxel": [23, 554], "vector": [23, 29, 31, 38, 58, 63, 65, 130, 150, 154, 156, 163, 183, 187, 189, 228, 248, 252, 254, 261, 281, 285, 287, 294, 314, 318, 320, 327, 347, 352, 354, 361, 381, 385, 387, 394, 414, 418, 420, 427, 447, 451, 452, 550, 713, 759, 763, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1605, 1615, 1627], "input": [23, 28, 34, 858, 860, 861, 862, 872, 897, 899, 900, 901, 911, 935, 937, 938, 939, 949, 973, 975, 976, 977, 987, 1011, 1013, 1014, 1015, 1027, 1052, 1054, 1055, 1056, 1066, 1091, 1093, 1094, 1095, 1105, 1129, 1131, 1132, 1133, 1143, 1167, 1169, 1170, 1171, 1181, 1615, 1626, 1630, 1631], "type": [23, 25, 26, 27, 30, 32, 34, 36, 40, 47, 48, 50, 52, 53, 57, 59, 60, 68, 69, 74, 79, 80, 82, 84, 85, 89, 90, 94, 95, 101, 106, 107, 109, 111, 112, 117, 120, 121, 123, 126, 127, 132, 139, 140, 142, 144, 145, 149, 151, 152, 159, 160, 165, 172, 173, 175, 177, 178, 182, 184, 185, 192, 193, 199, 204, 205, 207, 209, 210, 215, 218, 219, 221, 224, 225, 230, 237, 238, 240, 242, 243, 247, 249, 250, 257, 258, 263, 270, 271, 273, 275, 276, 280, 282, 283, 290, 291, 296, 303, 304, 306, 308, 309, 313, 315, 316, 323, 324, 329, 336, 337, 339, 341, 342, 346, 348, 349, 357, 358, 363, 370, 371, 373, 375, 376, 380, 382, 383, 390, 391, 396, 403, 404, 406, 408, 409, 413, 415, 416, 423, 424, 429, 436, 437, 439, 441, 442, 446, 448, 449, 455, 456, 465, 466, 468, 471, 473, 474, 485, 486, 488, 490, 491, 495, 501, 502, 508, 509, 550, 553, 554, 555, 557, 558, 562, 569, 570, 607, 622, 637, 644, 648, 650, 651, 653, 656, 660, 666, 672, 678, 690, 695, 699, 701, 702, 706, 709, 713, 716, 724, 727, 728, 730, 732, 733, 736, 737, 739, 741, 745, 747, 752, 763, 765, 769, 777, 780, 782, 783, 784, 786, 789, 790, 796, 797, 803, 807, 808, 811, 813, 814, 816, 817, 818, 819, 821, 822, 824, 825, 826, 828, 829, 832, 835, 836, 837, 839, 840, 841, 842, 843, 844, 846, 847, 849, 855, 856, 859, 866, 868, 870, 873, 874, 878, 884, 885, 888, 894, 895, 898, 905, 907, 909, 912, 913, 917, 923, 924, 932, 933, 936, 943, 945, 947, 950, 951, 955, 961, 962, 965, 970, 971, 974, 981, 983, 985, 988, 989, 993, 999, 1000, 1008, 1009, 1012, 1021, 1023, 1025, 1028, 1029, 1033, 1039, 1040, 1043, 1049, 1050, 1053, 1060, 1062, 1064, 1067, 1068, 1072, 1078, 1079, 1082, 1088, 1089, 1092, 1099, 1101, 1103, 1106, 1107, 1111, 1117, 1118, 1121, 1126, 1127, 1130, 1137, 1139, 1141, 1144, 1145, 1149, 1155, 1156, 1159, 1164, 1165, 1168, 1175, 1177, 1179, 1182, 1183, 1187, 1193, 1194, 1206, 1207, 1209, 1211, 1212, 1216, 1222, 1223, 1230, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1248, 1255, 1256, 1264, 1270, 1271, 1272, 1273, 1275, 1277, 1278, 1282, 1289, 1290, 1298, 1304, 1305, 1306, 1307, 1309, 1311, 1312, 1316, 1323, 1324, 1336, 1337, 1339, 1341, 1342, 1346, 1352, 1353, 1360, 1366, 1367, 1368, 1369, 1371, 1373, 1374, 1378, 1385, 1386, 1397, 1398, 1400, 1402, 1403, 1407, 1413, 1414, 1425, 1426, 1428, 1430, 1431, 1435, 1441, 1442, 1453, 1454, 1456, 1458, 1459, 1463, 1469, 1470, 1477, 1483, 1484, 1485, 1486, 1488, 1490, 1491, 1495, 1502, 1503, 1515, 1516, 1518, 1520, 1521, 1525, 1531, 1532, 1539, 1545, 1546, 1547, 1548, 1550, 1552, 1553, 1557, 1564, 1565, 1577, 1578, 1580, 1582, 1583, 1587, 1593, 1594, 1605, 1616, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1651, 1652, 1653, 1654, 1657, 1658, 1661, 1668, 1672, 1675, 1677, 1679, 1681, 1683, 1685, 1688, 1742, 1746, 1758, 1759, 1781, 1788, 1796, 1797, 1798, 1801, 1802, 1803, 1804, 1806, 1810], "akbari": 23, "sinton": 23, "bahrami": 23, "viscou": [23, 294], "microchannel": 23, "intern": [23, 27, 658, 659, 660, 661, 1627, 1633], "journal": [23, 670], "54": [23, 26, 31, 33], "2011": 23, "3970": 23, "3978": 23, "majid": 23, "michael": 23, "yovanovich": 23, "richard": 23, "culham": 23, "novel": 23, "singli": 23, "2007": [23, 648], "2492": 23, "2502": 23, "http": [23, 36, 197, 1679], "en": 23, "wikipedia": [23, 27], "org": [23, 197, 566], "wiki": 23, "e2": 23, "80": [23, 26, 33], "93poiseuille_equ": 23, "misaghian": 23, "niloo": 23, "et": [23, 648, 766, 769, 786, 790, 796, 804, 808, 830], "al": [23, 648, 766, 769, 786, 790, 796, 804, 808, 830], "neural": 23, "geoscienc": 23, "162": [23, 33], "105086": 23, "stil": 24, "structur": [25, 30, 33, 196, 554, 569, 648, 888], "comfort": 25, "topic": [25, 31], "squar": [25, 29, 583, 608, 623, 638, 691, 693, 694, 701, 715, 826, 965, 1159, 1634, 1642, 1644], "bracket": 25, "round": 25, "tupl": [25, 33, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 348, 378, 382, 411, 415, 444, 470, 493, 522, 531, 537, 550, 876, 915, 953, 991, 1031, 1070, 1109, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585, 1617, 1625, 1655, 1661, 1698, 1710, 1724, 1790], "immut": 25, "read": [25, 26, 27, 31, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 486, 835, 836, 868, 907, 945, 983, 1023, 1062, 1101, 1139, 1177, 1207, 1239, 1273, 1307, 1337, 1369, 1398, 1426, 1454, 1486, 1516, 1548, 1578], "longer": [25, 29, 569], "ing": 25, "extend": [25, 28, 33, 799, 830, 1642, 1649, 1675], "200": [25, 26, 33, 862, 901, 939, 977, 1015, 1056, 1095, 1133, 1171], "300": [25, 31], "Or": [25, 27, 28], "math": 25, "typeerror": 25, "multipl": [25, 27, 30, 32, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 653, 718, 719, 737, 1620, 1649, 1656], "duplic": [25, 28, 29, 33, 1797], "oper": [25, 27, 29, 30, 725, 730, 1654], "integ": [25, 30, 566, 653, 1622, 1685], "introduct": [25, 28], "resourc": [25, 826], "internet": 25, "offici": [25, 36], "doc": [25, 1665, 1679], "answer": [25, 27], "question": 25, "exclus": 25, "nativ": [25, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "fast": [25, 28, 33], "downsid": [25, 29], "languag": [25, 29, 566], "understan": 25, "guid": 25, "fun": [25, 26], "arang": [25, 1803], "45": [25, 26, 33, 1654], "60": [25, 26, 33, 35, 786], "75": [25, 33, 34], "90": [25, 26, 31, 33], "hundr": 25, "profici": 25, "999": 25, "fanci": [25, 27], "111": [25, 26, 33], "222": [25, 33, 769], "333": 25, "interpret": [25, 558, 838, 1642], "sens": [25, 28, 29, 32], "assur": [25, 1651], "elementwis": 25, "unlik": [25, 29, 763, 786], "matlab": 25, "444": 25, "666": 25, "211": [25, 33], "322": 25, "433": 25, "190": [25, 33], "12321": 25, "49284": 25, "110889": 25, "8100": 25, "trick": [25, 29, 30, 32, 1634], "recogn": 25, "lack": [25, 28, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 475, 503, 524, 539, 886, 925, 963, 1001, 1041, 1080, 1119, 1157, 1195, 1224, 1257, 1291, 1325, 1354, 1387, 1415, 1443, 1471, 1504, 1533, 1566, 1595, 1700, 1714, 1726, 1794], "thereof": 25, "offer": [25, 27, 29, 31, 33, 759, 888], "level": [25, 27, 31, 566, 569, 1777, 1799], "arr": [25, 30, 1716], "computation": [25, 33, 196], "ident": [25, 835, 836, 856, 895, 933, 971, 1009, 1050, 1089, 1127, 1165, 1742], "familiar": 25, "readabl": [25, 554, 567], "peopl": 25, "who": [25, 31], "prefer": [25, 29], "piec": [25, 27, 31], "puzzl": 25, "datatyp": [25, 1743], "address": [25, 34], "pair": [25, 27, 28, 29, 32, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 470, 493, 522, 537, 756, 835, 836, 849, 859, 876, 888, 898, 915, 936, 953, 965, 974, 991, 1012, 1031, 1043, 1053, 1070, 1082, 1092, 1109, 1121, 1130, 1147, 1159, 1168, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585, 1620, 1627, 1632, 1698, 1710, 1724, 1790], "dict_valu": 25, "catch": [25, 30, 1803], "intimid": 25, "beautifulli": 25, "feel": [25, 29], "extens": [25, 27, 1672, 1685], "often": [25, 27, 28, 30, 31, 32], "augment": [25, 26], "deep": [25, 529, 531, 1742], "dive": [25, 27], "idea": [25, 26, 27], "pertain": [25, 27], "whenev": [25, 1777], "__getitem__": 25, "__setitem__": [25, 27], "doubl": [25, 29, 1668], "underscor": 25, "intrins": 25, "sometim": [25, 65, 156, 189, 254, 287, 320, 354, 387, 420, 452, 1626], "magic": [25, 1417], "extra": [25, 26, 29, 513], "newdict": 25, "setitem": 25, "super": 25, "dnew": 25, "perform": [25, 27, 28, 29, 32, 33, 35, 51, 52, 53, 56, 67, 83, 84, 85, 88, 93, 110, 111, 112, 116, 125, 143, 144, 145, 148, 158, 176, 177, 178, 181, 191, 208, 209, 210, 214, 217, 223, 241, 242, 243, 246, 256, 261, 274, 275, 276, 279, 289, 307, 308, 309, 312, 322, 327, 340, 341, 342, 345, 356, 374, 375, 376, 379, 389, 407, 408, 409, 412, 422, 440, 441, 442, 445, 454, 489, 490, 491, 494, 500, 507, 508, 509, 510, 512, 653, 860, 871, 873, 874, 877, 883, 899, 910, 912, 913, 916, 922, 937, 948, 950, 951, 954, 960, 965, 975, 986, 988, 989, 992, 998, 1003, 1013, 1026, 1028, 1029, 1032, 1038, 1054, 1065, 1067, 1068, 1071, 1077, 1093, 1104, 1106, 1107, 1110, 1116, 1131, 1142, 1144, 1145, 1148, 1154, 1169, 1180, 1182, 1183, 1186, 1192, 1210, 1211, 1212, 1215, 1221, 1242, 1243, 1244, 1247, 1254, 1276, 1277, 1278, 1281, 1288, 1310, 1311, 1312, 1315, 1322, 1340, 1341, 1342, 1345, 1351, 1372, 1373, 1374, 1377, 1384, 1401, 1402, 1403, 1406, 1412, 1429, 1430, 1431, 1434, 1440, 1457, 1458, 1459, 1462, 1468, 1489, 1490, 1491, 1494, 1501, 1519, 1520, 1521, 1524, 1530, 1551, 1552, 1553, 1556, 1563, 1581, 1582, 1583, 1586, 1592, 1625, 1633, 1654, 1656, 1811], "enforc": [25, 27, 1743, 1746], "foo": [25, 27, 31, 1743], "bar": [25, 27, 31, 34, 1679, 1743], "statement": 25, "rais": [25, 54, 55, 60, 64, 68, 86, 87, 90, 94, 114, 115, 120, 121, 123, 126, 146, 147, 152, 155, 159, 179, 180, 185, 188, 192, 197, 212, 213, 218, 219, 221, 224, 244, 245, 250, 253, 257, 277, 278, 283, 286, 290, 310, 311, 316, 319, 323, 343, 344, 349, 353, 357, 377, 378, 383, 386, 390, 410, 411, 416, 419, 423, 443, 444, 449, 455, 469, 470, 473, 492, 493, 501, 521, 522, 530, 536, 537, 875, 876, 884, 914, 915, 923, 952, 953, 961, 990, 991, 999, 1030, 1031, 1039, 1069, 1070, 1078, 1108, 1109, 1117, 1146, 1147, 1155, 1184, 1185, 1193, 1213, 1214, 1222, 1245, 1246, 1255, 1279, 1280, 1289, 1313, 1314, 1323, 1343, 1344, 1352, 1375, 1376, 1385, 1404, 1405, 1413, 1432, 1433, 1441, 1460, 1461, 1469, 1492, 1493, 1502, 1522, 1523, 1531, 1554, 1555, 1564, 1584, 1585, 1593, 1666, 1688, 1697, 1698, 1709, 1710, 1723, 1724, 1734, 1736, 1737, 1752, 1754, 1755, 1771, 1772, 1789, 1790], "implememnt": 25, "old": [25, 1654], "ones": [25, 26, 28, 64, 155, 188, 253, 286, 319, 353, 386, 419, 759, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165], "poreprop": 25, "blah": [25, 759], "bob": 25, "summari": [25, 31, 1605, 1675, 1677, 1681], "extrem": [25, 647, 655, 705, 738], "versatil": 25, "handi": 25, "alter": [25, 26, 29, 33], "interact": [25, 26, 1003], "troubleshoot": 26, "full": [26, 29, 31, 32, 36, 459, 478, 542, 558, 597, 598, 600, 607, 648, 821, 822, 851, 890, 928, 965, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570, 1677], "dedic": [26, 33], "draongfli": 26, "shield": 26, "rough": 26, "displai": [26, 33, 1740], "10e": 26, "26": [26, 28, 33, 861, 888, 900, 938, 976, 1014, 1055, 1094, 1132, 1170], "connreadd": 26, "descript": [26, 50, 61, 82, 91, 109, 122, 142, 153, 175, 186, 207, 220, 240, 251, 273, 284, 306, 317, 339, 350, 373, 384, 406, 417, 439, 450, 468, 478, 488, 498, 511, 542, 548, 549, 828, 832, 844, 851, 870, 881, 890, 909, 920, 928, 947, 958, 966, 985, 996, 1004, 1025, 1036, 1045, 1064, 1075, 1084, 1103, 1114, 1122, 1141, 1152, 1160, 1179, 1190, 1199, 1209, 1219, 1228, 1241, 1252, 1262, 1275, 1286, 1296, 1309, 1320, 1329, 1339, 1349, 1358, 1371, 1382, 1390, 1400, 1410, 1418, 1428, 1438, 1446, 1456, 1466, 1475, 1488, 1499, 1508, 1518, 1528, 1537, 1550, 1561, 1570, 1580, 1590, 1608, 1618, 1625, 1626, 1630, 1631, 1656, 1670, 1672, 1677, 1683, 1685], "randint": 26, "500": [26, 29], "practic": [26, 28, 30], "prompt": 26, "0x7fdab21a7ea0": 26, "64": [26, 33], "161": [26, 33], "56": [26, 33], "reveal": [26, 27, 31, 33], "elsewher": [26, 32, 1657, 1658], "convent": [26, 27, 1679], "AND": 26, "28": [26, 33, 587, 790], "29": [26, 33], "44": [26, 31, 33], "46": [26, 33], "61": [26, 33], "62": [26, 33], "22": [26, 30, 33, 808], "23": [26, 30, 33], "24": [26, 30, 33, 835, 836], "27": [26, 33, 861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170], "33": [26, 31, 33], "35": [26, 33], "37": [26, 29, 33], "38": [26, 33, 669], "41": [26, 33], "42": [26, 33], "43": [26, 33], "48": [26, 33], "49": [26, 33, 35], "52": [26, 33], "53": [26, 33], "58": [26, 31, 33, 769], "59": [26, 33], "68": [26, 33], "69": [26, 33], "71": [26, 33], "73": [26, 33, 769], "76": [26, 33], "77": [26, 33], "83": [26, 33], "85": [26, 33], "86": [26, 33], "89": [26, 33], "91": [26, 33], "93": [26, 33], "97": [26, 33], "105": [26, 33], "109": [26, 33], "110": [26, 31, 33, 591, 786], "112": [26, 33], "113": [26, 33], "115": [26, 33], "119": [26, 33], "120": [26, 33], "121": [26, 33], "122": [26, 33], "124": [26, 33], "126": [26, 33], "130": [26, 33, 813], "131": [26, 33], "133": [26, 33], "134": [26, 33], "135": [26, 33], "136": [26, 33], "139": [26, 33], "140": [26, 33, 590], "141": [26, 33, 670], "143": [26, 33], "144": [26, 33], "146": [26, 33], "147": [26, 33], "148": [26, 31, 33], "149": [26, 33], "150": [26, 32, 33, 808], "151": [26, 33], "153": [26, 33], "154": [26, 31, 33], "160": [26, 33, 766, 784, 797, 813], "wil": 26, "catalyst": 26, "pellet": 26, "helper": [26, 27, 30, 1227, 1250, 1259, 1260, 1261, 1284, 1293, 1294, 1295, 1318, 1327, 1357, 1380, 1474, 1497, 1506, 1536, 1559, 1568], "free": [26, 1605], "template_cylinder_annulu": 26, "r_outer": [26, 1657, 1658], "r_inner": [26, 1657, 1658], "templat": [26, 927, 1657, 1658], "facecenteredcub": [26, 849, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120], "bodycenteredcub": [26, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 1082], "jam": 26, "intersti": 26, "fcc": 26, "bcc": [26, 849], "4x4x4": 26, "corner": [26, 30, 33, 849, 888, 1003, 1082], "site": [26, 99, 861, 862, 900, 901, 938, 939, 976, 977, 1014, 1015, 1055, 1056, 1094, 1095, 1132, 1133, 1170, 1171, 1617, 1620, 1622, 1625, 1626, 1627, 1629, 1630, 1631, 1642, 1643, 1653, 1655, 1661], "node": [26, 29, 33, 555, 1003, 1016, 1017, 1622, 1624, 1626, 1627, 1628, 1630, 1631, 1632, 1638, 1642, 1643, 1657, 1658, 1661], "whether": [26, 31, 51, 57, 83, 89, 99, 110, 117, 143, 149, 176, 182, 208, 215, 241, 247, 274, 280, 307, 313, 340, 346, 374, 380, 407, 413, 440, 446, 471, 489, 495, 507, 529, 833, 860, 871, 878, 899, 910, 917, 937, 948, 955, 975, 986, 993, 1013, 1026, 1033, 1054, 1065, 1072, 1093, 1104, 1111, 1131, 1142, 1149, 1169, 1180, 1187, 1210, 1216, 1242, 1248, 1276, 1282, 1310, 1316, 1340, 1346, 1372, 1378, 1401, 1407, 1429, 1435, 1457, 1463, 1489, 1495, 1519, 1525, 1551, 1557, 1581, 1587, 1617, 1621, 1626, 1630, 1633, 1640, 1641, 1648, 1655, 1769, 1770, 1806, 1807, 1808], "indidc": 26, "portion": [26, 30, 1620], "color": [26, 33, 34], "0x7fdab29274a0": 26, "414": 26, "corner_to_bodi": [26, 849, 1082], "216": [26, 33], "corner_to_corn": 26, "body_to_bodi": 26, "orang": [26, 29], "eas": 26, "dual": [26, 27, 1003], "interpenetr": 26, "delaunayvoronoidu": [26, 965, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042], "cartesian": 26, "cyl": 26, "sph": 26, "coordin": [26, 27, 28, 29, 34, 555, 600, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 629, 630, 631, 633, 634, 671, 672, 678, 683, 685, 686, 687, 688, 849, 888, 927, 965, 1003, 1043, 1082, 1121, 1159, 1621, 1623, 1624, 1633, 1634, 1635, 1636, 1639, 1651, 1652, 1653, 1654, 1656], "dpore": 26, "dthroat": 26, "preced": [26, 555], "depth": [26, 27, 1799], "littl": [26, 27], "bit": [26, 30, 32, 33], "wide": [26, 27, 29, 35, 1801, 1802], "assort": [26, 31], "deper": 27, "scheme": [27, 28, 811], "humbl": 27, "accord": [27, 44, 51, 56, 67, 76, 83, 88, 93, 103, 110, 116, 125, 136, 143, 148, 158, 169, 176, 181, 191, 196, 201, 208, 214, 223, 234, 241, 246, 256, 267, 274, 279, 289, 300, 307, 312, 322, 333, 340, 345, 356, 367, 374, 379, 389, 400, 407, 412, 422, 433, 440, 445, 454, 482, 489, 494, 500, 506, 507, 510, 512, 857, 861, 862, 871, 877, 883, 896, 900, 901, 910, 916, 922, 934, 938, 939, 948, 954, 960, 972, 976, 977, 986, 992, 998, 1003, 1010, 1014, 1015, 1026, 1032, 1038, 1051, 1055, 1056, 1065, 1071, 1077, 1090, 1094, 1095, 1104, 1110, 1116, 1128, 1132, 1133, 1142, 1148, 1154, 1166, 1170, 1171, 1180, 1186, 1192, 1203, 1210, 1215, 1221, 1233, 1242, 1247, 1254, 1267, 1276, 1281, 1288, 1301, 1310, 1315, 1322, 1333, 1340, 1345, 1351, 1363, 1372, 1377, 1384, 1394, 1401, 1406, 1412, 1422, 1429, 1434, 1440, 1450, 1457, 1462, 1468, 1480, 1489, 1494, 1501, 1512, 1519, 1524, 1530, 1542, 1551, 1556, 1563, 1574, 1581, 1586, 1592, 1648, 1739, 1757], "imagin": 27, "panda": [27, 571], "pull": [27, 36], "pd": 27, "pore_data_sheet": 27, "datafram": [27, 571], "ndim": 27, "474407": 27, "055905": 27, "557595": 27, "090773": 27, "501382": 27, "065994": 27, "472442": 27, "055213": 27, "float64": 27, "05590507143096387": 27, "apt": 27, "colum": 27, "mathemat": 27, "serv": [27, 1674], "identifi": [27, 28, 33, 888, 927, 1625, 1629, 1633, 1642, 1648, 1670, 1672, 1679, 1683, 1685], "wrong": 27, "creation": [27, 1619], "cast": 27, "species_a": 27, "species_b": 27, "request": [27, 28, 31, 32, 47, 48, 56, 67, 79, 80, 88, 93, 106, 107, 116, 125, 139, 140, 148, 158, 172, 173, 181, 191, 204, 205, 214, 223, 237, 238, 246, 256, 270, 271, 279, 289, 303, 304, 312, 322, 336, 337, 345, 356, 370, 371, 379, 389, 403, 404, 412, 422, 436, 437, 445, 454, 465, 466, 485, 486, 494, 497, 500, 510, 512, 545, 780, 865, 866, 867, 868, 877, 880, 883, 904, 905, 906, 907, 916, 919, 922, 942, 943, 944, 945, 954, 957, 960, 980, 981, 982, 983, 992, 995, 998, 1020, 1021, 1022, 1023, 1032, 1035, 1038, 1059, 1060, 1061, 1062, 1071, 1074, 1077, 1098, 1099, 1100, 1101, 1110, 1113, 1116, 1136, 1137, 1138, 1139, 1148, 1151, 1154, 1174, 1175, 1176, 1177, 1186, 1189, 1192, 1206, 1207, 1215, 1218, 1221, 1236, 1237, 1238, 1239, 1247, 1251, 1254, 1259, 1270, 1271, 1272, 1273, 1281, 1285, 1288, 1293, 1304, 1305, 1306, 1307, 1315, 1319, 1322, 1327, 1336, 1337, 1345, 1348, 1351, 1366, 1367, 1368, 1369, 1377, 1381, 1384, 1397, 1398, 1406, 1409, 1412, 1425, 1426, 1434, 1437, 1440, 1453, 1454, 1462, 1465, 1468, 1483, 1484, 1485, 1486, 1494, 1498, 1501, 1506, 1515, 1516, 1524, 1527, 1530, 1545, 1546, 1547, 1548, 1556, 1560, 1563, 1568, 1577, 1578, 1586, 1589, 1592], "retreiv": [27, 780], "retun": 27, "subdictionari": [27, 31], "ask": [27, 31, 530], "int64": [27, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "set_label": 27, "meant": [27, 28, 1003, 1648], "pend": 27, "_hidden": 27, "shorthand": 27, "impli": [27, 855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164], "critic": [27, 31, 764, 775, 789, 793, 795, 796, 799, 800, 804, 805, 807], "v3": [27, 29, 30, 31], "lattice_connect": 27, "dimension": 27, "dispatch": [27, 31], "arg": [27, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 477, 526, 541, 849, 888, 927, 965, 1003, 1043, 1082, 1121, 1159, 1198, 1226, 1260, 1294, 1328, 1356, 1389, 1417, 1445, 1473, 1507, 1535, 1569, 1620, 1664, 1667, 1668, 1669, 1671, 1673, 1676, 1678, 1680, 1682, 1684, 1686, 1687, 1689, 1716, 1740, 1743, 1777, 1800], "dn": 27, "delaunai": [27, 813, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1016, 1017, 1633, 1659], "premis": 27, "sentenc": 27, "diagram": [27, 1003], "colunm": 27, "exactli": [27, 28, 30, 31, 32, 1773], "technic": [27, 28, 51, 52, 53, 56, 83, 84, 85, 88, 110, 111, 112, 116, 143, 144, 145, 148, 176, 177, 178, 181, 208, 209, 210, 214, 241, 242, 243, 246, 274, 275, 276, 279, 307, 308, 309, 312, 340, 341, 342, 345, 374, 375, 376, 379, 407, 408, 409, 412, 440, 441, 442, 445, 489, 490, 491, 494, 507, 508, 509, 510, 871, 873, 874, 877, 910, 912, 913, 916, 948, 950, 951, 954, 986, 988, 989, 992, 1026, 1028, 1029, 1032, 1065, 1067, 1068, 1071, 1104, 1106, 1107, 1110, 1142, 1144, 1145, 1148, 1180, 1182, 1183, 1186, 1210, 1211, 1212, 1215, 1242, 1243, 1244, 1247, 1276, 1277, 1278, 1281, 1310, 1311, 1312, 1315, 1340, 1341, 1342, 1345, 1372, 1373, 1374, 1377, 1401, 1402, 1403, 1406, 1429, 1430, 1431, 1434, 1457, 1458, 1459, 1462, 1489, 1490, 1491, 1494, 1519, 1520, 1521, 1524, 1551, 1552, 1553, 1556, 1581, 1582, 1583, 1586], "rigorosli": 27, "support": [27, 31, 566, 1604, 1605], "unintend": 27, "aris": 27, "merg": [27, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452, 1650], "ijv": 27, "evid": 27, "symmetr": [27, 28, 855, 888, 894, 932, 970, 1008, 1049, 1088, 1126, 1164, 1627, 1644, 1773, 1774, 1804], "highli": [27, 814], "mostli": [27, 28, 724, 1616], "nonzero": [27, 28, 648], "travers": [27, 1632], "redund": [27, 856, 895, 933, 971, 1009, 1050, 1089, 1127, 1165], "triangular": [27, 28, 29, 670, 826, 855, 865, 894, 904, 932, 942, 970, 980, 1008, 1020, 1049, 1059, 1088, 1098, 1126, 1136, 1164, 1174, 1620, 1645, 1646, 1647, 1659, 1662], "lil": [27, 28, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "merit": 27, "articl": 27, "conductor": 27, "interconnect": [27, 1003], "enough": [27, 31], "get_conduit_data": 27, "47440675": 27, "23720338": 27, "55759468": 27, "25069084": 27, "50138169": 27, "2362208": 27, "47244159": 27, "r1_r2": 27, "understand": [28, 29, 30], "occassion": 28, "invok": 28, "easier": [28, 29, 30, 849, 888, 965, 1043, 1082, 1121, 1159], "notabl": 28, "obviou": 28, "grow": [28, 653], "million": [28, 763], "meaning": 28, "suggest": [28, 1797], "especi": 28, "amount": [28, 33, 1615, 1653, 1654], "intuit": [28, 30], "lower": [28, 32, 33, 713, 735, 855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164, 1645, 1646], "problemat": [28, 29, 571], "mind": 28, "basi": 28, "suitabl": [28, 654, 656, 704, 706, 711, 734, 741, 814, 1626, 1788], "luckili": 28, "locations_of_nonzero": 28, "values_of_nonzero": 28, "wish": [28, 29, 31, 1633], "dicionari": [28, 849, 888, 965, 1043, 1082, 1121, 1159], "thank": 28, "sophist": 28, "strutur": 28, "dok": [28, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176, 1627], "gotcha": 28, "remedi": [28, 653], "subtract": [28, 29, 658, 659, 660, 661, 718, 725], "slight": 28, "variat": 28, "create_incidence_matrix": [28, 867, 906, 944, 982, 1022, 1061, 1100, 1138, 1176], "background": 28, "predefin": [28, 31, 32, 1226, 1473, 1535], "cn": 28, "p_left": 28, "p_bottom": 28, "lightgrei": [28, 33], "red": 28, "marker": [28, 1633], "blue": 28, "OR": [28, 33], "find_neighbor_por": [28, 872, 911, 949, 987, 1027, 1066, 1105, 1121, 1143, 1181], "exclusve_or": 28, "neigbhor": [28, 872, 911, 949, 987, 1027, 1066, 1105, 1143, 1181], "xnor": [28, 30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 857, 858, 861, 862, 871, 872, 873, 874, 877, 883, 896, 897, 900, 901, 910, 911, 912, 913, 916, 922, 934, 935, 938, 939, 948, 949, 950, 951, 954, 960, 972, 973, 976, 977, 986, 987, 988, 989, 992, 998, 1010, 1011, 1014, 1015, 1026, 1027, 1028, 1029, 1032, 1038, 1051, 1052, 1055, 1056, 1065, 1066, 1067, 1068, 1071, 1077, 1090, 1091, 1094, 1095, 1104, 1105, 1106, 1107, 1110, 1116, 1128, 1129, 1132, 1133, 1142, 1143, 1144, 1145, 1148, 1154, 1166, 1167, 1170, 1171, 1180, 1181, 1182, 1183, 1186, 1192, 1203, 1210, 1211, 1212, 1215, 1221, 1233, 1242, 1243, 1244, 1247, 1254, 1267, 1276, 1277, 1278, 1281, 1288, 1301, 1310, 1311, 1312, 1315, 1322, 1333, 1340, 1341, 1342, 1345, 1351, 1363, 1372, 1373, 1374, 1377, 1384, 1394, 1401, 1402, 1403, 1406, 1412, 1422, 1429, 1430, 1431, 1434, 1440, 1450, 1457, 1458, 1459, 1462, 1468, 1480, 1489, 1490, 1491, 1494, 1501, 1512, 1519, 1520, 1521, 1524, 1530, 1542, 1551, 1552, 1553, 1556, 1563, 1574, 1581, 1582, 1583, 1586, 1592, 1626, 1630, 1631], "opposit": [28, 1003], "nxor": [28, 1626, 1630, 1631], "interchang": 28, "logic": [28, 30, 56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 454, 494, 500, 510, 512, 858, 861, 862, 872, 877, 883, 897, 900, 901, 911, 916, 922, 935, 938, 939, 949, 954, 960, 973, 976, 977, 987, 992, 998, 1011, 1014, 1015, 1027, 1032, 1038, 1052, 1055, 1056, 1066, 1071, 1077, 1091, 1094, 1095, 1105, 1110, 1116, 1129, 1132, 1133, 1143, 1148, 1154, 1167, 1170, 1171, 1181, 1186, 1192, 1215, 1221, 1247, 1254, 1281, 1288, 1315, 1322, 1345, 1351, 1377, 1384, 1406, 1412, 1434, 1440, 1462, 1468, 1494, 1501, 1524, 1530, 1556, 1563, 1586, 1592, 1626, 1630, 1631], "share": [28, 858, 861, 862, 872, 897, 900, 901, 911, 935, 938, 939, 949, 973, 976, 977, 987, 1011, 1014, 1015, 1027, 1052, 1055, 1056, 1066, 1091, 1094, 1095, 1105, 1129, 1132, 1133, 1143, 1167, 1170, 1171, 1181, 1620, 1626, 1628, 1630, 1631], "find_connecting_throat": 28, "p1": [28, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1627, 1628], "p2": [28, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1627, 1628], "nan": [28, 30, 32, 60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 571, 573, 699, 702, 727, 859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168, 1227, 1261, 1295, 1357, 1474, 1536, 1626, 1627, 1803], "find_connected_por": [28, 33], "flatten": [28, 33, 569, 858, 860, 861, 862, 872, 897, 899, 900, 901, 911, 935, 937, 938, 939, 949, 973, 975, 976, 977, 987, 1011, 1013, 1014, 1015, 1027, 1052, 1054, 1055, 1056, 1066, 1091, 1093, 1094, 1095, 1105, 1129, 1131, 1132, 1133, 1143, 1167, 1169, 1170, 1171, 1181, 1626, 1630, 1631], "heterogen": [28, 29, 30], "blockag": 28, "actuali": [28, 30], "simpli": [28, 30, 660, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165], "manual": [28, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 494, 510, 877, 916, 954, 992, 1032, 1071, 1110, 1121, 1148, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586, 1792], "0x7f381dceea40": 28, "easiest": 28, "bool": [28, 33, 56, 62, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 351, 356, 379, 389, 412, 422, 445, 454, 494, 500, 510, 512, 529, 567, 571, 699, 702, 727, 855, 856, 858, 860, 861, 862, 872, 877, 883, 894, 895, 897, 899, 900, 901, 911, 916, 922, 932, 933, 935, 937, 938, 939, 949, 954, 960, 970, 971, 973, 975, 976, 977, 987, 992, 998, 1008, 1009, 1011, 1013, 1014, 1015, 1027, 1032, 1038, 1049, 1050, 1052, 1054, 1055, 1056, 1066, 1071, 1077, 1088, 1089, 1091, 1093, 1094, 1095, 1105, 1110, 1116, 1126, 1127, 1129, 1131, 1132, 1133, 1143, 1148, 1154, 1164, 1165, 1167, 1169, 1170, 1171, 1181, 1186, 1192, 1215, 1221, 1247, 1254, 1281, 1288, 1315, 1322, 1345, 1351, 1377, 1384, 1406, 1412, 1434, 1440, 1462, 1468, 1494, 1501, 1524, 1530, 1556, 1563, 1586, 1592, 1620, 1626, 1630, 1631, 1634, 1640, 1641, 1804, 1806, 1807, 1808], "inde": [28, 33], "signific": 28, "noth": [28, 99, 1765], "totrim": 28, "offset": [28, 850, 889, 1044, 1083, 1615, 1616], "cumsum": 28, "lastli": [28, 30, 31], "remap": 28, "did": 28, "0x7f381dcc4b80": 28, "Of": 28, "decis": 28, "made": [28, 30, 31, 35, 99, 888, 1653, 1654], "new_por": 28, "vstack": 28, "0x7f381dc714a0": 28, "lucki": 28, "hstack": 28, "new_conn": [28, 1619], "obvious": 28, "enterpr": 29, "tomograph": 29, "Not": 29, "blank": 29, "0x7f86e83f31d0": 29, "8000": 29, "22800": 29, "2168": 29, "4332": 29, "favor": [29, 855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "thorough": 29, "psd": 29, "norm": [29, 654, 704, 734], "xlim": 29, "greater": 29, "5593961722893255": 29, "80996128980269": 29, "tsd": 29, "5130345457395142": 29, "96861960231873": 29, "nm": 29, "vice": [29, 32, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "versa": [29, 32, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "strang": 29, "constrict": [29, 739], "564": 29, "ever": 29, "tempt": 29, "loop": [29, 33, 759, 1016, 1017], "interog": 29, "ye": 29, "safer": 29, "randomli": [29, 1634, 1651], "amin": 29, "densiti": [29, 31, 587, 590, 591, 762, 763, 764, 765, 766, 788, 835, 836], "alpha": [29, 34, 828, 830], "50e": 29, "shift": [29, 30, 1615], "bia": 29, "toward": 29, "lo": 29, "hi": [29, 554], "lie": [29, 678, 850, 889, 965, 1044, 1083, 1159, 1633, 1634, 1642], "overli": 29, "ppf": [29, 652, 654, 656, 703, 704, 706, 729, 734, 741], "tend": 29, "mandatori": 29, "occupi": [29, 1617, 1643, 1655], "regard": 29, "r1": 29, "r2": 29, "l_total": 29, "sqrt": 29, "squeez": 29, "lt": 29, "euclidean": 29, "root": [29, 36], "home": 29, "nest": [29, 567, 1799, 1809], "deeper": 29, "unbuff": 29, "sap": 29, "08485305e": 29, "68134509e": 29, "33947201e": 29, "57211706e": 29, "92152447e": 29, "72429278e": 29, "potenti": [29, 835, 836], "substract": 29, "fashion": [29, 1619], "adjac": [29, 651, 653, 671, 672, 699, 702, 727, 728, 849, 855, 856, 865, 888, 894, 895, 904, 927, 932, 933, 942, 965, 970, 971, 980, 1003, 1008, 1009, 1020, 1043, 1049, 1050, 1059, 1082, 1088, 1089, 1098, 1121, 1126, 1127, 1136, 1159, 1164, 1165, 1174, 1620, 1622, 1627, 1644, 1645, 1646, 1647, 1659, 1662], "lengthi": 29, "lai": 29, "bare": 29, "job": 29, "fresh": 29, "close": [29, 31, 32, 566, 570, 832], "inherit": [29, 459, 477, 526], "throat_se": 29, "docstr": [29, 30, 31, 62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452, 479, 543, 852, 891, 929, 967, 1005, 1046, 1085, 1123, 1161, 1200, 1229, 1263, 1297, 1330, 1359, 1391, 1419, 1447, 1476, 1509, 1538, 1571, 1665, 1670, 1674, 1675, 1677, 1679, 1681, 1683, 1685], "78": [29, 33, 1801, 1802], "charact": [29, 1679, 1801, 1802], "cursor": 29, "explicitli": [29, 555], "track": [29, 33, 459, 1417], "f1": 29, "f2": 29, "f3": 29, "f4": 29, "lens": 29, "27203214e": 29, "58686910e": 29, "44028684e": 29, "92245838e": 29, "40091924e": 29, "59556144e": 29, "57978631e": 29, "74677718e": 29, "68073070e": 29, "tediou": 29, "prone": 29, "predfin": 29, "pprint": 29, "0x7f86a6ab4c10": 29, "largest_spher": [29, 578, 579, 580, 581, 582, 583, 584], "0x7f86a4ac63a0": 29, "0x7f86a6ab4430": 29, "0x7f86a4ac6790": 29, "pore_diamet": [29, 578, 579, 580, 581, 582, 583, 584, 597, 598, 599, 600, 601, 602, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 658, 659, 660, 661, 663, 664, 665, 666, 667, 678, 680, 681, 682, 683, 684, 685, 689, 690, 691, 692, 718, 719, 817, 830], "0x7f86a4acd4c0": 29, "throat_diamet": [29, 578, 579, 580, 581, 582, 583, 584, 597, 598, 599, 606, 607, 608, 609, 611, 612, 613, 620, 621, 622, 623, 624, 626, 627, 628, 632, 635, 636, 637, 638, 639, 665, 669, 674, 675, 676, 678, 680, 681, 682, 689, 690, 691, 692, 694, 695, 696, 708, 709, 715, 716, 718, 719, 720, 817, 828, 829, 830], "0x7f86a6ab4ca0": 29, "0x7f86a4a1b790": 29, "0x7f86a4a8de50": 29, "0x7f86a4acde50": 29, "0x7f86a4a5e160": 29, "0x7f86a6ab4e50": 29, "0x7f86a4ad5ee0": 29, "0x7f86a6ab48b0": 29, "nice": [29, 1728, 1801, 1802], "add_models_collect": 29, "0x7f86a333b130": 29, "bound": 29, "nearest": [29, 653, 750, 1656], "dall": 29, "truncat": [29, 601, 606, 612, 614, 615, 621, 627, 629, 630, 636], "reach": [29, 33], "constrain": 29, "life": 29, "recomput": 29, "reomcomput": 29, "15319619": 29, "0328116": 29, "2287953": 29, "23887453": 29, "8411705": 29, "10988224": 29, "59011212e": 29, "75717988e": 29, "13561876e": 29, "66940036e": 29, "27284536e": 29, "36618201": 29, "35063831": 29, "40236746": 29, "58822388": 29, "42461491": 29, "9016327": 29, "11640227e": 29, "20171387e": 29, "57748463e": 29, "30989878e": 29, "79091080e": 29, "automatical": 29, "graph": [29, 31, 529, 530, 531, 555, 562, 855, 856, 865, 894, 895, 904, 932, 933, 942, 970, 971, 980, 1008, 1009, 1020, 1049, 1050, 1059, 1088, 1089, 1098, 1126, 1127, 1136, 1164, 1165, 1174], "networkx": [29, 529, 555, 562], "sort": [29, 33, 196, 833], "tree": [29, 1651], "downstream": 29, "roughli": 29, "dependency_map": [29, 526, 529, 530], "style": [29, 531], "planar": [29, 597, 602, 605, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 631, 634, 638, 639, 641, 645], "circl": [29, 578, 584, 597, 611, 626, 680, 701, 1642, 1657], "dependency_graph": [29, 526, 530, 531], "draw_networkx": 29, "draw_planar": 29, "bookmark": 30, "0x7f5958479d10": 30, "corner_por": 30, "build": [30, 59, 151, 184, 249, 282, 315, 448], "filter": [30, 34, 44, 51, 56, 67, 76, 83, 88, 93, 103, 110, 116, 125, 136, 143, 148, 158, 169, 176, 181, 191, 201, 208, 214, 223, 234, 241, 246, 256, 267, 274, 279, 289, 300, 307, 312, 322, 333, 340, 345, 356, 367, 374, 379, 389, 400, 407, 412, 422, 433, 440, 445, 454, 482, 489, 494, 500, 506, 507, 510, 512, 857, 858, 861, 862, 871, 877, 883, 896, 897, 900, 901, 910, 916, 922, 934, 935, 938, 939, 948, 954, 960, 972, 973, 976, 977, 986, 992, 998, 1010, 1011, 1014, 1015, 1026, 1032, 1038, 1051, 1052, 1055, 1056, 1065, 1071, 1077, 1090, 1091, 1094, 1095, 1104, 1110, 1116, 1128, 1129, 1132, 1133, 1142, 1148, 1154, 1166, 1167, 1170, 1171, 1180, 1186, 1192, 1203, 1210, 1215, 1221, 1233, 1242, 1247, 1254, 1267, 1276, 1281, 1288, 1301, 1310, 1315, 1322, 1333, 1340, 1345, 1351, 1363, 1372, 1377, 1384, 1394, 1401, 1406, 1412, 1422, 1429, 1434, 1440, 1450, 1457, 1462, 1468, 1480, 1489, 1494, 1501, 1512, 1519, 1524, 1530, 1542, 1551, 1556, 1563, 1574, 1581, 1586, 1592, 1624, 1626, 1630, 1631], "decrib": 30, "nd": [30, 780, 782], "wast": [30, 33], "wors": 30, "consum": 30, "8x": 30, "nonetheless": 30, "invest": 30, "great": 30, "mask1": 30, "mask2": 30, "edg": [30, 33, 555, 650, 701, 888, 1622, 1626, 1627, 1628, 1630, 1632, 1661], "theori": [30, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165, 1626, 1630, 1631], "nor": [30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 857, 871, 873, 874, 877, 883, 896, 910, 912, 913, 916, 922, 934, 948, 950, 951, 954, 960, 972, 986, 988, 989, 992, 998, 1010, 1026, 1028, 1029, 1032, 1038, 1051, 1065, 1067, 1068, 1071, 1077, 1090, 1104, 1106, 1107, 1110, 1116, 1128, 1142, 1144, 1145, 1148, 1154, 1166, 1180, 1182, 1183, 1186, 1192, 1203, 1210, 1211, 1212, 1215, 1221, 1233, 1242, 1243, 1244, 1247, 1254, 1267, 1276, 1277, 1278, 1281, 1288, 1301, 1310, 1311, 1312, 1315, 1322, 1333, 1340, 1341, 1342, 1345, 1351, 1363, 1372, 1373, 1374, 1377, 1384, 1394, 1401, 1402, 1403, 1406, 1412, 1422, 1429, 1430, 1431, 1434, 1440, 1450, 1457, 1458, 1459, 1462, 1468, 1480, 1489, 1490, 1491, 1494, 1501, 1512, 1519, 1520, 1521, 1524, 1530, 1542, 1551, 1552, 1553, 1556, 1563, 1574, 1581, 1582, 1583, 1586, 1592], "confus": [30, 33], "nand": [30, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 857, 871, 873, 874, 877, 883, 896, 910, 912, 913, 916, 922, 934, 948, 950, 951, 954, 960, 972, 986, 988, 989, 992, 998, 1010, 1026, 1028, 1029, 1032, 1038, 1051, 1065, 1067, 1068, 1071, 1077, 1090, 1104, 1106, 1107, 1110, 1116, 1128, 1142, 1144, 1145, 1148, 1154, 1166, 1180, 1182, 1183, 1186, 1192, 1203, 1210, 1211, 1212, 1215, 1221, 1233, 1242, 1243, 1244, 1247, 1254, 1267, 1276, 1277, 1278, 1281, 1288, 1301, 1310, 1311, 1312, 1315, 1322, 1333, 1340, 1341, 1342, 1345, 1351, 1363, 1372, 1373, 1374, 1377, 1384, 1394, 1401, 1402, 1403, 1406, 1412, 1422, 1429, 1430, 1431, 1434, 1440, 1450, 1457, 1458, 1459, 1462, 1468, 1480, 1489, 1490, 1491, 1494, 1501, 1512, 1519, 1520, 1521, 1524, 1530, 1542, 1551, 1552, 1553, 1556, 1563, 1574, 1581, 1582, 1583, 1586, 1592], "retiev": 30, "annoi": [30, 1803], "shortcut": [30, 32, 36, 38, 130, 163, 228, 261, 294, 327, 361, 394, 427, 1003, 1043], "edit": [30, 36, 835, 836], "syntax": [30, 555], "certainli": 30, "infer": [30, 850, 889, 927, 1044, 1083], "suppli": [30, 31, 44, 52, 53, 60, 63, 64, 65, 76, 84, 85, 90, 103, 111, 112, 120, 121, 123, 136, 144, 145, 152, 154, 155, 156, 169, 177, 178, 185, 187, 188, 189, 201, 209, 210, 218, 219, 221, 234, 242, 243, 250, 252, 253, 254, 267, 275, 276, 283, 285, 286, 287, 300, 308, 309, 316, 318, 319, 320, 333, 341, 342, 349, 352, 353, 354, 367, 375, 376, 383, 385, 386, 387, 400, 408, 409, 416, 418, 419, 420, 433, 441, 442, 449, 451, 452, 479, 482, 490, 491, 506, 508, 509, 543, 723, 735, 852, 857, 860, 873, 874, 891, 896, 899, 912, 913, 929, 934, 937, 950, 951, 967, 972, 975, 988, 989, 1005, 1010, 1013, 1028, 1029, 1046, 1051, 1054, 1067, 1068, 1085, 1090, 1093, 1106, 1107, 1123, 1128, 1131, 1144, 1145, 1159, 1161, 1166, 1169, 1182, 1183, 1200, 1203, 1211, 1212, 1229, 1233, 1243, 1244, 1263, 1267, 1277, 1278, 1297, 1301, 1311, 1312, 1330, 1333, 1341, 1342, 1359, 1363, 1373, 1374, 1391, 1394, 1402, 1403, 1419, 1422, 1430, 1431, 1447, 1450, 1458, 1459, 1476, 1480, 1490, 1491, 1509, 1512, 1520, 1521, 1538, 1542, 1552, 1553, 1571, 1574, 1582, 1583, 1642, 1654, 1740, 1742, 1781], "bonu": 30, "new_arrai": 30, "overwrot": 30, "symbol": [30, 838], "conceptu": 30, "gone": 30, "bimod": 30, "layer": [30, 648, 830, 1654], "v2": [30, 31], "lost": [30, 1779], "suffici": [30, 31], "separ": [30, 569], "mainten": 30, "backend": 30, "think": 30, "tidier": 30, "consequ": [30, 32, 835, 836], "mark": [30, 927, 1633], "leav": [30, 58, 61, 91, 122, 150, 153, 183, 186, 220, 248, 251, 281, 284, 314, 317, 347, 350, 381, 384, 414, 417, 447, 450, 498, 511, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590], "unspecifi": 30, "everywher": 30, "visibl": 30, "recogin": 30, "redefin": 30, "run_model": 30, "observ": [30, 33], "With": 30, "dealt": [30, 573], "uniform": 30, "uniformli": 30, "abstract": 30, "freeli": 30, "asmask": [30, 56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 454, 494, 500, 510, 512, 861, 862, 877, 883, 900, 901, 916, 922, 938, 939, 954, 960, 976, 977, 992, 998, 1014, 1015, 1032, 1038, 1055, 1056, 1071, 1077, 1094, 1095, 1110, 1116, 1132, 1133, 1148, 1154, 1170, 1171, 1186, 1192, 1215, 1221, 1247, 1254, 1281, 1288, 1315, 1322, 1345, 1351, 1377, 1384, 1406, 1412, 1434, 1440, 1462, 1468, 1494, 1501, 1524, 1530, 1556, 1563, 1586, 1592], "beed": 30, "thermodynam": [31, 32, 759], "framework": 31, "submodul": [31, 595, 652, 703, 721, 729, 742, 758, 809], "exhaust": 31, "librari": [31, 33, 34, 652, 703, 729, 1786, 1791], "polici": 31, "exact": [31, 763], "cantera": 31, "handler": 31, "ca": [31, 773], "leverag": 31, "extern": [31, 1633], "001": [31, 654, 704, 734], "three": [31, 32, 526, 837, 839, 840, 841, 842, 843, 844], "phase1": 31, "0x7f274a6aad60": 31, "nearli": 31, "broadcast": 31, "perhap": [31, 759], "polynomi": [31, 587, 590], "4th": 31, "experiment": [31, 33, 835, 836], "yield": 31, "a4": [31, 837, 840, 841, 842], "8543e": 31, "6756e": 31, "7831e": 31, "3156e": 31, "a0": [31, 736, 759], "8898e": 31, "00091476": 31, "350": 31, "rerun": [31, 36], "00043033": 31, "00068872": 31, "00053659": 31, "00078599": 31, "th": [31, 1654], "0003957": 31, "00065857": 31, "00050424": 31, "00076036": 31, "viscostii": 31, "custom_mu": 31, "reimplement": 31, "commonli": 31, "appropri": [31, 786, 811, 1633], "phase_02": 31, "0x7f27496f4040": 31, "molar_dens": [31, 587, 590, 591], "thermal_conduct": [31, 587, 590, 591, 594, 792, 794, 846, 847], "vapor_pressur": [31, 591], "salin": [31, 766, 790, 797, 801, 808], "mass_to_molar": [31, 587, 590, 591], "mw": [31, 587, 762, 763, 764, 765, 768, 769, 778, 783, 788, 792, 793, 794, 795, 796, 803, 804, 805, 807, 1800], "param": [31, 38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 477, 759, 762, 763, 764, 765, 768, 769, 770, 773, 775, 778, 783, 786, 788, 789, 792, 793, 794, 795, 796, 800, 803, 804, 805, 807, 849, 888, 927, 965, 1003, 1043, 1082, 1121, 1159, 1198, 1226, 1260, 1294, 1328, 1356, 1389, 1417, 1445, 1473, 1507, 1535, 1569, 1665, 1666, 1668, 1670, 1672, 1675, 1677, 1681, 1683, 1685, 1688, 1800, 1807, 1808], "molecular_weight": [31, 762, 763, 764, 765, 768, 769, 778, 783, 788, 792, 793, 794, 795, 796, 803, 804, 805, 807, 817, 1417, 1800], "liquid_pure_antoin": [31, 591], "therebi": 31, "molar_denstii": 31, "cycl": [31, 530], "resolv": [31, 526], "upstream": 31, "unusu": 31, "reproduc": 31, "api": [31, 32], "unnecessari": 31, "On": [31, 33, 36], "beta": [31, 835, 836], "oxygen": 31, "nitrogen": 31, "o2": 31, "phase_03": 31, "0x7f2743b3eb30": 31, "thermo": 31, "synonym": 31, "databas": 31, "BUT": 31, "host": 31, "7782": 31, "common_nam": 31, "charg": [31, 836], "formula": [31, 786, 826], "boiling_temperatur": [31, 789, 793, 795, 796], "188": [31, 33], "melting_temperatur": 31, "triple_point_temperatur": 31, "triple_point_pressur": 31, "9796864589355": 31, "dipole_mo": 31, "lj_diamet": [31, 768], "29728": 31, "lj_energi": [31, 768], "6520845934e": 31, "surface_tension_tb": [31, 770], "013145633010272155": 31, "molar_volume_tb": [31, 770], "802254619756072e": 31, "9988": [31, 587], "critical_temperatur": [31, 759, 763, 764, 768, 775, 789, 796, 800, 804, 805, 807], "critical_pressur": [31, 768, 789, 793, 795, 800, 804, 805, 807], "5042945": 31, "critical_volum": [31, 763, 764], "34e": 31, "critical_compressibilty_factor": 31, "2880002236716698": 31, "acentric_factor": [31, 763, 764, 768, 775, 793, 795, 800, 807], "021": 31, "prefix": [31, 558], "stiel": [31, 805, 807], "thodo": [31, 805], "gas_pure_l": 31, "gas_pure_st": 31, "01023694e": 31, "tcrit": 31, "becuas": [31, 130], "gase": [31, 758], "standardliquid": [31, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534], "standardga": [31, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472], "approximat": 31, "h2o": [31, 1417], "popul": 31, "phase_04": 31, "0x7f2743a819a0": 31, "heat_capacity_ga": [31, 775], "heat_capac": [31, 772, 773, 774], "phase_05": 31, "0x7f2743a8ef90": 31, "minim": 31, "liquid_pure_costald": 31, "vc": [31, 763, 764], "omega": [31, 763, 764, 768, 775, 793, 795, 800, 807], "gas_pure_trc": 31, "liquid_pure_rp": 31, "cpg": [31, 775], "liquid_pure_gismr": 31, "tb": [31, 789, 793, 795, 796], "liquid_pure_l": 31, "n2": 31, "standardgasmixtur": [31, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506], "79": [31, 33], "compositio": 31, "mixture_01": 31, "0x7f2743a9ea40": 31, "mole_fract": [31, 1227, 1250, 1259, 1261, 1284, 1293, 1295, 1318, 1327, 1357, 1380, 1474, 1497, 1506, 1536, 1559, 1568], "blend": 31, "78543425e": 31, "01881831e": 31, "sub": [31, 858, 860, 861, 897, 899, 900, 935, 937, 938, 973, 975, 976, 1011, 1013, 1014, 1052, 1054, 1055, 1091, 1093, 1094, 1129, 1131, 1132, 1167, 1169, 1170, 1626, 1630, 1631], "0x7f2743a8e9a0": 31, "0x7f2743a9e2c0": 31, "liquidmixtur": [31, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1535], "gasmixtur": [31, 1226, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1473], "remove_comp": 31, "liter": [31, 872, 911, 949, 987, 1027, 1066, 1105, 1143, 1181], "add_comp": 31, "compnam": [31, 780, 1259, 1293, 1327, 1506, 1568], "09391006e": 31, "69779528e": 31, "propertei": 31, "failur": 31, "health": [31, 1230, 1264, 1298, 1360, 1477, 1539, 1690, 1796, 1797], "mole_fraction_too_low": 31, "mole_fraction_too_high": 31, "univers": 31, "symbmol": 31, "instruct": [31, 565], "mole_fraction_weight": 31, "55064928e": 31, "suffix": [31, 1801, 1802], "crucial": 31, "viscsoiti": 31, "turn": [31, 478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "0x7fec88cad450": 32, "fulli": [32, 33, 36, 832, 1016, 1640], "driven": 32, "0x7fec4192a950": 32, "00089319": 32, "simplest": 32, "hagan": 32, "tube": [32, 34, 670, 813, 814, 826, 829], "prefactor": [32, 844], "g_h": 32, "aim": 32, "protip": 32, "07003667e": 32, "93957737e": 32, "42643787e": 32, "44482887e": 32, "05068209e": 32, "37452721e": 32, "00425350e": 32, "26177916e": 32, "77102407e": 32, "72815258e": 32, "73275319e": 32, "36896705e": 32, "78379040e": 32, "47685187e": 32, "39955461e": 32, "11444544e": 32, "71383404e": 32, "20191251e": 32, "07011382e": 32, "31859709e": 32, "64390891e": 32, "81490602e": 32, "60261642e": 32, "19765498e": 32, "52295624e": 32, "19047049e": 32, "00737083e": 32, "21978481e": 32, "05562019e": 32, "60509988e": 32, "70143948e": 32, "09634744e": 32, "48850664e": 32, "91314286e": 32, "43926925e": 32, "99329587e": 32, "22723464e": 32, "33315151e": 32, "23515329e": 32, "34805302e": 32, "auotmat": 32, "disabl": 32, "stokes_01": 32, "0x7fec41930540": 32, "set_rate_bc": 32, "preceed": [32, 1668], "sustain": [32, 828], "compon": [32, 759, 763, 769, 770, 781, 782, 783, 806, 838, 1226, 1227, 1236, 1250, 1259, 1260, 1261, 1270, 1284, 1293, 1294, 1295, 1304, 1318, 1327, 1356, 1357, 1366, 1380, 1473, 1474, 1483, 1497, 1506, 1535, 1536, 1545, 1559, 1568, 1654, 1801, 1802], "multiphys": 32, "quanti": 32, "270710": 32, "26376229": 32, "199970": 32, "42612363": 32, "209239": 32, "68583805": 32, "212198": 32, "79237635": 32, "211052": 32, "59726484": 32, "kpa": 32, "simplist": 32, "finish": 32, "intersect": [32, 44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 601, 603, 604, 605, 617, 618, 619, 632, 633, 634, 660, 678, 686, 687, 688, 715, 716, 717, 718, 720, 857, 858, 861, 862, 871, 872, 873, 874, 877, 883, 896, 897, 900, 901, 910, 911, 912, 913, 916, 922, 934, 935, 938, 939, 948, 949, 950, 951, 954, 960, 972, 973, 976, 977, 986, 987, 988, 989, 992, 998, 1010, 1011, 1014, 1015, 1026, 1027, 1028, 1029, 1032, 1038, 1051, 1052, 1055, 1056, 1065, 1066, 1067, 1068, 1071, 1077, 1090, 1091, 1094, 1095, 1104, 1105, 1106, 1107, 1110, 1116, 1128, 1129, 1132, 1133, 1142, 1143, 1144, 1145, 1148, 1154, 1166, 1167, 1170, 1171, 1180, 1181, 1182, 1183, 1186, 1192, 1203, 1210, 1211, 1212, 1215, 1221, 1233, 1242, 1243, 1244, 1247, 1254, 1267, 1276, 1277, 1278, 1281, 1288, 1301, 1310, 1311, 1312, 1315, 1322, 1333, 1340, 1341, 1342, 1345, 1351, 1363, 1372, 1373, 1374, 1377, 1384, 1394, 1401, 1402, 1403, 1406, 1412, 1422, 1429, 1430, 1431, 1434, 1440, 1450, 1457, 1458, 1459, 1462, 1468, 1480, 1489, 1490, 1491, 1494, 1501, 1512, 1519, 1520, 1521, 1524, 1530, 1542, 1551, 1552, 1553, 1556, 1563, 1574, 1581, 1582, 1583, 1586, 1592, 1626, 1630, 1631, 1767, 1768], "01030604e": 32, "20808370e": 32, "49026222e": 32, "98474958e": 32, "50898571e": 32, "10290568e": 32, "27408139e": 32, "02149291e": 32, "29050806e": 32, "13179120e": 32, "46643683e": 32, "40441447e": 32, "75603860e": 32, "42370668e": 32, "48005190e": 32, "43603042e": 32, "63799218e": 32, "96990131e": 32, "61833865e": 32, "92978646e": 32, "12700972e": 32, "17695367e": 32, "80692851e": 32, "72739024e": 32, "83771624e": 32, "03312708e": 32, "43676119e": 32, "21753884e": 32, "37267501e": 32, "22725230e": 32, "14410015e": 32, "68870371e": 32, "32589248e": 32, "14712747e": 32, "59326544e": 32, "60302013e": 32, "85008283e": 32, "57144736e": 32, "00079927e": 32, "39559709e": 32, "93080335e": 32, "23676382e": 32, "78179447e": 32, "60534347e": 32, "59183808e": 32, "99673579e": 32, "62580756e": 32, "05272140e": 32, "07353737e": 32, "15568063e": 32, "04513383e": 32, "55815981e": 32, "88952262e": 32, "17775899e": 32, "17814920e": 32, "53067975e": 32, "93427929e": 32, "44713359e": 32, "08701237e": 32, "99110624e": 32, "89739722e": 32, "98490808e": 32, "06973459e": 32, "76831911e": 32, "15938484e": 32, "36029073e": 32, "52927221e": 32, "20021081e": 32, "25892019e": 32, "57917458e": 32, "59364945e": 32, "87588264e": 32, "57120510e": 32, "51563419e": 32, "43366069e": 32, "27693737e": 32, "22627980e": 32, "51971034e": 32, "89443087e": 32, "79247611e": 32, "16165888e": 32, "15556293e": 32, "68866634e": 32, "28156568e": 32, "20484719e": 32, "93353445e": 32, "07192416e": 32, "33856290e": 32, "35315762e": 32, "27382059e": 32, "09615487e": 32, "44309549e": 32, "48832777e": 32, "83324757e": 32, "10322773e": 32, "99045065e": 32, "74774765e": 32, "poisseiul": 32, "f_h": 32, "roll": [32, 36], "invert": [32, 130], "f_": 32, "h": [32, 35, 554, 766, 786, 790, 801, 808, 826], "44314835e": 32, "23617427e": 32, "36732323e": 32, "38460861e": 32, "85582881e": 32, "73096189e": 32, "21816073e": 32, "20947553e": 32, "91687646e": 32, "58018434e": 32, "58489239e": 32, "16333097e": 32, "70282815e": 32, "18004302e": 32, "06087201e": 32, "72523782e": 32, "49434886e": 32, "09056709e": 32, "75205677e": 32, "19939078e": 32, "43074948e": 32, "28207762e": 32, "51609160e": 32, "14893391e": 32, "45835206e": 32, "99241610e": 32, "46677274e": 32, "04358657e": 32, "90389764e": 32, "53517210e": 32, "62351211e": 32, "99412791e": 32, "21168393e": 32, "72999175e": 32, "99726041e": 32, "78119414e": 32, "11403963e": 32, "04144623e": 32, "12560367e": 32, "92168641e": 32, "280184": 32, "9848033": 32, "207503": 32, "90885807": 32, "217349": 32, "38120836": 32, "220266": 32, "91030089": 32, "218936": 32, "26816117": 32, "inclus": 32, "impact": [33, 130], "multiphas": 33, "motiv": 33, "imbibit": 33, "imbibt": 33, "menisci": 33, "plan": 33, "degre": [33, 1653, 1654], "capillary_pressur": 33, "displac": [33, 813, 833, 1616], "increasingli": 33, "p_": [33, 833], "increas": [33, 34, 653, 813, 829, 833], "decreas": 33, "suction": 33, "stem": 33, "drain": 33, "regardless": [33, 99, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "clear": [33, 40, 41, 42, 60, 61, 64, 74, 90, 91, 101, 120, 122, 132, 133, 134, 152, 153, 155, 165, 166, 167, 185, 186, 188, 199, 218, 220, 230, 231, 232, 250, 251, 253, 263, 264, 265, 283, 284, 286, 296, 297, 298, 316, 317, 319, 329, 330, 331, 349, 350, 353, 363, 364, 365, 383, 384, 386, 396, 397, 398, 416, 417, 419, 429, 430, 431, 449, 450, 498, 511, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590], "inject": 33, "withdraw": 33, "connected_compon": [33, 1617, 1655], "drop_zero": [33, 855, 856, 894, 895, 932, 933, 970, 971, 1008, 1009, 1049, 1050, 1088, 1089, 1126, 1127, 1164, 1165], "39": 33, "51": 33, "55": 33, "57": 33, "65": [33, 786], "66": 33, "70": 33, "72": 33, "74": [33, 35], "81": 33, "82": 33, "84": 33, "87": 33, "88": 33, "92": 33, "94": 33, "95": 33, "98": 33, "101": [33, 862, 901, 939, 977, 1015, 1056, 1095, 1133, 1171], "102": 33, "103": 33, "104": 33, "106": 33, "107": 33, "108": 33, "114": 33, "116": 33, "117": 33, "118": 33, "123": 33, "125": 33, "127": 33, "129": 33, "132": 33, "137": 33, "138": 33, "142": 33, "145": 33, "152": 33, "155": 33, "156": 33, "157": 33, "158": 33, "159": 33, "163": [33, 830], "164": 33, "165": 33, "166": 33, "167": 33, "168": [33, 813], "169": 33, "170": 33, "171": 33, "172": 33, "173": 33, "174": 33, "175": 33, "176": 33, "177": [33, 669], "178": 33, "179": 33, "181": 33, "182": 33, "183": 33, "184": 33, "185": 33, "186": 33, "187": 33, "189": 33, "191": 33, "192": 33, "193": 33, "194": 33, "195": 33, "196": 33, "197": 33, "198": 33, "199": 33, "201": [33, 862, 901, 939, 977, 1015, 1056, 1095, 1133, 1171], "202": 33, "203": 33, "204": 33, "205": 33, "206": 33, "207": 33, "208": 33, "209": 33, "210": 33, "212": 33, "213": 33, "214": 33, "215": 33, "217": 33, "218": 33, "219": 33, "220": 33, "221": 33, "223": 33, "224": 33, "225": 33, "226": 33, "227": 33, "228": 33, "229": 33, "230": 33, "231": 33, "232": 33, "233": 33, "234": 33, "235": 33, "236": [33, 826], "237": 33, "238": 33, "239": 33, "240": [33, 801], "241": 33, "242": 33, "243": 33, "244": 33, "245": 33, "246": 33, "247": 33, "248": 33, "249": 33, "250": 33, "251": 33, "252": 33, "253": 33, "254": 33, "255": 33, "256": 33, "257": 33, "258": 33, "259": 33, "260": 33, "261": 33, "262": [33, 670], "263": 33, "264": 33, "265": 33, "266": 33, "267": 33, "268": 33, "269": 33, "270": 33, "271": 33, "272": 33, "273": [33, 766, 790, 797, 801, 808], "274": [33, 670], "275": 33, "276": 33, "277": 33, "278": 33, "279": 33, "280": 33, "281": 33, "282": 33, "283": 33, "284": 33, "285": 33, "286": 33, "287": 33, "288": 33, "289": 33, "290": [33, 648], "291": 33, "292": 33, "293": 33, "294": 33, "295": [33, 826], "296": 33, "cmap": 33, "cm": 33, "nipy_spectr": 33, "black": 33, "thoughout": 33, "speak": 33, "uninvad": [33, 99, 1617, 1625], "yellow": 33, "invaded_por": 33, "isin": 33, "viridi": 33, "yeild": [33, 927], "repeat": [33, 751], "increaingli": 33, "beyond": [33, 759, 813, 829, 1642], "drainage_01": 33, "0x7f8423a46680": 33, "trap": [33, 99, 123, 197, 221], "actaulli": 33, "histori": [33, 99], "inv_pattern": 33, "9000": 33, "grei": 33, "post": 33, "escap": [33, 99], "apply_trap": 33, "inf": [33, 99, 573, 1656, 1803], "set_outlet_bc": [33, 197], "calibr": 33, "froma": 33, "namedtupl": 33, "evacu": 33, "data2": 33, "plateau": 33, "rigor": [33, 835, 836], "fictiti": 33, "invaded": 33, "percoalt": 33, "event": 33, "increment": 33, "mainli": 33, "binari": [33, 130, 196, 554, 769, 1226], "heap": [33, 196], "queue": 33, "accessb": 33, "newli": [33, 1616, 1656], "pinv": 33, "alloc": 33, "tinv": 33, "9260": 33, "551831957264": 33, "9493": 33, "684102948077": 33, "8650": 33, "998219036306": 33, "381": 33, "2nd": [33, 713], "heapq": 33, "hq": 33, "heapifi": 33, "easilii": 33, "sequenti": 33, "care": 33, "heappop": 33, "p_new": 33, "p_next": 33, "t_new": 33, "t_next": 33, "401": [33, 797], "maintain": [33, 1651, 1739, 1757, 1777], "heappush": 33, "confirm": [33, 763], "lowest": 33, "compil": 33, "numba": [33, 196], "acceler": 33, "abovec": 33, "reset": [33, 196, 724], "contigu": 33, "untrap": 33, "vari": 33, "overlai": 33, "data_ip": 33, "film": 33, "crack": 33, "jump": 33, "rise": 33, "fall": 33, "spike": 33, "vallei": 33, "never": [33, 653], "envelop": 33, "peak": 33, "current_directori": 34, "getcwd": 34, "plotli": 34, "pip": [34, 36], "instal": [34, 566], "pane": 34, "consol": [34, 36, 567], "editor": 34, "wirefram": 34, "transpar": 34, "static": [34, 1671, 1673, 1684, 1686], "scatter": 34, "plot_notebook": 34, "rotat": [34, 1653], "zoom": 34, "hover": 34, "box": 34, "node_color": 34, "node_scal": 34, "sceenshot": 34, "analysi": [34, 554, 648], "compat": [34, 1616, 1807, 1808], "export": [34, 559, 566, 572], "vtp": [34, 572, 573], "paraveiw": 34, "project_to_vtk": 34, "file_nam": 34, "directori": [34, 36, 554, 1786, 1791], "path_to_fil": 34, "_vtk": 34, "filenam": [34, 552, 553, 554, 556, 557, 559, 560, 561, 564, 565, 566, 568, 570, 572, 573, 574, 1786, 1787, 1791, 1792], "paraview_net": 34, "parview": 34, "click": 34, "button": 34, "glyph": 34, "tool": [34, 648], "pipelin": [34, 730], "alphabet": 34, "shrink": 34, "celldatatopointdata": 34, "transpos": 34, "extractsurfac": 34, "proport": [34, 733], "icon": 34, "glyph1": 34, "solid": [34, 758, 828, 835, 836, 1003, 1657, 1658], "tube1": 34, "didn": 34, "public": 35, "gostick": [35, 648, 813, 829], "aghighi": 35, "hinebaugh": 35, "tranter": 35, "hoeh": 35, "ma": 35, "dai": 35, "spellaci": 35, "sharqawi": [35, 766, 790, 801, 808], "mh": 35, "bazylak": 35, "burn": 35, "lehnert": 35, "scienc": [35, 670], "engin": [35, 786], "2016": [35, 197, 830], "doi": [35, 197, 793, 795], "1109": 35, "mcse": 35, "heavili": 36, "stack": [36, 1654], "environ": 36, "anaconda": 36, "Be": 36, "forg": 36, "won": 36, "publish": 36, "releas": 36, "month": 36, "latest": 36, "branch": 36, "git": 36, "com": [36, 1679], "pmeal": 36, "contributor": 36, "uninstal": 36, "command": 36, "clone": [36, 1615, 1618], "repo": 36, "local": 36, "difficult": [36, 850, 889, 1044, 1083], "sound": 36, "termin": 36, "cmd": 36, "cd": 36, "somewher": 36, "disk": [36, 561, 1634], "txt": [36, 1679], "overrid": [36, 849, 888, 965, 1043, 1082, 1121, 1159], "channel": 36, "dep": 36, "voila": 36, "date": [36, 1792], "program": 36, "menu": [36, 1777], "env": 36, "kwarg": [38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 477, 478, 526, 541, 542, 550, 730, 759, 838, 849, 851, 888, 890, 927, 928, 965, 966, 1003, 1004, 1043, 1045, 1082, 1084, 1121, 1122, 1159, 1160, 1198, 1199, 1226, 1228, 1249, 1260, 1262, 1283, 1294, 1296, 1317, 1328, 1329, 1356, 1358, 1379, 1389, 1390, 1417, 1418, 1445, 1446, 1473, 1475, 1496, 1507, 1508, 1535, 1537, 1558, 1569, 1570, 1607, 1611, 1613, 1620, 1623, 1626, 1627, 1630, 1631, 1642, 1653, 1654, 1661, 1664, 1667, 1668, 1669, 1671, 1673, 1676, 1678, 1680, 1682, 1684, 1686, 1687, 1689, 1690, 1716, 1740, 1777], "reactivetransport": [38, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 394], "advect": [38, 327, 811], "iterative_prop": [38, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427], "bctype": [40, 60, 62, 74, 90, 101, 120, 121, 123, 132, 152, 165, 185, 199, 218, 219, 221, 230, 250, 263, 283, 296, 316, 329, 349, 351, 363, 383, 396, 416, 429, 449], "shallow": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 366, 399, 432, 462, 481, 516, 528, 854, 893, 931, 969, 1007, 1048, 1087, 1125, 1163, 1202, 1232, 1266, 1300, 1332, 1362, 1393, 1421, 1449, 1479, 1511, 1541, 1573, 1692, 1704, 1718, 1731, 1749, 1762], "array_lik": [44, 58, 60, 61, 62, 63, 64, 65, 69, 76, 90, 91, 95, 103, 120, 122, 127, 136, 150, 152, 153, 154, 155, 156, 160, 169, 183, 185, 186, 187, 188, 189, 193, 201, 218, 220, 225, 234, 248, 250, 251, 252, 253, 254, 258, 267, 281, 283, 284, 285, 286, 287, 291, 300, 314, 316, 317, 318, 319, 320, 324, 333, 347, 348, 349, 350, 351, 352, 353, 354, 358, 367, 381, 382, 383, 384, 385, 386, 387, 391, 400, 414, 415, 416, 417, 418, 419, 420, 424, 433, 447, 449, 450, 451, 452, 456, 474, 482, 498, 502, 506, 511, 550, 648, 733, 736, 813, 849, 850, 855, 856, 857, 858, 859, 860, 861, 862, 872, 881, 885, 888, 889, 894, 895, 896, 897, 898, 899, 900, 901, 911, 920, 924, 927, 932, 933, 934, 935, 936, 937, 938, 939, 949, 958, 962, 965, 970, 971, 972, 973, 974, 975, 976, 977, 987, 996, 1000, 1003, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1027, 1036, 1040, 1044, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1066, 1075, 1079, 1082, 1083, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1105, 1114, 1118, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1143, 1152, 1156, 1159, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1181, 1190, 1194, 1203, 1219, 1223, 1227, 1233, 1252, 1256, 1261, 1267, 1286, 1290, 1295, 1301, 1320, 1324, 1333, 1349, 1353, 1357, 1363, 1382, 1386, 1394, 1410, 1414, 1422, 1438, 1442, 1450, 1466, 1470, 1474, 1480, 1499, 1503, 1512, 1528, 1532, 1536, 1542, 1561, 1565, 1574, 1590, 1594, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1635, 1636, 1640, 1641, 1642, 1643, 1650, 1653, 1654, 1655, 1656, 1657, 1658], "union": [44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 857, 858, 861, 862, 871, 872, 873, 874, 877, 883, 896, 897, 900, 901, 910, 911, 912, 913, 916, 922, 934, 935, 938, 939, 948, 949, 950, 951, 954, 960, 972, 973, 976, 977, 986, 987, 988, 989, 992, 998, 1010, 1011, 1014, 1015, 1026, 1027, 1028, 1029, 1032, 1038, 1051, 1052, 1055, 1056, 1065, 1066, 1067, 1068, 1071, 1077, 1090, 1091, 1094, 1095, 1104, 1105, 1106, 1107, 1110, 1116, 1128, 1129, 1132, 1133, 1142, 1143, 1144, 1145, 1148, 1154, 1166, 1167, 1170, 1171, 1180, 1181, 1182, 1183, 1186, 1192, 1203, 1210, 1211, 1212, 1215, 1221, 1233, 1242, 1243, 1244, 1247, 1254, 1267, 1276, 1277, 1278, 1281, 1288, 1301, 1310, 1311, 1312, 1315, 1322, 1333, 1340, 1341, 1342, 1345, 1351, 1363, 1372, 1373, 1374, 1377, 1384, 1394, 1401, 1402, 1403, 1406, 1412, 1422, 1429, 1430, 1431, 1434, 1440, 1450, 1457, 1458, 1459, 1462, 1468, 1480, 1489, 1490, 1491, 1494, 1501, 1512, 1519, 1520, 1521, 1524, 1530, 1542, 1551, 1552, 1553, 1556, 1563, 1574, 1581, 1582, 1583, 1586, 1592, 1626, 1630, 1631, 1776], "exclusive_or": [44, 51, 52, 53, 56, 67, 76, 83, 84, 85, 88, 93, 103, 110, 111, 112, 116, 125, 136, 143, 144, 145, 148, 158, 169, 176, 177, 178, 181, 191, 201, 208, 209, 210, 214, 223, 234, 241, 242, 243, 246, 256, 267, 274, 275, 276, 279, 289, 300, 307, 308, 309, 312, 322, 333, 340, 341, 342, 345, 356, 367, 374, 375, 376, 379, 389, 400, 407, 408, 409, 412, 422, 433, 440, 441, 442, 445, 454, 482, 489, 490, 491, 494, 500, 506, 507, 508, 509, 510, 512, 857, 858, 861, 862, 871, 872, 873, 874, 877, 883, 896, 897, 900, 901, 910, 911, 912, 913, 916, 922, 934, 935, 938, 939, 948, 949, 950, 951, 954, 960, 972, 973, 976, 977, 986, 987, 988, 989, 992, 998, 1010, 1011, 1014, 1015, 1026, 1027, 1028, 1029, 1032, 1038, 1051, 1052, 1055, 1056, 1065, 1066, 1067, 1068, 1071, 1077, 1090, 1091, 1094, 1095, 1104, 1105, 1106, 1107, 1110, 1116, 1128, 1129, 1132, 1133, 1142, 1143, 1144, 1145, 1148, 1154, 1166, 1167, 1170, 1171, 1180, 1181, 1182, 1183, 1186, 1192, 1203, 1210, 1211, 1212, 1215, 1221, 1233, 1242, 1243, 1244, 1247, 1254, 1267, 1276, 1277, 1278, 1281, 1288, 1301, 1310, 1311, 1312, 1315, 1322, 1333, 1340, 1341, 1342, 1345, 1351, 1363, 1372, 1373, 1374, 1377, 1384, 1394, 1401, 1402, 1403, 1406, 1412, 1422, 1429, 1430, 1431, 1434, 1440, 1450, 1457, 1458, 1459, 1462, 1468, 1480, 1489, 1490, 1491, 1494, 1501, 1512, 1519, 1520, 1521, 1524, 1530, 1542, 1551, 1552, 1553, 1556, 1563, 1574, 1581, 1582, 1583, 1586, 1592, 1626, 1630, 1631], "criteria": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 482, 506, 857, 860, 896, 899, 934, 937, 972, 975, 1010, 1013, 1051, 1054, 1090, 1093, 1128, 1131, 1166, 1169, 1203, 1233, 1267, 1301, 1333, 1363, 1394, 1422, 1450, 1480, 1512, 1542, 1574, 1624], "subset": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 459, 478, 482, 506, 542, 851, 857, 890, 896, 928, 934, 966, 972, 1004, 1010, 1045, 1051, 1084, 1090, 1122, 1128, 1160, 1166, 1199, 1203, 1228, 1233, 1262, 1267, 1296, 1301, 1329, 1333, 1358, 1363, 1390, 1394, 1418, 1422, 1446, 1450, 1475, 1480, 1508, 1512, 1537, 1542, 1570, 1574], "requrest": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 866, 905, 943, 981, 1021, 1060, 1099, 1137, 1175, 1206, 1237, 1271, 1305, 1336, 1367, 1397, 1425, 1453, 1484, 1515, 1546, 1577], "pore1": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 607, 622, 637, 866, 905, 943, 981, 1021, 1060, 1099, 1137, 1175, 1206, 1237, 1271, 1305, 1336, 1367, 1397, 1425, 1453, 1484, 1515, 1546, 1577], "pore2": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 607, 622, 637, 866, 905, 943, 981, 1021, 1060, 1099, 1137, 1175, 1206, 1237, 1271, 1305, 1336, 1367, 1397, 1425, 1453, 1484, 1515, 1546, 1577], "addition": [51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 489, 507, 569, 871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180, 1210, 1242, 1276, 1310, 1340, 1372, 1401, 1429, 1457, 1489, 1519, 1551, 1581], "whose": [51, 56, 67, 83, 88, 93, 110, 116, 125, 143, 148, 158, 176, 181, 191, 208, 214, 223, 241, 246, 256, 274, 279, 289, 307, 312, 322, 340, 345, 356, 374, 379, 389, 407, 412, 422, 440, 445, 454, 489, 494, 500, 507, 510, 512, 570, 574, 740, 859, 861, 862, 871, 872, 877, 883, 898, 900, 901, 910, 911, 916, 922, 936, 938, 939, 948, 949, 954, 960, 974, 976, 977, 986, 987, 992, 998, 1003, 1012, 1014, 1015, 1016, 1017, 1026, 1027, 1032, 1038, 1053, 1055, 1056, 1065, 1066, 1071, 1077, 1092, 1094, 1095, 1104, 1105, 1110, 1116, 1130, 1132, 1133, 1142, 1143, 1148, 1154, 1168, 1170, 1171, 1180, 1181, 1186, 1192, 1210, 1215, 1221, 1242, 1247, 1254, 1276, 1281, 1288, 1310, 1315, 1322, 1340, 1345, 1351, 1372, 1377, 1384, 1401, 1406, 1412, 1429, 1434, 1440, 1457, 1462, 1468, 1489, 1494, 1501, 1519, 1524, 1530, 1551, 1556, 1563, 1581, 1586, 1592, 1626, 1630, 1631, 1640, 1642, 1651, 1665], "sought": [51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 489, 507, 799, 859, 860, 861, 862, 871, 898, 899, 900, 901, 910, 936, 937, 938, 939, 948, 974, 975, 976, 977, 986, 1012, 1013, 1014, 1015, 1016, 1017, 1026, 1053, 1054, 1055, 1056, 1065, 1092, 1093, 1094, 1095, 1104, 1130, 1131, 1132, 1133, 1142, 1168, 1169, 1170, 1171, 1180, 1210, 1242, 1276, 1310, 1340, 1372, 1401, 1429, 1457, 1489, 1519, 1551, 1581, 1626, 1630, 1631, 1632], "num_throat": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 490, 508, 855, 856, 873, 894, 895, 912, 932, 933, 950, 970, 971, 988, 1008, 1009, 1028, 1049, 1050, 1067, 1088, 1089, 1106, 1126, 1127, 1144, 1164, 1165, 1182, 1211, 1243, 1277, 1311, 1341, 1373, 1402, 1430, 1458, 1490, 1520, 1552, 1582], "num_por": [53, 85, 112, 145, 178, 210, 243, 276, 309, 342, 376, 409, 442, 478, 491, 509, 542, 851, 874, 890, 913, 928, 951, 966, 989, 1004, 1029, 1045, 1068, 1084, 1107, 1122, 1145, 1160, 1183, 1199, 1212, 1228, 1244, 1262, 1278, 1296, 1312, 1329, 1342, 1358, 1374, 1390, 1403, 1418, 1431, 1446, 1459, 1475, 1491, 1508, 1521, 1537, 1553, 1570, 1583], "keyerror": [54, 55, 86, 87, 114, 115, 146, 147, 179, 180, 212, 213, 244, 245, 277, 278, 310, 311, 343, 344, 377, 378, 410, 411, 443, 444, 469, 470, 492, 493, 521, 522, 536, 537, 875, 876, 914, 915, 952, 953, 990, 991, 1030, 1031, 1069, 1070, 1108, 1109, 1146, 1147, 1184, 1185, 1213, 1214, 1245, 1246, 1279, 1280, 1313, 1314, 1343, 1344, 1375, 1376, 1404, 1405, 1432, 1433, 1460, 1461, 1492, 1493, 1522, 1523, 1554, 1555, 1584, 1585, 1697, 1698, 1709, 1710, 1723, 1724, 1771, 1772, 1789, 1790], "lifo": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 470, 493, 522, 537, 876, 915, 953, 991, 1031, 1070, 1109, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585, 1698, 1710, 1724, 1790], "indici": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 494, 510, 877, 916, 954, 992, 1017, 1032, 1071, 1110, 1148, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586], "wildcard": [56, 67, 88, 93, 116, 125, 148, 158, 181, 191, 214, 223, 246, 256, 279, 289, 312, 322, 345, 356, 379, 389, 412, 422, 445, 454, 494, 500, 510, 512, 877, 883, 916, 922, 954, 960, 992, 998, 1032, 1038, 1071, 1077, 1110, 1116, 1148, 1154, 1186, 1192, 1215, 1221, 1247, 1254, 1281, 1288, 1315, 1322, 1345, 1351, 1377, 1384, 1406, 1412, 1434, 1440, 1462, 1468, 1494, 1501, 1524, 1530, 1556, 1563, 1586, 1592], "compound": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 494, 510, 786, 877, 916, 954, 992, 1032, 1071, 1110, 1148, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586], "opt": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 494, 510, 877, 916, 954, 992, 1032, 1071, 1110, 1148, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586], "verbos": [59, 151, 184, 249, 282, 315, 448, 549, 1807, 1808], "solutioncontain": [59, 151, 184, 249, 282, 315, 448], "bcvalu": [60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449], "wrapper": [60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 547, 759, 829, 830, 1260, 1294, 1597], "remvo": [60, 90, 120, 121, 123, 152, 185, 218, 219, 221, 250, 283, 316, 349, 383, 416, 449], "remaind": [61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 498, 511, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590], "intact": [61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 498, 511, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590], "outflow": [62, 351], "set_bc": [62, 63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 351, 352, 354, 385, 387, 418, 420, 451, 452], "conditon": [63, 65, 154, 156, 187, 189, 252, 254, 285, 287, 318, 320, 352, 354, 385, 387, 418, 420, 451, 452], "dirichlet": [65, 156, 189, 254, 287, 320, 354, 387, 420, 452], "omit": [67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 500, 512, 855, 856, 883, 894, 895, 922, 932, 933, 960, 970, 971, 998, 1008, 1009, 1038, 1049, 1050, 1077, 1088, 1089, 1116, 1126, 1127, 1154, 1164, 1165, 1192, 1221, 1254, 1288, 1322, 1351, 1384, 1412, 1440, 1468, 1501, 1530, 1563, 1592], "inidic": [67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 500, 512, 883, 922, 960, 998, 1038, 1077, 1116, 1154, 1192, 1221, 1254, 1288, 1322, 1351, 1384, 1412, 1440, 1468, 1501, 1530, 1563, 1592], "foundat": 72, "themselv": [99, 759, 861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170], "pressu": 119, "defend": [123, 221], "void": [130, 1003], "confin": 130, "simualt": 130, "oppos": 130, "n_": 130, "lineartransport": [163, 228, 294], "fourierconduct": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "speed": 196, "upon": [196, 478, 479, 542, 543, 851, 852, 890, 891, 928, 929, 966, 967, 1004, 1005, 1045, 1046, 1084, 1085, 1122, 1123, 1160, 1161, 1199, 1200, 1228, 1229, 1262, 1263, 1296, 1297, 1329, 1330, 1358, 1359, 1390, 1391, 1418, 1419, 1446, 1447, 1475, 1476, 1508, 1509, 1537, 1538, 1570, 1571], "effici": 196, "masson": 197, "ninf": 197, "alg": 197, "1016": 197, "cageo": 197, "003": 197, "ionic": 228, "role": 228, "ohmicconduct": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "phenomena": 261, "signifi": [348, 382, 415], "instanti": [348, 382, 415, 459, 1740, 1777], "intermedi": [348, 382, 415, 550], "transientsolut": [348, 382, 415, 550], "transientfickiandiffus": [362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "transientreactivetransport": [395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "subdomain": 459, "geomeri": 459, "boss": 459, "geom1": 459, "mixin": [459, 477, 505], "obj": [478, 479, 542, 543, 851, 852, 890, 891, 928, 929, 966, 967, 1004, 1005, 1045, 1046, 1084, 1085, 1122, 1123, 1160, 1161, 1199, 1200, 1228, 1229, 1259, 1262, 1263, 1293, 1296, 1297, 1327, 1329, 1330, 1358, 1359, 1390, 1391, 1418, 1419, 1446, 1447, 1475, 1476, 1506, 1508, 1509, 1537, 1538, 1568, 1570, 1571, 1740, 1742, 1743, 1796, 1807, 1808], "immedi": [478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "discard": [478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "exclud": [496, 544, 879, 918, 956, 994, 1034, 1073, 1112, 1150, 1188, 1217, 1249, 1283, 1317, 1347, 1379, 1408, 1436, 1464, 1496, 1526, 1558, 1588, 1683], "domain1": [497, 545, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589], "labelmixin": [506, 507, 508, 509, 510, 511, 512], "hold": [513, 558, 1743], "modelwrapp": [514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525], "modelsmixin": 526, "dependency_list": [526, 529, 531], "modelsdict": [527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540], "intra": 529, "inter": 529, "unresolv": 530, "shell": [531, 1658], "decent": 531, "map": [531, 555, 759, 1679, 1702], "drawn": 531, "frame": 531, "modelsmixin2": [542, 543, 544, 545], "brief": [548, 549, 1608, 1702, 1758, 1759, 1780], "atol": [549, 1605], "rtol": [549, 1605, 1642, 1804], "linsolv": 549, "scipyrk45": 550, "od": 550, "dy": 550, "dt": [550, 669], "timespan": 550, "ex": 550, "t_i": 550, "jgf": [553, 561], "onto": 553, "voxel_s": 554, "3dma": 554, "rock": 554, "np2th": 554, "th2np": 554, "resolut": 554, "eac": 554, "dimens": [554, 965, 1003, 1159, 1616, 1621, 1634, 1642, 1653], "rocknam": 554, "th2pn": 554, "human": [554, 567], "brent": 554, "lindquist": 554, "medial": 554, "thin": 554, "skeleton": 554, "lee": [554, 800], "oh": 554, "venkatarangan": 554, "shin": 554, "prodanov": 554, "autom": 554, "microtomographi": 554, "suni": 554, "stoni": 554, "brook": 554, "2005": [554, 801], "undirect": [555, 562, 1620, 1659, 1662], "gap": 555, "pore_": 555, "prepend": [555, 569], "central": [555, 656, 706, 741, 1642], "1x3": 555, "adj": 555, "throat_": 555, "embed": 555, "pergeo": 556, "avizo": 556, "pickl": [557, 1809], "dat": 558, "_node1": 558, "statoil": [558, 826, 1616], "maxim": 558, "ball": 558, "imperi": 558, "colleg": 558, "london": 558, "dataset": 558, "download": 558, "websit": 558, "header": 558, "theses": 558, "document": [558, 1665, 1670, 1672, 1679, 1683, 1685], "rectangular": [559, 676, 693, 696, 711, 720], "circular": [559, 658, 693, 695, 826, 965, 1634, 1642, 1657], "comsol": 559, "mesh": [559, 566], "delim": [563, 569, 571], "explicit": 565, "salom": 565, "maxsiz": [566, 1734, 1752], "auto": [566, 1809], "fileformat": 566, "stl": 566, "logger_level": 566, "holder": [566, 573], "maximum": [566, 651, 653, 699, 702, 727, 728, 828, 860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169, 1620, 1648], "finner": 566, "slower": 566, "gmsh": 566, "fluent": 566, "ngsolv": 566, "logger": 566, "netgen": 566, "triangl": [566, 670, 855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164], "tessel": [566, 813, 965, 1003, 1159, 1634, 1662], "cad": 566, "slow": [566, 759, 861, 900, 938, 976, 1014, 1016, 1017, 1055, 1094, 1132, 1170, 1626, 1630, 1631], "hdf5": [567, 570], "flag": [567, 861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170, 1739, 1757], "csv": 568, "categorize_bi": 569, "organ": 569, "net_01": 569, "hierarch": 569, "shorter": 571, "pvsm": 572, "fill_nan": 573, "fill_inf": 573, "vtk": 573, "rectangl": [578, 583, 584, 597, 602, 608, 609, 611, 616, 623, 624, 626, 631, 638, 639, 680, 685, 691, 692, 1003], "ideal_ga": 587, "0134": 587, "vdm": [587, 769], "gas_mixture_fesg": 587, "00422791": 587, "89606e": 587, "56383e": 587, "82082e": 587, "51815e": 587, "48553e": 587, "11409e": 587, "14280": 590, "47004": 590, "56254": 590, "00028": 590, "98691": 590, "0170967": 590, "3862e": 590, "00355837": 590, "00131e": 590, "23684e": 590, "1684e": 590, "generic_diffus": [593, 594], "generic_electr": 594, "generic_therm": 594, "symmetri": [597, 602, 605, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 631, 634, 638, 639, 641, 645, 835, 836], "cone": [598, 600, 603, 612, 614, 617, 627, 629, 632, 681, 683, 686], "throat_coord": [600, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 629, 630, 631, 632, 633, 634, 683, 684, 685, 686, 687, 688], "centroid": [600, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 629, 630, 631, 633, 634, 672, 678, 683, 685, 686, 687, 688, 1639, 1650], "pyramid": [601, 604, 606, 615, 618, 621, 630, 633, 636, 684, 687, 689], "trapezoid": [602, 605, 609, 616, 619, 624, 631, 634, 639, 685, 688, 692], "pore_coord": [603, 604, 605, 686, 687, 688], "pore_aspect": [613, 623, 628, 638], "throat_aspect": [613, 623, 628, 638], "aspect": [613, 623, 628, 638, 669, 1797], "divis": [620, 635, 828], "size_factor": [622, 637, 816, 817, 818, 819, 821, 822, 824, 825, 846, 847], "s_": [622, 637, 833, 835, 836, 837, 839, 840, 841, 842, 843, 844], "ndarri": [644, 648, 660, 1627], "spatailli": [646, 648], "sent": [647, 655, 705, 736, 738, 858, 862, 897, 901, 935, 939, 973, 977, 1011, 1015, 1052, 1056, 1091, 1095, 1129, 1133, 1167, 1171], "strel": 648, "strength": 648, "extent": 648, "achiev": 648, "geoemtri": 648, "appproach": 648, "anistrop": 648, "ga": [648, 762, 768, 769, 775, 792, 793, 803, 804, 805, 813, 1260], "fuel": 648, "electrod": [648, 835, 836], "fibrou": [648, 813], "polym": 648, "electrolyt": [648, 835, 836], "membran": 648, "v173": 648, "pp277": 648, "pore_shap": 650, "adopt": [651, 699, 702, 727, 728], "func": [652, 654, 656, 703, 704, 706, 729, 730, 734, 741, 1665], "rv_frozen": [652, 703, 729], "stat": [652, 654, 656, 703, 704, 706, 729, 734, 741], "eed": [652, 654, 656, 703, 704, 706, 729, 734, 741], "frozen": [652, 703, 729], "stats_obj": [652, 703, 729], "0001": [652, 654, 656, 703, 704, 706, 729, 734, 741, 838], "fixed_diamet": 653, "touch": [653, 828], "encompass": 653, "closer": 653, "zeno": 653, "cut": 653, "stddev": [654, 704, 734], "deviat": [654, 704, 734], "inner": [654, 656, 704, 706, 734, 741, 1657, 1658], "width": [656, 706, 741], "skew": [656, 706, 741], "ndndarrai": [656, 706, 741], "throat_cross_sectional_area": [658, 659, 660, 661], "surface_area": [660, 709], "crude": 660, "curvatur": [660, 813], "throat_perimet": [669, 670, 710], "perimet": [669, 670, 694, 695, 696, 710, 1652], "throat_area": [669, 670, 701, 717, 819, 826], "indiamet": 669, "jenkin": 669, "rao": 669, "elipt": 669, "pt": 669, "ellipt": [669, 828], "powder": 669, "technologi": 669, "pp": [669, 670], "1984": 669, "mason": [670, 813, 829], "morrow": [670, 813, 829], "mortensen": 670, "liquid": [670, 758, 763, 764, 770, 789, 794, 795, 796, 799, 800, 807, 1294], "irregular": 670, "colloid": [670, 813, 826], "interfac": [670, 813, 826, 833], "1991": 670, "throat_centroid": 678, "endpoint": 678, "ignore_nan": [699, 702, 727, 728], "throat_shap": 701, "cirlc": 701, "sqaur": 701, "unit_vec": 713, "impicit": 713, "1st": 713, "assu": [714, 715, 716, 720], "reprsent": [715, 716, 717, 720], "abnorm": [717, 1650], "hemispher": 718, "cap": [718, 1226], "placehold": 722, "xmax": [723, 735, 828], "xmin": [723, 735, 828], "useless": 724, "denomin": 726, "keyward": 730, "thermofluid": [732, 736], "corel": 732, "bin_cent": 733, "bin_height": 733, "skip": 736, "nth": 736, "thresh": [747, 752], "coincid": [747, 752], "furthest": 748, "closest": 749, "occurr": [751, 1732, 1737, 1750, 1755], "letsou_stiel": 759, "default_argmap": 759, "cvm": 759, "mixtur": [759, 763, 769, 781, 788, 792, 794, 803, 806, 807, 1226, 1227, 1230, 1236, 1238, 1250, 1259, 1260, 1261, 1264, 1270, 1272, 1284, 1293, 1294, 1295, 1298, 1304, 1306, 1318, 1327, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1417, 1445, 1473, 1474, 1477, 1483, 1485, 1497, 1506, 1507, 1535, 1536, 1539, 1545, 1547, 1559, 1568, 1801, 1802], "3e": 759, "9e": 759, "trail": 759, "iterpret": 759, "ie": 759, "mix": [759, 763, 781, 806, 826], "agre": [759, 835, 836], "corrospod": [763, 764], "costald": [763, 764], "kg": [763, 765, 766, 784, 788, 790, 797, 801, 808], "m3": [763, 765, 770, 788], "mw_": 763, "mw_i": 763, "costald_mixtur": 763, "typic": [763, 833, 1777], "accentr": [764, 775, 793, 795, 800, 807], "dimensionless": [764, 775, 793, 795, 800, 807], "ndrrai": 765, "seawat": [766, 790, 797, 801, 808], "atmospher": [766, 790, 797, 808], "eq": [766, 790, 808, 835, 836], "boil": [766, 770, 789, 790, 793, 795, 796, 797, 808], "salt": [766, 784, 790, 797, 801, 808], "ppt": [766, 790, 797, 801, 808], "thousand": [766, 790, 797, 801, 808], "453": [766, 797, 808], "accuraci": [766, 790, 797, 801, 808], "pct": 766, "lienhard": [766, 790, 801, 808], "zubair": [766, 790, 801, 808], "desalin": [766, 790, 797, 801, 808], "treatment": [766, 790, 801, 808], "2010": [766, 790, 801, 808], "chapman": 768, "enskog": 768, "molar_diffusion_volum": 769, "fuller": 769, "dij": 769, "gid": 769, "chromatogr": 769, "1965": 769, "schettler": 769, "ind": [769, 1622, 1624, 1626, 1627, 1630, 1631], "eng": 769, "chem": 769, "1966": 769, "enslei": 769, "3679": 769, "1969": 769, "vms_at_tb": 770, "sigmas_at_tb": 770, "tyn": 770, "calu": 770, "dilut": 770, "principl": 770, "kinemat": 770, "cp": [772, 774], "linearli": [772, 774], "trc_gas_data": 773, "capac": 775, "weighted_averag": 777, "logarithm": [781, 806, 1238, 1272, 1306, 1368, 1485, 1547], "rule": [781, 806, 1801, 1802], "ln": [781, 806, 842, 1238, 1272, 1306, 1368, 1485, 1547], "z_i": [781, 806, 1238, 1272, 1306, 1368, 1485, 1547], "expon": [781, 806, 833, 835, 836, 844, 1238, 1272, 1306, 1368, 1485, 1547], "guarante": 782, "conc": 784, "nacl": 784, "henri": 786, "gaseou": 786, "dissolv": 786, "kpx": 786, "atm": 786, "yaw": 786, "carl": 786, "solubl": 786, "sulfur": 786, "tradit": 786, "2003": 786, "liqiud": 788, "vapor": [788, 789, 799, 800, 801], "winterfeld": 788, "scriven": 788, "davi": 788, "brock": 789, "bird": 789, "313": 790, "percent": [790, 797, 801, 808], "wassiljew": 792, "hern": [792, 803], "zipper": [792, 803], "thermal": [793, 794, 795, 796, 797, 846, 847], "conductivti": 793, "gharagheizi": [793, 795, 804], "1002": [793, 795], "aic": [793, 795], "13938": [793, 795], "dippr9h": 794, "sato": 796, "jamieson": 797, "tudhop": 797, "393": 797, "1970": 797, "antoin": 799, "rpp": 799, "kesler": 800, "raoult": 801, "473": 801, "ashra": 801, "handbook": 801, "fundament": 801, "letsou": 807, "pore_pressur": [811, 819], "throat_hydraulic_conduct": [811, 819], "throat_diffusive_conduct": 811, "discret": [811, 1642], "diffuvs": 811, "impos": 811, "conduit_shape_factor": 811, "shape_factor": [811, 826], "r_toroid": [813, 829, 830], "toroid": [813, 828, 829, 830], "converg": [813, 829], "diverg": [813, 829], "advanc": [813, 829, 830], "meniscu": [813, 828, 829], "apex": [813, 829], "context": [813, 829], "sci": [813, 826], "1994": 813, "pemfc": 813, "voronoi": [813, 965, 1003, 1016, 1017, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1662], "electrochem": [813, 835, 836], "soc": 813, "f731": 813, "2013": 813, "pore_diffus": [816, 817, 818, 819], "throat_diffus": [816, 817, 818, 819], "pore_temperatur": 817, "throat_temperatur": 817, "knudsen": 817, "molecular_weigth": 817, "pore_area": [819, 826], "taylor": 819, "ari": 819, "pore_conduct": [821, 822, 846, 847], "dict_blurb": [822, 828], "return_arr": 822, "pore_viscos": [824, 825, 826], "throat_viscos": [824, 825, 826], "pore_shape_factor": 826, "throat_shape_factor": 826, "conduit_length": 826, "adapt": 826, "a_p": 826, "r_p": 826, "sf_p": 826, "theorat": 826, "p_p": 826, "4\u03c0": 826, "t_a": 826, "sf_t": 826, "t_p": 826, "valvatn": 826, "martin": 826, "blunt": 826, "2004": [826, 835, 836], "patzek": 826, "silin": 826, "2001": 826, "noncircular": 826, "creep": 826, "304": 826, "profile_equ": 828, "target_pc": [828, 829, 830], "num_point": [828, 829, 830, 1634], "throat_scale_a": 828, "scale_a": 828, "throat_scale_b": 828, "scale_b": 828, "touch_length": [828, 829, 830], "sinusoid": 828, "send": [828, 1633], "men": 828, "profil": [828, 829, 830], "assess": 828, "minima": 828, "maxima": 828, "perpendicular": 828, "protrud": 828, "therfor": 828, "po": 828, "xpo": 828, "rx": 828, "fa": 828, "fb": 828, "throatrad": 828, "fill_angl": 828, "alpha_min": 828, "alpha_max": 828, "c2x": 828, "gamma": [828, 835, 836], "cap_angl": 828, "rad_curv": 828, "men_data": 828, "men_max": 828, "toru": 829, "quarter": 830, "wavelength": 830, "amplitud": 830, "arctan": 830, "forner": 830, "cuenca": 830, "pefc": 830, "wettabl": 830, "ec": 830, "f1038": 830, "f1048": 830, "throat_occup": 832, "pore_occup": 832, "strict": 832, "agress": 832, "unoccupi": [832, 1655, 1661], "loos": 832, "pc_star": 833, "swp_star": 833, "eta": 833, "residu": 833, "i0_ref": [835, 836], "c_ref": [835, 836], "reaction_area": [835, 836], "solid_voltag": [835, 836], "electrolyte_voltag": [835, 836], "open_circuit_voltag": [835, 836], "butler": [835, 836], "volmer": [835, 836], "redox": [835, 836], "promot": [835, 836], "cathod": [835, 836], "theoret": [835, 836], "justif": [835, 836], "voltag": [835, 836], "equilibrium": [835, 836], "butler_volmer_voltag": 835, "former": [835, 836, 1740], "shouldn": [835, 836], "faradai": [835, 836], "book": [835, 836], "cite": [835, 836], "i_": [835, 836], "0ref": [835, 836], "rxn": [835, 836], "rt": [835, 836], "eta_": [835, 836], "phi_": [835, 836], "met": [835, 836], "u_": [835, 836], "electrostat": [835, 836], "consentr": [835, 836], "john": [835, 836], "newman": [835, 836], "karen": [835, 836], "thoma": [835, 836], "alyea": [835, 836], "wilei": [835, 836], "son": [835, 836], "chapter8": [835, 836], "electrolyte_concentr": 836, "rate_info": [836, 844], "butler_volmer_conc": 836, "a5": [837, 840, 841, 842], "a6": [837, 840], "eqn": 838, "sympi": 838, "evalu": [838, 1230, 1264, 1298, 1360, 1477, 1539], "sympifi": 838, "live": 838, "IF": 838, "referenc": 838, "st": 838, "arg_map": 838, "log_": 840, "pore_thermal_conduct": 847, "throat_thermal_conduct": 847, "identif": [849, 888, 965, 1043, 1082, 1121, 1159, 1656], "belon": [849, 1082], "corner_sit": [849, 1082], "body_sit": 849, "incid": [849, 856, 867, 888, 895, 906, 927, 933, 944, 965, 971, 982, 1003, 1009, 1022, 1043, 1050, 1061, 1082, 1089, 1100, 1121, 1127, 1138, 1159, 1165, 1176], "mirror": [855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164], "wise": [855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "slice": [855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "algebra": [855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "routin": [855, 856, 865, 867, 894, 895, 904, 906, 932, 933, 942, 944, 970, 971, 980, 982, 1008, 1009, 1020, 1022, 1049, 1050, 1059, 1061, 1088, 1089, 1098, 1100, 1126, 1127, 1136, 1138, 1164, 1165, 1174, 1176], "sparse_arrai": [856, 895, 933, 971, 1009, 1050, 1089, 1127, 1165], "cousin": [856, 895, 933, 971, 1009, 1050, 1089, 1127, 1165], "1d": [858, 861, 862, 872, 897, 900, 901, 911, 935, 938, 939, 949, 973, 976, 977, 987, 1011, 1014, 1015, 1027, 1052, 1055, 1056, 1066, 1091, 1094, 1095, 1105, 1129, 1132, 1133, 1143, 1167, 1170, 1171, 1181, 1621], "arra": [858, 897, 935, 973, 1011, 1052, 1091, 1129, 1167], "minu": [858, 861, 862, 872, 897, 900, 901, 911, 935, 938, 939, 949, 973, 976, 977, 987, 1011, 1014, 1015, 1027, 1052, 1055, 1056, 1066, 1091, 1094, 1095, 1105, 1129, 1132, 1133, 1143, 1167, 1170, 1171, 1181, 1626, 1630, 1631], "isnan": [859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "include_input": [860, 861, 899, 900, 937, 938, 975, 976, 1013, 1014, 1054, 1055, 1093, 1094, 1131, 1132, 1169, 1170, 1631], "radial": [860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "toplog": [860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "whom": [860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "nearbi": [860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "compress": [861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170, 1626, 1630, 1631], "unflatten": [861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170, 1626, 1630, 1631], "global": [861, 862, 900, 901, 938, 939, 976, 977, 1014, 1015, 1055, 1056, 1094, 1095, 1132, 1133, 1170, 1171, 1630, 1631], "bond": [862, 901, 939, 977, 1015, 1056, 1095, 1133, 1171, 1617, 1625, 1626, 1629, 1643, 1655, 1661], "sp": [865, 904, 942, 980, 1020, 1059, 1098, 1136, 1174], "uncertain": [872, 911, 949, 987, 1027, 1066, 1105, 1143, 1181], "accur": 888, "reduce_coordin": 888, "permit": 888, "disconnect": [888, 1661, 1797], "kept": 927, "cubictempl": [928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964], "height": [965, 1634, 1642, 1657], "gabriel": 965, "outsid": [965, 1633, 1642], "excess": [1003, 1634], "outer": [1003, 1652, 1657, 1658], "li": 1003, "vertic": 1003, "simultan": 1003, "tri": [1003, 1659], "delanuai": 1003, "subnetwork": 1003, "vor": [1003, 1662], "convex": [1016, 1639], "hull": [1016, 1639], "metod": 1016, "facet": 1017, "ridg": 1017, "face_sit": 1082, "head": [1121, 1801, 1802], "num_neighbor": 1121, "construct": 1121, "preset": [1198, 1328, 1569], "lennard": 1226, "jone": 1226, "binaryga": [1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259], "healthdict": [1230, 1264, 1298, 1360, 1477, 1539, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1796], "uniti": [1230, 1264, 1298, 1360, 1477, 1539], "healthi": [1230, 1264, 1298, 1360, 1477, 1539, 1690, 1796], "weigth": [1238, 1272, 1306, 1368, 1485, 1547], "getter": [1259, 1293, 1327, 1506, 1568], "multicompon": 1356, "genericnetwork": 1417, "tabul": 1417, "contant": 1417, "gas_mix": 1473, "liq_mix": 1535, "standardliquidmixtur": [1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568], "basesolv": 1599, "directsolv": 1601, "tol": [1602, 1604, 1608, 1610, 1648], "iterativesolv": 1603, "petsc": [1604, 1605], "parallel": 1604, "partit": 1604, "mpirun": 1604, "num_cor": 1604, "petsclinearsolv": 1605, "solver_typ": 1605, "cg": [1605, 1610], "precondion": 1605, "jacobi": 1605, "vec": 1605, "destroi": 1605, "csr_matrix": 1605, "conjug": 1605, "precondition": 1605, "precondit": 1605, "factorization_typ": 1605, "lu": 1605, "pypardiso": 1606, "pardisospsolv": 1607, "pyamgrugestubensolv": 1609, "scipycg": 1611, "scipyspsolv": 1613, "move_to": 1615, "apply_label": 1615, "clone_por": 1615, "translat": [1615, 1656], "cl": 1616, "reservoir": 1616, "occupied_bond": [1617, 1661], "acccord": [1617, 1655], "parent": 1618, "sibl": 1618, "pores1": 1619, "pores2": 1619, "consecut": [1619, 1650], "member": [1619, 1765, 1772], "batch": 1619, "force_triu": 1620, "drop_diag": 1620, "drop_dup": 1620, "drop_neg": 1620, "dim": 1621, "headless": [1622, 1797], "dropped_edg": 1622, "render": 1622, "invalid": [1622, 1666, 1688], "p_label": 1625, "t_label": 1625, "inds_1": 1628, "inds_2": 1628, "somtim": [1630, 1631], "gind": 1631, "pore_pair": 1632, "shortest": 1632, "node_path": 1632, "edge_path": 1632, "dijkstra": 1632, "triangul": [1633, 1659], "top_surfac": 1633, "sufac": 1633, "fail": [1633, 1743], "domain_s": [1634, 1652], "rectilinear": 1634, "smooth": 1634, "cart2sph": 1634, "cart2cyl": 1634, "enclos": [1639, 1668], "xyz": 1639, "pores_bc": 1640, "coplanar": 1641, "upward": 1642, "threshold": 1642, "find_surface_por": 1648, "donor": [1649, 1656], "preferr": 1650, "continu": 1650, "find_nearby_por": 1650, "relect": 1652, "relfect": 1652, "across": 1652, "transform": [1653, 1654], "copi": [1653, 1654, 1779, 1781], "shear_coord": 1653, "shear": 1654, "ai": 1654, "az": 1654, "bx": 1654, "bz": 1654, "cx": 1654, "cy": 1654, "rotate_coord": 1654, "aj": 1654, "occupied_sit": [1655, 1661], "p_network": 1656, "p_donor": 1656, "len_max": 1656, "label_suffix": 1656, "label_stitch": 1656, "recipi": 1656, "defaul": 1656, "recipienet": 1656, "disc": 1657, "annulu": 1657, "demarc": [1657, 1658], "unweight": [1659, 1662], "b_label": 1661, "s_label": 1661, "bond_percol": 1661, "site_percol": 1661, "docor": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689], "shall": [1665, 1670, 1672, 1675, 1677, 1681, 1683, 1685], "dedent": [1665, 1683, 1685, 1688], "with_ind": 1665, "indent": [1665, 1688], "stacklevel": [1666, 1688], "safe_modul": [1666, 1688], "encount": [1666, 1688], "deprec": [1667, 1669, 1671, 1673, 1676, 1678, 1680, 1682, 1684, 1686, 1687, 1689], "base_kei": [1668, 1670, 1672, 1683, 1685], "no_arg": 1668, "no_kwarg": 1668, "no_args_kwarg": 1668, "similarili": 1668, "classmethod": 1669, "docrep": [1669, 1671, 1673, 1683, 1684, 1685, 1686], "delete_kwarg": [1669, 1679], "no_": 1670, "original_kei": [1670, 1683], "no_param1": 1670, "param2": [1670, 1683], "keep_param": [1670, 1679, 1684, 1685], "delete_typ": [1670, 1673, 1679, 1685], "delete_param": [1671, 1672, 1679, 1683], "out_kei": [1672, 1685], "keep_typ": [1672, 1679, 1683, 1686], "get_sect": [1674, 1680, 1683, 1685], "descriptor": 1674, "summary_ext": 1675, "get_extended_summari": [1676, 1677], "get_summari": [1677, 1682], "full_desc": 1677, "get_full_descript": 1678, "exctract": 1679, "guidelin": 1679, "param_like_sect": 1679, "text_sect": 1679, "split": 1679, "newlin": [1679, 1681], "napoleon": 1679, "blob": 1679, "master": 1679, "howto_docu": 1679, "rst": 1679, "save_docstr": 1679, "basicli": 1681, "param1": 1683, "reus": [1683, 1685], "docstringprocessor": [1683, 1685], "do_someth": [1683, 1685], "That": [1683, 1685], "doc_kei": [1683, 1685], "do_less": [1683, 1685], "my": [1683, 1685], "__doc__": [1683, 1685], "no_b": 1683, "int_onli": 1685, "no_float": 1685, "get_docstr": 1687, "unhealthi": 1690, "delimit": 1702, "to_dict": 1702, "unravel": 1702, "nesteddict": [1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715], "dct": 1712, "nicer": 1716, "item1": [1716, 1728], "item2": [1716, 1728], "item3": [1716, 1728], "item4": 1716, "printabledict": [1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727], "temp": 1728, "printablelist": [1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739], "sy": [1734, 1752], "valueerror": [1734, 1737, 1752, 1755], "indexerror": [1736, 1754], "IN": [1738, 1756], "ascend": [1739, 1757], "modifi": [1739, 1757], "stabl": [1739, 1757], "moreov": 1740, "original_uuid": 1742, "456": 1743, "simplelist": 1745, "null": 1768, "highest": 1777, "adminstr": 1777, "singleton": 1777, "wherev": 1777, "record": 1777, "gui": 1777, "renam": 1786, "load_workspac": 1786, "saved_fil": [1786, 1791], "networkssaved_fil": [1786, 1791], "pathlib": [1786, 1791], "save_workspac": 1791, "zip": 1792, "archiv": 1792, "load_project": 1792, "deem": 1796, "bidirect": 1797, "offend": 1797, "restor": 1797, "largest": 1797, "struct": [1798, 1810], "wtih": 1798, "input_list": 1799, "hr": [1801, 1802], "__str__": [1801, 1802], "workaround": [1801, 1802], "enhanc": [1801, 1802], "horizont": [1801, 1802], "get_printable_prop": 1801, "get_printable_label": 1802, "runtimewarn": 1803, "decor": 1803, "inevit": 1803, "temporarili": 1803, "myfun": 1803, "33333333": 1803, "input_dict": 1809, "vivifi": 1809}, "objects": {"": [[1811, 0, 0, "-", "openpnm"]], "openpnm": [[37, 0, 0, "-", "algorithms"], [459, 0, 0, "-", "core"], [547, 0, 0, "-", "integrators"], [551, 0, 0, "-", "io"], [575, 0, 0, "-", "models"], [848, 0, 0, "-", "network"], [1197, 0, 0, "-", "phase"], [1597, 0, 0, "-", "solvers"], [1614, 0, 0, "-", "topotools"], [1663, 0, 0, "-", "utils"]], "openpnm.algorithms": [[38, 1, 1, "", "AdvectionDiffusion"], [72, 1, 1, "", "Algorithm"], [98, 1, 1, "", "Drainage"], [130, 1, 1, "", "FickianDiffusion"], [163, 1, 1, "", "FourierConduction"], [196, 1, 1, "", "InvasionPercolation"], [228, 1, 1, "", "OhmicConduction"], [261, 1, 1, "", "ReactiveTransport"], [294, 1, 1, "", "StokesFlow"], [327, 1, 1, "", "TransientAdvectionDiffusion"], [361, 1, 1, "", "TransientFickianDiffusion"], [394, 1, 1, "", "TransientReactiveTransport"], [427, 1, 1, "", "Transport"]], "openpnm.algorithms.AdvectionDiffusion": [[39, 2, 1, "", "clear"], [40, 2, 1, "", "clear_BCs"], [41, 2, 1, "", "clear_rate_BCs"], [42, 2, 1, "", "clear_value_BCs"], [43, 2, 1, "", "copy"], [44, 2, 1, "", "filter_by_label"], [45, 2, 1, "", "fromkeys"], [46, 2, 1, "", "get"], [47, 2, 1, "", "get_conduit_data"], [48, 2, 1, "", "interpolate_data"], [49, 2, 1, "", "items"], [50, 2, 1, "", "keys"], [51, 2, 1, "", "labels"], [52, 2, 1, "", "num_pores"], [53, 2, 1, "", "num_throats"], [54, 2, 1, "", "pop"], [55, 2, 1, "", "popitem"], [56, 2, 1, "", "pores"], [57, 2, 1, "", "props"], [58, 2, 1, "", "rate"], [59, 2, 1, "", "run"], [60, 2, 1, "", "set_BC"], [61, 2, 1, "", "set_label"], [62, 2, 1, "", "set_outflow_BC"], [63, 2, 1, "", "set_rate_BC"], [64, 2, 1, "", "set_source"], [65, 2, 1, "", "set_value_BC"], [66, 2, 1, "", "setdefault"], [67, 2, 1, "", "throats"], [68, 2, 1, "", "to_indices"], [69, 2, 1, "", "to_mask"], [70, 2, 1, "", "update"], [71, 2, 1, "", "values"]], "openpnm.algorithms.Algorithm": [[73, 2, 1, "", "clear"], [74, 2, 1, "", "clear_BCs"], [75, 2, 1, "", "copy"], [76, 2, 1, "", "filter_by_label"], [77, 2, 1, "", "fromkeys"], [78, 2, 1, "", "get"], [79, 2, 1, "", "get_conduit_data"], [80, 2, 1, "", "interpolate_data"], [81, 2, 1, "", "items"], [82, 2, 1, "", "keys"], [83, 2, 1, "", "labels"], [84, 2, 1, "", "num_pores"], [85, 2, 1, "", "num_throats"], [86, 2, 1, "", "pop"], [87, 2, 1, "", "popitem"], [88, 2, 1, "", "pores"], [89, 2, 1, "", "props"], [90, 2, 1, "", "set_BC"], [91, 2, 1, "", "set_label"], [92, 2, 1, "", "setdefault"], [93, 2, 1, "", "throats"], [94, 2, 1, "", "to_indices"], [95, 2, 1, "", "to_mask"], [96, 2, 1, "", "update"], [97, 2, 1, "", "values"]], "openpnm.algorithms.Drainage": [[99, 2, 1, "", "apply_trapping"], [100, 2, 1, "", "clear"], [101, 2, 1, "", "clear_BCs"], [102, 2, 1, "", "copy"], [103, 2, 1, "", "filter_by_label"], [104, 2, 1, "", "fromkeys"], [105, 2, 1, "", "get"], [106, 2, 1, "", "get_conduit_data"], [107, 2, 1, "", "interpolate_data"], [108, 2, 1, "", "items"], [109, 2, 1, "", "keys"], [110, 2, 1, "", "labels"], [111, 2, 1, "", "num_pores"], [112, 2, 1, "", "num_throats"], [113, 2, 1, "", "pc_curve"], [114, 2, 1, "", "pop"], [115, 2, 1, "", "popitem"], [116, 2, 1, "", "pores"], [117, 2, 1, "", "props"], [118, 2, 1, "", "reset"], [119, 2, 1, "", "run"], [120, 2, 1, "", "set_BC"], [121, 2, 1, "", "set_inlet_BC"], [122, 2, 1, "", "set_label"], [123, 2, 1, "", "set_outlet_BC"], [124, 2, 1, "", "setdefault"], [125, 2, 1, "", "throats"], [126, 2, 1, "", "to_indices"], [127, 2, 1, "", "to_mask"], [128, 2, 1, "", "update"], [129, 2, 1, "", "values"]], "openpnm.algorithms.FickianDiffusion": [[131, 2, 1, "", "clear"], [132, 2, 1, "", "clear_BCs"], [133, 2, 1, "", "clear_rate_BCs"], [134, 2, 1, "", "clear_value_BCs"], [135, 2, 1, "", "copy"], [136, 2, 1, "", "filter_by_label"], [137, 2, 1, "", "fromkeys"], [138, 2, 1, "", "get"], [139, 2, 1, "", "get_conduit_data"], [140, 2, 1, "", "interpolate_data"], [141, 2, 1, "", "items"], [142, 2, 1, "", "keys"], [143, 2, 1, "", "labels"], [144, 2, 1, "", "num_pores"], [145, 2, 1, "", "num_throats"], [146, 2, 1, "", "pop"], [147, 2, 1, "", "popitem"], [148, 2, 1, "", "pores"], [149, 2, 1, "", "props"], [150, 2, 1, "", "rate"], [151, 2, 1, "", "run"], [152, 2, 1, "", "set_BC"], [153, 2, 1, "", "set_label"], [154, 2, 1, "", "set_rate_BC"], [155, 2, 1, "", "set_source"], [156, 2, 1, "", "set_value_BC"], [157, 2, 1, "", "setdefault"], [158, 2, 1, "", "throats"], [159, 2, 1, "", "to_indices"], [160, 2, 1, "", "to_mask"], [161, 2, 1, "", "update"], [162, 2, 1, "", "values"]], "openpnm.algorithms.FourierConduction": [[164, 2, 1, "", "clear"], [165, 2, 1, "", "clear_BCs"], [166, 2, 1, "", "clear_rate_BCs"], [167, 2, 1, "", "clear_value_BCs"], [168, 2, 1, "", "copy"], [169, 2, 1, "", "filter_by_label"], [170, 2, 1, "", "fromkeys"], [171, 2, 1, "", "get"], [172, 2, 1, "", "get_conduit_data"], [173, 2, 1, "", "interpolate_data"], [174, 2, 1, "", "items"], [175, 2, 1, "", "keys"], [176, 2, 1, "", "labels"], [177, 2, 1, "", "num_pores"], [178, 2, 1, "", "num_throats"], [179, 2, 1, "", "pop"], [180, 2, 1, "", "popitem"], [181, 2, 1, "", "pores"], [182, 2, 1, "", "props"], [183, 2, 1, "", "rate"], [184, 2, 1, "", "run"], [185, 2, 1, "", "set_BC"], [186, 2, 1, "", "set_label"], [187, 2, 1, "", "set_rate_BC"], [188, 2, 1, "", "set_source"], [189, 2, 1, "", "set_value_BC"], [190, 2, 1, "", "setdefault"], [191, 2, 1, "", "throats"], [192, 2, 1, "", "to_indices"], [193, 2, 1, "", "to_mask"], [194, 2, 1, "", "update"], [195, 2, 1, "", "values"]], "openpnm.algorithms.InvasionPercolation": [[197, 2, 1, "", "apply_trapping"], [198, 2, 1, "", "clear"], [199, 2, 1, "", "clear_BCs"], [200, 2, 1, "", "copy"], [201, 2, 1, "", "filter_by_label"], [202, 2, 1, "", "fromkeys"], [203, 2, 1, "", "get"], [204, 2, 1, "", "get_conduit_data"], [205, 2, 1, "", "interpolate_data"], [206, 2, 1, "", "items"], [207, 2, 1, "", "keys"], [208, 2, 1, "", "labels"], [209, 2, 1, "", "num_pores"], [210, 2, 1, "", "num_throats"], [211, 2, 1, "", "pc_curve"], [212, 2, 1, "", "pop"], [213, 2, 1, "", "popitem"], [214, 2, 1, "", "pores"], [215, 2, 1, "", "props"], [216, 2, 1, "", "reset"], [217, 2, 1, "", "run"], [218, 2, 1, "", "set_BC"], [219, 2, 1, "", "set_inlet_BC"], [220, 2, 1, "", "set_label"], [221, 2, 1, "", "set_outlet_BC"], [222, 2, 1, "", "setdefault"], [223, 2, 1, "", "throats"], [224, 2, 1, "", "to_indices"], [225, 2, 1, "", "to_mask"], [226, 2, 1, "", "update"], [227, 2, 1, "", "values"]], "openpnm.algorithms.OhmicConduction": [[229, 2, 1, "", "clear"], [230, 2, 1, "", "clear_BCs"], [231, 2, 1, "", "clear_rate_BCs"], [232, 2, 1, "", "clear_value_BCs"], [233, 2, 1, "", "copy"], [234, 2, 1, "", "filter_by_label"], [235, 2, 1, "", "fromkeys"], [236, 2, 1, "", "get"], [237, 2, 1, "", "get_conduit_data"], [238, 2, 1, "", "interpolate_data"], [239, 2, 1, "", "items"], [240, 2, 1, "", "keys"], [241, 2, 1, "", "labels"], [242, 2, 1, "", "num_pores"], [243, 2, 1, "", "num_throats"], [244, 2, 1, "", "pop"], [245, 2, 1, "", "popitem"], [246, 2, 1, "", "pores"], [247, 2, 1, "", "props"], [248, 2, 1, "", "rate"], [249, 2, 1, "", "run"], [250, 2, 1, "", "set_BC"], [251, 2, 1, "", "set_label"], [252, 2, 1, "", "set_rate_BC"], [253, 2, 1, "", "set_source"], [254, 2, 1, "", "set_value_BC"], [255, 2, 1, "", "setdefault"], [256, 2, 1, "", "throats"], [257, 2, 1, "", "to_indices"], [258, 2, 1, "", "to_mask"], [259, 2, 1, "", "update"], [260, 2, 1, "", "values"]], "openpnm.algorithms.ReactiveTransport": [[262, 2, 1, "", "clear"], [263, 2, 1, "", "clear_BCs"], [264, 2, 1, "", "clear_rate_BCs"], [265, 2, 1, "", "clear_value_BCs"], [266, 2, 1, "", "copy"], [267, 2, 1, "", "filter_by_label"], [268, 2, 1, "", "fromkeys"], [269, 2, 1, "", "get"], [270, 2, 1, "", "get_conduit_data"], [271, 2, 1, "", "interpolate_data"], [272, 2, 1, "", "items"], [273, 2, 1, "", "keys"], [274, 2, 1, "", "labels"], [275, 2, 1, "", "num_pores"], [276, 2, 1, "", "num_throats"], [277, 2, 1, "", "pop"], [278, 2, 1, "", "popitem"], [279, 2, 1, "", "pores"], [280, 2, 1, "", "props"], [281, 2, 1, "", "rate"], [282, 2, 1, "", "run"], [283, 2, 1, "", "set_BC"], [284, 2, 1, "", "set_label"], [285, 2, 1, "", "set_rate_BC"], [286, 2, 1, "", "set_source"], [287, 2, 1, "", "set_value_BC"], [288, 2, 1, "", "setdefault"], [289, 2, 1, "", "throats"], [290, 2, 1, "", "to_indices"], [291, 2, 1, "", "to_mask"], [292, 2, 1, "", "update"], [293, 2, 1, "", "values"]], "openpnm.algorithms.StokesFlow": [[295, 2, 1, "", "clear"], [296, 2, 1, "", "clear_BCs"], [297, 2, 1, "", "clear_rate_BCs"], [298, 2, 1, "", "clear_value_BCs"], [299, 2, 1, "", "copy"], [300, 2, 1, "", "filter_by_label"], [301, 2, 1, "", "fromkeys"], [302, 2, 1, "", "get"], [303, 2, 1, "", "get_conduit_data"], [304, 2, 1, "", "interpolate_data"], [305, 2, 1, "", "items"], [306, 2, 1, "", "keys"], [307, 2, 1, "", "labels"], [308, 2, 1, "", "num_pores"], [309, 2, 1, "", "num_throats"], [310, 2, 1, "", "pop"], [311, 2, 1, "", "popitem"], [312, 2, 1, "", "pores"], [313, 2, 1, "", "props"], [314, 2, 1, "", "rate"], [315, 2, 1, "", "run"], [316, 2, 1, "", "set_BC"], [317, 2, 1, "", "set_label"], [318, 2, 1, "", "set_rate_BC"], [319, 2, 1, "", "set_source"], [320, 2, 1, "", "set_value_BC"], [321, 2, 1, "", "setdefault"], [322, 2, 1, "", "throats"], [323, 2, 1, "", "to_indices"], [324, 2, 1, "", "to_mask"], [325, 2, 1, "", "update"], [326, 2, 1, "", "values"]], "openpnm.algorithms.TransientAdvectionDiffusion": [[328, 2, 1, "", "clear"], [329, 2, 1, "", "clear_BCs"], [330, 2, 1, "", "clear_rate_BCs"], [331, 2, 1, "", "clear_value_BCs"], [332, 2, 1, "", "copy"], [333, 2, 1, "", "filter_by_label"], [334, 2, 1, "", "fromkeys"], [335, 2, 1, "", "get"], [336, 2, 1, "", "get_conduit_data"], [337, 2, 1, "", "interpolate_data"], [338, 2, 1, "", "items"], [339, 2, 1, "", "keys"], [340, 2, 1, "", "labels"], [341, 2, 1, "", "num_pores"], [342, 2, 1, "", "num_throats"], [343, 2, 1, "", "pop"], [344, 2, 1, "", "popitem"], [345, 2, 1, "", "pores"], [346, 2, 1, "", "props"], [347, 2, 1, "", "rate"], [348, 2, 1, "", "run"], [349, 2, 1, "", "set_BC"], [350, 2, 1, "", "set_label"], [351, 2, 1, "", "set_outflow_BC"], [352, 2, 1, "", "set_rate_BC"], [353, 2, 1, "", "set_source"], [354, 2, 1, "", "set_value_BC"], [355, 2, 1, "", "setdefault"], [356, 2, 1, "", "throats"], [357, 2, 1, "", "to_indices"], [358, 2, 1, "", "to_mask"], [359, 2, 1, "", "update"], [360, 2, 1, "", "values"]], "openpnm.algorithms.TransientFickianDiffusion": [[362, 2, 1, "", "clear"], [363, 2, 1, "", "clear_BCs"], [364, 2, 1, "", "clear_rate_BCs"], [365, 2, 1, "", "clear_value_BCs"], [366, 2, 1, "", "copy"], [367, 2, 1, "", "filter_by_label"], [368, 2, 1, "", "fromkeys"], [369, 2, 1, "", "get"], [370, 2, 1, "", "get_conduit_data"], [371, 2, 1, "", "interpolate_data"], [372, 2, 1, "", "items"], [373, 2, 1, "", "keys"], [374, 2, 1, "", "labels"], [375, 2, 1, "", "num_pores"], [376, 2, 1, "", "num_throats"], [377, 2, 1, "", "pop"], [378, 2, 1, "", "popitem"], [379, 2, 1, "", "pores"], [380, 2, 1, "", "props"], [381, 2, 1, "", "rate"], [382, 2, 1, "", "run"], [383, 2, 1, "", "set_BC"], [384, 2, 1, "", "set_label"], [385, 2, 1, "", "set_rate_BC"], [386, 2, 1, "", "set_source"], [387, 2, 1, "", "set_value_BC"], [388, 2, 1, "", "setdefault"], [389, 2, 1, "", "throats"], [390, 2, 1, "", "to_indices"], [391, 2, 1, "", "to_mask"], [392, 2, 1, "", "update"], [393, 2, 1, "", "values"]], "openpnm.algorithms.TransientReactiveTransport": [[395, 2, 1, "", "clear"], [396, 2, 1, "", "clear_BCs"], [397, 2, 1, "", "clear_rate_BCs"], [398, 2, 1, "", "clear_value_BCs"], [399, 2, 1, "", "copy"], [400, 2, 1, "", "filter_by_label"], [401, 2, 1, "", "fromkeys"], [402, 2, 1, "", "get"], [403, 2, 1, "", "get_conduit_data"], [404, 2, 1, "", "interpolate_data"], [405, 2, 1, "", "items"], [406, 2, 1, "", "keys"], [407, 2, 1, "", "labels"], [408, 2, 1, "", "num_pores"], [409, 2, 1, "", "num_throats"], [410, 2, 1, "", "pop"], [411, 2, 1, "", "popitem"], [412, 2, 1, "", "pores"], [413, 2, 1, "", "props"], [414, 2, 1, "", "rate"], [415, 2, 1, "", "run"], [416, 2, 1, "", "set_BC"], [417, 2, 1, "", "set_label"], [418, 2, 1, "", "set_rate_BC"], [419, 2, 1, "", "set_source"], [420, 2, 1, "", "set_value_BC"], [421, 2, 1, "", "setdefault"], [422, 2, 1, "", "throats"], [423, 2, 1, "", "to_indices"], [424, 2, 1, "", "to_mask"], [425, 2, 1, "", "update"], [426, 2, 1, "", "values"]], "openpnm.algorithms.Transport": [[428, 2, 1, "", "clear"], [429, 2, 1, "", "clear_BCs"], [430, 2, 1, "", "clear_rate_BCs"], [431, 2, 1, "", "clear_value_BCs"], [432, 2, 1, "", "copy"], [433, 2, 1, "", "filter_by_label"], [434, 2, 1, "", "fromkeys"], [435, 2, 1, "", "get"], [436, 2, 1, "", "get_conduit_data"], [437, 2, 1, "", "interpolate_data"], [438, 2, 1, "", "items"], [439, 2, 1, "", "keys"], [440, 2, 1, "", "labels"], [441, 2, 1, "", "num_pores"], [442, 2, 1, "", "num_throats"], [443, 2, 1, "", "pop"], [444, 2, 1, "", "popitem"], [445, 2, 1, "", "pores"], [446, 2, 1, "", "props"], [447, 2, 1, "", "rate"], [448, 2, 1, "", "run"], [449, 2, 1, "", "set_BC"], [450, 2, 1, "", "set_label"], [451, 2, 1, "", "set_rate_BC"], [452, 2, 1, "", "set_value_BC"], [453, 2, 1, "", "setdefault"], [454, 2, 1, "", "throats"], [455, 2, 1, "", "to_indices"], [456, 2, 1, "", "to_mask"], [457, 2, 1, "", "update"], [458, 2, 1, "", "values"]], "openpnm.core": [[460, 1, 1, "", "Base2"], [477, 1, 1, "", "Domain"], [505, 1, 1, "", "LabelMixin"], [513, 1, 1, "", "ModelWrapper"], [526, 1, 1, "", "ModelsDict"], [541, 1, 1, "", "ModelsMixin2"], [546, 1, 1, "", "ParserMixin"]], "openpnm.core.Base2": [[461, 2, 1, "", "clear"], [462, 2, 1, "", "copy"], [463, 2, 1, "", "fromkeys"], [464, 2, 1, "", "get"], [465, 2, 1, "", "get_conduit_data"], [466, 2, 1, "", "interpolate_data"], [467, 2, 1, "", "items"], [468, 2, 1, "", "keys"], [469, 2, 1, "", "pop"], [470, 2, 1, "", "popitem"], [471, 2, 1, "", "props"], [472, 2, 1, "", "setdefault"], [473, 2, 1, "", "to_indices"], [474, 2, 1, "", "to_mask"], [475, 2, 1, "", "update"], [476, 2, 1, "", "values"]], "openpnm.core.Domain": [[478, 2, 1, "", "add_model"], [479, 2, 1, "", "add_model_collection"], [480, 2, 1, "", "clear"], [481, 2, 1, "", "copy"], [482, 2, 1, "", "filter_by_label"], [483, 2, 1, "", "fromkeys"], [484, 2, 1, "", "get"], [485, 2, 1, "", "get_conduit_data"], [486, 2, 1, "", "interpolate_data"], [487, 2, 1, "", "items"], [488, 2, 1, "", "keys"], [489, 2, 1, "", "labels"], [490, 2, 1, "", "num_pores"], [491, 2, 1, "", "num_throats"], [492, 2, 1, "", "pop"], [493, 2, 1, "", "popitem"], [494, 2, 1, "", "pores"], [495, 2, 1, "", "props"], [496, 2, 1, "", "regenerate_models"], [497, 2, 1, "", "run_model"], [498, 2, 1, "", "set_label"], [499, 2, 1, "", "setdefault"], [500, 2, 1, "", "throats"], [501, 2, 1, "", "to_indices"], [502, 2, 1, "", "to_mask"], [503, 2, 1, "", "update"], [504, 2, 1, "", "values"]], "openpnm.core.LabelMixin": [[506, 2, 1, "", "filter_by_label"], [507, 2, 1, "", "labels"], [508, 2, 1, "", "num_pores"], [509, 2, 1, "", "num_throats"], [510, 2, 1, "", "pores"], [511, 2, 1, "", "set_label"], [512, 2, 1, "", "throats"]], "openpnm.core.ModelWrapper": [[514, 2, 1, "", "__call__"], [515, 2, 1, "", "clear"], [516, 2, 1, "", "copy"], [517, 2, 1, "", "fromkeys"], [518, 2, 1, "", "get"], [519, 2, 1, "", "items"], [520, 2, 1, "", "keys"], [521, 2, 1, "", "pop"], [522, 2, 1, "", "popitem"], [523, 2, 1, "", "setdefault"], [524, 2, 1, "", "update"], [525, 2, 1, "", "values"]], "openpnm.core.ModelsDict": [[527, 2, 1, "", "clear"], [528, 2, 1, "", "copy"], [529, 2, 1, "", "dependency_graph"], [530, 2, 1, "", "dependency_list"], [531, 2, 1, "", "dependency_map"], [532, 2, 1, "", "fromkeys"], [533, 2, 1, "", "get"], [534, 2, 1, "", "items"], [535, 2, 1, "", "keys"], [536, 2, 1, "", "pop"], [537, 2, 1, "", "popitem"], [538, 2, 1, "", "setdefault"], [539, 2, 1, "", "update"], [540, 2, 1, "", "values"]], "openpnm.core.ModelsMixin2": [[542, 2, 1, "", "add_model"], [543, 2, 1, "", "add_model_collection"], [544, 2, 1, "", "regenerate_models"], [545, 2, 1, "", "run_model"]], "openpnm.integrators": [[548, 1, 1, "", "Integrator"], [549, 1, 1, "", "ScipyRK45"]], "openpnm.integrators.ScipyRK45": [[550, 2, 1, "", "solve"]], "openpnm.io": [[552, 3, 1, "", "network_from_csv"], [553, 3, 1, "", "network_from_jsongraph"], [554, 3, 1, "", "network_from_marock"], [555, 3, 1, "", "network_from_networkx"], [556, 3, 1, "", "network_from_pergeos"], [557, 3, 1, "", "network_from_porespy"], [558, 3, 1, "", "network_from_statoil"], [559, 3, 1, "", "network_to_comsol"], [560, 3, 1, "", "network_to_csv"], [561, 3, 1, "", "network_to_jsongraph"], [562, 3, 1, "", "network_to_networkx"], [563, 3, 1, "", "network_to_pandas"], [564, 3, 1, "", "network_to_pergeos"], [565, 3, 1, "", "network_to_salome"], [566, 3, 1, "", "network_to_stl"], [567, 3, 1, "", "print_hdf5"], [568, 3, 1, "", "project_to_csv"], [569, 3, 1, "", "project_to_dict"], [570, 3, 1, "", "project_to_hdf5"], [571, 3, 1, "", "project_to_pandas"], [572, 3, 1, "", "project_to_paraview"], [573, 3, 1, "", "project_to_vtk"], [574, 3, 1, "", "project_to_xdmf"]], "openpnm.models": [[576, 0, 0, "-", "collections"], [595, 0, 0, "-", "geometry"], [721, 0, 0, "-", "misc"], [742, 0, 0, "-", "network"], [758, 0, 0, "-", "phase"], [809, 0, 0, "-", "physics"]], "openpnm.models.collections": [[577, 0, 0, "-", "geometry"], [585, 0, 0, "-", "network"], [586, 0, 0, "-", "phase"], [592, 0, 0, "-", "physics"]], "openpnm.models.collections.geometry": [[578, 4, 1, "", "circles_and_rectangles"], [579, 4, 1, "", "cones_and_cylinders"], [580, 4, 1, "", "cubes_and_cuboids"], [581, 4, 1, "", "pyramids_and_cuboids"], [582, 4, 1, "", "spheres_and_cylinders"], [583, 4, 1, "", "squares_and_rectangles"], [584, 4, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.collections.phase": [[587, 4, 1, "", "air"], [588, 0, 0, "-", "gas"], [589, 0, 0, "-", "liquid"], [590, 4, 1, "", "mercury"], [591, 4, 1, "", "water"]], "openpnm.models.collections.physics": [[593, 4, 1, "", "basic"], [594, 4, 1, "", "standard"]], "openpnm.models.geometry": [[596, 0, 0, "-", "conduit_lengths"], [610, 0, 0, "-", "diffusive_size_factors"], [625, 0, 0, "-", "hydraulic_size_factors"], [640, 0, 0, "-", "pore_cross_sectional_area"], [646, 0, 0, "-", "pore_seed"], [649, 0, 0, "-", "pore_size"], [657, 0, 0, "-", "pore_surface_area"], [662, 0, 0, "-", "pore_volume"], [668, 0, 0, "-", "throat_capillary_shape_factor"], [671, 0, 0, "-", "throat_centroid"], [673, 0, 0, "-", "throat_cross_sectional_area"], [677, 0, 0, "-", "throat_endpoints"], [679, 0, 0, "-", "throat_length"], [693, 0, 0, "-", "throat_perimeter"], [697, 0, 0, "-", "throat_seed"], [700, 0, 0, "-", "throat_size"], [707, 0, 0, "-", "throat_surface_area"], [712, 0, 0, "-", "throat_vector"], [714, 0, 0, "-", "throat_volume"]], "openpnm.models.geometry.conduit_lengths": [[597, 3, 1, "", "circles_and_rectangles"], [598, 3, 1, "", "cones_and_cylinders"], [599, 3, 1, "", "cubes_and_cuboids"], [600, 3, 1, "", "hybrid_cones_and_cylinders"], [601, 3, 1, "", "hybrid_pyramids_and_cuboids"], [602, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [603, 3, 1, "", "intersecting_cones"], [604, 3, 1, "", "intersecting_pyramids"], [605, 3, 1, "", "intersecting_trapezoids"], [606, 3, 1, "", "pyramids_and_cuboids"], [607, 3, 1, "", "spheres_and_cylinders"], [608, 3, 1, "", "squares_and_rectangles"], [609, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[611, 3, 1, "", "circles_and_rectangles"], [612, 3, 1, "", "cones_and_cylinders"], [613, 3, 1, "", "cubes_and_cuboids"], [614, 3, 1, "", "hybrid_cones_and_cylinders"], [615, 3, 1, "", "hybrid_pyramids_and_cuboids"], [616, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [617, 3, 1, "", "intersecting_cones"], [618, 3, 1, "", "intersecting_pyramids"], [619, 3, 1, "", "intersecting_trapezoids"], [620, 3, 1, "", "ncylinders_in_series"], [621, 3, 1, "", "pyramids_and_cuboids"], [622, 3, 1, "", "spheres_and_cylinders"], [623, 3, 1, "", "squares_and_rectangles"], [624, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[626, 3, 1, "", "circles_and_rectangles"], [627, 3, 1, "", "cones_and_cylinders"], [628, 3, 1, "", "cubes_and_cuboids"], [629, 3, 1, "", "hybrid_cones_and_cylinders"], [630, 3, 1, "", "hybrid_pyramids_and_cuboids"], [631, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [632, 3, 1, "", "intersecting_cones"], [633, 3, 1, "", "intersecting_pyramids"], [634, 3, 1, "", "intersecting_trapezoids"], [635, 3, 1, "", "ncylinders_in_series"], [636, 3, 1, "", "pyramids_and_cuboids"], [637, 3, 1, "", "spheres_and_cylinders"], [638, 3, 1, "", "squares_and_rectangles"], [639, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[641, 3, 1, "", "circle"], [642, 3, 1, "", "cone"], [643, 3, 1, "", "cube"], [644, 3, 1, "", "sphere"], [645, 3, 1, "", "square"]], "openpnm.models.geometry.pore_seed": [[647, 3, 1, "", "random"], [648, 3, 1, "", "spatially_correlated"]], "openpnm.models.geometry.pore_size": [[650, 3, 1, "", "equivalent_diameter"], [651, 3, 1, "", "from_neighbor_throats"], [652, 3, 1, "", "generic_distribution"], [653, 3, 1, "", "largest_sphere"], [654, 3, 1, "", "normal"], [655, 3, 1, "", "random"], [656, 3, 1, "", "weibull"]], "openpnm.models.geometry.pore_surface_area": [[658, 3, 1, "", "circle"], [659, 3, 1, "", "cube"], [660, 3, 1, "", "sphere"], [661, 3, 1, "", "square"]], "openpnm.models.geometry.pore_volume": [[663, 3, 1, "", "circle"], [664, 3, 1, "", "cube"], [665, 3, 1, "", "effective"], [666, 3, 1, "", "sphere"], [667, 3, 1, "", "square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[669, 3, 1, "", "jenkins_rao"], [670, 3, 1, "", "mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[672, 3, 1, "", "pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[674, 3, 1, "", "cuboid"], [675, 3, 1, "", "cylinder"], [676, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_endpoints": [[678, 3, 1, "", "spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[680, 3, 1, "", "circles_and_rectangles"], [681, 3, 1, "", "cones_and_cylinders"], [682, 3, 1, "", "cubes_and_cuboids"], [683, 3, 1, "", "hybrid_cones_and_cylinders"], [684, 3, 1, "", "hybrid_pyramids_and_cuboids"], [685, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [686, 3, 1, "", "intersecting_cones"], [687, 3, 1, "", "intersecting_pyramids"], [688, 3, 1, "", "intersecting_trapezoids"], [689, 3, 1, "", "pyramids_and_cuboids"], [690, 3, 1, "", "spheres_and_cylinders"], [691, 3, 1, "", "squares_and_rectangles"], [692, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[694, 3, 1, "", "cuboid"], [695, 3, 1, "", "cylinder"], [696, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_seed": [[698, 3, 1, "", "from_neighbor_pores"], [699, 3, 1, "", "random"]], "openpnm.models.geometry.throat_size": [[701, 3, 1, "", "equivalent_diameter"], [702, 3, 1, "", "from_neighbor_pores"], [703, 3, 1, "", "generic_distribution"], [704, 3, 1, "", "normal"], [705, 3, 1, "", "random"], [706, 3, 1, "", "weibull"]], "openpnm.models.geometry.throat_surface_area": [[708, 3, 1, "", "cuboid"], [709, 3, 1, "", "cylinder"], [710, 3, 1, "", "extrusion"], [711, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_vector": [[713, 3, 1, "", "pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[715, 3, 1, "", "cuboid"], [716, 3, 1, "", "cylinder"], [717, 3, 1, "", "extrusion"], [718, 3, 1, "", "lens"], [719, 3, 1, "", "pendular_ring"], [720, 3, 1, "", "rectangle"]], "openpnm.models.misc": [[722, 3, 1, "", "blank"], [723, 3, 1, "", "clip"], [724, 3, 1, "", "constant"], [725, 3, 1, "", "difference"], [726, 3, 1, "", "fraction"], [727, 3, 1, "", "from_neighbor_pores"], [728, 3, 1, "", "from_neighbor_throats"], [729, 3, 1, "", "generic_distribution"], [730, 3, 1, "", "generic_function"], [731, 3, 1, "", "invert"], [732, 3, 1, "", "linear"], [733, 3, 1, "", "match_histogram"], [734, 3, 1, "", "normal"], [735, 3, 1, "", "normalize"], [736, 3, 1, "", "polynomial"], [737, 3, 1, "", "product"], [738, 3, 1, "", "random"], [739, 3, 1, "", "scaled"], [740, 3, 1, "", "summation"], [741, 3, 1, "", "weibull"]], "openpnm.models.network": [[743, 3, 1, "", "bidirectional_throats"], [744, 3, 1, "", "cluster_number"], [745, 3, 1, "", "cluster_size"], [746, 3, 1, "", "coordination_number"], [747, 3, 1, "", "count_coincident_pores"], [748, 3, 1, "", "distance_to_furthest_neighbor"], [749, 3, 1, "", "distance_to_nearest_neighbor"], [750, 3, 1, "", "distance_to_nearest_pore"], [751, 3, 1, "", "duplicate_throats"], [752, 3, 1, "", "find_coincident_pores"], [753, 3, 1, "", "headless_throats"], [754, 3, 1, "", "isolated_pores"], [755, 3, 1, "", "looped_throats"], [756, 3, 1, "", "pore_to_pore_distance"], [757, 3, 1, "", "reversed_throats"]], "openpnm.models.phase": [[759, 3, 1, "", "chemicals_wrapper"], [760, 0, 0, "-", "critical_props"], [761, 0, 0, "-", "density"], [767, 0, 0, "-", "diffusivity"], [771, 0, 0, "-", "heat_capacity"], [776, 0, 0, "-", "misc"], [779, 0, 0, "-", "mixtures"], [785, 0, 0, "-", "partition_coefficient"], [787, 0, 0, "-", "surface_tension"], [791, 0, 0, "-", "thermal_conductivity"], [798, 0, 0, "-", "vapor_pressure"], [802, 0, 0, "-", "viscosity"]], "openpnm.models.phase.density": [[762, 3, 1, "", "ideal_gas"], [763, 3, 1, "", "liquid_mixture_COSTALD"], [764, 3, 1, "", "liquid_pure_COSTALD"], [765, 3, 1, "", "mass_to_molar"], [766, 3, 1, "", "water_correlation"]], "openpnm.models.phase.diffusivity": [[768, 3, 1, "", "gas_mixture_ce"], [769, 3, 1, "", "gas_mixture_fesg"], [770, 3, 1, "", "liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[772, 3, 1, "", "gas_mixture_yweighted"], [773, 3, 1, "", "gas_pure_TRC"], [774, 3, 1, "", "liquid_mixture_xweighted"], [775, 3, 1, "", "liquid_pure_rp"]], "openpnm.models.phase.misc": [[777, 3, 1, "", "mix_and_match"], [778, 3, 1, "", "mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[780, 3, 1, "", "from_component"], [781, 3, 1, "", "mixing_rule"], [782, 3, 1, "", "mole_summation"], [783, 3, 1, "", "mole_to_mass_fraction"], [784, 3, 1, "", "salinity"]], "openpnm.models.phase.partition_coefficient": [[786, 3, 1, "", "gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[788, 3, 1, "", "liquid_mixture_wsd"], [789, 3, 1, "", "liquid_pure_bb"], [790, 3, 1, "", "water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[792, 3, 1, "", "gas_mixture_whz"], [793, 3, 1, "", "gas_pure_gismr"], [794, 3, 1, "", "liquid_mixture_DIPPR9H"], [795, 3, 1, "", "liquid_pure_gismr"], [796, 3, 1, "", "liquid_pure_sr"], [797, 3, 1, "", "water_correlation"]], "openpnm.models.phase.vapor_pressure": [[799, 3, 1, "", "liquid_pure_antoine"], [800, 3, 1, "", "liquid_pure_lk"], [801, 3, 1, "", "water_correlation"]], "openpnm.models.phase.viscosity": [[803, 3, 1, "", "gas_mixture_hz"], [804, 3, 1, "", "gas_pure_gesmr"], [805, 3, 1, "", "gas_pure_st"], [806, 3, 1, "", "liquid_mixture_xweighted"], [807, 3, 1, "", "liquid_pure_ls"], [808, 3, 1, "", "water_correlation"]], "openpnm.models.physics": [[810, 0, 0, "-", "ad_dif_conductance"], [812, 0, 0, "-", "capillary_pressure"], [815, 0, 0, "-", "diffusive_conductance"], [820, 0, 0, "-", "electrical_conductance"], [823, 0, 0, "-", "hydraulic_conductance"], [827, 0, 0, "-", "meniscus"], [831, 0, 0, "-", "multiphase"], [834, 0, 0, "-", "source_terms"], [845, 0, 0, "-", "thermal_conductance"]], "openpnm.models.physics.ad_dif_conductance": [[811, 3, 1, "", "ad_dif"]], "openpnm.models.physics.capillary_pressure": [[813, 3, 1, "", "purcell"], [814, 3, 1, "", "washburn"]], "openpnm.models.physics.diffusive_conductance": [[816, 3, 1, "", "generic_diffusive"], [817, 3, 1, "", "mixed_diffusion"], [818, 3, 1, "", "ordinary_diffusion"], [819, 3, 1, "", "taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[821, 3, 1, "", "generic_electrical"], [822, 3, 1, "", "series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[824, 3, 1, "", "generic_hydraulic"], [825, 3, 1, "", "hagen_poiseuille"], [826, 3, 1, "", "valvatne_blunt"]], "openpnm.models.physics.meniscus": [[828, 3, 1, "", "general_toroidal"], [829, 3, 1, "", "purcell"], [830, 3, 1, "", "sinusoidal"]], "openpnm.models.physics.multiphase": [[832, 3, 1, "", "conduit_conductance"], [833, 3, 1, "", "late_filling"]], "openpnm.models.physics.source_terms": [[835, 3, 1, "", "butler_volmer_conc"], [836, 3, 1, "", "butler_volmer_voltage"], [837, 3, 1, "", "exponential"], [838, 3, 1, "", "general_symbolic"], [839, 3, 1, "", "linear"], [840, 3, 1, "", "logarithm"], [841, 3, 1, "", "natural_exponential"], [842, 3, 1, "", "natural_logarithm"], [843, 3, 1, "", "power_law"], [844, 3, 1, "", "standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[846, 3, 1, "", "generic_thermal"], [847, 3, 1, "", "series_resistors"]], "openpnm.network": [[849, 1, 1, "", "BodyCenteredCubic"], [888, 1, 1, "", "Cubic"], [927, 1, 1, "", "CubicTemplate"], [965, 1, 1, "", "Delaunay"], [1003, 1, 1, "", "DelaunayVoronoiDual"], [1043, 1, 1, "", "Demo"], [1082, 1, 1, "", "FaceCenteredCubic"], [1121, 1, 1, "", "Network"], [1159, 1, 1, "", "Voronoi"]], "openpnm.network.BodyCenteredCubic": [[850, 2, 1, "", "add_boundary_pores"], [851, 2, 1, "", "add_model"], [852, 2, 1, "", "add_model_collection"], [853, 2, 1, "", "clear"], [854, 2, 1, "", "copy"], [855, 2, 1, "", "create_adjacency_matrix"], [856, 2, 1, "", "create_incidence_matrix"], [857, 2, 1, "", "filter_by_label"], [858, 2, 1, "", "find_connected_pores"], [859, 2, 1, "", "find_connecting_throat"], [860, 2, 1, "", "find_nearby_pores"], [861, 2, 1, "", "find_neighbor_pores"], [862, 2, 1, "", "find_neighbor_throats"], [863, 2, 1, "", "fromkeys"], [864, 2, 1, "", "get"], [865, 2, 1, "", "get_adjacency_matrix"], [866, 2, 1, "", "get_conduit_data"], [867, 2, 1, "", "get_incidence_matrix"], [868, 2, 1, "", "interpolate_data"], [869, 2, 1, "", "items"], [870, 2, 1, "", "keys"], [871, 2, 1, "", "labels"], [872, 2, 1, "", "num_neighbors"], [873, 2, 1, "", "num_pores"], [874, 2, 1, "", "num_throats"], [875, 2, 1, "", "pop"], [876, 2, 1, "", "popitem"], [877, 2, 1, "", "pores"], [878, 2, 1, "", "props"], [879, 2, 1, "", "regenerate_models"], [880, 2, 1, "", "run_model"], [881, 2, 1, "", "set_label"], [882, 2, 1, "", "setdefault"], [883, 2, 1, "", "throats"], [884, 2, 1, "", "to_indices"], [885, 2, 1, "", "to_mask"], [886, 2, 1, "", "update"], [887, 2, 1, "", "values"]], "openpnm.network.Cubic": [[889, 2, 1, "", "add_boundary_pores"], [890, 2, 1, "", "add_model"], [891, 2, 1, "", "add_model_collection"], [892, 2, 1, "", "clear"], [893, 2, 1, "", "copy"], [894, 2, 1, "", "create_adjacency_matrix"], [895, 2, 1, "", "create_incidence_matrix"], [896, 2, 1, "", "filter_by_label"], [897, 2, 1, "", "find_connected_pores"], [898, 2, 1, "", "find_connecting_throat"], [899, 2, 1, "", "find_nearby_pores"], [900, 2, 1, "", "find_neighbor_pores"], [901, 2, 1, "", "find_neighbor_throats"], [902, 2, 1, "", "fromkeys"], [903, 2, 1, "", "get"], [904, 2, 1, "", "get_adjacency_matrix"], [905, 2, 1, "", "get_conduit_data"], [906, 2, 1, "", "get_incidence_matrix"], [907, 2, 1, "", "interpolate_data"], [908, 2, 1, "", "items"], [909, 2, 1, "", "keys"], [910, 2, 1, "", "labels"], [911, 2, 1, "", "num_neighbors"], [912, 2, 1, "", "num_pores"], [913, 2, 1, "", "num_throats"], [914, 2, 1, "", "pop"], [915, 2, 1, "", "popitem"], [916, 2, 1, "", "pores"], [917, 2, 1, "", "props"], [918, 2, 1, "", "regenerate_models"], [919, 2, 1, "", "run_model"], [920, 2, 1, "", "set_label"], [921, 2, 1, "", "setdefault"], [922, 2, 1, "", "throats"], [923, 2, 1, "", "to_indices"], [924, 2, 1, "", "to_mask"], [925, 2, 1, "", "update"], [926, 2, 1, "", "values"]], "openpnm.network.CubicTemplate": [[928, 2, 1, "", "add_model"], [929, 2, 1, "", "add_model_collection"], [930, 2, 1, "", "clear"], [931, 2, 1, "", "copy"], [932, 2, 1, "", "create_adjacency_matrix"], [933, 2, 1, "", "create_incidence_matrix"], [934, 2, 1, "", "filter_by_label"], [935, 2, 1, "", "find_connected_pores"], [936, 2, 1, "", "find_connecting_throat"], [937, 2, 1, "", "find_nearby_pores"], [938, 2, 1, "", "find_neighbor_pores"], [939, 2, 1, "", "find_neighbor_throats"], [940, 2, 1, "", "fromkeys"], [941, 2, 1, "", "get"], [942, 2, 1, "", "get_adjacency_matrix"], [943, 2, 1, "", "get_conduit_data"], [944, 2, 1, "", "get_incidence_matrix"], [945, 2, 1, "", "interpolate_data"], [946, 2, 1, "", "items"], [947, 2, 1, "", "keys"], [948, 2, 1, "", "labels"], [949, 2, 1, "", "num_neighbors"], [950, 2, 1, "", "num_pores"], [951, 2, 1, "", "num_throats"], [952, 2, 1, "", "pop"], [953, 2, 1, "", "popitem"], [954, 2, 1, "", "pores"], [955, 2, 1, "", "props"], [956, 2, 1, "", "regenerate_models"], [957, 2, 1, "", "run_model"], [958, 2, 1, "", "set_label"], [959, 2, 1, "", "setdefault"], [960, 2, 1, "", "throats"], [961, 2, 1, "", "to_indices"], [962, 2, 1, "", "to_mask"], [963, 2, 1, "", "update"], [964, 2, 1, "", "values"]], "openpnm.network.Delaunay": [[966, 2, 1, "", "add_model"], [967, 2, 1, "", "add_model_collection"], [968, 2, 1, "", "clear"], [969, 2, 1, "", "copy"], [970, 2, 1, "", "create_adjacency_matrix"], [971, 2, 1, "", "create_incidence_matrix"], [972, 2, 1, "", "filter_by_label"], [973, 2, 1, "", "find_connected_pores"], [974, 2, 1, "", "find_connecting_throat"], [975, 2, 1, "", "find_nearby_pores"], [976, 2, 1, "", "find_neighbor_pores"], [977, 2, 1, "", "find_neighbor_throats"], [978, 2, 1, "", "fromkeys"], [979, 2, 1, "", "get"], [980, 2, 1, "", "get_adjacency_matrix"], [981, 2, 1, "", "get_conduit_data"], [982, 2, 1, "", "get_incidence_matrix"], [983, 2, 1, "", "interpolate_data"], [984, 2, 1, "", "items"], [985, 2, 1, "", "keys"], [986, 2, 1, "", "labels"], [987, 2, 1, "", "num_neighbors"], [988, 2, 1, "", "num_pores"], [989, 2, 1, "", "num_throats"], [990, 2, 1, "", "pop"], [991, 2, 1, "", "popitem"], [992, 2, 1, "", "pores"], [993, 2, 1, "", "props"], [994, 2, 1, "", "regenerate_models"], [995, 2, 1, "", "run_model"], [996, 2, 1, "", "set_label"], [997, 2, 1, "", "setdefault"], [998, 2, 1, "", "throats"], [999, 2, 1, "", "to_indices"], [1000, 2, 1, "", "to_mask"], [1001, 2, 1, "", "update"], [1002, 2, 1, "", "values"]], "openpnm.network.DelaunayVoronoiDual": [[1004, 2, 1, "", "add_model"], [1005, 2, 1, "", "add_model_collection"], [1006, 2, 1, "", "clear"], [1007, 2, 1, "", "copy"], [1008, 2, 1, "", "create_adjacency_matrix"], [1009, 2, 1, "", "create_incidence_matrix"], [1010, 2, 1, "", "filter_by_label"], [1011, 2, 1, "", "find_connected_pores"], [1012, 2, 1, "", "find_connecting_throat"], [1013, 2, 1, "", "find_nearby_pores"], [1014, 2, 1, "", "find_neighbor_pores"], [1015, 2, 1, "", "find_neighbor_throats"], [1016, 2, 1, "", "find_pore_hulls"], [1017, 2, 1, "", "find_throat_facets"], [1018, 2, 1, "", "fromkeys"], [1019, 2, 1, "", "get"], [1020, 2, 1, "", "get_adjacency_matrix"], [1021, 2, 1, "", "get_conduit_data"], [1022, 2, 1, "", "get_incidence_matrix"], [1023, 2, 1, "", "interpolate_data"], [1024, 2, 1, "", "items"], [1025, 2, 1, "", "keys"], [1026, 2, 1, "", "labels"], [1027, 2, 1, "", "num_neighbors"], [1028, 2, 1, "", "num_pores"], [1029, 2, 1, "", "num_throats"], [1030, 2, 1, "", "pop"], [1031, 2, 1, "", "popitem"], [1032, 2, 1, "", "pores"], [1033, 2, 1, "", "props"], [1034, 2, 1, "", "regenerate_models"], [1035, 2, 1, "", "run_model"], [1036, 2, 1, "", "set_label"], [1037, 2, 1, "", "setdefault"], [1038, 2, 1, "", "throats"], [1039, 2, 1, "", "to_indices"], [1040, 2, 1, "", "to_mask"], [1041, 2, 1, "", "update"], [1042, 2, 1, "", "values"]], "openpnm.network.Demo": [[1044, 2, 1, "", "add_boundary_pores"], [1045, 2, 1, "", "add_model"], [1046, 2, 1, "", "add_model_collection"], [1047, 2, 1, "", "clear"], [1048, 2, 1, "", "copy"], [1049, 2, 1, "", "create_adjacency_matrix"], [1050, 2, 1, "", "create_incidence_matrix"], [1051, 2, 1, "", "filter_by_label"], [1052, 2, 1, "", "find_connected_pores"], [1053, 2, 1, "", "find_connecting_throat"], [1054, 2, 1, "", "find_nearby_pores"], [1055, 2, 1, "", "find_neighbor_pores"], [1056, 2, 1, "", "find_neighbor_throats"], [1057, 2, 1, "", "fromkeys"], [1058, 2, 1, "", "get"], [1059, 2, 1, "", "get_adjacency_matrix"], [1060, 2, 1, "", "get_conduit_data"], [1061, 2, 1, "", "get_incidence_matrix"], [1062, 2, 1, "", "interpolate_data"], [1063, 2, 1, "", "items"], [1064, 2, 1, "", "keys"], [1065, 2, 1, "", "labels"], [1066, 2, 1, "", "num_neighbors"], [1067, 2, 1, "", "num_pores"], [1068, 2, 1, "", "num_throats"], [1069, 2, 1, "", "pop"], [1070, 2, 1, "", "popitem"], [1071, 2, 1, "", "pores"], [1072, 2, 1, "", "props"], [1073, 2, 1, "", "regenerate_models"], [1074, 2, 1, "", "run_model"], [1075, 2, 1, "", "set_label"], [1076, 2, 1, "", "setdefault"], [1077, 2, 1, "", "throats"], [1078, 2, 1, "", "to_indices"], [1079, 2, 1, "", "to_mask"], [1080, 2, 1, "", "update"], [1081, 2, 1, "", "values"]], "openpnm.network.FaceCenteredCubic": [[1083, 2, 1, "", "add_boundary_pores"], [1084, 2, 1, "", "add_model"], [1085, 2, 1, "", "add_model_collection"], [1086, 2, 1, "", "clear"], [1087, 2, 1, "", "copy"], [1088, 2, 1, "", "create_adjacency_matrix"], [1089, 2, 1, "", "create_incidence_matrix"], [1090, 2, 1, "", "filter_by_label"], [1091, 2, 1, "", "find_connected_pores"], [1092, 2, 1, "", "find_connecting_throat"], [1093, 2, 1, "", "find_nearby_pores"], [1094, 2, 1, "", "find_neighbor_pores"], [1095, 2, 1, "", "find_neighbor_throats"], [1096, 2, 1, "", "fromkeys"], [1097, 2, 1, "", "get"], [1098, 2, 1, "", "get_adjacency_matrix"], [1099, 2, 1, "", "get_conduit_data"], [1100, 2, 1, "", "get_incidence_matrix"], [1101, 2, 1, "", "interpolate_data"], [1102, 2, 1, "", "items"], [1103, 2, 1, "", "keys"], [1104, 2, 1, "", "labels"], [1105, 2, 1, "", "num_neighbors"], [1106, 2, 1, "", "num_pores"], [1107, 2, 1, "", "num_throats"], [1108, 2, 1, "", "pop"], [1109, 2, 1, "", "popitem"], [1110, 2, 1, "", "pores"], [1111, 2, 1, "", "props"], [1112, 2, 1, "", "regenerate_models"], [1113, 2, 1, "", "run_model"], [1114, 2, 1, "", "set_label"], [1115, 2, 1, "", "setdefault"], [1116, 2, 1, "", "throats"], [1117, 2, 1, "", "to_indices"], [1118, 2, 1, "", "to_mask"], [1119, 2, 1, "", "update"], [1120, 2, 1, "", "values"]], "openpnm.network.Network": [[1122, 2, 1, "", "add_model"], [1123, 2, 1, "", "add_model_collection"], [1124, 2, 1, "", "clear"], [1125, 2, 1, "", "copy"], [1126, 2, 1, "", "create_adjacency_matrix"], [1127, 2, 1, "", "create_incidence_matrix"], [1128, 2, 1, "", "filter_by_label"], [1129, 2, 1, "", "find_connected_pores"], [1130, 2, 1, "", "find_connecting_throat"], [1131, 2, 1, "", "find_nearby_pores"], [1132, 2, 1, "", "find_neighbor_pores"], [1133, 2, 1, "", "find_neighbor_throats"], [1134, 2, 1, "", "fromkeys"], [1135, 2, 1, "", "get"], [1136, 2, 1, "", "get_adjacency_matrix"], [1137, 2, 1, "", "get_conduit_data"], [1138, 2, 1, "", "get_incidence_matrix"], [1139, 2, 1, "", "interpolate_data"], [1140, 2, 1, "", "items"], [1141, 2, 1, "", "keys"], [1142, 2, 1, "", "labels"], [1143, 2, 1, "", "num_neighbors"], [1144, 2, 1, "", "num_pores"], [1145, 2, 1, "", "num_throats"], [1146, 2, 1, "", "pop"], [1147, 2, 1, "", "popitem"], [1148, 2, 1, "", "pores"], [1149, 2, 1, "", "props"], [1150, 2, 1, "", "regenerate_models"], [1151, 2, 1, "", "run_model"], [1152, 2, 1, "", "set_label"], [1153, 2, 1, "", "setdefault"], [1154, 2, 1, "", "throats"], [1155, 2, 1, "", "to_indices"], [1156, 2, 1, "", "to_mask"], [1157, 2, 1, "", "update"], [1158, 2, 1, "", "values"]], "openpnm.network.Voronoi": [[1160, 2, 1, "", "add_model"], [1161, 2, 1, "", "add_model_collection"], [1162, 2, 1, "", "clear"], [1163, 2, 1, "", "copy"], [1164, 2, 1, "", "create_adjacency_matrix"], [1165, 2, 1, "", "create_incidence_matrix"], [1166, 2, 1, "", "filter_by_label"], [1167, 2, 1, "", "find_connected_pores"], [1168, 2, 1, "", "find_connecting_throat"], [1169, 2, 1, "", "find_nearby_pores"], [1170, 2, 1, "", "find_neighbor_pores"], [1171, 2, 1, "", "find_neighbor_throats"], [1172, 2, 1, "", "fromkeys"], [1173, 2, 1, "", "get"], [1174, 2, 1, "", "get_adjacency_matrix"], [1175, 2, 1, "", "get_conduit_data"], [1176, 2, 1, "", "get_incidence_matrix"], [1177, 2, 1, "", "interpolate_data"], [1178, 2, 1, "", "items"], [1179, 2, 1, "", "keys"], [1180, 2, 1, "", "labels"], [1181, 2, 1, "", "num_neighbors"], [1182, 2, 1, "", "num_pores"], [1183, 2, 1, "", "num_throats"], [1184, 2, 1, "", "pop"], [1185, 2, 1, "", "popitem"], [1186, 2, 1, "", "pores"], [1187, 2, 1, "", "props"], [1188, 2, 1, "", "regenerate_models"], [1189, 2, 1, "", "run_model"], [1190, 2, 1, "", "set_label"], [1191, 2, 1, "", "setdefault"], [1192, 2, 1, "", "throats"], [1193, 2, 1, "", "to_indices"], [1194, 2, 1, "", "to_mask"], [1195, 2, 1, "", "update"], [1196, 2, 1, "", "values"]], "openpnm.phase": [[1198, 1, 1, "", "Air"], [1226, 1, 1, "", "BinaryGas"], [1260, 1, 1, "", "GasMixture"], [1294, 1, 1, "", "LiquidMixture"], [1328, 1, 1, "", "Mercury"], [1356, 1, 1, "", "Mixture"], [1389, 1, 1, "", "Phase"], [1417, 1, 1, "", "Species"], [1445, 1, 1, "", "StandardGas"], [1473, 1, 1, "", "StandardGasMixture"], [1507, 1, 1, "", "StandardLiquid"], [1535, 1, 1, "", "StandardLiquidMixture"], [1569, 1, 1, "", "Water"]], "openpnm.phase.Air": [[1199, 2, 1, "", "add_model"], [1200, 2, 1, "", "add_model_collection"], [1201, 2, 1, "", "clear"], [1202, 2, 1, "", "copy"], [1203, 2, 1, "", "filter_by_label"], [1204, 2, 1, "", "fromkeys"], [1205, 2, 1, "", "get"], [1206, 2, 1, "", "get_conduit_data"], [1207, 2, 1, "", "interpolate_data"], [1208, 2, 1, "", "items"], [1209, 2, 1, "", "keys"], [1210, 2, 1, "", "labels"], [1211, 2, 1, "", "num_pores"], [1212, 2, 1, "", "num_throats"], [1213, 2, 1, "", "pop"], [1214, 2, 1, "", "popitem"], [1215, 2, 1, "", "pores"], [1216, 2, 1, "", "props"], [1217, 2, 1, "", "regenerate_models"], [1218, 2, 1, "", "run_model"], [1219, 2, 1, "", "set_label"], [1220, 2, 1, "", "setdefault"], [1221, 2, 1, "", "throats"], [1222, 2, 1, "", "to_indices"], [1223, 2, 1, "", "to_mask"], [1224, 2, 1, "", "update"], [1225, 2, 1, "", "values"]], "openpnm.phase.BinaryGas": [[1227, 2, 1, "", "add_comp"], [1228, 2, 1, "", "add_model"], [1229, 2, 1, "", "add_model_collection"], [1230, 2, 1, "", "check_mixture_health"], [1231, 2, 1, "", "clear"], [1232, 2, 1, "", "copy"], [1233, 2, 1, "", "filter_by_label"], [1234, 2, 1, "", "fromkeys"], [1235, 2, 1, "", "get"], [1236, 2, 1, "", "get_comp_vals"], [1237, 2, 1, "", "get_conduit_data"], [1238, 2, 1, "", "get_mix_vals"], [1239, 2, 1, "", "interpolate_data"], [1240, 2, 1, "", "items"], [1241, 2, 1, "", "keys"], [1242, 2, 1, "", "labels"], [1243, 2, 1, "", "num_pores"], [1244, 2, 1, "", "num_throats"], [1245, 2, 1, "", "pop"], [1246, 2, 1, "", "popitem"], [1247, 2, 1, "", "pores"], [1248, 2, 1, "", "props"], [1249, 2, 1, "", "regenerate_models"], [1250, 2, 1, "", "remove_comp"], [1251, 2, 1, "", "run_model"], [1252, 2, 1, "", "set_label"], [1253, 2, 1, "", "setdefault"], [1254, 2, 1, "", "throats"], [1255, 2, 1, "", "to_indices"], [1256, 2, 1, "", "to_mask"], [1257, 2, 1, "", "update"], [1258, 2, 1, "", "values"], [1259, 2, 1, "", "y"]], "openpnm.phase.GasMixture": [[1261, 2, 1, "", "add_comp"], [1262, 2, 1, "", "add_model"], [1263, 2, 1, "", "add_model_collection"], [1264, 2, 1, "", "check_mixture_health"], [1265, 2, 1, "", "clear"], [1266, 2, 1, "", "copy"], [1267, 2, 1, "", "filter_by_label"], [1268, 2, 1, "", "fromkeys"], [1269, 2, 1, "", "get"], [1270, 2, 1, "", "get_comp_vals"], [1271, 2, 1, "", "get_conduit_data"], [1272, 2, 1, "", "get_mix_vals"], [1273, 2, 1, "", "interpolate_data"], [1274, 2, 1, "", "items"], [1275, 2, 1, "", "keys"], [1276, 2, 1, "", "labels"], [1277, 2, 1, "", "num_pores"], [1278, 2, 1, "", "num_throats"], [1279, 2, 1, "", "pop"], [1280, 2, 1, "", "popitem"], [1281, 2, 1, "", "pores"], [1282, 2, 1, "", "props"], [1283, 2, 1, "", "regenerate_models"], [1284, 2, 1, "", "remove_comp"], [1285, 2, 1, "", "run_model"], [1286, 2, 1, "", "set_label"], [1287, 2, 1, "", "setdefault"], [1288, 2, 1, "", "throats"], [1289, 2, 1, "", "to_indices"], [1290, 2, 1, "", "to_mask"], [1291, 2, 1, "", "update"], [1292, 2, 1, "", "values"], [1293, 2, 1, "", "y"]], "openpnm.phase.LiquidMixture": [[1295, 2, 1, "", "add_comp"], [1296, 2, 1, "", "add_model"], [1297, 2, 1, "", "add_model_collection"], [1298, 2, 1, "", "check_mixture_health"], [1299, 2, 1, "", "clear"], [1300, 2, 1, "", "copy"], [1301, 2, 1, "", "filter_by_label"], [1302, 2, 1, "", "fromkeys"], [1303, 2, 1, "", "get"], [1304, 2, 1, "", "get_comp_vals"], [1305, 2, 1, "", "get_conduit_data"], [1306, 2, 1, "", "get_mix_vals"], [1307, 2, 1, "", "interpolate_data"], [1308, 2, 1, "", "items"], [1309, 2, 1, "", "keys"], [1310, 2, 1, "", "labels"], [1311, 2, 1, "", "num_pores"], [1312, 2, 1, "", "num_throats"], [1313, 2, 1, "", "pop"], [1314, 2, 1, "", "popitem"], [1315, 2, 1, "", "pores"], [1316, 2, 1, "", "props"], [1317, 2, 1, "", "regenerate_models"], [1318, 2, 1, "", "remove_comp"], [1319, 2, 1, "", "run_model"], [1320, 2, 1, "", "set_label"], [1321, 2, 1, "", "setdefault"], [1322, 2, 1, "", "throats"], [1323, 2, 1, "", "to_indices"], [1324, 2, 1, "", "to_mask"], [1325, 2, 1, "", "update"], [1326, 2, 1, "", "values"], [1327, 2, 1, "", "x"]], "openpnm.phase.Mercury": [[1329, 2, 1, "", "add_model"], [1330, 2, 1, "", "add_model_collection"], [1331, 2, 1, "", "clear"], [1332, 2, 1, "", "copy"], [1333, 2, 1, "", "filter_by_label"], [1334, 2, 1, "", "fromkeys"], [1335, 2, 1, "", "get"], [1336, 2, 1, "", "get_conduit_data"], [1337, 2, 1, "", "interpolate_data"], [1338, 2, 1, "", "items"], [1339, 2, 1, "", "keys"], [1340, 2, 1, "", "labels"], [1341, 2, 1, "", "num_pores"], [1342, 2, 1, "", "num_throats"], [1343, 2, 1, "", "pop"], [1344, 2, 1, "", "popitem"], [1345, 2, 1, "", "pores"], [1346, 2, 1, "", "props"], [1347, 2, 1, "", "regenerate_models"], [1348, 2, 1, "", "run_model"], [1349, 2, 1, "", "set_label"], [1350, 2, 1, "", "setdefault"], [1351, 2, 1, "", "throats"], [1352, 2, 1, "", "to_indices"], [1353, 2, 1, "", "to_mask"], [1354, 2, 1, "", "update"], [1355, 2, 1, "", "values"]], "openpnm.phase.Mixture": [[1357, 2, 1, "", "add_comp"], [1358, 2, 1, "", "add_model"], [1359, 2, 1, "", "add_model_collection"], [1360, 2, 1, "", "check_mixture_health"], [1361, 2, 1, "", "clear"], [1362, 2, 1, "", "copy"], [1363, 2, 1, "", "filter_by_label"], [1364, 2, 1, "", "fromkeys"], [1365, 2, 1, "", "get"], [1366, 2, 1, "", "get_comp_vals"], [1367, 2, 1, "", "get_conduit_data"], [1368, 2, 1, "", "get_mix_vals"], [1369, 2, 1, "", "interpolate_data"], [1370, 2, 1, "", "items"], [1371, 2, 1, "", "keys"], [1372, 2, 1, "", "labels"], [1373, 2, 1, "", "num_pores"], [1374, 2, 1, "", "num_throats"], [1375, 2, 1, "", "pop"], [1376, 2, 1, "", "popitem"], [1377, 2, 1, "", "pores"], [1378, 2, 1, "", "props"], [1379, 2, 1, "", "regenerate_models"], [1380, 2, 1, "", "remove_comp"], [1381, 2, 1, "", "run_model"], [1382, 2, 1, "", "set_label"], [1383, 2, 1, "", "setdefault"], [1384, 2, 1, "", "throats"], [1385, 2, 1, "", "to_indices"], [1386, 2, 1, "", "to_mask"], [1387, 2, 1, "", "update"], [1388, 2, 1, "", "values"]], "openpnm.phase.Phase": [[1390, 2, 1, "", "add_model"], [1391, 2, 1, "", "add_model_collection"], [1392, 2, 1, "", "clear"], [1393, 2, 1, "", "copy"], [1394, 2, 1, "", "filter_by_label"], [1395, 2, 1, "", "fromkeys"], [1396, 2, 1, "", "get"], [1397, 2, 1, "", "get_conduit_data"], [1398, 2, 1, "", "interpolate_data"], [1399, 2, 1, "", "items"], [1400, 2, 1, "", "keys"], [1401, 2, 1, "", "labels"], [1402, 2, 1, "", "num_pores"], [1403, 2, 1, "", "num_throats"], [1404, 2, 1, "", "pop"], [1405, 2, 1, "", "popitem"], [1406, 2, 1, "", "pores"], [1407, 2, 1, "", "props"], [1408, 2, 1, "", "regenerate_models"], [1409, 2, 1, "", "run_model"], [1410, 2, 1, "", "set_label"], [1411, 2, 1, "", "setdefault"], [1412, 2, 1, "", "throats"], [1413, 2, 1, "", "to_indices"], [1414, 2, 1, "", "to_mask"], [1415, 2, 1, "", "update"], [1416, 2, 1, "", "values"]], "openpnm.phase.Species": [[1418, 2, 1, "", "add_model"], [1419, 2, 1, "", "add_model_collection"], [1420, 2, 1, "", "clear"], [1421, 2, 1, "", "copy"], [1422, 2, 1, "", "filter_by_label"], [1423, 2, 1, "", "fromkeys"], [1424, 2, 1, "", "get"], [1425, 2, 1, "", "get_conduit_data"], [1426, 2, 1, "", "interpolate_data"], [1427, 2, 1, "", "items"], [1428, 2, 1, "", "keys"], [1429, 2, 1, "", "labels"], [1430, 2, 1, "", "num_pores"], [1431, 2, 1, "", "num_throats"], [1432, 2, 1, "", "pop"], [1433, 2, 1, "", "popitem"], [1434, 2, 1, "", "pores"], [1435, 2, 1, "", "props"], [1436, 2, 1, "", "regenerate_models"], [1437, 2, 1, "", "run_model"], [1438, 2, 1, "", "set_label"], [1439, 2, 1, "", "setdefault"], [1440, 2, 1, "", "throats"], [1441, 2, 1, "", "to_indices"], [1442, 2, 1, "", "to_mask"], [1443, 2, 1, "", "update"], [1444, 2, 1, "", "values"]], "openpnm.phase.StandardGas": [[1446, 2, 1, "", "add_model"], [1447, 2, 1, "", "add_model_collection"], [1448, 2, 1, "", "clear"], [1449, 2, 1, "", "copy"], [1450, 2, 1, "", "filter_by_label"], [1451, 2, 1, "", "fromkeys"], [1452, 2, 1, "", "get"], [1453, 2, 1, "", "get_conduit_data"], [1454, 2, 1, "", "interpolate_data"], [1455, 2, 1, "", "items"], [1456, 2, 1, "", "keys"], [1457, 2, 1, "", "labels"], [1458, 2, 1, "", "num_pores"], [1459, 2, 1, "", "num_throats"], [1460, 2, 1, "", "pop"], [1461, 2, 1, "", "popitem"], [1462, 2, 1, "", "pores"], [1463, 2, 1, "", "props"], [1464, 2, 1, "", "regenerate_models"], [1465, 2, 1, "", "run_model"], [1466, 2, 1, "", "set_label"], [1467, 2, 1, "", "setdefault"], [1468, 2, 1, "", "throats"], [1469, 2, 1, "", "to_indices"], [1470, 2, 1, "", "to_mask"], [1471, 2, 1, "", "update"], [1472, 2, 1, "", "values"]], "openpnm.phase.StandardGasMixture": [[1474, 2, 1, "", "add_comp"], [1475, 2, 1, "", "add_model"], [1476, 2, 1, "", "add_model_collection"], [1477, 2, 1, "", "check_mixture_health"], [1478, 2, 1, "", "clear"], [1479, 2, 1, "", "copy"], [1480, 2, 1, "", "filter_by_label"], [1481, 2, 1, "", "fromkeys"], [1482, 2, 1, "", "get"], [1483, 2, 1, "", "get_comp_vals"], [1484, 2, 1, "", "get_conduit_data"], [1485, 2, 1, "", "get_mix_vals"], [1486, 2, 1, "", "interpolate_data"], [1487, 2, 1, "", "items"], [1488, 2, 1, "", "keys"], [1489, 2, 1, "", "labels"], [1490, 2, 1, "", "num_pores"], [1491, 2, 1, "", "num_throats"], [1492, 2, 1, "", "pop"], [1493, 2, 1, "", "popitem"], [1494, 2, 1, "", "pores"], [1495, 2, 1, "", "props"], [1496, 2, 1, "", "regenerate_models"], [1497, 2, 1, "", "remove_comp"], [1498, 2, 1, "", "run_model"], [1499, 2, 1, "", "set_label"], [1500, 2, 1, "", "setdefault"], [1501, 2, 1, "", "throats"], [1502, 2, 1, "", "to_indices"], [1503, 2, 1, "", "to_mask"], [1504, 2, 1, "", "update"], [1505, 2, 1, "", "values"], [1506, 2, 1, "", "y"]], "openpnm.phase.StandardLiquid": [[1508, 2, 1, "", "add_model"], [1509, 2, 1, "", "add_model_collection"], [1510, 2, 1, "", "clear"], [1511, 2, 1, "", "copy"], [1512, 2, 1, "", "filter_by_label"], [1513, 2, 1, "", "fromkeys"], [1514, 2, 1, "", "get"], [1515, 2, 1, "", "get_conduit_data"], [1516, 2, 1, "", "interpolate_data"], [1517, 2, 1, "", "items"], [1518, 2, 1, "", "keys"], [1519, 2, 1, "", "labels"], [1520, 2, 1, "", "num_pores"], [1521, 2, 1, "", "num_throats"], [1522, 2, 1, "", "pop"], [1523, 2, 1, "", "popitem"], [1524, 2, 1, "", "pores"], [1525, 2, 1, "", "props"], [1526, 2, 1, "", "regenerate_models"], [1527, 2, 1, "", "run_model"], [1528, 2, 1, "", "set_label"], [1529, 2, 1, "", "setdefault"], [1530, 2, 1, "", "throats"], [1531, 2, 1, "", "to_indices"], [1532, 2, 1, "", "to_mask"], [1533, 2, 1, "", "update"], [1534, 2, 1, "", "values"]], "openpnm.phase.StandardLiquidMixture": [[1536, 2, 1, "", "add_comp"], [1537, 2, 1, "", "add_model"], [1538, 2, 1, "", "add_model_collection"], [1539, 2, 1, "", "check_mixture_health"], [1540, 2, 1, "", "clear"], [1541, 2, 1, "", "copy"], [1542, 2, 1, "", "filter_by_label"], [1543, 2, 1, "", "fromkeys"], [1544, 2, 1, "", "get"], [1545, 2, 1, "", "get_comp_vals"], [1546, 2, 1, "", "get_conduit_data"], [1547, 2, 1, "", "get_mix_vals"], [1548, 2, 1, "", "interpolate_data"], [1549, 2, 1, "", "items"], [1550, 2, 1, "", "keys"], [1551, 2, 1, "", "labels"], [1552, 2, 1, "", "num_pores"], [1553, 2, 1, "", "num_throats"], [1554, 2, 1, "", "pop"], [1555, 2, 1, "", "popitem"], [1556, 2, 1, "", "pores"], [1557, 2, 1, "", "props"], [1558, 2, 1, "", "regenerate_models"], [1559, 2, 1, "", "remove_comp"], [1560, 2, 1, "", "run_model"], [1561, 2, 1, "", "set_label"], [1562, 2, 1, "", "setdefault"], [1563, 2, 1, "", "throats"], [1564, 2, 1, "", "to_indices"], [1565, 2, 1, "", "to_mask"], [1566, 2, 1, "", "update"], [1567, 2, 1, "", "values"], [1568, 2, 1, "", "x"]], "openpnm.phase.Water": [[1570, 2, 1, "", "add_model"], [1571, 2, 1, "", "add_model_collection"], [1572, 2, 1, "", "clear"], [1573, 2, 1, "", "copy"], [1574, 2, 1, "", "filter_by_label"], [1575, 2, 1, "", "fromkeys"], [1576, 2, 1, "", "get"], [1577, 2, 1, "", "get_conduit_data"], [1578, 2, 1, "", "interpolate_data"], [1579, 2, 1, "", "items"], [1580, 2, 1, "", "keys"], [1581, 2, 1, "", "labels"], [1582, 2, 1, "", "num_pores"], [1583, 2, 1, "", "num_throats"], [1584, 2, 1, "", "pop"], [1585, 2, 1, "", "popitem"], [1586, 2, 1, "", "pores"], [1587, 2, 1, "", "props"], [1588, 2, 1, "", "regenerate_models"], [1589, 2, 1, "", "run_model"], [1590, 2, 1, "", "set_label"], [1591, 2, 1, "", "setdefault"], [1592, 2, 1, "", "throats"], [1593, 2, 1, "", "to_indices"], [1594, 2, 1, "", "to_mask"], [1595, 2, 1, "", "update"], [1596, 2, 1, "", "values"]], "openpnm.solvers": [[1598, 1, 1, "", "BaseSolver"], [1600, 1, 1, "", "DirectSolver"], [1602, 1, 1, "", "IterativeSolver"], [1604, 1, 1, "", "PETScLinearSolver"], [1606, 1, 1, "", "PardisoSpsolve"], [1608, 1, 1, "", "PyamgRugeStubenSolver"], [1610, 1, 1, "", "ScipyCG"], [1612, 1, 1, "", "ScipySpsolve"]], "openpnm.solvers.BaseSolver": [[1599, 2, 1, "", "solve"]], "openpnm.solvers.DirectSolver": [[1601, 2, 1, "", "solve"]], "openpnm.solvers.IterativeSolver": [[1603, 2, 1, "", "solve"]], "openpnm.solvers.PETScLinearSolver": [[1605, 2, 1, "", "solve"]], "openpnm.solvers.PardisoSpsolve": [[1607, 2, 1, "", "solve"]], "openpnm.solvers.PyamgRugeStubenSolver": [[1609, 2, 1, "", "solve"]], "openpnm.solvers.ScipyCG": [[1611, 2, 1, "", "solve"]], "openpnm.solvers.ScipySpsolve": [[1613, 2, 1, "", "solve"]], "openpnm.topotools": [[1615, 3, 1, "", "add_boundary_pores"], [1616, 3, 1, "", "add_reservoir_pore"], [1617, 3, 1, "", "bond_percolation"], [1618, 3, 1, "", "clone_pores"], [1619, 3, 1, "", "connect_pores"], [1620, 3, 1, "", "conns_to_am"], [1621, 3, 1, "", "dimensionality"], [1622, 3, 1, "", "drop_sites"], [1623, 3, 1, "", "extend"], [1624, 3, 1, "", "filter_pores_by_z"], [1625, 3, 1, "", "find_clusters"], [1626, 3, 1, "", "find_connected_sites"], [1627, 3, 1, "", "find_connecting_bonds"], [1628, 3, 1, "", "find_interface_throats"], [1629, 3, 1, "", "find_isolated_clusters"], [1630, 3, 1, "", "find_neighbor_bonds"], [1631, 3, 1, "", "find_neighbor_sites"], [1632, 3, 1, "", "find_path"], [1633, 3, 1, "", "find_surface_pores"], [1634, 3, 1, "", "generate_base_points"], [1635, 3, 1, "", "get_domain_area"], [1636, 3, 1, "", "get_domain_length"], [1637, 3, 1, "", "get_shape"], [1638, 3, 1, "", "get_spacing"], [1639, 3, 1, "", "hull_centroid"], [1640, 3, 1, "", "is_fully_connected"], [1641, 3, 1, "", "iscoplanar"], [1642, 3, 1, "", "isoutside"], [1643, 3, 1, "", "ispercolating"], [1644, 3, 1, "", "issymmetric"], [1645, 3, 1, "", "istriangular"], [1646, 3, 1, "", "istril"], [1647, 3, 1, "", "istriu"], [1648, 3, 1, "", "label_faces"], [1649, 3, 1, "", "merge_networks"], [1650, 3, 1, "", "merge_pores"], [1651, 3, 1, "", "reduce_coordination"], [1652, 3, 1, "", "reflect_base_points"], [1653, 3, 1, "", "rotate_coords"], [1654, 3, 1, "", "shear_coords"], [1655, 3, 1, "", "site_percolation"], [1656, 3, 1, "", "stitch"], [1657, 3, 1, "", "template_cylinder_annulus"], [1658, 3, 1, "", "template_sphere_shell"], [1659, 3, 1, "", "tri_to_am"], [1660, 3, 1, "", "trim"], [1661, 3, 1, "", "trim_disconnected_clusters"], [1662, 3, 1, "", "vor_to_am"]], "openpnm.utils": [[1664, 1, 1, "", "Docorator"], [1690, 1, 1, "", "HealthDict"], [1702, 1, 1, "", "NestedDict"], [1716, 1, 1, "", "PrintableDict"], [1728, 1, 1, "", "PrintableList"], [1740, 1, 1, "", "Project"], [1743, 1, 1, "", "SettingsAttr"], [1744, 1, 1, "", "SimpleList"], [1746, 1, 1, "", "TypedList"], [1758, 1, 1, "", "TypedMixin"], [1759, 1, 1, "", "TypedSet"], [1777, 1, 1, "", "Workspace"], [1796, 3, 1, "", "check_data_health"], [1797, 3, 1, "", "check_network_health"], [1798, 3, 1, "", "dict_to_struct"], [1799, 3, 1, "", "flat_list"], [1800, 3, 1, "", "get_mixture_model_args"], [1801, 3, 1, "", "get_printable_labels"], [1802, 3, 1, "", "get_printable_props"], [1803, 3, 1, "", "ignore_warnings"], [1804, 3, 1, "", "is_symmetric"], [1805, 3, 1, "", "is_transient"], [1806, 3, 1, "", "is_valid_propname"], [1807, 3, 1, "", "methods_to_table"], [1808, 3, 1, "", "models_to_table"], [1809, 3, 1, "", "sanitize_dict"], [1810, 3, 1, "", "struct_to_dict"]], "openpnm.utils.Docorator": [[1665, 2, 1, "", "__call__"], [1666, 2, 1, "", "dedent"], [1667, 2, 1, "", "dedents"], [1668, 2, 1, "", "delete_kwargs"], [1669, 2, 1, "", "delete_kwargs_s"], [1670, 2, 1, "", "delete_params"], [1671, 2, 1, "", "delete_params_s"], [1672, 2, 1, "", "delete_types"], [1673, 2, 1, "", "delete_types_s"], [1674, 2, 1, "", "get_docstring"], [1675, 2, 1, "", "get_extended_summary"], [1676, 2, 1, "", "get_extended_summaryf"], [1677, 2, 1, "", "get_full_description"], [1678, 2, 1, "", "get_full_descriptionf"], [1679, 2, 1, "", "get_sections"], [1680, 2, 1, "", "get_sectionsf"], [1681, 2, 1, "", "get_summary"], [1682, 2, 1, "", "get_summaryf"], [1683, 2, 1, "", "keep_params"], [1684, 2, 1, "", "keep_params_s"], [1685, 2, 1, "", "keep_types"], [1686, 2, 1, "", "keep_types_s"], [1687, 2, 1, "", "save_docstring"], [1688, 2, 1, "", "with_indent"], [1689, 2, 1, "", "with_indents"]], "openpnm.utils.HealthDict": [[1691, 2, 1, "", "clear"], [1692, 2, 1, "", "copy"], [1693, 2, 1, "", "fromkeys"], [1694, 2, 1, "", "get"], [1695, 2, 1, "", "items"], [1696, 2, 1, "", "keys"], [1697, 2, 1, "", "pop"], [1698, 2, 1, "", "popitem"], [1699, 2, 1, "", "setdefault"], [1700, 2, 1, "", "update"], [1701, 2, 1, "", "values"]], "openpnm.utils.NestedDict": [[1703, 2, 1, "", "clear"], [1704, 2, 1, "", "copy"], [1705, 2, 1, "", "fromkeys"], [1706, 2, 1, "", "get"], [1707, 2, 1, "", "items"], [1708, 2, 1, "", "keys"], [1709, 2, 1, "", "pop"], [1710, 2, 1, "", "popitem"], [1711, 2, 1, "", "setdefault"], [1712, 2, 1, "", "to_dict"], [1713, 2, 1, "", "unravel"], [1714, 2, 1, "", "update"], [1715, 2, 1, "", "values"]], "openpnm.utils.PrintableDict": [[1717, 2, 1, "", "clear"], [1718, 2, 1, "", "copy"], [1719, 2, 1, "", "fromkeys"], [1720, 2, 1, "", "get"], [1721, 2, 1, "", "items"], [1722, 2, 1, "", "keys"], [1723, 2, 1, "", "pop"], [1724, 2, 1, "", "popitem"], [1725, 2, 1, "", "setdefault"], [1726, 2, 1, "", "update"], [1727, 2, 1, "", "values"]], "openpnm.utils.PrintableList": [[1729, 2, 1, "", "append"], [1730, 2, 1, "", "clear"], [1731, 2, 1, "", "copy"], [1732, 2, 1, "", "count"], [1733, 2, 1, "", "extend"], [1734, 2, 1, "", "index"], [1735, 2, 1, "", "insert"], [1736, 2, 1, "", "pop"], [1737, 2, 1, "", "remove"], [1738, 2, 1, "", "reverse"], [1739, 2, 1, "", "sort"]], "openpnm.utils.Project": [[1741, 2, 1, "", "append"], [1742, 2, 1, "", "copy"]], "openpnm.utils.SimpleList": [[1745, 2, 1, "", "append"]], "openpnm.utils.TypedList": [[1747, 2, 1, "", "append"], [1748, 2, 1, "", "clear"], [1749, 2, 1, "", "copy"], [1750, 2, 1, "", "count"], [1751, 2, 1, "", "extend"], [1752, 2, 1, "", "index"], [1753, 2, 1, "", "insert"], [1754, 2, 1, "", "pop"], [1755, 2, 1, "", "remove"], [1756, 2, 1, "", "reverse"], [1757, 2, 1, "", "sort"]], "openpnm.utils.TypedSet": [[1760, 2, 1, "", "add"], [1761, 2, 1, "", "clear"], [1762, 2, 1, "", "copy"], [1763, 2, 1, "", "difference"], [1764, 2, 1, "", "difference_update"], [1765, 2, 1, "", "discard"], [1766, 2, 1, "", "intersection"], [1767, 2, 1, "", "intersection_update"], [1768, 2, 1, "", "isdisjoint"], [1769, 2, 1, "", "issubset"], [1770, 2, 1, "", "issuperset"], [1771, 2, 1, "", "pop"], [1772, 2, 1, "", "remove"], [1773, 2, 1, "", "symmetric_difference"], [1774, 2, 1, "", "symmetric_difference_update"], [1775, 2, 1, "", "union"], [1776, 2, 1, "", "update"]], "openpnm.utils.Workspace": [[1778, 2, 1, "", "clear"], [1779, 2, 1, "", "close_project"], [1780, 2, 1, "", "copy"], [1781, 2, 1, "", "copy_project"], [1782, 2, 1, "", "fromkeys"], [1783, 2, 1, "", "get"], [1784, 2, 1, "", "items"], [1785, 2, 1, "", "keys"], [1786, 2, 1, "", "load_project"], [1787, 2, 1, "", "load_workspace"], [1788, 2, 1, "", "new_project"], [1789, 2, 1, "", "pop"], [1790, 2, 1, "", "popitem"], [1791, 2, 1, "", "save_project"], [1792, 2, 1, "", "save_workspace"], [1793, 2, 1, "", "setdefault"], [1794, 2, 1, "", "update"], [1795, 2, 1, "", "values"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"applic": 0, "exampl": [1, 14], "refer": [2, 1811], "10": 3, "step": 3, "learn": 3, "openpnm": [3, 6, 22, 23, 28, 35, 459], "basic": [4, 32, 593], "usag": [4, 17], "problem": [4, 18], "setup": 4, "visual": [4, 8, 9, 26, 34], "calcul": [4, 5, 8, 9, 11, 12, 13, 29, 32], "permeabl": [4, 5, 13], "adjust": [4, 6], "pore": [4, 6, 7, 11, 15, 23, 27, 28, 29, 30, 32, 35, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 494, 510, 575, 640, 646, 649, 657, 662, 877, 916, 954, 992, 1032, 1071, 1110, 1148, 1186, 1215, 1247, 1281, 1315, 1345, 1377, 1406, 1434, 1462, 1494, 1524, 1556, 1586], "size": [4, 6, 23, 29, 610, 625, 649, 700], "distribut": [4, 6, 29], "predict": [5, 7, 9, 11, 13], "absolut": [5, 21], "creat": [5, 9, 11, 12, 13, 18, 20, 30, 31, 32], "random": [5, 11, 26, 647, 655, 699, 705, 738], "cubic": [5, 11, 26, 888], "network": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 23, 26, 27, 28, 35, 585, 742, 848, 1121, 1614], "phase": [5, 7, 8, 9, 10, 12, 13, 31, 32, 586, 758, 1197, 1389], "object": [5, 31, 32], "appli": [5, 7, 9, 12, 13, 20], "stoke": [5, 7], "flow": [5, 7], "geometri": [6, 8, 10, 577, 595], "throat": [6, 11, 23, 27, 28, 29, 30, 67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 454, 500, 512, 668, 671, 673, 679, 693, 697, 700, 707, 712, 714, 883, 922, 960, 998, 1038, 1077, 1116, 1154, 1192, 1221, 1254, 1288, 1322, 1351, 1384, 1412, 1440, 1468, 1501, 1530, 1563, 1592], "us": [6, 21, 22, 28, 29, 30, 31, 33], "scipi": [6, 29], "stat": [6, 29], "class": [6, 31, 459, 1663], "directli": 6, "pre": 6, "defin": [6, 7, 12, 13, 30, 32], "model": [6, 15, 23, 29, 30, 31, 32, 35, 575, 585, 596, 610, 625, 640, 646, 649, 657, 662, 668, 671, 673, 679, 693, 697, 700, 707, 712, 714], "dispers": 7, "coeffici": [7, 20], "gener": [7, 26], "effect": [7, 8, 665], "volum": [7, 11, 662, 714], "perform": [7, 8, 10], "transient": [7, 24, 547], "advect": 7, "diffus": [7, 8, 9, 12, 23, 610, 767], "elut": 7, "curv": [7, 10, 12], "solv": [7, 20, 550, 1599, 1601, 1603, 1605, 1607, 1609, 1611, 1613], "find": [8, 28], "tortuos": 8, "physic": [8, 10, 592, 809], "fickian": [8, 9], "result": [8, 9], "format": [9, 28], "factor": [9, 23, 610, 625, 668], "simul": [10, 32, 33, 547, 1597], "mercuri": [10, 590, 1328], "intrus": 10, "porosimetri": 10, "add": [10, 1760], "poros": 11, "void": 11, "bulk": 11, "discuss": 11, "issu": 11, "domain": [11, 30, 477], "overlap": 11, "extract": 11, "obtain": 12, "rel": [12, 13], "ordinari": 12, "percol": [12, 13, 33], "satur": 12, "rate": [12, 20, 58, 150, 183, 248, 281, 314, 347, 381, 414, 447], "function": [12, 13, 22, 25, 551, 1614, 1663], "multiphas": [12, 13, 831], "conduct": [12, 13, 23, 32], "invas": [13, 33], "occup": 13, "contibut": 14, "scale": [15, 29, 32, 575, 739], "set": [16, 31], "attribut": [16, 31], "machineri": 16, "datatyp": 16, "i": [16, 17, 35], "enforc": 16, "can": 16, "access": 16, "dict": [16, 25], "kei": [16, 27, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 468, 488, 520, 535, 870, 909, 947, 985, 1025, 1064, 1103, 1141, 1179, 1209, 1241, 1275, 1309, 1339, 1371, 1400, 1428, 1456, 1488, 1518, 1550, 1580, 1696, 1708, 1722, 1785], "namespac": 16, "clean": 16, "collect": [16, 29, 547, 551, 575, 576, 585, 1597, 1614], "also": 16, "type": 16, "ar": [16, 27], "attach": 16, "befor": 16, "init": 16, "The": [17, 27, 28, 30, 31, 36, 459], "workspac": [17, 1777], "project": [17, 1740], "singleton": 17, "One": 17, "per": 17, "manag": 18, "cluster": 18, "illustr": 18, "fix": 18, "avail": 19, "matrix": [19, 20, 28, 1597], "solver": [19, 1597], "steadi": [20, 1597], "state": [20, 1597], "transport": [20, 22, 23, 24, 32, 427], "valu": [20, 27, 31, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 458, 476, 504, 525, 540, 887, 926, 964, 1002, 1042, 1081, 1120, 1158, 1196, 1225, 1258, 1292, 1326, 1355, 1388, 1416, 1444, 1472, 1505, 1534, 1567, 1596, 1701, 1715, 1727, 1795], "boundari": [20, 32], "condit": [20, 32], "system": 20, "equat": 20, "spars": [20, 27, 28], "matric": [20, 27], "explan": 21, "unit": 21, "pressur": 21, "v": [21, 23, 27], "gaug": 21, "convers": 21, "packag": 21, "challeng": 21, "reactiv": 22, "sourc": 22, "term": 22, "how": [22, 35], "work": 22, "singl": [23, 32], "conduit": [23, 27, 596], "shape": [23, 30, 668], "built": [23, 31], "deriv": 23, "arbitrari": 23, "hydraul": [23, 625], "element": 23, "numer": [25, 27], "python": [25, 35], "primer": 25, "list": 25, "flexibl": 25, "slow": 25, "numpi": [25, 27], "ndarrai": 25, "optim": 25, "vector": [25, 27, 712], "method": [25, 28, 30, 32], "versu": 25, "dictionari": [25, 27], "hold": 25, "thing": 25, "togeth": 25, "subclass": 25, "quick": 26, "cubictempl": [26, 927], "other": [26, 28], "lattic": 26, "delaunai": [26, 965], "voronoi": [26, 1159], "tessel": 26, "import": [26, 551], "storag": 27, "data": [27, 30, 551], "topologi": [27, 1614], "spreadsheet": 27, "analogi": 27, "rule": 27, "maintain": 27, "integr": [27, 547, 548], "all": 27, "convert": 27, "arrai": 27, "must": 27, "start": 27, "With": 27, "ani": 27, "scalar": 27, "expand": 27, "full": [27, 30], "length": [27, 29, 596, 679], "nest": 27, "name": 27, "allow": 27, "boolean": [27, 30], "treat": 27, "label": [27, 30, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 489, 507, 871, 910, 948, 986, 1026, 1065, 1104, 1142, 1180, 1210, 1242, 1276, 1310, 1340, 1372, 1401, 1429, 1457, 1489, 1519, 1551, 1581], "properti": [27, 29, 31], "lead": 27, "underscor": 27, "hidden": 27, "param": 27, "prefix": 27, "repres": 27, "adjac": [27, 28], "dens": 27, "represent": 28, "queri": 28, "manipul": [28, 1614], "coo": 28, "incid": 28, "neighor": 28, "neighbor": 28, "connect": 28, "remov": [28, 31, 1737, 1755, 1772], "ad": [28, 29, 31], "assign": [29, 31, 32], "geometr": 29, "manual": [29, 32, 33], "from": 29, "comput": 29, "surfac": [29, 657, 707], "area": [29, 640, 657, 673, 707], "librari": 29, "predefin": [29, 30], "custom": [29, 30, 31], "overwrit": 29, "them": 29, "Their": 29, "argument": [29, 30], "introduct": 29, "depend": 29, "handler": 29, "mode": 30, "mask": 30, "set_label": [30, 61, 91, 122, 153, 186, 220, 251, 284, 317, 350, 384, 417, 450, 498, 511, 881, 920, 958, 996, 1036, 1075, 1114, 1152, 1190, 1219, 1252, 1286, 1320, 1349, 1382, 1410, 1438, 1466, 1499, 1528, 1561, 1590], "sytax": 30, "read": 30, "write": [30, 31], "subdomain": 30, "chang": 30, "locat": 30, "mix": 30, "mani": 30, "differ": [30, 725, 1763], "part": 31, "1": 31, "direct": 31, "constant": [31, 724], "water": [31, 591, 1569], "specif": 31, "your": 31, "own": 31, "common": 31, "fluid": 31, "2": 31, "speci": [31, 1417], "mixtur": [31, 779, 1356], "pure": 31, "ga": [31, 588], "liquid": [31, 589], "get": [31, 46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 464, 484, 518, 533, 864, 903, 941, 979, 1019, 1058, 1097, 1135, 1173, 1205, 1235, 1269, 1303, 1335, 1365, 1396, 1424, 1452, 1482, 1514, 1544, 1576, 1694, 1706, 1720, 1783], "composit": 31, "explor": 31, "featur": 31, "info": 31, "compon": 31, "mole": 31, "fraction": [31, 726], "get_comp_v": [31, 1236, 1270, 1304, 1366, 1483, 1545], "check": 31, "consist": 31, "check_mixture_health": [31, 1230, 1264, 1298, 1360, 1477, 1539], "retriev": 31, "wildcard": 31, "syntax": 31, "viscos": [32, 802], "algorithm": [32, 33, 37, 72], "rigor": 32, "drainag": [33, 98], "implement": 33, "draing": 33, "process": 33, "invasionpercol": [33, 196], "option": 34, "spyder": 34, "interact": 34, "plot": 34, "jupyt": 34, "notebook": 34, "paraview": 34, "framework": 35, "what": 35, "star": 35, "To": 35, "cite": 35, "citat": 35, "instal": 36, "dev": 36, "version": 36, "easi": 36, "wai": 36, "hard": 36, "correct": 36, "where": 36, "": 36, "my": 36, "conda": 36, "prompt": 36, "window": 36, "mac": 36, "linux": 36, "advectiondiffus": 38, "clear": [39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 362, 395, 428, 461, 480, 515, 527, 853, 892, 930, 968, 1006, 1047, 1086, 1124, 1162, 1201, 1231, 1265, 1299, 1331, 1361, 1392, 1420, 1448, 1478, 1510, 1540, 1572, 1691, 1703, 1717, 1730, 1748, 1761, 1778], "clear_bc": [40, 74, 101, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429], "clear_rate_bc": [41, 133, 166, 231, 264, 297, 330, 364, 397, 430], "clear_value_bc": [42, 134, 167, 232, 265, 298, 331, 365, 398, 431], "copi": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 366, 399, 432, 462, 481, 516, 528, 854, 893, 931, 969, 1007, 1048, 1087, 1125, 1163, 1202, 1232, 1266, 1300, 1332, 1362, 1393, 1421, 1449, 1479, 1511, 1541, 1573, 1692, 1704, 1718, 1731, 1742, 1749, 1762, 1780], "filter_by_label": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 482, 506, 857, 896, 934, 972, 1010, 1051, 1090, 1128, 1166, 1203, 1233, 1267, 1301, 1333, 1363, 1394, 1422, 1450, 1480, 1512, 1542, 1574], "fromkei": [45, 77, 104, 137, 170, 202, 235, 268, 301, 334, 368, 401, 434, 463, 483, 517, 532, 863, 902, 940, 978, 1018, 1057, 1096, 1134, 1172, 1204, 1234, 1268, 1302, 1334, 1364, 1395, 1423, 1451, 1481, 1513, 1543, 1575, 1693, 1705, 1719, 1782], "get_conduit_data": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 465, 485, 866, 905, 943, 981, 1021, 1060, 1099, 1137, 1175, 1206, 1237, 1271, 1305, 1336, 1367, 1397, 1425, 1453, 1484, 1515, 1546, 1577], "interpolate_data": [48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 466, 486, 868, 907, 945, 983, 1023, 1062, 1101, 1139, 1177, 1207, 1239, 1273, 1307, 1337, 1369, 1398, 1426, 1454, 1486, 1516, 1548, 1578], "item": [49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 467, 487, 519, 534, 869, 908, 946, 984, 1024, 1063, 1102, 1140, 1178, 1208, 1240, 1274, 1308, 1338, 1370, 1399, 1427, 1455, 1487, 1517, 1549, 1579, 1695, 1707, 1721, 1784], "num_por": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 490, 508, 873, 912, 950, 988, 1028, 1067, 1106, 1144, 1182, 1211, 1243, 1277, 1311, 1341, 1373, 1402, 1430, 1458, 1490, 1520, 1552, 1582], "num_throat": [53, 85, 112, 145, 178, 210, 243, 276, 309, 342, 376, 409, 442, 491, 509, 874, 913, 951, 989, 1029, 1068, 1107, 1145, 1183, 1212, 1244, 1278, 1312, 1342, 1374, 1403, 1431, 1459, 1491, 1521, 1553, 1583], "pop": [54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 377, 410, 443, 469, 492, 521, 536, 875, 914, 952, 990, 1030, 1069, 1108, 1146, 1184, 1213, 1245, 1279, 1313, 1343, 1375, 1404, 1432, 1460, 1492, 1522, 1554, 1584, 1697, 1709, 1723, 1736, 1754, 1771, 1789], "popitem": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 470, 493, 522, 537, 876, 915, 953, 991, 1031, 1070, 1109, 1147, 1185, 1214, 1246, 1280, 1314, 1344, 1376, 1405, 1433, 1461, 1493, 1523, 1555, 1585, 1698, 1710, 1724, 1790], "prop": [57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 471, 495, 878, 917, 955, 993, 1033, 1072, 1111, 1149, 1187, 1216, 1248, 1282, 1316, 1346, 1378, 1407, 1435, 1463, 1495, 1525, 1557, 1587], "run": [59, 119, 151, 184, 217, 249, 282, 315, 348, 382, 415, 448], "set_bc": [60, 90, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449], "set_outflow_bc": [62, 351], "set_rate_bc": [63, 154, 187, 252, 285, 318, 352, 385, 418, 451], "set_sourc": [64, 155, 188, 253, 286, 319, 353, 386, 419], "set_value_bc": [65, 156, 189, 254, 287, 320, 354, 387, 420, 452], "setdefault": [66, 92, 124, 157, 190, 222, 255, 288, 321, 355, 388, 421, 453, 472, 499, 523, 538, 882, 921, 959, 997, 1037, 1076, 1115, 1153, 1191, 1220, 1253, 1287, 1321, 1350, 1383, 1411, 1439, 1467, 1500, 1529, 1562, 1591, 1699, 1711, 1725, 1793], "to_indic": [68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 455, 473, 501, 884, 923, 961, 999, 1039, 1078, 1117, 1155, 1193, 1222, 1255, 1289, 1323, 1352, 1385, 1413, 1441, 1469, 1502, 1531, 1564, 1593], "to_mask": [69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 456, 474, 502, 885, 924, 962, 1000, 1040, 1079, 1118, 1156, 1194, 1223, 1256, 1290, 1324, 1353, 1386, 1414, 1442, 1470, 1503, 1532, 1565, 1594], "updat": [70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 457, 475, 503, 524, 539, 886, 925, 963, 1001, 1041, 1080, 1119, 1157, 1195, 1224, 1257, 1291, 1325, 1354, 1387, 1415, 1443, 1471, 1504, 1533, 1566, 1595, 1700, 1714, 1726, 1776, 1794], "apply_trap": [99, 197], "pc_curv": [113, 211], "reset": [118, 216], "set_inlet_bc": [121, 219], "set_outlet_bc": [123, 221], "fickiandiffus": 130, "fourierconduct": 163, "ohmicconduct": 228, "reactivetransport": 261, "stokesflow": 294, "transientadvectiondiffus": 327, "transientfickiandiffus": 361, "transientreactivetransport": 394, "core": 459, "main": 459, "base": 459, "modelsmixin": 459, "base2": 460, "add_model": [478, 542, 851, 890, 928, 966, 1004, 1045, 1084, 1122, 1160, 1199, 1228, 1262, 1296, 1329, 1358, 1390, 1418, 1446, 1475, 1508, 1537, 1570], "add_model_collect": [479, 543, 852, 891, 929, 967, 1005, 1046, 1085, 1123, 1161, 1200, 1229, 1263, 1297, 1330, 1359, 1391, 1419, 1447, 1476, 1509, 1538, 1571], "regenerate_model": [496, 544, 879, 918, 956, 994, 1034, 1073, 1112, 1150, 1188, 1217, 1249, 1283, 1317, 1347, 1379, 1408, 1436, 1464, 1496, 1526, 1558, 1588], "run_model": [497, 545, 880, 919, 957, 995, 1035, 1074, 1113, 1151, 1189, 1218, 1251, 1285, 1319, 1348, 1381, 1409, 1437, 1465, 1498, 1527, 1560, 1589], "labelmixin": 505, "modelwrapp": 513, "__call__": [514, 1665], "modelsdict": 526, "dependency_graph": 529, "dependency_list": 530, "dependency_map": 531, "modelsmixin2": 541, "parsermixin": 546, "od": 547, "scipyrk45": 549, "io": 551, "export": 551, "network_from_csv": 552, "network_from_jsongraph": 553, "network_from_marock": 554, "network_from_networkx": 555, "network_from_pergeo": 556, "network_from_porespi": 557, "network_from_statoil": 558, "network_to_comsol": 559, "network_to_csv": 560, "network_to_jsongraph": 561, "network_to_networkx": 562, "network_to_panda": 563, "network_to_pergeo": 564, "network_to_salom": 565, "network_to_stl": 566, "print_hdf5": 567, "project_to_csv": 568, "project_to_dict": 569, "project_to_hdf5": 570, "project_to_panda": 571, "project_to_paraview": 572, "project_to_vtk": 573, "project_to_xdmf": 574, "circles_and_rectangl": [578, 597, 611, 626, 680], "cones_and_cylind": [579, 598, 612, 627, 681], "cubes_and_cuboid": [580, 599, 613, 628, 682], "pyramids_and_cuboid": [581, 606, 621, 636, 689], "spheres_and_cylind": [582, 607, 622, 637, 678, 690], "squares_and_rectangl": [583, 608, 623, 638, 691], "trapezoids_and_rectangl": [584, 609, 624, 639, 692], "air": [587, 1198], "standard": 594, "conduit_length": 596, "hybrid_cones_and_cylind": [600, 614, 629, 683], "hybrid_pyramids_and_cuboid": [601, 615, 630, 684], "hybrid_trapezoids_and_rectangl": [602, 616, 631, 685], "intersecting_con": [603, 617, 632, 686], "intersecting_pyramid": [604, 618, 633, 687], "intersecting_trapezoid": [605, 619, 634, 688], "diffusive_size_factor": 610, "ncylinders_in_seri": [620, 635], "hydraulic_size_factor": 625, "pore_cross_sectional_area": 640, "cross": [640, 673], "section": [640, 673], "circl": [641, 658, 663], "cone": 642, "cube": [643, 659, 664], "sphere": [644, 660, 666], "squar": [645, 661, 667], "pore_se": 646, "seed": [646, 697], "spatially_correl": 648, "pore_s": 649, "equivalent_diamet": [650, 701], "from_neighbor_throat": [651, 728], "generic_distribut": [652, 703, 729], "largest_spher": 653, "normal": [654, 704, 734, 735], "weibul": [656, 706, 741], "pore_surface_area": 657, "pore_volum": 662, "throat_capillary_shape_factor": 668, "capillari": 668, "jenkins_rao": 669, "mason_morrow": 670, "throat_centroid": 671, "centroid": 671, "pore_coord": 672, "throat_cross_sectional_area": 673, "cuboid": [674, 694, 708, 715], "cylind": [675, 695, 709, 716], "rectangl": [676, 696, 711, 720], "throat_endpoint": 677, "throat_length": 679, "throat_perimet": 693, "perimet": 693, "throat_se": 697, "from_neighbor_por": [698, 702, 727], "throat_siz": 700, "throat_surface_area": 707, "extrus": [710, 717], "throat_vector": 712, "pore_to_por": 713, "throat_volum": 714, "len": 718, "pendular_r": 719, "misc": [721, 776], "miscellan": 721, "blank": 722, "clip": 723, "generic_funct": 730, "invert": 731, "linear": [732, 839], "match_histogram": 733, "polynomi": 736, "product": 737, "summat": 740, "bidirectional_throat": 743, "cluster_numb": 744, "cluster_s": 745, "coordination_numb": 746, "count_coincident_por": 747, "distance_to_furthest_neighbor": 748, "distance_to_nearest_neighbor": 749, "distance_to_nearest_por": 750, "duplicate_throat": 751, "find_coincident_por": 752, "headless_throat": 753, "isolated_por": 754, "looped_throat": 755, "pore_to_pore_dist": 756, "reversed_throat": 757, "chemicals_wrapp": 759, "critical_prop": 760, "densiti": 761, "ideal_ga": 762, "liquid_mixture_costald": 763, "liquid_pure_costald": 764, "mass_to_molar": 765, "water_correl": [766, 790, 797, 801, 808], "gas_mixture_c": 768, "gas_mixture_fesg": 769, "liquid_mixture_tc": 770, "heat_capac": 771, "gas_mixture_yweight": 772, "gas_pure_trc": 773, "liquid_mixture_xweight": [774, 806], "liquid_pure_rp": 775, "mix_and_match": 777, "mole_to_mass_fract": [778, 783], "from_compon": 780, "mixing_rul": 781, "mole_summ": 782, "salin": 784, "partition_coeffici": 785, "gaseous_species_in_wat": 786, "surface_tens": 787, "liquid_mixture_wsd": 788, "liquid_pure_bb": 789, "thermal_conduct": [791, 845], "gas_mixture_whz": 792, "gas_pure_gismr": 793, "liquid_mixture_dippr9h": 794, "liquid_pure_gismr": 795, "liquid_pure_sr": 796, "vapor_pressur": 798, "liquid_pure_antoin": 799, "liquid_pure_lk": 800, "gas_mixture_hz": 803, "gas_pure_gesmr": 804, "gas_pure_st": 805, "liquid_pure_l": 807, "ad_dif_conduct": 810, "ad_dif": 811, "capillary_pressur": 812, "purcel": [813, 829], "washburn": 814, "diffusive_conduct": 815, "generic_diffus": 816, "mixed_diffus": 817, "ordinary_diffus": 818, "taylor_aris_diffus": 819, "electrical_conduct": 820, "generic_electr": 821, "series_resistor": [822, 847], "hydraulic_conduct": 823, "generic_hydraul": 824, "hagen_poiseuil": 825, "valvatne_blunt": 826, "meniscu": 827, "general_toroid": 828, "sinusoid": 830, "conduit_conduct": 832, "late_fil": 833, "source_term": 834, "butler_volmer_conc": 835, "butler_volmer_voltag": 836, "exponenti": 837, "general_symbol": 838, "logarithm": 840, "natural_exponenti": 841, "natural_logarithm": 842, "power_law": 843, "standard_kinet": 844, "generic_therm": 846, "bodycenteredcub": 849, "add_boundary_por": [850, 889, 1044, 1083, 1615], "create_adjacency_matrix": [855, 894, 932, 970, 1008, 1049, 1088, 1126, 1164], "create_incidence_matrix": [856, 895, 933, 971, 1009, 1050, 1089, 1127, 1165], "find_connected_por": [858, 897, 935, 973, 1011, 1052, 1091, 1129, 1167], "find_connecting_throat": [859, 898, 936, 974, 1012, 1053, 1092, 1130, 1168], "find_nearby_por": [860, 899, 937, 975, 1013, 1054, 1093, 1131, 1169], "find_neighbor_por": [861, 900, 938, 976, 1014, 1055, 1094, 1132, 1170], "find_neighbor_throat": [862, 901, 939, 977, 1015, 1056, 1095, 1133, 1171], "get_adjacency_matrix": [865, 904, 942, 980, 1020, 1059, 1098, 1136, 1174], "get_incidence_matrix": [867, 906, 944, 982, 1022, 1061, 1100, 1138, 1176], "num_neighbor": [872, 911, 949, 987, 1027, 1066, 1105, 1143, 1181], "delaunayvoronoidu": 1003, "find_pore_hul": 1016, "find_throat_facet": 1017, "demo": 1043, "facecenteredcub": 1082, "binaryga": 1226, "add_comp": [1227, 1261, 1295, 1357, 1474, 1536], "get_mix_v": [1238, 1272, 1306, 1368, 1485, 1547], "remove_comp": [1250, 1284, 1318, 1380, 1497, 1559], "y": [1259, 1293, 1506], "gasmixtur": 1260, "liquidmixtur": 1294, "x": [1327, 1568], "standardga": 1445, "standardgasmixtur": 1473, "standardliquid": 1507, "standardliquidmixtur": 1535, "basesolv": 1598, "directsolv": 1600, "iterativesolv": 1602, "petsclinearsolv": 1604, "pardisospsolv": 1606, "pyamgrugestubensolv": 1608, "scipycg": 1610, "scipyspsolv": 1612, "topotool": 1614, "add_reservoir_por": 1616, "bond_percol": 1617, "clone_por": 1618, "connect_por": 1619, "conns_to_am": 1620, "dimension": 1621, "drop_sit": 1622, "extend": [1623, 1733, 1751], "filter_pores_by_z": 1624, "find_clust": 1625, "find_connected_sit": 1626, "find_connecting_bond": 1627, "find_interface_throat": 1628, "find_isolated_clust": 1629, "find_neighbor_bond": 1630, "find_neighbor_sit": 1631, "find_path": 1632, "find_surface_por": 1633, "generate_base_point": 1634, "get_domain_area": 1635, "get_domain_length": 1636, "get_shap": 1637, "get_spac": 1638, "hull_centroid": 1639, "is_fully_connect": 1640, "iscoplanar": 1641, "isoutsid": 1642, "ispercol": 1643, "issymmetr": 1644, "istriangular": 1645, "istril": 1646, "istriu": 1647, "label_fac": 1648, "merge_network": 1649, "merge_por": 1650, "reduce_coordin": 1651, "reflect_base_point": 1652, "rotate_coord": 1653, "shear_coord": 1654, "site_percol": 1655, "stitch": 1656, "template_cylinder_annulu": 1657, "template_sphere_shel": 1658, "tri_to_am": 1659, "trim": 1660, "trim_disconnected_clust": 1661, "vor_to_am": 1662, "util": 1663, "helper": 1663, "docor": 1664, "dedent": [1666, 1667], "delete_kwarg": 1668, "delete_kwargs_": 1669, "delete_param": 1670, "delete_params_": 1671, "delete_typ": 1672, "delete_types_": 1673, "get_docstr": 1674, "get_extended_summari": 1675, "get_extended_summaryf": 1676, "get_full_descript": 1677, "get_full_descriptionf": 1678, "get_sect": 1679, "get_sectionsf": 1680, "get_summari": 1681, "get_summaryf": 1682, "keep_param": 1683, "keep_params_": 1684, "keep_typ": 1685, "keep_types_": 1686, "save_docstr": 1687, "with_ind": [1688, 1689], "healthdict": 1690, "nesteddict": 1702, "to_dict": 1712, "unravel": 1713, "printabledict": 1716, "printablelist": 1728, "append": [1729, 1741, 1745, 1747], "count": [1732, 1750], "index": [1734, 1752], "insert": [1735, 1753], "revers": [1738, 1756], "sort": [1739, 1757], "settingsattr": 1743, "simplelist": 1744, "typedlist": 1746, "typedmixin": 1758, "typedset": 1759, "difference_upd": 1764, "discard": 1765, "intersect": 1766, "intersection_upd": 1767, "isdisjoint": 1768, "issubset": 1769, "issuperset": 1770, "symmetric_differ": 1773, "symmetric_difference_upd": 1774, "union": 1775, "close_project": 1779, "copy_project": 1781, "load_project": 1786, "load_workspac": 1787, "new_project": 1788, "save_project": 1791, "save_workspac": 1792, "check_data_health": 1796, "check_network_health": 1797, "dict_to_struct": 1798, "flat_list": 1799, "get_mixture_model_arg": 1800, "get_printable_label": 1801, "get_printable_prop": 1802, "ignore_warn": 1803, "is_symmetr": 1804, "is_transi": 1805, "is_valid_propnam": 1806, "methods_to_t": 1807, "models_to_t": 1808, "sanitize_dict": 1809, "struct_to_dict": 1810, "modul": 1811}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"clear_rate_BCs": [[133, "clear-rate-bcs"], [166, "clear-rate-bcs"], [430, "clear-rate-bcs"], [397, "clear-rate-bcs"], [364, "clear-rate-bcs"], [330, "clear-rate-bcs"], [297, "clear-rate-bcs"], [231, "clear-rate-bcs"], [264, "clear-rate-bcs"], [41, "clear-rate-bcs"]], "values": [[129, "values"], [97, "values"], [162, "values"], [1727, "values"], [1715, "values"], [1795, "values"], [1701, "values"], [1596, "values"], [1534, "values"], [1567, "values"], [1444, "values"], [1472, "values"], [1505, "values"], [1355, "values"], [1416, "values"], [1388, "values"], [1258, "values"], [1326, "values"], [1292, "values"], [1196, "values"], [1225, "values"], [1158, "values"], [1081, "values"], [1120, "values"], [1002, "values"], [964, "values"], [1042, "values"], [926, "values"], [887, "values"], [476, "values"], [540, "values"], [525, "values"], [504, "values"], [393, "values"], [426, "values"], [458, "values"], [360, "values"], [293, "values"], [326, "values"], [260, "values"], [227, "values"], [195, "values"], [71, "values"]], "set_source": [[188, "set-source"], [155, "set-source"], [419, "set-source"], [386, "set-source"], [353, "set-source"], [319, "set-source"], [286, "set-source"], [253, "set-source"], [64, "set-source"]], "set_inlet_BC": [[121, "set-inlet-bc"], [219, "set-inlet-bc"]], "get_conduit_data": [[139, "get-conduit-data"], [106, "get-conduit-data"], [172, "get-conduit-data"], [1546, "get-conduit-data"], [1577, "get-conduit-data"], [1484, "get-conduit-data"], [1515, "get-conduit-data"], [1425, "get-conduit-data"], [1453, "get-conduit-data"], [1367, "get-conduit-data"], [1397, "get-conduit-data"], [1336, "get-conduit-data"], [1305, "get-conduit-data"], [1271, "get-conduit-data"], [1237, "get-conduit-data"], [1206, "get-conduit-data"], [1175, "get-conduit-data"], [1060, "get-conduit-data"], [1099, "get-conduit-data"], [1137, "get-conduit-data"], [1021, "get-conduit-data"], [981, "get-conduit-data"], [905, "get-conduit-data"], [943, "get-conduit-data"], [866, "get-conduit-data"], [485, "get-conduit-data"], [403, "get-conduit-data"], [465, "get-conduit-data"], [436, "get-conduit-data"], [336, "get-conduit-data"], [303, "get-conduit-data"], [370, "get-conduit-data"], [237, "get-conduit-data"], [204, "get-conduit-data"], [270, "get-conduit-data"], [47, "get-conduit-data"], [79, "get-conduit-data"]], "filter_by_label": [[169, "filter-by-label"], [103, "filter-by-label"], [136, "filter-by-label"], [1542, "filter-by-label"], [1574, "filter-by-label"], [1512, "filter-by-label"], [1450, "filter-by-label"], [1480, "filter-by-label"], [1394, "filter-by-label"], [1333, "filter-by-label"], [1363, "filter-by-label"], [1422, "filter-by-label"], [1267, "filter-by-label"], [1301, "filter-by-label"], [1203, "filter-by-label"], [1233, "filter-by-label"], [1166, "filter-by-label"], [1090, "filter-by-label"], [1051, "filter-by-label"], [1128, "filter-by-label"], [1010, "filter-by-label"], [972, "filter-by-label"], [857, "filter-by-label"], [934, "filter-by-label"], [896, "filter-by-label"], [506, "filter-by-label"], [482, "filter-by-label"], [400, "filter-by-label"], [433, "filter-by-label"], [300, "filter-by-label"], [367, "filter-by-label"], [333, "filter-by-label"], [201, "filter-by-label"], [267, "filter-by-label"], [234, "filter-by-label"], [44, "filter-by-label"], [76, "filter-by-label"]], "set_BC": [[120, "set-bc"], [152, "set-bc"], [185, "set-bc"], [383, "set-bc"], [449, "set-bc"], [416, "set-bc"], [316, "set-bc"], [349, "set-bc"], [218, "set-bc"], [283, "set-bc"], [250, "set-bc"], [60, "set-bc"], [90, "set-bc"]], "setdefault": [[157, "setdefault"], [124, "setdefault"], [1725, "setdefault"], [1793, "setdefault"], [1711, "setdefault"], [1699, "setdefault"], [1529, "setdefault"], [1562, "setdefault"], [1591, "setdefault"], [1467, "setdefault"], [1500, "setdefault"], [1439, "setdefault"], [1350, "setdefault"], [1411, "setdefault"], [1383, "setdefault"], [1253, "setdefault"], [1321, "setdefault"], [1287, "setdefault"], [1220, "setdefault"], [1153, "setdefault"], [1191, "setdefault"], [1076, "setdefault"], [1115, "setdefault"], [997, "setdefault"], [1037, "setdefault"], [959, "setdefault"], [921, "setdefault"], [882, "setdefault"], [499, "setdefault"], [523, "setdefault"], [538, "setdefault"], [421, "setdefault"], [472, "setdefault"], [388, "setdefault"], [453, "setdefault"], [321, "setdefault"], [288, "setdefault"], [355, "setdefault"], [190, "setdefault"], [255, "setdefault"], [222, "setdefault"], [92, "setdefault"], [66, "setdefault"]], "clear": [[131, "clear"], [100, "clear"], [164, "clear"], [1778, "clear"], [1761, "clear"], [1717, "clear"], [1748, "clear"], [1730, "clear"], [1691, "clear"], [1703, "clear"], [1540, "clear"], [1572, "clear"], [1448, "clear"], [1478, "clear"], [1510, "clear"], [1392, "clear"], [1331, "clear"], [1361, "clear"], [1420, "clear"], [1265, "clear"], [1299, "clear"], [1162, "clear"], [1231, "clear"], [1201, "clear"], [1047, "clear"], [1086, "clear"], [1124, "clear"], [1006, "clear"], [968, "clear"], [892, "clear"], [930, "clear"], [853, "clear"], [515, "clear"], [480, "clear"], [527, "clear"], [428, "clear"], [461, "clear"], [395, "clear"], [295, "clear"], [328, "clear"], [362, "clear"], [198, "clear"], [262, "clear"], [229, "clear"], [39, "clear"], [73, "clear"]], "reset": [[118, "reset"], [216, "reset"]], "pop": [[114, "pop"], [179, "pop"], [146, "pop"], [1771, "pop"], [1754, "pop"], [1789, "pop"], [1723, "pop"], [1736, "pop"], [1697, "pop"], [1709, "pop"], [1522, "pop"], [1584, "pop"], [1554, "pop"], [1492, "pop"], [1432, "pop"], [1460, "pop"], [1343, "pop"], [1404, "pop"], [1375, "pop"], [1245, "pop"], [1279, "pop"], [1313, "pop"], [1146, "pop"], [1184, "pop"], [1213, "pop"], [1069, "pop"], [1108, "pop"], [1030, "pop"], [952, "pop"], [990, "pop"], [875, "pop"], [914, "pop"], [521, "pop"], [492, "pop"], [536, "pop"], [469, "pop"], [410, "pop"], [443, "pop"], [310, "pop"], [343, "pop"], [377, "pop"], [277, "pop"], [244, "pop"], [212, "pop"], [54, "pop"], [86, "pop"]], "clear_BCs": [[101, "clear-bcs"], [132, "clear-bcs"], [165, "clear-bcs"], [396, "clear-bcs"], [429, "clear-bcs"], [329, "clear-bcs"], [363, "clear-bcs"], [296, "clear-bcs"], [199, "clear-bcs"], [230, "clear-bcs"], [263, "clear-bcs"], [40, "clear-bcs"], [74, "clear-bcs"]], "pores": [[148, "pores"], [181, "pores"], [116, "pores"], [1524, "pores"], [1586, "pores"], [1556, "pores"], [1462, "pores"], [1494, "pores"], [1434, "pores"], [1377, "pores"], [1406, "pores"], [1345, "pores"], [1315, "pores"], [1281, "pores"], [1247, "pores"], [1215, "pores"], [1148, "pores"], [1186, "pores"], [1071, "pores"], [1110, "pores"], [992, "pores"], [954, "pores"], [1032, "pores"], [877, "pores"], [916, "pores"], [510, "pores"], [494, "pores"], [445, "pores"], [412, "pores"], [345, "pores"], [312, "pores"], [379, "pores"], [246, "pores"], [279, "pores"], [214, "pores"], [88, "pores"], [56, "pores"]], "set_value_BC": [[156, "set-value-bc"], [189, "set-value-bc"], [387, "set-value-bc"], [452, "set-value-bc"], [420, "set-value-bc"], [354, "set-value-bc"], [287, "set-value-bc"], [320, "set-value-bc"], [254, "set-value-bc"], [65, "set-value-bc"]], "set_rate_BC": [[154, "set-rate-bc"], [187, "set-rate-bc"], [451, "set-rate-bc"], [385, "set-rate-bc"], [418, "set-rate-bc"], [285, "set-rate-bc"], [352, "set-rate-bc"], [318, "set-rate-bc"], [252, "set-rate-bc"], [63, "set-rate-bc"]], "interpolate_data": [[140, "interpolate-data"], [107, "interpolate-data"], [173, "interpolate-data"], [1548, "interpolate-data"], [1578, "interpolate-data"], [1486, "interpolate-data"], [1516, "interpolate-data"], [1454, "interpolate-data"], [1426, "interpolate-data"], [1398, "interpolate-data"], [1337, "interpolate-data"], [1369, "interpolate-data"], [1307, "interpolate-data"], [1239, "interpolate-data"], [1273, "interpolate-data"], [1177, "interpolate-data"], [1207, "interpolate-data"], [1139, "interpolate-data"], [1101, "interpolate-data"], [1062, "interpolate-data"], [1023, "interpolate-data"], [983, "interpolate-data"], [868, "interpolate-data"], [907, "interpolate-data"], [945, "interpolate-data"], [486, "interpolate-data"], [404, "interpolate-data"], [466, "interpolate-data"], [437, "interpolate-data"], [337, "interpolate-data"], [371, "interpolate-data"], [304, "interpolate-data"], [205, "interpolate-data"], [238, "interpolate-data"], [271, "interpolate-data"], [80, "interpolate-data"], [48, "interpolate-data"]], "get": [[105, "get"], [171, "get"], [138, "get"], [1783, "get"], [1720, "get"], [1694, "get"], [1706, "get"], [1544, "get"], [1576, "get"], [1514, "get"], [1482, "get"], [1452, "get"], [1396, "get"], [1335, "get"], [1424, "get"], [1365, "get"], [1303, "get"], [1235, "get"], [1269, "get"], [1173, "get"], [1205, "get"], [1058, "get"], [1135, "get"], [1097, "get"], [1019, "get"], [979, "get"], [941, "get"], [864, "get"], [903, "get"], [533, "get"], [484, "get"], [518, "get"], [464, "get"], [435, "get"], [402, "get"], [302, "get"], [335, "get"], [369, "get"], [203, "get"], [236, "get"], [269, "get"], [46, "get"], [78, "get"]], "copy": [[168, "copy"], [135, "copy"], [102, "copy"], [1718, "copy"], [1762, "copy"], [1780, "copy"], [1742, "copy"], [1731, "copy"], [1749, "copy"], [1692, "copy"], [1704, "copy"], [1541, "copy"], [1573, "copy"], [1479, "copy"], [1449, "copy"], [1511, "copy"], [1421, "copy"], [1332, "copy"], [1362, "copy"], [1393, "copy"], [1266, "copy"], [1300, "copy"], [1232, "copy"], [1202, "copy"], [1163, "copy"], [1087, "copy"], [1048, "copy"], [1125, "copy"], [1007, "copy"], [969, "copy"], [931, "copy"], [893, "copy"], [854, "copy"], [528, "copy"], [516, "copy"], [481, "copy"], [462, "copy"], [432, "copy"], [399, "copy"], [299, "copy"], [366, "copy"], [332, "copy"], [266, "copy"], [233, "copy"], [200, "copy"], [43, "copy"], [75, "copy"]], "labels": [[143, "labels"], [176, "labels"], [110, "labels"], [1581, "labels"], [1551, "labels"], [1429, "labels"], [1457, "labels"], [1519, "labels"], [1489, "labels"], [1401, "labels"], [1340, "labels"], [1372, "labels"], [1242, "labels"], [1276, "labels"], [1310, "labels"], [1180, "labels"], [1142, "labels"], [1210, "labels"], [1104, "labels"], [1065, "labels"], [986, "labels"], [1026, "labels"], [871, "labels"], [910, "labels"], [948, "labels"], [507, "labels"], [489, "labels"], [440, "labels"], [407, "labels"], [340, "labels"], [307, "labels"], [374, "labels"], [241, "labels"], [208, "labels"], [274, "labels"], [83, "labels"], [51, "labels"]], "to_indices": [[159, "to-indices"], [126, "to-indices"], [1593, "to-indices"], [1531, "to-indices"], [1564, "to-indices"], [1469, "to-indices"], [1502, "to-indices"], [1441, "to-indices"], [1385, "to-indices"], [1413, "to-indices"], [1352, "to-indices"], [1255, "to-indices"], [1323, "to-indices"], [1289, "to-indices"], [1222, "to-indices"], [1155, "to-indices"], [1193, "to-indices"], [1078, "to-indices"], [1117, "to-indices"], [999, "to-indices"], [1039, "to-indices"], [961, "to-indices"], [884, "to-indices"], [923, "to-indices"], [501, "to-indices"], [473, "to-indices"], [390, "to-indices"], [455, "to-indices"], [423, "to-indices"], [323, "to-indices"], [290, "to-indices"], [357, "to-indices"], [192, "to-indices"], [224, "to-indices"], [257, "to-indices"], [94, "to-indices"], [68, "to-indices"]], "num_pores": [[111, "num-pores"], [144, "num-pores"], [177, "num-pores"], [1552, "num-pores"], [1520, "num-pores"], [1582, "num-pores"], [1430, "num-pores"], [1490, "num-pores"], [1458, "num-pores"], [1402, "num-pores"], [1373, "num-pores"], [1341, "num-pores"], [1311, "num-pores"], [1277, "num-pores"], [1243, "num-pores"], [1211, "num-pores"], [1144, "num-pores"], [1182, "num-pores"], [1106, "num-pores"], [1067, "num-pores"], [950, "num-pores"], [988, "num-pores"], [1028, "num-pores"], [912, "num-pores"], [873, "num-pores"], [508, "num-pores"], [490, "num-pores"], [408, "num-pores"], [441, "num-pores"], [308, "num-pores"], [375, "num-pores"], [341, "num-pores"], [242, "num-pores"], [275, "num-pores"], [209, "num-pores"], [52, "num-pores"], [84, "num-pores"]], "popitem": [[115, "popitem"], [147, "popitem"], [180, "popitem"], [1724, "popitem"], [1790, "popitem"], [1710, "popitem"], [1698, "popitem"], [1523, "popitem"], [1585, "popitem"], [1555, "popitem"], [1433, "popitem"], [1461, "popitem"], [1493, "popitem"], [1344, "popitem"], [1376, "popitem"], [1405, "popitem"], [1314, "popitem"], [1246, "popitem"], [1280, "popitem"], [1147, "popitem"], [1185, "popitem"], [1214, "popitem"], [1070, "popitem"], [1109, "popitem"], [953, "popitem"], [1031, "popitem"], [991, "popitem"], [876, "popitem"], [915, "popitem"], [522, "popitem"], [493, "popitem"], [537, "popitem"], [444, "popitem"], [411, "popitem"], [470, "popitem"], [311, "popitem"], [344, "popitem"], [378, "popitem"], [213, "popitem"], [278, "popitem"], [245, "popitem"], [55, "popitem"], [87, "popitem"]], "num_throats": [[112, "num-throats"], [145, "num-throats"], [178, "num-throats"], [1583, "num-throats"], [1553, "num-throats"], [1521, "num-throats"], [1459, "num-throats"], [1431, "num-throats"], [1491, "num-throats"], [1342, "num-throats"], [1403, "num-throats"], [1374, "num-throats"], [1244, "num-throats"], [1278, "num-throats"], [1312, "num-throats"], [1145, "num-throats"], [1183, "num-throats"], [1212, "num-throats"], [1107, "num-throats"], [1068, "num-throats"], [951, "num-throats"], [1029, "num-throats"], [989, "num-throats"], [874, "num-throats"], [913, "num-throats"], [491, "num-throats"], [509, "num-throats"], [442, "num-throats"], [409, "num-throats"], [376, "num-throats"], [309, "num-throats"], [342, "num-throats"], [243, "num-throats"], [210, "num-throats"], [276, "num-throats"], [85, "num-throats"], [53, "num-throats"]], "update": [[128, "update"], [96, "update"], [161, "update"], [1794, "update"], [1726, "update"], [1776, "update"], [1714, "update"], [1700, "update"], [1533, "update"], [1595, "update"], [1566, "update"], [1504, "update"], [1443, "update"], [1471, "update"], [1387, "update"], [1415, "update"], [1354, "update"], [1257, "update"], [1325, "update"], [1291, "update"], [1195, "update"], [1157, "update"], [1224, "update"], [1080, "update"], [1119, "update"], [963, "update"], [1041, "update"], [1001, "update"], [925, "update"], [886, "update"], [503, "update"], [539, "update"], [475, "update"], [524, "update"], [425, "update"], [457, "update"], [392, "update"], [359, "update"], [325, "update"], [292, "update"], [194, "update"], [259, "update"], [226, "update"], [70, "update"]], "clear_value_BCs": [[134, "clear-value-bcs"], [167, "clear-value-bcs"], [431, "clear-value-bcs"], [398, "clear-value-bcs"], [331, "clear-value-bcs"], [365, "clear-value-bcs"], [298, "clear-value-bcs"], [232, "clear-value-bcs"], [265, "clear-value-bcs"], [42, "clear-value-bcs"]], "keys": [[175, "keys"], [142, "keys"], [109, "keys"], [1785, "keys"], [1722, "keys"], [1708, "keys"], [1696, "keys"], [1580, "keys"], [1550, "keys"], [1488, "keys"], [1428, "keys"], [1518, "keys"], [1456, "keys"], [1400, "keys"], [1371, "keys"], [1339, "keys"], [1275, "keys"], [1309, "keys"], [1241, "keys"], [1179, "keys"], [1209, "keys"], [1141, "keys"], [1103, "keys"], [1064, "keys"], [985, "keys"], [1025, "keys"], [947, "keys"], [909, "keys"], [870, "keys"], [520, "keys"], [488, "keys"], [535, "keys"], [468, "keys"], [439, "keys"], [406, "keys"], [339, "keys"], [306, "keys"], [373, "keys"], [273, "keys"], [240, "keys"], [207, "keys"], [82, "keys"], [50, "keys"]], "apply_trapping": [[99, "apply-trapping"], [197, "apply-trapping"]], "props": [[182, "props"], [149, "props"], [117, "props"], [1557, "props"], [1525, "props"], [1587, "props"], [1463, "props"], [1435, "props"], [1495, "props"], [1407, "props"], [1378, "props"], [1346, "props"], [1248, "props"], [1316, "props"], [1282, "props"], [1187, "props"], [1216, "props"], [1149, "props"], [1111, "props"], [1072, "props"], [1033, "props"], [955, "props"], [993, "props"], [878, "props"], [917, "props"], [495, "props"], [413, "props"], [446, "props"], [380, "props"], [471, "props"], [313, "props"], [346, "props"], [215, "props"], [280, "props"], [247, "props"], [57, "props"], [89, "props"]], "to_mask": [[95, "to-mask"], [127, "to-mask"], [160, "to-mask"], [1532, "to-mask"], [1565, "to-mask"], [1594, "to-mask"], [1442, "to-mask"], [1503, "to-mask"], [1470, "to-mask"], [1353, "to-mask"], [1414, "to-mask"], [1386, "to-mask"], [1290, "to-mask"], [1324, "to-mask"], [1256, "to-mask"], [1194, "to-mask"], [1223, "to-mask"], [1156, "to-mask"], [1079, "to-mask"], [1118, "to-mask"], [1040, "to-mask"], [962, "to-mask"], [1000, "to-mask"], [924, "to-mask"], [885, "to-mask"], [502, "to-mask"], [424, "to-mask"], [456, "to-mask"], [391, "to-mask"], [474, "to-mask"], [358, "to-mask"], [324, "to-mask"], [291, "to-mask"], [193, "to-mask"], [225, "to-mask"], [258, "to-mask"], [69, "to-mask"]], "items": [[174, "items"], [108, "items"], [141, "items"], [1721, "items"], [1784, "items"], [1707, "items"], [1695, "items"], [1579, "items"], [1549, "items"], [1487, "items"], [1427, "items"], [1455, "items"], [1517, "items"], [1399, "items"], [1370, "items"], [1338, "items"], [1240, "items"], [1274, "items"], [1308, "items"], [1140, "items"], [1178, "items"], [1208, "items"], [1102, "items"], [1063, "items"], [1024, "items"], [984, "items"], [946, "items"], [869, "items"], [908, "items"], [519, "items"], [487, "items"], [534, "items"], [438, "items"], [467, "items"], [405, "items"], [372, "items"], [338, "items"], [305, "items"], [239, "items"], [206, "items"], [272, "items"], [49, "items"], [81, "items"]], "pc_curve": [[113, "pc-curve"], [211, "pc-curve"]], "run": [[151, "run"], [119, "run"], [184, "run"], [448, "run"], [382, "run"], [415, "run"], [315, "run"], [348, "run"], [282, "run"], [217, "run"], [249, "run"], [59, "run"]], "set_label": [[186, "set-label"], [153, "set-label"], [122, "set-label"], [1561, "set-label"], [1528, "set-label"], [1590, "set-label"], [1499, "set-label"], [1466, "set-label"], [1438, "set-label"], [1410, "set-label"], [1349, "set-label"], [1382, "set-label"], [1320, "set-label"], [1252, "set-label"], [1286, "set-label"], [1190, "set-label"], [1219, "set-label"], [1152, "set-label"], [1075, "set-label"], [1114, "set-label"], [1036, "set-label"], [996, "set-label"], [958, "set-label"], [881, "set-label"], [920, "set-label"], [498, "set-label"], [511, "set-label"], [417, "set-label"], [450, "set-label"], [384, "set-label"], [317, "set-label"], [350, "set-label"], [251, "set-label"], [220, "set-label"], [284, "set-label"], [91, "set-label"], [61, "set-label"]], "throats": [[125, "throats"], [158, "throats"], [1563, "throats"], [1592, "throats"], [1530, "throats"], [1501, "throats"], [1468, "throats"], [1440, "throats"], [1351, "throats"], [1384, "throats"], [1412, "throats"], [1288, "throats"], [1322, "throats"], [1254, "throats"], [1221, "throats"], [1154, "throats"], [1192, "throats"], [1077, "throats"], [1116, "throats"], [1038, "throats"], [960, "throats"], [998, "throats"], [922, "throats"], [883, "throats"], [512, "throats"], [500, "throats"], [389, "throats"], [422, "throats"], [454, "throats"], [322, "throats"], [356, "throats"], [289, "throats"], [191, "throats"], [256, "throats"], [223, "throats"], [67, "throats"], [93, "throats"]], "fromkeys": [[137, "fromkeys"], [104, "fromkeys"], [170, "fromkeys"], [1719, "fromkeys"], [1782, "fromkeys"], [1693, "fromkeys"], [1705, "fromkeys"], [1543, "fromkeys"], [1575, "fromkeys"], [1451, "fromkeys"], [1513, "fromkeys"], [1481, "fromkeys"], [1395, "fromkeys"], [1334, "fromkeys"], [1364, "fromkeys"], [1423, "fromkeys"], [1268, "fromkeys"], [1302, "fromkeys"], [1234, "fromkeys"], [1204, "fromkeys"], [1172, "fromkeys"], [1134, "fromkeys"], [1096, "fromkeys"], [1057, "fromkeys"], [978, "fromkeys"], [1018, "fromkeys"], [863, "fromkeys"], [902, "fromkeys"], [940, "fromkeys"], [517, "fromkeys"], [483, "fromkeys"], [532, "fromkeys"], [434, "fromkeys"], [401, "fromkeys"], [463, "fromkeys"], [301, "fromkeys"], [368, "fromkeys"], [334, "fromkeys"], [268, "fromkeys"], [235, "fromkeys"], [202, "fromkeys"], [77, "fromkeys"], [45, "fromkeys"]], "FickianDiffusion": [[130, "fickiandiffusion"]], "rate": [[183, "rate"], [150, "rate"], [414, "rate"], [381, "rate"], [447, "rate"], [314, "rate"], [347, "rate"], [248, "rate"], [281, "rate"], [58, "rate"]], "FourierConduction": [[163, "fourierconduction"]], "set_outlet_BC": [[123, "set-outlet-bc"], [221, "set-outlet-bc"]], "Drainage": [[98, "drainage"], [33, "drainage"]], "is_valid_propname": [[1806, "is-valid-propname"]], "is_transient": [[1805, "is-transient"]], "methods_to_table": [[1807, "methods-to-table"]], "sanitize_dict": [[1809, "sanitize-dict"]], "Module Reference": [[1811, "module-openpnm"]], "struct_to_dict": [[1810, "struct-to-dict"]], "models_to_table": [[1808, "models-to-table"]], "Workspace": [[1777, "workspace"]], "reverse": [[1756, "reverse"], [1738, "reverse"]], "symmetric_difference_update": [[1774, "symmetric-difference-update"]], "SimpleList": [[1744, "simplelist"]], "append": [[1729, "append"], [1741, "append"], [1745, "append"], [1747, "append"]], "check_data_health": [[1796, "check-data-health"]], "index": [[1752, "index"], [1734, "index"]], "isdisjoint": [[1768, "isdisjoint"]], "TypedList": [[1746, "typedlist"]], "insert": [[1735, "insert"], [1753, "insert"]], "count": [[1750, "count"], [1732, "count"]], "load_workspace": [[1787, "load-workspace"]], "dict_to_struct": [[1798, "dict-to-struct"]], "TypedSet": [[1759, "typedset"]], "copy_project": [[1781, "copy-project"]], "sort": [[1757, "sort"], [1739, "sort"]], "symmetric_difference": [[1773, "symmetric-difference"]], "issubset": [[1769, "issubset"]], "PrintableList": [[1728, "printablelist"]], "save_project": [[1791, "save-project"]], "difference": [[1763, "difference"], [725, "difference"]], "add": [[1760, "add"]], "issuperset": [[1770, "issuperset"]], "intersection_update": [[1767, "intersection-update"]], "union": [[1775, "union"]], "PrintableDict": [[1716, "printabledict"]], "discard": [[1765, "discard"]], "flat_list": [[1799, "flat-list"]], "save_workspace": [[1792, "save-workspace"]], "close_project": [[1779, "close-project"]], "TypedMixin": [[1758, "typedmixin"]], "remove": [[1772, "remove"], [1737, "remove"], [1755, "remove"]], "new_project": [[1788, "new-project"]], "get_printable_props": [[1802, "get-printable-props"]], "intersection": [[1766, "intersection"]], "SettingsAttr": [[1743, "settingsattr"]], "is_symmetric": [[1804, "is-symmetric"]], "unravel": [[1713, "unravel"]], "extend": [[1751, "extend"], [1733, "extend"], [1623, "extend"]], "check_network_health": [[1797, "check-network-health"]], "difference_update": [[1764, "difference-update"]], "get_mixture_model_args": [[1800, "get-mixture-model-args"]], "Project": [[1740, "project"]], "get_printable_labels": [[1801, "get-printable-labels"]], "to_dict": [[1712, "to-dict"]], "load_project": [[1786, "load-project"]], "ignore_warnings": [[1803, "ignore-warnings"]], "istriangular": [[1645, "istriangular"]], "reduce_coordination": [[1651, "reduce-coordination"]], "drop_sites": [[1622, "drop-sites"]], "get_domain_length": [[1636, "get-domain-length"]], "site_percolation": [[1655, "site-percolation"]], "vor_to_am": [[1662, "vor-to-am"]], "__call__": [[1665, "call"], [514, "call"]], "find_path": [[1632, "find-path"]], "ispercolating": [[1643, "ispercolating"]], "dimensionality": [[1621, "dimensionality"]], "istril": [[1646, "istril"]], "iscoplanar": [[1641, "iscoplanar"]], "reflect_base_points": [[1652, "reflect-base-points"]], "issymmetric": [[1644, "issymmetric"]], "filter_pores_by_z": [[1624, "filter-pores-by-z"]], "template_cylinder_annulus": [[1657, "template-cylinder-annulus"]], "istriu": [[1647, "istriu"]], "delete_types": [[1672, "delete-types"]], "get_extended_summaryf": [[1676, "get-extended-summaryf"]], "tri_to_am": [[1659, "tri-to-am"]], "generate_base_points": [[1634, "generate-base-points"]], "Docorator": [[1664, "docorator"]], "conns_to_am": [[1620, "conns-to-am"]], "get_sections": [[1679, "get-sections"]], "HealthDict": [[1690, "healthdict"]], "dedent": [[1666, "dedent"]], "keep_params": [[1683, "keep-params"]], "is_fully_connected": [[1640, "is-fully-connected"]], "trim": [[1660, "trim"]], "rotate_coords": [[1653, "rotate-coords"]], "keep_types_s": [[1686, "keep-types-s"]], "find_connecting_bonds": [[1627, "find-connecting-bonds"]], "delete_params": [[1670, "delete-params"]], "clone_pores": [[1618, "clone-pores"]], "dedents": [[1667, "dedents"]], "find_clusters": [[1625, "find-clusters"]], "find_surface_pores": [[1633, "find-surface-pores"]], "stitch": [[1656, "stitch"]], "find_interface_throats": [[1628, "find-interface-throats"]], "add_reservoir_pore": [[1616, "add-reservoir-pore"]], "bond_percolation": [[1617, "bond-percolation"]], "NestedDict": [[1702, "nesteddict"]], "merge_networks": [[1649, "merge-networks"]], "keep_types": [[1685, "keep-types"]], "label_faces": [[1648, "label-faces"]], "save_docstring": [[1687, "save-docstring"]], "connect_pores": [[1619, "connect-pores"]], "delete_kwargs_s": [[1669, "delete-kwargs-s"]], "shear_coords": [[1654, "shear-coords"]], "get_full_description": [[1677, "get-full-description"]], "get_spacing": [[1638, "get-spacing"]], "trim_disconnected_clusters": [[1661, "trim-disconnected-clusters"]], "delete_types_s": [[1673, "delete-types-s"]], "get_summaryf": [[1682, "get-summaryf"]], "with_indents": [[1689, "with-indents"]], "get_summary": [[1681, "get-summary"]], "get_shape": [[1637, "get-shape"]], "with_indent": [[1688, "with-indent"]], "get_docstring": [[1674, "get-docstring"]], "template_sphere_shell": [[1658, "template-sphere-shell"]], "delete_params_s": [[1671, "delete-params-s"]], "add_boundary_pores": [[1615, "add-boundary-pores"], [1083, "add-boundary-pores"], [1044, "add-boundary-pores"], [889, "add-boundary-pores"], [850, "add-boundary-pores"]], "merge_pores": [[1650, "merge-pores"]], "find_isolated_clusters": [[1629, "find-isolated-clusters"]], "find_neighbor_sites": [[1631, "find-neighbor-sites"]], "get_full_descriptionf": [[1678, "get-full-descriptionf"]], "get_domain_area": [[1635, "get-domain-area"]], "find_connected_sites": [[1626, "find-connected-sites"]], "find_neighbor_bonds": [[1630, "find-neighbor-bonds"]], "hull_centroid": [[1639, "hull-centroid"]], "delete_kwargs": [[1668, "delete-kwargs"]], "isoutside": [[1642, "isoutside"]], "get_extended_summary": [[1675, "get-extended-summary"]], "keep_params_s": [[1684, "keep-params-s"]], "utils": [[1663, "module-openpnm.utils"]], "Utilities and helper classes/functions": [[1663, "utilities-and-helper-classes-functions"]], "get_sectionsf": [[1680, "get-sectionsf"]], "ScipyCG": [[1610, "scipycg"]], "DirectSolver": [[1600, "directsolver"]], "add_comp": [[1536, "add-comp"], [1474, "add-comp"], [1357, "add-comp"], [1295, "add-comp"], [1261, "add-comp"], [1227, "add-comp"]], "solve": [[1601, "solve"], [1611, "solve"], [1607, "solve"], [1599, "solve"], [1605, "solve"], [1603, "solve"], [1613, "solve"], [1609, "solve"], [550, "solve"]], "PardisoSpsolve": [[1606, "pardisospsolve"]], "ScipySpsolve": [[1612, "scipyspsolve"]], "IterativeSolver": [[1602, "iterativesolver"]], "add_model_collection": [[1538, "add-model-collection"], [1571, "add-model-collection"], [1509, "add-model-collection"], [1447, "add-model-collection"], [1476, "add-model-collection"], [1359, "add-model-collection"], [1419, "add-model-collection"], [1330, "add-model-collection"], [1391, "add-model-collection"], [1297, "add-model-collection"], [1263, "add-model-collection"], [1229, "add-model-collection"], [1161, "add-model-collection"], [1200, "add-model-collection"], [1046, "add-model-collection"], [1123, "add-model-collection"], [1085, "add-model-collection"], [967, "add-model-collection"], [1005, "add-model-collection"], [891, "add-model-collection"], [929, "add-model-collection"], [852, "add-model-collection"], [479, "add-model-collection"], [543, "add-model-collection"]], "get_comp_vals": [[1545, "get-comp-vals"], [1483, "get-comp-vals"], [1366, "get-comp-vals"], [1236, "get-comp-vals"], [1304, "get-comp-vals"], [1270, "get-comp-vals"]], "regenerate_models": [[1588, "regenerate-models"], [1558, "regenerate-models"], [1526, "regenerate-models"], [1436, "regenerate-models"], [1464, "regenerate-models"], [1496, "regenerate-models"], [1408, "regenerate-models"], [1347, "regenerate-models"], [1379, "regenerate-models"], [1249, "regenerate-models"], [1283, "regenerate-models"], [1317, "regenerate-models"], [1150, "regenerate-models"], [1188, "regenerate-models"], [1217, "regenerate-models"], [1112, "regenerate-models"], [1073, "regenerate-models"], [956, "regenerate-models"], [994, "regenerate-models"], [1034, "regenerate-models"], [879, "regenerate-models"], [918, "regenerate-models"], [496, "regenerate-models"], [544, "regenerate-models"]], "PETScLinearSolver": [[1604, "petsclinearsolver"]], "get_mix_vals": [[1547, "get-mix-vals"], [1485, "get-mix-vals"], [1368, "get-mix-vals"], [1306, "get-mix-vals"], [1238, "get-mix-vals"], [1272, "get-mix-vals"]], "run_model": [[1560, "run-model"], [1589, "run-model"], [1527, "run-model"], [1437, "run-model"], [1498, "run-model"], [1465, "run-model"], [1381, "run-model"], [1409, "run-model"], [1348, "run-model"], [1251, "run-model"], [1319, "run-model"], [1285, "run-model"], [1189, "run-model"], [1151, "run-model"], [1218, "run-model"], [1113, "run-model"], [1074, "run-model"], [1035, "run-model"], [957, "run-model"], [995, "run-model"], [919, "run-model"], [880, "run-model"], [497, "run-model"], [545, "run-model"]], "solvers": [[1597, "module-openpnm.solvers"]], "Collection of matrix solvers for steady state simulations": [[1597, "collection-of-matrix-solvers-for-steady-state-simulations"]], "topotools": [[1614, "module-openpnm.topotools"]], "Collection of functions for manipulating network topology": [[1614, "collection-of-functions-for-manipulating-network-topology"]], "check_mixture_health": [[1539, "check-mixture-health"], [1477, "check-mixture-health"], [1360, "check-mixture-health"], [1298, "check-mixture-health"], [1264, "check-mixture-health"], [1230, "check-mixture-health"]], "PyamgRugeStubenSolver": [[1608, "pyamgrugestubensolver"]], "remove_comp": [[1559, "remove-comp"], [1497, "remove-comp"], [1380, "remove-comp"], [1250, "remove-comp"], [1318, "remove-comp"], [1284, "remove-comp"]], "x": [[1568, "x"], [1327, "x"]], "add_model": [[1537, "add-model"], [1570, "add-model"], [1446, "add-model"], [1508, "add-model"], [1475, "add-model"], [1418, "add-model"], [1358, "add-model"], [1390, "add-model"], [1262, "add-model"], [1296, "add-model"], [1329, "add-model"], [1199, "add-model"], [1228, "add-model"], [1160, "add-model"], [1122, "add-model"], [1045, "add-model"], [1084, "add-model"], [1004, "add-model"], [966, "add-model"], [890, "add-model"], [928, "add-model"], [851, "add-model"], [542, "add-model"], [478, "add-model"]], "BaseSolver": [[1598, "basesolver"]], "StandardLiquidMixture": [[1535, "standardliquidmixture"]], "Water": [[1569, "water"]], "StandardGasMixture": [[1473, "standardgasmixture"]], "y": [[1506, "y"], [1259, "y"], [1293, "y"]], "StandardGas": [[1445, "standardgas"]], "StandardLiquid": [[1507, "standardliquid"]], "Species": [[1417, "species"]], "Phase": [[1389, "phase"], [758, "id1"], [10, "phase"], [8, "phase"]], "Mixture": [[1356, "mixture"]], "Mercury": [[1328, "mercury"]], "GasMixture": [[1260, "gasmixture"]], "LiquidMixture": [[1294, "liquidmixture"]], "num_neighbors": [[1143, "num-neighbors"], [1181, "num-neighbors"], [1066, "num-neighbors"], [1105, "num-neighbors"], [987, "num-neighbors"], [1027, "num-neighbors"], [949, "num-neighbors"], [911, "num-neighbors"], [872, "num-neighbors"]], "get_incidence_matrix": [[1176, "get-incidence-matrix"], [1061, "get-incidence-matrix"], [1100, "get-incidence-matrix"], [1138, "get-incidence-matrix"], [982, "get-incidence-matrix"], [1022, "get-incidence-matrix"], [944, "get-incidence-matrix"], [867, "get-incidence-matrix"], [906, "get-incidence-matrix"]], "find_nearby_pores": [[1169, "find-nearby-pores"], [1131, "find-nearby-pores"], [1054, "find-nearby-pores"], [1093, "find-nearby-pores"], [1013, "find-nearby-pores"], [975, "find-nearby-pores"], [899, "find-nearby-pores"], [860, "find-nearby-pores"], [937, "find-nearby-pores"]], "get_adjacency_matrix": [[1174, "get-adjacency-matrix"], [1098, "get-adjacency-matrix"], [1059, "get-adjacency-matrix"], [1136, "get-adjacency-matrix"], [980, "get-adjacency-matrix"], [1020, "get-adjacency-matrix"], [942, "get-adjacency-matrix"], [865, "get-adjacency-matrix"], [904, "get-adjacency-matrix"]], "find_connected_pores": [[1167, "find-connected-pores"], [1052, "find-connected-pores"], [1129, "find-connected-pores"], [1091, "find-connected-pores"], [1011, "find-connected-pores"], [973, "find-connected-pores"], [858, "find-connected-pores"], [897, "find-connected-pores"], [935, "find-connected-pores"]], "phase": [[1197, "module-openpnm.phase"], [758, "module-openpnm.models.phase"], [586, "module-openpnm.models.collections.phase"]], "create_adjacency_matrix": [[1164, "create-adjacency-matrix"], [1049, "create-adjacency-matrix"], [1088, "create-adjacency-matrix"], [1126, "create-adjacency-matrix"], [1008, "create-adjacency-matrix"], [970, "create-adjacency-matrix"], [894, "create-adjacency-matrix"], [932, "create-adjacency-matrix"], [855, "create-adjacency-matrix"]], "BinaryGas": [[1226, "binarygas"]], "create_incidence_matrix": [[1165, "create-incidence-matrix"], [1050, "create-incidence-matrix"], [1089, "create-incidence-matrix"], [1127, "create-incidence-matrix"], [971, "create-incidence-matrix"], [1009, "create-incidence-matrix"], [895, "create-incidence-matrix"], [856, "create-incidence-matrix"], [933, "create-incidence-matrix"]], "find_connecting_throat": [[1168, "find-connecting-throat"], [1130, "find-connecting-throat"], [1053, "find-connecting-throat"], [1092, "find-connecting-throat"], [974, "find-connecting-throat"], [1012, "find-connecting-throat"], [898, "find-connecting-throat"], [936, "find-connecting-throat"], [859, "find-connecting-throat"]], "find_neighbor_throats": [[1171, "find-neighbor-throats"], [1095, "find-neighbor-throats"], [1056, "find-neighbor-throats"], [1133, "find-neighbor-throats"], [977, "find-neighbor-throats"], [1015, "find-neighbor-throats"], [901, "find-neighbor-throats"], [939, "find-neighbor-throats"], [862, "find-neighbor-throats"]], "Air": [[1198, "air"]], "Voronoi": [[1159, "voronoi"]], "find_neighbor_pores": [[1170, "find-neighbor-pores"], [1055, "find-neighbor-pores"], [1132, "find-neighbor-pores"], [1094, "find-neighbor-pores"], [1014, "find-neighbor-pores"], [976, "find-neighbor-pores"], [900, "find-neighbor-pores"], [861, "find-neighbor-pores"], [938, "find-neighbor-pores"]], "Network": [[1121, "network"], [742, "id1"], [10, "network"], [8, "network"], [6, "network"]], "FaceCenteredCubic": [[1082, "facecenteredcubic"]], "DelaunayVoronoiDual": [[1003, "delaunayvoronoidual"]], "find_pore_hulls": [[1016, "find-pore-hulls"]], "Delaunay": [[965, "delaunay"]], "Demo": [[1043, "demo"]], "find_throat_facets": [[1017, "find-throat-facets"]], "Cubic": [[888, "cubic"], [26, "cubic"]], "CubicTemplate": [[927, "cubictemplate"]], "general_toroidal": [[828, "general-toroidal"]], "mole_to_mass_fraction": [[778, "mole-to-mass-fraction"], [783, "mole-to-mass-fraction"]], "density": [[761, "module-openpnm.models.phase.density"]], "washburn": [[814, "washburn"]], "viscosity": [[802, "module-openpnm.models.phase.viscosity"]], "BodyCenteredCubic": [[849, "bodycenteredcubic"]], "standard_kinetics": [[844, "standard-kinetics"]], "ad_dif_conductance": [[810, "module-openpnm.models.physics.ad_dif_conductance"]], "hydraulic_conductance": [[823, "module-openpnm.models.physics.hydraulic_conductance"]], "generic_thermal": [[846, "generic-thermal"]], "gas_pure_gesmr": [[804, "gas-pure-gesmr"]], "natural_exponential": [[841, "natural-exponential"]], "mix_and_match": [[777, "mix-and-match"]], "water_correlation": [[808, "water-correlation"], [801, "water-correlation"], [790, "water-correlation"], [766, "water-correlation"], [797, "water-correlation"]], "liquid_pure_lk": [[800, "liquid-pure-lk"]], "misc": [[776, "module-openpnm.models.phase.misc"], [721, "module-openpnm.models.misc"]], "liquid_mixture_tc": [[770, "liquid-mixture-tc"]], "late_filling": [[833, "late-filling"]], "power_law": [[843, "power-law"]], "liquid_pure_ls": [[807, "liquid-pure-ls"]], "generic_hydraulic": [[824, "generic-hydraulic"]], "conduit_conductance": [[832, "conduit-conductance"]], "network": [[848, "module-openpnm.network"], [742, "module-openpnm.models.network"], [585, "module-openpnm.models.collections.network"]], "partition_coefficient": [[785, "module-openpnm.models.phase.partition_coefficient"]], "liquid_mixture_xweighted": [[774, "liquid-mixture-xweighted"], [806, "liquid-mixture-xweighted"]], "surface_tension": [[787, "module-openpnm.models.phase.surface_tension"]], "natural_logarithm": [[842, "natural-logarithm"]], "capillary_pressure": [[812, "module-openpnm.models.physics.capillary_pressure"]], "liquid_mixture_wsd": [[788, "liquid-mixture-wsd"]], "mixtures": [[779, "module-openpnm.models.phase.mixtures"]], "taylor_aris_diffusion": [[819, "taylor-aris-diffusion"]], "mass_to_molar": [[765, "mass-to-molar"]], "gas_pure_st": [[805, "gas-pure-st"]], "thermal_conductance": [[845, "module-openpnm.models.physics.thermal_conductance"]], "liquid_pure_COSTALD": [[764, "liquid-pure-costald"]], "liquid_pure_antoine": [[799, "liquid-pure-antoine"]], "thermal_conductivity": [[791, "module-openpnm.models.phase.thermal_conductivity"]], "mixed_diffusion": [[817, "mixed-diffusion"]], "gas_mixture_hz": [[803, "gas-mixture-hz"]], "liquid_mixture_COSTALD": [[763, "liquid-mixture-costald"]], "general_symbolic": [[838, "general-symbolic"]], "heat_capacity": [[771, "module-openpnm.models.phase.heat_capacity"]], "liquid_pure_gismr": [[795, "liquid-pure-gismr"]], "liquid_pure_sr": [[796, "liquid-pure-sr"]], "meniscus": [[827, "module-openpnm.models.physics.meniscus"]], "gas_mixture_fesg": [[769, "gas-mixture-fesg"]], "hagen_poiseuille": [[825, "hagen-poiseuille"]], "liquid_mixture_DIPPR9H": [[794, "liquid-mixture-dippr9h"]], "liquid_pure_rp": [[775, "liquid-pure-rp"]], "ad_dif": [[811, "ad-dif"]], "purcell": [[829, "purcell"], [813, "purcell"]], "generic_electrical": [[821, "generic-electrical"]], "gas_mixture_whz": [[792, "gas-mixture-whz"]], "linear": [[839, "linear"], [732, "linear"]], "gas_mixture_yweighted": [[772, "gas-mixture-yweighted"]], "mole_summation": [[782, "mole-summation"]], "diffusive_conductance": [[815, "module-openpnm.models.physics.diffusive_conductance"]], "ideal_gas": [[762, "ideal-gas"]], "vapor_pressure": [[798, "module-openpnm.models.phase.vapor_pressure"]], "butler_volmer_conc": [[835, "butler-volmer-conc"]], "from_component": [[780, "from-component"]], "gas_pure_gismr": [[793, "gas-pure-gismr"]], "ordinary_diffusion": [[818, "ordinary-diffusion"]], "sinusoidal": [[830, "sinusoidal"]], "series_resistors": [[822, "series-resistors"], [847, "series-resistors"]], "generic_diffusive": [[816, "generic-diffusive"]], "gas_pure_TRC": [[773, "gas-pure-trc"]], "gaseous_species_in_water": [[786, "gaseous-species-in-water"]], "physics": [[809, "module-openpnm.models.physics"], [592, "module-openpnm.models.collections.physics"]], "Physics": [[809, "id1"], [8, "physics"]], "multiphase": [[831, "module-openpnm.models.physics.multiphase"]], "source_terms": [[834, "module-openpnm.models.physics.source_terms"]], "mixing_rule": [[781, "mixing-rule"]], "valvatne_blunt": [[826, "valvatne-blunt"]], "logarithm": [[840, "logarithm"]], "butler_volmer_voltage": [[836, "butler-volmer-voltage"]], "electrical_conductance": [[820, "module-openpnm.models.physics.electrical_conductance"]], "exponential": [[837, "exponential"]], "gas_mixture_ce": [[768, "gas-mixture-ce"]], "critical_props": [[760, "module-openpnm.models.phase.critical_props"]], "salinity": [[784, "salinity"]], "liquid_pure_bb": [[789, "liquid-pure-bb"]], "diffusivity": [[767, "module-openpnm.models.phase.diffusivity"]], "throat_cross_sectional_area": [[673, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "Throat Cross-sectional Area Models": [[673, "throat-cross-sectional-area-models"]], "mason_morrow": [[670, "mason-morrow"]], "cylinder": [[716, "cylinder"], [675, "cylinder"], [709, "cylinder"], [695, "cylinder"]], "coordination_number": [[746, "coordination-number"]], "intersecting_cones": [[686, "intersecting-cones"], [632, "intersecting-cones"], [603, "intersecting-cones"], [617, "intersecting-cones"]], "throat_capillary_shape_factor": [[668, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "Throat Capillary Shape Factor Models": [[668, "throat-capillary-shape-factor-models"]], "fraction": [[726, "fraction"]], "cuboid": [[708, "cuboid"], [674, "cuboid"], [694, "cuboid"], [715, "cuboid"]], "Miscellaneous": [[721, "miscellaneous"]], "jenkins_rao": [[669, "jenkins-rao"]], "sphere": [[666, "sphere"], [660, "sphere"], [644, "sphere"]], "throat_seed": [[697, "module-openpnm.models.geometry.throat_seed"]], "Throat Seed Models": [[697, "throat-seed-models"]], "throat_volume": [[714, "module-openpnm.models.geometry.throat_volume"]], "Throat Volume Models": [[714, "throat-volume-models"]], "squares_and_rectangles": [[691, "squares-and-rectangles"], [583, "squares-and-rectangles"], [623, "squares-and-rectangles"], [638, "squares-and-rectangles"], [608, "squares-and-rectangles"]], "hybrid_trapezoids_and_rectangles": [[685, "hybrid-trapezoids-and-rectangles"], [631, "hybrid-trapezoids-and-rectangles"], [616, "hybrid-trapezoids-and-rectangles"], [602, "hybrid-trapezoids-and-rectangles"]], "intersecting_pyramids": [[687, "intersecting-pyramids"], [633, "intersecting-pyramids"], [618, "intersecting-pyramids"], [604, "intersecting-pyramids"]], "from_neighbor_pores": [[698, "from-neighbor-pores"], [727, "from-neighbor-pores"], [702, "from-neighbor-pores"]], "throat_length": [[679, "module-openpnm.models.geometry.throat_length"]], "Throat Length Models": [[679, "throat-length-models"]], "rectangle": [[711, "rectangle"], [696, "rectangle"], [720, "rectangle"], [676, "rectangle"]], "normal": [[704, "normal"], [734, "normal"], [654, "normal"]], "circles_and_rectangles": [[680, "circles-and-rectangles"], [611, "circles-and-rectangles"], [626, "circles-and-rectangles"], [578, "circles-and-rectangles"], [597, "circles-and-rectangles"]], "cubes_and_cuboids": [[682, "cubes-and-cuboids"], [613, "cubes-and-cuboids"], [580, "cubes-and-cuboids"], [628, "cubes-and-cuboids"], [599, "cubes-and-cuboids"]], "bidirectional_throats": [[743, "bidirectional-throats"]], "extrusion": [[717, "extrusion"], [710, "extrusion"]], "duplicate_throats": [[751, "duplicate-throats"]], "isolated_pores": [[754, "isolated-pores"]], "summation": [[740, "summation"]], "product": [[737, "product"]], "cluster_size": [[745, "cluster-size"]], "generic_function": [[730, "generic-function"]], "headless_throats": [[753, "headless-throats"]], "normalize": [[735, "normalize"]], "pore_to_pore_distance": [[756, "pore-to-pore-distance"]], "effective": [[665, "effective"]], "clip": [[723, "clip"]], "distance_to_nearest_neighbor": [[749, "distance-to-nearest-neighbor"]], "chemicals_wrapper": [[759, "chemicals-wrapper"]], "random": [[699, "random"], [738, "random"], [705, "random"], [655, "random"], [647, "random"]], "cluster_number": [[744, "cluster-number"]], "looped_throats": [[755, "looped-throats"]], "weibull": [[706, "weibull"], [741, "weibull"], [656, "weibull"]], "find_coincident_pores": [[752, "find-coincident-pores"]], "spheres_and_cylinders": [[690, "spheres-and-cylinders"], [678, "spheres-and-cylinders"], [607, "spheres-and-cylinders"], [622, "spheres-and-cylinders"], [637, "spheres-and-cylinders"], [582, "spheres-and-cylinders"]], "reversed_throats": [[757, "reversed-throats"]], "pyramids_and_cuboids": [[689, "pyramids-and-cuboids"], [621, "pyramids-and-cuboids"], [636, "pyramids-and-cuboids"], [581, "pyramids-and-cuboids"], [606, "pyramids-and-cuboids"]], "throat_endpoints": [[677, "module-openpnm.models.geometry.throat_endpoints"]], "count_coincident_pores": [[747, "count-coincident-pores"]], "throat_perimeter": [[693, "module-openpnm.models.geometry.throat_perimeter"]], "Throat Perimeter Models": [[693, "throat-perimeter-models"]], "equivalent_diameter": [[701, "equivalent-diameter"], [650, "equivalent-diameter"]], "constant": [[724, "constant"]], "distance_to_nearest_pore": [[750, "distance-to-nearest-pore"]], "generic_distribution": [[729, "generic-distribution"], [703, "generic-distribution"], [652, "generic-distribution"]], "throat_centroid": [[671, "module-openpnm.models.geometry.throat_centroid"]], "Throat Centroid Model": [[671, "throat-centroid-model"]], "from_neighbor_throats": [[728, "from-neighbor-throats"], [651, "from-neighbor-throats"]], "square": [[667, "square"], [661, "square"], [645, "square"]], "pendular_ring": [[719, "pendular-ring"]], "match_histogram": [[733, "match-histogram"]], "scaled": [[739, "scaled"]], "trapezoids_and_rectangles": [[692, "trapezoids-and-rectangles"], [584, "trapezoids-and-rectangles"], [639, "trapezoids-and-rectangles"], [609, "trapezoids-and-rectangles"], [624, "trapezoids-and-rectangles"]], "throat_size": [[700, "module-openpnm.models.geometry.throat_size"]], "Throat Size Models": [[700, "throat-size-models"]], "invert": [[731, "invert"]], "hybrid_cones_and_cylinders": [[683, "hybrid-cones-and-cylinders"], [629, "hybrid-cones-and-cylinders"], [600, "hybrid-cones-and-cylinders"], [614, "hybrid-cones-and-cylinders"]], "pore_to_pore": [[713, "pore-to-pore"]], "cones_and_cylinders": [[681, "cones-and-cylinders"], [612, "cones-and-cylinders"], [627, "cones-and-cylinders"], [579, "cones-and-cylinders"], [598, "cones-and-cylinders"]], "distance_to_furthest_neighbor": [[748, "distance-to-furthest-neighbor"]], "lens": [[718, "lens"]], "pore_coords": [[672, "pore-coords"]], "intersecting_trapezoids": [[688, "intersecting-trapezoids"], [634, "intersecting-trapezoids"], [619, "intersecting-trapezoids"], [605, "intersecting-trapezoids"]], "blank": [[722, "blank"]], "throat_vector": [[712, "module-openpnm.models.geometry.throat_vector"]], "Throat Vector Model": [[712, "throat-vector-model"]], "throat_surface_area": [[707, "module-openpnm.models.geometry.throat_surface_area"]], "Throat Surface Area Models": [[707, "throat-surface-area-models"]], "polynomial": [[736, "polynomial"]], "hybrid_pyramids_and_cuboids": [[684, "hybrid-pyramids-and-cuboids"], [601, "hybrid-pyramids-and-cuboids"], [630, "hybrid-pyramids-and-cuboids"], [615, "hybrid-pyramids-and-cuboids"]], "spatially_correlated": [[648, "spatially-correlated"]], "circle": [[658, "circle"], [663, "circle"], [641, "circle"]], "hydraulic_size_factors": [[625, "module-openpnm.models.geometry.hydraulic_size_factors"]], "Hydraulic Size Factors Models": [[625, "hydraulic-size-factors-models"]], "standard": [[594, "standard"]], "project_to_hdf5": [[570, "project-to-hdf5"]], "ncylinders_in_series": [[620, "ncylinders-in-series"], [635, "ncylinders-in-series"]], "water": [[591, "water"]], "project_to_pandas": [[571, "project-to-pandas"]], "gas": [[588, "module-openpnm.models.collections.phase.gas"]], "geometry": [[577, "module-openpnm.models.collections.geometry"], [595, "module-openpnm.models.geometry"]], "largest_sphere": [[653, "largest-sphere"]], "Network Models Collections": [[585, "network-models-collections"]], "mercury": [[590, "mercury"]], "cube": [[664, "cube"], [643, "cube"], [659, "cube"]], "cone": [[642, "cone"]], "air": [[587, "air"]], "pore_size": [[649, "module-openpnm.models.geometry.pore_size"]], "Pore Size Models": [[649, "pore-size-models"]], "basic": [[593, "basic"]], "project_to_vtk": [[573, "project-to-vtk"]], "diffusive_size_factors": [[610, "module-openpnm.models.geometry.diffusive_size_factors"]], "Diffusive Size Factors Models": [[610, "diffusive-size-factors-models"]], "pore_volume": [[662, "module-openpnm.models.geometry.pore_volume"]], "Pore Volume Models": [[662, "pore-volume-models"]], "pore_seed": [[646, "module-openpnm.models.geometry.pore_seed"]], "Pore Seed Models": [[646, "pore-seed-models"]], "project_to_xdmf": [[574, "project-to-xdmf"]], "liquid": [[589, "module-openpnm.models.collections.phase.liquid"]], "pore_cross_sectional_area": [[640, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "Pore Cross-sectional Area Models": [[640, "pore-cross-sectional-area-models"]], "project_to_paraview": [[572, "project-to-paraview"]], "pore_surface_area": [[657, "module-openpnm.models.geometry.pore_surface_area"]], "Pore Surface Area Models": [[657, "pore-surface-area-models"]], "Geometry": [[595, "id1"], [8, "geometry"], [6, "geometry"]], "conduit_lengths": [[596, "module-openpnm.models.geometry.conduit_lengths"]], "Conduit Lengths Models": [[596, "conduit-lengths-models"]], "models": [[575, "module-openpnm.models"]], "Collection of pore-scale models": [[575, "collection-of-pore-scale-models"]], "collections": [[576, "module-openpnm.models.collections"]], "network_to_networkx": [[562, "network-to-networkx"]], "LabelMixin": [[505, "labelmixin"]], "network_to_pandas": [[563, "network-to-pandas"]], "network_to_csv": [[560, "network-to-csv"]], "network_from_csv": [[552, "network-from-csv"]], "network_to_comsol": [[559, "network-to-comsol"]], "Integrator": [[548, "integrator"]], "io": [[551, "module-openpnm.io"]], "Collection of functions for import/export of  data": [[551, "collection-of-functions-for-import-export-of-data"]], "ModelWrapper": [[513, "modelwrapper"]], "network_from_statoil": [[558, "network-from-statoil"]], "dependency_list": [[530, "dependency-list"]], "dependency_graph": [[529, "dependency-graph"]], "network_from_jsongraph": [[553, "network-from-jsongraph"]], "network_from_porespy": [[557, "network-from-porespy"]], "network_to_pergeos": [[564, "network-to-pergeos"]], "network_from_pergeos": [[556, "network-from-pergeos"]], "project_to_dict": [[569, "project-to-dict"]], "Domain": [[477, "domain"]], "network_to_jsongraph": [[561, "network-to-jsongraph"]], "ParserMixin": [[546, "parsermixin"]], "print_hdf5": [[567, "print-hdf5"]], "project_to_csv": [[568, "project-to-csv"]], "ModelsMixin2": [[541, "modelsmixin2"]], "dependency_map": [[531, "dependency-map"]], "network_to_stl": [[566, "network-to-stl"]], "network_to_salome": [[565, "network-to-salome"]], "network_from_networkx": [[555, "network-from-networkx"]], "integrators": [[547, "module-openpnm.integrators"]], "Collection of ODE integrators for transient simulations": [[547, "collection-of-ode-integrators-for-transient-simulations"]], "ModelsDict": [[526, "modelsdict"]], "ScipyRK45": [[549, "scipyrk45"]], "network_from_marock": [[554, "network-from-marock"]], "Transport": [[427, "transport"]], "TransientReactiveTransport": [[394, "transientreactivetransport"]], "Base2": [[460, "base2"]], "core": [[459, "module-openpnm.core"]], "Main classes of OpenPNM": [[459, "main-classes-of-openpnm"]], "The Base class": [[459, "the-base-class"]], "The ModelsMixin class": [[459, "the-modelsmixin-class"]], "TransientFickianDiffusion": [[361, "transientfickiandiffusion"]], "set_outflow_BC": [[351, "set-outflow-bc"], [62, "set-outflow-bc"]], "StokesFlow": [[294, "stokesflow"]], "TransientAdvectionDiffusion": [[327, "transientadvectiondiffusion"]], "InvasionPercolation": [[196, "invasionpercolation"]], "OhmicConduction": [[228, "ohmicconduction"]], "ReactiveTransport": [[261, "reactivetransport"]], "Pore-Scale Models": [[15, "pore-scale-models"]], "Obtaining Relative Diffusivity Curves": [[12, "obtaining-relative-diffusivity-curves"]], "Create network and phases": [[12, "create-network-and-phases"], [13, "create-network-and-phases"]], "Apply ordinary percolation": [[12, "apply-ordinary-percolation"]], "Saturation and rate functions": [[12, "saturation-and-rate-functions"]], "Define multiphase conductance": [[12, "define-multiphase-conductance"], [13, "define-multiphase-conductance"]], "Calculate relative diffusivities": [[12, "calculate-relative-diffusivities"]], "Creating Phases": [[31, "creating-phases"]], "Part 1: The Phase class": [[31, "part-1-the-phase-class"]], "Direct assignment of a constant value": [[31, "direct-assignment-of-a-constant-value"]], "Using a built-in model": [[31, "using-a-built-in-model"]], "Using a water-specific model": [[31, "using-a-water-specific-model"]], "Writing your own custom model": [[31, "writing-your-own-custom-model"]], "Specific Classes for Common Fluids": [[31, "specific-classes-for-common-fluids"]], "Part 2: Using Species and Mixtures": [[31, "part-2-using-species-and-mixtures"]], "Pure Species": [[31, "pure-species"]], "Gas and Liquid Species": [[31, "gas-and-liquid-species"]], "Gas and Liquid Mixtures": [[31, "gas-and-liquid-mixtures"]], "Getting and Setting Compositions": [[31, "getting-and-setting-compositions"]], "Exploring Features of the Mixture Objects": [[31, "exploring-features-of-the-mixture-objects"]], "Adding and Removing Species": [[31, "adding-and-removing-species"]], "The info Attribute": [[31, "the-info-attribute"]], "Get component mole fractions": [[31, "get-component-mole-fractions"]], "The components Attribute": [[31, "the-components-attribute"]], "Using get_comp_vals": [[31, "using-get-comp-vals"]], "Checking consistency with check_mixture_health": [[31, "checking-consistency-with-check-mixture-health"]], "Retrieving Species Properties": [[31, "retrieving-species-properties"]], "Using the wildcard (*) syntax": [[31, "using-the-wildcard-syntax"]], "algorithms": [[37, "module-openpnm.algorithms"]], "Reference": [[2, "reference"]], "Simulating Invasion": [[33, "simulating-invasion"]], "Manual Implementation of the Drainge Process": [[33, "manual-implementation-of-the-drainge-process"]], "Using the Drainage Algorithm": [[33, "using-the-drainage-algorithm"]], "Invasion Percolation": [[33, "invasion-percolation"]], "Manual Implementation of the Invasion Percolation Process": [[33, "manual-implementation-of-the-invasion-percolation-process"]], "Using the InvasionPercolation Algorithm": [[33, "using-the-invasionpercolation-algorithm"]], "Installation": [[36, "installation"]], "Installing the dev version": [[36, "installing-the-dev-version"]], "The easy way": [[36, "the-easy-way"]], "The hard (but correct) way": [[36, "the-hard-but-correct-way"]], "Where\u2019s my conda prompt?": [[36, "where-s-my-conda-prompt"]], "Windows": [[36, "windows"]], "Mac and Linux": [[36, "mac-and-linux"]], "Using Labels and Defining Domains": [[30, "using-labels-and-defining-domains"]], "Using Predefined Labels": [[30, "using-predefined-labels"]], "The pores and throats methods": [[30, "the-pores-and-throats-methods"]], "Using the mode argument in the pores and throats methods": [[30, "using-the-mode-argument-in-the-pores-and-throats-methods"]], "Defining Custom Labels": [[30, "defining-custom-labels"]], "Creating Boolean Masks": [[30, "creating-boolean-masks"]], "Using set_label": [[30, "using-set-label"]], "Using the @ sytax to read and write data": [[30, "using-the-sytax-to-read-and-write-data"]], "Defining Subdomains": [[30, "defining-subdomains"]], "Defining and Changing Subdomain Locations": [[30, "defining-and-changing-subdomain-locations"]], "Mixing Full Domain and Subdomain Models": [[30, "mixing-full-domain-and-subdomain-models"]], "Mixing Many Subdomains of Different Shape": [[30, "mixing-many-subdomains-of-different-shape"]], "Simulating Single Phase Transport": [[32, "simulating-single-phase-transport"]], "Define Phase Viscosity": [[32, "define-phase-viscosity"]], "Basic Conductance Calculation": [[32, "basic-conductance-calculation"]], "Create Algorithm Object": [[32, "create-algorithm-object"]], "Assign Boundary Conditions": [[32, "assign-boundary-conditions"]], "Rigorous Conductance Calculation": [[32, "rigorous-conductance-calculation"]], "Manual Method": [[32, "manual-method"]], "Pore-Scale Model Method": [[32, "pore-scale-model-method"]], "Visualization options": [[34, "visualization-options"]], "Spyder": [[34, "spyder"]], "Interactive plots in Jupyter notebook": [[34, "interactive-plots-in-jupyter-notebook"]], "Paraview": [[34, "paraview"]], "AdvectionDiffusion": [[38, "advectiondiffusion"]], "Predicting Porosity": [[11, "predicting-porosity"]], "Create a random cubic network": [[11, "create-a-random-cubic-network"], [5, "create-a-random-cubic-network"]], "Calculate void and bulk volume": [[11, "calculate-void-and-bulk-volume"]], "Discussions and Issues": [[11, "discussions-and-issues"]], "Domain volume:": [[11, "domain-volume"]], "Overlapping pores and throats:": [[11, "overlapping-pores-and-throats"]], "Extracted networks": [[11, "extracted-networks"]], "Void volume:": [[11, "void-volume"]], "10 Steps to Learn OpenPNM": [[3, "steps-to-learn-openpnm"]], "Algorithm": [[72, "algorithm"]], "Predicting dispersion coefficient": [[7, "predicting-dispersion-coefficient"]], "Generating Network and phase": [[7, "generating-network-and-phase"]], "Defining Effective Pore Volume": [[7, "defining-effective-pore-volume"]], "Perform Stokes flow": [[7, "perform-stokes-flow"]], "Apply transient advection diffusion": [[7, "apply-transient-advection-diffusion"]], "Elution curve": [[7, "elution-curve"]], "Solving for the dispersion coefficient": [[7, "solving-for-the-dispersion-coefficient"]], "Basic Usage": [[4, "basic-usage"]], "Problem setup": [[4, "problem-setup"]], "Basic visualization": [[4, "basic-visualization"]], "Calculating permeability": [[4, "calculating-permeability"]], "Adjusting pore size distribution": [[4, "adjusting-pore-size-distribution"]], "Simulating Mercury Intrusion Porosimetry Curves": [[10, "simulating-mercury-intrusion-porosimetry-curves"]], "Add Geometry": [[10, "add-geometry"]], "Add Physics": [[10, "add-physics"]], "Perform Mercury Intrusion": [[10, "perform-mercury-intrusion"]], "Contibuted Examples": [[14, "contibuted-examples"]], "Numerical Python Primer": [[25, "numerical-python-primer"]], "Python Lists: Flexible but Slow": [[25, "python-lists-flexible-but-slow"]], "Numpy ndarray: Optimized for Numerics": [[25, "numpy-ndarray-optimized-for-numerics"]], "Vectorization": [[25, "vectorization"]], "Methods versus Functions": [[25, "methods-versus-functions"]], "Dictionaries: Holding Things Together": [[25, "dictionaries-holding-things-together"]], "Subclassing dict": [[25, "subclassing-dict"]], "Predicting relative permeability": [[13, "predicting-relative-permeability"]], "Apply invasion percolation": [[13, "apply-invasion-percolation"]], "Occupancy and permeability functions": [[13, "occupancy-and-permeability-functions"]], "Calculate relative permeabilities": [[13, "calculate-relative-permeabilities"]], "The Workspace and Projects": [[17, "the-workspace-and-projects"]], "Usage of Projects and Workspace": [[17, "usage-of-projects-and-workspace"]], "Workspace is a Singleton": [[17, "workspace-is-a-singleton"]], "One Network per Project": [[17, "one-network-per-project"]], "Predicting Formation Factor": [[9, "predicting-formation-factor"]], "Create Network": [[9, "create-network"]], "Create Phase": [[9, "create-phase"]], "Apply Fickian Diffusion": [[9, "apply-fickian-diffusion"]], "Visualize Results": [[9, "visualize-results"]], "Calculate Formation Factor": [[9, "calculate-formation-factor"]], "Network Representation, Queries, and Manipulation": [[28, "network-representation-queries-and-manipulation"]], "The Adjacency Matrix": [[28, "the-adjacency-matrix"]], "COO Sparse Format": [[28, "coo-sparse-format"]], "Other Sparse Formats": [[28, "other-sparse-formats"]], "The Incidence Matrix": [[28, "the-incidence-matrix"]], "Using OpenPNM Methods Query Methods": [[28, "using-openpnm-methods-query-methods"]], "Find Neighoring Pores": [[28, "find-neighoring-pores"]], "Find Neighboring Throats": [[28, "find-neighboring-throats"]], "Find Connecting Throats": [[28, "find-connecting-throats"]], "Find Connected Pores": [[28, "find-connected-pores"]], "Removing Throats": [[28, "removing-throats"]], "Removing Pores": [[28, "removing-pores"]], "Adding Pores and Throats": [[28, "adding-pores-and-throats"]], "Transient Transport": [[24, "transient-transport"]], "Settings Attribute Machinery": [[16, "settings-attribute-machinery"]], "Datatype is enforced": [[16, "datatype-is-enforced"]], "Settings can be access as attributes or dict keys": [[16, "settings-can-be-access-as-attributes-or-dict-keys"]], "Namespace is clean": [[16, "namespace-is-clean"]], "Collections also enforce types": [[16, "collections-also-enforce-types"]], "Settings are attached before init": [[16, "settings-are-attached-before-init"]], "Finding Effective Diffusivity and Tortuosity of a Network": [[8, "finding-effective-diffusivity-and-tortuosity-of-a-network"]], "Performing Fickian Diffusion": [[8, "performing-fickian-diffusion"]], "Visualize the Results": [[8, "visualize-the-results"]], "Calculate the Effective Diffusivity": [[8, "calculate-the-effective-diffusivity"]], "Calculate the Tortuosity": [[8, "calculate-the-tortuosity"]], "Examples": [[1, "examples"]], "Pore Network Modeling Framework in Python": [[35, "pore-network-modeling-framework-in-python"]], "What is OpenPNM? stars": [[35, "what-is-openpnm-stars"]], "How To Cite": [[35, "how-to-cite"]], "Citation": [[35, null]], "Generating Networks and Quick Visualization": [[26, "generating-networks-and-quick-visualization"]], "CubicTemplates": [[26, "cubictemplates"]], "Other Cubic Lattices": [[26, "other-cubic-lattices"]], "Random Network: Delaunay and Voronoi Tessellations": [[26, "random-network-delaunay-and-voronoi-tessellations"]], "Imported Networks": [[26, "imported-networks"]], "Size Factors and Transport Conductance": [[23, "size-factors-and-transport-conductance"]], "Conductance in pore network models": [[23, "conductance-in-pore-network-models"]], "Conductance of a single conduit": [[23, "conductance-of-a-single-conduit"]], "Size factors vs. shape factors": [[23, "size-factors-vs-shape-factors"]], "Built-in size factor models in OpenPNM": [[23, "built-in-size-factor-models-in-openpnm"]], "Deriving the size factor for arbitrary-shaped pores and throats": [[23, "deriving-the-size-factor-for-arbitrary-shaped-pores-and-throats"]], "Diffusive size factor": [[23, "diffusive-size-factor"]], "Hydraulic size factor": [[23, "hydraulic-size-factor"]], "Conduit vs. element size factor": [[23, "conduit-vs-element-size-factor"]], "Storage of Network Data and Topology": [[27, "storage-of-network-data-and-topology"]], "Spreadsheet Analogy": [[27, "spreadsheet-analogy"]], "Rules to Maintain Data Integrity": [[27, "rules-to-maintain-data-integrity"]], "All Values are Converted to Numpy Arrays": [[27, "all-values-are-converted-to-numpy-arrays"]], "Dictionary Keys Must Start With \u2018pore\u2019 or \u2018throat\u2019": [[27, "dictionary-keys-must-start-with-pore-or-throat"]], "Any Scalars are Expanded to a Full-Length Vector": [[27, "any-scalars-are-expanded-to-a-full-length-vector"]], "Nested Dictionary Names are Allowed": [[27, "nested-dictionary-names-are-allowed"]], "Boolean Arrays are Treated as Labels, Numerical Arrays are Treated as Properties": [[27, "boolean-arrays-are-treated-as-labels-numerical-arrays-are-treated-as-properties"]], "Dictionary Keys with a Leading Underscore are Hidden": [[27, "dictionary-keys-with-a-leading-underscore-are-hidden"]], "The param prefix": [[27, "the-param-prefix"]], "Representing Topology": [[27, "representing-topology"]], "Adjacency Matrices: Dense vs Sparse": [[27, "adjacency-matrices-dense-vs-sparse"]], "conduit data": [[27, "conduit-data"]], "Assigning Geometric Properties": [[29, "assigning-geometric-properties"]], "Manually Calculating Properties": [[29, "manually-calculating-properties"]], "Adding pore and throat sizes from scipy.stats distributions": [[29, "adding-pore-and-throat-sizes-from-scipy-stats-distributions"]], "Computing throat length": [[29, "computing-throat-length"]], "Computing pore surface areas": [[29, "computing-pore-surface-areas"]], "Using Pore-scale Models from the Library": [[29, "using-pore-scale-models-from-the-library"]], "Using Predefined Collections of Models": [[29, "using-predefined-collections-of-models"]], "Customizing Models by Overwriting Them or Their Arguments": [[29, "customizing-models-by-overwriting-them-or-their-arguments"]], "Introduction to the Dependency Handler": [[29, "introduction-to-the-dependency-handler"]], "Available Matrix Solvers": [[19, "available-matrix-solvers"]], "Adjusting Pore Size Distributions": [[6, "adjusting-pore-size-distributions"]], "Adjusting Pore and Throat Sizes": [[6, "adjusting-pore-and-throat-sizes"]], "Using scipy.stats classes directly": [[6, "using-scipy-stats-classes-directly"]], "Using pre-defined models in OpenPNM": [[6, "using-pre-defined-models-in-openpnm"]], "Steady State Transport": [[20, "steady-state-transport"]], "Creating the Coefficient Matrix": [[20, "creating-the-coefficient-matrix"]], "Applying Value and Rate Boundary Conditions": [[20, "applying-value-and-rate-boundary-conditions"]], "Solving the System of Equations": [[20, "solving-the-system-of-equations"]], "Sparse Matrices": [[20, "sparse-matrices"]], "Reactive Transport": [[22, "reactive-transport"]], "Using the source term functionality in OpenPNM": [[22, "using-the-source-term-functionality-in-openpnm"]], "How the source-term functionality works": [[22, "how-the-source-term-functionality-works"]], "Managing Clustered Networks": [[18, "managing-clustered-networks"]], "Creating a Clustered Network": [[18, "creating-a-clustered-network"]], "Illustrating the Problem": [[18, "illustrating-the-problem"]], "Fixing Clustered Networks": [[18, "fixing-clustered-networks"]], "Predicting absolute permeability": [[5, "predicting-absolute-permeability"]], "Create phase object": [[5, "create-phase-object"]], "Apply Stokes flow": [[5, "apply-stokes-flow"]], "Calculate permeability": [[5, "calculate-permeability"]], "Applications": [[0, "applications"]], "Explanation of Units": [[21, "explanation-of-units"]], "Use of absolute pressure vs gauge pressure": [[21, "use-of-absolute-pressure-vs-gauge-pressure"]], "Unit conversion packages and challenges": [[21, "unit-conversion-packages-and-challenges"]]}, "indexentries": {"module": [[37, "module-openpnm.algorithms"], [459, "module-openpnm.core"], [547, "module-openpnm.integrators"], [551, "module-openpnm.io"], [575, "module-openpnm.models"], [576, "module-openpnm.models.collections"], [577, "module-openpnm.models.collections.geometry"], [585, "module-openpnm.models.collections.network"], [586, "module-openpnm.models.collections.phase"], [588, "module-openpnm.models.collections.phase.gas"], [589, "module-openpnm.models.collections.phase.liquid"], [592, "module-openpnm.models.collections.physics"], [595, "module-openpnm.models.geometry"], [596, "module-openpnm.models.geometry.conduit_lengths"], [610, "module-openpnm.models.geometry.diffusive_size_factors"], [625, "module-openpnm.models.geometry.hydraulic_size_factors"], [640, "module-openpnm.models.geometry.pore_cross_sectional_area"], [646, "module-openpnm.models.geometry.pore_seed"], [649, "module-openpnm.models.geometry.pore_size"], [657, "module-openpnm.models.geometry.pore_surface_area"], [662, "module-openpnm.models.geometry.pore_volume"], [668, "module-openpnm.models.geometry.throat_capillary_shape_factor"], [671, "module-openpnm.models.geometry.throat_centroid"], [673, "module-openpnm.models.geometry.throat_cross_sectional_area"], [677, "module-openpnm.models.geometry.throat_endpoints"], [679, "module-openpnm.models.geometry.throat_length"], [693, "module-openpnm.models.geometry.throat_perimeter"], [697, "module-openpnm.models.geometry.throat_seed"], [700, "module-openpnm.models.geometry.throat_size"], [707, "module-openpnm.models.geometry.throat_surface_area"], [712, "module-openpnm.models.geometry.throat_vector"], [714, "module-openpnm.models.geometry.throat_volume"], [721, "module-openpnm.models.misc"], [742, "module-openpnm.models.network"], [758, "module-openpnm.models.phase"], [760, "module-openpnm.models.phase.critical_props"], [761, "module-openpnm.models.phase.density"], [767, "module-openpnm.models.phase.diffusivity"], [771, "module-openpnm.models.phase.heat_capacity"], [776, "module-openpnm.models.phase.misc"], [779, "module-openpnm.models.phase.mixtures"], [785, "module-openpnm.models.phase.partition_coefficient"], [787, "module-openpnm.models.phase.surface_tension"], [791, "module-openpnm.models.phase.thermal_conductivity"], [798, "module-openpnm.models.phase.vapor_pressure"], [802, "module-openpnm.models.phase.viscosity"], [809, "module-openpnm.models.physics"], [810, "module-openpnm.models.physics.ad_dif_conductance"], [812, "module-openpnm.models.physics.capillary_pressure"], [815, "module-openpnm.models.physics.diffusive_conductance"], [820, "module-openpnm.models.physics.electrical_conductance"], [823, "module-openpnm.models.physics.hydraulic_conductance"], [827, "module-openpnm.models.physics.meniscus"], [831, "module-openpnm.models.physics.multiphase"], [834, "module-openpnm.models.physics.source_terms"], [845, "module-openpnm.models.physics.thermal_conductance"], [848, "module-openpnm.network"], [1197, "module-openpnm.phase"], [1597, "module-openpnm.solvers"], [1614, "module-openpnm.topotools"], [1663, "module-openpnm.utils"], [1811, "module-openpnm"]], "openpnm.algorithms": [[37, "module-openpnm.algorithms"]], "advectiondiffusion (class in openpnm.algorithms)": [[38, "openpnm.algorithms.AdvectionDiffusion"]], "clear() (advectiondiffusion method)": [[39, "openpnm.algorithms.AdvectionDiffusion.clear"]], "clear_bcs() (advectiondiffusion method)": [[40, "openpnm.algorithms.AdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (advectiondiffusion method)": [[41, "openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (advectiondiffusion method)": [[42, "openpnm.algorithms.AdvectionDiffusion.clear_value_BCs"]], "copy() (advectiondiffusion method)": [[43, "openpnm.algorithms.AdvectionDiffusion.copy"]], "filter_by_label() (advectiondiffusion method)": [[44, "openpnm.algorithms.AdvectionDiffusion.filter_by_label"]], "fromkeys() (advectiondiffusion method)": [[45, "openpnm.algorithms.AdvectionDiffusion.fromkeys"]], "get() (advectiondiffusion method)": [[46, "openpnm.algorithms.AdvectionDiffusion.get"]], "get_conduit_data() (advectiondiffusion method)": [[47, "openpnm.algorithms.AdvectionDiffusion.get_conduit_data"]], "interpolate_data() (advectiondiffusion method)": [[48, "openpnm.algorithms.AdvectionDiffusion.interpolate_data"]], "items() (advectiondiffusion method)": [[49, "openpnm.algorithms.AdvectionDiffusion.items"]], "keys() (advectiondiffusion method)": [[50, "openpnm.algorithms.AdvectionDiffusion.keys"]], "labels() (advectiondiffusion method)": [[51, "openpnm.algorithms.AdvectionDiffusion.labels"]], "num_pores() (advectiondiffusion method)": [[52, "openpnm.algorithms.AdvectionDiffusion.num_pores"]], "num_throats() (advectiondiffusion method)": [[53, "openpnm.algorithms.AdvectionDiffusion.num_throats"]], "pop() (advectiondiffusion method)": [[54, "openpnm.algorithms.AdvectionDiffusion.pop"]], "popitem() (advectiondiffusion method)": [[55, "openpnm.algorithms.AdvectionDiffusion.popitem"]], "pores() (advectiondiffusion method)": [[56, "openpnm.algorithms.AdvectionDiffusion.pores"]], "props() (advectiondiffusion method)": [[57, "openpnm.algorithms.AdvectionDiffusion.props"]], "rate() (advectiondiffusion method)": [[58, "openpnm.algorithms.AdvectionDiffusion.rate"]], "run() (advectiondiffusion method)": [[59, "openpnm.algorithms.AdvectionDiffusion.run"]], "set_bc() (advectiondiffusion method)": [[60, "openpnm.algorithms.AdvectionDiffusion.set_BC"]], "set_label() (advectiondiffusion method)": [[61, "openpnm.algorithms.AdvectionDiffusion.set_label"]], "set_outflow_bc() (advectiondiffusion method)": [[62, "openpnm.algorithms.AdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (advectiondiffusion method)": [[63, "openpnm.algorithms.AdvectionDiffusion.set_rate_BC"]], "set_source() (advectiondiffusion method)": [[64, "openpnm.algorithms.AdvectionDiffusion.set_source"]], "set_value_bc() (advectiondiffusion method)": [[65, "openpnm.algorithms.AdvectionDiffusion.set_value_BC"]], "setdefault() (advectiondiffusion method)": [[66, "openpnm.algorithms.AdvectionDiffusion.setdefault"]], "throats() (advectiondiffusion method)": [[67, "openpnm.algorithms.AdvectionDiffusion.throats"]], "to_indices() (advectiondiffusion method)": [[68, "openpnm.algorithms.AdvectionDiffusion.to_indices"]], "to_mask() (advectiondiffusion method)": [[69, "openpnm.algorithms.AdvectionDiffusion.to_mask"]], "update() (advectiondiffusion method)": [[70, "openpnm.algorithms.AdvectionDiffusion.update"]], "values() (advectiondiffusion method)": [[71, "openpnm.algorithms.AdvectionDiffusion.values"]], "algorithm (class in openpnm.algorithms)": [[72, "openpnm.algorithms.Algorithm"]], "clear() (algorithm method)": [[73, "openpnm.algorithms.Algorithm.clear"]], "clear_bcs() (algorithm method)": [[74, "openpnm.algorithms.Algorithm.clear_BCs"]], "copy() (algorithm method)": [[75, "openpnm.algorithms.Algorithm.copy"]], "filter_by_label() (algorithm method)": [[76, "openpnm.algorithms.Algorithm.filter_by_label"]], "fromkeys() (algorithm method)": [[77, "openpnm.algorithms.Algorithm.fromkeys"]], "get() (algorithm method)": [[78, "openpnm.algorithms.Algorithm.get"]], "get_conduit_data() (algorithm method)": [[79, "openpnm.algorithms.Algorithm.get_conduit_data"]], "interpolate_data() (algorithm method)": [[80, "openpnm.algorithms.Algorithm.interpolate_data"]], "items() (algorithm method)": [[81, "openpnm.algorithms.Algorithm.items"]], "keys() (algorithm method)": [[82, "openpnm.algorithms.Algorithm.keys"]], "labels() (algorithm method)": [[83, "openpnm.algorithms.Algorithm.labels"]], "num_pores() (algorithm method)": [[84, "openpnm.algorithms.Algorithm.num_pores"]], "num_throats() (algorithm method)": [[85, "openpnm.algorithms.Algorithm.num_throats"]], "pop() (algorithm method)": [[86, "openpnm.algorithms.Algorithm.pop"]], "popitem() (algorithm method)": [[87, "openpnm.algorithms.Algorithm.popitem"]], "pores() (algorithm method)": [[88, "openpnm.algorithms.Algorithm.pores"]], "props() (algorithm method)": [[89, "openpnm.algorithms.Algorithm.props"]], "set_bc() (algorithm method)": [[90, "openpnm.algorithms.Algorithm.set_BC"]], "set_label() (algorithm method)": [[91, "openpnm.algorithms.Algorithm.set_label"]], "setdefault() (algorithm method)": [[92, "openpnm.algorithms.Algorithm.setdefault"]], "throats() (algorithm method)": [[93, "openpnm.algorithms.Algorithm.throats"]], "to_indices() (algorithm method)": [[94, "openpnm.algorithms.Algorithm.to_indices"]], "to_mask() (algorithm method)": [[95, "openpnm.algorithms.Algorithm.to_mask"]], "update() (algorithm method)": [[96, "openpnm.algorithms.Algorithm.update"]], "values() (algorithm method)": [[97, "openpnm.algorithms.Algorithm.values"]], "drainage (class in openpnm.algorithms)": [[98, "openpnm.algorithms.Drainage"]], "apply_trapping() (drainage method)": [[99, "openpnm.algorithms.Drainage.apply_trapping"]], "clear() (drainage method)": [[100, "openpnm.algorithms.Drainage.clear"]], "clear_bcs() (drainage method)": [[101, "openpnm.algorithms.Drainage.clear_BCs"]], "copy() (drainage method)": [[102, "openpnm.algorithms.Drainage.copy"]], "filter_by_label() (drainage method)": [[103, "openpnm.algorithms.Drainage.filter_by_label"]], "fromkeys() (drainage method)": [[104, "openpnm.algorithms.Drainage.fromkeys"]], "get() (drainage method)": [[105, "openpnm.algorithms.Drainage.get"]], "get_conduit_data() (drainage method)": [[106, "openpnm.algorithms.Drainage.get_conduit_data"]], "interpolate_data() (drainage method)": [[107, "openpnm.algorithms.Drainage.interpolate_data"]], "items() (drainage method)": [[108, "openpnm.algorithms.Drainage.items"]], "keys() (drainage method)": [[109, "openpnm.algorithms.Drainage.keys"]], "labels() (drainage method)": [[110, "openpnm.algorithms.Drainage.labels"]], "num_pores() (drainage method)": [[111, "openpnm.algorithms.Drainage.num_pores"]], "num_throats() (drainage method)": [[112, "openpnm.algorithms.Drainage.num_throats"]], "pc_curve() (drainage method)": [[113, "openpnm.algorithms.Drainage.pc_curve"]], "pop() (drainage method)": [[114, "openpnm.algorithms.Drainage.pop"]], "popitem() (drainage method)": [[115, "openpnm.algorithms.Drainage.popitem"]], "pores() (drainage method)": [[116, "openpnm.algorithms.Drainage.pores"]], "props() (drainage method)": [[117, "openpnm.algorithms.Drainage.props"]], "reset() (drainage method)": [[118, "openpnm.algorithms.Drainage.reset"]], "run() (drainage method)": [[119, "openpnm.algorithms.Drainage.run"]], "set_bc() (drainage method)": [[120, "openpnm.algorithms.Drainage.set_BC"]], "set_inlet_bc() (drainage method)": [[121, "openpnm.algorithms.Drainage.set_inlet_BC"]], "set_label() (drainage method)": [[122, "openpnm.algorithms.Drainage.set_label"]], "set_outlet_bc() (drainage method)": [[123, "openpnm.algorithms.Drainage.set_outlet_BC"]], "setdefault() (drainage method)": [[124, "openpnm.algorithms.Drainage.setdefault"]], "throats() (drainage method)": [[125, "openpnm.algorithms.Drainage.throats"]], "to_indices() (drainage method)": [[126, "openpnm.algorithms.Drainage.to_indices"]], "to_mask() (drainage method)": [[127, "openpnm.algorithms.Drainage.to_mask"]], "update() (drainage method)": [[128, "openpnm.algorithms.Drainage.update"]], "values() (drainage method)": [[129, "openpnm.algorithms.Drainage.values"]], "fickiandiffusion (class in openpnm.algorithms)": [[130, "openpnm.algorithms.FickianDiffusion"]], "clear() (fickiandiffusion method)": [[131, "openpnm.algorithms.FickianDiffusion.clear"]], "clear_bcs() (fickiandiffusion method)": [[132, "openpnm.algorithms.FickianDiffusion.clear_BCs"]], "clear_rate_bcs() (fickiandiffusion method)": [[133, "openpnm.algorithms.FickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (fickiandiffusion method)": [[134, "openpnm.algorithms.FickianDiffusion.clear_value_BCs"]], "copy() (fickiandiffusion method)": [[135, "openpnm.algorithms.FickianDiffusion.copy"]], "filter_by_label() (fickiandiffusion method)": [[136, "openpnm.algorithms.FickianDiffusion.filter_by_label"]], "fromkeys() (fickiandiffusion method)": [[137, "openpnm.algorithms.FickianDiffusion.fromkeys"]], "get() (fickiandiffusion method)": [[138, "openpnm.algorithms.FickianDiffusion.get"]], "get_conduit_data() (fickiandiffusion method)": [[139, "openpnm.algorithms.FickianDiffusion.get_conduit_data"]], "interpolate_data() (fickiandiffusion method)": [[140, "openpnm.algorithms.FickianDiffusion.interpolate_data"]], "items() (fickiandiffusion method)": [[141, "openpnm.algorithms.FickianDiffusion.items"]], "keys() (fickiandiffusion method)": [[142, "openpnm.algorithms.FickianDiffusion.keys"]], "labels() (fickiandiffusion method)": [[143, "openpnm.algorithms.FickianDiffusion.labels"]], "num_pores() (fickiandiffusion method)": [[144, "openpnm.algorithms.FickianDiffusion.num_pores"]], "num_throats() (fickiandiffusion method)": [[145, "openpnm.algorithms.FickianDiffusion.num_throats"]], "pop() (fickiandiffusion method)": [[146, "openpnm.algorithms.FickianDiffusion.pop"]], "popitem() (fickiandiffusion method)": [[147, "openpnm.algorithms.FickianDiffusion.popitem"]], "pores() (fickiandiffusion method)": [[148, "openpnm.algorithms.FickianDiffusion.pores"]], "props() (fickiandiffusion method)": [[149, "openpnm.algorithms.FickianDiffusion.props"]], "rate() (fickiandiffusion method)": [[150, "openpnm.algorithms.FickianDiffusion.rate"]], "run() (fickiandiffusion method)": [[151, "openpnm.algorithms.FickianDiffusion.run"]], "set_bc() (fickiandiffusion method)": [[152, "openpnm.algorithms.FickianDiffusion.set_BC"]], "set_label() (fickiandiffusion method)": [[153, "openpnm.algorithms.FickianDiffusion.set_label"]], "set_rate_bc() (fickiandiffusion method)": [[154, "openpnm.algorithms.FickianDiffusion.set_rate_BC"]], "set_source() (fickiandiffusion method)": [[155, "openpnm.algorithms.FickianDiffusion.set_source"]], "set_value_bc() (fickiandiffusion method)": [[156, "openpnm.algorithms.FickianDiffusion.set_value_BC"]], "setdefault() (fickiandiffusion method)": [[157, "openpnm.algorithms.FickianDiffusion.setdefault"]], "throats() (fickiandiffusion method)": [[158, "openpnm.algorithms.FickianDiffusion.throats"]], "to_indices() (fickiandiffusion method)": [[159, "openpnm.algorithms.FickianDiffusion.to_indices"]], "to_mask() (fickiandiffusion method)": [[160, "openpnm.algorithms.FickianDiffusion.to_mask"]], "update() (fickiandiffusion method)": [[161, "openpnm.algorithms.FickianDiffusion.update"]], "values() (fickiandiffusion method)": [[162, "openpnm.algorithms.FickianDiffusion.values"]], "fourierconduction (class in openpnm.algorithms)": [[163, "openpnm.algorithms.FourierConduction"]], "clear() (fourierconduction method)": [[164, "openpnm.algorithms.FourierConduction.clear"]], "clear_bcs() (fourierconduction method)": [[165, "openpnm.algorithms.FourierConduction.clear_BCs"]], "clear_rate_bcs() (fourierconduction method)": [[166, "openpnm.algorithms.FourierConduction.clear_rate_BCs"]], "clear_value_bcs() (fourierconduction method)": [[167, "openpnm.algorithms.FourierConduction.clear_value_BCs"]], "copy() (fourierconduction method)": [[168, "openpnm.algorithms.FourierConduction.copy"]], "filter_by_label() (fourierconduction method)": [[169, "openpnm.algorithms.FourierConduction.filter_by_label"]], "fromkeys() (fourierconduction method)": [[170, "openpnm.algorithms.FourierConduction.fromkeys"]], "get() (fourierconduction method)": [[171, "openpnm.algorithms.FourierConduction.get"]], "get_conduit_data() (fourierconduction method)": [[172, "openpnm.algorithms.FourierConduction.get_conduit_data"]], "interpolate_data() (fourierconduction method)": [[173, "openpnm.algorithms.FourierConduction.interpolate_data"]], "items() (fourierconduction method)": [[174, "openpnm.algorithms.FourierConduction.items"]], "keys() (fourierconduction method)": [[175, "openpnm.algorithms.FourierConduction.keys"]], "labels() (fourierconduction method)": [[176, "openpnm.algorithms.FourierConduction.labels"]], "num_pores() (fourierconduction method)": [[177, "openpnm.algorithms.FourierConduction.num_pores"]], "num_throats() (fourierconduction method)": [[178, "openpnm.algorithms.FourierConduction.num_throats"]], "pop() (fourierconduction method)": [[179, "openpnm.algorithms.FourierConduction.pop"]], "popitem() (fourierconduction method)": [[180, "openpnm.algorithms.FourierConduction.popitem"]], "pores() (fourierconduction method)": [[181, "openpnm.algorithms.FourierConduction.pores"]], "props() (fourierconduction method)": [[182, "openpnm.algorithms.FourierConduction.props"]], "rate() (fourierconduction method)": [[183, "openpnm.algorithms.FourierConduction.rate"]], "run() (fourierconduction method)": [[184, "openpnm.algorithms.FourierConduction.run"]], "set_bc() (fourierconduction method)": [[185, "openpnm.algorithms.FourierConduction.set_BC"]], "set_label() (fourierconduction method)": [[186, "openpnm.algorithms.FourierConduction.set_label"]], "set_rate_bc() (fourierconduction method)": [[187, "openpnm.algorithms.FourierConduction.set_rate_BC"]], "set_source() (fourierconduction method)": [[188, "openpnm.algorithms.FourierConduction.set_source"]], "set_value_bc() (fourierconduction method)": [[189, "openpnm.algorithms.FourierConduction.set_value_BC"]], "setdefault() (fourierconduction method)": [[190, "openpnm.algorithms.FourierConduction.setdefault"]], "throats() (fourierconduction method)": [[191, "openpnm.algorithms.FourierConduction.throats"]], "to_indices() (fourierconduction method)": [[192, "openpnm.algorithms.FourierConduction.to_indices"]], "to_mask() (fourierconduction method)": [[193, "openpnm.algorithms.FourierConduction.to_mask"]], "update() (fourierconduction method)": [[194, "openpnm.algorithms.FourierConduction.update"]], "values() (fourierconduction method)": [[195, "openpnm.algorithms.FourierConduction.values"]], "invasionpercolation (class in openpnm.algorithms)": [[196, "openpnm.algorithms.InvasionPercolation"]], "apply_trapping() (invasionpercolation method)": [[197, "openpnm.algorithms.InvasionPercolation.apply_trapping"]], "clear() (invasionpercolation method)": [[198, "openpnm.algorithms.InvasionPercolation.clear"]], "clear_bcs() (invasionpercolation method)": [[199, "openpnm.algorithms.InvasionPercolation.clear_BCs"]], "copy() (invasionpercolation method)": [[200, "openpnm.algorithms.InvasionPercolation.copy"]], "filter_by_label() (invasionpercolation method)": [[201, "openpnm.algorithms.InvasionPercolation.filter_by_label"]], "fromkeys() (invasionpercolation method)": [[202, "openpnm.algorithms.InvasionPercolation.fromkeys"]], "get() (invasionpercolation method)": [[203, "openpnm.algorithms.InvasionPercolation.get"]], "get_conduit_data() (invasionpercolation method)": [[204, "openpnm.algorithms.InvasionPercolation.get_conduit_data"]], "interpolate_data() (invasionpercolation method)": [[205, "openpnm.algorithms.InvasionPercolation.interpolate_data"]], "items() (invasionpercolation method)": [[206, "openpnm.algorithms.InvasionPercolation.items"]], "keys() (invasionpercolation method)": [[207, "openpnm.algorithms.InvasionPercolation.keys"]], "labels() (invasionpercolation method)": [[208, "openpnm.algorithms.InvasionPercolation.labels"]], "num_pores() (invasionpercolation method)": [[209, "openpnm.algorithms.InvasionPercolation.num_pores"]], "num_throats() (invasionpercolation method)": [[210, "openpnm.algorithms.InvasionPercolation.num_throats"]], "pc_curve() (invasionpercolation method)": [[211, "openpnm.algorithms.InvasionPercolation.pc_curve"]], "pop() (invasionpercolation method)": [[212, "openpnm.algorithms.InvasionPercolation.pop"]], "popitem() (invasionpercolation method)": [[213, "openpnm.algorithms.InvasionPercolation.popitem"]], "pores() (invasionpercolation method)": [[214, "openpnm.algorithms.InvasionPercolation.pores"]], "props() (invasionpercolation method)": [[215, "openpnm.algorithms.InvasionPercolation.props"]], "reset() (invasionpercolation method)": [[216, "openpnm.algorithms.InvasionPercolation.reset"]], "run() (invasionpercolation method)": [[217, "openpnm.algorithms.InvasionPercolation.run"]], "set_bc() (invasionpercolation method)": [[218, "openpnm.algorithms.InvasionPercolation.set_BC"]], "set_inlet_bc() (invasionpercolation method)": [[219, "openpnm.algorithms.InvasionPercolation.set_inlet_BC"]], "set_label() (invasionpercolation method)": [[220, "openpnm.algorithms.InvasionPercolation.set_label"]], "set_outlet_bc() (invasionpercolation method)": [[221, "openpnm.algorithms.InvasionPercolation.set_outlet_BC"]], "setdefault() (invasionpercolation method)": [[222, "openpnm.algorithms.InvasionPercolation.setdefault"]], "throats() (invasionpercolation method)": [[223, "openpnm.algorithms.InvasionPercolation.throats"]], "to_indices() (invasionpercolation method)": [[224, "openpnm.algorithms.InvasionPercolation.to_indices"]], "to_mask() (invasionpercolation method)": [[225, "openpnm.algorithms.InvasionPercolation.to_mask"]], "update() (invasionpercolation method)": [[226, "openpnm.algorithms.InvasionPercolation.update"]], "values() (invasionpercolation method)": [[227, "openpnm.algorithms.InvasionPercolation.values"]], "ohmicconduction (class in openpnm.algorithms)": [[228, "openpnm.algorithms.OhmicConduction"]], "clear() (ohmicconduction method)": [[229, "openpnm.algorithms.OhmicConduction.clear"]], "clear_bcs() (ohmicconduction method)": [[230, "openpnm.algorithms.OhmicConduction.clear_BCs"]], "clear_rate_bcs() (ohmicconduction method)": [[231, "openpnm.algorithms.OhmicConduction.clear_rate_BCs"]], "clear_value_bcs() (ohmicconduction method)": [[232, "openpnm.algorithms.OhmicConduction.clear_value_BCs"]], "copy() (ohmicconduction method)": [[233, "openpnm.algorithms.OhmicConduction.copy"]], "filter_by_label() (ohmicconduction method)": [[234, "openpnm.algorithms.OhmicConduction.filter_by_label"]], "fromkeys() (ohmicconduction method)": [[235, "openpnm.algorithms.OhmicConduction.fromkeys"]], "get() (ohmicconduction method)": [[236, "openpnm.algorithms.OhmicConduction.get"]], "get_conduit_data() (ohmicconduction method)": [[237, "openpnm.algorithms.OhmicConduction.get_conduit_data"]], "interpolate_data() (ohmicconduction method)": [[238, "openpnm.algorithms.OhmicConduction.interpolate_data"]], "items() (ohmicconduction method)": [[239, "openpnm.algorithms.OhmicConduction.items"]], "keys() (ohmicconduction method)": [[240, "openpnm.algorithms.OhmicConduction.keys"]], "labels() (ohmicconduction method)": [[241, "openpnm.algorithms.OhmicConduction.labels"]], "num_pores() (ohmicconduction method)": [[242, "openpnm.algorithms.OhmicConduction.num_pores"]], "num_throats() (ohmicconduction method)": [[243, "openpnm.algorithms.OhmicConduction.num_throats"]], "pop() (ohmicconduction method)": [[244, "openpnm.algorithms.OhmicConduction.pop"]], "popitem() (ohmicconduction method)": [[245, "openpnm.algorithms.OhmicConduction.popitem"]], "pores() (ohmicconduction method)": [[246, "openpnm.algorithms.OhmicConduction.pores"]], "props() (ohmicconduction method)": [[247, "openpnm.algorithms.OhmicConduction.props"]], "rate() (ohmicconduction method)": [[248, "openpnm.algorithms.OhmicConduction.rate"]], "run() (ohmicconduction method)": [[249, "openpnm.algorithms.OhmicConduction.run"]], "set_bc() (ohmicconduction method)": [[250, "openpnm.algorithms.OhmicConduction.set_BC"]], "set_label() (ohmicconduction method)": [[251, "openpnm.algorithms.OhmicConduction.set_label"]], "set_rate_bc() (ohmicconduction method)": [[252, "openpnm.algorithms.OhmicConduction.set_rate_BC"]], "set_source() (ohmicconduction method)": [[253, "openpnm.algorithms.OhmicConduction.set_source"]], "set_value_bc() (ohmicconduction method)": [[254, "openpnm.algorithms.OhmicConduction.set_value_BC"]], "setdefault() (ohmicconduction method)": [[255, "openpnm.algorithms.OhmicConduction.setdefault"]], "throats() (ohmicconduction method)": [[256, "openpnm.algorithms.OhmicConduction.throats"]], "to_indices() (ohmicconduction method)": [[257, "openpnm.algorithms.OhmicConduction.to_indices"]], "to_mask() (ohmicconduction method)": [[258, "openpnm.algorithms.OhmicConduction.to_mask"]], "update() (ohmicconduction method)": [[259, "openpnm.algorithms.OhmicConduction.update"]], "values() (ohmicconduction method)": [[260, "openpnm.algorithms.OhmicConduction.values"]], "reactivetransport (class in openpnm.algorithms)": [[261, "openpnm.algorithms.ReactiveTransport"]], "clear() (reactivetransport method)": [[262, "openpnm.algorithms.ReactiveTransport.clear"]], "clear_bcs() (reactivetransport method)": [[263, "openpnm.algorithms.ReactiveTransport.clear_BCs"]], "clear_rate_bcs() (reactivetransport method)": [[264, "openpnm.algorithms.ReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (reactivetransport method)": [[265, "openpnm.algorithms.ReactiveTransport.clear_value_BCs"]], "copy() (reactivetransport method)": [[266, "openpnm.algorithms.ReactiveTransport.copy"]], "filter_by_label() (reactivetransport method)": [[267, "openpnm.algorithms.ReactiveTransport.filter_by_label"]], "fromkeys() (reactivetransport method)": [[268, "openpnm.algorithms.ReactiveTransport.fromkeys"]], "get() (reactivetransport method)": [[269, "openpnm.algorithms.ReactiveTransport.get"]], "get_conduit_data() (reactivetransport method)": [[270, "openpnm.algorithms.ReactiveTransport.get_conduit_data"]], "interpolate_data() (reactivetransport method)": [[271, "openpnm.algorithms.ReactiveTransport.interpolate_data"]], "items() (reactivetransport method)": [[272, "openpnm.algorithms.ReactiveTransport.items"]], "keys() (reactivetransport method)": [[273, "openpnm.algorithms.ReactiveTransport.keys"]], "labels() (reactivetransport method)": [[274, "openpnm.algorithms.ReactiveTransport.labels"]], "num_pores() (reactivetransport method)": [[275, "openpnm.algorithms.ReactiveTransport.num_pores"]], "num_throats() (reactivetransport method)": [[276, "openpnm.algorithms.ReactiveTransport.num_throats"]], "pop() (reactivetransport method)": [[277, "openpnm.algorithms.ReactiveTransport.pop"]], "popitem() (reactivetransport method)": [[278, "openpnm.algorithms.ReactiveTransport.popitem"]], "pores() (reactivetransport method)": [[279, "openpnm.algorithms.ReactiveTransport.pores"]], "props() (reactivetransport method)": [[280, "openpnm.algorithms.ReactiveTransport.props"]], "rate() (reactivetransport method)": [[281, "openpnm.algorithms.ReactiveTransport.rate"]], "run() (reactivetransport method)": [[282, "openpnm.algorithms.ReactiveTransport.run"]], "set_bc() (reactivetransport method)": [[283, "openpnm.algorithms.ReactiveTransport.set_BC"]], "set_label() (reactivetransport method)": [[284, "openpnm.algorithms.ReactiveTransport.set_label"]], "set_rate_bc() (reactivetransport method)": [[285, "openpnm.algorithms.ReactiveTransport.set_rate_BC"]], "set_source() (reactivetransport method)": [[286, "openpnm.algorithms.ReactiveTransport.set_source"]], "set_value_bc() (reactivetransport method)": [[287, "openpnm.algorithms.ReactiveTransport.set_value_BC"]], "setdefault() (reactivetransport method)": [[288, "openpnm.algorithms.ReactiveTransport.setdefault"]], "throats() (reactivetransport method)": [[289, "openpnm.algorithms.ReactiveTransport.throats"]], "to_indices() (reactivetransport method)": [[290, "openpnm.algorithms.ReactiveTransport.to_indices"]], "to_mask() (reactivetransport method)": [[291, "openpnm.algorithms.ReactiveTransport.to_mask"]], "update() (reactivetransport method)": [[292, "openpnm.algorithms.ReactiveTransport.update"]], "values() (reactivetransport method)": [[293, "openpnm.algorithms.ReactiveTransport.values"]], "stokesflow (class in openpnm.algorithms)": [[294, "openpnm.algorithms.StokesFlow"]], "clear() (stokesflow method)": [[295, "openpnm.algorithms.StokesFlow.clear"]], "clear_bcs() (stokesflow method)": [[296, "openpnm.algorithms.StokesFlow.clear_BCs"]], "clear_rate_bcs() (stokesflow method)": [[297, "openpnm.algorithms.StokesFlow.clear_rate_BCs"]], "clear_value_bcs() (stokesflow method)": [[298, "openpnm.algorithms.StokesFlow.clear_value_BCs"]], "copy() (stokesflow method)": [[299, "openpnm.algorithms.StokesFlow.copy"]], "filter_by_label() (stokesflow method)": [[300, "openpnm.algorithms.StokesFlow.filter_by_label"]], "fromkeys() (stokesflow method)": [[301, "openpnm.algorithms.StokesFlow.fromkeys"]], "get() (stokesflow method)": [[302, "openpnm.algorithms.StokesFlow.get"]], "get_conduit_data() (stokesflow method)": [[303, "openpnm.algorithms.StokesFlow.get_conduit_data"]], "interpolate_data() (stokesflow method)": [[304, "openpnm.algorithms.StokesFlow.interpolate_data"]], "items() (stokesflow method)": [[305, "openpnm.algorithms.StokesFlow.items"]], "keys() (stokesflow method)": [[306, "openpnm.algorithms.StokesFlow.keys"]], "labels() (stokesflow method)": [[307, "openpnm.algorithms.StokesFlow.labels"]], "num_pores() (stokesflow method)": [[308, "openpnm.algorithms.StokesFlow.num_pores"]], "num_throats() (stokesflow method)": [[309, "openpnm.algorithms.StokesFlow.num_throats"]], "pop() (stokesflow method)": [[310, "openpnm.algorithms.StokesFlow.pop"]], "popitem() (stokesflow method)": [[311, "openpnm.algorithms.StokesFlow.popitem"]], "pores() (stokesflow method)": [[312, "openpnm.algorithms.StokesFlow.pores"]], "props() (stokesflow method)": [[313, "openpnm.algorithms.StokesFlow.props"]], "rate() (stokesflow method)": [[314, "openpnm.algorithms.StokesFlow.rate"]], "run() (stokesflow method)": [[315, "openpnm.algorithms.StokesFlow.run"]], "set_bc() (stokesflow method)": [[316, "openpnm.algorithms.StokesFlow.set_BC"]], "set_label() (stokesflow method)": [[317, "openpnm.algorithms.StokesFlow.set_label"]], "set_rate_bc() (stokesflow method)": [[318, "openpnm.algorithms.StokesFlow.set_rate_BC"]], "set_source() (stokesflow method)": [[319, "openpnm.algorithms.StokesFlow.set_source"]], "set_value_bc() (stokesflow method)": [[320, "openpnm.algorithms.StokesFlow.set_value_BC"]], "setdefault() (stokesflow method)": [[321, "openpnm.algorithms.StokesFlow.setdefault"]], "throats() (stokesflow method)": [[322, "openpnm.algorithms.StokesFlow.throats"]], "to_indices() (stokesflow method)": [[323, "openpnm.algorithms.StokesFlow.to_indices"]], "to_mask() (stokesflow method)": [[324, "openpnm.algorithms.StokesFlow.to_mask"]], "update() (stokesflow method)": [[325, "openpnm.algorithms.StokesFlow.update"]], "values() (stokesflow method)": [[326, "openpnm.algorithms.StokesFlow.values"]], "transientadvectiondiffusion (class in openpnm.algorithms)": [[327, "openpnm.algorithms.TransientAdvectionDiffusion"]], "clear() (transientadvectiondiffusion method)": [[328, "openpnm.algorithms.TransientAdvectionDiffusion.clear"]], "clear_bcs() (transientadvectiondiffusion method)": [[329, "openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (transientadvectiondiffusion method)": [[330, "openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientadvectiondiffusion method)": [[331, "openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs"]], "copy() (transientadvectiondiffusion method)": [[332, "openpnm.algorithms.TransientAdvectionDiffusion.copy"]], "filter_by_label() (transientadvectiondiffusion method)": [[333, "openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label"]], "fromkeys() (transientadvectiondiffusion method)": [[334, "openpnm.algorithms.TransientAdvectionDiffusion.fromkeys"]], "get() (transientadvectiondiffusion method)": [[335, "openpnm.algorithms.TransientAdvectionDiffusion.get"]], "get_conduit_data() (transientadvectiondiffusion method)": [[336, "openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data"]], "interpolate_data() (transientadvectiondiffusion method)": [[337, "openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data"]], "items() (transientadvectiondiffusion method)": [[338, "openpnm.algorithms.TransientAdvectionDiffusion.items"]], "keys() (transientadvectiondiffusion method)": [[339, "openpnm.algorithms.TransientAdvectionDiffusion.keys"]], "labels() (transientadvectiondiffusion method)": [[340, "openpnm.algorithms.TransientAdvectionDiffusion.labels"]], "num_pores() (transientadvectiondiffusion method)": [[341, "openpnm.algorithms.TransientAdvectionDiffusion.num_pores"]], "num_throats() (transientadvectiondiffusion method)": [[342, "openpnm.algorithms.TransientAdvectionDiffusion.num_throats"]], "pop() (transientadvectiondiffusion method)": [[343, "openpnm.algorithms.TransientAdvectionDiffusion.pop"]], "popitem() (transientadvectiondiffusion method)": [[344, "openpnm.algorithms.TransientAdvectionDiffusion.popitem"]], "pores() (transientadvectiondiffusion method)": [[345, "openpnm.algorithms.TransientAdvectionDiffusion.pores"]], "props() (transientadvectiondiffusion method)": [[346, "openpnm.algorithms.TransientAdvectionDiffusion.props"]], "rate() (transientadvectiondiffusion method)": [[347, "openpnm.algorithms.TransientAdvectionDiffusion.rate"]], "run() (transientadvectiondiffusion method)": [[348, "openpnm.algorithms.TransientAdvectionDiffusion.run"]], "set_bc() (transientadvectiondiffusion method)": [[349, "openpnm.algorithms.TransientAdvectionDiffusion.set_BC"]], "set_label() (transientadvectiondiffusion method)": [[350, "openpnm.algorithms.TransientAdvectionDiffusion.set_label"]], "set_outflow_bc() (transientadvectiondiffusion method)": [[351, "openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (transientadvectiondiffusion method)": [[352, "openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC"]], "set_source() (transientadvectiondiffusion method)": [[353, "openpnm.algorithms.TransientAdvectionDiffusion.set_source"]], "set_value_bc() (transientadvectiondiffusion method)": [[354, "openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC"]], "setdefault() (transientadvectiondiffusion method)": [[355, "openpnm.algorithms.TransientAdvectionDiffusion.setdefault"]], "throats() (transientadvectiondiffusion method)": [[356, "openpnm.algorithms.TransientAdvectionDiffusion.throats"]], "to_indices() (transientadvectiondiffusion method)": [[357, "openpnm.algorithms.TransientAdvectionDiffusion.to_indices"]], "to_mask() (transientadvectiondiffusion method)": [[358, "openpnm.algorithms.TransientAdvectionDiffusion.to_mask"]], "update() (transientadvectiondiffusion method)": [[359, "openpnm.algorithms.TransientAdvectionDiffusion.update"]], "values() (transientadvectiondiffusion method)": [[360, "openpnm.algorithms.TransientAdvectionDiffusion.values"]], "transientfickiandiffusion (class in openpnm.algorithms)": [[361, "openpnm.algorithms.TransientFickianDiffusion"]], "clear() (transientfickiandiffusion method)": [[362, "openpnm.algorithms.TransientFickianDiffusion.clear"]], "clear_bcs() (transientfickiandiffusion method)": [[363, "openpnm.algorithms.TransientFickianDiffusion.clear_BCs"]], "clear_rate_bcs() (transientfickiandiffusion method)": [[364, "openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientfickiandiffusion method)": [[365, "openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs"]], "copy() (transientfickiandiffusion method)": [[366, "openpnm.algorithms.TransientFickianDiffusion.copy"]], "filter_by_label() (transientfickiandiffusion method)": [[367, "openpnm.algorithms.TransientFickianDiffusion.filter_by_label"]], "fromkeys() (transientfickiandiffusion method)": [[368, "openpnm.algorithms.TransientFickianDiffusion.fromkeys"]], "get() (transientfickiandiffusion method)": [[369, "openpnm.algorithms.TransientFickianDiffusion.get"]], "get_conduit_data() (transientfickiandiffusion method)": [[370, "openpnm.algorithms.TransientFickianDiffusion.get_conduit_data"]], "interpolate_data() (transientfickiandiffusion method)": [[371, "openpnm.algorithms.TransientFickianDiffusion.interpolate_data"]], "items() (transientfickiandiffusion method)": [[372, "openpnm.algorithms.TransientFickianDiffusion.items"]], "keys() (transientfickiandiffusion method)": [[373, "openpnm.algorithms.TransientFickianDiffusion.keys"]], "labels() (transientfickiandiffusion method)": [[374, "openpnm.algorithms.TransientFickianDiffusion.labels"]], "num_pores() (transientfickiandiffusion method)": [[375, "openpnm.algorithms.TransientFickianDiffusion.num_pores"]], "num_throats() (transientfickiandiffusion method)": [[376, "openpnm.algorithms.TransientFickianDiffusion.num_throats"]], "pop() (transientfickiandiffusion method)": [[377, "openpnm.algorithms.TransientFickianDiffusion.pop"]], "popitem() (transientfickiandiffusion method)": [[378, "openpnm.algorithms.TransientFickianDiffusion.popitem"]], "pores() (transientfickiandiffusion method)": [[379, "openpnm.algorithms.TransientFickianDiffusion.pores"]], "props() (transientfickiandiffusion method)": [[380, "openpnm.algorithms.TransientFickianDiffusion.props"]], "rate() (transientfickiandiffusion method)": [[381, "openpnm.algorithms.TransientFickianDiffusion.rate"]], "run() (transientfickiandiffusion method)": [[382, "openpnm.algorithms.TransientFickianDiffusion.run"]], "set_bc() (transientfickiandiffusion method)": [[383, "openpnm.algorithms.TransientFickianDiffusion.set_BC"]], "set_label() (transientfickiandiffusion method)": [[384, "openpnm.algorithms.TransientFickianDiffusion.set_label"]], "set_rate_bc() (transientfickiandiffusion method)": [[385, "openpnm.algorithms.TransientFickianDiffusion.set_rate_BC"]], "set_source() (transientfickiandiffusion method)": [[386, "openpnm.algorithms.TransientFickianDiffusion.set_source"]], "set_value_bc() (transientfickiandiffusion method)": [[387, "openpnm.algorithms.TransientFickianDiffusion.set_value_BC"]], "setdefault() (transientfickiandiffusion method)": [[388, "openpnm.algorithms.TransientFickianDiffusion.setdefault"]], "throats() (transientfickiandiffusion method)": [[389, "openpnm.algorithms.TransientFickianDiffusion.throats"]], "to_indices() (transientfickiandiffusion method)": [[390, "openpnm.algorithms.TransientFickianDiffusion.to_indices"]], "to_mask() (transientfickiandiffusion method)": [[391, "openpnm.algorithms.TransientFickianDiffusion.to_mask"]], "update() (transientfickiandiffusion method)": [[392, "openpnm.algorithms.TransientFickianDiffusion.update"]], "values() (transientfickiandiffusion method)": [[393, "openpnm.algorithms.TransientFickianDiffusion.values"]], "transientreactivetransport (class in openpnm.algorithms)": [[394, "openpnm.algorithms.TransientReactiveTransport"]], "clear() (transientreactivetransport method)": [[395, "openpnm.algorithms.TransientReactiveTransport.clear"]], "clear_bcs() (transientreactivetransport method)": [[396, "openpnm.algorithms.TransientReactiveTransport.clear_BCs"]], "clear_rate_bcs() (transientreactivetransport method)": [[397, "openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (transientreactivetransport method)": [[398, "openpnm.algorithms.TransientReactiveTransport.clear_value_BCs"]], "copy() (transientreactivetransport method)": [[399, "openpnm.algorithms.TransientReactiveTransport.copy"]], "filter_by_label() (transientreactivetransport method)": [[400, "openpnm.algorithms.TransientReactiveTransport.filter_by_label"]], "fromkeys() (transientreactivetransport method)": [[401, "openpnm.algorithms.TransientReactiveTransport.fromkeys"]], "get() (transientreactivetransport method)": [[402, "openpnm.algorithms.TransientReactiveTransport.get"]], "get_conduit_data() (transientreactivetransport method)": [[403, "openpnm.algorithms.TransientReactiveTransport.get_conduit_data"]], "interpolate_data() (transientreactivetransport method)": [[404, "openpnm.algorithms.TransientReactiveTransport.interpolate_data"]], "items() (transientreactivetransport method)": [[405, "openpnm.algorithms.TransientReactiveTransport.items"]], "keys() (transientreactivetransport method)": [[406, "openpnm.algorithms.TransientReactiveTransport.keys"]], "labels() (transientreactivetransport method)": [[407, "openpnm.algorithms.TransientReactiveTransport.labels"]], "num_pores() (transientreactivetransport method)": [[408, "openpnm.algorithms.TransientReactiveTransport.num_pores"]], "num_throats() (transientreactivetransport method)": [[409, "openpnm.algorithms.TransientReactiveTransport.num_throats"]], "pop() (transientreactivetransport method)": [[410, "openpnm.algorithms.TransientReactiveTransport.pop"]], "popitem() (transientreactivetransport method)": [[411, "openpnm.algorithms.TransientReactiveTransport.popitem"]], "pores() (transientreactivetransport method)": [[412, "openpnm.algorithms.TransientReactiveTransport.pores"]], "props() (transientreactivetransport method)": [[413, "openpnm.algorithms.TransientReactiveTransport.props"]], "rate() (transientreactivetransport method)": [[414, "openpnm.algorithms.TransientReactiveTransport.rate"]], "run() (transientreactivetransport method)": [[415, "openpnm.algorithms.TransientReactiveTransport.run"]], "set_bc() (transientreactivetransport method)": [[416, "openpnm.algorithms.TransientReactiveTransport.set_BC"]], "set_label() (transientreactivetransport method)": [[417, "openpnm.algorithms.TransientReactiveTransport.set_label"]], "set_rate_bc() (transientreactivetransport method)": [[418, "openpnm.algorithms.TransientReactiveTransport.set_rate_BC"]], "set_source() (transientreactivetransport method)": [[419, "openpnm.algorithms.TransientReactiveTransport.set_source"]], "set_value_bc() (transientreactivetransport method)": [[420, "openpnm.algorithms.TransientReactiveTransport.set_value_BC"]], "setdefault() (transientreactivetransport method)": [[421, "openpnm.algorithms.TransientReactiveTransport.setdefault"]], "throats() (transientreactivetransport method)": [[422, "openpnm.algorithms.TransientReactiveTransport.throats"]], "to_indices() (transientreactivetransport method)": [[423, "openpnm.algorithms.TransientReactiveTransport.to_indices"]], "to_mask() (transientreactivetransport method)": [[424, "openpnm.algorithms.TransientReactiveTransport.to_mask"]], "update() (transientreactivetransport method)": [[425, "openpnm.algorithms.TransientReactiveTransport.update"]], "values() (transientreactivetransport method)": [[426, "openpnm.algorithms.TransientReactiveTransport.values"]], "transport (class in openpnm.algorithms)": [[427, "openpnm.algorithms.Transport"]], "clear() (transport method)": [[428, "openpnm.algorithms.Transport.clear"]], "clear_bcs() (transport method)": [[429, "openpnm.algorithms.Transport.clear_BCs"]], "clear_rate_bcs() (transport method)": [[430, "openpnm.algorithms.Transport.clear_rate_BCs"]], "clear_value_bcs() (transport method)": [[431, "openpnm.algorithms.Transport.clear_value_BCs"]], "copy() (transport method)": [[432, "openpnm.algorithms.Transport.copy"]], "filter_by_label() (transport method)": [[433, "openpnm.algorithms.Transport.filter_by_label"]], "fromkeys() (transport method)": [[434, "openpnm.algorithms.Transport.fromkeys"]], "get() (transport method)": [[435, "openpnm.algorithms.Transport.get"]], "get_conduit_data() (transport method)": [[436, "openpnm.algorithms.Transport.get_conduit_data"]], "interpolate_data() (transport method)": [[437, "openpnm.algorithms.Transport.interpolate_data"]], "items() (transport method)": [[438, "openpnm.algorithms.Transport.items"]], "keys() (transport method)": [[439, "openpnm.algorithms.Transport.keys"]], "labels() (transport method)": [[440, "openpnm.algorithms.Transport.labels"]], "num_pores() (transport method)": [[441, "openpnm.algorithms.Transport.num_pores"]], "num_throats() (transport method)": [[442, "openpnm.algorithms.Transport.num_throats"]], "pop() (transport method)": [[443, "openpnm.algorithms.Transport.pop"]], "popitem() (transport method)": [[444, "openpnm.algorithms.Transport.popitem"]], "pores() (transport method)": [[445, "openpnm.algorithms.Transport.pores"]], "props() (transport method)": [[446, "openpnm.algorithms.Transport.props"]], "rate() (transport method)": [[447, "openpnm.algorithms.Transport.rate"]], "run() (transport method)": [[448, "openpnm.algorithms.Transport.run"]], "set_bc() (transport method)": [[449, "openpnm.algorithms.Transport.set_BC"]], "set_label() (transport method)": [[450, "openpnm.algorithms.Transport.set_label"]], "set_rate_bc() (transport method)": [[451, "openpnm.algorithms.Transport.set_rate_BC"]], "set_value_bc() (transport method)": [[452, "openpnm.algorithms.Transport.set_value_BC"]], "setdefault() (transport method)": [[453, "openpnm.algorithms.Transport.setdefault"]], "throats() (transport method)": [[454, "openpnm.algorithms.Transport.throats"]], "to_indices() (transport method)": [[455, "openpnm.algorithms.Transport.to_indices"]], "to_mask() (transport method)": [[456, "openpnm.algorithms.Transport.to_mask"]], "update() (transport method)": [[457, "openpnm.algorithms.Transport.update"]], "values() (transport method)": [[458, "openpnm.algorithms.Transport.values"]], "openpnm.core": [[459, "module-openpnm.core"]], "base2 (class in openpnm.core)": [[460, "openpnm.core.Base2"]], "clear() (base2 method)": [[461, "openpnm.core.Base2.clear"]], "copy() (base2 method)": [[462, "openpnm.core.Base2.copy"]], "fromkeys() (base2 method)": [[463, "openpnm.core.Base2.fromkeys"]], "get() (base2 method)": [[464, "openpnm.core.Base2.get"]], "get_conduit_data() (base2 method)": [[465, "openpnm.core.Base2.get_conduit_data"]], "interpolate_data() (base2 method)": [[466, "openpnm.core.Base2.interpolate_data"]], "items() (base2 method)": [[467, "openpnm.core.Base2.items"]], "keys() (base2 method)": [[468, "openpnm.core.Base2.keys"]], "pop() (base2 method)": [[469, "openpnm.core.Base2.pop"]], "popitem() (base2 method)": [[470, "openpnm.core.Base2.popitem"]], "props() (base2 method)": [[471, "openpnm.core.Base2.props"]], "setdefault() (base2 method)": [[472, "openpnm.core.Base2.setdefault"]], "to_indices() (base2 method)": [[473, "openpnm.core.Base2.to_indices"]], "to_mask() (base2 method)": [[474, "openpnm.core.Base2.to_mask"]], "update() (base2 method)": [[475, "openpnm.core.Base2.update"]], "values() (base2 method)": [[476, "openpnm.core.Base2.values"]], "domain (class in openpnm.core)": [[477, "openpnm.core.Domain"]], "add_model() (domain method)": [[478, "openpnm.core.Domain.add_model"]], "add_model_collection() (domain method)": [[479, "openpnm.core.Domain.add_model_collection"]], "clear() (domain method)": [[480, "openpnm.core.Domain.clear"]], "copy() (domain method)": [[481, "openpnm.core.Domain.copy"]], "filter_by_label() (domain method)": [[482, "openpnm.core.Domain.filter_by_label"]], "fromkeys() (domain method)": [[483, "openpnm.core.Domain.fromkeys"]], "get() (domain method)": [[484, "openpnm.core.Domain.get"]], "get_conduit_data() (domain method)": [[485, "openpnm.core.Domain.get_conduit_data"]], "interpolate_data() (domain method)": [[486, "openpnm.core.Domain.interpolate_data"]], "items() (domain method)": [[487, "openpnm.core.Domain.items"]], "keys() (domain method)": [[488, "openpnm.core.Domain.keys"]], "labels() (domain method)": [[489, "openpnm.core.Domain.labels"]], "num_pores() (domain method)": [[490, "openpnm.core.Domain.num_pores"]], "num_throats() (domain method)": [[491, "openpnm.core.Domain.num_throats"]], "pop() (domain method)": [[492, "openpnm.core.Domain.pop"]], "popitem() (domain method)": [[493, "openpnm.core.Domain.popitem"]], "pores() (domain method)": [[494, "openpnm.core.Domain.pores"]], "props() (domain method)": [[495, "openpnm.core.Domain.props"]], "regenerate_models() (domain method)": [[496, "openpnm.core.Domain.regenerate_models"]], "run_model() (domain method)": [[497, "openpnm.core.Domain.run_model"]], "set_label() (domain method)": [[498, "openpnm.core.Domain.set_label"]], "setdefault() (domain method)": [[499, "openpnm.core.Domain.setdefault"]], "throats() (domain method)": [[500, "openpnm.core.Domain.throats"]], "to_indices() (domain method)": [[501, "openpnm.core.Domain.to_indices"]], "to_mask() (domain method)": [[502, "openpnm.core.Domain.to_mask"]], "update() (domain method)": [[503, "openpnm.core.Domain.update"]], "values() (domain method)": [[504, "openpnm.core.Domain.values"]], "labelmixin (class in openpnm.core)": [[505, "openpnm.core.LabelMixin"]], "filter_by_label() (labelmixin method)": [[506, "openpnm.core.LabelMixin.filter_by_label"]], "labels() (labelmixin method)": [[507, "openpnm.core.LabelMixin.labels"]], "num_pores() (labelmixin method)": [[508, "openpnm.core.LabelMixin.num_pores"]], "num_throats() (labelmixin method)": [[509, "openpnm.core.LabelMixin.num_throats"]], "pores() (labelmixin method)": [[510, "openpnm.core.LabelMixin.pores"]], "set_label() (labelmixin method)": [[511, "openpnm.core.LabelMixin.set_label"]], "throats() (labelmixin method)": [[512, "openpnm.core.LabelMixin.throats"]], "modelwrapper (class in openpnm.core)": [[513, "openpnm.core.ModelWrapper"]], "__call__() (modelwrapper method)": [[514, "openpnm.core.ModelWrapper.__call__"]], "clear() (modelwrapper method)": [[515, "openpnm.core.ModelWrapper.clear"]], "copy() (modelwrapper method)": [[516, "openpnm.core.ModelWrapper.copy"]], "fromkeys() (modelwrapper method)": [[517, "openpnm.core.ModelWrapper.fromkeys"]], "get() (modelwrapper method)": [[518, "openpnm.core.ModelWrapper.get"]], "items() (modelwrapper method)": [[519, "openpnm.core.ModelWrapper.items"]], "keys() (modelwrapper method)": [[520, "openpnm.core.ModelWrapper.keys"]], "pop() (modelwrapper method)": [[521, "openpnm.core.ModelWrapper.pop"]], "popitem() (modelwrapper method)": [[522, "openpnm.core.ModelWrapper.popitem"]], "setdefault() (modelwrapper method)": [[523, "openpnm.core.ModelWrapper.setdefault"]], "update() (modelwrapper method)": [[524, "openpnm.core.ModelWrapper.update"]], "values() (modelwrapper method)": [[525, "openpnm.core.ModelWrapper.values"]], "modelsdict (class in openpnm.core)": [[526, "openpnm.core.ModelsDict"]], "clear() (modelsdict method)": [[527, "openpnm.core.ModelsDict.clear"]], "copy() (modelsdict method)": [[528, "openpnm.core.ModelsDict.copy"]], "dependency_graph() (modelsdict method)": [[529, "openpnm.core.ModelsDict.dependency_graph"]], "dependency_list() (modelsdict method)": [[530, "openpnm.core.ModelsDict.dependency_list"]], "dependency_map() (modelsdict method)": [[531, "openpnm.core.ModelsDict.dependency_map"]], "fromkeys() (modelsdict method)": [[532, "openpnm.core.ModelsDict.fromkeys"]], "get() (modelsdict method)": [[533, "openpnm.core.ModelsDict.get"]], "items() (modelsdict method)": [[534, "openpnm.core.ModelsDict.items"]], "keys() (modelsdict method)": [[535, "openpnm.core.ModelsDict.keys"]], "pop() (modelsdict method)": [[536, "openpnm.core.ModelsDict.pop"]], "popitem() (modelsdict method)": [[537, "openpnm.core.ModelsDict.popitem"]], "setdefault() (modelsdict method)": [[538, "openpnm.core.ModelsDict.setdefault"]], "update() (modelsdict method)": [[539, "openpnm.core.ModelsDict.update"]], "values() (modelsdict method)": [[540, "openpnm.core.ModelsDict.values"]], "modelsmixin2 (class in openpnm.core)": [[541, "openpnm.core.ModelsMixin2"]], "add_model() (modelsmixin2 method)": [[542, "openpnm.core.ModelsMixin2.add_model"]], "add_model_collection() (modelsmixin2 method)": [[543, "openpnm.core.ModelsMixin2.add_model_collection"]], "regenerate_models() (modelsmixin2 method)": [[544, "openpnm.core.ModelsMixin2.regenerate_models"]], "run_model() (modelsmixin2 method)": [[545, "openpnm.core.ModelsMixin2.run_model"]], "parsermixin (class in openpnm.core)": [[546, "openpnm.core.ParserMixin"]], "openpnm.integrators": [[547, "module-openpnm.integrators"]], "integrator (class in openpnm.integrators)": [[548, "openpnm.integrators.Integrator"]], "scipyrk45 (class in openpnm.integrators)": [[549, "openpnm.integrators.ScipyRK45"]], "solve() (scipyrk45 method)": [[550, "openpnm.integrators.ScipyRK45.solve"]], "openpnm.io": [[551, "module-openpnm.io"]], "network_from_csv() (in module openpnm.io)": [[552, "openpnm.io.network_from_csv"]], "network_from_jsongraph() (in module openpnm.io)": [[553, "openpnm.io.network_from_jsongraph"]], "network_from_marock() (in module openpnm.io)": [[554, "openpnm.io.network_from_marock"]], "network_from_networkx() (in module openpnm.io)": [[555, "openpnm.io.network_from_networkx"]], "network_from_pergeos() (in module openpnm.io)": [[556, "openpnm.io.network_from_pergeos"]], "network_from_porespy() (in module openpnm.io)": [[557, "openpnm.io.network_from_porespy"]], "network_from_statoil() (in module openpnm.io)": [[558, "openpnm.io.network_from_statoil"]], "network_to_comsol() (in module openpnm.io)": [[559, "openpnm.io.network_to_comsol"]], "network_to_csv() (in module openpnm.io)": [[560, "openpnm.io.network_to_csv"]], "network_to_jsongraph() (in module openpnm.io)": [[561, "openpnm.io.network_to_jsongraph"]], "network_to_networkx() (in module openpnm.io)": [[562, "openpnm.io.network_to_networkx"]], "network_to_pandas() (in module openpnm.io)": [[563, "openpnm.io.network_to_pandas"]], "network_to_pergeos() (in module openpnm.io)": [[564, "openpnm.io.network_to_pergeos"]], "network_to_salome() (in module openpnm.io)": [[565, "openpnm.io.network_to_salome"]], "network_to_stl() (in module openpnm.io)": [[566, "openpnm.io.network_to_stl"]], "print_hdf5() (in module openpnm.io)": [[567, "openpnm.io.print_hdf5"]], "project_to_csv() (in module openpnm.io)": [[568, "openpnm.io.project_to_csv"]], "project_to_dict() (in module openpnm.io)": [[569, "openpnm.io.project_to_dict"]], "project_to_hdf5() (in module openpnm.io)": [[570, "openpnm.io.project_to_hdf5"]], "project_to_pandas() (in module openpnm.io)": [[571, "openpnm.io.project_to_pandas"]], "project_to_paraview() (in module openpnm.io)": [[572, "openpnm.io.project_to_paraview"]], "project_to_vtk() (in module openpnm.io)": [[573, "openpnm.io.project_to_vtk"]], "project_to_xdmf() (in module openpnm.io)": [[574, "openpnm.io.project_to_xdmf"]], "openpnm.models": [[575, "module-openpnm.models"]], "openpnm.models.collections": [[576, "module-openpnm.models.collections"]], "openpnm.models.collections.geometry": [[577, "module-openpnm.models.collections.geometry"]], "circles_and_rectangles (in module openpnm.models.collections.geometry)": [[578, "openpnm.models.collections.geometry.circles_and_rectangles"]], "cones_and_cylinders (in module openpnm.models.collections.geometry)": [[579, "openpnm.models.collections.geometry.cones_and_cylinders"]], "cubes_and_cuboids (in module openpnm.models.collections.geometry)": [[580, "openpnm.models.collections.geometry.cubes_and_cuboids"]], "pyramids_and_cuboids (in module openpnm.models.collections.geometry)": [[581, "openpnm.models.collections.geometry.pyramids_and_cuboids"]], "spheres_and_cylinders (in module openpnm.models.collections.geometry)": [[582, "openpnm.models.collections.geometry.spheres_and_cylinders"]], "squares_and_rectangles (in module openpnm.models.collections.geometry)": [[583, "openpnm.models.collections.geometry.squares_and_rectangles"]], "trapezoids_and_rectangles (in module openpnm.models.collections.geometry)": [[584, "openpnm.models.collections.geometry.trapezoids_and_rectangles"]], "openpnm.models.collections.network": [[585, "module-openpnm.models.collections.network"]], "openpnm.models.collections.phase": [[586, "module-openpnm.models.collections.phase"]], "air (in module openpnm.models.collections.phase)": [[587, "openpnm.models.collections.phase.air"]], "openpnm.models.collections.phase.gas": [[588, "module-openpnm.models.collections.phase.gas"]], "openpnm.models.collections.phase.liquid": [[589, "module-openpnm.models.collections.phase.liquid"]], "mercury (in module openpnm.models.collections.phase)": [[590, "openpnm.models.collections.phase.mercury"]], "water (in module openpnm.models.collections.phase)": [[591, "openpnm.models.collections.phase.water"]], "openpnm.models.collections.physics": [[592, "module-openpnm.models.collections.physics"]], "basic (in module openpnm.models.collections.physics)": [[593, "openpnm.models.collections.physics.basic"]], "standard (in module openpnm.models.collections.physics)": [[594, "openpnm.models.collections.physics.standard"]], "openpnm.models.geometry": [[595, "module-openpnm.models.geometry"]], "openpnm.models.geometry.conduit_lengths": [[596, "module-openpnm.models.geometry.conduit_lengths"]], "circles_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[597, "openpnm.models.geometry.conduit_lengths.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[598, "openpnm.models.geometry.conduit_lengths.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[599, "openpnm.models.geometry.conduit_lengths.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[600, "openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[601, "openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[602, "openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.conduit_lengths)": [[603, "openpnm.models.geometry.conduit_lengths.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.conduit_lengths)": [[604, "openpnm.models.geometry.conduit_lengths.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.conduit_lengths)": [[605, "openpnm.models.geometry.conduit_lengths.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[606, "openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[607, "openpnm.models.geometry.conduit_lengths.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[608, "openpnm.models.geometry.conduit_lengths.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[609, "openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[610, "module-openpnm.models.geometry.diffusive_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[611, "openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[612, "openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[613, "openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[614, "openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[615, "openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[616, "openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.diffusive_size_factors)": [[617, "openpnm.models.geometry.diffusive_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.diffusive_size_factors)": [[618, "openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.diffusive_size_factors)": [[619, "openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.diffusive_size_factors)": [[620, "openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[621, "openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[622, "openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[623, "openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[624, "openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[625, "module-openpnm.models.geometry.hydraulic_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[626, "openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[627, "openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[628, "openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[629, "openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[630, "openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[631, "openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.hydraulic_size_factors)": [[632, "openpnm.models.geometry.hydraulic_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[633, "openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[634, "openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.hydraulic_size_factors)": [[635, "openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[636, "openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[637, "openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[638, "openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[639, "openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[640, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "circle() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[641, "openpnm.models.geometry.pore_cross_sectional_area.circle"]], "cone() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[642, "openpnm.models.geometry.pore_cross_sectional_area.cone"]], "cube() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[643, "openpnm.models.geometry.pore_cross_sectional_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[644, "openpnm.models.geometry.pore_cross_sectional_area.sphere"]], "square() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[645, "openpnm.models.geometry.pore_cross_sectional_area.square"]], "openpnm.models.geometry.pore_seed": [[646, "module-openpnm.models.geometry.pore_seed"]], "random() (in module openpnm.models.geometry.pore_seed)": [[647, "openpnm.models.geometry.pore_seed.random"]], "spatially_correlated() (in module openpnm.models.geometry.pore_seed)": [[648, "openpnm.models.geometry.pore_seed.spatially_correlated"]], "openpnm.models.geometry.pore_size": [[649, "module-openpnm.models.geometry.pore_size"]], "equivalent_diameter() (in module openpnm.models.geometry.pore_size)": [[650, "openpnm.models.geometry.pore_size.equivalent_diameter"]], "from_neighbor_throats() (in module openpnm.models.geometry.pore_size)": [[651, "openpnm.models.geometry.pore_size.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.geometry.pore_size)": [[652, "openpnm.models.geometry.pore_size.generic_distribution"]], "largest_sphere() (in module openpnm.models.geometry.pore_size)": [[653, "openpnm.models.geometry.pore_size.largest_sphere"]], "normal() (in module openpnm.models.geometry.pore_size)": [[654, "openpnm.models.geometry.pore_size.normal"]], "random() (in module openpnm.models.geometry.pore_size)": [[655, "openpnm.models.geometry.pore_size.random"]], "weibull() (in module openpnm.models.geometry.pore_size)": [[656, "openpnm.models.geometry.pore_size.weibull"]], "openpnm.models.geometry.pore_surface_area": [[657, "module-openpnm.models.geometry.pore_surface_area"]], "circle() (in module openpnm.models.geometry.pore_surface_area)": [[658, "openpnm.models.geometry.pore_surface_area.circle"]], "cube() (in module openpnm.models.geometry.pore_surface_area)": [[659, "openpnm.models.geometry.pore_surface_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_surface_area)": [[660, "openpnm.models.geometry.pore_surface_area.sphere"]], "square() (in module openpnm.models.geometry.pore_surface_area)": [[661, "openpnm.models.geometry.pore_surface_area.square"]], "openpnm.models.geometry.pore_volume": [[662, "module-openpnm.models.geometry.pore_volume"]], "circle() (in module openpnm.models.geometry.pore_volume)": [[663, "openpnm.models.geometry.pore_volume.circle"]], "cube() (in module openpnm.models.geometry.pore_volume)": [[664, "openpnm.models.geometry.pore_volume.cube"]], "effective() (in module openpnm.models.geometry.pore_volume)": [[665, "openpnm.models.geometry.pore_volume.effective"]], "sphere() (in module openpnm.models.geometry.pore_volume)": [[666, "openpnm.models.geometry.pore_volume.sphere"]], "square() (in module openpnm.models.geometry.pore_volume)": [[667, "openpnm.models.geometry.pore_volume.square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[668, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "jenkins_rao() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[669, "openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao"]], "mason_morrow() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[670, "openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[671, "module-openpnm.models.geometry.throat_centroid"]], "pore_coords() (in module openpnm.models.geometry.throat_centroid)": [[672, "openpnm.models.geometry.throat_centroid.pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[673, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "cuboid() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[674, "openpnm.models.geometry.throat_cross_sectional_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[675, "openpnm.models.geometry.throat_cross_sectional_area.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[676, "openpnm.models.geometry.throat_cross_sectional_area.rectangle"]], "openpnm.models.geometry.throat_endpoints": [[677, "module-openpnm.models.geometry.throat_endpoints"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_endpoints)": [[678, "openpnm.models.geometry.throat_endpoints.spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[679, "module-openpnm.models.geometry.throat_length"]], "circles_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[680, "openpnm.models.geometry.throat_length.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[681, "openpnm.models.geometry.throat_length.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[682, "openpnm.models.geometry.throat_length.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[683, "openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[684, "openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[685, "openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.throat_length)": [[686, "openpnm.models.geometry.throat_length.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.throat_length)": [[687, "openpnm.models.geometry.throat_length.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.throat_length)": [[688, "openpnm.models.geometry.throat_length.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[689, "openpnm.models.geometry.throat_length.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[690, "openpnm.models.geometry.throat_length.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[691, "openpnm.models.geometry.throat_length.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[692, "openpnm.models.geometry.throat_length.trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[693, "module-openpnm.models.geometry.throat_perimeter"]], "cuboid() (in module openpnm.models.geometry.throat_perimeter)": [[694, "openpnm.models.geometry.throat_perimeter.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_perimeter)": [[695, "openpnm.models.geometry.throat_perimeter.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_perimeter)": [[696, "openpnm.models.geometry.throat_perimeter.rectangle"]], "openpnm.models.geometry.throat_seed": [[697, "module-openpnm.models.geometry.throat_seed"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_seed)": [[698, "openpnm.models.geometry.throat_seed.from_neighbor_pores"]], "random() (in module openpnm.models.geometry.throat_seed)": [[699, "openpnm.models.geometry.throat_seed.random"]], "openpnm.models.geometry.throat_size": [[700, "module-openpnm.models.geometry.throat_size"]], "equivalent_diameter() (in module openpnm.models.geometry.throat_size)": [[701, "openpnm.models.geometry.throat_size.equivalent_diameter"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_size)": [[702, "openpnm.models.geometry.throat_size.from_neighbor_pores"]], "generic_distribution() (in module openpnm.models.geometry.throat_size)": [[703, "openpnm.models.geometry.throat_size.generic_distribution"]], "normal() (in module openpnm.models.geometry.throat_size)": [[704, "openpnm.models.geometry.throat_size.normal"]], "random() (in module openpnm.models.geometry.throat_size)": [[705, "openpnm.models.geometry.throat_size.random"]], "weibull() (in module openpnm.models.geometry.throat_size)": [[706, "openpnm.models.geometry.throat_size.weibull"]], "openpnm.models.geometry.throat_surface_area": [[707, "module-openpnm.models.geometry.throat_surface_area"]], "cuboid() (in module openpnm.models.geometry.throat_surface_area)": [[708, "openpnm.models.geometry.throat_surface_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_surface_area)": [[709, "openpnm.models.geometry.throat_surface_area.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_surface_area)": [[710, "openpnm.models.geometry.throat_surface_area.extrusion"]], "rectangle() (in module openpnm.models.geometry.throat_surface_area)": [[711, "openpnm.models.geometry.throat_surface_area.rectangle"]], "openpnm.models.geometry.throat_vector": [[712, "module-openpnm.models.geometry.throat_vector"]], "pore_to_pore() (in module openpnm.models.geometry.throat_vector)": [[713, "openpnm.models.geometry.throat_vector.pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[714, "module-openpnm.models.geometry.throat_volume"]], "cuboid() (in module openpnm.models.geometry.throat_volume)": [[715, "openpnm.models.geometry.throat_volume.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_volume)": [[716, "openpnm.models.geometry.throat_volume.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_volume)": [[717, "openpnm.models.geometry.throat_volume.extrusion"]], "lens() (in module openpnm.models.geometry.throat_volume)": [[718, "openpnm.models.geometry.throat_volume.lens"]], "pendular_ring() (in module openpnm.models.geometry.throat_volume)": [[719, "openpnm.models.geometry.throat_volume.pendular_ring"]], "rectangle() (in module openpnm.models.geometry.throat_volume)": [[720, "openpnm.models.geometry.throat_volume.rectangle"]], "openpnm.models.misc": [[721, "module-openpnm.models.misc"]], "blank() (in module openpnm.models.misc)": [[722, "openpnm.models.misc.blank"]], "clip() (in module openpnm.models.misc)": [[723, "openpnm.models.misc.clip"]], "constant() (in module openpnm.models.misc)": [[724, "openpnm.models.misc.constant"]], "difference() (in module openpnm.models.misc)": [[725, "openpnm.models.misc.difference"]], "fraction() (in module openpnm.models.misc)": [[726, "openpnm.models.misc.fraction"]], "from_neighbor_pores() (in module openpnm.models.misc)": [[727, "openpnm.models.misc.from_neighbor_pores"]], "from_neighbor_throats() (in module openpnm.models.misc)": [[728, "openpnm.models.misc.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.misc)": [[729, "openpnm.models.misc.generic_distribution"]], "generic_function() (in module openpnm.models.misc)": [[730, "openpnm.models.misc.generic_function"]], "invert() (in module openpnm.models.misc)": [[731, "openpnm.models.misc.invert"]], "linear() (in module openpnm.models.misc)": [[732, "openpnm.models.misc.linear"]], "match_histogram() (in module openpnm.models.misc)": [[733, "openpnm.models.misc.match_histogram"]], "normal() (in module openpnm.models.misc)": [[734, "openpnm.models.misc.normal"]], "normalize() (in module openpnm.models.misc)": [[735, "openpnm.models.misc.normalize"]], "polynomial() (in module openpnm.models.misc)": [[736, "openpnm.models.misc.polynomial"]], "product() (in module openpnm.models.misc)": [[737, "openpnm.models.misc.product"]], "random() (in module openpnm.models.misc)": [[738, "openpnm.models.misc.random"]], "scaled() (in module openpnm.models.misc)": [[739, "openpnm.models.misc.scaled"]], "summation() (in module openpnm.models.misc)": [[740, "openpnm.models.misc.summation"]], "weibull() (in module openpnm.models.misc)": [[741, "openpnm.models.misc.weibull"]], "openpnm.models.network": [[742, "module-openpnm.models.network"]], "bidirectional_throats() (in module openpnm.models.network)": [[743, "openpnm.models.network.bidirectional_throats"]], "cluster_number() (in module openpnm.models.network)": [[744, "openpnm.models.network.cluster_number"]], "cluster_size() (in module openpnm.models.network)": [[745, "openpnm.models.network.cluster_size"]], "coordination_number() (in module openpnm.models.network)": [[746, "openpnm.models.network.coordination_number"]], "count_coincident_pores() (in module openpnm.models.network)": [[747, "openpnm.models.network.count_coincident_pores"]], "distance_to_furthest_neighbor() (in module openpnm.models.network)": [[748, "openpnm.models.network.distance_to_furthest_neighbor"]], "distance_to_nearest_neighbor() (in module openpnm.models.network)": [[749, "openpnm.models.network.distance_to_nearest_neighbor"]], "distance_to_nearest_pore() (in module openpnm.models.network)": [[750, "openpnm.models.network.distance_to_nearest_pore"]], "duplicate_throats() (in module openpnm.models.network)": [[751, "openpnm.models.network.duplicate_throats"]], "find_coincident_pores() (in module openpnm.models.network)": [[752, "openpnm.models.network.find_coincident_pores"]], "headless_throats() (in module openpnm.models.network)": [[753, "openpnm.models.network.headless_throats"]], "isolated_pores() (in module openpnm.models.network)": [[754, "openpnm.models.network.isolated_pores"]], "looped_throats() (in module openpnm.models.network)": [[755, "openpnm.models.network.looped_throats"]], "pore_to_pore_distance() (in module openpnm.models.network)": [[756, "openpnm.models.network.pore_to_pore_distance"]], "reversed_throats() (in module openpnm.models.network)": [[757, "openpnm.models.network.reversed_throats"]], "openpnm.models.phase": [[758, "module-openpnm.models.phase"]], "chemicals_wrapper() (in module openpnm.models.phase)": [[759, "openpnm.models.phase.chemicals_wrapper"]], "openpnm.models.phase.critical_props": [[760, "module-openpnm.models.phase.critical_props"]], "openpnm.models.phase.density": [[761, "module-openpnm.models.phase.density"]], "ideal_gas() (in module openpnm.models.phase.density)": [[762, "openpnm.models.phase.density.ideal_gas"]], "liquid_mixture_costald() (in module openpnm.models.phase.density)": [[763, "openpnm.models.phase.density.liquid_mixture_COSTALD"]], "liquid_pure_costald() (in module openpnm.models.phase.density)": [[764, "openpnm.models.phase.density.liquid_pure_COSTALD"]], "mass_to_molar() (in module openpnm.models.phase.density)": [[765, "openpnm.models.phase.density.mass_to_molar"]], "water_correlation() (in module openpnm.models.phase.density)": [[766, "openpnm.models.phase.density.water_correlation"]], "openpnm.models.phase.diffusivity": [[767, "module-openpnm.models.phase.diffusivity"]], "gas_mixture_ce() (in module openpnm.models.phase.diffusivity)": [[768, "openpnm.models.phase.diffusivity.gas_mixture_ce"]], "gas_mixture_fesg() (in module openpnm.models.phase.diffusivity)": [[769, "openpnm.models.phase.diffusivity.gas_mixture_fesg"]], "liquid_mixture_tc() (in module openpnm.models.phase.diffusivity)": [[770, "openpnm.models.phase.diffusivity.liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[771, "module-openpnm.models.phase.heat_capacity"]], "gas_mixture_yweighted() (in module openpnm.models.phase.heat_capacity)": [[772, "openpnm.models.phase.heat_capacity.gas_mixture_yweighted"]], "gas_pure_trc() (in module openpnm.models.phase.heat_capacity)": [[773, "openpnm.models.phase.heat_capacity.gas_pure_TRC"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.heat_capacity)": [[774, "openpnm.models.phase.heat_capacity.liquid_mixture_xweighted"]], "liquid_pure_rp() (in module openpnm.models.phase.heat_capacity)": [[775, "openpnm.models.phase.heat_capacity.liquid_pure_rp"]], "openpnm.models.phase.misc": [[776, "module-openpnm.models.phase.misc"]], "mix_and_match() (in module openpnm.models.phase.misc)": [[777, "openpnm.models.phase.misc.mix_and_match"]], "mole_to_mass_fraction() (in module openpnm.models.phase.misc)": [[778, "openpnm.models.phase.misc.mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[779, "module-openpnm.models.phase.mixtures"]], "from_component() (in module openpnm.models.phase.mixtures)": [[780, "openpnm.models.phase.mixtures.from_component"]], "mixing_rule() (in module openpnm.models.phase.mixtures)": [[781, "openpnm.models.phase.mixtures.mixing_rule"]], "mole_summation() (in module openpnm.models.phase.mixtures)": [[782, "openpnm.models.phase.mixtures.mole_summation"]], "mole_to_mass_fraction() (in module openpnm.models.phase.mixtures)": [[783, "openpnm.models.phase.mixtures.mole_to_mass_fraction"]], "salinity() (in module openpnm.models.phase.mixtures)": [[784, "openpnm.models.phase.mixtures.salinity"]], "openpnm.models.phase.partition_coefficient": [[785, "module-openpnm.models.phase.partition_coefficient"]], "gaseous_species_in_water() (in module openpnm.models.phase.partition_coefficient)": [[786, "openpnm.models.phase.partition_coefficient.gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[787, "module-openpnm.models.phase.surface_tension"]], "liquid_mixture_wsd() (in module openpnm.models.phase.surface_tension)": [[788, "openpnm.models.phase.surface_tension.liquid_mixture_wsd"]], "liquid_pure_bb() (in module openpnm.models.phase.surface_tension)": [[789, "openpnm.models.phase.surface_tension.liquid_pure_bb"]], "water_correlation() (in module openpnm.models.phase.surface_tension)": [[790, "openpnm.models.phase.surface_tension.water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[791, "module-openpnm.models.phase.thermal_conductivity"]], "gas_mixture_whz() (in module openpnm.models.phase.thermal_conductivity)": [[792, "openpnm.models.phase.thermal_conductivity.gas_mixture_whz"]], "gas_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[793, "openpnm.models.phase.thermal_conductivity.gas_pure_gismr"]], "liquid_mixture_dippr9h() (in module openpnm.models.phase.thermal_conductivity)": [[794, "openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H"]], "liquid_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[795, "openpnm.models.phase.thermal_conductivity.liquid_pure_gismr"]], "liquid_pure_sr() (in module openpnm.models.phase.thermal_conductivity)": [[796, "openpnm.models.phase.thermal_conductivity.liquid_pure_sr"]], "water_correlation() (in module openpnm.models.phase.thermal_conductivity)": [[797, "openpnm.models.phase.thermal_conductivity.water_correlation"]], "openpnm.models.phase.vapor_pressure": [[798, "module-openpnm.models.phase.vapor_pressure"]], "liquid_pure_antoine() (in module openpnm.models.phase.vapor_pressure)": [[799, "openpnm.models.phase.vapor_pressure.liquid_pure_antoine"]], "liquid_pure_lk() (in module openpnm.models.phase.vapor_pressure)": [[800, "openpnm.models.phase.vapor_pressure.liquid_pure_lk"]], "water_correlation() (in module openpnm.models.phase.vapor_pressure)": [[801, "openpnm.models.phase.vapor_pressure.water_correlation"]], "openpnm.models.phase.viscosity": [[802, "module-openpnm.models.phase.viscosity"]], "gas_mixture_hz() (in module openpnm.models.phase.viscosity)": [[803, "openpnm.models.phase.viscosity.gas_mixture_hz"]], "gas_pure_gesmr() (in module openpnm.models.phase.viscosity)": [[804, "openpnm.models.phase.viscosity.gas_pure_gesmr"]], "gas_pure_st() (in module openpnm.models.phase.viscosity)": [[805, "openpnm.models.phase.viscosity.gas_pure_st"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.viscosity)": [[806, "openpnm.models.phase.viscosity.liquid_mixture_xweighted"]], "liquid_pure_ls() (in module openpnm.models.phase.viscosity)": [[807, "openpnm.models.phase.viscosity.liquid_pure_ls"]], "water_correlation() (in module openpnm.models.phase.viscosity)": [[808, "openpnm.models.phase.viscosity.water_correlation"]], "openpnm.models.physics": [[809, "module-openpnm.models.physics"]], "openpnm.models.physics.ad_dif_conductance": [[810, "module-openpnm.models.physics.ad_dif_conductance"]], "ad_dif() (in module openpnm.models.physics.ad_dif_conductance)": [[811, "openpnm.models.physics.ad_dif_conductance.ad_dif"]], "openpnm.models.physics.capillary_pressure": [[812, "module-openpnm.models.physics.capillary_pressure"]], "purcell() (in module openpnm.models.physics.capillary_pressure)": [[813, "openpnm.models.physics.capillary_pressure.purcell"]], "washburn() (in module openpnm.models.physics.capillary_pressure)": [[814, "openpnm.models.physics.capillary_pressure.washburn"]], "openpnm.models.physics.diffusive_conductance": [[815, "module-openpnm.models.physics.diffusive_conductance"]], "generic_diffusive() (in module openpnm.models.physics.diffusive_conductance)": [[816, "openpnm.models.physics.diffusive_conductance.generic_diffusive"]], "mixed_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[817, "openpnm.models.physics.diffusive_conductance.mixed_diffusion"]], "ordinary_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[818, "openpnm.models.physics.diffusive_conductance.ordinary_diffusion"]], "taylor_aris_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[819, "openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[820, "module-openpnm.models.physics.electrical_conductance"]], "generic_electrical() (in module openpnm.models.physics.electrical_conductance)": [[821, "openpnm.models.physics.electrical_conductance.generic_electrical"]], "series_resistors() (in module openpnm.models.physics.electrical_conductance)": [[822, "openpnm.models.physics.electrical_conductance.series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[823, "module-openpnm.models.physics.hydraulic_conductance"]], "generic_hydraulic() (in module openpnm.models.physics.hydraulic_conductance)": [[824, "openpnm.models.physics.hydraulic_conductance.generic_hydraulic"]], "hagen_poiseuille() (in module openpnm.models.physics.hydraulic_conductance)": [[825, "openpnm.models.physics.hydraulic_conductance.hagen_poiseuille"]], "valvatne_blunt() (in module openpnm.models.physics.hydraulic_conductance)": [[826, "openpnm.models.physics.hydraulic_conductance.valvatne_blunt"]], "openpnm.models.physics.meniscus": [[827, "module-openpnm.models.physics.meniscus"]], "general_toroidal() (in module openpnm.models.physics.meniscus)": [[828, "openpnm.models.physics.meniscus.general_toroidal"]], "purcell() (in module openpnm.models.physics.meniscus)": [[829, "openpnm.models.physics.meniscus.purcell"]], "sinusoidal() (in module openpnm.models.physics.meniscus)": [[830, "openpnm.models.physics.meniscus.sinusoidal"]], "openpnm.models.physics.multiphase": [[831, "module-openpnm.models.physics.multiphase"]], "conduit_conductance() (in module openpnm.models.physics.multiphase)": [[832, "openpnm.models.physics.multiphase.conduit_conductance"]], "late_filling() (in module openpnm.models.physics.multiphase)": [[833, "openpnm.models.physics.multiphase.late_filling"]], "openpnm.models.physics.source_terms": [[834, "module-openpnm.models.physics.source_terms"]], "butler_volmer_conc() (in module openpnm.models.physics.source_terms)": [[835, "openpnm.models.physics.source_terms.butler_volmer_conc"]], "butler_volmer_voltage() (in module openpnm.models.physics.source_terms)": [[836, "openpnm.models.physics.source_terms.butler_volmer_voltage"]], "exponential() (in module openpnm.models.physics.source_terms)": [[837, "openpnm.models.physics.source_terms.exponential"]], "general_symbolic() (in module openpnm.models.physics.source_terms)": [[838, "openpnm.models.physics.source_terms.general_symbolic"]], "linear() (in module openpnm.models.physics.source_terms)": [[839, "openpnm.models.physics.source_terms.linear"]], "logarithm() (in module openpnm.models.physics.source_terms)": [[840, "openpnm.models.physics.source_terms.logarithm"]], "natural_exponential() (in module openpnm.models.physics.source_terms)": [[841, "openpnm.models.physics.source_terms.natural_exponential"]], "natural_logarithm() (in module openpnm.models.physics.source_terms)": [[842, "openpnm.models.physics.source_terms.natural_logarithm"]], "power_law() (in module openpnm.models.physics.source_terms)": [[843, "openpnm.models.physics.source_terms.power_law"]], "standard_kinetics() (in module openpnm.models.physics.source_terms)": [[844, "openpnm.models.physics.source_terms.standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[845, "module-openpnm.models.physics.thermal_conductance"]], "generic_thermal() (in module openpnm.models.physics.thermal_conductance)": [[846, "openpnm.models.physics.thermal_conductance.generic_thermal"]], "series_resistors() (in module openpnm.models.physics.thermal_conductance)": [[847, "openpnm.models.physics.thermal_conductance.series_resistors"]], "openpnm.network": [[848, "module-openpnm.network"]], "bodycenteredcubic (class in openpnm.network)": [[849, "openpnm.network.BodyCenteredCubic"]], "add_boundary_pores() (bodycenteredcubic method)": [[850, "openpnm.network.BodyCenteredCubic.add_boundary_pores"]], "add_model() (bodycenteredcubic method)": [[851, "openpnm.network.BodyCenteredCubic.add_model"]], "add_model_collection() (bodycenteredcubic method)": [[852, "openpnm.network.BodyCenteredCubic.add_model_collection"]], "clear() (bodycenteredcubic method)": [[853, "openpnm.network.BodyCenteredCubic.clear"]], "copy() (bodycenteredcubic method)": [[854, "openpnm.network.BodyCenteredCubic.copy"]], "create_adjacency_matrix() (bodycenteredcubic method)": [[855, "openpnm.network.BodyCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (bodycenteredcubic method)": [[856, "openpnm.network.BodyCenteredCubic.create_incidence_matrix"]], "filter_by_label() (bodycenteredcubic method)": [[857, "openpnm.network.BodyCenteredCubic.filter_by_label"]], "find_connected_pores() (bodycenteredcubic method)": [[858, "openpnm.network.BodyCenteredCubic.find_connected_pores"]], "find_connecting_throat() (bodycenteredcubic method)": [[859, "openpnm.network.BodyCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (bodycenteredcubic method)": [[860, "openpnm.network.BodyCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (bodycenteredcubic method)": [[861, "openpnm.network.BodyCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (bodycenteredcubic method)": [[862, "openpnm.network.BodyCenteredCubic.find_neighbor_throats"]], "fromkeys() (bodycenteredcubic method)": [[863, "openpnm.network.BodyCenteredCubic.fromkeys"]], "get() (bodycenteredcubic method)": [[864, "openpnm.network.BodyCenteredCubic.get"]], "get_adjacency_matrix() (bodycenteredcubic method)": [[865, "openpnm.network.BodyCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (bodycenteredcubic method)": [[866, "openpnm.network.BodyCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (bodycenteredcubic method)": [[867, "openpnm.network.BodyCenteredCubic.get_incidence_matrix"]], "interpolate_data() (bodycenteredcubic method)": [[868, "openpnm.network.BodyCenteredCubic.interpolate_data"]], "items() (bodycenteredcubic method)": [[869, "openpnm.network.BodyCenteredCubic.items"]], "keys() (bodycenteredcubic method)": [[870, "openpnm.network.BodyCenteredCubic.keys"]], "labels() (bodycenteredcubic method)": [[871, "openpnm.network.BodyCenteredCubic.labels"]], "num_neighbors() (bodycenteredcubic method)": [[872, "openpnm.network.BodyCenteredCubic.num_neighbors"]], "num_pores() (bodycenteredcubic method)": [[873, "openpnm.network.BodyCenteredCubic.num_pores"]], "num_throats() (bodycenteredcubic method)": [[874, "openpnm.network.BodyCenteredCubic.num_throats"]], "pop() (bodycenteredcubic method)": [[875, "openpnm.network.BodyCenteredCubic.pop"]], "popitem() (bodycenteredcubic method)": [[876, "openpnm.network.BodyCenteredCubic.popitem"]], "pores() (bodycenteredcubic method)": [[877, "openpnm.network.BodyCenteredCubic.pores"]], "props() (bodycenteredcubic method)": [[878, "openpnm.network.BodyCenteredCubic.props"]], "regenerate_models() (bodycenteredcubic method)": [[879, "openpnm.network.BodyCenteredCubic.regenerate_models"]], "run_model() (bodycenteredcubic method)": [[880, "openpnm.network.BodyCenteredCubic.run_model"]], "set_label() (bodycenteredcubic method)": [[881, "openpnm.network.BodyCenteredCubic.set_label"]], "setdefault() (bodycenteredcubic method)": [[882, "openpnm.network.BodyCenteredCubic.setdefault"]], "throats() (bodycenteredcubic method)": [[883, "openpnm.network.BodyCenteredCubic.throats"]], "to_indices() (bodycenteredcubic method)": [[884, "openpnm.network.BodyCenteredCubic.to_indices"]], "to_mask() (bodycenteredcubic method)": [[885, "openpnm.network.BodyCenteredCubic.to_mask"]], "update() (bodycenteredcubic method)": [[886, "openpnm.network.BodyCenteredCubic.update"]], "values() (bodycenteredcubic method)": [[887, "openpnm.network.BodyCenteredCubic.values"]], "cubic (class in openpnm.network)": [[888, "openpnm.network.Cubic"]], "add_boundary_pores() (cubic method)": [[889, "openpnm.network.Cubic.add_boundary_pores"]], "add_model() (cubic method)": [[890, "openpnm.network.Cubic.add_model"]], "add_model_collection() (cubic method)": [[891, "openpnm.network.Cubic.add_model_collection"]], "clear() (cubic method)": [[892, "openpnm.network.Cubic.clear"]], "copy() (cubic method)": [[893, "openpnm.network.Cubic.copy"]], "create_adjacency_matrix() (cubic method)": [[894, "openpnm.network.Cubic.create_adjacency_matrix"]], "create_incidence_matrix() (cubic method)": [[895, "openpnm.network.Cubic.create_incidence_matrix"]], "filter_by_label() (cubic method)": [[896, "openpnm.network.Cubic.filter_by_label"]], "find_connected_pores() (cubic method)": [[897, "openpnm.network.Cubic.find_connected_pores"]], "find_connecting_throat() (cubic method)": [[898, "openpnm.network.Cubic.find_connecting_throat"]], "find_nearby_pores() (cubic method)": [[899, "openpnm.network.Cubic.find_nearby_pores"]], "find_neighbor_pores() (cubic method)": [[900, "openpnm.network.Cubic.find_neighbor_pores"]], "find_neighbor_throats() (cubic method)": [[901, "openpnm.network.Cubic.find_neighbor_throats"]], "fromkeys() (cubic method)": [[902, "openpnm.network.Cubic.fromkeys"]], "get() (cubic method)": [[903, "openpnm.network.Cubic.get"]], "get_adjacency_matrix() (cubic method)": [[904, "openpnm.network.Cubic.get_adjacency_matrix"]], "get_conduit_data() (cubic method)": [[905, "openpnm.network.Cubic.get_conduit_data"]], "get_incidence_matrix() (cubic method)": [[906, "openpnm.network.Cubic.get_incidence_matrix"]], "interpolate_data() (cubic method)": [[907, "openpnm.network.Cubic.interpolate_data"]], "items() (cubic method)": [[908, "openpnm.network.Cubic.items"]], "keys() (cubic method)": [[909, "openpnm.network.Cubic.keys"]], "labels() (cubic method)": [[910, "openpnm.network.Cubic.labels"]], "num_neighbors() (cubic method)": [[911, "openpnm.network.Cubic.num_neighbors"]], "num_pores() (cubic method)": [[912, "openpnm.network.Cubic.num_pores"]], "num_throats() (cubic method)": [[913, "openpnm.network.Cubic.num_throats"]], "pop() (cubic method)": [[914, "openpnm.network.Cubic.pop"]], "popitem() (cubic method)": [[915, "openpnm.network.Cubic.popitem"]], "pores() (cubic method)": [[916, "openpnm.network.Cubic.pores"]], "props() (cubic method)": [[917, "openpnm.network.Cubic.props"]], "regenerate_models() (cubic method)": [[918, "openpnm.network.Cubic.regenerate_models"]], "run_model() (cubic method)": [[919, "openpnm.network.Cubic.run_model"]], "set_label() (cubic method)": [[920, "openpnm.network.Cubic.set_label"]], "setdefault() (cubic method)": [[921, "openpnm.network.Cubic.setdefault"]], "throats() (cubic method)": [[922, "openpnm.network.Cubic.throats"]], "to_indices() (cubic method)": [[923, "openpnm.network.Cubic.to_indices"]], "to_mask() (cubic method)": [[924, "openpnm.network.Cubic.to_mask"]], "update() (cubic method)": [[925, "openpnm.network.Cubic.update"]], "values() (cubic method)": [[926, "openpnm.network.Cubic.values"]], "cubictemplate (class in openpnm.network)": [[927, "openpnm.network.CubicTemplate"]], "add_model() (cubictemplate method)": [[928, "openpnm.network.CubicTemplate.add_model"]], "add_model_collection() (cubictemplate method)": [[929, "openpnm.network.CubicTemplate.add_model_collection"]], "clear() (cubictemplate method)": [[930, "openpnm.network.CubicTemplate.clear"]], "copy() (cubictemplate method)": [[931, "openpnm.network.CubicTemplate.copy"]], "create_adjacency_matrix() (cubictemplate method)": [[932, "openpnm.network.CubicTemplate.create_adjacency_matrix"]], "create_incidence_matrix() (cubictemplate method)": [[933, "openpnm.network.CubicTemplate.create_incidence_matrix"]], "filter_by_label() (cubictemplate method)": [[934, "openpnm.network.CubicTemplate.filter_by_label"]], "find_connected_pores() (cubictemplate method)": [[935, "openpnm.network.CubicTemplate.find_connected_pores"]], "find_connecting_throat() (cubictemplate method)": [[936, "openpnm.network.CubicTemplate.find_connecting_throat"]], "find_nearby_pores() (cubictemplate method)": [[937, "openpnm.network.CubicTemplate.find_nearby_pores"]], "find_neighbor_pores() (cubictemplate method)": [[938, "openpnm.network.CubicTemplate.find_neighbor_pores"]], "find_neighbor_throats() (cubictemplate method)": [[939, "openpnm.network.CubicTemplate.find_neighbor_throats"]], "fromkeys() (cubictemplate method)": [[940, "openpnm.network.CubicTemplate.fromkeys"]], "get() (cubictemplate method)": [[941, "openpnm.network.CubicTemplate.get"]], "get_adjacency_matrix() (cubictemplate method)": [[942, "openpnm.network.CubicTemplate.get_adjacency_matrix"]], "get_conduit_data() (cubictemplate method)": [[943, "openpnm.network.CubicTemplate.get_conduit_data"]], "get_incidence_matrix() (cubictemplate method)": [[944, "openpnm.network.CubicTemplate.get_incidence_matrix"]], "interpolate_data() (cubictemplate method)": [[945, "openpnm.network.CubicTemplate.interpolate_data"]], "items() (cubictemplate method)": [[946, "openpnm.network.CubicTemplate.items"]], "keys() (cubictemplate method)": [[947, "openpnm.network.CubicTemplate.keys"]], "labels() (cubictemplate method)": [[948, "openpnm.network.CubicTemplate.labels"]], "num_neighbors() (cubictemplate method)": [[949, "openpnm.network.CubicTemplate.num_neighbors"]], "num_pores() (cubictemplate method)": [[950, "openpnm.network.CubicTemplate.num_pores"]], "num_throats() (cubictemplate method)": [[951, "openpnm.network.CubicTemplate.num_throats"]], "pop() (cubictemplate method)": [[952, "openpnm.network.CubicTemplate.pop"]], "popitem() (cubictemplate method)": [[953, "openpnm.network.CubicTemplate.popitem"]], "pores() (cubictemplate method)": [[954, "openpnm.network.CubicTemplate.pores"]], "props() (cubictemplate method)": [[955, "openpnm.network.CubicTemplate.props"]], "regenerate_models() (cubictemplate method)": [[956, "openpnm.network.CubicTemplate.regenerate_models"]], "run_model() (cubictemplate method)": [[957, "openpnm.network.CubicTemplate.run_model"]], "set_label() (cubictemplate method)": [[958, "openpnm.network.CubicTemplate.set_label"]], "setdefault() (cubictemplate method)": [[959, "openpnm.network.CubicTemplate.setdefault"]], "throats() (cubictemplate method)": [[960, "openpnm.network.CubicTemplate.throats"]], "to_indices() (cubictemplate method)": [[961, "openpnm.network.CubicTemplate.to_indices"]], "to_mask() (cubictemplate method)": [[962, "openpnm.network.CubicTemplate.to_mask"]], "update() (cubictemplate method)": [[963, "openpnm.network.CubicTemplate.update"]], "values() (cubictemplate method)": [[964, "openpnm.network.CubicTemplate.values"]], "delaunay (class in openpnm.network)": [[965, "openpnm.network.Delaunay"]], "add_model() (delaunay method)": [[966, "openpnm.network.Delaunay.add_model"]], "add_model_collection() (delaunay method)": [[967, "openpnm.network.Delaunay.add_model_collection"]], "clear() (delaunay method)": [[968, "openpnm.network.Delaunay.clear"]], "copy() (delaunay method)": [[969, "openpnm.network.Delaunay.copy"]], "create_adjacency_matrix() (delaunay method)": [[970, "openpnm.network.Delaunay.create_adjacency_matrix"]], "create_incidence_matrix() (delaunay method)": [[971, "openpnm.network.Delaunay.create_incidence_matrix"]], "filter_by_label() (delaunay method)": [[972, "openpnm.network.Delaunay.filter_by_label"]], "find_connected_pores() (delaunay method)": [[973, "openpnm.network.Delaunay.find_connected_pores"]], "find_connecting_throat() (delaunay method)": [[974, "openpnm.network.Delaunay.find_connecting_throat"]], "find_nearby_pores() (delaunay method)": [[975, "openpnm.network.Delaunay.find_nearby_pores"]], "find_neighbor_pores() (delaunay method)": [[976, "openpnm.network.Delaunay.find_neighbor_pores"]], "find_neighbor_throats() (delaunay method)": [[977, "openpnm.network.Delaunay.find_neighbor_throats"]], "fromkeys() (delaunay method)": [[978, "openpnm.network.Delaunay.fromkeys"]], "get() (delaunay method)": [[979, "openpnm.network.Delaunay.get"]], "get_adjacency_matrix() (delaunay method)": [[980, "openpnm.network.Delaunay.get_adjacency_matrix"]], "get_conduit_data() (delaunay method)": [[981, "openpnm.network.Delaunay.get_conduit_data"]], "get_incidence_matrix() (delaunay method)": [[982, "openpnm.network.Delaunay.get_incidence_matrix"]], "interpolate_data() (delaunay method)": [[983, "openpnm.network.Delaunay.interpolate_data"]], "items() (delaunay method)": [[984, "openpnm.network.Delaunay.items"]], "keys() (delaunay method)": [[985, "openpnm.network.Delaunay.keys"]], "labels() (delaunay method)": [[986, "openpnm.network.Delaunay.labels"]], "num_neighbors() (delaunay method)": [[987, "openpnm.network.Delaunay.num_neighbors"]], "num_pores() (delaunay method)": [[988, "openpnm.network.Delaunay.num_pores"]], "num_throats() (delaunay method)": [[989, "openpnm.network.Delaunay.num_throats"]], "pop() (delaunay method)": [[990, "openpnm.network.Delaunay.pop"]], "popitem() (delaunay method)": [[991, "openpnm.network.Delaunay.popitem"]], "pores() (delaunay method)": [[992, "openpnm.network.Delaunay.pores"]], "props() (delaunay method)": [[993, "openpnm.network.Delaunay.props"]], "regenerate_models() (delaunay method)": [[994, "openpnm.network.Delaunay.regenerate_models"]], "run_model() (delaunay method)": [[995, "openpnm.network.Delaunay.run_model"]], "set_label() (delaunay method)": [[996, "openpnm.network.Delaunay.set_label"]], "setdefault() (delaunay method)": [[997, "openpnm.network.Delaunay.setdefault"]], "throats() (delaunay method)": [[998, "openpnm.network.Delaunay.throats"]], "to_indices() (delaunay method)": [[999, "openpnm.network.Delaunay.to_indices"]], "to_mask() (delaunay method)": [[1000, "openpnm.network.Delaunay.to_mask"]], "update() (delaunay method)": [[1001, "openpnm.network.Delaunay.update"]], "values() (delaunay method)": [[1002, "openpnm.network.Delaunay.values"]], "delaunayvoronoidual (class in openpnm.network)": [[1003, "openpnm.network.DelaunayVoronoiDual"]], "add_model() (delaunayvoronoidual method)": [[1004, "openpnm.network.DelaunayVoronoiDual.add_model"]], "add_model_collection() (delaunayvoronoidual method)": [[1005, "openpnm.network.DelaunayVoronoiDual.add_model_collection"]], "clear() (delaunayvoronoidual method)": [[1006, "openpnm.network.DelaunayVoronoiDual.clear"]], "copy() (delaunayvoronoidual method)": [[1007, "openpnm.network.DelaunayVoronoiDual.copy"]], "create_adjacency_matrix() (delaunayvoronoidual method)": [[1008, "openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix"]], "create_incidence_matrix() (delaunayvoronoidual method)": [[1009, "openpnm.network.DelaunayVoronoiDual.create_incidence_matrix"]], "filter_by_label() (delaunayvoronoidual method)": [[1010, "openpnm.network.DelaunayVoronoiDual.filter_by_label"]], "find_connected_pores() (delaunayvoronoidual method)": [[1011, "openpnm.network.DelaunayVoronoiDual.find_connected_pores"]], "find_connecting_throat() (delaunayvoronoidual method)": [[1012, "openpnm.network.DelaunayVoronoiDual.find_connecting_throat"]], "find_nearby_pores() (delaunayvoronoidual method)": [[1013, "openpnm.network.DelaunayVoronoiDual.find_nearby_pores"]], "find_neighbor_pores() (delaunayvoronoidual method)": [[1014, "openpnm.network.DelaunayVoronoiDual.find_neighbor_pores"]], "find_neighbor_throats() (delaunayvoronoidual method)": [[1015, "openpnm.network.DelaunayVoronoiDual.find_neighbor_throats"]], "find_pore_hulls() (delaunayvoronoidual method)": [[1016, "openpnm.network.DelaunayVoronoiDual.find_pore_hulls"]], "find_throat_facets() (delaunayvoronoidual method)": [[1017, "openpnm.network.DelaunayVoronoiDual.find_throat_facets"]], "fromkeys() (delaunayvoronoidual method)": [[1018, "openpnm.network.DelaunayVoronoiDual.fromkeys"]], "get() (delaunayvoronoidual method)": [[1019, "openpnm.network.DelaunayVoronoiDual.get"]], "get_adjacency_matrix() (delaunayvoronoidual method)": [[1020, "openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix"]], "get_conduit_data() (delaunayvoronoidual method)": [[1021, "openpnm.network.DelaunayVoronoiDual.get_conduit_data"]], "get_incidence_matrix() (delaunayvoronoidual method)": [[1022, "openpnm.network.DelaunayVoronoiDual.get_incidence_matrix"]], "interpolate_data() (delaunayvoronoidual method)": [[1023, "openpnm.network.DelaunayVoronoiDual.interpolate_data"]], "items() (delaunayvoronoidual method)": [[1024, "openpnm.network.DelaunayVoronoiDual.items"]], "keys() (delaunayvoronoidual method)": [[1025, "openpnm.network.DelaunayVoronoiDual.keys"]], "labels() (delaunayvoronoidual method)": [[1026, "openpnm.network.DelaunayVoronoiDual.labels"]], "num_neighbors() (delaunayvoronoidual method)": [[1027, "openpnm.network.DelaunayVoronoiDual.num_neighbors"]], "num_pores() (delaunayvoronoidual method)": [[1028, "openpnm.network.DelaunayVoronoiDual.num_pores"]], "num_throats() (delaunayvoronoidual method)": [[1029, "openpnm.network.DelaunayVoronoiDual.num_throats"]], "pop() (delaunayvoronoidual method)": [[1030, "openpnm.network.DelaunayVoronoiDual.pop"]], "popitem() (delaunayvoronoidual method)": [[1031, "openpnm.network.DelaunayVoronoiDual.popitem"]], "pores() (delaunayvoronoidual method)": [[1032, "openpnm.network.DelaunayVoronoiDual.pores"]], "props() (delaunayvoronoidual method)": [[1033, "openpnm.network.DelaunayVoronoiDual.props"]], "regenerate_models() (delaunayvoronoidual method)": [[1034, "openpnm.network.DelaunayVoronoiDual.regenerate_models"]], "run_model() (delaunayvoronoidual method)": [[1035, "openpnm.network.DelaunayVoronoiDual.run_model"]], "set_label() (delaunayvoronoidual method)": [[1036, "openpnm.network.DelaunayVoronoiDual.set_label"]], "setdefault() (delaunayvoronoidual method)": [[1037, "openpnm.network.DelaunayVoronoiDual.setdefault"]], "throats() (delaunayvoronoidual method)": [[1038, "openpnm.network.DelaunayVoronoiDual.throats"]], "to_indices() (delaunayvoronoidual method)": [[1039, "openpnm.network.DelaunayVoronoiDual.to_indices"]], "to_mask() (delaunayvoronoidual method)": [[1040, "openpnm.network.DelaunayVoronoiDual.to_mask"]], "update() (delaunayvoronoidual method)": [[1041, "openpnm.network.DelaunayVoronoiDual.update"]], "values() (delaunayvoronoidual method)": [[1042, "openpnm.network.DelaunayVoronoiDual.values"]], "demo (class in openpnm.network)": [[1043, "openpnm.network.Demo"]], "add_boundary_pores() (demo method)": [[1044, "openpnm.network.Demo.add_boundary_pores"]], "add_model() (demo method)": [[1045, "openpnm.network.Demo.add_model"]], "add_model_collection() (demo method)": [[1046, "openpnm.network.Demo.add_model_collection"]], "clear() (demo method)": [[1047, "openpnm.network.Demo.clear"]], "copy() (demo method)": [[1048, "openpnm.network.Demo.copy"]], "create_adjacency_matrix() (demo method)": [[1049, "openpnm.network.Demo.create_adjacency_matrix"]], "create_incidence_matrix() (demo method)": [[1050, "openpnm.network.Demo.create_incidence_matrix"]], "filter_by_label() (demo method)": [[1051, "openpnm.network.Demo.filter_by_label"]], "find_connected_pores() (demo method)": [[1052, "openpnm.network.Demo.find_connected_pores"]], "find_connecting_throat() (demo method)": [[1053, "openpnm.network.Demo.find_connecting_throat"]], "find_nearby_pores() (demo method)": [[1054, "openpnm.network.Demo.find_nearby_pores"]], "find_neighbor_pores() (demo method)": [[1055, "openpnm.network.Demo.find_neighbor_pores"]], "find_neighbor_throats() (demo method)": [[1056, "openpnm.network.Demo.find_neighbor_throats"]], "fromkeys() (demo method)": [[1057, "openpnm.network.Demo.fromkeys"]], "get() (demo method)": [[1058, "openpnm.network.Demo.get"]], "get_adjacency_matrix() (demo method)": [[1059, "openpnm.network.Demo.get_adjacency_matrix"]], "get_conduit_data() (demo method)": [[1060, "openpnm.network.Demo.get_conduit_data"]], "get_incidence_matrix() (demo method)": [[1061, "openpnm.network.Demo.get_incidence_matrix"]], "interpolate_data() (demo method)": [[1062, "openpnm.network.Demo.interpolate_data"]], "items() (demo method)": [[1063, "openpnm.network.Demo.items"]], "keys() (demo method)": [[1064, "openpnm.network.Demo.keys"]], "labels() (demo method)": [[1065, "openpnm.network.Demo.labels"]], "num_neighbors() (demo method)": [[1066, "openpnm.network.Demo.num_neighbors"]], "num_pores() (demo method)": [[1067, "openpnm.network.Demo.num_pores"]], "num_throats() (demo method)": [[1068, "openpnm.network.Demo.num_throats"]], "pop() (demo method)": [[1069, "openpnm.network.Demo.pop"]], "popitem() (demo method)": [[1070, "openpnm.network.Demo.popitem"]], "pores() (demo method)": [[1071, "openpnm.network.Demo.pores"]], "props() (demo method)": [[1072, "openpnm.network.Demo.props"]], "regenerate_models() (demo method)": [[1073, "openpnm.network.Demo.regenerate_models"]], "run_model() (demo method)": [[1074, "openpnm.network.Demo.run_model"]], "set_label() (demo method)": [[1075, "openpnm.network.Demo.set_label"]], "setdefault() (demo method)": [[1076, "openpnm.network.Demo.setdefault"]], "throats() (demo method)": [[1077, "openpnm.network.Demo.throats"]], "to_indices() (demo method)": [[1078, "openpnm.network.Demo.to_indices"]], "to_mask() (demo method)": [[1079, "openpnm.network.Demo.to_mask"]], "update() (demo method)": [[1080, "openpnm.network.Demo.update"]], "values() (demo method)": [[1081, "openpnm.network.Demo.values"]], "facecenteredcubic (class in openpnm.network)": [[1082, "openpnm.network.FaceCenteredCubic"]], "add_boundary_pores() (facecenteredcubic method)": [[1083, "openpnm.network.FaceCenteredCubic.add_boundary_pores"]], "add_model() (facecenteredcubic method)": [[1084, "openpnm.network.FaceCenteredCubic.add_model"]], "add_model_collection() (facecenteredcubic method)": [[1085, "openpnm.network.FaceCenteredCubic.add_model_collection"]], "clear() (facecenteredcubic method)": [[1086, "openpnm.network.FaceCenteredCubic.clear"]], "copy() (facecenteredcubic method)": [[1087, "openpnm.network.FaceCenteredCubic.copy"]], "create_adjacency_matrix() (facecenteredcubic method)": [[1088, "openpnm.network.FaceCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (facecenteredcubic method)": [[1089, "openpnm.network.FaceCenteredCubic.create_incidence_matrix"]], "filter_by_label() (facecenteredcubic method)": [[1090, "openpnm.network.FaceCenteredCubic.filter_by_label"]], "find_connected_pores() (facecenteredcubic method)": [[1091, "openpnm.network.FaceCenteredCubic.find_connected_pores"]], "find_connecting_throat() (facecenteredcubic method)": [[1092, "openpnm.network.FaceCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (facecenteredcubic method)": [[1093, "openpnm.network.FaceCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (facecenteredcubic method)": [[1094, "openpnm.network.FaceCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (facecenteredcubic method)": [[1095, "openpnm.network.FaceCenteredCubic.find_neighbor_throats"]], "fromkeys() (facecenteredcubic method)": [[1096, "openpnm.network.FaceCenteredCubic.fromkeys"]], "get() (facecenteredcubic method)": [[1097, "openpnm.network.FaceCenteredCubic.get"]], "get_adjacency_matrix() (facecenteredcubic method)": [[1098, "openpnm.network.FaceCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (facecenteredcubic method)": [[1099, "openpnm.network.FaceCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (facecenteredcubic method)": [[1100, "openpnm.network.FaceCenteredCubic.get_incidence_matrix"]], "interpolate_data() (facecenteredcubic method)": [[1101, "openpnm.network.FaceCenteredCubic.interpolate_data"]], "items() (facecenteredcubic method)": [[1102, "openpnm.network.FaceCenteredCubic.items"]], "keys() (facecenteredcubic method)": [[1103, "openpnm.network.FaceCenteredCubic.keys"]], "labels() (facecenteredcubic method)": [[1104, "openpnm.network.FaceCenteredCubic.labels"]], "num_neighbors() (facecenteredcubic method)": [[1105, "openpnm.network.FaceCenteredCubic.num_neighbors"]], "num_pores() (facecenteredcubic method)": [[1106, "openpnm.network.FaceCenteredCubic.num_pores"]], "num_throats() (facecenteredcubic method)": [[1107, "openpnm.network.FaceCenteredCubic.num_throats"]], "pop() (facecenteredcubic method)": [[1108, "openpnm.network.FaceCenteredCubic.pop"]], "popitem() (facecenteredcubic method)": [[1109, "openpnm.network.FaceCenteredCubic.popitem"]], "pores() (facecenteredcubic method)": [[1110, "openpnm.network.FaceCenteredCubic.pores"]], "props() (facecenteredcubic method)": [[1111, "openpnm.network.FaceCenteredCubic.props"]], "regenerate_models() (facecenteredcubic method)": [[1112, "openpnm.network.FaceCenteredCubic.regenerate_models"]], "run_model() (facecenteredcubic method)": [[1113, "openpnm.network.FaceCenteredCubic.run_model"]], "set_label() (facecenteredcubic method)": [[1114, "openpnm.network.FaceCenteredCubic.set_label"]], "setdefault() (facecenteredcubic method)": [[1115, "openpnm.network.FaceCenteredCubic.setdefault"]], "throats() (facecenteredcubic method)": [[1116, "openpnm.network.FaceCenteredCubic.throats"]], "to_indices() (facecenteredcubic method)": [[1117, "openpnm.network.FaceCenteredCubic.to_indices"]], "to_mask() (facecenteredcubic method)": [[1118, "openpnm.network.FaceCenteredCubic.to_mask"]], "update() (facecenteredcubic method)": [[1119, "openpnm.network.FaceCenteredCubic.update"]], "values() (facecenteredcubic method)": [[1120, "openpnm.network.FaceCenteredCubic.values"]], "network (class in openpnm.network)": [[1121, "openpnm.network.Network"]], "add_model() (network method)": [[1122, "openpnm.network.Network.add_model"]], "add_model_collection() (network method)": [[1123, "openpnm.network.Network.add_model_collection"]], "clear() (network method)": [[1124, "openpnm.network.Network.clear"]], "copy() (network method)": [[1125, "openpnm.network.Network.copy"]], "create_adjacency_matrix() (network method)": [[1126, "openpnm.network.Network.create_adjacency_matrix"]], "create_incidence_matrix() (network method)": [[1127, "openpnm.network.Network.create_incidence_matrix"]], "filter_by_label() (network method)": [[1128, "openpnm.network.Network.filter_by_label"]], "find_connected_pores() (network method)": [[1129, "openpnm.network.Network.find_connected_pores"]], "find_connecting_throat() (network method)": [[1130, "openpnm.network.Network.find_connecting_throat"]], "find_nearby_pores() (network method)": [[1131, "openpnm.network.Network.find_nearby_pores"]], "find_neighbor_pores() (network method)": [[1132, "openpnm.network.Network.find_neighbor_pores"]], "find_neighbor_throats() (network method)": [[1133, "openpnm.network.Network.find_neighbor_throats"]], "fromkeys() (network method)": [[1134, "openpnm.network.Network.fromkeys"]], "get() (network method)": [[1135, "openpnm.network.Network.get"]], "get_adjacency_matrix() (network method)": [[1136, "openpnm.network.Network.get_adjacency_matrix"]], "get_conduit_data() (network method)": [[1137, "openpnm.network.Network.get_conduit_data"]], "get_incidence_matrix() (network method)": [[1138, "openpnm.network.Network.get_incidence_matrix"]], "interpolate_data() (network method)": [[1139, "openpnm.network.Network.interpolate_data"]], "items() (network method)": [[1140, "openpnm.network.Network.items"]], "keys() (network method)": [[1141, "openpnm.network.Network.keys"]], "labels() (network method)": [[1142, "openpnm.network.Network.labels"]], "num_neighbors() (network method)": [[1143, "openpnm.network.Network.num_neighbors"]], "num_pores() (network method)": [[1144, "openpnm.network.Network.num_pores"]], "num_throats() (network method)": [[1145, "openpnm.network.Network.num_throats"]], "pop() (network method)": [[1146, "openpnm.network.Network.pop"]], "popitem() (network method)": [[1147, "openpnm.network.Network.popitem"]], "pores() (network method)": [[1148, "openpnm.network.Network.pores"]], "props() (network method)": [[1149, "openpnm.network.Network.props"]], "regenerate_models() (network method)": [[1150, "openpnm.network.Network.regenerate_models"]], "run_model() (network method)": [[1151, "openpnm.network.Network.run_model"]], "set_label() (network method)": [[1152, "openpnm.network.Network.set_label"]], "setdefault() (network method)": [[1153, "openpnm.network.Network.setdefault"]], "throats() (network method)": [[1154, "openpnm.network.Network.throats"]], "to_indices() (network method)": [[1155, "openpnm.network.Network.to_indices"]], "to_mask() (network method)": [[1156, "openpnm.network.Network.to_mask"]], "update() (network method)": [[1157, "openpnm.network.Network.update"]], "values() (network method)": [[1158, "openpnm.network.Network.values"]], "voronoi (class in openpnm.network)": [[1159, "openpnm.network.Voronoi"]], "add_model() (voronoi method)": [[1160, "openpnm.network.Voronoi.add_model"]], "add_model_collection() (voronoi method)": [[1161, "openpnm.network.Voronoi.add_model_collection"]], "clear() (voronoi method)": [[1162, "openpnm.network.Voronoi.clear"]], "copy() (voronoi method)": [[1163, "openpnm.network.Voronoi.copy"]], "create_adjacency_matrix() (voronoi method)": [[1164, "openpnm.network.Voronoi.create_adjacency_matrix"]], "create_incidence_matrix() (voronoi method)": [[1165, "openpnm.network.Voronoi.create_incidence_matrix"]], "filter_by_label() (voronoi method)": [[1166, "openpnm.network.Voronoi.filter_by_label"]], "find_connected_pores() (voronoi method)": [[1167, "openpnm.network.Voronoi.find_connected_pores"]], "find_connecting_throat() (voronoi method)": [[1168, "openpnm.network.Voronoi.find_connecting_throat"]], "find_nearby_pores() (voronoi method)": [[1169, "openpnm.network.Voronoi.find_nearby_pores"]], "find_neighbor_pores() (voronoi method)": [[1170, "openpnm.network.Voronoi.find_neighbor_pores"]], "find_neighbor_throats() (voronoi method)": [[1171, "openpnm.network.Voronoi.find_neighbor_throats"]], "fromkeys() (voronoi method)": [[1172, "openpnm.network.Voronoi.fromkeys"]], "get() (voronoi method)": [[1173, "openpnm.network.Voronoi.get"]], "get_adjacency_matrix() (voronoi method)": [[1174, "openpnm.network.Voronoi.get_adjacency_matrix"]], "get_conduit_data() (voronoi method)": [[1175, "openpnm.network.Voronoi.get_conduit_data"]], "get_incidence_matrix() (voronoi method)": [[1176, "openpnm.network.Voronoi.get_incidence_matrix"]], "interpolate_data() (voronoi method)": [[1177, "openpnm.network.Voronoi.interpolate_data"]], "items() (voronoi method)": [[1178, "openpnm.network.Voronoi.items"]], "keys() (voronoi method)": [[1179, "openpnm.network.Voronoi.keys"]], "labels() (voronoi method)": [[1180, "openpnm.network.Voronoi.labels"]], "num_neighbors() (voronoi method)": [[1181, "openpnm.network.Voronoi.num_neighbors"]], "num_pores() (voronoi method)": [[1182, "openpnm.network.Voronoi.num_pores"]], "num_throats() (voronoi method)": [[1183, "openpnm.network.Voronoi.num_throats"]], "pop() (voronoi method)": [[1184, "openpnm.network.Voronoi.pop"]], "popitem() (voronoi method)": [[1185, "openpnm.network.Voronoi.popitem"]], "pores() (voronoi method)": [[1186, "openpnm.network.Voronoi.pores"]], "props() (voronoi method)": [[1187, "openpnm.network.Voronoi.props"]], "regenerate_models() (voronoi method)": [[1188, "openpnm.network.Voronoi.regenerate_models"]], "run_model() (voronoi method)": [[1189, "openpnm.network.Voronoi.run_model"]], "set_label() (voronoi method)": [[1190, "openpnm.network.Voronoi.set_label"]], "setdefault() (voronoi method)": [[1191, "openpnm.network.Voronoi.setdefault"]], "throats() (voronoi method)": [[1192, "openpnm.network.Voronoi.throats"]], "to_indices() (voronoi method)": [[1193, "openpnm.network.Voronoi.to_indices"]], "to_mask() (voronoi method)": [[1194, "openpnm.network.Voronoi.to_mask"]], "update() (voronoi method)": [[1195, "openpnm.network.Voronoi.update"]], "values() (voronoi method)": [[1196, "openpnm.network.Voronoi.values"]], "openpnm.phase": [[1197, "module-openpnm.phase"]], "air (class in openpnm.phase)": [[1198, "openpnm.phase.Air"]], "add_model() (air method)": [[1199, "openpnm.phase.Air.add_model"]], "add_model_collection() (air method)": [[1200, "openpnm.phase.Air.add_model_collection"]], "clear() (air method)": [[1201, "openpnm.phase.Air.clear"]], "copy() (air method)": [[1202, "openpnm.phase.Air.copy"]], "filter_by_label() (air method)": [[1203, "openpnm.phase.Air.filter_by_label"]], "fromkeys() (air method)": [[1204, "openpnm.phase.Air.fromkeys"]], "get() (air method)": [[1205, "openpnm.phase.Air.get"]], "get_conduit_data() (air method)": [[1206, "openpnm.phase.Air.get_conduit_data"]], "interpolate_data() (air method)": [[1207, "openpnm.phase.Air.interpolate_data"]], "items() (air method)": [[1208, "openpnm.phase.Air.items"]], "keys() (air method)": [[1209, "openpnm.phase.Air.keys"]], "labels() (air method)": [[1210, "openpnm.phase.Air.labels"]], "num_pores() (air method)": [[1211, "openpnm.phase.Air.num_pores"]], "num_throats() (air method)": [[1212, "openpnm.phase.Air.num_throats"]], "pop() (air method)": [[1213, "openpnm.phase.Air.pop"]], "popitem() (air method)": [[1214, "openpnm.phase.Air.popitem"]], "pores() (air method)": [[1215, "openpnm.phase.Air.pores"]], "props() (air method)": [[1216, "openpnm.phase.Air.props"]], "regenerate_models() (air method)": [[1217, "openpnm.phase.Air.regenerate_models"]], "run_model() (air method)": [[1218, "openpnm.phase.Air.run_model"]], "set_label() (air method)": [[1219, "openpnm.phase.Air.set_label"]], "setdefault() (air method)": [[1220, "openpnm.phase.Air.setdefault"]], "throats() (air method)": [[1221, "openpnm.phase.Air.throats"]], "to_indices() (air method)": [[1222, "openpnm.phase.Air.to_indices"]], "to_mask() (air method)": [[1223, "openpnm.phase.Air.to_mask"]], "update() (air method)": [[1224, "openpnm.phase.Air.update"]], "values() (air method)": [[1225, "openpnm.phase.Air.values"]], "binarygas (class in openpnm.phase)": [[1226, "openpnm.phase.BinaryGas"]], "add_comp() (binarygas method)": [[1227, "openpnm.phase.BinaryGas.add_comp"]], "add_model() (binarygas method)": [[1228, "openpnm.phase.BinaryGas.add_model"]], "add_model_collection() (binarygas method)": [[1229, "openpnm.phase.BinaryGas.add_model_collection"]], "check_mixture_health() (binarygas method)": [[1230, "openpnm.phase.BinaryGas.check_mixture_health"]], "clear() (binarygas method)": [[1231, "openpnm.phase.BinaryGas.clear"]], "copy() (binarygas method)": [[1232, "openpnm.phase.BinaryGas.copy"]], "filter_by_label() (binarygas method)": [[1233, "openpnm.phase.BinaryGas.filter_by_label"]], "fromkeys() (binarygas method)": [[1234, "openpnm.phase.BinaryGas.fromkeys"]], "get() (binarygas method)": [[1235, "openpnm.phase.BinaryGas.get"]], "get_comp_vals() (binarygas method)": [[1236, "openpnm.phase.BinaryGas.get_comp_vals"]], "get_conduit_data() (binarygas method)": [[1237, "openpnm.phase.BinaryGas.get_conduit_data"]], "get_mix_vals() (binarygas method)": [[1238, "openpnm.phase.BinaryGas.get_mix_vals"]], "interpolate_data() (binarygas method)": [[1239, "openpnm.phase.BinaryGas.interpolate_data"]], "items() (binarygas method)": [[1240, "openpnm.phase.BinaryGas.items"]], "keys() (binarygas method)": [[1241, "openpnm.phase.BinaryGas.keys"]], "labels() (binarygas method)": [[1242, "openpnm.phase.BinaryGas.labels"]], "num_pores() (binarygas method)": [[1243, "openpnm.phase.BinaryGas.num_pores"]], "num_throats() (binarygas method)": [[1244, "openpnm.phase.BinaryGas.num_throats"]], "pop() (binarygas method)": [[1245, "openpnm.phase.BinaryGas.pop"]], "popitem() (binarygas method)": [[1246, "openpnm.phase.BinaryGas.popitem"]], "pores() (binarygas method)": [[1247, "openpnm.phase.BinaryGas.pores"]], "props() (binarygas method)": [[1248, "openpnm.phase.BinaryGas.props"]], "regenerate_models() (binarygas method)": [[1249, "openpnm.phase.BinaryGas.regenerate_models"]], "remove_comp() (binarygas method)": [[1250, "openpnm.phase.BinaryGas.remove_comp"]], "run_model() (binarygas method)": [[1251, "openpnm.phase.BinaryGas.run_model"]], "set_label() (binarygas method)": [[1252, "openpnm.phase.BinaryGas.set_label"]], "setdefault() (binarygas method)": [[1253, "openpnm.phase.BinaryGas.setdefault"]], "throats() (binarygas method)": [[1254, "openpnm.phase.BinaryGas.throats"]], "to_indices() (binarygas method)": [[1255, "openpnm.phase.BinaryGas.to_indices"]], "to_mask() (binarygas method)": [[1256, "openpnm.phase.BinaryGas.to_mask"]], "update() (binarygas method)": [[1257, "openpnm.phase.BinaryGas.update"]], "values() (binarygas method)": [[1258, "openpnm.phase.BinaryGas.values"]], "y() (binarygas method)": [[1259, "openpnm.phase.BinaryGas.y"]], "gasmixture (class in openpnm.phase)": [[1260, "openpnm.phase.GasMixture"]], "add_comp() (gasmixture method)": [[1261, "openpnm.phase.GasMixture.add_comp"]], "add_model() (gasmixture method)": [[1262, "openpnm.phase.GasMixture.add_model"]], "add_model_collection() (gasmixture method)": [[1263, "openpnm.phase.GasMixture.add_model_collection"]], "check_mixture_health() (gasmixture method)": [[1264, "openpnm.phase.GasMixture.check_mixture_health"]], "clear() (gasmixture method)": [[1265, "openpnm.phase.GasMixture.clear"]], "copy() (gasmixture method)": [[1266, "openpnm.phase.GasMixture.copy"]], "filter_by_label() (gasmixture method)": [[1267, "openpnm.phase.GasMixture.filter_by_label"]], "fromkeys() (gasmixture method)": [[1268, "openpnm.phase.GasMixture.fromkeys"]], "get() (gasmixture method)": [[1269, "openpnm.phase.GasMixture.get"]], "get_comp_vals() (gasmixture method)": [[1270, "openpnm.phase.GasMixture.get_comp_vals"]], "get_conduit_data() (gasmixture method)": [[1271, "openpnm.phase.GasMixture.get_conduit_data"]], "get_mix_vals() (gasmixture method)": [[1272, "openpnm.phase.GasMixture.get_mix_vals"]], "interpolate_data() (gasmixture method)": [[1273, "openpnm.phase.GasMixture.interpolate_data"]], "items() (gasmixture method)": [[1274, "openpnm.phase.GasMixture.items"]], "keys() (gasmixture method)": [[1275, "openpnm.phase.GasMixture.keys"]], "labels() (gasmixture method)": [[1276, "openpnm.phase.GasMixture.labels"]], "num_pores() (gasmixture method)": [[1277, "openpnm.phase.GasMixture.num_pores"]], "num_throats() (gasmixture method)": [[1278, "openpnm.phase.GasMixture.num_throats"]], "pop() (gasmixture method)": [[1279, "openpnm.phase.GasMixture.pop"]], "popitem() (gasmixture method)": [[1280, "openpnm.phase.GasMixture.popitem"]], "pores() (gasmixture method)": [[1281, "openpnm.phase.GasMixture.pores"]], "props() (gasmixture method)": [[1282, "openpnm.phase.GasMixture.props"]], "regenerate_models() (gasmixture method)": [[1283, "openpnm.phase.GasMixture.regenerate_models"]], "remove_comp() (gasmixture method)": [[1284, "openpnm.phase.GasMixture.remove_comp"]], "run_model() (gasmixture method)": [[1285, "openpnm.phase.GasMixture.run_model"]], "set_label() (gasmixture method)": [[1286, "openpnm.phase.GasMixture.set_label"]], "setdefault() (gasmixture method)": [[1287, "openpnm.phase.GasMixture.setdefault"]], "throats() (gasmixture method)": [[1288, "openpnm.phase.GasMixture.throats"]], "to_indices() (gasmixture method)": [[1289, "openpnm.phase.GasMixture.to_indices"]], "to_mask() (gasmixture method)": [[1290, "openpnm.phase.GasMixture.to_mask"]], "update() (gasmixture method)": [[1291, "openpnm.phase.GasMixture.update"]], "values() (gasmixture method)": [[1292, "openpnm.phase.GasMixture.values"]], "y() (gasmixture method)": [[1293, "openpnm.phase.GasMixture.y"]], "liquidmixture (class in openpnm.phase)": [[1294, "openpnm.phase.LiquidMixture"]], "add_comp() (liquidmixture method)": [[1295, "openpnm.phase.LiquidMixture.add_comp"]], "add_model() (liquidmixture method)": [[1296, "openpnm.phase.LiquidMixture.add_model"]], "add_model_collection() (liquidmixture method)": [[1297, "openpnm.phase.LiquidMixture.add_model_collection"]], "check_mixture_health() (liquidmixture method)": [[1298, "openpnm.phase.LiquidMixture.check_mixture_health"]], "clear() (liquidmixture method)": [[1299, "openpnm.phase.LiquidMixture.clear"]], "copy() (liquidmixture method)": [[1300, "openpnm.phase.LiquidMixture.copy"]], "filter_by_label() (liquidmixture method)": [[1301, "openpnm.phase.LiquidMixture.filter_by_label"]], "fromkeys() (liquidmixture method)": [[1302, "openpnm.phase.LiquidMixture.fromkeys"]], "get() (liquidmixture method)": [[1303, "openpnm.phase.LiquidMixture.get"]], "get_comp_vals() (liquidmixture method)": [[1304, "openpnm.phase.LiquidMixture.get_comp_vals"]], "get_conduit_data() (liquidmixture method)": [[1305, "openpnm.phase.LiquidMixture.get_conduit_data"]], "get_mix_vals() (liquidmixture method)": [[1306, "openpnm.phase.LiquidMixture.get_mix_vals"]], "interpolate_data() (liquidmixture method)": [[1307, "openpnm.phase.LiquidMixture.interpolate_data"]], "items() (liquidmixture method)": [[1308, "openpnm.phase.LiquidMixture.items"]], "keys() (liquidmixture method)": [[1309, "openpnm.phase.LiquidMixture.keys"]], "labels() (liquidmixture method)": [[1310, "openpnm.phase.LiquidMixture.labels"]], "num_pores() (liquidmixture method)": [[1311, "openpnm.phase.LiquidMixture.num_pores"]], "num_throats() (liquidmixture method)": [[1312, "openpnm.phase.LiquidMixture.num_throats"]], "pop() (liquidmixture method)": [[1313, "openpnm.phase.LiquidMixture.pop"]], "popitem() (liquidmixture method)": [[1314, "openpnm.phase.LiquidMixture.popitem"]], "pores() (liquidmixture method)": [[1315, "openpnm.phase.LiquidMixture.pores"]], "props() (liquidmixture method)": [[1316, "openpnm.phase.LiquidMixture.props"]], "regenerate_models() (liquidmixture method)": [[1317, "openpnm.phase.LiquidMixture.regenerate_models"]], "remove_comp() (liquidmixture method)": [[1318, "openpnm.phase.LiquidMixture.remove_comp"]], "run_model() (liquidmixture method)": [[1319, "openpnm.phase.LiquidMixture.run_model"]], "set_label() (liquidmixture method)": [[1320, "openpnm.phase.LiquidMixture.set_label"]], "setdefault() (liquidmixture method)": [[1321, "openpnm.phase.LiquidMixture.setdefault"]], "throats() (liquidmixture method)": [[1322, "openpnm.phase.LiquidMixture.throats"]], "to_indices() (liquidmixture method)": [[1323, "openpnm.phase.LiquidMixture.to_indices"]], "to_mask() (liquidmixture method)": [[1324, "openpnm.phase.LiquidMixture.to_mask"]], "update() (liquidmixture method)": [[1325, "openpnm.phase.LiquidMixture.update"]], "values() (liquidmixture method)": [[1326, "openpnm.phase.LiquidMixture.values"]], "x() (liquidmixture method)": [[1327, "openpnm.phase.LiquidMixture.x"]], "mercury (class in openpnm.phase)": [[1328, "openpnm.phase.Mercury"]], "add_model() (mercury method)": [[1329, "openpnm.phase.Mercury.add_model"]], "add_model_collection() (mercury method)": [[1330, "openpnm.phase.Mercury.add_model_collection"]], "clear() (mercury method)": [[1331, "openpnm.phase.Mercury.clear"]], "copy() (mercury method)": [[1332, "openpnm.phase.Mercury.copy"]], "filter_by_label() (mercury method)": [[1333, "openpnm.phase.Mercury.filter_by_label"]], "fromkeys() (mercury method)": [[1334, "openpnm.phase.Mercury.fromkeys"]], "get() (mercury method)": [[1335, "openpnm.phase.Mercury.get"]], "get_conduit_data() (mercury method)": [[1336, "openpnm.phase.Mercury.get_conduit_data"]], "interpolate_data() (mercury method)": [[1337, "openpnm.phase.Mercury.interpolate_data"]], "items() (mercury method)": [[1338, "openpnm.phase.Mercury.items"]], "keys() (mercury method)": [[1339, "openpnm.phase.Mercury.keys"]], "labels() (mercury method)": [[1340, "openpnm.phase.Mercury.labels"]], "num_pores() (mercury method)": [[1341, "openpnm.phase.Mercury.num_pores"]], "num_throats() (mercury method)": [[1342, "openpnm.phase.Mercury.num_throats"]], "pop() (mercury method)": [[1343, "openpnm.phase.Mercury.pop"]], "popitem() (mercury method)": [[1344, "openpnm.phase.Mercury.popitem"]], "pores() (mercury method)": [[1345, "openpnm.phase.Mercury.pores"]], "props() (mercury method)": [[1346, "openpnm.phase.Mercury.props"]], "regenerate_models() (mercury method)": [[1347, "openpnm.phase.Mercury.regenerate_models"]], "run_model() (mercury method)": [[1348, "openpnm.phase.Mercury.run_model"]], "set_label() (mercury method)": [[1349, "openpnm.phase.Mercury.set_label"]], "setdefault() (mercury method)": [[1350, "openpnm.phase.Mercury.setdefault"]], "throats() (mercury method)": [[1351, "openpnm.phase.Mercury.throats"]], "to_indices() (mercury method)": [[1352, "openpnm.phase.Mercury.to_indices"]], "to_mask() (mercury method)": [[1353, "openpnm.phase.Mercury.to_mask"]], "update() (mercury method)": [[1354, "openpnm.phase.Mercury.update"]], "values() (mercury method)": [[1355, "openpnm.phase.Mercury.values"]], "mixture (class in openpnm.phase)": [[1356, "openpnm.phase.Mixture"]], "add_comp() (mixture method)": [[1357, "openpnm.phase.Mixture.add_comp"]], "add_model() (mixture method)": [[1358, "openpnm.phase.Mixture.add_model"]], "add_model_collection() (mixture method)": [[1359, "openpnm.phase.Mixture.add_model_collection"]], "check_mixture_health() (mixture method)": [[1360, "openpnm.phase.Mixture.check_mixture_health"]], "clear() (mixture method)": [[1361, "openpnm.phase.Mixture.clear"]], "copy() (mixture method)": [[1362, "openpnm.phase.Mixture.copy"]], "filter_by_label() (mixture method)": [[1363, "openpnm.phase.Mixture.filter_by_label"]], "fromkeys() (mixture method)": [[1364, "openpnm.phase.Mixture.fromkeys"]], "get() (mixture method)": [[1365, "openpnm.phase.Mixture.get"]], "get_comp_vals() (mixture method)": [[1366, "openpnm.phase.Mixture.get_comp_vals"]], "get_conduit_data() (mixture method)": [[1367, "openpnm.phase.Mixture.get_conduit_data"]], "get_mix_vals() (mixture method)": [[1368, "openpnm.phase.Mixture.get_mix_vals"]], "interpolate_data() (mixture method)": [[1369, "openpnm.phase.Mixture.interpolate_data"]], "items() (mixture method)": [[1370, "openpnm.phase.Mixture.items"]], "keys() (mixture method)": [[1371, "openpnm.phase.Mixture.keys"]], "labels() (mixture method)": [[1372, "openpnm.phase.Mixture.labels"]], "num_pores() (mixture method)": [[1373, "openpnm.phase.Mixture.num_pores"]], "num_throats() (mixture method)": [[1374, "openpnm.phase.Mixture.num_throats"]], "pop() (mixture method)": [[1375, "openpnm.phase.Mixture.pop"]], "popitem() (mixture method)": [[1376, "openpnm.phase.Mixture.popitem"]], "pores() (mixture method)": [[1377, "openpnm.phase.Mixture.pores"]], "props() (mixture method)": [[1378, "openpnm.phase.Mixture.props"]], "regenerate_models() (mixture method)": [[1379, "openpnm.phase.Mixture.regenerate_models"]], "remove_comp() (mixture method)": [[1380, "openpnm.phase.Mixture.remove_comp"]], "run_model() (mixture method)": [[1381, "openpnm.phase.Mixture.run_model"]], "set_label() (mixture method)": [[1382, "openpnm.phase.Mixture.set_label"]], "setdefault() (mixture method)": [[1383, "openpnm.phase.Mixture.setdefault"]], "throats() (mixture method)": [[1384, "openpnm.phase.Mixture.throats"]], "to_indices() (mixture method)": [[1385, "openpnm.phase.Mixture.to_indices"]], "to_mask() (mixture method)": [[1386, "openpnm.phase.Mixture.to_mask"]], "update() (mixture method)": [[1387, "openpnm.phase.Mixture.update"]], "values() (mixture method)": [[1388, "openpnm.phase.Mixture.values"]], "phase (class in openpnm.phase)": [[1389, "openpnm.phase.Phase"]], "add_model() (phase method)": [[1390, "openpnm.phase.Phase.add_model"]], "add_model_collection() (phase method)": [[1391, "openpnm.phase.Phase.add_model_collection"]], "clear() (phase method)": [[1392, "openpnm.phase.Phase.clear"]], "copy() (phase method)": [[1393, "openpnm.phase.Phase.copy"]], "filter_by_label() (phase method)": [[1394, "openpnm.phase.Phase.filter_by_label"]], "fromkeys() (phase method)": [[1395, "openpnm.phase.Phase.fromkeys"]], "get() (phase method)": [[1396, "openpnm.phase.Phase.get"]], "get_conduit_data() (phase method)": [[1397, "openpnm.phase.Phase.get_conduit_data"]], "interpolate_data() (phase method)": [[1398, "openpnm.phase.Phase.interpolate_data"]], "items() (phase method)": [[1399, "openpnm.phase.Phase.items"]], "keys() (phase method)": [[1400, "openpnm.phase.Phase.keys"]], "labels() (phase method)": [[1401, "openpnm.phase.Phase.labels"]], "num_pores() (phase method)": [[1402, "openpnm.phase.Phase.num_pores"]], "num_throats() (phase method)": [[1403, "openpnm.phase.Phase.num_throats"]], "pop() (phase method)": [[1404, "openpnm.phase.Phase.pop"]], "popitem() (phase method)": [[1405, "openpnm.phase.Phase.popitem"]], "pores() (phase method)": [[1406, "openpnm.phase.Phase.pores"]], "props() (phase method)": [[1407, "openpnm.phase.Phase.props"]], "regenerate_models() (phase method)": [[1408, "openpnm.phase.Phase.regenerate_models"]], "run_model() (phase method)": [[1409, "openpnm.phase.Phase.run_model"]], "set_label() (phase method)": [[1410, "openpnm.phase.Phase.set_label"]], "setdefault() (phase method)": [[1411, "openpnm.phase.Phase.setdefault"]], "throats() (phase method)": [[1412, "openpnm.phase.Phase.throats"]], "to_indices() (phase method)": [[1413, "openpnm.phase.Phase.to_indices"]], "to_mask() (phase method)": [[1414, "openpnm.phase.Phase.to_mask"]], "update() (phase method)": [[1415, "openpnm.phase.Phase.update"]], "values() (phase method)": [[1416, "openpnm.phase.Phase.values"]], "species (class in openpnm.phase)": [[1417, "openpnm.phase.Species"]], "add_model() (species method)": [[1418, "openpnm.phase.Species.add_model"]], "add_model_collection() (species method)": [[1419, "openpnm.phase.Species.add_model_collection"]], "clear() (species method)": [[1420, "openpnm.phase.Species.clear"]], "copy() (species method)": [[1421, "openpnm.phase.Species.copy"]], "filter_by_label() (species method)": [[1422, "openpnm.phase.Species.filter_by_label"]], "fromkeys() (species method)": [[1423, "openpnm.phase.Species.fromkeys"]], "get() (species method)": [[1424, "openpnm.phase.Species.get"]], "get_conduit_data() (species method)": [[1425, "openpnm.phase.Species.get_conduit_data"]], "interpolate_data() (species method)": [[1426, "openpnm.phase.Species.interpolate_data"]], "items() (species method)": [[1427, "openpnm.phase.Species.items"]], "keys() (species method)": [[1428, "openpnm.phase.Species.keys"]], "labels() (species method)": [[1429, "openpnm.phase.Species.labels"]], "num_pores() (species method)": [[1430, "openpnm.phase.Species.num_pores"]], "num_throats() (species method)": [[1431, "openpnm.phase.Species.num_throats"]], "pop() (species method)": [[1432, "openpnm.phase.Species.pop"]], "popitem() (species method)": [[1433, "openpnm.phase.Species.popitem"]], "pores() (species method)": [[1434, "openpnm.phase.Species.pores"]], "props() (species method)": [[1435, "openpnm.phase.Species.props"]], "regenerate_models() (species method)": [[1436, "openpnm.phase.Species.regenerate_models"]], "run_model() (species method)": [[1437, "openpnm.phase.Species.run_model"]], "set_label() (species method)": [[1438, "openpnm.phase.Species.set_label"]], "setdefault() (species method)": [[1439, "openpnm.phase.Species.setdefault"]], "throats() (species method)": [[1440, "openpnm.phase.Species.throats"]], "to_indices() (species method)": [[1441, "openpnm.phase.Species.to_indices"]], "to_mask() (species method)": [[1442, "openpnm.phase.Species.to_mask"]], "update() (species method)": [[1443, "openpnm.phase.Species.update"]], "values() (species method)": [[1444, "openpnm.phase.Species.values"]], "standardgas (class in openpnm.phase)": [[1445, "openpnm.phase.StandardGas"]], "add_model() (standardgas method)": [[1446, "openpnm.phase.StandardGas.add_model"]], "add_model_collection() (standardgas method)": [[1447, "openpnm.phase.StandardGas.add_model_collection"]], "clear() (standardgas method)": [[1448, "openpnm.phase.StandardGas.clear"]], "copy() (standardgas method)": [[1449, "openpnm.phase.StandardGas.copy"]], "filter_by_label() (standardgas method)": [[1450, "openpnm.phase.StandardGas.filter_by_label"]], "fromkeys() (standardgas method)": [[1451, "openpnm.phase.StandardGas.fromkeys"]], "get() (standardgas method)": [[1452, "openpnm.phase.StandardGas.get"]], "get_conduit_data() (standardgas method)": [[1453, "openpnm.phase.StandardGas.get_conduit_data"]], "interpolate_data() (standardgas method)": [[1454, "openpnm.phase.StandardGas.interpolate_data"]], "items() (standardgas method)": [[1455, "openpnm.phase.StandardGas.items"]], "keys() (standardgas method)": [[1456, "openpnm.phase.StandardGas.keys"]], "labels() (standardgas method)": [[1457, "openpnm.phase.StandardGas.labels"]], "num_pores() (standardgas method)": [[1458, "openpnm.phase.StandardGas.num_pores"]], "num_throats() (standardgas method)": [[1459, "openpnm.phase.StandardGas.num_throats"]], "pop() (standardgas method)": [[1460, "openpnm.phase.StandardGas.pop"]], "popitem() (standardgas method)": [[1461, "openpnm.phase.StandardGas.popitem"]], "pores() (standardgas method)": [[1462, "openpnm.phase.StandardGas.pores"]], "props() (standardgas method)": [[1463, "openpnm.phase.StandardGas.props"]], "regenerate_models() (standardgas method)": [[1464, "openpnm.phase.StandardGas.regenerate_models"]], "run_model() (standardgas method)": [[1465, "openpnm.phase.StandardGas.run_model"]], "set_label() (standardgas method)": [[1466, "openpnm.phase.StandardGas.set_label"]], "setdefault() (standardgas method)": [[1467, "openpnm.phase.StandardGas.setdefault"]], "throats() (standardgas method)": [[1468, "openpnm.phase.StandardGas.throats"]], "to_indices() (standardgas method)": [[1469, "openpnm.phase.StandardGas.to_indices"]], "to_mask() (standardgas method)": [[1470, "openpnm.phase.StandardGas.to_mask"]], "update() (standardgas method)": [[1471, "openpnm.phase.StandardGas.update"]], "values() (standardgas method)": [[1472, "openpnm.phase.StandardGas.values"]], "standardgasmixture (class in openpnm.phase)": [[1473, "openpnm.phase.StandardGasMixture"]], "add_comp() (standardgasmixture method)": [[1474, "openpnm.phase.StandardGasMixture.add_comp"]], "add_model() (standardgasmixture method)": [[1475, "openpnm.phase.StandardGasMixture.add_model"]], "add_model_collection() (standardgasmixture method)": [[1476, "openpnm.phase.StandardGasMixture.add_model_collection"]], "check_mixture_health() (standardgasmixture method)": [[1477, "openpnm.phase.StandardGasMixture.check_mixture_health"]], "clear() (standardgasmixture method)": [[1478, "openpnm.phase.StandardGasMixture.clear"]], "copy() (standardgasmixture method)": [[1479, "openpnm.phase.StandardGasMixture.copy"]], "filter_by_label() (standardgasmixture method)": [[1480, "openpnm.phase.StandardGasMixture.filter_by_label"]], "fromkeys() (standardgasmixture method)": [[1481, "openpnm.phase.StandardGasMixture.fromkeys"]], "get() (standardgasmixture method)": [[1482, "openpnm.phase.StandardGasMixture.get"]], "get_comp_vals() (standardgasmixture method)": [[1483, "openpnm.phase.StandardGasMixture.get_comp_vals"]], "get_conduit_data() (standardgasmixture method)": [[1484, "openpnm.phase.StandardGasMixture.get_conduit_data"]], "get_mix_vals() (standardgasmixture method)": [[1485, "openpnm.phase.StandardGasMixture.get_mix_vals"]], "interpolate_data() (standardgasmixture method)": [[1486, "openpnm.phase.StandardGasMixture.interpolate_data"]], "items() (standardgasmixture method)": [[1487, "openpnm.phase.StandardGasMixture.items"]], "keys() (standardgasmixture method)": [[1488, "openpnm.phase.StandardGasMixture.keys"]], "labels() (standardgasmixture method)": [[1489, "openpnm.phase.StandardGasMixture.labels"]], "num_pores() (standardgasmixture method)": [[1490, "openpnm.phase.StandardGasMixture.num_pores"]], "num_throats() (standardgasmixture method)": [[1491, "openpnm.phase.StandardGasMixture.num_throats"]], "pop() (standardgasmixture method)": [[1492, "openpnm.phase.StandardGasMixture.pop"]], "popitem() (standardgasmixture method)": [[1493, "openpnm.phase.StandardGasMixture.popitem"]], "pores() (standardgasmixture method)": [[1494, "openpnm.phase.StandardGasMixture.pores"]], "props() (standardgasmixture method)": [[1495, "openpnm.phase.StandardGasMixture.props"]], "regenerate_models() (standardgasmixture method)": [[1496, "openpnm.phase.StandardGasMixture.regenerate_models"]], "remove_comp() (standardgasmixture method)": [[1497, "openpnm.phase.StandardGasMixture.remove_comp"]], "run_model() (standardgasmixture method)": [[1498, "openpnm.phase.StandardGasMixture.run_model"]], "set_label() (standardgasmixture method)": [[1499, "openpnm.phase.StandardGasMixture.set_label"]], "setdefault() (standardgasmixture method)": [[1500, "openpnm.phase.StandardGasMixture.setdefault"]], "throats() (standardgasmixture method)": [[1501, "openpnm.phase.StandardGasMixture.throats"]], "to_indices() (standardgasmixture method)": [[1502, "openpnm.phase.StandardGasMixture.to_indices"]], "to_mask() (standardgasmixture method)": [[1503, "openpnm.phase.StandardGasMixture.to_mask"]], "update() (standardgasmixture method)": [[1504, "openpnm.phase.StandardGasMixture.update"]], "values() (standardgasmixture method)": [[1505, "openpnm.phase.StandardGasMixture.values"]], "y() (standardgasmixture method)": [[1506, "openpnm.phase.StandardGasMixture.y"]], "standardliquid (class in openpnm.phase)": [[1507, "openpnm.phase.StandardLiquid"]], "add_model() (standardliquid method)": [[1508, "openpnm.phase.StandardLiquid.add_model"]], "add_model_collection() (standardliquid method)": [[1509, "openpnm.phase.StandardLiquid.add_model_collection"]], "clear() (standardliquid method)": [[1510, "openpnm.phase.StandardLiquid.clear"]], "copy() (standardliquid method)": [[1511, "openpnm.phase.StandardLiquid.copy"]], "filter_by_label() (standardliquid method)": [[1512, "openpnm.phase.StandardLiquid.filter_by_label"]], "fromkeys() (standardliquid method)": [[1513, "openpnm.phase.StandardLiquid.fromkeys"]], "get() (standardliquid method)": [[1514, "openpnm.phase.StandardLiquid.get"]], "get_conduit_data() (standardliquid method)": [[1515, "openpnm.phase.StandardLiquid.get_conduit_data"]], "interpolate_data() (standardliquid method)": [[1516, "openpnm.phase.StandardLiquid.interpolate_data"]], "items() (standardliquid method)": [[1517, "openpnm.phase.StandardLiquid.items"]], "keys() (standardliquid method)": [[1518, "openpnm.phase.StandardLiquid.keys"]], "labels() (standardliquid method)": [[1519, "openpnm.phase.StandardLiquid.labels"]], "num_pores() (standardliquid method)": [[1520, "openpnm.phase.StandardLiquid.num_pores"]], "num_throats() (standardliquid method)": [[1521, "openpnm.phase.StandardLiquid.num_throats"]], "pop() (standardliquid method)": [[1522, "openpnm.phase.StandardLiquid.pop"]], "popitem() (standardliquid method)": [[1523, "openpnm.phase.StandardLiquid.popitem"]], "pores() (standardliquid method)": [[1524, "openpnm.phase.StandardLiquid.pores"]], "props() (standardliquid method)": [[1525, "openpnm.phase.StandardLiquid.props"]], "regenerate_models() (standardliquid method)": [[1526, "openpnm.phase.StandardLiquid.regenerate_models"]], "run_model() (standardliquid method)": [[1527, "openpnm.phase.StandardLiquid.run_model"]], "set_label() (standardliquid method)": [[1528, "openpnm.phase.StandardLiquid.set_label"]], "setdefault() (standardliquid method)": [[1529, "openpnm.phase.StandardLiquid.setdefault"]], "throats() (standardliquid method)": [[1530, "openpnm.phase.StandardLiquid.throats"]], "to_indices() (standardliquid method)": [[1531, "openpnm.phase.StandardLiquid.to_indices"]], "to_mask() (standardliquid method)": [[1532, "openpnm.phase.StandardLiquid.to_mask"]], "update() (standardliquid method)": [[1533, "openpnm.phase.StandardLiquid.update"]], "values() (standardliquid method)": [[1534, "openpnm.phase.StandardLiquid.values"]], "standardliquidmixture (class in openpnm.phase)": [[1535, "openpnm.phase.StandardLiquidMixture"]], "add_comp() (standardliquidmixture method)": [[1536, "openpnm.phase.StandardLiquidMixture.add_comp"]], "add_model() (standardliquidmixture method)": [[1537, "openpnm.phase.StandardLiquidMixture.add_model"]], "add_model_collection() (standardliquidmixture method)": [[1538, "openpnm.phase.StandardLiquidMixture.add_model_collection"]], "check_mixture_health() (standardliquidmixture method)": [[1539, "openpnm.phase.StandardLiquidMixture.check_mixture_health"]], "clear() (standardliquidmixture method)": [[1540, "openpnm.phase.StandardLiquidMixture.clear"]], "copy() (standardliquidmixture method)": [[1541, "openpnm.phase.StandardLiquidMixture.copy"]], "filter_by_label() (standardliquidmixture method)": [[1542, "openpnm.phase.StandardLiquidMixture.filter_by_label"]], "fromkeys() (standardliquidmixture method)": [[1543, "openpnm.phase.StandardLiquidMixture.fromkeys"]], "get() (standardliquidmixture method)": [[1544, "openpnm.phase.StandardLiquidMixture.get"]], "get_comp_vals() (standardliquidmixture method)": [[1545, "openpnm.phase.StandardLiquidMixture.get_comp_vals"]], "get_conduit_data() (standardliquidmixture method)": [[1546, "openpnm.phase.StandardLiquidMixture.get_conduit_data"]], "get_mix_vals() (standardliquidmixture method)": [[1547, "openpnm.phase.StandardLiquidMixture.get_mix_vals"]], "interpolate_data() (standardliquidmixture method)": [[1548, "openpnm.phase.StandardLiquidMixture.interpolate_data"]], "items() (standardliquidmixture method)": [[1549, "openpnm.phase.StandardLiquidMixture.items"]], "keys() (standardliquidmixture method)": [[1550, "openpnm.phase.StandardLiquidMixture.keys"]], "labels() (standardliquidmixture method)": [[1551, "openpnm.phase.StandardLiquidMixture.labels"]], "num_pores() (standardliquidmixture method)": [[1552, "openpnm.phase.StandardLiquidMixture.num_pores"]], "num_throats() (standardliquidmixture method)": [[1553, "openpnm.phase.StandardLiquidMixture.num_throats"]], "pop() (standardliquidmixture method)": [[1554, "openpnm.phase.StandardLiquidMixture.pop"]], "popitem() (standardliquidmixture method)": [[1555, "openpnm.phase.StandardLiquidMixture.popitem"]], "pores() (standardliquidmixture method)": [[1556, "openpnm.phase.StandardLiquidMixture.pores"]], "props() (standardliquidmixture method)": [[1557, "openpnm.phase.StandardLiquidMixture.props"]], "regenerate_models() (standardliquidmixture method)": [[1558, "openpnm.phase.StandardLiquidMixture.regenerate_models"]], "remove_comp() (standardliquidmixture method)": [[1559, "openpnm.phase.StandardLiquidMixture.remove_comp"]], "run_model() (standardliquidmixture method)": [[1560, "openpnm.phase.StandardLiquidMixture.run_model"]], "set_label() (standardliquidmixture method)": [[1561, "openpnm.phase.StandardLiquidMixture.set_label"]], "setdefault() (standardliquidmixture method)": [[1562, "openpnm.phase.StandardLiquidMixture.setdefault"]], "throats() (standardliquidmixture method)": [[1563, "openpnm.phase.StandardLiquidMixture.throats"]], "to_indices() (standardliquidmixture method)": [[1564, "openpnm.phase.StandardLiquidMixture.to_indices"]], "to_mask() (standardliquidmixture method)": [[1565, "openpnm.phase.StandardLiquidMixture.to_mask"]], "update() (standardliquidmixture method)": [[1566, "openpnm.phase.StandardLiquidMixture.update"]], "values() (standardliquidmixture method)": [[1567, "openpnm.phase.StandardLiquidMixture.values"]], "x() (standardliquidmixture method)": [[1568, "openpnm.phase.StandardLiquidMixture.x"]], "water (class in openpnm.phase)": [[1569, "openpnm.phase.Water"]], "add_model() (water method)": [[1570, "openpnm.phase.Water.add_model"]], "add_model_collection() (water method)": [[1571, "openpnm.phase.Water.add_model_collection"]], "clear() (water method)": [[1572, "openpnm.phase.Water.clear"]], "copy() (water method)": [[1573, "openpnm.phase.Water.copy"]], "filter_by_label() (water method)": [[1574, "openpnm.phase.Water.filter_by_label"]], "fromkeys() (water method)": [[1575, "openpnm.phase.Water.fromkeys"]], "get() (water method)": [[1576, "openpnm.phase.Water.get"]], "get_conduit_data() (water method)": [[1577, "openpnm.phase.Water.get_conduit_data"]], "interpolate_data() (water method)": [[1578, "openpnm.phase.Water.interpolate_data"]], "items() (water method)": [[1579, "openpnm.phase.Water.items"]], "keys() (water method)": [[1580, "openpnm.phase.Water.keys"]], "labels() (water method)": [[1581, "openpnm.phase.Water.labels"]], "num_pores() (water method)": [[1582, "openpnm.phase.Water.num_pores"]], "num_throats() (water method)": [[1583, "openpnm.phase.Water.num_throats"]], "pop() (water method)": [[1584, "openpnm.phase.Water.pop"]], "popitem() (water method)": [[1585, "openpnm.phase.Water.popitem"]], "pores() (water method)": [[1586, "openpnm.phase.Water.pores"]], "props() (water method)": [[1587, "openpnm.phase.Water.props"]], "regenerate_models() (water method)": [[1588, "openpnm.phase.Water.regenerate_models"]], "run_model() (water method)": [[1589, "openpnm.phase.Water.run_model"]], "set_label() (water method)": [[1590, "openpnm.phase.Water.set_label"]], "setdefault() (water method)": [[1591, "openpnm.phase.Water.setdefault"]], "throats() (water method)": [[1592, "openpnm.phase.Water.throats"]], "to_indices() (water method)": [[1593, "openpnm.phase.Water.to_indices"]], "to_mask() (water method)": [[1594, "openpnm.phase.Water.to_mask"]], "update() (water method)": [[1595, "openpnm.phase.Water.update"]], "values() (water method)": [[1596, "openpnm.phase.Water.values"]], "openpnm.solvers": [[1597, "module-openpnm.solvers"]], "basesolver (class in openpnm.solvers)": [[1598, "openpnm.solvers.BaseSolver"]], "solve() (basesolver method)": [[1599, "openpnm.solvers.BaseSolver.solve"]], "directsolver (class in openpnm.solvers)": [[1600, "openpnm.solvers.DirectSolver"]], "solve() (directsolver method)": [[1601, "openpnm.solvers.DirectSolver.solve"]], "iterativesolver (class in openpnm.solvers)": [[1602, "openpnm.solvers.IterativeSolver"]], "solve() (iterativesolver method)": [[1603, "openpnm.solvers.IterativeSolver.solve"]], "petsclinearsolver (class in openpnm.solvers)": [[1604, "openpnm.solvers.PETScLinearSolver"]], "solve() (petsclinearsolver method)": [[1605, "openpnm.solvers.PETScLinearSolver.solve"]], "pardisospsolve (class in openpnm.solvers)": [[1606, "openpnm.solvers.PardisoSpsolve"]], "solve() (pardisospsolve method)": [[1607, "openpnm.solvers.PardisoSpsolve.solve"]], "pyamgrugestubensolver (class in openpnm.solvers)": [[1608, "openpnm.solvers.PyamgRugeStubenSolver"]], "solve() (pyamgrugestubensolver method)": [[1609, "openpnm.solvers.PyamgRugeStubenSolver.solve"]], "scipycg (class in openpnm.solvers)": [[1610, "openpnm.solvers.ScipyCG"]], "solve() (scipycg method)": [[1611, "openpnm.solvers.ScipyCG.solve"]], "scipyspsolve (class in openpnm.solvers)": [[1612, "openpnm.solvers.ScipySpsolve"]], "solve() (scipyspsolve method)": [[1613, "openpnm.solvers.ScipySpsolve.solve"]], "openpnm.topotools": [[1614, "module-openpnm.topotools"]], "add_boundary_pores() (in module openpnm.topotools)": [[1615, "openpnm.topotools.add_boundary_pores"]], "add_reservoir_pore() (in module openpnm.topotools)": [[1616, "openpnm.topotools.add_reservoir_pore"]], "bond_percolation() (in module openpnm.topotools)": [[1617, "openpnm.topotools.bond_percolation"]], "clone_pores() (in module openpnm.topotools)": [[1618, "openpnm.topotools.clone_pores"]], "connect_pores() (in module openpnm.topotools)": [[1619, "openpnm.topotools.connect_pores"]], "conns_to_am() (in module openpnm.topotools)": [[1620, "openpnm.topotools.conns_to_am"]], "dimensionality() (in module openpnm.topotools)": [[1621, "openpnm.topotools.dimensionality"]], "drop_sites() (in module openpnm.topotools)": [[1622, "openpnm.topotools.drop_sites"]], "extend() (in module openpnm.topotools)": [[1623, "openpnm.topotools.extend"]], "filter_pores_by_z() (in module openpnm.topotools)": [[1624, "openpnm.topotools.filter_pores_by_z"]], "find_clusters() (in module openpnm.topotools)": [[1625, "openpnm.topotools.find_clusters"]], "find_connected_sites() (in module openpnm.topotools)": [[1626, "openpnm.topotools.find_connected_sites"]], "find_connecting_bonds() (in module openpnm.topotools)": [[1627, "openpnm.topotools.find_connecting_bonds"]], "find_interface_throats() (in module openpnm.topotools)": [[1628, "openpnm.topotools.find_interface_throats"]], "find_isolated_clusters() (in module openpnm.topotools)": [[1629, "openpnm.topotools.find_isolated_clusters"]], "find_neighbor_bonds() (in module openpnm.topotools)": [[1630, "openpnm.topotools.find_neighbor_bonds"]], "find_neighbor_sites() (in module openpnm.topotools)": [[1631, "openpnm.topotools.find_neighbor_sites"]], "find_path() (in module openpnm.topotools)": [[1632, "openpnm.topotools.find_path"]], "find_surface_pores() (in module openpnm.topotools)": [[1633, "openpnm.topotools.find_surface_pores"]], "generate_base_points() (in module openpnm.topotools)": [[1634, "openpnm.topotools.generate_base_points"]], "get_domain_area() (in module openpnm.topotools)": [[1635, "openpnm.topotools.get_domain_area"]], "get_domain_length() (in module openpnm.topotools)": [[1636, "openpnm.topotools.get_domain_length"]], "get_shape() (in module openpnm.topotools)": [[1637, "openpnm.topotools.get_shape"]], "get_spacing() (in module openpnm.topotools)": [[1638, "openpnm.topotools.get_spacing"]], "hull_centroid() (in module openpnm.topotools)": [[1639, "openpnm.topotools.hull_centroid"]], "is_fully_connected() (in module openpnm.topotools)": [[1640, "openpnm.topotools.is_fully_connected"]], "iscoplanar() (in module openpnm.topotools)": [[1641, "openpnm.topotools.iscoplanar"]], "isoutside() (in module openpnm.topotools)": [[1642, "openpnm.topotools.isoutside"]], "ispercolating() (in module openpnm.topotools)": [[1643, "openpnm.topotools.ispercolating"]], "issymmetric() (in module openpnm.topotools)": [[1644, "openpnm.topotools.issymmetric"]], "istriangular() (in module openpnm.topotools)": [[1645, "openpnm.topotools.istriangular"]], "istril() (in module openpnm.topotools)": [[1646, "openpnm.topotools.istril"]], "istriu() (in module openpnm.topotools)": [[1647, "openpnm.topotools.istriu"]], "label_faces() (in module openpnm.topotools)": [[1648, "openpnm.topotools.label_faces"]], "merge_networks() (in module openpnm.topotools)": [[1649, "openpnm.topotools.merge_networks"]], "merge_pores() (in module openpnm.topotools)": [[1650, "openpnm.topotools.merge_pores"]], "reduce_coordination() (in module openpnm.topotools)": [[1651, "openpnm.topotools.reduce_coordination"]], "reflect_base_points() (in module openpnm.topotools)": [[1652, "openpnm.topotools.reflect_base_points"]], "rotate_coords() (in module openpnm.topotools)": [[1653, "openpnm.topotools.rotate_coords"]], "shear_coords() (in module openpnm.topotools)": [[1654, "openpnm.topotools.shear_coords"]], "site_percolation() (in module openpnm.topotools)": [[1655, "openpnm.topotools.site_percolation"]], "stitch() (in module openpnm.topotools)": [[1656, "openpnm.topotools.stitch"]], "template_cylinder_annulus() (in module openpnm.topotools)": [[1657, "openpnm.topotools.template_cylinder_annulus"]], "template_sphere_shell() (in module openpnm.topotools)": [[1658, "openpnm.topotools.template_sphere_shell"]], "tri_to_am() (in module openpnm.topotools)": [[1659, "openpnm.topotools.tri_to_am"]], "trim() (in module openpnm.topotools)": [[1660, "openpnm.topotools.trim"]], "trim_disconnected_clusters() (in module openpnm.topotools)": [[1661, "openpnm.topotools.trim_disconnected_clusters"]], "vor_to_am() (in module openpnm.topotools)": [[1662, "openpnm.topotools.vor_to_am"]], "openpnm.utils": [[1663, "module-openpnm.utils"]], "docorator (class in openpnm.utils)": [[1664, "openpnm.utils.Docorator"]], "__call__() (docorator method)": [[1665, "openpnm.utils.Docorator.__call__"]], "dedent() (docorator method)": [[1666, "openpnm.utils.Docorator.dedent"]], "dedents() (docorator method)": [[1667, "openpnm.utils.Docorator.dedents"]], "delete_kwargs() (docorator method)": [[1668, "openpnm.utils.Docorator.delete_kwargs"]], "delete_kwargs_s() (docorator class method)": [[1669, "openpnm.utils.Docorator.delete_kwargs_s"]], "delete_params() (docorator method)": [[1670, "openpnm.utils.Docorator.delete_params"]], "delete_params_s() (docorator static method)": [[1671, "openpnm.utils.Docorator.delete_params_s"]], "delete_types() (docorator method)": [[1672, "openpnm.utils.Docorator.delete_types"]], "delete_types_s() (docorator static method)": [[1673, "openpnm.utils.Docorator.delete_types_s"]], "get_docstring() (docorator method)": [[1674, "openpnm.utils.Docorator.get_docstring"]], "get_extended_summary() (docorator method)": [[1675, "openpnm.utils.Docorator.get_extended_summary"]], "get_extended_summaryf() (docorator method)": [[1676, "openpnm.utils.Docorator.get_extended_summaryf"]], "get_full_description() (docorator method)": [[1677, "openpnm.utils.Docorator.get_full_description"]], "get_full_descriptionf() (docorator method)": [[1678, "openpnm.utils.Docorator.get_full_descriptionf"]], "get_sections() (docorator method)": [[1679, "openpnm.utils.Docorator.get_sections"]], "get_sectionsf() (docorator method)": [[1680, "openpnm.utils.Docorator.get_sectionsf"]], "get_summary() (docorator method)": [[1681, "openpnm.utils.Docorator.get_summary"]], "get_summaryf() (docorator method)": [[1682, "openpnm.utils.Docorator.get_summaryf"]], "keep_params() (docorator method)": [[1683, "openpnm.utils.Docorator.keep_params"]], "keep_params_s() (docorator static method)": [[1684, "openpnm.utils.Docorator.keep_params_s"]], "keep_types() (docorator method)": [[1685, "openpnm.utils.Docorator.keep_types"]], "keep_types_s() (docorator static method)": [[1686, "openpnm.utils.Docorator.keep_types_s"]], "save_docstring() (docorator method)": [[1687, "openpnm.utils.Docorator.save_docstring"]], "with_indent() (docorator method)": [[1688, "openpnm.utils.Docorator.with_indent"]], "with_indents() (docorator method)": [[1689, "openpnm.utils.Docorator.with_indents"]], "healthdict (class in openpnm.utils)": [[1690, "openpnm.utils.HealthDict"]], "clear() (healthdict method)": [[1691, "openpnm.utils.HealthDict.clear"]], "copy() (healthdict method)": [[1692, "openpnm.utils.HealthDict.copy"]], "fromkeys() (healthdict method)": [[1693, "openpnm.utils.HealthDict.fromkeys"]], "get() (healthdict method)": [[1694, "openpnm.utils.HealthDict.get"]], "items() (healthdict method)": [[1695, "openpnm.utils.HealthDict.items"]], "keys() (healthdict method)": [[1696, "openpnm.utils.HealthDict.keys"]], "pop() (healthdict method)": [[1697, "openpnm.utils.HealthDict.pop"]], "popitem() (healthdict method)": [[1698, "openpnm.utils.HealthDict.popitem"]], "setdefault() (healthdict method)": [[1699, "openpnm.utils.HealthDict.setdefault"]], "update() (healthdict method)": [[1700, "openpnm.utils.HealthDict.update"]], "values() (healthdict method)": [[1701, "openpnm.utils.HealthDict.values"]], "nesteddict (class in openpnm.utils)": [[1702, "openpnm.utils.NestedDict"]], "clear() (nesteddict method)": [[1703, "openpnm.utils.NestedDict.clear"]], "copy() (nesteddict method)": [[1704, "openpnm.utils.NestedDict.copy"]], "fromkeys() (nesteddict method)": [[1705, "openpnm.utils.NestedDict.fromkeys"]], "get() (nesteddict method)": [[1706, "openpnm.utils.NestedDict.get"]], "items() (nesteddict method)": [[1707, "openpnm.utils.NestedDict.items"]], "keys() (nesteddict method)": [[1708, "openpnm.utils.NestedDict.keys"]], "pop() (nesteddict method)": [[1709, "openpnm.utils.NestedDict.pop"]], "popitem() (nesteddict method)": [[1710, "openpnm.utils.NestedDict.popitem"]], "setdefault() (nesteddict method)": [[1711, "openpnm.utils.NestedDict.setdefault"]], "to_dict() (nesteddict method)": [[1712, "openpnm.utils.NestedDict.to_dict"]], "unravel() (nesteddict method)": [[1713, "openpnm.utils.NestedDict.unravel"]], "update() (nesteddict method)": [[1714, "openpnm.utils.NestedDict.update"]], "values() (nesteddict method)": [[1715, "openpnm.utils.NestedDict.values"]], "printabledict (class in openpnm.utils)": [[1716, "openpnm.utils.PrintableDict"]], "clear() (printabledict method)": [[1717, "openpnm.utils.PrintableDict.clear"]], "copy() (printabledict method)": [[1718, "openpnm.utils.PrintableDict.copy"]], "fromkeys() (printabledict method)": [[1719, "openpnm.utils.PrintableDict.fromkeys"]], "get() (printabledict method)": [[1720, "openpnm.utils.PrintableDict.get"]], "items() (printabledict method)": [[1721, "openpnm.utils.PrintableDict.items"]], "keys() (printabledict method)": [[1722, "openpnm.utils.PrintableDict.keys"]], "pop() (printabledict method)": [[1723, "openpnm.utils.PrintableDict.pop"]], "popitem() (printabledict method)": [[1724, "openpnm.utils.PrintableDict.popitem"]], "setdefault() (printabledict method)": [[1725, "openpnm.utils.PrintableDict.setdefault"]], "update() (printabledict method)": [[1726, "openpnm.utils.PrintableDict.update"]], "values() (printabledict method)": [[1727, "openpnm.utils.PrintableDict.values"]], "printablelist (class in openpnm.utils)": [[1728, "openpnm.utils.PrintableList"]], "append() (printablelist method)": [[1729, "openpnm.utils.PrintableList.append"]], "clear() (printablelist method)": [[1730, "openpnm.utils.PrintableList.clear"]], "copy() (printablelist method)": [[1731, "openpnm.utils.PrintableList.copy"]], "count() (printablelist method)": [[1732, "openpnm.utils.PrintableList.count"]], "extend() (printablelist method)": [[1733, "openpnm.utils.PrintableList.extend"]], "index() (printablelist method)": [[1734, "openpnm.utils.PrintableList.index"]], "insert() (printablelist method)": [[1735, "openpnm.utils.PrintableList.insert"]], "pop() (printablelist method)": [[1736, "openpnm.utils.PrintableList.pop"]], "remove() (printablelist method)": [[1737, "openpnm.utils.PrintableList.remove"]], "reverse() (printablelist method)": [[1738, "openpnm.utils.PrintableList.reverse"]], "sort() (printablelist method)": [[1739, "openpnm.utils.PrintableList.sort"]], "project (class in openpnm.utils)": [[1740, "openpnm.utils.Project"]], "append() (project method)": [[1741, "openpnm.utils.Project.append"]], "copy() (project method)": [[1742, "openpnm.utils.Project.copy"]], "settingsattr (class in openpnm.utils)": [[1743, "openpnm.utils.SettingsAttr"]], "simplelist (class in openpnm.utils)": [[1744, "openpnm.utils.SimpleList"]], "append() (simplelist method)": [[1745, "openpnm.utils.SimpleList.append"]], "typedlist (class in openpnm.utils)": [[1746, "openpnm.utils.TypedList"]], "append() (typedlist method)": [[1747, "openpnm.utils.TypedList.append"]], "clear() (typedlist method)": [[1748, "openpnm.utils.TypedList.clear"]], "copy() (typedlist method)": [[1749, "openpnm.utils.TypedList.copy"]], "count() (typedlist method)": [[1750, "openpnm.utils.TypedList.count"]], "extend() (typedlist method)": [[1751, "openpnm.utils.TypedList.extend"]], "index() (typedlist method)": [[1752, "openpnm.utils.TypedList.index"]], "insert() (typedlist method)": [[1753, "openpnm.utils.TypedList.insert"]], "pop() (typedlist method)": [[1754, "openpnm.utils.TypedList.pop"]], "remove() (typedlist method)": [[1755, "openpnm.utils.TypedList.remove"]], "reverse() (typedlist method)": [[1756, "openpnm.utils.TypedList.reverse"]], "sort() (typedlist method)": [[1757, "openpnm.utils.TypedList.sort"]], "typedmixin (class in openpnm.utils)": [[1758, "openpnm.utils.TypedMixin"]], "typedset (class in openpnm.utils)": [[1759, "openpnm.utils.TypedSet"]], "add() (typedset method)": [[1760, "openpnm.utils.TypedSet.add"]], "clear() (typedset method)": [[1761, "openpnm.utils.TypedSet.clear"]], "copy() (typedset method)": [[1762, "openpnm.utils.TypedSet.copy"]], "difference() (typedset method)": [[1763, "openpnm.utils.TypedSet.difference"]], "difference_update() (typedset method)": [[1764, "openpnm.utils.TypedSet.difference_update"]], "discard() (typedset method)": [[1765, "openpnm.utils.TypedSet.discard"]], "intersection() (typedset method)": [[1766, "openpnm.utils.TypedSet.intersection"]], "intersection_update() (typedset method)": [[1767, "openpnm.utils.TypedSet.intersection_update"]], "isdisjoint() (typedset method)": [[1768, "openpnm.utils.TypedSet.isdisjoint"]], "issubset() (typedset method)": [[1769, "openpnm.utils.TypedSet.issubset"]], "issuperset() (typedset method)": [[1770, "openpnm.utils.TypedSet.issuperset"]], "pop() (typedset method)": [[1771, "openpnm.utils.TypedSet.pop"]], "remove() (typedset method)": [[1772, "openpnm.utils.TypedSet.remove"]], "symmetric_difference() (typedset method)": [[1773, "openpnm.utils.TypedSet.symmetric_difference"]], "symmetric_difference_update() (typedset method)": [[1774, "openpnm.utils.TypedSet.symmetric_difference_update"]], "union() (typedset method)": [[1775, "openpnm.utils.TypedSet.union"]], "update() (typedset method)": [[1776, "openpnm.utils.TypedSet.update"]], "workspace (class in openpnm.utils)": [[1777, "openpnm.utils.Workspace"]], "clear() (workspace method)": [[1778, "openpnm.utils.Workspace.clear"]], "close_project() (workspace method)": [[1779, "openpnm.utils.Workspace.close_project"]], "copy() (workspace method)": [[1780, "openpnm.utils.Workspace.copy"]], "copy_project() (workspace method)": [[1781, "openpnm.utils.Workspace.copy_project"]], "fromkeys() (workspace method)": [[1782, "openpnm.utils.Workspace.fromkeys"]], "get() (workspace method)": [[1783, "openpnm.utils.Workspace.get"]], "items() (workspace method)": [[1784, "openpnm.utils.Workspace.items"]], "keys() (workspace method)": [[1785, "openpnm.utils.Workspace.keys"]], "load_project() (workspace method)": [[1786, "openpnm.utils.Workspace.load_project"]], "load_workspace() (workspace method)": [[1787, "openpnm.utils.Workspace.load_workspace"]], "new_project() (workspace method)": [[1788, "openpnm.utils.Workspace.new_project"]], "pop() (workspace method)": [[1789, "openpnm.utils.Workspace.pop"]], "popitem() (workspace method)": [[1790, "openpnm.utils.Workspace.popitem"]], "save_project() (workspace method)": [[1791, "openpnm.utils.Workspace.save_project"]], "save_workspace() (workspace method)": [[1792, "openpnm.utils.Workspace.save_workspace"]], "setdefault() (workspace method)": [[1793, "openpnm.utils.Workspace.setdefault"]], "update() (workspace method)": [[1794, "openpnm.utils.Workspace.update"]], "values() (workspace method)": [[1795, "openpnm.utils.Workspace.values"]], "check_data_health() (in module openpnm.utils)": [[1796, "openpnm.utils.check_data_health"]], "check_network_health() (in module openpnm.utils)": [[1797, "openpnm.utils.check_network_health"]], "dict_to_struct() (in module openpnm.utils)": [[1798, "openpnm.utils.dict_to_struct"]], "flat_list() (in module openpnm.utils)": [[1799, "openpnm.utils.flat_list"]], "get_mixture_model_args() (in module openpnm.utils)": [[1800, "openpnm.utils.get_mixture_model_args"]], "get_printable_labels() (in module openpnm.utils)": [[1801, "openpnm.utils.get_printable_labels"]], "get_printable_props() (in module openpnm.utils)": [[1802, "openpnm.utils.get_printable_props"]], "ignore_warnings() (in module openpnm.utils)": [[1803, "openpnm.utils.ignore_warnings"]], "is_symmetric() (in module openpnm.utils)": [[1804, "openpnm.utils.is_symmetric"]], "is_transient() (in module openpnm.utils)": [[1805, "openpnm.utils.is_transient"]], "is_valid_propname() (in module openpnm.utils)": [[1806, "openpnm.utils.is_valid_propname"]], "methods_to_table() (in module openpnm.utils)": [[1807, "openpnm.utils.methods_to_table"]], "models_to_table() (in module openpnm.utils)": [[1808, "openpnm.utils.models_to_table"]], "sanitize_dict() (in module openpnm.utils)": [[1809, "openpnm.utils.sanitize_dict"]], "struct_to_dict() (in module openpnm.utils)": [[1810, "openpnm.utils.struct_to_dict"]], "openpnm": [[1811, "module-openpnm"]]}})