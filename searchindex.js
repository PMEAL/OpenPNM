Search.setIndex({"docnames": ["_examples/applications", "_examples/index", "_examples/reference", "_examples/tutorials", "examples/applications/absolute_permeability", "examples/applications/adjusting_pore_size_distributions", "examples/applications/dispersion_coefficient", "examples/applications/effective_diffusivity_and_tortuosity", "examples/applications/formation_factor", "examples/applications/mercury_intrusion", "examples/applications/network_extraction", "examples/applications/porosity", "examples/applications/relative_diffusivity", "examples/applications/relative_permeability", "examples/contrib/README", "examples/getting_started", "examples/reference/architecture/pore_scale_models", "examples/reference/architecture/settings_attribute_machinery", "examples/reference/architecture/workspace_and_projects", "examples/reference/networks/managing_clustered_networks", "examples/reference/simulations/available_matrix_solvers", "examples/reference/simulations/basic_transport", "examples/reference/simulations/explanation_of_units", "examples/reference/simulations/reactive_transport", "examples/reference/simulations/size_factors_and_transport_conductance", "examples/reference/simulations/transient_transport", "examples/tutorials/01_numerical_python_primer", "examples/tutorials/02_network_generation_and_visualization", "examples/tutorials/03_data_and_topology_storage", "examples/tutorials/04_graph_queries_and_manipulation", "examples/tutorials/05_defining_geometry", "examples/tutorials/06_labels_and_domains", "examples/tutorials/07_phases_and_mixtures", "examples/tutorials/08_simulating_transport", "examples/tutorials/09_simulating_invasion", "examples/tutorials/10_visualization_options", "index", "installation", "modules/generated/openpnm.algorithms", "modules/generated/openpnm.algorithms.AdvectionDiffusion", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values", "modules/generated/openpnm.algorithms.Algorithm", "modules/generated/openpnm.algorithms.Algorithm.clear", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs", "modules/generated/openpnm.algorithms.Algorithm.copy", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label", "modules/generated/openpnm.algorithms.Algorithm.fromkeys", "modules/generated/openpnm.algorithms.Algorithm.get", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data", "modules/generated/openpnm.algorithms.Algorithm.items", "modules/generated/openpnm.algorithms.Algorithm.keys", "modules/generated/openpnm.algorithms.Algorithm.labels", "modules/generated/openpnm.algorithms.Algorithm.num_pores", "modules/generated/openpnm.algorithms.Algorithm.num_throats", "modules/generated/openpnm.algorithms.Algorithm.pop", "modules/generated/openpnm.algorithms.Algorithm.popitem", "modules/generated/openpnm.algorithms.Algorithm.pores", "modules/generated/openpnm.algorithms.Algorithm.props", "modules/generated/openpnm.algorithms.Algorithm.set_BC", "modules/generated/openpnm.algorithms.Algorithm.set_label", "modules/generated/openpnm.algorithms.Algorithm.setdefault", "modules/generated/openpnm.algorithms.Algorithm.throats", "modules/generated/openpnm.algorithms.Algorithm.to_indices", "modules/generated/openpnm.algorithms.Algorithm.to_mask", "modules/generated/openpnm.algorithms.Algorithm.update", "modules/generated/openpnm.algorithms.Algorithm.values", "modules/generated/openpnm.algorithms.Drainage", "modules/generated/openpnm.algorithms.Drainage.apply_trapping", "modules/generated/openpnm.algorithms.Drainage.clear", "modules/generated/openpnm.algorithms.Drainage.clear_BCs", "modules/generated/openpnm.algorithms.Drainage.copy", "modules/generated/openpnm.algorithms.Drainage.filter_by_label", "modules/generated/openpnm.algorithms.Drainage.fromkeys", "modules/generated/openpnm.algorithms.Drainage.get", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data", "modules/generated/openpnm.algorithms.Drainage.interpolate_data", "modules/generated/openpnm.algorithms.Drainage.items", "modules/generated/openpnm.algorithms.Drainage.keys", "modules/generated/openpnm.algorithms.Drainage.labels", "modules/generated/openpnm.algorithms.Drainage.num_pores", "modules/generated/openpnm.algorithms.Drainage.num_throats", "modules/generated/openpnm.algorithms.Drainage.pc_curve", "modules/generated/openpnm.algorithms.Drainage.pop", "modules/generated/openpnm.algorithms.Drainage.popitem", "modules/generated/openpnm.algorithms.Drainage.pores", "modules/generated/openpnm.algorithms.Drainage.props", "modules/generated/openpnm.algorithms.Drainage.reset", "modules/generated/openpnm.algorithms.Drainage.run", "modules/generated/openpnm.algorithms.Drainage.set_BC", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC", "modules/generated/openpnm.algorithms.Drainage.set_label", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC", "modules/generated/openpnm.algorithms.Drainage.setdefault", "modules/generated/openpnm.algorithms.Drainage.throats", "modules/generated/openpnm.algorithms.Drainage.to_indices", "modules/generated/openpnm.algorithms.Drainage.to_mask", "modules/generated/openpnm.algorithms.Drainage.update", "modules/generated/openpnm.algorithms.Drainage.values", "modules/generated/openpnm.algorithms.FickianDiffusion", "modules/generated/openpnm.algorithms.FickianDiffusion.clear", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.copy", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.FickianDiffusion.get", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.FickianDiffusion.items", "modules/generated/openpnm.algorithms.FickianDiffusion.keys", "modules/generated/openpnm.algorithms.FickianDiffusion.labels", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.FickianDiffusion.pop", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem", "modules/generated/openpnm.algorithms.FickianDiffusion.pores", "modules/generated/openpnm.algorithms.FickianDiffusion.props", "modules/generated/openpnm.algorithms.FickianDiffusion.rate", "modules/generated/openpnm.algorithms.FickianDiffusion.run", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.FickianDiffusion.throats", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.FickianDiffusion.update", "modules/generated/openpnm.algorithms.FickianDiffusion.values", "modules/generated/openpnm.algorithms.FourierConduction", "modules/generated/openpnm.algorithms.FourierConduction.clear", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.FourierConduction.copy", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys", "modules/generated/openpnm.algorithms.FourierConduction.get", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data", "modules/generated/openpnm.algorithms.FourierConduction.items", "modules/generated/openpnm.algorithms.FourierConduction.keys", "modules/generated/openpnm.algorithms.FourierConduction.labels", "modules/generated/openpnm.algorithms.FourierConduction.num_pores", "modules/generated/openpnm.algorithms.FourierConduction.num_throats", "modules/generated/openpnm.algorithms.FourierConduction.pop", "modules/generated/openpnm.algorithms.FourierConduction.popitem", "modules/generated/openpnm.algorithms.FourierConduction.pores", "modules/generated/openpnm.algorithms.FourierConduction.props", "modules/generated/openpnm.algorithms.FourierConduction.rate", "modules/generated/openpnm.algorithms.FourierConduction.run", "modules/generated/openpnm.algorithms.FourierConduction.set_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_label", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_source", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC", "modules/generated/openpnm.algorithms.FourierConduction.setdefault", "modules/generated/openpnm.algorithms.FourierConduction.throats", "modules/generated/openpnm.algorithms.FourierConduction.to_indices", "modules/generated/openpnm.algorithms.FourierConduction.to_mask", "modules/generated/openpnm.algorithms.FourierConduction.update", "modules/generated/openpnm.algorithms.FourierConduction.values", "modules/generated/openpnm.algorithms.InvasionPercolation", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping", "modules/generated/openpnm.algorithms.InvasionPercolation.clear", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs", "modules/generated/openpnm.algorithms.InvasionPercolation.copy", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys", "modules/generated/openpnm.algorithms.InvasionPercolation.get", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data", "modules/generated/openpnm.algorithms.InvasionPercolation.items", "modules/generated/openpnm.algorithms.InvasionPercolation.keys", "modules/generated/openpnm.algorithms.InvasionPercolation.labels", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve", "modules/generated/openpnm.algorithms.InvasionPercolation.pop", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem", "modules/generated/openpnm.algorithms.InvasionPercolation.pores", "modules/generated/openpnm.algorithms.InvasionPercolation.props", "modules/generated/openpnm.algorithms.InvasionPercolation.reset", "modules/generated/openpnm.algorithms.InvasionPercolation.run", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault", "modules/generated/openpnm.algorithms.InvasionPercolation.throats", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask", "modules/generated/openpnm.algorithms.InvasionPercolation.update", "modules/generated/openpnm.algorithms.InvasionPercolation.values", "modules/generated/openpnm.algorithms.OhmicConduction", "modules/generated/openpnm.algorithms.OhmicConduction.clear", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.copy", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys", "modules/generated/openpnm.algorithms.OhmicConduction.get", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data", "modules/generated/openpnm.algorithms.OhmicConduction.items", "modules/generated/openpnm.algorithms.OhmicConduction.keys", "modules/generated/openpnm.algorithms.OhmicConduction.labels", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats", "modules/generated/openpnm.algorithms.OhmicConduction.pop", "modules/generated/openpnm.algorithms.OhmicConduction.popitem", "modules/generated/openpnm.algorithms.OhmicConduction.pores", "modules/generated/openpnm.algorithms.OhmicConduction.props", "modules/generated/openpnm.algorithms.OhmicConduction.rate", "modules/generated/openpnm.algorithms.OhmicConduction.run", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_label", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_source", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault", "modules/generated/openpnm.algorithms.OhmicConduction.throats", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask", "modules/generated/openpnm.algorithms.OhmicConduction.update", "modules/generated/openpnm.algorithms.OhmicConduction.values", "modules/generated/openpnm.algorithms.ReactiveTransport", "modules/generated/openpnm.algorithms.ReactiveTransport.clear", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.copy", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.ReactiveTransport.get", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.ReactiveTransport.items", "modules/generated/openpnm.algorithms.ReactiveTransport.keys", "modules/generated/openpnm.algorithms.ReactiveTransport.labels", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.ReactiveTransport.pop", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem", "modules/generated/openpnm.algorithms.ReactiveTransport.pores", "modules/generated/openpnm.algorithms.ReactiveTransport.props", "modules/generated/openpnm.algorithms.ReactiveTransport.rate", "modules/generated/openpnm.algorithms.ReactiveTransport.run", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.ReactiveTransport.throats", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.ReactiveTransport.update", "modules/generated/openpnm.algorithms.ReactiveTransport.values", "modules/generated/openpnm.algorithms.StokesFlow", "modules/generated/openpnm.algorithms.StokesFlow.clear", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs", "modules/generated/openpnm.algorithms.StokesFlow.copy", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys", "modules/generated/openpnm.algorithms.StokesFlow.get", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data", "modules/generated/openpnm.algorithms.StokesFlow.items", "modules/generated/openpnm.algorithms.StokesFlow.keys", "modules/generated/openpnm.algorithms.StokesFlow.labels", "modules/generated/openpnm.algorithms.StokesFlow.num_pores", "modules/generated/openpnm.algorithms.StokesFlow.num_throats", "modules/generated/openpnm.algorithms.StokesFlow.pop", "modules/generated/openpnm.algorithms.StokesFlow.popitem", "modules/generated/openpnm.algorithms.StokesFlow.pores", "modules/generated/openpnm.algorithms.StokesFlow.props", "modules/generated/openpnm.algorithms.StokesFlow.rate", "modules/generated/openpnm.algorithms.StokesFlow.run", "modules/generated/openpnm.algorithms.StokesFlow.set_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_label", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_source", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC", "modules/generated/openpnm.algorithms.StokesFlow.setdefault", "modules/generated/openpnm.algorithms.StokesFlow.throats", "modules/generated/openpnm.algorithms.StokesFlow.to_indices", "modules/generated/openpnm.algorithms.StokesFlow.to_mask", "modules/generated/openpnm.algorithms.StokesFlow.update", "modules/generated/openpnm.algorithms.StokesFlow.values", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values", "modules/generated/openpnm.algorithms.TransientFickianDiffusion", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values", "modules/generated/openpnm.algorithms.TransientFourierConduction", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_BCs", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientFourierConduction.copy", "modules/generated/openpnm.algorithms.TransientFourierConduction.filter_by_label", "modules/generated/openpnm.algorithms.TransientFourierConduction.fromkeys", "modules/generated/openpnm.algorithms.TransientFourierConduction.get", "modules/generated/openpnm.algorithms.TransientFourierConduction.get_conduit_data", "modules/generated/openpnm.algorithms.TransientFourierConduction.interpolate_data", "modules/generated/openpnm.algorithms.TransientFourierConduction.items", "modules/generated/openpnm.algorithms.TransientFourierConduction.keys", "modules/generated/openpnm.algorithms.TransientFourierConduction.labels", "modules/generated/openpnm.algorithms.TransientFourierConduction.num_pores", "modules/generated/openpnm.algorithms.TransientFourierConduction.num_throats", "modules/generated/openpnm.algorithms.TransientFourierConduction.pop", "modules/generated/openpnm.algorithms.TransientFourierConduction.popitem", "modules/generated/openpnm.algorithms.TransientFourierConduction.pores", "modules/generated/openpnm.algorithms.TransientFourierConduction.props", "modules/generated/openpnm.algorithms.TransientFourierConduction.rate", "modules/generated/openpnm.algorithms.TransientFourierConduction.run", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_BC", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_label", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_rate_BC", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_source", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_value_BC", "modules/generated/openpnm.algorithms.TransientFourierConduction.setdefault", "modules/generated/openpnm.algorithms.TransientFourierConduction.throats", "modules/generated/openpnm.algorithms.TransientFourierConduction.to_indices", "modules/generated/openpnm.algorithms.TransientFourierConduction.to_mask", "modules/generated/openpnm.algorithms.TransientFourierConduction.update", "modules/generated/openpnm.algorithms.TransientFourierConduction.values", "modules/generated/openpnm.algorithms.TransientReactiveTransport", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values", "modules/generated/openpnm.algorithms.Transport", "modules/generated/openpnm.algorithms.Transport.clear", "modules/generated/openpnm.algorithms.Transport.clear_BCs", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs", "modules/generated/openpnm.algorithms.Transport.copy", "modules/generated/openpnm.algorithms.Transport.filter_by_label", "modules/generated/openpnm.algorithms.Transport.fromkeys", "modules/generated/openpnm.algorithms.Transport.get", "modules/generated/openpnm.algorithms.Transport.get_conduit_data", "modules/generated/openpnm.algorithms.Transport.interpolate_data", "modules/generated/openpnm.algorithms.Transport.items", "modules/generated/openpnm.algorithms.Transport.keys", "modules/generated/openpnm.algorithms.Transport.labels", "modules/generated/openpnm.algorithms.Transport.num_pores", "modules/generated/openpnm.algorithms.Transport.num_throats", "modules/generated/openpnm.algorithms.Transport.pop", "modules/generated/openpnm.algorithms.Transport.popitem", "modules/generated/openpnm.algorithms.Transport.pores", "modules/generated/openpnm.algorithms.Transport.props", "modules/generated/openpnm.algorithms.Transport.rate", "modules/generated/openpnm.algorithms.Transport.run", "modules/generated/openpnm.algorithms.Transport.set_BC", "modules/generated/openpnm.algorithms.Transport.set_label", "modules/generated/openpnm.algorithms.Transport.set_rate_BC", "modules/generated/openpnm.algorithms.Transport.set_value_BC", "modules/generated/openpnm.algorithms.Transport.setdefault", "modules/generated/openpnm.algorithms.Transport.throats", "modules/generated/openpnm.algorithms.Transport.to_indices", "modules/generated/openpnm.algorithms.Transport.to_mask", "modules/generated/openpnm.algorithms.Transport.update", "modules/generated/openpnm.algorithms.Transport.values", "modules/generated/openpnm.contrib", "modules/generated/openpnm.contrib.MultiPhase", "modules/generated/openpnm.contrib.MultiPhase.add_model", "modules/generated/openpnm.contrib.MultiPhase.add_model_collection", "modules/generated/openpnm.contrib.MultiPhase.add_phases", "modules/generated/openpnm.contrib.MultiPhase.clear", "modules/generated/openpnm.contrib.MultiPhase.copy", "modules/generated/openpnm.contrib.MultiPhase.filter_by_label", "modules/generated/openpnm.contrib.MultiPhase.fromkeys", "modules/generated/openpnm.contrib.MultiPhase.get", "modules/generated/openpnm.contrib.MultiPhase.get_conduit_data", "modules/generated/openpnm.contrib.MultiPhase.interpolate_data", "modules/generated/openpnm.contrib.MultiPhase.items", "modules/generated/openpnm.contrib.MultiPhase.keys", "modules/generated/openpnm.contrib.MultiPhase.labels", "modules/generated/openpnm.contrib.MultiPhase.num_pores", "modules/generated/openpnm.contrib.MultiPhase.num_throats", "modules/generated/openpnm.contrib.MultiPhase.pop", "modules/generated/openpnm.contrib.MultiPhase.popitem", "modules/generated/openpnm.contrib.MultiPhase.pores", "modules/generated/openpnm.contrib.MultiPhase.props", "modules/generated/openpnm.contrib.MultiPhase.regenerate_models", "modules/generated/openpnm.contrib.MultiPhase.run_model", "modules/generated/openpnm.contrib.MultiPhase.set_binary_partition_coef", "modules/generated/openpnm.contrib.MultiPhase.set_label", "modules/generated/openpnm.contrib.MultiPhase.set_occupancy", "modules/generated/openpnm.contrib.MultiPhase.setdefault", "modules/generated/openpnm.contrib.MultiPhase.throats", "modules/generated/openpnm.contrib.MultiPhase.to_indices", "modules/generated/openpnm.contrib.MultiPhase.to_mask", "modules/generated/openpnm.contrib.MultiPhase.update", "modules/generated/openpnm.contrib.MultiPhase.values", "modules/generated/openpnm.contrib.TransientMultiPhysics", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear_BCs", "modules/generated/openpnm.contrib.TransientMultiPhysics.copy", "modules/generated/openpnm.contrib.TransientMultiPhysics.filter_by_label", "modules/generated/openpnm.contrib.TransientMultiPhysics.fromkeys", "modules/generated/openpnm.contrib.TransientMultiPhysics.get", "modules/generated/openpnm.contrib.TransientMultiPhysics.get_conduit_data", "modules/generated/openpnm.contrib.TransientMultiPhysics.interpolate_data", "modules/generated/openpnm.contrib.TransientMultiPhysics.items", "modules/generated/openpnm.contrib.TransientMultiPhysics.keys", "modules/generated/openpnm.contrib.TransientMultiPhysics.labels", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_pores", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_throats", "modules/generated/openpnm.contrib.TransientMultiPhysics.pop", "modules/generated/openpnm.contrib.TransientMultiPhysics.popitem", "modules/generated/openpnm.contrib.TransientMultiPhysics.pores", "modules/generated/openpnm.contrib.TransientMultiPhysics.props", "modules/generated/openpnm.contrib.TransientMultiPhysics.run", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_BC", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_label", "modules/generated/openpnm.contrib.TransientMultiPhysics.setdefault", "modules/generated/openpnm.contrib.TransientMultiPhysics.throats", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_indices", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_mask", "modules/generated/openpnm.contrib.TransientMultiPhysics.update", "modules/generated/openpnm.contrib.TransientMultiPhysics.values", "modules/generated/openpnm.contrib.multiphase_diffusion", "modules/generated/openpnm.core", "modules/generated/openpnm.core.Base2", "modules/generated/openpnm.core.Base2.clear", "modules/generated/openpnm.core.Base2.copy", "modules/generated/openpnm.core.Base2.fromkeys", "modules/generated/openpnm.core.Base2.get", "modules/generated/openpnm.core.Base2.get_conduit_data", "modules/generated/openpnm.core.Base2.interpolate_data", "modules/generated/openpnm.core.Base2.items", "modules/generated/openpnm.core.Base2.keys", "modules/generated/openpnm.core.Base2.pop", "modules/generated/openpnm.core.Base2.popitem", "modules/generated/openpnm.core.Base2.props", "modules/generated/openpnm.core.Base2.setdefault", "modules/generated/openpnm.core.Base2.to_indices", "modules/generated/openpnm.core.Base2.to_mask", "modules/generated/openpnm.core.Base2.update", "modules/generated/openpnm.core.Base2.values", "modules/generated/openpnm.core.Domain", "modules/generated/openpnm.core.Domain.add_model", "modules/generated/openpnm.core.Domain.add_model_collection", "modules/generated/openpnm.core.Domain.clear", "modules/generated/openpnm.core.Domain.copy", "modules/generated/openpnm.core.Domain.filter_by_label", "modules/generated/openpnm.core.Domain.fromkeys", "modules/generated/openpnm.core.Domain.get", "modules/generated/openpnm.core.Domain.get_conduit_data", "modules/generated/openpnm.core.Domain.interpolate_data", "modules/generated/openpnm.core.Domain.items", "modules/generated/openpnm.core.Domain.keys", "modules/generated/openpnm.core.Domain.labels", "modules/generated/openpnm.core.Domain.num_pores", "modules/generated/openpnm.core.Domain.num_throats", "modules/generated/openpnm.core.Domain.pop", "modules/generated/openpnm.core.Domain.popitem", "modules/generated/openpnm.core.Domain.pores", "modules/generated/openpnm.core.Domain.props", "modules/generated/openpnm.core.Domain.regenerate_models", "modules/generated/openpnm.core.Domain.run_model", "modules/generated/openpnm.core.Domain.set_label", "modules/generated/openpnm.core.Domain.setdefault", "modules/generated/openpnm.core.Domain.throats", "modules/generated/openpnm.core.Domain.to_indices", "modules/generated/openpnm.core.Domain.to_mask", "modules/generated/openpnm.core.Domain.update", "modules/generated/openpnm.core.Domain.values", "modules/generated/openpnm.core.LabelMixin", "modules/generated/openpnm.core.LabelMixin.filter_by_label", "modules/generated/openpnm.core.LabelMixin.labels", "modules/generated/openpnm.core.LabelMixin.num_pores", "modules/generated/openpnm.core.LabelMixin.num_throats", "modules/generated/openpnm.core.LabelMixin.pores", "modules/generated/openpnm.core.LabelMixin.set_label", "modules/generated/openpnm.core.LabelMixin.throats", "modules/generated/openpnm.core.ModelWrapper", "modules/generated/openpnm.core.ModelWrapper.__call__", "modules/generated/openpnm.core.ModelWrapper.clear", "modules/generated/openpnm.core.ModelWrapper.copy", "modules/generated/openpnm.core.ModelWrapper.fromkeys", "modules/generated/openpnm.core.ModelWrapper.get", "modules/generated/openpnm.core.ModelWrapper.items", "modules/generated/openpnm.core.ModelWrapper.keys", "modules/generated/openpnm.core.ModelWrapper.pop", "modules/generated/openpnm.core.ModelWrapper.popitem", "modules/generated/openpnm.core.ModelWrapper.setdefault", "modules/generated/openpnm.core.ModelWrapper.update", "modules/generated/openpnm.core.ModelWrapper.values", "modules/generated/openpnm.core.ModelsDict", "modules/generated/openpnm.core.ModelsDict.clear", "modules/generated/openpnm.core.ModelsDict.copy", "modules/generated/openpnm.core.ModelsDict.dependency_graph", "modules/generated/openpnm.core.ModelsDict.dependency_list", "modules/generated/openpnm.core.ModelsDict.dependency_map", "modules/generated/openpnm.core.ModelsDict.fromkeys", "modules/generated/openpnm.core.ModelsDict.get", "modules/generated/openpnm.core.ModelsDict.items", "modules/generated/openpnm.core.ModelsDict.keys", "modules/generated/openpnm.core.ModelsDict.pop", "modules/generated/openpnm.core.ModelsDict.popitem", "modules/generated/openpnm.core.ModelsDict.setdefault", "modules/generated/openpnm.core.ModelsDict.update", "modules/generated/openpnm.core.ModelsDict.values", "modules/generated/openpnm.core.ModelsMixin2", "modules/generated/openpnm.core.ModelsMixin2.add_model", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models", "modules/generated/openpnm.core.ModelsMixin2.run_model", "modules/generated/openpnm.core.ParserMixin", "modules/generated/openpnm.integrators", "modules/generated/openpnm.integrators.Integrator", "modules/generated/openpnm.integrators.ScipyRK45", "modules/generated/openpnm.integrators.ScipyRK45.solve", "modules/generated/openpnm.io", "modules/generated/openpnm.io.network_from_csv", "modules/generated/openpnm.io.network_from_jsongraph", "modules/generated/openpnm.io.network_from_marock", "modules/generated/openpnm.io.network_from_networkx", "modules/generated/openpnm.io.network_from_pergeos", "modules/generated/openpnm.io.network_from_porespy", "modules/generated/openpnm.io.network_from_statoil", "modules/generated/openpnm.io.network_to_comsol", "modules/generated/openpnm.io.network_to_csv", "modules/generated/openpnm.io.network_to_jsongraph", "modules/generated/openpnm.io.network_to_networkx", "modules/generated/openpnm.io.network_to_pandas", "modules/generated/openpnm.io.network_to_pergeos", "modules/generated/openpnm.io.network_to_salome", "modules/generated/openpnm.io.network_to_stl", "modules/generated/openpnm.io.print_hdf5", "modules/generated/openpnm.io.project_to_csv", "modules/generated/openpnm.io.project_to_dict", "modules/generated/openpnm.io.project_to_hdf5", "modules/generated/openpnm.io.project_to_pandas", "modules/generated/openpnm.io.project_to_paraview", "modules/generated/openpnm.io.project_to_vtk", "modules/generated/openpnm.io.project_to_xdmf", "modules/generated/openpnm.models", "modules/generated/openpnm.models.collections", "modules/generated/openpnm.models.collections.geometry", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles", "modules/generated/openpnm.models.collections.network", "modules/generated/openpnm.models.collections.phase", "modules/generated/openpnm.models.collections.phase.air", "modules/generated/openpnm.models.collections.phase.gas", "modules/generated/openpnm.models.collections.phase.liquid", "modules/generated/openpnm.models.collections.phase.mercury", "modules/generated/openpnm.models.collections.phase.water", "modules/generated/openpnm.models.collections.physics", "modules/generated/openpnm.models.collections.physics.basic", "modules/generated/openpnm.models.collections.physics.standard", "modules/generated/openpnm.models.geometry", "modules/generated/openpnm.models.geometry.conduit_lengths", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square", "modules/generated/openpnm.models.geometry.pore_seed", "modules/generated/openpnm.models.geometry.pore_seed.random", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated", "modules/generated/openpnm.models.geometry.pore_size", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere", "modules/generated/openpnm.models.geometry.pore_size.normal", "modules/generated/openpnm.models.geometry.pore_size.random", "modules/generated/openpnm.models.geometry.pore_size.weibull", "modules/generated/openpnm.models.geometry.pore_surface_area", "modules/generated/openpnm.models.geometry.pore_surface_area.circle", "modules/generated/openpnm.models.geometry.pore_surface_area.cube", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere", "modules/generated/openpnm.models.geometry.pore_surface_area.square", "modules/generated/openpnm.models.geometry.pore_volume", "modules/generated/openpnm.models.geometry.pore_volume.circle", "modules/generated/openpnm.models.geometry.pore_volume.cube", "modules/generated/openpnm.models.geometry.pore_volume.effective", "modules/generated/openpnm.models.geometry.pore_volume.sphere", "modules/generated/openpnm.models.geometry.pore_volume.square", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow", "modules/generated/openpnm.models.geometry.throat_centroid", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle", "modules/generated/openpnm.models.geometry.throat_endpoints", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_perimeter", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle", "modules/generated/openpnm.models.geometry.throat_seed", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_seed.random", "modules/generated/openpnm.models.geometry.throat_size", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution", "modules/generated/openpnm.models.geometry.throat_size.normal", "modules/generated/openpnm.models.geometry.throat_size.random", "modules/generated/openpnm.models.geometry.throat_size.weibull", "modules/generated/openpnm.models.geometry.throat_surface_area", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle", "modules/generated/openpnm.models.geometry.throat_vector", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore", "modules/generated/openpnm.models.geometry.throat_volume", "modules/generated/openpnm.models.geometry.throat_volume.cuboid", "modules/generated/openpnm.models.geometry.throat_volume.cylinder", "modules/generated/openpnm.models.geometry.throat_volume.extrusion", "modules/generated/openpnm.models.geometry.throat_volume.lens", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring", "modules/generated/openpnm.models.geometry.throat_volume.rectangle", "modules/generated/openpnm.models.misc", "modules/generated/openpnm.models.misc.blank", "modules/generated/openpnm.models.misc.clip", "modules/generated/openpnm.models.misc.constant", "modules/generated/openpnm.models.misc.difference", "modules/generated/openpnm.models.misc.fraction", "modules/generated/openpnm.models.misc.from_neighbor_pores", "modules/generated/openpnm.models.misc.from_neighbor_throats", "modules/generated/openpnm.models.misc.generic_distribution", "modules/generated/openpnm.models.misc.generic_function", "modules/generated/openpnm.models.misc.invert", "modules/generated/openpnm.models.misc.linear", "modules/generated/openpnm.models.misc.match_histogram", "modules/generated/openpnm.models.misc.normal", "modules/generated/openpnm.models.misc.normalize", "modules/generated/openpnm.models.misc.polynomial", "modules/generated/openpnm.models.misc.product", "modules/generated/openpnm.models.misc.random", "modules/generated/openpnm.models.misc.scaled", "modules/generated/openpnm.models.misc.summation", "modules/generated/openpnm.models.misc.weibull", "modules/generated/openpnm.models.network", "modules/generated/openpnm.models.network.bidirectional_throats", "modules/generated/openpnm.models.network.cluster_number", "modules/generated/openpnm.models.network.cluster_size", "modules/generated/openpnm.models.network.coordination_number", "modules/generated/openpnm.models.network.count_coincident_pores", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_pore", "modules/generated/openpnm.models.network.duplicate_throats", "modules/generated/openpnm.models.network.find_coincident_pores", "modules/generated/openpnm.models.network.gabriel_edges", "modules/generated/openpnm.models.network.headless_throats", "modules/generated/openpnm.models.network.isolated_pores", "modules/generated/openpnm.models.network.looped_throats", "modules/generated/openpnm.models.network.pore_to_pore_distance", "modules/generated/openpnm.models.network.reversed_throats", "modules/generated/openpnm.models.phase", "modules/generated/openpnm.models.phase.chemicals_wrapper", "modules/generated/openpnm.models.phase.critical_props", "modules/generated/openpnm.models.phase.density", "modules/generated/openpnm.models.phase.density.ideal_gas", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD", "modules/generated/openpnm.models.phase.density.mass_to_molar", "modules/generated/openpnm.models.phase.density.water_correlation", "modules/generated/openpnm.models.phase.diffusivity", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc", "modules/generated/openpnm.models.phase.heat_capacity", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp", "modules/generated/openpnm.models.phase.misc", "modules/generated/openpnm.models.phase.misc.mix_and_match", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures", "modules/generated/openpnm.models.phase.mixtures.from_component", "modules/generated/openpnm.models.phase.mixtures.mixing_rule", "modules/generated/openpnm.models.phase.mixtures.mole_summation", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures.salinity", "modules/generated/openpnm.models.phase.partition_coefficient", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water", "modules/generated/openpnm.models.phase.surface_tension", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb", "modules/generated/openpnm.models.phase.surface_tension.water_correlation", "modules/generated/openpnm.models.phase.thermal_conductivity", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation", "modules/generated/openpnm.models.phase.vapor_pressure", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation", "modules/generated/openpnm.models.phase.viscosity", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls", "modules/generated/openpnm.models.phase.viscosity.water_correlation", "modules/generated/openpnm.models.physics", "modules/generated/openpnm.models.physics.ad_dif_conductance", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif", "modules/generated/openpnm.models.physics.capillary_pressure", "modules/generated/openpnm.models.physics.capillary_pressure.purcell", "modules/generated/openpnm.models.physics.capillary_pressure.washburn", "modules/generated/openpnm.models.physics.diffusive_conductance", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion", "modules/generated/openpnm.models.physics.electrical_conductance", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors", "modules/generated/openpnm.models.physics.hydraulic_conductance", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt", "modules/generated/openpnm.models.physics.meniscus", "modules/generated/openpnm.models.physics.meniscus.general_toroidal", "modules/generated/openpnm.models.physics.meniscus.purcell", "modules/generated/openpnm.models.physics.meniscus.sinusoidal", "modules/generated/openpnm.models.physics.multiphase", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance", "modules/generated/openpnm.models.physics.multiphase.late_filling", "modules/generated/openpnm.models.physics.source_terms", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage", "modules/generated/openpnm.models.physics.source_terms.exponential", "modules/generated/openpnm.models.physics.source_terms.general_symbolic", "modules/generated/openpnm.models.physics.source_terms.linear", "modules/generated/openpnm.models.physics.source_terms.logarithm", "modules/generated/openpnm.models.physics.source_terms.natural_exponential", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm", "modules/generated/openpnm.models.physics.source_terms.power_law", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics", "modules/generated/openpnm.models.physics.thermal_conductance", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors", "modules/generated/openpnm.network", "modules/generated/openpnm.network.BodyCenteredCubic", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.BodyCenteredCubic.add_model", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection", "modules/generated/openpnm.network.BodyCenteredCubic.clear", "modules/generated/openpnm.network.BodyCenteredCubic.copy", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys", "modules/generated/openpnm.network.BodyCenteredCubic.get", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data", "modules/generated/openpnm.network.BodyCenteredCubic.items", "modules/generated/openpnm.network.BodyCenteredCubic.keys", "modules/generated/openpnm.network.BodyCenteredCubic.labels", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats", "modules/generated/openpnm.network.BodyCenteredCubic.pop", "modules/generated/openpnm.network.BodyCenteredCubic.popitem", "modules/generated/openpnm.network.BodyCenteredCubic.pores", "modules/generated/openpnm.network.BodyCenteredCubic.props", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models", "modules/generated/openpnm.network.BodyCenteredCubic.run_model", "modules/generated/openpnm.network.BodyCenteredCubic.set_label", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault", "modules/generated/openpnm.network.BodyCenteredCubic.throats", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask", "modules/generated/openpnm.network.BodyCenteredCubic.update", "modules/generated/openpnm.network.BodyCenteredCubic.values", "modules/generated/openpnm.network.Cubic", "modules/generated/openpnm.network.Cubic.add_boundary_pores", "modules/generated/openpnm.network.Cubic.add_model", "modules/generated/openpnm.network.Cubic.add_model_collection", "modules/generated/openpnm.network.Cubic.clear", "modules/generated/openpnm.network.Cubic.copy", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix", "modules/generated/openpnm.network.Cubic.create_incidence_matrix", "modules/generated/openpnm.network.Cubic.filter_by_label", "modules/generated/openpnm.network.Cubic.find_connected_pores", "modules/generated/openpnm.network.Cubic.find_connecting_throat", "modules/generated/openpnm.network.Cubic.find_nearby_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_throats", "modules/generated/openpnm.network.Cubic.fromkeys", "modules/generated/openpnm.network.Cubic.get", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix", "modules/generated/openpnm.network.Cubic.get_conduit_data", "modules/generated/openpnm.network.Cubic.get_incidence_matrix", "modules/generated/openpnm.network.Cubic.interpolate_data", "modules/generated/openpnm.network.Cubic.items", "modules/generated/openpnm.network.Cubic.keys", "modules/generated/openpnm.network.Cubic.labels", "modules/generated/openpnm.network.Cubic.num_neighbors", "modules/generated/openpnm.network.Cubic.num_pores", "modules/generated/openpnm.network.Cubic.num_throats", "modules/generated/openpnm.network.Cubic.pop", "modules/generated/openpnm.network.Cubic.popitem", "modules/generated/openpnm.network.Cubic.pores", "modules/generated/openpnm.network.Cubic.props", "modules/generated/openpnm.network.Cubic.regenerate_models", "modules/generated/openpnm.network.Cubic.run_model", "modules/generated/openpnm.network.Cubic.set_label", "modules/generated/openpnm.network.Cubic.setdefault", "modules/generated/openpnm.network.Cubic.throats", "modules/generated/openpnm.network.Cubic.to_indices", "modules/generated/openpnm.network.Cubic.to_mask", "modules/generated/openpnm.network.Cubic.update", "modules/generated/openpnm.network.Cubic.values", "modules/generated/openpnm.network.CubicTemplate", "modules/generated/openpnm.network.CubicTemplate.add_model", "modules/generated/openpnm.network.CubicTemplate.add_model_collection", "modules/generated/openpnm.network.CubicTemplate.clear", "modules/generated/openpnm.network.CubicTemplate.copy", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.filter_by_label", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats", "modules/generated/openpnm.network.CubicTemplate.fromkeys", "modules/generated/openpnm.network.CubicTemplate.get", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.interpolate_data", "modules/generated/openpnm.network.CubicTemplate.items", "modules/generated/openpnm.network.CubicTemplate.keys", "modules/generated/openpnm.network.CubicTemplate.labels", "modules/generated/openpnm.network.CubicTemplate.num_neighbors", "modules/generated/openpnm.network.CubicTemplate.num_pores", "modules/generated/openpnm.network.CubicTemplate.num_throats", "modules/generated/openpnm.network.CubicTemplate.pop", "modules/generated/openpnm.network.CubicTemplate.popitem", "modules/generated/openpnm.network.CubicTemplate.pores", "modules/generated/openpnm.network.CubicTemplate.props", "modules/generated/openpnm.network.CubicTemplate.regenerate_models", "modules/generated/openpnm.network.CubicTemplate.run_model", "modules/generated/openpnm.network.CubicTemplate.set_label", "modules/generated/openpnm.network.CubicTemplate.setdefault", "modules/generated/openpnm.network.CubicTemplate.throats", "modules/generated/openpnm.network.CubicTemplate.to_indices", "modules/generated/openpnm.network.CubicTemplate.to_mask", "modules/generated/openpnm.network.CubicTemplate.update", "modules/generated/openpnm.network.CubicTemplate.values", "modules/generated/openpnm.network.Delaunay", "modules/generated/openpnm.network.Delaunay.add_model", "modules/generated/openpnm.network.Delaunay.add_model_collection", "modules/generated/openpnm.network.Delaunay.clear", "modules/generated/openpnm.network.Delaunay.copy", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix", "modules/generated/openpnm.network.Delaunay.filter_by_label", "modules/generated/openpnm.network.Delaunay.find_connected_pores", "modules/generated/openpnm.network.Delaunay.find_connecting_throat", "modules/generated/openpnm.network.Delaunay.find_nearby_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats", "modules/generated/openpnm.network.Delaunay.fromkeys", "modules/generated/openpnm.network.Delaunay.get", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.get_conduit_data", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix", "modules/generated/openpnm.network.Delaunay.interpolate_data", "modules/generated/openpnm.network.Delaunay.items", "modules/generated/openpnm.network.Delaunay.keys", "modules/generated/openpnm.network.Delaunay.labels", "modules/generated/openpnm.network.Delaunay.num_neighbors", "modules/generated/openpnm.network.Delaunay.num_pores", "modules/generated/openpnm.network.Delaunay.num_throats", "modules/generated/openpnm.network.Delaunay.pop", "modules/generated/openpnm.network.Delaunay.popitem", "modules/generated/openpnm.network.Delaunay.pores", "modules/generated/openpnm.network.Delaunay.props", "modules/generated/openpnm.network.Delaunay.regenerate_models", "modules/generated/openpnm.network.Delaunay.run_model", "modules/generated/openpnm.network.Delaunay.set_label", "modules/generated/openpnm.network.Delaunay.setdefault", "modules/generated/openpnm.network.Delaunay.throats", "modules/generated/openpnm.network.Delaunay.to_indices", "modules/generated/openpnm.network.Delaunay.to_mask", "modules/generated/openpnm.network.Delaunay.update", "modules/generated/openpnm.network.Delaunay.values", "modules/generated/openpnm.network.DelaunayVoronoiDual", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys", "modules/generated/openpnm.network.DelaunayVoronoiDual.get", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.items", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.props", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask", "modules/generated/openpnm.network.DelaunayVoronoiDual.update", "modules/generated/openpnm.network.DelaunayVoronoiDual.values", "modules/generated/openpnm.network.Demo", "modules/generated/openpnm.network.Demo.add_boundary_pores", "modules/generated/openpnm.network.Demo.add_model", "modules/generated/openpnm.network.Demo.add_model_collection", "modules/generated/openpnm.network.Demo.clear", "modules/generated/openpnm.network.Demo.copy", "modules/generated/openpnm.network.Demo.create_adjacency_matrix", "modules/generated/openpnm.network.Demo.create_incidence_matrix", "modules/generated/openpnm.network.Demo.filter_by_label", "modules/generated/openpnm.network.Demo.find_connected_pores", "modules/generated/openpnm.network.Demo.find_connecting_throat", "modules/generated/openpnm.network.Demo.find_nearby_pores", "modules/generated/openpnm.network.Demo.find_neighbor_pores", "modules/generated/openpnm.network.Demo.find_neighbor_throats", "modules/generated/openpnm.network.Demo.fromkeys", "modules/generated/openpnm.network.Demo.get", "modules/generated/openpnm.network.Demo.get_adjacency_matrix", "modules/generated/openpnm.network.Demo.get_conduit_data", "modules/generated/openpnm.network.Demo.get_incidence_matrix", "modules/generated/openpnm.network.Demo.interpolate_data", "modules/generated/openpnm.network.Demo.items", "modules/generated/openpnm.network.Demo.keys", "modules/generated/openpnm.network.Demo.labels", "modules/generated/openpnm.network.Demo.num_neighbors", "modules/generated/openpnm.network.Demo.num_pores", "modules/generated/openpnm.network.Demo.num_throats", "modules/generated/openpnm.network.Demo.pop", "modules/generated/openpnm.network.Demo.popitem", "modules/generated/openpnm.network.Demo.pores", "modules/generated/openpnm.network.Demo.props", "modules/generated/openpnm.network.Demo.regenerate_models", "modules/generated/openpnm.network.Demo.run_model", "modules/generated/openpnm.network.Demo.set_label", "modules/generated/openpnm.network.Demo.setdefault", "modules/generated/openpnm.network.Demo.throats", "modules/generated/openpnm.network.Demo.to_indices", "modules/generated/openpnm.network.Demo.to_mask", "modules/generated/openpnm.network.Demo.update", "modules/generated/openpnm.network.Demo.values", "modules/generated/openpnm.network.FaceCenteredCubic", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.FaceCenteredCubic.add_model", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection", "modules/generated/openpnm.network.FaceCenteredCubic.clear", "modules/generated/openpnm.network.FaceCenteredCubic.copy", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys", "modules/generated/openpnm.network.FaceCenteredCubic.get", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data", "modules/generated/openpnm.network.FaceCenteredCubic.items", "modules/generated/openpnm.network.FaceCenteredCubic.keys", "modules/generated/openpnm.network.FaceCenteredCubic.labels", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats", "modules/generated/openpnm.network.FaceCenteredCubic.pop", "modules/generated/openpnm.network.FaceCenteredCubic.popitem", "modules/generated/openpnm.network.FaceCenteredCubic.pores", "modules/generated/openpnm.network.FaceCenteredCubic.props", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models", "modules/generated/openpnm.network.FaceCenteredCubic.run_model", "modules/generated/openpnm.network.FaceCenteredCubic.set_label", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault", "modules/generated/openpnm.network.FaceCenteredCubic.throats", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask", "modules/generated/openpnm.network.FaceCenteredCubic.update", "modules/generated/openpnm.network.FaceCenteredCubic.values", "modules/generated/openpnm.network.Network", "modules/generated/openpnm.network.Network.add_model", "modules/generated/openpnm.network.Network.add_model_collection", "modules/generated/openpnm.network.Network.clear", "modules/generated/openpnm.network.Network.copy", "modules/generated/openpnm.network.Network.create_adjacency_matrix", "modules/generated/openpnm.network.Network.create_incidence_matrix", "modules/generated/openpnm.network.Network.filter_by_label", "modules/generated/openpnm.network.Network.find_connected_pores", "modules/generated/openpnm.network.Network.find_connecting_throat", "modules/generated/openpnm.network.Network.find_nearby_pores", "modules/generated/openpnm.network.Network.find_neighbor_pores", "modules/generated/openpnm.network.Network.find_neighbor_throats", "modules/generated/openpnm.network.Network.fromkeys", "modules/generated/openpnm.network.Network.get", "modules/generated/openpnm.network.Network.get_adjacency_matrix", "modules/generated/openpnm.network.Network.get_conduit_data", "modules/generated/openpnm.network.Network.get_incidence_matrix", "modules/generated/openpnm.network.Network.interpolate_data", "modules/generated/openpnm.network.Network.items", "modules/generated/openpnm.network.Network.keys", "modules/generated/openpnm.network.Network.labels", "modules/generated/openpnm.network.Network.num_neighbors", "modules/generated/openpnm.network.Network.num_pores", "modules/generated/openpnm.network.Network.num_throats", "modules/generated/openpnm.network.Network.pop", "modules/generated/openpnm.network.Network.popitem", "modules/generated/openpnm.network.Network.pores", "modules/generated/openpnm.network.Network.props", "modules/generated/openpnm.network.Network.regenerate_models", "modules/generated/openpnm.network.Network.run_model", "modules/generated/openpnm.network.Network.set_label", "modules/generated/openpnm.network.Network.setdefault", "modules/generated/openpnm.network.Network.throats", "modules/generated/openpnm.network.Network.to_indices", "modules/generated/openpnm.network.Network.to_mask", "modules/generated/openpnm.network.Network.update", "modules/generated/openpnm.network.Network.values", "modules/generated/openpnm.network.Voronoi", "modules/generated/openpnm.network.Voronoi.add_model", "modules/generated/openpnm.network.Voronoi.add_model_collection", "modules/generated/openpnm.network.Voronoi.clear", "modules/generated/openpnm.network.Voronoi.copy", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix", "modules/generated/openpnm.network.Voronoi.filter_by_label", "modules/generated/openpnm.network.Voronoi.find_connected_pores", "modules/generated/openpnm.network.Voronoi.find_connecting_throat", "modules/generated/openpnm.network.Voronoi.find_nearby_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats", "modules/generated/openpnm.network.Voronoi.fromkeys", "modules/generated/openpnm.network.Voronoi.get", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.get_conduit_data", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix", "modules/generated/openpnm.network.Voronoi.interpolate_data", "modules/generated/openpnm.network.Voronoi.items", "modules/generated/openpnm.network.Voronoi.keys", "modules/generated/openpnm.network.Voronoi.labels", "modules/generated/openpnm.network.Voronoi.num_neighbors", "modules/generated/openpnm.network.Voronoi.num_pores", "modules/generated/openpnm.network.Voronoi.num_throats", "modules/generated/openpnm.network.Voronoi.pop", "modules/generated/openpnm.network.Voronoi.popitem", "modules/generated/openpnm.network.Voronoi.pores", "modules/generated/openpnm.network.Voronoi.props", "modules/generated/openpnm.network.Voronoi.regenerate_models", "modules/generated/openpnm.network.Voronoi.run_model", "modules/generated/openpnm.network.Voronoi.set_label", "modules/generated/openpnm.network.Voronoi.setdefault", "modules/generated/openpnm.network.Voronoi.throats", "modules/generated/openpnm.network.Voronoi.to_indices", "modules/generated/openpnm.network.Voronoi.to_mask", "modules/generated/openpnm.network.Voronoi.update", "modules/generated/openpnm.network.Voronoi.values", "modules/generated/openpnm.phase", "modules/generated/openpnm.phase.Air", "modules/generated/openpnm.phase.Air.add_model", "modules/generated/openpnm.phase.Air.add_model_collection", "modules/generated/openpnm.phase.Air.clear", "modules/generated/openpnm.phase.Air.copy", "modules/generated/openpnm.phase.Air.filter_by_label", "modules/generated/openpnm.phase.Air.fromkeys", "modules/generated/openpnm.phase.Air.get", "modules/generated/openpnm.phase.Air.get_conduit_data", "modules/generated/openpnm.phase.Air.interpolate_data", "modules/generated/openpnm.phase.Air.items", "modules/generated/openpnm.phase.Air.keys", "modules/generated/openpnm.phase.Air.labels", "modules/generated/openpnm.phase.Air.num_pores", "modules/generated/openpnm.phase.Air.num_throats", "modules/generated/openpnm.phase.Air.pop", "modules/generated/openpnm.phase.Air.popitem", "modules/generated/openpnm.phase.Air.pores", "modules/generated/openpnm.phase.Air.props", "modules/generated/openpnm.phase.Air.regenerate_models", "modules/generated/openpnm.phase.Air.run_model", "modules/generated/openpnm.phase.Air.set_label", "modules/generated/openpnm.phase.Air.setdefault", "modules/generated/openpnm.phase.Air.throats", "modules/generated/openpnm.phase.Air.to_indices", "modules/generated/openpnm.phase.Air.to_mask", "modules/generated/openpnm.phase.Air.update", "modules/generated/openpnm.phase.Air.values", "modules/generated/openpnm.phase.BinaryGas", "modules/generated/openpnm.phase.BinaryGas.add_comp", "modules/generated/openpnm.phase.BinaryGas.add_model", "modules/generated/openpnm.phase.BinaryGas.add_model_collection", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health", "modules/generated/openpnm.phase.BinaryGas.clear", "modules/generated/openpnm.phase.BinaryGas.copy", "modules/generated/openpnm.phase.BinaryGas.filter_by_label", "modules/generated/openpnm.phase.BinaryGas.fromkeys", "modules/generated/openpnm.phase.BinaryGas.get", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals", "modules/generated/openpnm.phase.BinaryGas.interpolate_data", "modules/generated/openpnm.phase.BinaryGas.items", "modules/generated/openpnm.phase.BinaryGas.keys", "modules/generated/openpnm.phase.BinaryGas.labels", "modules/generated/openpnm.phase.BinaryGas.num_pores", "modules/generated/openpnm.phase.BinaryGas.num_throats", "modules/generated/openpnm.phase.BinaryGas.pop", "modules/generated/openpnm.phase.BinaryGas.popitem", "modules/generated/openpnm.phase.BinaryGas.pores", "modules/generated/openpnm.phase.BinaryGas.props", "modules/generated/openpnm.phase.BinaryGas.regenerate_models", "modules/generated/openpnm.phase.BinaryGas.remove_comp", "modules/generated/openpnm.phase.BinaryGas.run_model", "modules/generated/openpnm.phase.BinaryGas.set_label", "modules/generated/openpnm.phase.BinaryGas.setdefault", "modules/generated/openpnm.phase.BinaryGas.throats", "modules/generated/openpnm.phase.BinaryGas.to_indices", "modules/generated/openpnm.phase.BinaryGas.to_mask", "modules/generated/openpnm.phase.BinaryGas.update", "modules/generated/openpnm.phase.BinaryGas.values", "modules/generated/openpnm.phase.BinaryGas.y", "modules/generated/openpnm.phase.GasMixture", "modules/generated/openpnm.phase.GasMixture.add_comp", "modules/generated/openpnm.phase.GasMixture.add_model", "modules/generated/openpnm.phase.GasMixture.add_model_collection", "modules/generated/openpnm.phase.GasMixture.check_mixture_health", "modules/generated/openpnm.phase.GasMixture.clear", "modules/generated/openpnm.phase.GasMixture.copy", "modules/generated/openpnm.phase.GasMixture.filter_by_label", "modules/generated/openpnm.phase.GasMixture.fromkeys", "modules/generated/openpnm.phase.GasMixture.get", "modules/generated/openpnm.phase.GasMixture.get_comp_vals", "modules/generated/openpnm.phase.GasMixture.get_conduit_data", "modules/generated/openpnm.phase.GasMixture.get_mix_vals", "modules/generated/openpnm.phase.GasMixture.interpolate_data", "modules/generated/openpnm.phase.GasMixture.items", "modules/generated/openpnm.phase.GasMixture.keys", "modules/generated/openpnm.phase.GasMixture.labels", "modules/generated/openpnm.phase.GasMixture.num_pores", "modules/generated/openpnm.phase.GasMixture.num_throats", "modules/generated/openpnm.phase.GasMixture.pop", "modules/generated/openpnm.phase.GasMixture.popitem", "modules/generated/openpnm.phase.GasMixture.pores", "modules/generated/openpnm.phase.GasMixture.props", "modules/generated/openpnm.phase.GasMixture.regenerate_models", "modules/generated/openpnm.phase.GasMixture.remove_comp", "modules/generated/openpnm.phase.GasMixture.run_model", "modules/generated/openpnm.phase.GasMixture.set_label", "modules/generated/openpnm.phase.GasMixture.setdefault", "modules/generated/openpnm.phase.GasMixture.throats", "modules/generated/openpnm.phase.GasMixture.to_indices", "modules/generated/openpnm.phase.GasMixture.to_mask", "modules/generated/openpnm.phase.GasMixture.update", "modules/generated/openpnm.phase.GasMixture.values", "modules/generated/openpnm.phase.GasMixture.y", "modules/generated/openpnm.phase.LiquidMixture", "modules/generated/openpnm.phase.LiquidMixture.add_comp", "modules/generated/openpnm.phase.LiquidMixture.add_model", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.LiquidMixture.clear", "modules/generated/openpnm.phase.LiquidMixture.copy", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label", "modules/generated/openpnm.phase.LiquidMixture.fromkeys", "modules/generated/openpnm.phase.LiquidMixture.get", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data", "modules/generated/openpnm.phase.LiquidMixture.items", "modules/generated/openpnm.phase.LiquidMixture.keys", "modules/generated/openpnm.phase.LiquidMixture.labels", "modules/generated/openpnm.phase.LiquidMixture.num_pores", "modules/generated/openpnm.phase.LiquidMixture.num_throats", "modules/generated/openpnm.phase.LiquidMixture.pop", "modules/generated/openpnm.phase.LiquidMixture.popitem", "modules/generated/openpnm.phase.LiquidMixture.pores", "modules/generated/openpnm.phase.LiquidMixture.props", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models", "modules/generated/openpnm.phase.LiquidMixture.remove_comp", "modules/generated/openpnm.phase.LiquidMixture.run_model", "modules/generated/openpnm.phase.LiquidMixture.set_label", "modules/generated/openpnm.phase.LiquidMixture.setdefault", "modules/generated/openpnm.phase.LiquidMixture.throats", "modules/generated/openpnm.phase.LiquidMixture.to_indices", "modules/generated/openpnm.phase.LiquidMixture.to_mask", "modules/generated/openpnm.phase.LiquidMixture.update", "modules/generated/openpnm.phase.LiquidMixture.values", "modules/generated/openpnm.phase.LiquidMixture.x", "modules/generated/openpnm.phase.Mercury", "modules/generated/openpnm.phase.Mercury.add_model", "modules/generated/openpnm.phase.Mercury.add_model_collection", "modules/generated/openpnm.phase.Mercury.clear", "modules/generated/openpnm.phase.Mercury.copy", "modules/generated/openpnm.phase.Mercury.filter_by_label", "modules/generated/openpnm.phase.Mercury.fromkeys", "modules/generated/openpnm.phase.Mercury.get", "modules/generated/openpnm.phase.Mercury.get_conduit_data", "modules/generated/openpnm.phase.Mercury.interpolate_data", "modules/generated/openpnm.phase.Mercury.items", "modules/generated/openpnm.phase.Mercury.keys", "modules/generated/openpnm.phase.Mercury.labels", "modules/generated/openpnm.phase.Mercury.num_pores", "modules/generated/openpnm.phase.Mercury.num_throats", "modules/generated/openpnm.phase.Mercury.pop", "modules/generated/openpnm.phase.Mercury.popitem", "modules/generated/openpnm.phase.Mercury.pores", "modules/generated/openpnm.phase.Mercury.props", "modules/generated/openpnm.phase.Mercury.regenerate_models", "modules/generated/openpnm.phase.Mercury.run_model", "modules/generated/openpnm.phase.Mercury.set_label", "modules/generated/openpnm.phase.Mercury.setdefault", "modules/generated/openpnm.phase.Mercury.throats", "modules/generated/openpnm.phase.Mercury.to_indices", "modules/generated/openpnm.phase.Mercury.to_mask", "modules/generated/openpnm.phase.Mercury.update", "modules/generated/openpnm.phase.Mercury.values", "modules/generated/openpnm.phase.Mixture", "modules/generated/openpnm.phase.Mixture.add_comp", "modules/generated/openpnm.phase.Mixture.add_model", "modules/generated/openpnm.phase.Mixture.add_model_collection", "modules/generated/openpnm.phase.Mixture.check_mixture_health", "modules/generated/openpnm.phase.Mixture.clear", "modules/generated/openpnm.phase.Mixture.copy", "modules/generated/openpnm.phase.Mixture.filter_by_label", "modules/generated/openpnm.phase.Mixture.fromkeys", "modules/generated/openpnm.phase.Mixture.get", "modules/generated/openpnm.phase.Mixture.get_comp_vals", "modules/generated/openpnm.phase.Mixture.get_conduit_data", "modules/generated/openpnm.phase.Mixture.get_mix_vals", "modules/generated/openpnm.phase.Mixture.interpolate_data", "modules/generated/openpnm.phase.Mixture.items", "modules/generated/openpnm.phase.Mixture.keys", "modules/generated/openpnm.phase.Mixture.labels", "modules/generated/openpnm.phase.Mixture.num_pores", "modules/generated/openpnm.phase.Mixture.num_throats", "modules/generated/openpnm.phase.Mixture.pop", "modules/generated/openpnm.phase.Mixture.popitem", "modules/generated/openpnm.phase.Mixture.pores", "modules/generated/openpnm.phase.Mixture.props", "modules/generated/openpnm.phase.Mixture.regenerate_models", "modules/generated/openpnm.phase.Mixture.remove_comp", "modules/generated/openpnm.phase.Mixture.run_model", "modules/generated/openpnm.phase.Mixture.set_label", "modules/generated/openpnm.phase.Mixture.setdefault", "modules/generated/openpnm.phase.Mixture.throats", "modules/generated/openpnm.phase.Mixture.to_indices", "modules/generated/openpnm.phase.Mixture.to_mask", "modules/generated/openpnm.phase.Mixture.update", "modules/generated/openpnm.phase.Mixture.values", "modules/generated/openpnm.phase.Phase", "modules/generated/openpnm.phase.Phase.add_model", "modules/generated/openpnm.phase.Phase.add_model_collection", "modules/generated/openpnm.phase.Phase.clear", "modules/generated/openpnm.phase.Phase.copy", "modules/generated/openpnm.phase.Phase.filter_by_label", "modules/generated/openpnm.phase.Phase.fromkeys", "modules/generated/openpnm.phase.Phase.get", "modules/generated/openpnm.phase.Phase.get_conduit_data", "modules/generated/openpnm.phase.Phase.interpolate_data", "modules/generated/openpnm.phase.Phase.items", "modules/generated/openpnm.phase.Phase.keys", "modules/generated/openpnm.phase.Phase.labels", "modules/generated/openpnm.phase.Phase.num_pores", "modules/generated/openpnm.phase.Phase.num_throats", "modules/generated/openpnm.phase.Phase.pop", "modules/generated/openpnm.phase.Phase.popitem", "modules/generated/openpnm.phase.Phase.pores", "modules/generated/openpnm.phase.Phase.props", "modules/generated/openpnm.phase.Phase.regenerate_models", "modules/generated/openpnm.phase.Phase.run_model", "modules/generated/openpnm.phase.Phase.set_label", "modules/generated/openpnm.phase.Phase.setdefault", "modules/generated/openpnm.phase.Phase.throats", "modules/generated/openpnm.phase.Phase.to_indices", "modules/generated/openpnm.phase.Phase.to_mask", "modules/generated/openpnm.phase.Phase.update", "modules/generated/openpnm.phase.Phase.values", "modules/generated/openpnm.phase.Species", "modules/generated/openpnm.phase.Species.add_model", "modules/generated/openpnm.phase.Species.add_model_collection", "modules/generated/openpnm.phase.Species.clear", "modules/generated/openpnm.phase.Species.copy", "modules/generated/openpnm.phase.Species.filter_by_label", "modules/generated/openpnm.phase.Species.fromkeys", "modules/generated/openpnm.phase.Species.get", "modules/generated/openpnm.phase.Species.get_conduit_data", "modules/generated/openpnm.phase.Species.interpolate_data", "modules/generated/openpnm.phase.Species.items", "modules/generated/openpnm.phase.Species.keys", "modules/generated/openpnm.phase.Species.labels", "modules/generated/openpnm.phase.Species.num_pores", "modules/generated/openpnm.phase.Species.num_throats", "modules/generated/openpnm.phase.Species.pop", "modules/generated/openpnm.phase.Species.popitem", "modules/generated/openpnm.phase.Species.pores", "modules/generated/openpnm.phase.Species.props", "modules/generated/openpnm.phase.Species.regenerate_models", "modules/generated/openpnm.phase.Species.run_model", "modules/generated/openpnm.phase.Species.set_label", "modules/generated/openpnm.phase.Species.setdefault", "modules/generated/openpnm.phase.Species.throats", "modules/generated/openpnm.phase.Species.to_indices", "modules/generated/openpnm.phase.Species.to_mask", "modules/generated/openpnm.phase.Species.update", "modules/generated/openpnm.phase.Species.values", "modules/generated/openpnm.phase.StandardGas", "modules/generated/openpnm.phase.StandardGas.add_model", "modules/generated/openpnm.phase.StandardGas.add_model_collection", "modules/generated/openpnm.phase.StandardGas.clear", "modules/generated/openpnm.phase.StandardGas.copy", "modules/generated/openpnm.phase.StandardGas.filter_by_label", "modules/generated/openpnm.phase.StandardGas.fromkeys", "modules/generated/openpnm.phase.StandardGas.get", "modules/generated/openpnm.phase.StandardGas.get_conduit_data", "modules/generated/openpnm.phase.StandardGas.interpolate_data", "modules/generated/openpnm.phase.StandardGas.items", "modules/generated/openpnm.phase.StandardGas.keys", "modules/generated/openpnm.phase.StandardGas.labels", "modules/generated/openpnm.phase.StandardGas.num_pores", "modules/generated/openpnm.phase.StandardGas.num_throats", "modules/generated/openpnm.phase.StandardGas.pop", "modules/generated/openpnm.phase.StandardGas.popitem", "modules/generated/openpnm.phase.StandardGas.pores", "modules/generated/openpnm.phase.StandardGas.props", "modules/generated/openpnm.phase.StandardGas.regenerate_models", "modules/generated/openpnm.phase.StandardGas.run_model", "modules/generated/openpnm.phase.StandardGas.set_label", "modules/generated/openpnm.phase.StandardGas.setdefault", "modules/generated/openpnm.phase.StandardGas.throats", "modules/generated/openpnm.phase.StandardGas.to_indices", "modules/generated/openpnm.phase.StandardGas.to_mask", "modules/generated/openpnm.phase.StandardGas.update", "modules/generated/openpnm.phase.StandardGas.values", "modules/generated/openpnm.phase.StandardGasMixture", "modules/generated/openpnm.phase.StandardGasMixture.add_comp", "modules/generated/openpnm.phase.StandardGasMixture.add_model", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardGasMixture.clear", "modules/generated/openpnm.phase.StandardGasMixture.copy", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys", "modules/generated/openpnm.phase.StandardGasMixture.get", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data", "modules/generated/openpnm.phase.StandardGasMixture.items", "modules/generated/openpnm.phase.StandardGasMixture.keys", "modules/generated/openpnm.phase.StandardGasMixture.labels", "modules/generated/openpnm.phase.StandardGasMixture.num_pores", "modules/generated/openpnm.phase.StandardGasMixture.num_throats", "modules/generated/openpnm.phase.StandardGasMixture.pop", "modules/generated/openpnm.phase.StandardGasMixture.popitem", "modules/generated/openpnm.phase.StandardGasMixture.pores", "modules/generated/openpnm.phase.StandardGasMixture.props", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp", "modules/generated/openpnm.phase.StandardGasMixture.run_model", "modules/generated/openpnm.phase.StandardGasMixture.set_label", "modules/generated/openpnm.phase.StandardGasMixture.setdefault", "modules/generated/openpnm.phase.StandardGasMixture.throats", "modules/generated/openpnm.phase.StandardGasMixture.to_indices", "modules/generated/openpnm.phase.StandardGasMixture.to_mask", "modules/generated/openpnm.phase.StandardGasMixture.update", "modules/generated/openpnm.phase.StandardGasMixture.values", "modules/generated/openpnm.phase.StandardGasMixture.y", "modules/generated/openpnm.phase.StandardLiquid", "modules/generated/openpnm.phase.StandardLiquid.add_model", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection", "modules/generated/openpnm.phase.StandardLiquid.clear", "modules/generated/openpnm.phase.StandardLiquid.copy", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label", "modules/generated/openpnm.phase.StandardLiquid.fromkeys", "modules/generated/openpnm.phase.StandardLiquid.get", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data", "modules/generated/openpnm.phase.StandardLiquid.items", "modules/generated/openpnm.phase.StandardLiquid.keys", "modules/generated/openpnm.phase.StandardLiquid.labels", "modules/generated/openpnm.phase.StandardLiquid.num_pores", "modules/generated/openpnm.phase.StandardLiquid.num_throats", "modules/generated/openpnm.phase.StandardLiquid.pop", "modules/generated/openpnm.phase.StandardLiquid.popitem", "modules/generated/openpnm.phase.StandardLiquid.pores", "modules/generated/openpnm.phase.StandardLiquid.props", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models", "modules/generated/openpnm.phase.StandardLiquid.run_model", "modules/generated/openpnm.phase.StandardLiquid.set_label", "modules/generated/openpnm.phase.StandardLiquid.setdefault", "modules/generated/openpnm.phase.StandardLiquid.throats", "modules/generated/openpnm.phase.StandardLiquid.to_indices", "modules/generated/openpnm.phase.StandardLiquid.to_mask", "modules/generated/openpnm.phase.StandardLiquid.update", "modules/generated/openpnm.phase.StandardLiquid.values", "modules/generated/openpnm.phase.StandardLiquidMixture", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardLiquidMixture.clear", "modules/generated/openpnm.phase.StandardLiquidMixture.copy", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys", "modules/generated/openpnm.phase.StandardLiquidMixture.get", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data", "modules/generated/openpnm.phase.StandardLiquidMixture.items", "modules/generated/openpnm.phase.StandardLiquidMixture.keys", "modules/generated/openpnm.phase.StandardLiquidMixture.labels", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats", "modules/generated/openpnm.phase.StandardLiquidMixture.pop", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem", "modules/generated/openpnm.phase.StandardLiquidMixture.pores", "modules/generated/openpnm.phase.StandardLiquidMixture.props", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault", "modules/generated/openpnm.phase.StandardLiquidMixture.throats", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask", "modules/generated/openpnm.phase.StandardLiquidMixture.update", "modules/generated/openpnm.phase.StandardLiquidMixture.values", "modules/generated/openpnm.phase.StandardLiquidMixture.x", "modules/generated/openpnm.phase.Water", "modules/generated/openpnm.phase.Water.add_model", "modules/generated/openpnm.phase.Water.add_model_collection", "modules/generated/openpnm.phase.Water.clear", "modules/generated/openpnm.phase.Water.copy", "modules/generated/openpnm.phase.Water.filter_by_label", "modules/generated/openpnm.phase.Water.fromkeys", "modules/generated/openpnm.phase.Water.get", "modules/generated/openpnm.phase.Water.get_conduit_data", "modules/generated/openpnm.phase.Water.interpolate_data", "modules/generated/openpnm.phase.Water.items", "modules/generated/openpnm.phase.Water.keys", "modules/generated/openpnm.phase.Water.labels", "modules/generated/openpnm.phase.Water.num_pores", "modules/generated/openpnm.phase.Water.num_throats", "modules/generated/openpnm.phase.Water.pop", "modules/generated/openpnm.phase.Water.popitem", "modules/generated/openpnm.phase.Water.pores", "modules/generated/openpnm.phase.Water.props", "modules/generated/openpnm.phase.Water.regenerate_models", "modules/generated/openpnm.phase.Water.run_model", "modules/generated/openpnm.phase.Water.set_label", "modules/generated/openpnm.phase.Water.setdefault", "modules/generated/openpnm.phase.Water.throats", "modules/generated/openpnm.phase.Water.to_indices", "modules/generated/openpnm.phase.Water.to_mask", "modules/generated/openpnm.phase.Water.update", "modules/generated/openpnm.phase.Water.values", "modules/generated/openpnm.solvers", "modules/generated/openpnm.solvers.BaseSolver", "modules/generated/openpnm.solvers.BaseSolver.solve", "modules/generated/openpnm.solvers.DirectSolver", "modules/generated/openpnm.solvers.DirectSolver.solve", "modules/generated/openpnm.solvers.IterativeSolver", "modules/generated/openpnm.solvers.IterativeSolver.solve", "modules/generated/openpnm.solvers.PETScLinearSolver", "modules/generated/openpnm.solvers.PETScLinearSolver.solve", "modules/generated/openpnm.solvers.PardisoSpsolve", "modules/generated/openpnm.solvers.PardisoSpsolve.solve", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.solve", "modules/generated/openpnm.solvers.ScipyCG", "modules/generated/openpnm.solvers.ScipyCG.solve", "modules/generated/openpnm.solvers.ScipySpsolve", "modules/generated/openpnm.solvers.ScipySpsolve.solve", "modules/generated/openpnm.topotools", "modules/generated/openpnm.topotools.add_boundary_pores", "modules/generated/openpnm.topotools.add_reservoir_pore", "modules/generated/openpnm.topotools.bond_percolation", "modules/generated/openpnm.topotools.clone_pores", "modules/generated/openpnm.topotools.connect_pores", "modules/generated/openpnm.topotools.conns_to_am", "modules/generated/openpnm.topotools.dimensionality", "modules/generated/openpnm.topotools.drop_sites", "modules/generated/openpnm.topotools.extend", "modules/generated/openpnm.topotools.filter_pores_by_z", "modules/generated/openpnm.topotools.find_clusters", "modules/generated/openpnm.topotools.find_connected_sites", "modules/generated/openpnm.topotools.find_connecting_bonds", "modules/generated/openpnm.topotools.find_interface_throats", "modules/generated/openpnm.topotools.find_isolated_clusters", "modules/generated/openpnm.topotools.find_neighbor_bonds", "modules/generated/openpnm.topotools.find_neighbor_sites", "modules/generated/openpnm.topotools.find_path", "modules/generated/openpnm.topotools.find_surface_pores", "modules/generated/openpnm.topotools.generate_base_points", "modules/generated/openpnm.topotools.get_domain_area", "modules/generated/openpnm.topotools.get_domain_length", "modules/generated/openpnm.topotools.get_shape", "modules/generated/openpnm.topotools.get_spacing", "modules/generated/openpnm.topotools.hull_centroid", "modules/generated/openpnm.topotools.is_fully_connected", "modules/generated/openpnm.topotools.iscoplanar", "modules/generated/openpnm.topotools.isoutside", "modules/generated/openpnm.topotools.ispercolating", "modules/generated/openpnm.topotools.issymmetric", "modules/generated/openpnm.topotools.istriangular", "modules/generated/openpnm.topotools.istril", "modules/generated/openpnm.topotools.istriu", "modules/generated/openpnm.topotools.label_faces", "modules/generated/openpnm.topotools.merge_networks", "modules/generated/openpnm.topotools.merge_pores", "modules/generated/openpnm.topotools.reduce_coordination", "modules/generated/openpnm.topotools.reflect_base_points", "modules/generated/openpnm.topotools.rotate_coords", "modules/generated/openpnm.topotools.shear_coords", "modules/generated/openpnm.topotools.site_percolation", "modules/generated/openpnm.topotools.stitch", "modules/generated/openpnm.topotools.template_cylinder_annulus", "modules/generated/openpnm.topotools.template_sphere_shell", "modules/generated/openpnm.topotools.tri_to_am", "modules/generated/openpnm.topotools.trim", "modules/generated/openpnm.topotools.trim_disconnected_clusters", "modules/generated/openpnm.topotools.vor_to_am", "modules/generated/openpnm.utils", "modules/generated/openpnm.utils.Docorator", "modules/generated/openpnm.utils.Docorator.__call__", "modules/generated/openpnm.utils.Docorator.dedent", "modules/generated/openpnm.utils.Docorator.dedents", "modules/generated/openpnm.utils.Docorator.delete_kwargs", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s", "modules/generated/openpnm.utils.Docorator.delete_params", "modules/generated/openpnm.utils.Docorator.delete_params_s", "modules/generated/openpnm.utils.Docorator.delete_types", "modules/generated/openpnm.utils.Docorator.delete_types_s", "modules/generated/openpnm.utils.Docorator.get_docstring", "modules/generated/openpnm.utils.Docorator.get_extended_summary", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf", "modules/generated/openpnm.utils.Docorator.get_full_description", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf", "modules/generated/openpnm.utils.Docorator.get_sections", "modules/generated/openpnm.utils.Docorator.get_sectionsf", "modules/generated/openpnm.utils.Docorator.get_summary", "modules/generated/openpnm.utils.Docorator.get_summaryf", "modules/generated/openpnm.utils.Docorator.keep_params", "modules/generated/openpnm.utils.Docorator.keep_params_s", "modules/generated/openpnm.utils.Docorator.keep_types", "modules/generated/openpnm.utils.Docorator.keep_types_s", "modules/generated/openpnm.utils.Docorator.save_docstring", "modules/generated/openpnm.utils.Docorator.with_indent", "modules/generated/openpnm.utils.Docorator.with_indents", "modules/generated/openpnm.utils.HealthDict", "modules/generated/openpnm.utils.HealthDict.clear", "modules/generated/openpnm.utils.HealthDict.copy", "modules/generated/openpnm.utils.HealthDict.fromkeys", "modules/generated/openpnm.utils.HealthDict.get", "modules/generated/openpnm.utils.HealthDict.items", "modules/generated/openpnm.utils.HealthDict.keys", "modules/generated/openpnm.utils.HealthDict.pop", "modules/generated/openpnm.utils.HealthDict.popitem", "modules/generated/openpnm.utils.HealthDict.setdefault", "modules/generated/openpnm.utils.HealthDict.update", "modules/generated/openpnm.utils.HealthDict.values", "modules/generated/openpnm.utils.NestedDict", "modules/generated/openpnm.utils.NestedDict.clear", "modules/generated/openpnm.utils.NestedDict.copy", "modules/generated/openpnm.utils.NestedDict.fromkeys", "modules/generated/openpnm.utils.NestedDict.get", "modules/generated/openpnm.utils.NestedDict.items", "modules/generated/openpnm.utils.NestedDict.keys", "modules/generated/openpnm.utils.NestedDict.pop", "modules/generated/openpnm.utils.NestedDict.popitem", "modules/generated/openpnm.utils.NestedDict.setdefault", "modules/generated/openpnm.utils.NestedDict.to_dict", "modules/generated/openpnm.utils.NestedDict.unravel", "modules/generated/openpnm.utils.NestedDict.update", "modules/generated/openpnm.utils.NestedDict.values", "modules/generated/openpnm.utils.PrintableDict", "modules/generated/openpnm.utils.PrintableDict.clear", "modules/generated/openpnm.utils.PrintableDict.copy", "modules/generated/openpnm.utils.PrintableDict.fromkeys", "modules/generated/openpnm.utils.PrintableDict.get", "modules/generated/openpnm.utils.PrintableDict.items", "modules/generated/openpnm.utils.PrintableDict.keys", "modules/generated/openpnm.utils.PrintableDict.pop", "modules/generated/openpnm.utils.PrintableDict.popitem", "modules/generated/openpnm.utils.PrintableDict.setdefault", "modules/generated/openpnm.utils.PrintableDict.update", "modules/generated/openpnm.utils.PrintableDict.values", "modules/generated/openpnm.utils.PrintableList", "modules/generated/openpnm.utils.PrintableList.append", "modules/generated/openpnm.utils.PrintableList.clear", "modules/generated/openpnm.utils.PrintableList.copy", "modules/generated/openpnm.utils.PrintableList.count", "modules/generated/openpnm.utils.PrintableList.extend", "modules/generated/openpnm.utils.PrintableList.index", "modules/generated/openpnm.utils.PrintableList.insert", "modules/generated/openpnm.utils.PrintableList.pop", "modules/generated/openpnm.utils.PrintableList.remove", "modules/generated/openpnm.utils.PrintableList.reverse", "modules/generated/openpnm.utils.PrintableList.sort", "modules/generated/openpnm.utils.Project", "modules/generated/openpnm.utils.Project.append", "modules/generated/openpnm.utils.Project.clear", "modules/generated/openpnm.utils.Project.copy", "modules/generated/openpnm.utils.Project.count", "modules/generated/openpnm.utils.Project.extend", "modules/generated/openpnm.utils.Project.index", "modules/generated/openpnm.utils.Project.insert", "modules/generated/openpnm.utils.Project.pop", "modules/generated/openpnm.utils.Project.remove", "modules/generated/openpnm.utils.Project.reverse", "modules/generated/openpnm.utils.Project.sort", "modules/generated/openpnm.utils.SettingsAttr", "modules/generated/openpnm.utils.TypedList", "modules/generated/openpnm.utils.TypedList.append", "modules/generated/openpnm.utils.TypedList.clear", "modules/generated/openpnm.utils.TypedList.copy", "modules/generated/openpnm.utils.TypedList.count", "modules/generated/openpnm.utils.TypedList.extend", "modules/generated/openpnm.utils.TypedList.index", "modules/generated/openpnm.utils.TypedList.insert", "modules/generated/openpnm.utils.TypedList.pop", "modules/generated/openpnm.utils.TypedList.remove", "modules/generated/openpnm.utils.TypedList.reverse", "modules/generated/openpnm.utils.TypedList.sort", "modules/generated/openpnm.utils.TypedMixin", "modules/generated/openpnm.utils.TypedSet", "modules/generated/openpnm.utils.TypedSet.add", "modules/generated/openpnm.utils.TypedSet.clear", "modules/generated/openpnm.utils.TypedSet.copy", "modules/generated/openpnm.utils.TypedSet.difference", "modules/generated/openpnm.utils.TypedSet.difference_update", "modules/generated/openpnm.utils.TypedSet.discard", "modules/generated/openpnm.utils.TypedSet.intersection", "modules/generated/openpnm.utils.TypedSet.intersection_update", "modules/generated/openpnm.utils.TypedSet.isdisjoint", "modules/generated/openpnm.utils.TypedSet.issubset", "modules/generated/openpnm.utils.TypedSet.issuperset", "modules/generated/openpnm.utils.TypedSet.pop", "modules/generated/openpnm.utils.TypedSet.remove", "modules/generated/openpnm.utils.TypedSet.symmetric_difference", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update", "modules/generated/openpnm.utils.TypedSet.union", "modules/generated/openpnm.utils.TypedSet.update", "modules/generated/openpnm.utils.Workspace", "modules/generated/openpnm.utils.Workspace.clear", "modules/generated/openpnm.utils.Workspace.close_project", "modules/generated/openpnm.utils.Workspace.copy", "modules/generated/openpnm.utils.Workspace.copy_project", "modules/generated/openpnm.utils.Workspace.fromkeys", "modules/generated/openpnm.utils.Workspace.get", "modules/generated/openpnm.utils.Workspace.items", "modules/generated/openpnm.utils.Workspace.keys", "modules/generated/openpnm.utils.Workspace.load_project", "modules/generated/openpnm.utils.Workspace.load_workspace", "modules/generated/openpnm.utils.Workspace.new_project", "modules/generated/openpnm.utils.Workspace.pop", "modules/generated/openpnm.utils.Workspace.popitem", "modules/generated/openpnm.utils.Workspace.save_project", "modules/generated/openpnm.utils.Workspace.save_workspace", "modules/generated/openpnm.utils.Workspace.setdefault", "modules/generated/openpnm.utils.Workspace.update", "modules/generated/openpnm.utils.Workspace.values", "modules/generated/openpnm.utils.check_data_health", "modules/generated/openpnm.utils.check_network_health", "modules/generated/openpnm.utils.dict_to_struct", "modules/generated/openpnm.utils.flat_list", "modules/generated/openpnm.utils.get_mixture_model_args", "modules/generated/openpnm.utils.get_printable_labels", "modules/generated/openpnm.utils.get_printable_props", "modules/generated/openpnm.utils.ignore_warnings", "modules/generated/openpnm.utils.is_symmetric", "modules/generated/openpnm.utils.is_transient", "modules/generated/openpnm.utils.is_valid_propname", "modules/generated/openpnm.utils.methods_to_table", "modules/generated/openpnm.utils.models_to_table", "modules/generated/openpnm.utils.sanitize_dict", "modules/generated/openpnm.utils.struct_to_dict", "modules/generated/openpnm.visualization", "modules/generated/openpnm.visualization.draw_conduit", "modules/generated/openpnm.visualization.generate_voxel_image", "modules/generated/openpnm.visualization.plot_connections", "modules/generated/openpnm.visualization.plot_coordinates", "modules/generated/openpnm.visualization.plot_networkx", "modules/generated/openpnm.visualization.plot_notebook", "modules/generated/openpnm.visualization.plot_tutorial", "modules/generated/openpnm.visualization.plot_vispy", "modules/generated/openpnm.visualization.set_mpl_style", "modules/index"], "filenames": ["_examples/applications.rst", "_examples/index.rst", "_examples/reference.rst", "_examples/tutorials.rst", "examples/applications/absolute_permeability.ipynb", "examples/applications/adjusting_pore_size_distributions.ipynb", "examples/applications/dispersion_coefficient.ipynb", "examples/applications/effective_diffusivity_and_tortuosity.ipynb", "examples/applications/formation_factor.ipynb", "examples/applications/mercury_intrusion.ipynb", "examples/applications/network_extraction.ipynb", "examples/applications/porosity.ipynb", "examples/applications/relative_diffusivity.ipynb", "examples/applications/relative_permeability.ipynb", "examples/contrib/README.rst", "examples/getting_started.ipynb", "examples/reference/architecture/pore_scale_models.ipynb", "examples/reference/architecture/settings_attribute_machinery.ipynb", "examples/reference/architecture/workspace_and_projects.ipynb", "examples/reference/networks/managing_clustered_networks.ipynb", "examples/reference/simulations/available_matrix_solvers.ipynb", "examples/reference/simulations/basic_transport.ipynb", "examples/reference/simulations/explanation_of_units.ipynb", "examples/reference/simulations/reactive_transport.ipynb", "examples/reference/simulations/size_factors_and_transport_conductance.ipynb", "examples/reference/simulations/transient_transport.ipynb", "examples/tutorials/01_numerical_python_primer.ipynb", "examples/tutorials/02_network_generation_and_visualization.ipynb", "examples/tutorials/03_data_and_topology_storage.ipynb", "examples/tutorials/04_graph_queries_and_manipulation.ipynb", "examples/tutorials/05_defining_geometry.ipynb", "examples/tutorials/06_labels_and_domains.ipynb", "examples/tutorials/07_phases_and_mixtures.ipynb", "examples/tutorials/08_simulating_transport.ipynb", "examples/tutorials/09_simulating_invasion.ipynb", "examples/tutorials/10_visualization_options.ipynb", "index.rst", "installation.rst", "modules/generated/openpnm.algorithms.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.Algorithm.rst", "modules/generated/openpnm.algorithms.Algorithm.clear.rst", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs.rst", "modules/generated/openpnm.algorithms.Algorithm.copy.rst", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label.rst", "modules/generated/openpnm.algorithms.Algorithm.fromkeys.rst", "modules/generated/openpnm.algorithms.Algorithm.get.rst", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data.rst", "modules/generated/openpnm.algorithms.Algorithm.items.rst", "modules/generated/openpnm.algorithms.Algorithm.keys.rst", "modules/generated/openpnm.algorithms.Algorithm.labels.rst", "modules/generated/openpnm.algorithms.Algorithm.num_pores.rst", "modules/generated/openpnm.algorithms.Algorithm.num_throats.rst", "modules/generated/openpnm.algorithms.Algorithm.pop.rst", "modules/generated/openpnm.algorithms.Algorithm.popitem.rst", "modules/generated/openpnm.algorithms.Algorithm.pores.rst", "modules/generated/openpnm.algorithms.Algorithm.props.rst", "modules/generated/openpnm.algorithms.Algorithm.set_BC.rst", "modules/generated/openpnm.algorithms.Algorithm.set_label.rst", "modules/generated/openpnm.algorithms.Algorithm.setdefault.rst", "modules/generated/openpnm.algorithms.Algorithm.throats.rst", "modules/generated/openpnm.algorithms.Algorithm.to_indices.rst", "modules/generated/openpnm.algorithms.Algorithm.to_mask.rst", "modules/generated/openpnm.algorithms.Algorithm.update.rst", "modules/generated/openpnm.algorithms.Algorithm.values.rst", "modules/generated/openpnm.algorithms.Drainage.rst", "modules/generated/openpnm.algorithms.Drainage.apply_trapping.rst", "modules/generated/openpnm.algorithms.Drainage.clear.rst", "modules/generated/openpnm.algorithms.Drainage.clear_BCs.rst", "modules/generated/openpnm.algorithms.Drainage.copy.rst", "modules/generated/openpnm.algorithms.Drainage.filter_by_label.rst", "modules/generated/openpnm.algorithms.Drainage.fromkeys.rst", "modules/generated/openpnm.algorithms.Drainage.get.rst", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Drainage.interpolate_data.rst", "modules/generated/openpnm.algorithms.Drainage.items.rst", "modules/generated/openpnm.algorithms.Drainage.keys.rst", "modules/generated/openpnm.algorithms.Drainage.labels.rst", "modules/generated/openpnm.algorithms.Drainage.num_pores.rst", "modules/generated/openpnm.algorithms.Drainage.num_throats.rst", "modules/generated/openpnm.algorithms.Drainage.pc_curve.rst", "modules/generated/openpnm.algorithms.Drainage.pop.rst", "modules/generated/openpnm.algorithms.Drainage.popitem.rst", "modules/generated/openpnm.algorithms.Drainage.pores.rst", "modules/generated/openpnm.algorithms.Drainage.props.rst", "modules/generated/openpnm.algorithms.Drainage.reset.rst", "modules/generated/openpnm.algorithms.Drainage.run.rst", "modules/generated/openpnm.algorithms.Drainage.set_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_label.rst", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.setdefault.rst", "modules/generated/openpnm.algorithms.Drainage.throats.rst", "modules/generated/openpnm.algorithms.Drainage.to_indices.rst", "modules/generated/openpnm.algorithms.Drainage.to_mask.rst", "modules/generated/openpnm.algorithms.Drainage.update.rst", "modules/generated/openpnm.algorithms.Drainage.values.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.FourierConduction.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.copy.rst", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.FourierConduction.get.rst", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.items.rst", "modules/generated/openpnm.algorithms.FourierConduction.keys.rst", "modules/generated/openpnm.algorithms.FourierConduction.labels.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.pop.rst", "modules/generated/openpnm.algorithms.FourierConduction.popitem.rst", "modules/generated/openpnm.algorithms.FourierConduction.pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.props.rst", "modules/generated/openpnm.algorithms.FourierConduction.rate.rst", "modules/generated/openpnm.algorithms.FourierConduction.run.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_source.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.setdefault.rst", "modules/generated/openpnm.algorithms.FourierConduction.throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_indices.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_mask.rst", "modules/generated/openpnm.algorithms.FourierConduction.update.rst", "modules/generated/openpnm.algorithms.FourierConduction.values.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.copy.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.items.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.keys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.labels.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pop.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.props.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.reset.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.run.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.update.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.values.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.copy.rst", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.items.rst", "modules/generated/openpnm.algorithms.OhmicConduction.keys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.labels.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pop.rst", "modules/generated/openpnm.algorithms.OhmicConduction.popitem.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.props.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rate.rst", "modules/generated/openpnm.algorithms.OhmicConduction.run.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_source.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault.rst", "modules/generated/openpnm.algorithms.OhmicConduction.throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask.rst", "modules/generated/openpnm.algorithms.OhmicConduction.update.rst", "modules/generated/openpnm.algorithms.OhmicConduction.values.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.StokesFlow.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.copy.rst", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys.rst", "modules/generated/openpnm.algorithms.StokesFlow.get.rst", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.items.rst", "modules/generated/openpnm.algorithms.StokesFlow.keys.rst", "modules/generated/openpnm.algorithms.StokesFlow.labels.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.pop.rst", "modules/generated/openpnm.algorithms.StokesFlow.popitem.rst", "modules/generated/openpnm.algorithms.StokesFlow.pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.props.rst", "modules/generated/openpnm.algorithms.StokesFlow.rate.rst", "modules/generated/openpnm.algorithms.StokesFlow.run.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_source.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.setdefault.rst", "modules/generated/openpnm.algorithms.StokesFlow.throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_indices.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_mask.rst", "modules/generated/openpnm.algorithms.StokesFlow.update.rst", "modules/generated/openpnm.algorithms.StokesFlow.values.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.copy.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.get.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.items.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.keys.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.labels.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.num_pores.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.num_throats.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.pop.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.popitem.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.pores.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.props.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.rate.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.run.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_BC.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_label.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_source.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.setdefault.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.throats.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.to_indices.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.to_mask.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.update.rst", "modules/generated/openpnm.algorithms.TransientFourierConduction.values.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.Transport.rst", "modules/generated/openpnm.algorithms.Transport.clear.rst", "modules/generated/openpnm.algorithms.Transport.clear_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.Transport.copy.rst", "modules/generated/openpnm.algorithms.Transport.filter_by_label.rst", "modules/generated/openpnm.algorithms.Transport.fromkeys.rst", "modules/generated/openpnm.algorithms.Transport.get.rst", "modules/generated/openpnm.algorithms.Transport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Transport.interpolate_data.rst", "modules/generated/openpnm.algorithms.Transport.items.rst", "modules/generated/openpnm.algorithms.Transport.keys.rst", "modules/generated/openpnm.algorithms.Transport.labels.rst", "modules/generated/openpnm.algorithms.Transport.num_pores.rst", "modules/generated/openpnm.algorithms.Transport.num_throats.rst", "modules/generated/openpnm.algorithms.Transport.pop.rst", "modules/generated/openpnm.algorithms.Transport.popitem.rst", "modules/generated/openpnm.algorithms.Transport.pores.rst", "modules/generated/openpnm.algorithms.Transport.props.rst", "modules/generated/openpnm.algorithms.Transport.rate.rst", "modules/generated/openpnm.algorithms.Transport.run.rst", "modules/generated/openpnm.algorithms.Transport.set_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_label.rst", "modules/generated/openpnm.algorithms.Transport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_value_BC.rst", "modules/generated/openpnm.algorithms.Transport.setdefault.rst", "modules/generated/openpnm.algorithms.Transport.throats.rst", "modules/generated/openpnm.algorithms.Transport.to_indices.rst", "modules/generated/openpnm.algorithms.Transport.to_mask.rst", "modules/generated/openpnm.algorithms.Transport.update.rst", "modules/generated/openpnm.algorithms.Transport.values.rst", "modules/generated/openpnm.contrib.rst", "modules/generated/openpnm.contrib.MultiPhase.rst", "modules/generated/openpnm.contrib.MultiPhase.add_model.rst", "modules/generated/openpnm.contrib.MultiPhase.add_model_collection.rst", "modules/generated/openpnm.contrib.MultiPhase.add_phases.rst", "modules/generated/openpnm.contrib.MultiPhase.clear.rst", "modules/generated/openpnm.contrib.MultiPhase.copy.rst", "modules/generated/openpnm.contrib.MultiPhase.filter_by_label.rst", "modules/generated/openpnm.contrib.MultiPhase.fromkeys.rst", "modules/generated/openpnm.contrib.MultiPhase.get.rst", "modules/generated/openpnm.contrib.MultiPhase.get_conduit_data.rst", "modules/generated/openpnm.contrib.MultiPhase.interpolate_data.rst", "modules/generated/openpnm.contrib.MultiPhase.items.rst", "modules/generated/openpnm.contrib.MultiPhase.keys.rst", "modules/generated/openpnm.contrib.MultiPhase.labels.rst", "modules/generated/openpnm.contrib.MultiPhase.num_pores.rst", "modules/generated/openpnm.contrib.MultiPhase.num_throats.rst", "modules/generated/openpnm.contrib.MultiPhase.pop.rst", "modules/generated/openpnm.contrib.MultiPhase.popitem.rst", "modules/generated/openpnm.contrib.MultiPhase.pores.rst", "modules/generated/openpnm.contrib.MultiPhase.props.rst", "modules/generated/openpnm.contrib.MultiPhase.regenerate_models.rst", "modules/generated/openpnm.contrib.MultiPhase.run_model.rst", "modules/generated/openpnm.contrib.MultiPhase.set_binary_partition_coef.rst", "modules/generated/openpnm.contrib.MultiPhase.set_label.rst", "modules/generated/openpnm.contrib.MultiPhase.set_occupancy.rst", "modules/generated/openpnm.contrib.MultiPhase.setdefault.rst", "modules/generated/openpnm.contrib.MultiPhase.throats.rst", "modules/generated/openpnm.contrib.MultiPhase.to_indices.rst", "modules/generated/openpnm.contrib.MultiPhase.to_mask.rst", "modules/generated/openpnm.contrib.MultiPhase.update.rst", "modules/generated/openpnm.contrib.MultiPhase.values.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.clear_BCs.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.copy.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.filter_by_label.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.fromkeys.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.get.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.get_conduit_data.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.interpolate_data.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.items.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.keys.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.labels.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_pores.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.num_throats.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.pop.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.popitem.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.pores.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.props.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.run.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_BC.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.set_label.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.setdefault.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.throats.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_indices.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.to_mask.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.update.rst", "modules/generated/openpnm.contrib.TransientMultiPhysics.values.rst", "modules/generated/openpnm.contrib.multiphase_diffusion.rst", "modules/generated/openpnm.core.rst", "modules/generated/openpnm.core.Base2.rst", "modules/generated/openpnm.core.Base2.clear.rst", "modules/generated/openpnm.core.Base2.copy.rst", "modules/generated/openpnm.core.Base2.fromkeys.rst", "modules/generated/openpnm.core.Base2.get.rst", "modules/generated/openpnm.core.Base2.get_conduit_data.rst", "modules/generated/openpnm.core.Base2.interpolate_data.rst", "modules/generated/openpnm.core.Base2.items.rst", "modules/generated/openpnm.core.Base2.keys.rst", "modules/generated/openpnm.core.Base2.pop.rst", "modules/generated/openpnm.core.Base2.popitem.rst", "modules/generated/openpnm.core.Base2.props.rst", "modules/generated/openpnm.core.Base2.setdefault.rst", "modules/generated/openpnm.core.Base2.to_indices.rst", "modules/generated/openpnm.core.Base2.to_mask.rst", "modules/generated/openpnm.core.Base2.update.rst", "modules/generated/openpnm.core.Base2.values.rst", "modules/generated/openpnm.core.Domain.rst", "modules/generated/openpnm.core.Domain.add_model.rst", "modules/generated/openpnm.core.Domain.add_model_collection.rst", "modules/generated/openpnm.core.Domain.clear.rst", "modules/generated/openpnm.core.Domain.copy.rst", "modules/generated/openpnm.core.Domain.filter_by_label.rst", "modules/generated/openpnm.core.Domain.fromkeys.rst", "modules/generated/openpnm.core.Domain.get.rst", "modules/generated/openpnm.core.Domain.get_conduit_data.rst", "modules/generated/openpnm.core.Domain.interpolate_data.rst", "modules/generated/openpnm.core.Domain.items.rst", "modules/generated/openpnm.core.Domain.keys.rst", "modules/generated/openpnm.core.Domain.labels.rst", "modules/generated/openpnm.core.Domain.num_pores.rst", "modules/generated/openpnm.core.Domain.num_throats.rst", "modules/generated/openpnm.core.Domain.pop.rst", "modules/generated/openpnm.core.Domain.popitem.rst", "modules/generated/openpnm.core.Domain.pores.rst", "modules/generated/openpnm.core.Domain.props.rst", "modules/generated/openpnm.core.Domain.regenerate_models.rst", "modules/generated/openpnm.core.Domain.run_model.rst", "modules/generated/openpnm.core.Domain.set_label.rst", "modules/generated/openpnm.core.Domain.setdefault.rst", "modules/generated/openpnm.core.Domain.throats.rst", "modules/generated/openpnm.core.Domain.to_indices.rst", "modules/generated/openpnm.core.Domain.to_mask.rst", "modules/generated/openpnm.core.Domain.update.rst", "modules/generated/openpnm.core.Domain.values.rst", "modules/generated/openpnm.core.LabelMixin.rst", "modules/generated/openpnm.core.LabelMixin.filter_by_label.rst", "modules/generated/openpnm.core.LabelMixin.labels.rst", "modules/generated/openpnm.core.LabelMixin.num_pores.rst", "modules/generated/openpnm.core.LabelMixin.num_throats.rst", "modules/generated/openpnm.core.LabelMixin.pores.rst", "modules/generated/openpnm.core.LabelMixin.set_label.rst", "modules/generated/openpnm.core.LabelMixin.throats.rst", "modules/generated/openpnm.core.ModelWrapper.rst", "modules/generated/openpnm.core.ModelWrapper.__call__.rst", "modules/generated/openpnm.core.ModelWrapper.clear.rst", "modules/generated/openpnm.core.ModelWrapper.copy.rst", "modules/generated/openpnm.core.ModelWrapper.fromkeys.rst", "modules/generated/openpnm.core.ModelWrapper.get.rst", "modules/generated/openpnm.core.ModelWrapper.items.rst", "modules/generated/openpnm.core.ModelWrapper.keys.rst", "modules/generated/openpnm.core.ModelWrapper.pop.rst", "modules/generated/openpnm.core.ModelWrapper.popitem.rst", "modules/generated/openpnm.core.ModelWrapper.setdefault.rst", "modules/generated/openpnm.core.ModelWrapper.update.rst", "modules/generated/openpnm.core.ModelWrapper.values.rst", "modules/generated/openpnm.core.ModelsDict.rst", "modules/generated/openpnm.core.ModelsDict.clear.rst", "modules/generated/openpnm.core.ModelsDict.copy.rst", "modules/generated/openpnm.core.ModelsDict.dependency_graph.rst", "modules/generated/openpnm.core.ModelsDict.dependency_list.rst", "modules/generated/openpnm.core.ModelsDict.dependency_map.rst", "modules/generated/openpnm.core.ModelsDict.fromkeys.rst", "modules/generated/openpnm.core.ModelsDict.get.rst", "modules/generated/openpnm.core.ModelsDict.items.rst", "modules/generated/openpnm.core.ModelsDict.keys.rst", "modules/generated/openpnm.core.ModelsDict.pop.rst", "modules/generated/openpnm.core.ModelsDict.popitem.rst", "modules/generated/openpnm.core.ModelsDict.setdefault.rst", "modules/generated/openpnm.core.ModelsDict.update.rst", "modules/generated/openpnm.core.ModelsDict.values.rst", "modules/generated/openpnm.core.ModelsMixin2.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection.rst", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models.rst", "modules/generated/openpnm.core.ModelsMixin2.run_model.rst", "modules/generated/openpnm.core.ParserMixin.rst", "modules/generated/openpnm.integrators.rst", "modules/generated/openpnm.integrators.Integrator.rst", "modules/generated/openpnm.integrators.ScipyRK45.rst", "modules/generated/openpnm.integrators.ScipyRK45.solve.rst", "modules/generated/openpnm.io.rst", "modules/generated/openpnm.io.network_from_csv.rst", "modules/generated/openpnm.io.network_from_jsongraph.rst", "modules/generated/openpnm.io.network_from_marock.rst", "modules/generated/openpnm.io.network_from_networkx.rst", "modules/generated/openpnm.io.network_from_pergeos.rst", "modules/generated/openpnm.io.network_from_porespy.rst", "modules/generated/openpnm.io.network_from_statoil.rst", "modules/generated/openpnm.io.network_to_comsol.rst", "modules/generated/openpnm.io.network_to_csv.rst", "modules/generated/openpnm.io.network_to_jsongraph.rst", "modules/generated/openpnm.io.network_to_networkx.rst", "modules/generated/openpnm.io.network_to_pandas.rst", "modules/generated/openpnm.io.network_to_pergeos.rst", "modules/generated/openpnm.io.network_to_salome.rst", "modules/generated/openpnm.io.network_to_stl.rst", "modules/generated/openpnm.io.print_hdf5.rst", "modules/generated/openpnm.io.project_to_csv.rst", "modules/generated/openpnm.io.project_to_dict.rst", "modules/generated/openpnm.io.project_to_hdf5.rst", "modules/generated/openpnm.io.project_to_pandas.rst", "modules/generated/openpnm.io.project_to_paraview.rst", "modules/generated/openpnm.io.project_to_vtk.rst", "modules/generated/openpnm.io.project_to_xdmf.rst", "modules/generated/openpnm.models.rst", "modules/generated/openpnm.models.collections.rst", "modules/generated/openpnm.models.collections.geometry.rst", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.collections.network.rst", "modules/generated/openpnm.models.collections.phase.rst", "modules/generated/openpnm.models.collections.phase.air.rst", "modules/generated/openpnm.models.collections.phase.gas.rst", "modules/generated/openpnm.models.collections.phase.liquid.rst", "modules/generated/openpnm.models.collections.phase.mercury.rst", "modules/generated/openpnm.models.collections.phase.water.rst", "modules/generated/openpnm.models.collections.physics.rst", "modules/generated/openpnm.models.collections.physics.basic.rst", "modules/generated/openpnm.models.collections.physics.standard.rst", "modules/generated/openpnm.models.geometry.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square.rst", "modules/generated/openpnm.models.geometry.pore_seed.rst", "modules/generated/openpnm.models.geometry.pore_seed.random.rst", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated.rst", "modules/generated/openpnm.models.geometry.pore_size.rst", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats.rst", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere.rst", "modules/generated/openpnm.models.geometry.pore_size.normal.rst", "modules/generated/openpnm.models.geometry.pore_size.random.rst", "modules/generated/openpnm.models.geometry.pore_size.weibull.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.square.rst", "modules/generated/openpnm.models.geometry.pore_volume.rst", "modules/generated/openpnm.models.geometry.pore_volume.circle.rst", "modules/generated/openpnm.models.geometry.pore_volume.cube.rst", "modules/generated/openpnm.models.geometry.pore_volume.effective.rst", "modules/generated/openpnm.models.geometry.pore_volume.sphere.rst", "modules/generated/openpnm.models.geometry.pore_volume.square.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow.rst", "modules/generated/openpnm.models.geometry.throat_centroid.rst", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.rst", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_seed.rst", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_seed.random.rst", "modules/generated/openpnm.models.geometry.throat_size.rst", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.throat_size.normal.rst", "modules/generated/openpnm.models.geometry.throat_size.random.rst", "modules/generated/openpnm.models.geometry.throat_size.weibull.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_vector.rst", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore.rst", "modules/generated/openpnm.models.geometry.throat_volume.rst", "modules/generated/openpnm.models.geometry.throat_volume.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_volume.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_volume.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_volume.lens.rst", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring.rst", "modules/generated/openpnm.models.geometry.throat_volume.rectangle.rst", "modules/generated/openpnm.models.misc.rst", "modules/generated/openpnm.models.misc.blank.rst", "modules/generated/openpnm.models.misc.clip.rst", "modules/generated/openpnm.models.misc.constant.rst", "modules/generated/openpnm.models.misc.difference.rst", "modules/generated/openpnm.models.misc.fraction.rst", "modules/generated/openpnm.models.misc.from_neighbor_pores.rst", "modules/generated/openpnm.models.misc.from_neighbor_throats.rst", "modules/generated/openpnm.models.misc.generic_distribution.rst", "modules/generated/openpnm.models.misc.generic_function.rst", "modules/generated/openpnm.models.misc.invert.rst", "modules/generated/openpnm.models.misc.linear.rst", "modules/generated/openpnm.models.misc.match_histogram.rst", "modules/generated/openpnm.models.misc.normal.rst", "modules/generated/openpnm.models.misc.normalize.rst", "modules/generated/openpnm.models.misc.polynomial.rst", "modules/generated/openpnm.models.misc.product.rst", "modules/generated/openpnm.models.misc.random.rst", "modules/generated/openpnm.models.misc.scaled.rst", "modules/generated/openpnm.models.misc.summation.rst", "modules/generated/openpnm.models.misc.weibull.rst", "modules/generated/openpnm.models.network.rst", "modules/generated/openpnm.models.network.bidirectional_throats.rst", "modules/generated/openpnm.models.network.cluster_number.rst", "modules/generated/openpnm.models.network.cluster_size.rst", "modules/generated/openpnm.models.network.coordination_number.rst", "modules/generated/openpnm.models.network.count_coincident_pores.rst", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_pore.rst", "modules/generated/openpnm.models.network.duplicate_throats.rst", "modules/generated/openpnm.models.network.find_coincident_pores.rst", "modules/generated/openpnm.models.network.gabriel_edges.rst", "modules/generated/openpnm.models.network.headless_throats.rst", "modules/generated/openpnm.models.network.isolated_pores.rst", "modules/generated/openpnm.models.network.looped_throats.rst", "modules/generated/openpnm.models.network.pore_to_pore_distance.rst", "modules/generated/openpnm.models.network.reversed_throats.rst", "modules/generated/openpnm.models.phase.rst", "modules/generated/openpnm.models.phase.chemicals_wrapper.rst", "modules/generated/openpnm.models.phase.critical_props.rst", "modules/generated/openpnm.models.phase.density.rst", "modules/generated/openpnm.models.phase.density.ideal_gas.rst", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD.rst", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD.rst", "modules/generated/openpnm.models.phase.density.mass_to_molar.rst", "modules/generated/openpnm.models.phase.density.water_correlation.rst", "modules/generated/openpnm.models.phase.diffusivity.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg.rst", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc.rst", "modules/generated/openpnm.models.phase.heat_capacity.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp.rst", "modules/generated/openpnm.models.phase.misc.rst", "modules/generated/openpnm.models.phase.misc.mix_and_match.rst", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.rst", "modules/generated/openpnm.models.phase.mixtures.from_component.rst", "modules/generated/openpnm.models.phase.mixtures.mixing_rule.rst", "modules/generated/openpnm.models.phase.mixtures.mole_summation.rst", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.salinity.rst", "modules/generated/openpnm.models.phase.partition_coefficient.rst", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water.rst", "modules/generated/openpnm.models.phase.surface_tension.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb.rst", "modules/generated/openpnm.models.phase.surface_tension.water_correlation.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation.rst", "modules/generated/openpnm.models.phase.vapor_pressure.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk.rst", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation.rst", "modules/generated/openpnm.models.phase.viscosity.rst", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls.rst", "modules/generated/openpnm.models.phase.viscosity.water_correlation.rst", "modules/generated/openpnm.models.physics.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif.rst", "modules/generated/openpnm.models.physics.capillary_pressure.rst", "modules/generated/openpnm.models.physics.capillary_pressure.purcell.rst", "modules/generated/openpnm.models.physics.capillary_pressure.washburn.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion.rst", "modules/generated/openpnm.models.physics.electrical_conductance.rst", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical.rst", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt.rst", "modules/generated/openpnm.models.physics.meniscus.rst", "modules/generated/openpnm.models.physics.meniscus.general_toroidal.rst", "modules/generated/openpnm.models.physics.meniscus.purcell.rst", "modules/generated/openpnm.models.physics.meniscus.sinusoidal.rst", "modules/generated/openpnm.models.physics.multiphase.rst", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance.rst", "modules/generated/openpnm.models.physics.multiphase.late_filling.rst", "modules/generated/openpnm.models.physics.source_terms.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage.rst", "modules/generated/openpnm.models.physics.source_terms.exponential.rst", "modules/generated/openpnm.models.physics.source_terms.general_symbolic.rst", "modules/generated/openpnm.models.physics.source_terms.linear.rst", "modules/generated/openpnm.models.physics.source_terms.logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.natural_exponential.rst", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.power_law.rst", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics.rst", "modules/generated/openpnm.models.physics.thermal_conductance.rst", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal.rst", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors.rst", "modules/generated/openpnm.network.rst", "modules/generated/openpnm.network.BodyCenteredCubic.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.BodyCenteredCubic.clear.rst", "modules/generated/openpnm.network.BodyCenteredCubic.copy.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.items.rst", "modules/generated/openpnm.network.BodyCenteredCubic.keys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.labels.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pop.rst", "modules/generated/openpnm.network.BodyCenteredCubic.popitem.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.props.rst", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.BodyCenteredCubic.run_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.set_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.BodyCenteredCubic.throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.BodyCenteredCubic.update.rst", "modules/generated/openpnm.network.BodyCenteredCubic.values.rst", "modules/generated/openpnm.network.Cubic.rst", "modules/generated/openpnm.network.Cubic.add_boundary_pores.rst", "modules/generated/openpnm.network.Cubic.add_model.rst", "modules/generated/openpnm.network.Cubic.add_model_collection.rst", "modules/generated/openpnm.network.Cubic.clear.rst", "modules/generated/openpnm.network.Cubic.copy.rst", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.filter_by_label.rst", "modules/generated/openpnm.network.Cubic.find_connected_pores.rst", "modules/generated/openpnm.network.Cubic.find_connecting_throat.rst", "modules/generated/openpnm.network.Cubic.find_nearby_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.Cubic.fromkeys.rst", "modules/generated/openpnm.network.Cubic.get.rst", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.get_conduit_data.rst", "modules/generated/openpnm.network.Cubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.interpolate_data.rst", "modules/generated/openpnm.network.Cubic.items.rst", "modules/generated/openpnm.network.Cubic.keys.rst", "modules/generated/openpnm.network.Cubic.labels.rst", "modules/generated/openpnm.network.Cubic.num_neighbors.rst", "modules/generated/openpnm.network.Cubic.num_pores.rst", "modules/generated/openpnm.network.Cubic.num_throats.rst", "modules/generated/openpnm.network.Cubic.pop.rst", "modules/generated/openpnm.network.Cubic.popitem.rst", "modules/generated/openpnm.network.Cubic.pores.rst", "modules/generated/openpnm.network.Cubic.props.rst", "modules/generated/openpnm.network.Cubic.regenerate_models.rst", "modules/generated/openpnm.network.Cubic.run_model.rst", "modules/generated/openpnm.network.Cubic.set_label.rst", "modules/generated/openpnm.network.Cubic.setdefault.rst", "modules/generated/openpnm.network.Cubic.throats.rst", "modules/generated/openpnm.network.Cubic.to_indices.rst", "modules/generated/openpnm.network.Cubic.to_mask.rst", "modules/generated/openpnm.network.Cubic.update.rst", "modules/generated/openpnm.network.Cubic.values.rst", "modules/generated/openpnm.network.CubicTemplate.rst", "modules/generated/openpnm.network.CubicTemplate.add_model.rst", "modules/generated/openpnm.network.CubicTemplate.add_model_collection.rst", "modules/generated/openpnm.network.CubicTemplate.clear.rst", "modules/generated/openpnm.network.CubicTemplate.copy.rst", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.filter_by_label.rst", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat.rst", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats.rst", "modules/generated/openpnm.network.CubicTemplate.fromkeys.rst", "modules/generated/openpnm.network.CubicTemplate.get.rst", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data.rst", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.interpolate_data.rst", "modules/generated/openpnm.network.CubicTemplate.items.rst", "modules/generated/openpnm.network.CubicTemplate.keys.rst", "modules/generated/openpnm.network.CubicTemplate.labels.rst", "modules/generated/openpnm.network.CubicTemplate.num_neighbors.rst", "modules/generated/openpnm.network.CubicTemplate.num_pores.rst", "modules/generated/openpnm.network.CubicTemplate.num_throats.rst", "modules/generated/openpnm.network.CubicTemplate.pop.rst", "modules/generated/openpnm.network.CubicTemplate.popitem.rst", "modules/generated/openpnm.network.CubicTemplate.pores.rst", "modules/generated/openpnm.network.CubicTemplate.props.rst", "modules/generated/openpnm.network.CubicTemplate.regenerate_models.rst", "modules/generated/openpnm.network.CubicTemplate.run_model.rst", "modules/generated/openpnm.network.CubicTemplate.set_label.rst", "modules/generated/openpnm.network.CubicTemplate.setdefault.rst", "modules/generated/openpnm.network.CubicTemplate.throats.rst", "modules/generated/openpnm.network.CubicTemplate.to_indices.rst", "modules/generated/openpnm.network.CubicTemplate.to_mask.rst", "modules/generated/openpnm.network.CubicTemplate.update.rst", "modules/generated/openpnm.network.CubicTemplate.values.rst", "modules/generated/openpnm.network.Delaunay.rst", "modules/generated/openpnm.network.Delaunay.add_model.rst", "modules/generated/openpnm.network.Delaunay.add_model_collection.rst", "modules/generated/openpnm.network.Delaunay.clear.rst", "modules/generated/openpnm.network.Delaunay.copy.rst", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.filter_by_label.rst", "modules/generated/openpnm.network.Delaunay.find_connected_pores.rst", "modules/generated/openpnm.network.Delaunay.find_connecting_throat.rst", "modules/generated/openpnm.network.Delaunay.find_nearby_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats.rst", "modules/generated/openpnm.network.Delaunay.fromkeys.rst", "modules/generated/openpnm.network.Delaunay.get.rst", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.get_conduit_data.rst", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.interpolate_data.rst", "modules/generated/openpnm.network.Delaunay.items.rst", "modules/generated/openpnm.network.Delaunay.keys.rst", "modules/generated/openpnm.network.Delaunay.labels.rst", "modules/generated/openpnm.network.Delaunay.num_neighbors.rst", "modules/generated/openpnm.network.Delaunay.num_pores.rst", "modules/generated/openpnm.network.Delaunay.num_throats.rst", "modules/generated/openpnm.network.Delaunay.pop.rst", "modules/generated/openpnm.network.Delaunay.popitem.rst", "modules/generated/openpnm.network.Delaunay.pores.rst", "modules/generated/openpnm.network.Delaunay.props.rst", "modules/generated/openpnm.network.Delaunay.regenerate_models.rst", "modules/generated/openpnm.network.Delaunay.run_model.rst", "modules/generated/openpnm.network.Delaunay.set_label.rst", "modules/generated/openpnm.network.Delaunay.setdefault.rst", "modules/generated/openpnm.network.Delaunay.throats.rst", "modules/generated/openpnm.network.Delaunay.to_indices.rst", "modules/generated/openpnm.network.Delaunay.to_mask.rst", "modules/generated/openpnm.network.Delaunay.update.rst", "modules/generated/openpnm.network.Delaunay.values.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.items.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.props.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.update.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.values.rst", "modules/generated/openpnm.network.Demo.rst", "modules/generated/openpnm.network.Demo.add_boundary_pores.rst", "modules/generated/openpnm.network.Demo.add_model.rst", "modules/generated/openpnm.network.Demo.add_model_collection.rst", "modules/generated/openpnm.network.Demo.clear.rst", "modules/generated/openpnm.network.Demo.copy.rst", "modules/generated/openpnm.network.Demo.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.create_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.filter_by_label.rst", "modules/generated/openpnm.network.Demo.find_connected_pores.rst", "modules/generated/openpnm.network.Demo.find_connecting_throat.rst", "modules/generated/openpnm.network.Demo.find_nearby_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_throats.rst", "modules/generated/openpnm.network.Demo.fromkeys.rst", "modules/generated/openpnm.network.Demo.get.rst", "modules/generated/openpnm.network.Demo.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.get_conduit_data.rst", "modules/generated/openpnm.network.Demo.get_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.interpolate_data.rst", "modules/generated/openpnm.network.Demo.items.rst", "modules/generated/openpnm.network.Demo.keys.rst", "modules/generated/openpnm.network.Demo.labels.rst", "modules/generated/openpnm.network.Demo.num_neighbors.rst", "modules/generated/openpnm.network.Demo.num_pores.rst", "modules/generated/openpnm.network.Demo.num_throats.rst", "modules/generated/openpnm.network.Demo.pop.rst", "modules/generated/openpnm.network.Demo.popitem.rst", "modules/generated/openpnm.network.Demo.pores.rst", "modules/generated/openpnm.network.Demo.props.rst", "modules/generated/openpnm.network.Demo.regenerate_models.rst", "modules/generated/openpnm.network.Demo.run_model.rst", "modules/generated/openpnm.network.Demo.set_label.rst", "modules/generated/openpnm.network.Demo.setdefault.rst", "modules/generated/openpnm.network.Demo.throats.rst", "modules/generated/openpnm.network.Demo.to_indices.rst", "modules/generated/openpnm.network.Demo.to_mask.rst", "modules/generated/openpnm.network.Demo.update.rst", "modules/generated/openpnm.network.Demo.values.rst", "modules/generated/openpnm.network.FaceCenteredCubic.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.FaceCenteredCubic.clear.rst", "modules/generated/openpnm.network.FaceCenteredCubic.copy.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.items.rst", "modules/generated/openpnm.network.FaceCenteredCubic.keys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.labels.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pop.rst", "modules/generated/openpnm.network.FaceCenteredCubic.popitem.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.props.rst", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.FaceCenteredCubic.run_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.set_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.FaceCenteredCubic.throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.FaceCenteredCubic.update.rst", "modules/generated/openpnm.network.FaceCenteredCubic.values.rst", "modules/generated/openpnm.network.Network.rst", "modules/generated/openpnm.network.Network.add_model.rst", "modules/generated/openpnm.network.Network.add_model_collection.rst", "modules/generated/openpnm.network.Network.clear.rst", "modules/generated/openpnm.network.Network.copy.rst", "modules/generated/openpnm.network.Network.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.create_incidence_matrix.rst", "modules/generated/openpnm.network.Network.filter_by_label.rst", "modules/generated/openpnm.network.Network.find_connected_pores.rst", "modules/generated/openpnm.network.Network.find_connecting_throat.rst", "modules/generated/openpnm.network.Network.find_nearby_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_throats.rst", "modules/generated/openpnm.network.Network.fromkeys.rst", "modules/generated/openpnm.network.Network.get.rst", "modules/generated/openpnm.network.Network.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.get_conduit_data.rst", "modules/generated/openpnm.network.Network.get_incidence_matrix.rst", "modules/generated/openpnm.network.Network.interpolate_data.rst", "modules/generated/openpnm.network.Network.items.rst", "modules/generated/openpnm.network.Network.keys.rst", "modules/generated/openpnm.network.Network.labels.rst", "modules/generated/openpnm.network.Network.num_neighbors.rst", "modules/generated/openpnm.network.Network.num_pores.rst", "modules/generated/openpnm.network.Network.num_throats.rst", "modules/generated/openpnm.network.Network.pop.rst", "modules/generated/openpnm.network.Network.popitem.rst", "modules/generated/openpnm.network.Network.pores.rst", "modules/generated/openpnm.network.Network.props.rst", "modules/generated/openpnm.network.Network.regenerate_models.rst", "modules/generated/openpnm.network.Network.run_model.rst", "modules/generated/openpnm.network.Network.set_label.rst", "modules/generated/openpnm.network.Network.setdefault.rst", "modules/generated/openpnm.network.Network.throats.rst", "modules/generated/openpnm.network.Network.to_indices.rst", "modules/generated/openpnm.network.Network.to_mask.rst", "modules/generated/openpnm.network.Network.update.rst", "modules/generated/openpnm.network.Network.values.rst", "modules/generated/openpnm.network.Voronoi.rst", "modules/generated/openpnm.network.Voronoi.add_model.rst", "modules/generated/openpnm.network.Voronoi.add_model_collection.rst", "modules/generated/openpnm.network.Voronoi.clear.rst", "modules/generated/openpnm.network.Voronoi.copy.rst", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.filter_by_label.rst", "modules/generated/openpnm.network.Voronoi.find_connected_pores.rst", "modules/generated/openpnm.network.Voronoi.find_connecting_throat.rst", "modules/generated/openpnm.network.Voronoi.find_nearby_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats.rst", "modules/generated/openpnm.network.Voronoi.fromkeys.rst", "modules/generated/openpnm.network.Voronoi.get.rst", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.get_conduit_data.rst", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.interpolate_data.rst", "modules/generated/openpnm.network.Voronoi.items.rst", "modules/generated/openpnm.network.Voronoi.keys.rst", "modules/generated/openpnm.network.Voronoi.labels.rst", "modules/generated/openpnm.network.Voronoi.num_neighbors.rst", "modules/generated/openpnm.network.Voronoi.num_pores.rst", "modules/generated/openpnm.network.Voronoi.num_throats.rst", "modules/generated/openpnm.network.Voronoi.pop.rst", "modules/generated/openpnm.network.Voronoi.popitem.rst", "modules/generated/openpnm.network.Voronoi.pores.rst", "modules/generated/openpnm.network.Voronoi.props.rst", "modules/generated/openpnm.network.Voronoi.regenerate_models.rst", "modules/generated/openpnm.network.Voronoi.run_model.rst", "modules/generated/openpnm.network.Voronoi.set_label.rst", "modules/generated/openpnm.network.Voronoi.setdefault.rst", "modules/generated/openpnm.network.Voronoi.throats.rst", "modules/generated/openpnm.network.Voronoi.to_indices.rst", "modules/generated/openpnm.network.Voronoi.to_mask.rst", "modules/generated/openpnm.network.Voronoi.update.rst", "modules/generated/openpnm.network.Voronoi.values.rst", "modules/generated/openpnm.phase.rst", "modules/generated/openpnm.phase.Air.rst", "modules/generated/openpnm.phase.Air.add_model.rst", "modules/generated/openpnm.phase.Air.add_model_collection.rst", "modules/generated/openpnm.phase.Air.clear.rst", "modules/generated/openpnm.phase.Air.copy.rst", "modules/generated/openpnm.phase.Air.filter_by_label.rst", "modules/generated/openpnm.phase.Air.fromkeys.rst", "modules/generated/openpnm.phase.Air.get.rst", "modules/generated/openpnm.phase.Air.get_conduit_data.rst", "modules/generated/openpnm.phase.Air.interpolate_data.rst", "modules/generated/openpnm.phase.Air.items.rst", "modules/generated/openpnm.phase.Air.keys.rst", "modules/generated/openpnm.phase.Air.labels.rst", "modules/generated/openpnm.phase.Air.num_pores.rst", "modules/generated/openpnm.phase.Air.num_throats.rst", "modules/generated/openpnm.phase.Air.pop.rst", "modules/generated/openpnm.phase.Air.popitem.rst", "modules/generated/openpnm.phase.Air.pores.rst", "modules/generated/openpnm.phase.Air.props.rst", "modules/generated/openpnm.phase.Air.regenerate_models.rst", "modules/generated/openpnm.phase.Air.run_model.rst", "modules/generated/openpnm.phase.Air.set_label.rst", "modules/generated/openpnm.phase.Air.setdefault.rst", "modules/generated/openpnm.phase.Air.throats.rst", "modules/generated/openpnm.phase.Air.to_indices.rst", "modules/generated/openpnm.phase.Air.to_mask.rst", "modules/generated/openpnm.phase.Air.update.rst", "modules/generated/openpnm.phase.Air.values.rst", "modules/generated/openpnm.phase.BinaryGas.rst", "modules/generated/openpnm.phase.BinaryGas.add_comp.rst", "modules/generated/openpnm.phase.BinaryGas.add_model.rst", "modules/generated/openpnm.phase.BinaryGas.add_model_collection.rst", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health.rst", "modules/generated/openpnm.phase.BinaryGas.clear.rst", "modules/generated/openpnm.phase.BinaryGas.copy.rst", "modules/generated/openpnm.phase.BinaryGas.filter_by_label.rst", "modules/generated/openpnm.phase.BinaryGas.fromkeys.rst", "modules/generated/openpnm.phase.BinaryGas.get.rst", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals.rst", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data.rst", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals.rst", "modules/generated/openpnm.phase.BinaryGas.interpolate_data.rst", "modules/generated/openpnm.phase.BinaryGas.items.rst", "modules/generated/openpnm.phase.BinaryGas.keys.rst", "modules/generated/openpnm.phase.BinaryGas.labels.rst", "modules/generated/openpnm.phase.BinaryGas.num_pores.rst", "modules/generated/openpnm.phase.BinaryGas.num_throats.rst", "modules/generated/openpnm.phase.BinaryGas.pop.rst", "modules/generated/openpnm.phase.BinaryGas.popitem.rst", "modules/generated/openpnm.phase.BinaryGas.pores.rst", "modules/generated/openpnm.phase.BinaryGas.props.rst", "modules/generated/openpnm.phase.BinaryGas.regenerate_models.rst", "modules/generated/openpnm.phase.BinaryGas.remove_comp.rst", "modules/generated/openpnm.phase.BinaryGas.run_model.rst", "modules/generated/openpnm.phase.BinaryGas.set_label.rst", "modules/generated/openpnm.phase.BinaryGas.setdefault.rst", "modules/generated/openpnm.phase.BinaryGas.throats.rst", "modules/generated/openpnm.phase.BinaryGas.to_indices.rst", "modules/generated/openpnm.phase.BinaryGas.to_mask.rst", "modules/generated/openpnm.phase.BinaryGas.update.rst", "modules/generated/openpnm.phase.BinaryGas.values.rst", "modules/generated/openpnm.phase.BinaryGas.y.rst", "modules/generated/openpnm.phase.GasMixture.rst", "modules/generated/openpnm.phase.GasMixture.add_comp.rst", "modules/generated/openpnm.phase.GasMixture.add_model.rst", "modules/generated/openpnm.phase.GasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.GasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.GasMixture.clear.rst", "modules/generated/openpnm.phase.GasMixture.copy.rst", "modules/generated/openpnm.phase.GasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.GasMixture.fromkeys.rst", "modules/generated/openpnm.phase.GasMixture.get.rst", "modules/generated/openpnm.phase.GasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.GasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.GasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.GasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.GasMixture.items.rst", "modules/generated/openpnm.phase.GasMixture.keys.rst", "modules/generated/openpnm.phase.GasMixture.labels.rst", "modules/generated/openpnm.phase.GasMixture.num_pores.rst", "modules/generated/openpnm.phase.GasMixture.num_throats.rst", "modules/generated/openpnm.phase.GasMixture.pop.rst", "modules/generated/openpnm.phase.GasMixture.popitem.rst", "modules/generated/openpnm.phase.GasMixture.pores.rst", "modules/generated/openpnm.phase.GasMixture.props.rst", "modules/generated/openpnm.phase.GasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.GasMixture.remove_comp.rst", "modules/generated/openpnm.phase.GasMixture.run_model.rst", "modules/generated/openpnm.phase.GasMixture.set_label.rst", "modules/generated/openpnm.phase.GasMixture.setdefault.rst", "modules/generated/openpnm.phase.GasMixture.throats.rst", "modules/generated/openpnm.phase.GasMixture.to_indices.rst", "modules/generated/openpnm.phase.GasMixture.to_mask.rst", "modules/generated/openpnm.phase.GasMixture.update.rst", "modules/generated/openpnm.phase.GasMixture.values.rst", "modules/generated/openpnm.phase.GasMixture.y.rst", "modules/generated/openpnm.phase.LiquidMixture.rst", "modules/generated/openpnm.phase.LiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.LiquidMixture.clear.rst", "modules/generated/openpnm.phase.LiquidMixture.copy.rst", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.LiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.LiquidMixture.get.rst", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.LiquidMixture.items.rst", "modules/generated/openpnm.phase.LiquidMixture.keys.rst", "modules/generated/openpnm.phase.LiquidMixture.labels.rst", "modules/generated/openpnm.phase.LiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.LiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.LiquidMixture.pop.rst", "modules/generated/openpnm.phase.LiquidMixture.popitem.rst", "modules/generated/openpnm.phase.LiquidMixture.pores.rst", "modules/generated/openpnm.phase.LiquidMixture.props.rst", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.LiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.run_model.rst", "modules/generated/openpnm.phase.LiquidMixture.set_label.rst", "modules/generated/openpnm.phase.LiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.LiquidMixture.throats.rst", "modules/generated/openpnm.phase.LiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.LiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.LiquidMixture.update.rst", "modules/generated/openpnm.phase.LiquidMixture.values.rst", "modules/generated/openpnm.phase.LiquidMixture.x.rst", "modules/generated/openpnm.phase.Mercury.rst", "modules/generated/openpnm.phase.Mercury.add_model.rst", "modules/generated/openpnm.phase.Mercury.add_model_collection.rst", "modules/generated/openpnm.phase.Mercury.clear.rst", "modules/generated/openpnm.phase.Mercury.copy.rst", "modules/generated/openpnm.phase.Mercury.filter_by_label.rst", "modules/generated/openpnm.phase.Mercury.fromkeys.rst", "modules/generated/openpnm.phase.Mercury.get.rst", "modules/generated/openpnm.phase.Mercury.get_conduit_data.rst", "modules/generated/openpnm.phase.Mercury.interpolate_data.rst", "modules/generated/openpnm.phase.Mercury.items.rst", "modules/generated/openpnm.phase.Mercury.keys.rst", "modules/generated/openpnm.phase.Mercury.labels.rst", "modules/generated/openpnm.phase.Mercury.num_pores.rst", "modules/generated/openpnm.phase.Mercury.num_throats.rst", "modules/generated/openpnm.phase.Mercury.pop.rst", "modules/generated/openpnm.phase.Mercury.popitem.rst", "modules/generated/openpnm.phase.Mercury.pores.rst", "modules/generated/openpnm.phase.Mercury.props.rst", "modules/generated/openpnm.phase.Mercury.regenerate_models.rst", "modules/generated/openpnm.phase.Mercury.run_model.rst", "modules/generated/openpnm.phase.Mercury.set_label.rst", "modules/generated/openpnm.phase.Mercury.setdefault.rst", "modules/generated/openpnm.phase.Mercury.throats.rst", "modules/generated/openpnm.phase.Mercury.to_indices.rst", "modules/generated/openpnm.phase.Mercury.to_mask.rst", "modules/generated/openpnm.phase.Mercury.update.rst", "modules/generated/openpnm.phase.Mercury.values.rst", "modules/generated/openpnm.phase.Mixture.rst", "modules/generated/openpnm.phase.Mixture.add_comp.rst", "modules/generated/openpnm.phase.Mixture.add_model.rst", "modules/generated/openpnm.phase.Mixture.add_model_collection.rst", "modules/generated/openpnm.phase.Mixture.check_mixture_health.rst", "modules/generated/openpnm.phase.Mixture.clear.rst", "modules/generated/openpnm.phase.Mixture.copy.rst", "modules/generated/openpnm.phase.Mixture.filter_by_label.rst", "modules/generated/openpnm.phase.Mixture.fromkeys.rst", "modules/generated/openpnm.phase.Mixture.get.rst", "modules/generated/openpnm.phase.Mixture.get_comp_vals.rst", "modules/generated/openpnm.phase.Mixture.get_conduit_data.rst", "modules/generated/openpnm.phase.Mixture.get_mix_vals.rst", "modules/generated/openpnm.phase.Mixture.interpolate_data.rst", "modules/generated/openpnm.phase.Mixture.items.rst", "modules/generated/openpnm.phase.Mixture.keys.rst", "modules/generated/openpnm.phase.Mixture.labels.rst", "modules/generated/openpnm.phase.Mixture.num_pores.rst", "modules/generated/openpnm.phase.Mixture.num_throats.rst", "modules/generated/openpnm.phase.Mixture.pop.rst", "modules/generated/openpnm.phase.Mixture.popitem.rst", "modules/generated/openpnm.phase.Mixture.pores.rst", "modules/generated/openpnm.phase.Mixture.props.rst", "modules/generated/openpnm.phase.Mixture.regenerate_models.rst", "modules/generated/openpnm.phase.Mixture.remove_comp.rst", "modules/generated/openpnm.phase.Mixture.run_model.rst", "modules/generated/openpnm.phase.Mixture.set_label.rst", "modules/generated/openpnm.phase.Mixture.setdefault.rst", "modules/generated/openpnm.phase.Mixture.throats.rst", "modules/generated/openpnm.phase.Mixture.to_indices.rst", "modules/generated/openpnm.phase.Mixture.to_mask.rst", "modules/generated/openpnm.phase.Mixture.update.rst", "modules/generated/openpnm.phase.Mixture.values.rst", "modules/generated/openpnm.phase.Phase.rst", "modules/generated/openpnm.phase.Phase.add_model.rst", "modules/generated/openpnm.phase.Phase.add_model_collection.rst", "modules/generated/openpnm.phase.Phase.clear.rst", "modules/generated/openpnm.phase.Phase.copy.rst", "modules/generated/openpnm.phase.Phase.filter_by_label.rst", "modules/generated/openpnm.phase.Phase.fromkeys.rst", "modules/generated/openpnm.phase.Phase.get.rst", "modules/generated/openpnm.phase.Phase.get_conduit_data.rst", "modules/generated/openpnm.phase.Phase.interpolate_data.rst", "modules/generated/openpnm.phase.Phase.items.rst", "modules/generated/openpnm.phase.Phase.keys.rst", "modules/generated/openpnm.phase.Phase.labels.rst", "modules/generated/openpnm.phase.Phase.num_pores.rst", "modules/generated/openpnm.phase.Phase.num_throats.rst", "modules/generated/openpnm.phase.Phase.pop.rst", "modules/generated/openpnm.phase.Phase.popitem.rst", "modules/generated/openpnm.phase.Phase.pores.rst", "modules/generated/openpnm.phase.Phase.props.rst", "modules/generated/openpnm.phase.Phase.regenerate_models.rst", "modules/generated/openpnm.phase.Phase.run_model.rst", "modules/generated/openpnm.phase.Phase.set_label.rst", "modules/generated/openpnm.phase.Phase.setdefault.rst", "modules/generated/openpnm.phase.Phase.throats.rst", "modules/generated/openpnm.phase.Phase.to_indices.rst", "modules/generated/openpnm.phase.Phase.to_mask.rst", "modules/generated/openpnm.phase.Phase.update.rst", "modules/generated/openpnm.phase.Phase.values.rst", "modules/generated/openpnm.phase.Species.rst", "modules/generated/openpnm.phase.Species.add_model.rst", "modules/generated/openpnm.phase.Species.add_model_collection.rst", "modules/generated/openpnm.phase.Species.clear.rst", "modules/generated/openpnm.phase.Species.copy.rst", "modules/generated/openpnm.phase.Species.filter_by_label.rst", "modules/generated/openpnm.phase.Species.fromkeys.rst", "modules/generated/openpnm.phase.Species.get.rst", "modules/generated/openpnm.phase.Species.get_conduit_data.rst", "modules/generated/openpnm.phase.Species.interpolate_data.rst", "modules/generated/openpnm.phase.Species.items.rst", "modules/generated/openpnm.phase.Species.keys.rst", "modules/generated/openpnm.phase.Species.labels.rst", "modules/generated/openpnm.phase.Species.num_pores.rst", "modules/generated/openpnm.phase.Species.num_throats.rst", "modules/generated/openpnm.phase.Species.pop.rst", "modules/generated/openpnm.phase.Species.popitem.rst", "modules/generated/openpnm.phase.Species.pores.rst", "modules/generated/openpnm.phase.Species.props.rst", "modules/generated/openpnm.phase.Species.regenerate_models.rst", "modules/generated/openpnm.phase.Species.run_model.rst", "modules/generated/openpnm.phase.Species.set_label.rst", "modules/generated/openpnm.phase.Species.setdefault.rst", "modules/generated/openpnm.phase.Species.throats.rst", "modules/generated/openpnm.phase.Species.to_indices.rst", "modules/generated/openpnm.phase.Species.to_mask.rst", "modules/generated/openpnm.phase.Species.update.rst", "modules/generated/openpnm.phase.Species.values.rst", "modules/generated/openpnm.phase.StandardGas.rst", "modules/generated/openpnm.phase.StandardGas.add_model.rst", "modules/generated/openpnm.phase.StandardGas.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGas.clear.rst", "modules/generated/openpnm.phase.StandardGas.copy.rst", "modules/generated/openpnm.phase.StandardGas.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGas.fromkeys.rst", "modules/generated/openpnm.phase.StandardGas.get.rst", "modules/generated/openpnm.phase.StandardGas.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGas.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGas.items.rst", "modules/generated/openpnm.phase.StandardGas.keys.rst", "modules/generated/openpnm.phase.StandardGas.labels.rst", "modules/generated/openpnm.phase.StandardGas.num_pores.rst", "modules/generated/openpnm.phase.StandardGas.num_throats.rst", "modules/generated/openpnm.phase.StandardGas.pop.rst", "modules/generated/openpnm.phase.StandardGas.popitem.rst", "modules/generated/openpnm.phase.StandardGas.pores.rst", "modules/generated/openpnm.phase.StandardGas.props.rst", "modules/generated/openpnm.phase.StandardGas.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGas.run_model.rst", "modules/generated/openpnm.phase.StandardGas.set_label.rst", "modules/generated/openpnm.phase.StandardGas.setdefault.rst", "modules/generated/openpnm.phase.StandardGas.throats.rst", "modules/generated/openpnm.phase.StandardGas.to_indices.rst", "modules/generated/openpnm.phase.StandardGas.to_mask.rst", "modules/generated/openpnm.phase.StandardGas.update.rst", "modules/generated/openpnm.phase.StandardGas.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardGasMixture.clear.rst", "modules/generated/openpnm.phase.StandardGasMixture.copy.rst", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardGasMixture.get.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.items.rst", "modules/generated/openpnm.phase.StandardGasMixture.keys.rst", "modules/generated/openpnm.phase.StandardGasMixture.labels.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.pop.rst", "modules/generated/openpnm.phase.StandardGasMixture.popitem.rst", "modules/generated/openpnm.phase.StandardGasMixture.pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.props.rst", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.run_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.set_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardGasMixture.throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardGasMixture.update.rst", "modules/generated/openpnm.phase.StandardGasMixture.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.y.rst", "modules/generated/openpnm.phase.StandardLiquid.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquid.clear.rst", "modules/generated/openpnm.phase.StandardLiquid.copy.rst", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquid.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquid.get.rst", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquid.items.rst", "modules/generated/openpnm.phase.StandardLiquid.keys.rst", "modules/generated/openpnm.phase.StandardLiquid.labels.rst", "modules/generated/openpnm.phase.StandardLiquid.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquid.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquid.pop.rst", "modules/generated/openpnm.phase.StandardLiquid.popitem.rst", "modules/generated/openpnm.phase.StandardLiquid.pores.rst", "modules/generated/openpnm.phase.StandardLiquid.props.rst", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquid.run_model.rst", "modules/generated/openpnm.phase.StandardLiquid.set_label.rst", "modules/generated/openpnm.phase.StandardLiquid.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquid.throats.rst", "modules/generated/openpnm.phase.StandardLiquid.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquid.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquid.update.rst", "modules/generated/openpnm.phase.StandardLiquid.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.clear.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.copy.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.items.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.keys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.labels.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pop.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.props.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.update.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.x.rst", "modules/generated/openpnm.phase.Water.rst", "modules/generated/openpnm.phase.Water.add_model.rst", "modules/generated/openpnm.phase.Water.add_model_collection.rst", "modules/generated/openpnm.phase.Water.clear.rst", "modules/generated/openpnm.phase.Water.copy.rst", "modules/generated/openpnm.phase.Water.filter_by_label.rst", "modules/generated/openpnm.phase.Water.fromkeys.rst", "modules/generated/openpnm.phase.Water.get.rst", "modules/generated/openpnm.phase.Water.get_conduit_data.rst", "modules/generated/openpnm.phase.Water.interpolate_data.rst", "modules/generated/openpnm.phase.Water.items.rst", "modules/generated/openpnm.phase.Water.keys.rst", "modules/generated/openpnm.phase.Water.labels.rst", "modules/generated/openpnm.phase.Water.num_pores.rst", "modules/generated/openpnm.phase.Water.num_throats.rst", "modules/generated/openpnm.phase.Water.pop.rst", "modules/generated/openpnm.phase.Water.popitem.rst", "modules/generated/openpnm.phase.Water.pores.rst", "modules/generated/openpnm.phase.Water.props.rst", "modules/generated/openpnm.phase.Water.regenerate_models.rst", "modules/generated/openpnm.phase.Water.run_model.rst", "modules/generated/openpnm.phase.Water.set_label.rst", "modules/generated/openpnm.phase.Water.setdefault.rst", "modules/generated/openpnm.phase.Water.throats.rst", "modules/generated/openpnm.phase.Water.to_indices.rst", "modules/generated/openpnm.phase.Water.to_mask.rst", "modules/generated/openpnm.phase.Water.update.rst", "modules/generated/openpnm.phase.Water.values.rst", "modules/generated/openpnm.solvers.rst", "modules/generated/openpnm.solvers.BaseSolver.rst", "modules/generated/openpnm.solvers.BaseSolver.solve.rst", "modules/generated/openpnm.solvers.DirectSolver.rst", "modules/generated/openpnm.solvers.DirectSolver.solve.rst", "modules/generated/openpnm.solvers.IterativeSolver.rst", "modules/generated/openpnm.solvers.IterativeSolver.solve.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.solve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.solve.rst", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.rst", "modules/generated/openpnm.solvers.PyamgRugeStubenSolver.solve.rst", "modules/generated/openpnm.solvers.ScipyCG.rst", "modules/generated/openpnm.solvers.ScipyCG.solve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.solve.rst", "modules/generated/openpnm.topotools.rst", "modules/generated/openpnm.topotools.add_boundary_pores.rst", "modules/generated/openpnm.topotools.add_reservoir_pore.rst", "modules/generated/openpnm.topotools.bond_percolation.rst", "modules/generated/openpnm.topotools.clone_pores.rst", "modules/generated/openpnm.topotools.connect_pores.rst", "modules/generated/openpnm.topotools.conns_to_am.rst", "modules/generated/openpnm.topotools.dimensionality.rst", "modules/generated/openpnm.topotools.drop_sites.rst", "modules/generated/openpnm.topotools.extend.rst", "modules/generated/openpnm.topotools.filter_pores_by_z.rst", "modules/generated/openpnm.topotools.find_clusters.rst", "modules/generated/openpnm.topotools.find_connected_sites.rst", "modules/generated/openpnm.topotools.find_connecting_bonds.rst", "modules/generated/openpnm.topotools.find_interface_throats.rst", "modules/generated/openpnm.topotools.find_isolated_clusters.rst", "modules/generated/openpnm.topotools.find_neighbor_bonds.rst", "modules/generated/openpnm.topotools.find_neighbor_sites.rst", "modules/generated/openpnm.topotools.find_path.rst", "modules/generated/openpnm.topotools.find_surface_pores.rst", "modules/generated/openpnm.topotools.generate_base_points.rst", "modules/generated/openpnm.topotools.get_domain_area.rst", "modules/generated/openpnm.topotools.get_domain_length.rst", "modules/generated/openpnm.topotools.get_shape.rst", "modules/generated/openpnm.topotools.get_spacing.rst", "modules/generated/openpnm.topotools.hull_centroid.rst", "modules/generated/openpnm.topotools.is_fully_connected.rst", "modules/generated/openpnm.topotools.iscoplanar.rst", "modules/generated/openpnm.topotools.isoutside.rst", "modules/generated/openpnm.topotools.ispercolating.rst", "modules/generated/openpnm.topotools.issymmetric.rst", "modules/generated/openpnm.topotools.istriangular.rst", "modules/generated/openpnm.topotools.istril.rst", "modules/generated/openpnm.topotools.istriu.rst", "modules/generated/openpnm.topotools.label_faces.rst", "modules/generated/openpnm.topotools.merge_networks.rst", "modules/generated/openpnm.topotools.merge_pores.rst", "modules/generated/openpnm.topotools.reduce_coordination.rst", "modules/generated/openpnm.topotools.reflect_base_points.rst", "modules/generated/openpnm.topotools.rotate_coords.rst", "modules/generated/openpnm.topotools.shear_coords.rst", "modules/generated/openpnm.topotools.site_percolation.rst", "modules/generated/openpnm.topotools.stitch.rst", "modules/generated/openpnm.topotools.template_cylinder_annulus.rst", "modules/generated/openpnm.topotools.template_sphere_shell.rst", "modules/generated/openpnm.topotools.tri_to_am.rst", "modules/generated/openpnm.topotools.trim.rst", "modules/generated/openpnm.topotools.trim_disconnected_clusters.rst", "modules/generated/openpnm.topotools.vor_to_am.rst", "modules/generated/openpnm.utils.rst", "modules/generated/openpnm.utils.Docorator.rst", "modules/generated/openpnm.utils.Docorator.__call__.rst", "modules/generated/openpnm.utils.Docorator.dedent.rst", "modules/generated/openpnm.utils.Docorator.dedents.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s.rst", "modules/generated/openpnm.utils.Docorator.delete_params.rst", "modules/generated/openpnm.utils.Docorator.delete_params_s.rst", "modules/generated/openpnm.utils.Docorator.delete_types.rst", "modules/generated/openpnm.utils.Docorator.delete_types_s.rst", "modules/generated/openpnm.utils.Docorator.get_docstring.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summary.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf.rst", "modules/generated/openpnm.utils.Docorator.get_full_description.rst", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf.rst", "modules/generated/openpnm.utils.Docorator.get_sections.rst", "modules/generated/openpnm.utils.Docorator.get_sectionsf.rst", "modules/generated/openpnm.utils.Docorator.get_summary.rst", "modules/generated/openpnm.utils.Docorator.get_summaryf.rst", "modules/generated/openpnm.utils.Docorator.keep_params.rst", "modules/generated/openpnm.utils.Docorator.keep_params_s.rst", "modules/generated/openpnm.utils.Docorator.keep_types.rst", "modules/generated/openpnm.utils.Docorator.keep_types_s.rst", "modules/generated/openpnm.utils.Docorator.save_docstring.rst", "modules/generated/openpnm.utils.Docorator.with_indent.rst", "modules/generated/openpnm.utils.Docorator.with_indents.rst", "modules/generated/openpnm.utils.HealthDict.rst", "modules/generated/openpnm.utils.HealthDict.clear.rst", "modules/generated/openpnm.utils.HealthDict.copy.rst", "modules/generated/openpnm.utils.HealthDict.fromkeys.rst", "modules/generated/openpnm.utils.HealthDict.get.rst", "modules/generated/openpnm.utils.HealthDict.items.rst", "modules/generated/openpnm.utils.HealthDict.keys.rst", "modules/generated/openpnm.utils.HealthDict.pop.rst", "modules/generated/openpnm.utils.HealthDict.popitem.rst", "modules/generated/openpnm.utils.HealthDict.setdefault.rst", "modules/generated/openpnm.utils.HealthDict.update.rst", "modules/generated/openpnm.utils.HealthDict.values.rst", "modules/generated/openpnm.utils.NestedDict.rst", "modules/generated/openpnm.utils.NestedDict.clear.rst", "modules/generated/openpnm.utils.NestedDict.copy.rst", "modules/generated/openpnm.utils.NestedDict.fromkeys.rst", "modules/generated/openpnm.utils.NestedDict.get.rst", "modules/generated/openpnm.utils.NestedDict.items.rst", "modules/generated/openpnm.utils.NestedDict.keys.rst", "modules/generated/openpnm.utils.NestedDict.pop.rst", "modules/generated/openpnm.utils.NestedDict.popitem.rst", "modules/generated/openpnm.utils.NestedDict.setdefault.rst", "modules/generated/openpnm.utils.NestedDict.to_dict.rst", "modules/generated/openpnm.utils.NestedDict.unravel.rst", "modules/generated/openpnm.utils.NestedDict.update.rst", "modules/generated/openpnm.utils.NestedDict.values.rst", "modules/generated/openpnm.utils.PrintableDict.rst", "modules/generated/openpnm.utils.PrintableDict.clear.rst", "modules/generated/openpnm.utils.PrintableDict.copy.rst", "modules/generated/openpnm.utils.PrintableDict.fromkeys.rst", "modules/generated/openpnm.utils.PrintableDict.get.rst", "modules/generated/openpnm.utils.PrintableDict.items.rst", "modules/generated/openpnm.utils.PrintableDict.keys.rst", "modules/generated/openpnm.utils.PrintableDict.pop.rst", "modules/generated/openpnm.utils.PrintableDict.popitem.rst", "modules/generated/openpnm.utils.PrintableDict.setdefault.rst", "modules/generated/openpnm.utils.PrintableDict.update.rst", "modules/generated/openpnm.utils.PrintableDict.values.rst", "modules/generated/openpnm.utils.PrintableList.rst", "modules/generated/openpnm.utils.PrintableList.append.rst", "modules/generated/openpnm.utils.PrintableList.clear.rst", "modules/generated/openpnm.utils.PrintableList.copy.rst", "modules/generated/openpnm.utils.PrintableList.count.rst", "modules/generated/openpnm.utils.PrintableList.extend.rst", "modules/generated/openpnm.utils.PrintableList.index.rst", "modules/generated/openpnm.utils.PrintableList.insert.rst", "modules/generated/openpnm.utils.PrintableList.pop.rst", "modules/generated/openpnm.utils.PrintableList.remove.rst", "modules/generated/openpnm.utils.PrintableList.reverse.rst", "modules/generated/openpnm.utils.PrintableList.sort.rst", "modules/generated/openpnm.utils.Project.rst", "modules/generated/openpnm.utils.Project.append.rst", "modules/generated/openpnm.utils.Project.clear.rst", "modules/generated/openpnm.utils.Project.copy.rst", "modules/generated/openpnm.utils.Project.count.rst", "modules/generated/openpnm.utils.Project.extend.rst", "modules/generated/openpnm.utils.Project.index.rst", "modules/generated/openpnm.utils.Project.insert.rst", "modules/generated/openpnm.utils.Project.pop.rst", "modules/generated/openpnm.utils.Project.remove.rst", "modules/generated/openpnm.utils.Project.reverse.rst", "modules/generated/openpnm.utils.Project.sort.rst", "modules/generated/openpnm.utils.SettingsAttr.rst", "modules/generated/openpnm.utils.TypedList.rst", "modules/generated/openpnm.utils.TypedList.append.rst", "modules/generated/openpnm.utils.TypedList.clear.rst", "modules/generated/openpnm.utils.TypedList.copy.rst", "modules/generated/openpnm.utils.TypedList.count.rst", "modules/generated/openpnm.utils.TypedList.extend.rst", "modules/generated/openpnm.utils.TypedList.index.rst", "modules/generated/openpnm.utils.TypedList.insert.rst", "modules/generated/openpnm.utils.TypedList.pop.rst", "modules/generated/openpnm.utils.TypedList.remove.rst", "modules/generated/openpnm.utils.TypedList.reverse.rst", "modules/generated/openpnm.utils.TypedList.sort.rst", "modules/generated/openpnm.utils.TypedMixin.rst", "modules/generated/openpnm.utils.TypedSet.rst", "modules/generated/openpnm.utils.TypedSet.add.rst", "modules/generated/openpnm.utils.TypedSet.clear.rst", "modules/generated/openpnm.utils.TypedSet.copy.rst", "modules/generated/openpnm.utils.TypedSet.difference.rst", "modules/generated/openpnm.utils.TypedSet.difference_update.rst", "modules/generated/openpnm.utils.TypedSet.discard.rst", "modules/generated/openpnm.utils.TypedSet.intersection.rst", "modules/generated/openpnm.utils.TypedSet.intersection_update.rst", "modules/generated/openpnm.utils.TypedSet.isdisjoint.rst", "modules/generated/openpnm.utils.TypedSet.issubset.rst", "modules/generated/openpnm.utils.TypedSet.issuperset.rst", "modules/generated/openpnm.utils.TypedSet.pop.rst", "modules/generated/openpnm.utils.TypedSet.remove.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update.rst", "modules/generated/openpnm.utils.TypedSet.union.rst", "modules/generated/openpnm.utils.TypedSet.update.rst", "modules/generated/openpnm.utils.Workspace.rst", "modules/generated/openpnm.utils.Workspace.clear.rst", "modules/generated/openpnm.utils.Workspace.close_project.rst", "modules/generated/openpnm.utils.Workspace.copy.rst", "modules/generated/openpnm.utils.Workspace.copy_project.rst", "modules/generated/openpnm.utils.Workspace.fromkeys.rst", "modules/generated/openpnm.utils.Workspace.get.rst", "modules/generated/openpnm.utils.Workspace.items.rst", "modules/generated/openpnm.utils.Workspace.keys.rst", "modules/generated/openpnm.utils.Workspace.load_project.rst", "modules/generated/openpnm.utils.Workspace.load_workspace.rst", "modules/generated/openpnm.utils.Workspace.new_project.rst", "modules/generated/openpnm.utils.Workspace.pop.rst", "modules/generated/openpnm.utils.Workspace.popitem.rst", "modules/generated/openpnm.utils.Workspace.save_project.rst", "modules/generated/openpnm.utils.Workspace.save_workspace.rst", "modules/generated/openpnm.utils.Workspace.setdefault.rst", "modules/generated/openpnm.utils.Workspace.update.rst", "modules/generated/openpnm.utils.Workspace.values.rst", "modules/generated/openpnm.utils.check_data_health.rst", "modules/generated/openpnm.utils.check_network_health.rst", "modules/generated/openpnm.utils.dict_to_struct.rst", "modules/generated/openpnm.utils.flat_list.rst", "modules/generated/openpnm.utils.get_mixture_model_args.rst", "modules/generated/openpnm.utils.get_printable_labels.rst", "modules/generated/openpnm.utils.get_printable_props.rst", "modules/generated/openpnm.utils.ignore_warnings.rst", "modules/generated/openpnm.utils.is_symmetric.rst", "modules/generated/openpnm.utils.is_transient.rst", "modules/generated/openpnm.utils.is_valid_propname.rst", "modules/generated/openpnm.utils.methods_to_table.rst", "modules/generated/openpnm.utils.models_to_table.rst", "modules/generated/openpnm.utils.sanitize_dict.rst", "modules/generated/openpnm.utils.struct_to_dict.rst", "modules/generated/openpnm.visualization.rst", "modules/generated/openpnm.visualization.draw_conduit.rst", "modules/generated/openpnm.visualization.generate_voxel_image.rst", "modules/generated/openpnm.visualization.plot_connections.rst", "modules/generated/openpnm.visualization.plot_coordinates.rst", "modules/generated/openpnm.visualization.plot_networkx.rst", "modules/generated/openpnm.visualization.plot_notebook.rst", "modules/generated/openpnm.visualization.plot_tutorial.rst", "modules/generated/openpnm.visualization.plot_vispy.rst", "modules/generated/openpnm.visualization.set_mpl_style.rst", "modules/index.rst"], "titles": ["Applications", "Examples", "Reference", "10 Steps to Learn OpenPNM", "Predicting absolute permeability", "Adjusting Pore Size Distributions", "Predicting dispersion coefficient", "Finding Effective Diffusivity and Tortuosity of a Network", "Predicting Formation Factor", "Calibrating a Network Using Mercury Intrusion Data", "Import an Extracted Network and Predict Transport Properties", "Predicting Porosity", "Obtaining Relative Diffusivity Curves", "Predicting relative permeability", "Contibuted Examples", "Getting Started", "Pore-Scale Models", "Settings Attribute Machinery", "The Workspace and Projects", "Managing Clustered Networks", "Available Matrix Solvers", "Steady State Transport", "Explanation of Units", "Reactive Transport", "Size Factors and Transport Conductance", "Transient Transport", "Numerical Python Primer", "Generating Networks and Quick Visualization", "Storage of Network Data and Topology", "Network Representation, Queries, and Manipulation", "Assigning Geometric Properties", "Using Labels and Defining Domains", "Creating Phases", "Simulating Single Phase Transport", "Simulating Invasion", "Visualization options", "Pore Network Modeling Framework in Python", "Installation", "algorithms", "AdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Algorithm", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "set_BC", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Drainage", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FourierConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "InvasionPercolation", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "OhmicConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "ReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StokesFlow", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientAdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientFickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientFourierConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Transport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "contrib", "MultiPhase", "add_model", "add_model_collection", "add_phases", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_binary_partition_coef", "set_label", "set_occupancy", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientMultiPhysics", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "run", "set_BC", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "multiphase_diffusion", "core", "Base2", "clear", "copy", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "pop", "popitem", "props", "setdefault", "to_indices", "to_mask", "update", "values", "Domain", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "LabelMixin", "filter_by_label", "labels", "num_pores", "num_throats", "pores", "set_label", "throats", "ModelWrapper", "__call__", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsDict", "clear", "copy", "dependency_graph", "dependency_list", "dependency_map", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsMixin2", "add_model", "add_model_collection", "regenerate_models", "run_model", "ParserMixin", "integrators", "Integrator", "ScipyRK45", "solve", "io", "network_from_csv", "network_from_jsongraph", "network_from_marock", "network_from_networkx", "network_from_pergeos", "network_from_porespy", "network_from_statoil", "network_to_comsol", "network_to_csv", "network_to_jsongraph", "network_to_networkx", "network_to_pandas", "network_to_pergeos", "network_to_salome", "network_to_stl", "print_hdf5", "project_to_csv", "project_to_dict", "project_to_hdf5", "project_to_pandas", "project_to_paraview", "project_to_vtk", "project_to_xdmf", "models", "collections", "geometry", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "network", "phase", "air", "gas", "liquid", "mercury", "water", "physics", "basic", "standard", "geometry", "conduit_lengths", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "diffusive_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "hydraulic_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "pore_cross_sectional_area", "circle", "cone", "cube", "sphere", "square", "pore_seed", "random", "spatially_correlated", "pore_size", "equivalent_diameter", "from_neighbor_throats", "generic_distribution", "largest_sphere", "normal", "random", "weibull", "pore_surface_area", "circle", "cube", "sphere", "square", "pore_volume", "circle", "cube", "effective", "sphere", "square", "throat_capillary_shape_factor", "jenkins_rao", "mason_morrow", "throat_centroid", "pore_coords", "throat_cross_sectional_area", "cuboid", "cylinder", "rectangle", "throat_endpoints", "spheres_and_cylinders", "throat_length", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "throat_perimeter", "cuboid", "cylinder", "rectangle", "throat_seed", "from_neighbor_pores", "random", "throat_size", "equivalent_diameter", "from_neighbor_pores", "generic_distribution", "normal", "random", "weibull", "throat_surface_area", "cuboid", "cylinder", "extrusion", "rectangle", "throat_vector", "pore_to_pore", "throat_volume", "cuboid", "cylinder", "extrusion", "lens", "pendular_ring", "rectangle", "misc", "blank", "clip", "constant", "difference", "fraction", "from_neighbor_pores", "from_neighbor_throats", "generic_distribution", "generic_function", "invert", "linear", "match_histogram", "normal", "normalize", "polynomial", "product", "random", "scaled", "summation", "weibull", "network", "bidirectional_throats", "cluster_number", "cluster_size", "coordination_number", "count_coincident_pores", "distance_to_furthest_neighbor", "distance_to_nearest_neighbor", "distance_to_nearest_pore", "duplicate_throats", "find_coincident_pores", "gabriel_edges", "headless_throats", "isolated_pores", "looped_throats", "pore_to_pore_distance", "reversed_throats", "phase", "chemicals_wrapper", "critical_props", "density", "ideal_gas", "liquid_mixture_COSTALD", "liquid_pure_COSTALD", "mass_to_molar", "water_correlation", "diffusivity", "gas_mixture_ce", "gas_mixture_fesg", "liquid_mixture_tc", "heat_capacity", "gas_mixture_yweighted", "gas_pure_TRC", "liquid_mixture_xweighted", "liquid_pure_rp", "misc", "mix_and_match", "mole_to_mass_fraction", "mixtures", "from_component", "mixing_rule", "mole_summation", "mole_to_mass_fraction", "salinity", "partition_coefficient", "gaseous_species_in_water", "surface_tension", "liquid_mixture_wsd", "liquid_pure_bb", "water_correlation", "thermal_conductivity", "gas_mixture_whz", "gas_pure_gismr", "liquid_mixture_DIPPR9H", "liquid_pure_gismr", "liquid_pure_sr", "water_correlation", "vapor_pressure", "liquid_pure_antoine", "liquid_pure_lk", "water_correlation", "viscosity", "gas_mixture_hz", "gas_pure_gesmr", "gas_pure_st", "liquid_mixture_xweighted", "liquid_pure_ls", "water_correlation", "physics", "ad_dif_conductance", "ad_dif", "capillary_pressure", "purcell", "washburn", "diffusive_conductance", "generic_diffusive", "mixed_diffusion", "ordinary_diffusion", "taylor_aris_diffusion", "electrical_conductance", "generic_electrical", "series_resistors", "hydraulic_conductance", "generic_hydraulic", "hagen_poiseuille", "valvatne_blunt", "meniscus", "general_toroidal", "purcell", "sinusoidal", "multiphase", "conduit_conductance", "late_filling", "source_terms", "butler_volmer_conc", "butler_volmer_voltage", "exponential", "general_symbolic", "linear", "logarithm", "natural_exponential", "natural_logarithm", "power_law", "standard_kinetics", "thermal_conductance", "generic_thermal", "series_resistors", "network", "BodyCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Cubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "CubicTemplate", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Delaunay", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "DelaunayVoronoiDual", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "find_pore_hulls", "find_throat_facets", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Demo", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FaceCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Network", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Voronoi", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "phase", "Air", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "BinaryGas", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "GasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "LiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Mercury", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Mixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Phase", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Species", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGas", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "StandardLiquid", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardLiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Water", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "solvers", "BaseSolver", "solve", "DirectSolver", "solve", "IterativeSolver", "solve", "PETScLinearSolver", "solve", "PardisoSpsolve", "solve", "PyamgRugeStubenSolver", "solve", "ScipyCG", "solve", "ScipySpsolve", "solve", "topotools", "add_boundary_pores", "add_reservoir_pore", "bond_percolation", "clone_pores", "connect_pores", "conns_to_am", "dimensionality", "drop_sites", "extend", "filter_pores_by_z", "find_clusters", "find_connected_sites", "find_connecting_bonds", "find_interface_throats", "find_isolated_clusters", "find_neighbor_bonds", "find_neighbor_sites", "find_path", "find_surface_pores", "generate_base_points", "get_domain_area", "get_domain_length", "get_shape", "get_spacing", "hull_centroid", "is_fully_connected", "iscoplanar", "isoutside", "ispercolating", "issymmetric", "istriangular", "istril", "istriu", "label_faces", "merge_networks", "merge_pores", "reduce_coordination", "reflect_base_points", "rotate_coords", "shear_coords", "site_percolation", "stitch", "template_cylinder_annulus", "template_sphere_shell", "tri_to_am", "trim", "trim_disconnected_clusters", "vor_to_am", "utils", "Docorator", "__call__", "dedent", "dedents", "delete_kwargs", "delete_kwargs_s", "delete_params", "delete_params_s", "delete_types", "delete_types_s", "get_docstring", "get_extended_summary", "get_extended_summaryf", "get_full_description", "get_full_descriptionf", "get_sections", "get_sectionsf", "get_summary", "get_summaryf", "keep_params", "keep_params_s", "keep_types", "keep_types_s", "save_docstring", "with_indent", "with_indents", "HealthDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "NestedDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "to_dict", "unravel", "update", "values", "PrintableDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "PrintableList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "Project", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "SettingsAttr", "TypedList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "TypedMixin", "TypedSet", "add", "clear", "copy", "difference", "difference_update", "discard", "intersection", "intersection_update", "isdisjoint", "issubset", "issuperset", "pop", "remove", "symmetric_difference", "symmetric_difference_update", "union", "update", "Workspace", "clear", "close_project", "copy", "copy_project", "fromkeys", "get", "items", "keys", "load_project", "load_workspace", "new_project", "pop", "popitem", "save_project", "save_workspace", "setdefault", "update", "values", "check_data_health", "check_network_health", "dict_to_struct", "flat_list", "get_mixture_model_args", "get_printable_labels", "get_printable_props", "ignore_warnings", "is_symmetric", "is_transient", "is_valid_propname", "methods_to_table", "models_to_table", "sanitize_dict", "struct_to_dict", "visualization", "draw_conduit", "generate_voxel_image", "plot_connections", "plot_coordinates", "plot_networkx", "plot_notebook", "plot_tutorial", "plot_vispy", "set_mpl_style", "Module Reference"], "terms": {"predict": [0, 1, 24, 32, 921, 1915], "absolut": [0, 1, 2, 13, 30, 648, 1888, 1893], "permeabl": [0, 1, 9, 10, 12, 32], "adjust": [0, 1, 9, 29, 30, 35, 61, 91, 100, 121, 153, 186, 198, 219, 251, 284, 317, 350, 384, 417, 450, 483, 544, 923, 927, 1712, 1750, 1922], "pore": [0, 1, 2, 4, 7, 8, 10, 12, 13, 17, 19, 21, 22, 23, 26, 27, 32, 34, 35, 39, 40, 45, 49, 51, 52, 53, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74, 77, 81, 83, 84, 85, 90, 91, 92, 94, 95, 96, 99, 100, 101, 104, 108, 110, 111, 112, 118, 121, 122, 123, 124, 126, 127, 128, 131, 132, 137, 141, 143, 144, 145, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 164, 165, 170, 174, 176, 177, 178, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 202, 206, 208, 209, 210, 216, 219, 220, 221, 222, 224, 225, 226, 229, 230, 235, 239, 241, 242, 243, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 262, 263, 268, 272, 274, 275, 276, 281, 282, 284, 285, 286, 287, 288, 290, 291, 292, 295, 296, 301, 305, 307, 308, 309, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 328, 329, 334, 338, 340, 341, 342, 347, 348, 350, 351, 352, 353, 354, 355, 357, 358, 359, 362, 363, 368, 372, 374, 375, 376, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 395, 396, 401, 405, 407, 408, 409, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 434, 438, 440, 441, 442, 447, 448, 450, 451, 452, 453, 454, 456, 457, 458, 461, 462, 467, 471, 473, 474, 475, 480, 481, 483, 484, 485, 486, 488, 489, 490, 494, 495, 498, 500, 504, 506, 507, 508, 513, 515, 517, 518, 520, 521, 522, 525, 526, 529, 533, 535, 536, 537, 542, 544, 545, 547, 548, 549, 552, 553, 554, 555, 560, 562, 565, 567, 568, 571, 572, 574, 576, 580, 582, 583, 584, 589, 590, 591, 592, 594, 595, 596, 600, 601, 602, 605, 606, 635, 636, 638, 639, 648, 649, 653, 656, 659, 660, 662, 663, 665, 668, 672, 673, 674, 675, 676, 677, 678, 681, 684, 685, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 742, 744, 745, 746, 747, 748, 750, 752, 753, 754, 755, 757, 758, 759, 760, 761, 763, 765, 766, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 792, 793, 796, 797, 806, 807, 809, 810, 811, 812, 813, 814, 815, 821, 822, 823, 824, 827, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 877, 878, 879, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 917, 919, 920, 921, 923, 924, 925, 927, 928, 930, 931, 933, 941, 942, 944, 945, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 962, 963, 965, 966, 967, 968, 973, 974, 975, 976, 978, 979, 980, 983, 984, 985, 987, 989, 990, 991, 992, 993, 994, 995, 996, 1001, 1002, 1004, 1005, 1006, 1007, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1022, 1023, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1039, 1040, 1042, 1043, 1044, 1045, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1060, 1061, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1077, 1078, 1080, 1081, 1082, 1083, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1098, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1117, 1118, 1120, 1121, 1122, 1123, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1138, 1139, 1140, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1156, 1157, 1159, 1160, 1161, 1162, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1177, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1195, 1196, 1198, 1199, 1200, 1201, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1216, 1217, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1233, 1234, 1236, 1237, 1238, 1239, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1271, 1272, 1274, 1275, 1276, 1277, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1293, 1294, 1296, 1298, 1302, 1304, 1305, 1306, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1321, 1322, 1323, 1325, 1326, 1328, 1331, 1333, 1334, 1336, 1337, 1338, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1354, 1355, 1356, 1357, 1359, 1360, 1362, 1365, 1367, 1368, 1370, 1371, 1372, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1388, 1389, 1390, 1391, 1393, 1394, 1396, 1399, 1401, 1402, 1404, 1405, 1406, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1422, 1423, 1424, 1426, 1428, 1432, 1434, 1435, 1436, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1451, 1452, 1453, 1455, 1456, 1458, 1461, 1463, 1464, 1466, 1467, 1468, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1484, 1485, 1487, 1489, 1493, 1495, 1496, 1497, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1512, 1513, 1515, 1517, 1521, 1523, 1524, 1525, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1540, 1541, 1543, 1545, 1549, 1551, 1552, 1553, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1568, 1569, 1570, 1572, 1573, 1575, 1578, 1580, 1581, 1583, 1584, 1585, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1601, 1602, 1603, 1605, 1607, 1611, 1613, 1614, 1615, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1630, 1631, 1632, 1634, 1635, 1637, 1640, 1642, 1643, 1645, 1646, 1647, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1663, 1664, 1665, 1667, 1669, 1673, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1710, 1711, 1713, 1714, 1716, 1718, 1719, 1720, 1724, 1728, 1730, 1731, 1735, 1736, 1743, 1745, 1746, 1749, 1751, 1755, 1898, 1899, 1902, 1903, 1904, 1905, 1908, 1915, 1916, 1917, 1918, 1919, 1920, 1923], "size": [0, 1, 2, 4, 8, 10, 11, 16, 19, 27, 31, 33, 34, 35, 64, 66, 155, 157, 188, 190, 253, 255, 286, 288, 319, 321, 353, 355, 386, 388, 419, 421, 452, 454, 485, 486, 552, 625, 660, 709, 712, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 741, 746, 749, 797, 799, 823, 827, 832, 839, 911, 912, 913, 914, 916, 917, 919, 920, 941, 942, 983, 1060, 1098, 1254, 1729, 1737, 1747, 1900, 1917, 1918, 1919, 1920], "distribut": [0, 1, 6, 16, 31, 35, 37, 741, 742, 746, 748, 749, 750, 797, 798, 799, 800, 823, 828, 832, 835, 983, 1729, 1746], "dispers": [0, 1], "coeffici": [0, 1, 2, 7, 8, 9, 10, 23, 32, 39, 131, 164, 229, 262, 295, 328, 362, 395, 428, 461, 516, 704, 705, 706, 707, 708, 710, 711, 713, 716, 718, 830, 863, 864, 865, 868, 894, 932, 934, 935, 936, 937, 938, 1321, 1700], "find": [0, 1, 4, 6, 8, 10, 11, 12, 13, 16, 18, 19, 21, 23, 26, 30, 31, 32, 34, 35, 39, 73, 99, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 495, 525, 572, 607, 636, 648, 743, 747, 748, 750, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 798, 800, 828, 835, 839, 840, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 879, 923, 946, 950, 951, 953, 955, 956, 957, 967, 985, 989, 990, 992, 994, 995, 996, 1006, 1023, 1027, 1028, 1030, 1032, 1033, 1034, 1044, 1061, 1065, 1066, 1068, 1070, 1071, 1072, 1082, 1099, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1122, 1140, 1144, 1145, 1147, 1149, 1150, 1151, 1161, 1179, 1183, 1184, 1186, 1188, 1189, 1190, 1200, 1217, 1221, 1222, 1224, 1226, 1227, 1228, 1238, 1255, 1259, 1260, 1262, 1264, 1265, 1266, 1276, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1512, 1513, 1541, 1570, 1603, 1632, 1665, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1743, 1745, 1746, 1899, 1915, 1916, 1917], "effect": [0, 1, 8, 9, 13, 28, 29, 30, 31, 131, 229, 495, 572, 636, 716, 731, 750, 763, 800, 835, 904, 908, 914, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1862], "diffus": [0, 1, 4, 10, 21, 22, 23, 28, 35, 39, 131, 328, 362, 395, 552, 681, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 742, 863, 864, 865, 906, 908, 911, 912, 913, 914, 916, 917, 925, 941, 942, 1321], "tortuos": [0, 1, 9, 131], "network": [0, 1, 2, 3, 16, 17, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 39, 40, 73, 74, 99, 101, 124, 131, 132, 164, 165, 197, 199, 229, 230, 262, 263, 295, 296, 328, 329, 362, 363, 395, 396, 428, 429, 461, 462, 494, 498, 525, 526, 554, 555, 571, 574, 635, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 741, 742, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 761, 763, 764, 766, 768, 769, 770, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 792, 793, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 807, 809, 810, 811, 812, 813, 814, 823, 824, 827, 828, 832, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 906, 908, 911, 912, 913, 914, 916, 917, 919, 920, 921, 924, 933, 941, 942, 944, 945, 948, 950, 951, 953, 954, 955, 956, 957, 967, 983, 984, 987, 989, 990, 992, 993, 994, 995, 996, 1006, 1022, 1025, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1044, 1060, 1063, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1082, 1098, 1101, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1122, 1138, 1139, 1142, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1161, 1177, 1178, 1181, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1200, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1257, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1276, 1293, 1296, 1321, 1326, 1355, 1360, 1389, 1394, 1423, 1426, 1451, 1456, 1484, 1487, 1512, 1515, 1540, 1543, 1568, 1573, 1602, 1605, 1630, 1635, 1664, 1667, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1735, 1737, 1738, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1835, 1890, 1899, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923], "format": [0, 1, 6, 7, 9, 10, 21, 27, 28, 31, 33, 35, 496, 573, 625, 637, 645, 647, 648, 650, 652, 660, 663, 667, 701, 716, 731, 816, 944, 947, 950, 951, 960, 962, 983, 986, 989, 990, 999, 1001, 1022, 1024, 1027, 1028, 1037, 1039, 1060, 1062, 1065, 1066, 1075, 1077, 1098, 1100, 1103, 1104, 1115, 1117, 1138, 1141, 1144, 1145, 1154, 1156, 1177, 1180, 1183, 1184, 1193, 1195, 1216, 1218, 1221, 1222, 1231, 1233, 1254, 1256, 1259, 1260, 1269, 1271, 1295, 1324, 1358, 1392, 1425, 1454, 1486, 1514, 1542, 1571, 1604, 1633, 1666, 1711, 1715, 1717, 1722, 1754, 1757, 1903, 1904, 1916, 1917], "factor": [0, 1, 2, 4, 7, 9, 10, 30, 33, 35, 552, 672, 673, 674, 675, 676, 677, 678, 709, 712, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 764, 833, 859, 870, 888, 890, 895, 902, 906, 911, 912, 913, 914, 916, 917, 919, 920, 921, 923, 927, 930, 931, 941, 942, 1700, 1749, 1918], "calibr": [0, 1, 34], "us": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 21, 24, 26, 27, 28, 33, 35, 36, 37, 39, 52, 53, 54, 57, 61, 73, 84, 85, 86, 89, 91, 99, 111, 112, 113, 117, 121, 131, 144, 145, 146, 149, 153, 164, 177, 178, 179, 182, 186, 197, 198, 209, 210, 211, 215, 219, 229, 242, 243, 244, 247, 251, 262, 275, 276, 277, 280, 284, 295, 308, 309, 310, 313, 317, 328, 341, 342, 343, 346, 349, 350, 362, 375, 376, 377, 380, 383, 384, 395, 408, 409, 410, 413, 416, 417, 428, 441, 442, 443, 446, 449, 450, 461, 474, 475, 476, 479, 483, 494, 495, 507, 508, 509, 512, 514, 525, 536, 537, 538, 541, 543, 544, 554, 571, 572, 583, 584, 585, 588, 601, 602, 603, 604, 607, 624, 636, 644, 648, 649, 650, 651, 652, 659, 660, 667, 691, 696, 699, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 717, 718, 725, 728, 732, 733, 735, 739, 741, 742, 745, 748, 749, 750, 759, 793, 796, 798, 799, 800, 810, 811, 812, 815, 816, 818, 821, 822, 824, 826, 828, 830, 831, 832, 833, 835, 847, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 876, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 921, 923, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 944, 946, 950, 951, 953, 954, 956, 957, 960, 962, 966, 967, 968, 969, 972, 983, 984, 985, 989, 990, 992, 993, 995, 996, 999, 1001, 1005, 1006, 1007, 1008, 1011, 1022, 1023, 1027, 1028, 1030, 1031, 1033, 1034, 1037, 1039, 1043, 1044, 1045, 1046, 1049, 1060, 1061, 1065, 1066, 1068, 1069, 1071, 1072, 1075, 1077, 1081, 1082, 1083, 1084, 1087, 1098, 1099, 1103, 1104, 1106, 1107, 1109, 1110, 1115, 1117, 1121, 1122, 1123, 1124, 1127, 1138, 1139, 1140, 1144, 1145, 1147, 1148, 1150, 1151, 1154, 1156, 1160, 1161, 1162, 1163, 1166, 1177, 1179, 1183, 1184, 1186, 1187, 1189, 1190, 1193, 1195, 1199, 1200, 1201, 1202, 1205, 1216, 1217, 1221, 1222, 1224, 1225, 1227, 1228, 1231, 1233, 1237, 1238, 1239, 1240, 1243, 1254, 1255, 1259, 1260, 1262, 1263, 1265, 1266, 1269, 1271, 1275, 1276, 1277, 1278, 1281, 1293, 1294, 1305, 1306, 1307, 1310, 1321, 1323, 1333, 1337, 1338, 1339, 1342, 1355, 1357, 1367, 1371, 1372, 1373, 1376, 1389, 1391, 1401, 1405, 1406, 1407, 1410, 1423, 1424, 1435, 1436, 1437, 1440, 1451, 1453, 1463, 1467, 1468, 1469, 1472, 1484, 1485, 1496, 1497, 1498, 1501, 1512, 1513, 1524, 1525, 1526, 1529, 1540, 1541, 1552, 1553, 1554, 1557, 1568, 1570, 1580, 1584, 1585, 1586, 1589, 1602, 1603, 1614, 1615, 1616, 1619, 1630, 1632, 1642, 1646, 1647, 1648, 1651, 1664, 1665, 1676, 1677, 1678, 1681, 1699, 1700, 1701, 1705, 1707, 1710, 1714, 1717, 1721, 1724, 1725, 1726, 1727, 1728, 1729, 1743, 1745, 1746, 1751, 1752, 1753, 1762, 1763, 1764, 1766, 1768, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1835, 1893, 1894, 1902, 1903, 1904, 1905, 1906, 1912, 1916, 1917, 1919, 1920, 1921], "mercuri": [0, 1, 15, 32, 34, 763, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450], "intrus": [0, 1, 15, 34], "data": [0, 1, 3, 6, 7, 10, 15, 16, 17, 21, 26, 29, 32, 33, 34, 35, 39, 40, 48, 49, 58, 73, 74, 80, 81, 90, 99, 100, 101, 107, 108, 118, 131, 132, 140, 141, 150, 164, 165, 173, 174, 183, 197, 199, 205, 206, 212, 216, 229, 230, 238, 239, 248, 262, 263, 271, 272, 281, 295, 296, 304, 305, 314, 328, 329, 337, 338, 347, 362, 363, 371, 372, 381, 395, 396, 404, 405, 414, 428, 429, 437, 438, 447, 461, 462, 470, 471, 480, 494, 495, 498, 503, 504, 513, 525, 526, 532, 533, 542, 553, 554, 555, 559, 560, 565, 571, 572, 574, 579, 580, 589, 624, 636, 647, 648, 649, 652, 653, 657, 659, 660, 662, 663, 664, 665, 666, 667, 668, 824, 829, 875, 881, 923, 930, 931, 944, 946, 948, 950, 951, 960, 961, 962, 963, 973, 983, 985, 987, 989, 990, 999, 1000, 1001, 1002, 1012, 1022, 1023, 1025, 1027, 1028, 1037, 1038, 1039, 1040, 1050, 1060, 1061, 1063, 1065, 1066, 1075, 1076, 1077, 1078, 1088, 1098, 1099, 1101, 1103, 1104, 1115, 1116, 1117, 1118, 1128, 1138, 1140, 1142, 1144, 1145, 1154, 1155, 1156, 1157, 1167, 1177, 1179, 1181, 1183, 1184, 1193, 1194, 1195, 1196, 1206, 1216, 1217, 1219, 1221, 1222, 1231, 1232, 1233, 1234, 1244, 1254, 1255, 1257, 1259, 1260, 1269, 1270, 1271, 1272, 1282, 1293, 1294, 1296, 1301, 1302, 1311, 1321, 1323, 1326, 1332, 1334, 1343, 1355, 1357, 1360, 1366, 1368, 1377, 1389, 1391, 1394, 1400, 1402, 1411, 1423, 1424, 1426, 1431, 1432, 1441, 1451, 1453, 1456, 1462, 1464, 1473, 1484, 1485, 1487, 1492, 1493, 1502, 1512, 1513, 1515, 1520, 1521, 1530, 1540, 1541, 1543, 1548, 1549, 1558, 1568, 1570, 1573, 1579, 1581, 1590, 1602, 1603, 1605, 1610, 1611, 1620, 1630, 1632, 1635, 1641, 1643, 1652, 1664, 1665, 1667, 1672, 1673, 1682, 1838, 1847, 1898, 1916], "import": [0, 1, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 647, 746, 748, 750, 797, 798, 800, 807, 823, 824, 828, 835, 921, 933, 950, 951, 953, 954, 955, 956, 957, 967, 989, 990, 992, 993, 994, 995, 996, 1006, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1044, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1082, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1122, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1161, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1200, 1216, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1238, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1276, 1758, 1778, 1780, 1811, 1823, 1905, 1916, 1917, 1919], "an": [0, 1, 4, 6, 7, 8, 9, 12, 13, 16, 17, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 51, 61, 65, 69, 72, 73, 80, 81, 83, 91, 95, 98, 107, 108, 110, 120, 121, 122, 124, 127, 130, 131, 140, 141, 143, 153, 156, 160, 163, 173, 174, 176, 186, 189, 193, 196, 198, 205, 206, 208, 219, 220, 222, 225, 228, 238, 239, 241, 251, 254, 258, 261, 262, 271, 272, 274, 284, 287, 291, 294, 304, 305, 307, 317, 320, 324, 327, 337, 338, 340, 349, 350, 354, 358, 361, 371, 372, 374, 383, 384, 387, 391, 394, 404, 405, 407, 416, 417, 420, 424, 427, 437, 438, 440, 449, 450, 453, 457, 460, 461, 470, 471, 473, 483, 489, 492, 494, 503, 504, 506, 521, 524, 532, 533, 535, 543, 544, 548, 551, 554, 559, 560, 562, 567, 570, 579, 580, 582, 595, 598, 619, 620, 624, 634, 647, 648, 649, 651, 652, 659, 660, 661, 662, 663, 664, 665, 666, 741, 742, 746, 749, 763, 772, 797, 799, 804, 807, 815, 818, 823, 824, 832, 833, 839, 846, 847, 854, 857, 858, 875, 876, 877, 878, 898, 901, 902, 908, 924, 927, 928, 950, 951, 954, 955, 956, 961, 963, 965, 967, 979, 982, 989, 990, 993, 994, 995, 1000, 1002, 1004, 1006, 1018, 1021, 1022, 1027, 1028, 1031, 1032, 1033, 1038, 1040, 1042, 1044, 1056, 1059, 1060, 1065, 1066, 1069, 1070, 1071, 1076, 1078, 1080, 1082, 1094, 1097, 1098, 1103, 1104, 1107, 1108, 1109, 1116, 1118, 1120, 1122, 1134, 1137, 1144, 1145, 1148, 1149, 1150, 1155, 1157, 1159, 1161, 1173, 1176, 1183, 1184, 1187, 1188, 1189, 1194, 1196, 1198, 1200, 1212, 1215, 1216, 1221, 1222, 1225, 1226, 1227, 1232, 1234, 1236, 1238, 1250, 1253, 1254, 1259, 1260, 1263, 1264, 1265, 1270, 1272, 1274, 1276, 1288, 1291, 1293, 1301, 1302, 1304, 1317, 1320, 1322, 1325, 1332, 1333, 1334, 1336, 1350, 1353, 1356, 1359, 1366, 1367, 1368, 1370, 1384, 1387, 1390, 1393, 1400, 1401, 1402, 1404, 1418, 1421, 1431, 1432, 1434, 1447, 1450, 1451, 1452, 1455, 1462, 1463, 1464, 1466, 1480, 1483, 1484, 1492, 1493, 1495, 1508, 1511, 1520, 1521, 1523, 1536, 1539, 1548, 1549, 1551, 1564, 1567, 1568, 1569, 1572, 1579, 1580, 1581, 1583, 1597, 1600, 1610, 1611, 1613, 1626, 1629, 1630, 1631, 1634, 1641, 1642, 1643, 1645, 1659, 1662, 1664, 1672, 1673, 1675, 1688, 1691, 1700, 1711, 1712, 1717, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1732, 1733, 1737, 1738, 1743, 1750, 1752, 1753, 1756, 1761, 1765, 1767, 1774, 1780, 1783, 1796, 1810, 1822, 1835, 1862, 1867, 1873, 1874, 1883, 1890, 1897, 1898, 1909, 1910, 1911, 1916, 1917, 1919], "extract": [0, 1, 4, 7, 8, 9, 12, 19, 24, 27, 28, 30, 31, 35, 495, 572, 636, 648, 649, 651, 652, 906, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1770, 1772, 1774, 1776, 1778, 1780, 1894], "transport": [0, 1, 2, 3, 4, 6, 7, 8, 12, 16, 19, 27, 28, 30, 34, 38, 262, 328, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 879, 904, 927, 983, 1923], "properti": [0, 1, 3, 4, 5, 6, 7, 8, 12, 13, 15, 16, 19, 21, 22, 23, 24, 26, 27, 29, 31, 33, 34, 35, 39, 40, 48, 58, 65, 73, 74, 80, 90, 99, 101, 107, 118, 131, 132, 140, 150, 156, 164, 165, 173, 183, 189, 197, 199, 205, 216, 229, 230, 238, 248, 254, 262, 263, 271, 281, 287, 295, 296, 304, 314, 320, 328, 329, 337, 347, 354, 362, 363, 371, 381, 387, 395, 396, 404, 414, 420, 428, 429, 437, 447, 453, 461, 462, 470, 480, 495, 498, 503, 513, 514, 525, 526, 532, 542, 555, 559, 565, 572, 574, 579, 589, 636, 649, 652, 656, 663, 665, 667, 689, 741, 745, 746, 748, 749, 750, 793, 796, 797, 798, 799, 800, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 853, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 923, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 946, 948, 961, 973, 985, 987, 1000, 1012, 1023, 1025, 1038, 1050, 1061, 1063, 1076, 1088, 1099, 1101, 1116, 1128, 1138, 1140, 1142, 1155, 1167, 1179, 1181, 1194, 1206, 1216, 1217, 1219, 1232, 1244, 1255, 1257, 1270, 1282, 1292, 1294, 1296, 1301, 1311, 1321, 1323, 1326, 1331, 1332, 1333, 1343, 1357, 1360, 1365, 1366, 1367, 1377, 1391, 1394, 1399, 1400, 1401, 1411, 1424, 1426, 1431, 1441, 1453, 1456, 1461, 1462, 1463, 1473, 1484, 1485, 1487, 1492, 1502, 1513, 1515, 1520, 1530, 1541, 1543, 1548, 1558, 1568, 1570, 1573, 1578, 1579, 1580, 1590, 1603, 1605, 1610, 1620, 1630, 1632, 1635, 1640, 1641, 1642, 1652, 1665, 1667, 1672, 1682, 1838, 1904, 1908, 1916, 1917, 1919], "poros": [0, 1, 7, 9, 10, 27, 131, 1915], "obtain": [0, 1, 9, 10, 13, 21, 24, 27, 28, 34, 746, 797, 823, 847, 956, 957, 960, 962, 995, 996, 999, 1001, 1033, 1034, 1037, 1039, 1071, 1072, 1075, 1077, 1109, 1110, 1115, 1117, 1150, 1151, 1154, 1156, 1189, 1190, 1193, 1195, 1227, 1228, 1231, 1233, 1265, 1266, 1269, 1271, 1333, 1367, 1401, 1463, 1580, 1642, 1725, 1726, 1746, 1879], "rel": [0, 1, 9, 15, 648, 1730, 1731, 1751, 1888, 1893, 1906, 1919], "curv": [0, 1, 5, 9, 13, 15, 34, 1729], "The": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 26, 27, 30, 33, 34, 35, 39, 41, 45, 48, 49, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 75, 77, 80, 81, 84, 85, 86, 89, 90, 91, 92, 94, 96, 102, 104, 107, 108, 111, 112, 113, 117, 118, 120, 121, 123, 124, 126, 128, 131, 133, 137, 140, 141, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 164, 166, 170, 173, 174, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 197, 200, 202, 205, 206, 209, 210, 211, 215, 216, 219, 220, 221, 222, 224, 226, 229, 231, 235, 238, 239, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 262, 264, 268, 271, 272, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 295, 297, 301, 304, 305, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 328, 330, 334, 337, 338, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 362, 364, 368, 371, 372, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 395, 397, 401, 404, 405, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 428, 430, 434, 437, 438, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 461, 463, 467, 470, 471, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 495, 496, 500, 503, 504, 507, 508, 509, 512, 513, 514, 515, 517, 518, 520, 522, 527, 529, 532, 533, 536, 537, 538, 541, 542, 543, 544, 545, 547, 549, 559, 560, 565, 568, 571, 572, 573, 576, 579, 580, 583, 584, 585, 588, 589, 591, 592, 594, 596, 600, 601, 602, 603, 604, 605, 606, 620, 636, 637, 639, 641, 647, 648, 649, 651, 652, 653, 656, 659, 660, 661, 662, 663, 664, 666, 667, 668, 701, 716, 731, 741, 742, 744, 745, 746, 747, 748, 749, 750, 759, 763, 772, 793, 795, 796, 797, 798, 799, 800, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 839, 841, 846, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 923, 924, 925, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 945, 946, 947, 950, 951, 952, 954, 955, 956, 957, 960, 961, 962, 963, 966, 967, 968, 969, 972, 973, 975, 976, 978, 980, 983, 984, 985, 986, 989, 990, 991, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1005, 1006, 1007, 1008, 1011, 1012, 1014, 1015, 1017, 1019, 1022, 1023, 1024, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1049, 1050, 1052, 1053, 1055, 1057, 1060, 1061, 1062, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1087, 1088, 1090, 1091, 1093, 1095, 1098, 1099, 1100, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1124, 1127, 1128, 1130, 1131, 1133, 1135, 1139, 1140, 1141, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1166, 1167, 1169, 1170, 1172, 1174, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1205, 1206, 1208, 1209, 1211, 1213, 1216, 1217, 1218, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1231, 1232, 1233, 1234, 1237, 1238, 1239, 1240, 1243, 1244, 1246, 1247, 1249, 1251, 1254, 1255, 1256, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1269, 1270, 1271, 1272, 1275, 1276, 1277, 1278, 1281, 1282, 1284, 1285, 1287, 1289, 1294, 1295, 1298, 1301, 1302, 1305, 1306, 1307, 1310, 1311, 1313, 1314, 1316, 1318, 1321, 1322, 1323, 1324, 1328, 1331, 1332, 1333, 1334, 1337, 1338, 1339, 1342, 1343, 1345, 1346, 1347, 1349, 1351, 1354, 1356, 1357, 1358, 1362, 1365, 1366, 1367, 1368, 1371, 1372, 1373, 1376, 1377, 1379, 1380, 1381, 1383, 1385, 1388, 1390, 1391, 1392, 1396, 1399, 1400, 1401, 1402, 1405, 1406, 1407, 1410, 1411, 1413, 1414, 1415, 1417, 1419, 1422, 1424, 1425, 1428, 1431, 1432, 1435, 1436, 1437, 1440, 1441, 1443, 1444, 1446, 1448, 1452, 1453, 1454, 1458, 1461, 1462, 1463, 1464, 1467, 1468, 1469, 1472, 1473, 1475, 1476, 1477, 1479, 1481, 1485, 1486, 1489, 1492, 1493, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1507, 1509, 1512, 1513, 1514, 1517, 1520, 1521, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1537, 1541, 1542, 1545, 1548, 1549, 1552, 1553, 1554, 1557, 1558, 1560, 1561, 1563, 1565, 1568, 1569, 1570, 1571, 1575, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1589, 1590, 1592, 1593, 1594, 1596, 1598, 1601, 1603, 1604, 1607, 1610, 1611, 1614, 1615, 1616, 1619, 1620, 1622, 1623, 1625, 1627, 1630, 1631, 1632, 1633, 1637, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1652, 1654, 1655, 1656, 1658, 1660, 1663, 1665, 1666, 1669, 1672, 1673, 1676, 1677, 1678, 1681, 1682, 1684, 1685, 1687, 1689, 1692, 1700, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1735, 1737, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1755, 1756, 1757, 1761, 1763, 1765, 1767, 1770, 1772, 1776, 1778, 1780, 1783, 1834, 1835, 1838, 1846, 1847, 1859, 1879, 1881, 1883, 1888, 1889, 1890, 1893, 1894, 1899, 1900, 1903, 1904, 1912, 1915, 1916, 1917, 1919, 1920], "best": [1, 26, 27, 28, 30, 34, 37, 1060, 1098, 1254], "wai": [1, 6, 9, 12, 13, 19, 26, 27, 29, 30, 31, 32, 33, 34, 747, 754, 764, 854], "learn": [1, 24, 26, 30], "openpnm": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 73, 131, 262, 349, 383, 416, 449, 461, 493, 494, 496, 516, 543, 554, 573, 637, 645, 647, 648, 649, 651, 652, 656, 659, 662, 663, 665, 666, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 741, 742, 744, 746, 747, 748, 749, 750, 752, 754, 757, 758, 759, 760, 761, 764, 766, 768, 769, 770, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 795, 797, 798, 799, 800, 802, 803, 804, 805, 807, 809, 810, 811, 812, 813, 814, 819, 823, 824, 827, 828, 832, 835, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 947, 950, 951, 953, 954, 955, 956, 957, 960, 962, 967, 983, 986, 989, 990, 992, 993, 994, 995, 996, 999, 1001, 1006, 1024, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1037, 1039, 1044, 1062, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1075, 1077, 1082, 1100, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1115, 1117, 1122, 1141, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1154, 1156, 1161, 1180, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1193, 1195, 1200, 1216, 1218, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1231, 1233, 1238, 1256, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1269, 1271, 1276, 1293, 1295, 1324, 1358, 1392, 1425, 1451, 1454, 1484, 1486, 1514, 1542, 1571, 1604, 1633, 1664, 1666, 1711, 1716, 1724, 1759, 1811, 1823, 1835, 1879, 1894, 1903, 1904, 1905, 1908, 1915, 1916, 1917, 1918, 1923], "like": [1, 5, 9, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 50, 61, 82, 91, 109, 121, 142, 153, 175, 186, 207, 219, 240, 251, 273, 284, 306, 317, 339, 350, 373, 384, 406, 417, 439, 450, 472, 483, 505, 534, 544, 561, 581, 613, 614, 628, 629, 649, 854, 906, 944, 964, 983, 1003, 1041, 1060, 1079, 1098, 1119, 1138, 1158, 1177, 1197, 1216, 1235, 1254, 1273, 1303, 1335, 1369, 1403, 1433, 1465, 1494, 1512, 1522, 1550, 1582, 1612, 1644, 1674, 1763, 1767, 1769, 1778, 1780, 1790, 1791, 1802, 1803, 1816, 1817, 1886, 1887], "anyth": [1, 26, 30, 32, 34, 61, 91, 121, 153, 186, 198, 219, 251, 284, 317, 350, 384, 417, 450, 483, 544], "i": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 45, 47, 49, 52, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 77, 79, 81, 84, 88, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 104, 106, 108, 111, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 137, 139, 141, 144, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 165, 170, 172, 174, 177, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 202, 204, 206, 209, 214, 215, 216, 219, 220, 222, 223, 224, 225, 226, 227, 230, 235, 237, 239, 242, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 262, 263, 268, 270, 272, 275, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 296, 301, 303, 305, 308, 312, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 329, 334, 336, 338, 341, 345, 346, 347, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 360, 363, 368, 370, 372, 375, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 396, 401, 403, 405, 408, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 428, 429, 434, 436, 438, 441, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 459, 461, 462, 467, 469, 471, 474, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 498, 500, 502, 504, 507, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 526, 529, 531, 533, 536, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 553, 554, 555, 558, 560, 564, 565, 566, 567, 568, 569, 572, 574, 576, 578, 580, 583, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 600, 601, 604, 606, 607, 612, 615, 616, 617, 618, 620, 623, 624, 625, 627, 630, 631, 632, 633, 635, 636, 638, 639, 641, 644, 645, 647, 648, 649, 650, 652, 660, 661, 663, 664, 667, 668, 669, 670, 671, 679, 680, 682, 683, 686, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 725, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 756, 759, 762, 765, 767, 771, 773, 787, 791, 793, 794, 796, 797, 798, 799, 800, 801, 806, 807, 808, 811, 812, 813, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 948, 950, 951, 952, 953, 955, 956, 957, 959, 960, 962, 963, 966, 967, 971, 972, 973, 974, 975, 977, 978, 979, 980, 981, 983, 985, 987, 989, 990, 991, 992, 994, 995, 996, 998, 999, 1001, 1002, 1005, 1006, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1037, 1039, 1040, 1043, 1044, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1074, 1075, 1077, 1078, 1081, 1082, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1117, 1118, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1136, 1140, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1156, 1157, 1160, 1161, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1181, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1192, 1193, 1195, 1196, 1199, 1200, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1217, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1230, 1231, 1233, 1234, 1237, 1238, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1268, 1269, 1271, 1272, 1275, 1276, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1296, 1298, 1300, 1302, 1305, 1309, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1326, 1328, 1330, 1333, 1334, 1337, 1341, 1342, 1343, 1344, 1346, 1348, 1349, 1350, 1351, 1352, 1354, 1356, 1357, 1360, 1362, 1364, 1367, 1368, 1371, 1375, 1376, 1377, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1388, 1390, 1391, 1394, 1396, 1398, 1401, 1402, 1405, 1409, 1410, 1411, 1412, 1414, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1432, 1435, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1456, 1458, 1460, 1463, 1464, 1467, 1471, 1472, 1473, 1474, 1476, 1478, 1479, 1480, 1481, 1482, 1484, 1485, 1487, 1489, 1491, 1493, 1496, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1512, 1513, 1515, 1517, 1519, 1521, 1524, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1541, 1543, 1545, 1547, 1549, 1552, 1556, 1557, 1558, 1559, 1560, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1573, 1575, 1577, 1580, 1581, 1584, 1588, 1589, 1590, 1591, 1593, 1595, 1596, 1597, 1598, 1599, 1601, 1603, 1605, 1607, 1609, 1611, 1614, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1635, 1637, 1639, 1642, 1643, 1646, 1650, 1651, 1652, 1653, 1655, 1657, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1667, 1669, 1671, 1673, 1676, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1692, 1699, 1700, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1757, 1758, 1763, 1770, 1772, 1776, 1785, 1789, 1792, 1793, 1794, 1795, 1801, 1804, 1805, 1806, 1809, 1811, 1815, 1818, 1819, 1820, 1821, 1829, 1831, 1832, 1834, 1835, 1838, 1841, 1843, 1844, 1846, 1847, 1854, 1856, 1857, 1859, 1862, 1865, 1867, 1868, 1873, 1874, 1875, 1877, 1879, 1885, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1902, 1903, 1904, 1906, 1908, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1923], "experi": [1, 9, 34], "In": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 71, 97, 129, 162, 195, 197, 227, 260, 293, 326, 360, 393, 426, 459, 491, 523, 543, 550, 569, 597, 618, 624, 633, 746, 797, 823, 981, 1020, 1058, 1096, 1136, 1175, 1214, 1252, 1290, 1319, 1352, 1386, 1420, 1449, 1482, 1510, 1538, 1566, 1599, 1628, 1661, 1690, 1721, 1795, 1809, 1821, 1835, 1896], "thi": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 52, 57, 60, 61, 62, 68, 69, 71, 73, 84, 89, 91, 92, 94, 95, 97, 99, 100, 111, 117, 121, 123, 124, 126, 127, 129, 131, 144, 149, 152, 153, 154, 159, 160, 162, 164, 177, 182, 185, 186, 187, 192, 193, 195, 197, 198, 209, 215, 219, 221, 222, 224, 225, 227, 229, 242, 247, 250, 251, 252, 257, 258, 260, 262, 275, 280, 283, 284, 285, 290, 291, 293, 295, 308, 313, 316, 317, 318, 323, 324, 326, 328, 341, 346, 350, 351, 357, 358, 360, 362, 375, 380, 384, 385, 390, 391, 393, 395, 408, 413, 417, 418, 423, 424, 426, 428, 441, 446, 450, 451, 456, 457, 459, 461, 474, 479, 482, 483, 484, 488, 489, 491, 493, 494, 495, 507, 512, 514, 517, 518, 520, 521, 523, 525, 536, 541, 544, 545, 547, 548, 550, 552, 553, 554, 567, 569, 571, 572, 583, 588, 590, 592, 594, 595, 597, 599, 601, 604, 605, 606, 607, 618, 620, 624, 633, 635, 636, 638, 641, 645, 647, 648, 649, 652, 653, 659, 660, 663, 664, 665, 668, 669, 670, 671, 679, 680, 682, 683, 686, 689, 690, 691, 696, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 717, 718, 719, 725, 728, 732, 733, 734, 735, 739, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 754, 756, 762, 765, 767, 771, 773, 787, 791, 793, 794, 796, 797, 798, 799, 800, 801, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 847, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 920, 921, 922, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 950, 951, 953, 955, 956, 957, 960, 962, 966, 967, 972, 974, 976, 978, 979, 981, 983, 984, 985, 989, 990, 992, 994, 995, 996, 999, 1001, 1005, 1006, 1011, 1013, 1015, 1017, 1018, 1020, 1022, 1023, 1027, 1028, 1030, 1032, 1033, 1034, 1037, 1039, 1043, 1044, 1049, 1051, 1053, 1055, 1056, 1058, 1060, 1061, 1065, 1066, 1068, 1070, 1071, 1072, 1075, 1077, 1081, 1082, 1087, 1089, 1091, 1093, 1094, 1096, 1098, 1099, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1115, 1117, 1121, 1122, 1127, 1129, 1131, 1133, 1134, 1136, 1138, 1139, 1140, 1144, 1145, 1147, 1149, 1150, 1151, 1154, 1156, 1160, 1161, 1166, 1168, 1170, 1172, 1173, 1175, 1177, 1178, 1179, 1183, 1184, 1186, 1188, 1189, 1190, 1193, 1195, 1199, 1200, 1205, 1207, 1209, 1211, 1212, 1214, 1216, 1217, 1221, 1222, 1224, 1226, 1227, 1228, 1231, 1233, 1237, 1238, 1243, 1245, 1247, 1249, 1250, 1252, 1254, 1255, 1259, 1260, 1262, 1264, 1265, 1266, 1269, 1271, 1275, 1276, 1281, 1283, 1285, 1287, 1288, 1290, 1292, 1293, 1294, 1305, 1310, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1323, 1325, 1333, 1337, 1342, 1344, 1345, 1347, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1359, 1367, 1371, 1376, 1378, 1379, 1381, 1383, 1384, 1386, 1388, 1389, 1390, 1391, 1393, 1401, 1405, 1410, 1412, 1413, 1415, 1417, 1418, 1420, 1422, 1423, 1424, 1435, 1440, 1442, 1444, 1446, 1447, 1449, 1451, 1452, 1453, 1455, 1463, 1467, 1472, 1474, 1475, 1477, 1479, 1480, 1482, 1484, 1485, 1496, 1501, 1503, 1505, 1507, 1508, 1510, 1512, 1513, 1524, 1529, 1531, 1533, 1535, 1536, 1538, 1540, 1541, 1552, 1557, 1559, 1561, 1563, 1564, 1566, 1568, 1569, 1570, 1572, 1580, 1584, 1589, 1591, 1592, 1594, 1596, 1597, 1599, 1601, 1602, 1603, 1614, 1619, 1621, 1623, 1625, 1626, 1628, 1630, 1631, 1632, 1634, 1642, 1646, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1665, 1676, 1681, 1683, 1685, 1687, 1688, 1690, 1692, 1700, 1709, 1710, 1711, 1712, 1716, 1717, 1721, 1722, 1724, 1725, 1726, 1728, 1729, 1738, 1743, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1757, 1758, 1765, 1767, 1769, 1770, 1772, 1774, 1776, 1778, 1780, 1785, 1795, 1809, 1821, 1835, 1847, 1862, 1863, 1865, 1866, 1871, 1872, 1879, 1881, 1888, 1893, 1894, 1896, 1899, 1902, 1903, 1904, 1911, 1913, 1916, 1917, 1919], "page": [1, 15, 37], "you": [1, 5, 7, 15, 16, 18, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 479, 512, 541, 588, 604, 644, 972, 983, 1011, 1049, 1087, 1127, 1166, 1205, 1243, 1281, 1310, 1342, 1376, 1410, 1440, 1472, 1501, 1529, 1557, 1589, 1619, 1651, 1681, 1714, 1778, 1780, 1905, 1917], "can": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 52, 57, 61, 73, 84, 89, 91, 99, 111, 117, 119, 121, 131, 144, 149, 153, 164, 177, 182, 186, 197, 209, 215, 219, 229, 242, 247, 251, 262, 275, 280, 284, 295, 308, 313, 317, 328, 341, 346, 349, 350, 362, 375, 380, 383, 384, 395, 408, 413, 416, 417, 428, 441, 446, 449, 450, 461, 474, 479, 483, 494, 507, 512, 514, 525, 536, 541, 543, 544, 554, 571, 583, 588, 601, 604, 624, 644, 648, 649, 651, 652, 663, 665, 666, 746, 747, 748, 750, 797, 798, 800, 823, 824, 827, 828, 830, 835, 847, 854, 865, 879, 906, 923, 930, 931, 944, 945, 954, 966, 972, 983, 984, 993, 1005, 1011, 1022, 1031, 1043, 1049, 1060, 1069, 1081, 1087, 1098, 1107, 1121, 1127, 1138, 1139, 1148, 1160, 1166, 1177, 1178, 1187, 1199, 1205, 1216, 1225, 1237, 1243, 1254, 1263, 1275, 1281, 1293, 1305, 1310, 1321, 1322, 1337, 1342, 1345, 1355, 1356, 1371, 1376, 1379, 1389, 1390, 1405, 1410, 1413, 1423, 1435, 1440, 1451, 1452, 1467, 1472, 1475, 1484, 1496, 1501, 1512, 1524, 1529, 1540, 1552, 1557, 1568, 1569, 1584, 1589, 1592, 1602, 1614, 1619, 1630, 1631, 1646, 1651, 1654, 1664, 1676, 1681, 1700, 1717, 1720, 1729, 1737, 1743, 1745, 1747, 1748, 1749, 1778, 1780, 1834, 1835, 1846, 1859, 1888, 1893, 1894, 1916, 1919], "lot": [1, 24, 30, 31, 34, 1060, 1098, 1254, 1729, 1747, 1905], "help": [1, 9, 10, 18, 26, 27, 29, 30, 31, 620, 1022, 1060, 1098, 1254, 1729, 1747, 1751], "get": [1, 5, 9, 14, 16, 18, 19, 23, 24, 26, 28, 29, 30, 31, 33, 37, 212, 644, 747, 857, 858, 859, 860, 861, 863, 864, 865, 868, 870, 879, 881, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 899, 900, 902, 903, 1331, 1333, 1354, 1355, 1365, 1367, 1388, 1389, 1399, 1401, 1422, 1461, 1463, 1578, 1580, 1601, 1640, 1642, 1663, 1769, 1770, 1772, 1776, 1903, 1904, 1905], "start": [1, 5, 9, 13, 16, 17, 23, 24, 26, 27, 29, 30, 32, 33, 34, 37, 220, 515, 591, 639, 741, 747, 749, 799, 832, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684, 1737, 1829, 1841, 1854, 1908], "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 40, 45, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 74, 77, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 100, 101, 104, 108, 110, 111, 112, 113, 116, 117, 118, 121, 122, 123, 124, 126, 132, 137, 141, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 165, 170, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 198, 199, 202, 206, 208, 209, 210, 211, 214, 215, 216, 219, 220, 221, 222, 224, 229, 230, 235, 239, 241, 242, 243, 244, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 262, 263, 268, 272, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 296, 301, 305, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 329, 334, 338, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 357, 363, 368, 372, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 396, 401, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 429, 434, 438, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 462, 467, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 493, 495, 496, 498, 500, 504, 506, 507, 508, 509, 511, 512, 513, 514, 517, 520, 526, 529, 533, 535, 536, 537, 538, 540, 541, 542, 544, 545, 547, 555, 560, 562, 564, 565, 572, 573, 574, 576, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 594, 599, 600, 601, 602, 603, 604, 605, 606, 616, 620, 624, 631, 636, 637, 638, 648, 649, 652, 660, 663, 664, 665, 667, 668, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 716, 717, 718, 720, 721, 722, 723, 724, 725, 730, 731, 732, 733, 740, 741, 742, 744, 745, 747, 749, 752, 753, 754, 755, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 793, 795, 796, 799, 812, 813, 815, 819, 821, 822, 826, 830, 832, 841, 846, 847, 849, 850, 852, 854, 861, 865, 876, 879, 881, 885, 892, 894, 901, 903, 908, 923, 924, 927, 933, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 960, 962, 963, 965, 966, 967, 968, 969, 971, 972, 973, 974, 976, 978, 983, 984, 985, 986, 987, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1015, 1017, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1037, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1053, 1055, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1075, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1093, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1131, 1133, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1170, 1172, 1177, 1178, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1193, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1209, 1211, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1249, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1269, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1285, 1287, 1294, 1295, 1296, 1298, 1302, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1314, 1316, 1323, 1324, 1325, 1326, 1328, 1333, 1334, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1347, 1349, 1357, 1358, 1359, 1360, 1362, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1381, 1383, 1391, 1392, 1393, 1394, 1396, 1401, 1402, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1415, 1417, 1424, 1425, 1426, 1428, 1432, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1444, 1446, 1453, 1454, 1455, 1456, 1458, 1463, 1464, 1466, 1467, 1468, 1469, 1471, 1472, 1473, 1474, 1477, 1479, 1485, 1486, 1487, 1489, 1493, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1505, 1507, 1512, 1513, 1514, 1515, 1517, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1535, 1541, 1542, 1543, 1545, 1549, 1551, 1552, 1553, 1554, 1556, 1557, 1558, 1559, 1561, 1563, 1568, 1570, 1571, 1572, 1573, 1575, 1580, 1581, 1583, 1584, 1585, 1586, 1588, 1589, 1590, 1591, 1594, 1596, 1603, 1604, 1605, 1607, 1611, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1623, 1625, 1630, 1632, 1633, 1634, 1635, 1637, 1642, 1643, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1656, 1658, 1665, 1666, 1667, 1669, 1673, 1675, 1676, 1677, 1678, 1680, 1681, 1682, 1683, 1685, 1687, 1700, 1710, 1712, 1713, 1714, 1715, 1720, 1721, 1722, 1724, 1725, 1726, 1728, 1729, 1735, 1736, 1737, 1738, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1793, 1805, 1819, 1835, 1838, 1847, 1865, 1868, 1875, 1877, 1892, 1894, 1898, 1899, 1903, 1904, 1905, 1911, 1915, 1916, 1917, 1919], "categor": [1, 663], "follow": [1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 18, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 71, 97, 100, 129, 131, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 491, 495, 523, 550, 569, 572, 597, 618, 633, 636, 663, 742, 746, 748, 750, 797, 798, 800, 823, 824, 828, 835, 921, 923, 930, 931, 932, 934, 935, 936, 937, 938, 939, 946, 981, 985, 1020, 1023, 1058, 1061, 1096, 1099, 1136, 1140, 1175, 1179, 1214, 1217, 1252, 1255, 1290, 1294, 1319, 1323, 1352, 1357, 1386, 1391, 1420, 1424, 1449, 1453, 1482, 1485, 1510, 1513, 1538, 1541, 1566, 1570, 1599, 1603, 1628, 1632, 1661, 1665, 1690, 1714, 1729, 1737, 1747, 1774, 1795, 1809, 1821, 1896, 1899], "categori": 1, "creat": [1, 2, 3, 5, 6, 9, 10, 16, 17, 18, 22, 23, 26, 27, 28, 29, 30, 34, 35, 46, 62, 78, 92, 105, 123, 138, 154, 171, 187, 203, 221, 236, 252, 269, 285, 302, 318, 335, 351, 369, 385, 402, 418, 435, 451, 468, 484, 494, 501, 517, 530, 545, 557, 577, 592, 605, 611, 625, 626, 649, 652, 664, 741, 742, 749, 799, 832, 928, 950, 951, 958, 960, 962, 976, 983, 989, 990, 997, 999, 1001, 1015, 1022, 1027, 1028, 1035, 1037, 1039, 1053, 1065, 1066, 1073, 1075, 1077, 1091, 1098, 1103, 1104, 1113, 1115, 1117, 1131, 1144, 1145, 1152, 1154, 1156, 1170, 1183, 1184, 1191, 1193, 1195, 1209, 1216, 1221, 1222, 1229, 1231, 1233, 1247, 1259, 1260, 1267, 1269, 1271, 1285, 1293, 1299, 1314, 1329, 1347, 1355, 1363, 1381, 1389, 1397, 1415, 1423, 1429, 1444, 1451, 1459, 1477, 1490, 1505, 1518, 1533, 1546, 1561, 1576, 1594, 1608, 1623, 1638, 1656, 1664, 1670, 1685, 1729, 1751, 1765, 1767, 1778, 1780, 1788, 1800, 1814, 1835, 1838, 1884, 1890, 1916, 1917, 1918, 1921], "cubic": [1, 5, 6, 7, 8, 9, 12, 13, 16, 18, 21, 22, 23, 29, 30, 31, 32, 35, 742, 746, 758, 761, 797, 823, 824, 933, 944, 950, 951, 953, 954, 955, 956, 957, 967, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1044, 1060, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1082, 1098, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1122, 1138, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1161, 1177, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1200, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1238, 1254, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1276, 1729, 1732, 1733, 1737, 1743, 1752, 1753, 1916, 1917], "defin": [1, 3, 4, 7, 9, 17, 22, 23, 24, 26, 29, 30, 32, 35, 73, 516, 623, 644, 691, 692, 694, 697, 701, 747, 772, 930, 931, 944, 945, 983, 984, 1060, 1098, 1111, 1112, 1138, 1139, 1177, 1178, 1216, 1254, 1723, 1724, 1743, 1835], "phase": [1, 3, 10, 17, 18, 19, 21, 22, 23, 29, 30, 31, 34, 35, 212, 220, 222, 494, 497, 514, 516, 518, 552, 571, 635, 660, 662, 664, 665, 667, 668, 826, 830, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 917, 919, 920, 921, 923, 924, 925, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 1293, 1423, 1451, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1540, 1602, 1664, 1835, 1902, 1915], "perform": [1, 10, 26, 28, 29, 30, 33, 34, 36, 38, 52, 53, 54, 57, 68, 84, 85, 86, 89, 94, 111, 112, 113, 117, 126, 144, 145, 146, 149, 159, 177, 178, 179, 182, 192, 209, 210, 211, 215, 218, 224, 242, 243, 244, 247, 257, 262, 275, 276, 277, 280, 290, 308, 309, 310, 313, 323, 328, 341, 342, 343, 346, 357, 375, 376, 377, 380, 390, 408, 409, 410, 413, 423, 441, 442, 443, 446, 456, 474, 475, 476, 479, 488, 507, 508, 509, 512, 520, 536, 537, 538, 541, 547, 583, 584, 585, 588, 594, 601, 602, 603, 604, 606, 747, 955, 966, 968, 969, 972, 978, 994, 1005, 1007, 1008, 1011, 1017, 1032, 1043, 1045, 1046, 1049, 1055, 1060, 1070, 1081, 1083, 1084, 1087, 1093, 1098, 1108, 1121, 1123, 1124, 1127, 1133, 1149, 1160, 1162, 1163, 1166, 1172, 1188, 1199, 1201, 1202, 1205, 1211, 1226, 1237, 1239, 1240, 1243, 1249, 1254, 1264, 1275, 1277, 1278, 1281, 1287, 1305, 1306, 1307, 1310, 1316, 1337, 1338, 1339, 1342, 1349, 1371, 1372, 1373, 1376, 1383, 1405, 1406, 1407, 1410, 1417, 1435, 1436, 1437, 1440, 1446, 1467, 1468, 1469, 1472, 1479, 1496, 1497, 1498, 1501, 1507, 1524, 1525, 1526, 1529, 1535, 1552, 1553, 1554, 1557, 1563, 1584, 1585, 1586, 1589, 1596, 1614, 1615, 1616, 1619, 1625, 1646, 1647, 1648, 1651, 1658, 1676, 1677, 1678, 1681, 1687, 1720, 1728, 1749, 1751, 1923], "drainag": [1, 9, 12, 13, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "simul": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 18, 19, 21, 23, 24, 27, 32, 35, 36, 38, 39, 99, 120, 131, 164, 229, 262, 295, 328, 362, 395, 428, 525, 759, 805, 858, 1512, 1835, 1923], "calcul": [1, 5, 6, 9, 22, 24, 31, 35, 59, 131, 151, 184, 229, 249, 282, 315, 348, 382, 415, 448, 461, 481, 516, 552, 624, 660, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 734, 735, 736, 737, 738, 739, 741, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 765, 766, 767, 768, 769, 770, 793, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 839, 853, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 906, 908, 909, 911, 912, 913, 914, 916, 917, 919, 920, 921, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 983, 1321, 1325, 1359, 1393, 1455, 1484, 1572, 1634, 1915], "10": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 198, 672, 673, 674, 675, 676, 677, 678, 747, 888, 890, 930, 931, 935, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1906, 1916, 1917], "step": [1, 4, 6, 8, 12, 13, 17, 21, 28, 29, 30, 32, 34, 37, 100, 120, 218, 349, 383, 416, 449, 495, 543, 572, 636, 651, 747, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1728, 1751], "numer": [1, 3, 19, 21, 23, 29, 30, 31, 32, 40, 51, 58, 69, 74, 83, 90, 95, 101, 110, 118, 127, 132, 143, 150, 160, 165, 176, 183, 193, 199, 208, 216, 225, 230, 241, 248, 258, 263, 274, 281, 291, 296, 307, 314, 324, 329, 340, 347, 358, 363, 374, 381, 391, 396, 407, 414, 424, 429, 440, 447, 457, 462, 473, 480, 489, 498, 506, 513, 521, 526, 535, 542, 548, 555, 562, 565, 567, 574, 582, 589, 595, 649, 652, 663, 818, 820, 857, 858, 859, 860, 861, 863, 864, 865, 868, 870, 873, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 902, 903, 933, 948, 965, 973, 979, 987, 1004, 1012, 1018, 1025, 1042, 1050, 1056, 1063, 1080, 1088, 1094, 1101, 1120, 1128, 1134, 1142, 1159, 1167, 1173, 1181, 1198, 1206, 1212, 1219, 1236, 1244, 1250, 1257, 1274, 1282, 1288, 1296, 1304, 1311, 1317, 1326, 1336, 1343, 1350, 1360, 1370, 1377, 1384, 1394, 1404, 1411, 1418, 1426, 1434, 1441, 1447, 1456, 1466, 1473, 1480, 1487, 1495, 1502, 1508, 1515, 1523, 1530, 1536, 1543, 1551, 1558, 1564, 1573, 1583, 1590, 1597, 1605, 1613, 1620, 1626, 1635, 1645, 1652, 1659, 1667, 1675, 1682, 1688, 1903, 1904], "python": [1, 3, 5, 17, 18, 28, 29, 30, 32, 34, 35, 37, 854, 944, 956, 983, 995, 1033, 1060, 1071, 1098, 1109, 1138, 1150, 1177, 1189, 1216, 1227, 1254, 1265, 1512, 1699, 1721, 1725, 1726, 1888, 1893, 1905, 1911], "primer": [1, 3, 27], "gener": [1, 3, 4, 5, 7, 9, 10, 11, 14, 15, 16, 17, 22, 23, 28, 29, 30, 31, 32, 35, 49, 51, 70, 73, 81, 83, 96, 108, 110, 128, 141, 143, 161, 174, 176, 194, 206, 208, 226, 239, 241, 259, 272, 274, 292, 305, 307, 325, 338, 340, 359, 372, 374, 392, 405, 407, 425, 438, 440, 458, 471, 473, 490, 495, 504, 506, 522, 533, 535, 549, 560, 562, 568, 572, 580, 582, 596, 620, 636, 663, 740, 741, 742, 749, 799, 815, 827, 832, 923, 924, 930, 931, 933, 943, 944, 946, 950, 956, 963, 965, 980, 983, 985, 989, 995, 1002, 1004, 1019, 1022, 1023, 1027, 1033, 1040, 1042, 1057, 1060, 1061, 1065, 1071, 1078, 1080, 1095, 1098, 1099, 1103, 1109, 1118, 1120, 1135, 1138, 1140, 1144, 1150, 1157, 1159, 1174, 1177, 1179, 1183, 1189, 1196, 1198, 1213, 1216, 1217, 1221, 1227, 1234, 1236, 1251, 1254, 1255, 1259, 1265, 1272, 1274, 1289, 1292, 1294, 1302, 1304, 1318, 1323, 1334, 1336, 1351, 1357, 1368, 1370, 1385, 1391, 1402, 1404, 1419, 1424, 1432, 1434, 1448, 1453, 1464, 1466, 1481, 1485, 1493, 1495, 1509, 1512, 1513, 1521, 1523, 1537, 1541, 1549, 1551, 1565, 1570, 1581, 1583, 1598, 1603, 1611, 1613, 1627, 1632, 1643, 1645, 1660, 1665, 1673, 1675, 1689, 1721, 1725, 1726, 1728, 1729, 1746, 1752, 1753, 1838, 1883, 1890, 1902, 1915, 1919, 1920], "quick": [1, 3, 5, 15, 26, 1916], "visual": [1, 3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 624, 667, 983, 1916, 1917, 1919], "storag": [1, 3, 29, 31, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "topologi": [1, 3, 5, 27, 29, 983, 1216, 1916], "represent": [1, 3, 21, 649, 933, 1754, 1757], "queri": [1, 3, 31, 32, 34, 52, 57, 68, 84, 89, 94, 111, 117, 126, 144, 149, 159, 177, 182, 192, 209, 215, 224, 242, 247, 257, 275, 280, 290, 308, 313, 323, 341, 346, 357, 375, 380, 390, 408, 413, 423, 441, 446, 456, 474, 479, 488, 507, 512, 520, 536, 541, 547, 583, 588, 594, 601, 604, 606, 966, 972, 978, 1005, 1011, 1017, 1043, 1049, 1055, 1081, 1087, 1093, 1121, 1127, 1133, 1160, 1166, 1172, 1199, 1205, 1211, 1216, 1237, 1243, 1249, 1275, 1281, 1287, 1305, 1310, 1316, 1337, 1342, 1349, 1371, 1376, 1383, 1405, 1410, 1417, 1435, 1440, 1446, 1467, 1472, 1479, 1496, 1501, 1507, 1524, 1529, 1535, 1552, 1557, 1563, 1584, 1589, 1596, 1614, 1619, 1625, 1646, 1651, 1658, 1676, 1681, 1687], "manipul": [1, 3, 27, 57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 479, 512, 541, 588, 604, 972, 1011, 1049, 1087, 1127, 1166, 1205, 1243, 1281, 1310, 1342, 1376, 1410, 1440, 1472, 1501, 1529, 1557, 1589, 1619, 1651, 1681], "assign": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 22, 23, 27, 28, 29, 31, 34, 35, 45, 52, 53, 54, 57, 64, 66, 68, 77, 84, 85, 86, 89, 94, 104, 111, 112, 113, 117, 126, 137, 144, 145, 146, 149, 155, 157, 159, 170, 177, 178, 179, 182, 188, 190, 192, 202, 209, 210, 211, 215, 224, 235, 242, 243, 244, 247, 253, 255, 257, 268, 275, 276, 277, 280, 286, 288, 290, 301, 308, 309, 310, 313, 319, 321, 323, 334, 341, 342, 343, 346, 353, 355, 357, 368, 375, 376, 377, 380, 386, 388, 390, 401, 408, 409, 410, 413, 419, 421, 423, 434, 441, 442, 443, 446, 452, 454, 456, 467, 474, 475, 476, 479, 485, 486, 488, 500, 507, 508, 509, 512, 520, 529, 536, 537, 538, 541, 547, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 607, 620, 649, 747, 838, 930, 931, 944, 952, 966, 968, 969, 972, 978, 983, 991, 1005, 1007, 1008, 1011, 1017, 1029, 1043, 1045, 1046, 1049, 1055, 1060, 1067, 1081, 1083, 1084, 1087, 1093, 1098, 1105, 1121, 1123, 1124, 1127, 1133, 1138, 1146, 1160, 1162, 1163, 1166, 1172, 1177, 1185, 1199, 1201, 1202, 1205, 1211, 1216, 1223, 1237, 1239, 1240, 1243, 1249, 1254, 1261, 1275, 1277, 1278, 1281, 1287, 1298, 1305, 1306, 1307, 1310, 1316, 1322, 1328, 1337, 1338, 1339, 1342, 1349, 1356, 1362, 1371, 1372, 1373, 1376, 1383, 1390, 1396, 1405, 1406, 1407, 1410, 1417, 1428, 1435, 1436, 1437, 1440, 1446, 1452, 1458, 1467, 1468, 1469, 1472, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1545, 1552, 1553, 1554, 1557, 1563, 1569, 1575, 1584, 1585, 1586, 1589, 1596, 1607, 1614, 1615, 1616, 1619, 1625, 1631, 1637, 1646, 1647, 1648, 1651, 1658, 1669, 1676, 1677, 1678, 1681, 1687, 1712, 1750, 1756, 1847, 1919], "geometr": [1, 3, 4, 5, 11, 12, 13, 15, 16, 24, 28, 32, 33, 34, 648, 689, 716, 731, 921, 1138], "label": [1, 3, 5, 6, 7, 9, 10, 12, 13, 15, 19, 23, 27, 29, 30, 32, 33, 34, 40, 45, 51, 53, 54, 57, 62, 68, 74, 77, 83, 85, 86, 89, 92, 94, 101, 104, 110, 112, 113, 117, 123, 126, 132, 137, 143, 145, 146, 149, 154, 159, 165, 170, 176, 178, 179, 182, 187, 192, 199, 202, 208, 210, 211, 215, 221, 224, 230, 235, 241, 243, 244, 247, 252, 257, 263, 268, 274, 276, 277, 280, 285, 290, 296, 301, 307, 309, 310, 313, 318, 323, 329, 334, 340, 342, 343, 346, 351, 357, 363, 368, 374, 376, 377, 380, 385, 390, 396, 401, 407, 409, 410, 413, 418, 423, 429, 434, 440, 442, 443, 446, 451, 456, 462, 467, 473, 475, 476, 479, 484, 488, 495, 496, 498, 500, 506, 508, 509, 512, 515, 517, 520, 526, 529, 535, 537, 538, 541, 545, 547, 553, 555, 562, 572, 573, 574, 576, 582, 584, 585, 588, 591, 592, 594, 599, 600, 602, 603, 604, 605, 606, 636, 637, 639, 663, 665, 944, 945, 946, 947, 948, 952, 956, 957, 965, 968, 969, 972, 975, 976, 978, 984, 985, 986, 987, 991, 995, 996, 1004, 1007, 1008, 1011, 1014, 1015, 1017, 1023, 1024, 1025, 1029, 1033, 1034, 1042, 1045, 1046, 1049, 1052, 1053, 1055, 1061, 1062, 1063, 1067, 1071, 1072, 1080, 1083, 1084, 1087, 1090, 1091, 1093, 1098, 1099, 1100, 1101, 1105, 1109, 1110, 1120, 1123, 1124, 1127, 1130, 1131, 1133, 1139, 1140, 1141, 1142, 1146, 1150, 1151, 1159, 1162, 1163, 1166, 1169, 1170, 1172, 1177, 1178, 1179, 1180, 1181, 1185, 1189, 1190, 1198, 1201, 1202, 1205, 1208, 1209, 1211, 1217, 1218, 1219, 1223, 1227, 1228, 1236, 1239, 1240, 1243, 1246, 1247, 1249, 1255, 1256, 1257, 1261, 1265, 1266, 1274, 1277, 1278, 1281, 1284, 1285, 1287, 1294, 1295, 1296, 1298, 1304, 1306, 1307, 1310, 1313, 1314, 1316, 1323, 1324, 1326, 1328, 1336, 1338, 1339, 1342, 1346, 1347, 1349, 1357, 1358, 1360, 1362, 1370, 1372, 1373, 1376, 1380, 1381, 1383, 1391, 1392, 1394, 1396, 1404, 1406, 1407, 1410, 1414, 1415, 1417, 1424, 1425, 1426, 1428, 1434, 1436, 1437, 1440, 1443, 1444, 1446, 1453, 1454, 1456, 1458, 1466, 1468, 1469, 1472, 1476, 1477, 1479, 1485, 1486, 1487, 1489, 1495, 1497, 1498, 1501, 1504, 1505, 1507, 1513, 1514, 1515, 1517, 1523, 1525, 1526, 1529, 1532, 1533, 1535, 1541, 1542, 1543, 1545, 1551, 1553, 1554, 1557, 1560, 1561, 1563, 1570, 1571, 1573, 1575, 1583, 1585, 1586, 1589, 1593, 1594, 1596, 1603, 1604, 1605, 1607, 1613, 1615, 1616, 1619, 1622, 1623, 1625, 1632, 1633, 1635, 1637, 1645, 1647, 1648, 1651, 1655, 1656, 1658, 1665, 1666, 1667, 1669, 1675, 1677, 1678, 1681, 1684, 1685, 1687, 1710, 1712, 1713, 1714, 1718, 1720, 1728, 1743, 1745, 1750, 1751, 1756, 1903, 1912, 1915, 1916, 1917, 1918, 1920], "domain": [1, 3, 4, 7, 8, 15, 24, 30, 32, 34, 39, 73, 99, 122, 131, 164, 197, 222, 229, 262, 295, 328, 362, 395, 428, 461, 494, 495, 496, 515, 525, 554, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 607, 636, 637, 639, 944, 946, 947, 975, 983, 985, 986, 1014, 1022, 1023, 1024, 1052, 1060, 1061, 1062, 1090, 1098, 1099, 1100, 1130, 1138, 1140, 1141, 1169, 1177, 1179, 1180, 1208, 1216, 1217, 1218, 1246, 1254, 1255, 1256, 1284, 1293, 1294, 1295, 1313, 1321, 1323, 1324, 1346, 1355, 1357, 1358, 1380, 1389, 1391, 1392, 1414, 1423, 1424, 1425, 1443, 1451, 1453, 1454, 1476, 1484, 1485, 1486, 1504, 1512, 1513, 1514, 1532, 1540, 1541, 1542, 1560, 1568, 1570, 1571, 1593, 1602, 1603, 1604, 1622, 1630, 1632, 1633, 1655, 1664, 1665, 1666, 1684, 1728, 1729, 1731, 1737, 1747], "singl": [1, 2, 3, 6, 10, 12, 13, 18, 19, 26, 28, 29, 31, 32, 34, 35, 59, 61, 91, 121, 151, 153, 184, 186, 219, 249, 251, 282, 284, 315, 317, 348, 350, 382, 384, 415, 417, 448, 450, 481, 483, 494, 544, 652, 663, 665, 667, 921, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1512, 1711, 1715, 1728, 1745, 1894, 1901, 1916, 1917], "invas": [1, 3, 12, 100, 197, 198, 220], "option": [1, 3, 21, 26, 27, 28, 30, 32, 34, 37, 40, 45, 49, 51, 52, 53, 54, 57, 59, 61, 62, 63, 64, 65, 66, 68, 74, 77, 81, 83, 84, 85, 86, 89, 91, 92, 94, 101, 104, 108, 110, 111, 112, 113, 117, 121, 122, 123, 124, 126, 132, 137, 141, 143, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 159, 165, 170, 174, 176, 177, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 199, 202, 206, 208, 209, 210, 211, 215, 219, 220, 221, 222, 224, 230, 235, 239, 241, 242, 243, 244, 247, 249, 251, 252, 253, 254, 255, 257, 262, 263, 268, 272, 274, 275, 276, 277, 280, 282, 284, 285, 286, 287, 288, 290, 296, 301, 305, 307, 308, 309, 310, 313, 315, 317, 318, 319, 320, 321, 323, 329, 334, 338, 340, 341, 342, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 363, 368, 372, 374, 375, 376, 377, 380, 382, 383, 384, 385, 386, 387, 388, 390, 396, 401, 405, 407, 408, 409, 410, 413, 415, 416, 417, 418, 419, 420, 421, 423, 429, 434, 438, 440, 441, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 456, 462, 467, 471, 473, 474, 475, 476, 479, 481, 483, 484, 485, 486, 488, 495, 498, 500, 504, 506, 507, 508, 509, 512, 517, 520, 526, 529, 533, 535, 536, 537, 538, 541, 543, 544, 545, 547, 555, 560, 562, 572, 574, 576, 580, 582, 583, 584, 585, 588, 592, 594, 600, 601, 602, 603, 604, 605, 606, 623, 625, 636, 651, 660, 663, 664, 667, 668, 742, 744, 745, 759, 793, 795, 796, 821, 822, 839, 854, 876, 901, 923, 927, 944, 946, 948, 950, 951, 952, 953, 956, 957, 960, 962, 963, 965, 966, 967, 968, 969, 972, 976, 978, 983, 985, 987, 989, 990, 991, 992, 995, 996, 999, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1011, 1015, 1017, 1022, 1023, 1025, 1027, 1028, 1029, 1030, 1033, 1034, 1037, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1049, 1053, 1055, 1060, 1061, 1063, 1065, 1066, 1067, 1068, 1071, 1072, 1075, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1087, 1091, 1093, 1098, 1099, 1101, 1103, 1104, 1105, 1106, 1109, 1110, 1115, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1127, 1131, 1133, 1138, 1140, 1142, 1144, 1145, 1146, 1147, 1150, 1151, 1154, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1166, 1170, 1172, 1177, 1179, 1181, 1183, 1184, 1185, 1186, 1189, 1190, 1193, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1205, 1209, 1211, 1216, 1217, 1219, 1221, 1222, 1223, 1224, 1227, 1228, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1243, 1247, 1249, 1254, 1255, 1257, 1259, 1260, 1261, 1262, 1265, 1266, 1269, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1281, 1285, 1287, 1294, 1296, 1298, 1302, 1304, 1305, 1306, 1307, 1310, 1314, 1316, 1323, 1326, 1328, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1347, 1349, 1354, 1357, 1360, 1362, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1381, 1383, 1388, 1391, 1394, 1396, 1401, 1402, 1404, 1405, 1406, 1407, 1410, 1415, 1417, 1422, 1424, 1426, 1428, 1432, 1434, 1435, 1436, 1437, 1440, 1444, 1446, 1453, 1456, 1458, 1463, 1464, 1466, 1467, 1468, 1469, 1472, 1477, 1479, 1485, 1487, 1489, 1493, 1495, 1496, 1497, 1498, 1501, 1505, 1507, 1512, 1513, 1515, 1517, 1521, 1523, 1524, 1525, 1526, 1529, 1533, 1535, 1541, 1543, 1545, 1549, 1551, 1552, 1553, 1554, 1557, 1561, 1563, 1570, 1573, 1575, 1580, 1581, 1583, 1584, 1585, 1586, 1589, 1594, 1596, 1601, 1603, 1605, 1607, 1611, 1613, 1614, 1615, 1616, 1619, 1623, 1625, 1632, 1635, 1637, 1642, 1643, 1645, 1646, 1647, 1648, 1651, 1656, 1658, 1663, 1665, 1667, 1669, 1673, 1675, 1676, 1677, 1678, 1681, 1685, 1687, 1700, 1713, 1715, 1718, 1721, 1722, 1725, 1726, 1727, 1735, 1737, 1745, 1748, 1751, 1752, 1753, 1778, 1883, 1890, 1893, 1903, 1904, 1916, 1917, 1918], "applic": [1, 21, 22, 24, 26, 30, 34, 52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 474, 507, 536, 583, 601, 966, 1005, 1043, 1060, 1081, 1121, 1160, 1199, 1237, 1254, 1275, 1305, 1337, 1371, 1405, 1435, 1467, 1496, 1524, 1552, 1584, 1614, 1646, 1676], "refer": [1, 7, 18, 19, 26, 27, 28, 30, 32, 33, 34, 66, 157, 190, 198, 255, 288, 321, 349, 355, 383, 388, 416, 421, 449, 454, 486, 543, 648, 652, 742, 748, 750, 763, 764, 798, 800, 828, 835, 847, 854, 861, 864, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 902, 903, 908, 921, 924, 925, 930, 931, 1774, 1838], "scale": [1, 2, 4, 5, 6, 9, 11, 12, 13, 15, 19, 22, 28, 31, 32, 35, 39, 40, 51, 73, 74, 83, 99, 101, 110, 131, 132, 143, 164, 165, 176, 197, 199, 208, 229, 230, 241, 262, 263, 274, 295, 296, 307, 328, 329, 340, 362, 363, 374, 395, 396, 407, 428, 429, 440, 461, 462, 473, 494, 495, 498, 506, 525, 526, 535, 554, 555, 562, 571, 572, 574, 582, 635, 636, 648, 659, 668, 672, 673, 674, 675, 676, 677, 678, 689, 746, 748, 750, 797, 798, 800, 815, 823, 828, 829, 835, 884, 921, 923, 944, 946, 948, 965, 983, 985, 987, 1004, 1022, 1023, 1025, 1042, 1060, 1061, 1063, 1080, 1098, 1099, 1101, 1120, 1138, 1140, 1142, 1159, 1177, 1179, 1181, 1198, 1216, 1217, 1219, 1236, 1254, 1255, 1257, 1274, 1293, 1294, 1296, 1304, 1321, 1323, 1326, 1336, 1355, 1357, 1360, 1370, 1389, 1391, 1394, 1404, 1423, 1424, 1426, 1434, 1451, 1453, 1456, 1466, 1484, 1485, 1487, 1495, 1512, 1513, 1515, 1523, 1540, 1541, 1543, 1551, 1568, 1570, 1573, 1583, 1602, 1603, 1605, 1613, 1630, 1632, 1635, 1645, 1664, 1665, 1667, 1675, 1700, 1905, 1916, 1917, 1918, 1919], "model": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 22, 23, 27, 28, 34, 35, 39, 40, 51, 65, 73, 74, 83, 99, 101, 110, 131, 132, 143, 156, 164, 165, 176, 189, 197, 199, 208, 229, 230, 241, 254, 262, 263, 274, 287, 295, 296, 307, 320, 328, 329, 340, 354, 362, 363, 374, 387, 395, 396, 407, 420, 428, 429, 440, 453, 461, 462, 473, 494, 495, 496, 498, 506, 514, 515, 516, 525, 526, 535, 554, 555, 562, 571, 572, 573, 574, 582, 590, 591, 607, 620, 624, 635, 636, 637, 638, 639, 659, 668, 672, 673, 674, 675, 676, 677, 678, 681, 684, 685, 687, 688, 689, 691, 696, 699, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 717, 718, 725, 728, 732, 733, 735, 739, 741, 742, 745, 746, 747, 748, 749, 750, 793, 796, 797, 798, 799, 800, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 831, 832, 833, 834, 835, 836, 853, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 923, 924, 925, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 946, 947, 948, 965, 974, 975, 983, 985, 986, 987, 1004, 1013, 1014, 1022, 1023, 1024, 1025, 1042, 1051, 1052, 1060, 1061, 1062, 1063, 1080, 1089, 1090, 1098, 1099, 1100, 1101, 1120, 1129, 1130, 1138, 1140, 1141, 1142, 1159, 1168, 1169, 1177, 1179, 1180, 1181, 1198, 1207, 1208, 1216, 1217, 1218, 1219, 1236, 1245, 1246, 1254, 1255, 1256, 1257, 1274, 1283, 1284, 1293, 1294, 1295, 1296, 1304, 1312, 1313, 1321, 1323, 1324, 1326, 1336, 1344, 1346, 1355, 1357, 1358, 1360, 1370, 1378, 1380, 1389, 1391, 1392, 1394, 1404, 1412, 1414, 1423, 1424, 1425, 1426, 1434, 1442, 1443, 1451, 1453, 1454, 1456, 1466, 1474, 1476, 1484, 1485, 1486, 1487, 1495, 1503, 1504, 1512, 1513, 1514, 1515, 1523, 1531, 1532, 1540, 1541, 1542, 1543, 1551, 1559, 1560, 1568, 1570, 1571, 1573, 1583, 1591, 1593, 1602, 1603, 1604, 1605, 1613, 1621, 1622, 1630, 1632, 1633, 1635, 1645, 1653, 1655, 1664, 1665, 1666, 1667, 1675, 1683, 1684, 1902, 1905, 1909, 1910, 1915], "set": [1, 2, 6, 7, 9, 11, 12, 13, 15, 16, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 39, 46, 50, 52, 59, 60, 61, 62, 65, 73, 78, 82, 84, 91, 92, 99, 100, 105, 109, 111, 121, 123, 131, 138, 142, 144, 151, 152, 153, 154, 156, 164, 171, 175, 177, 184, 185, 186, 187, 189, 197, 198, 203, 207, 209, 219, 221, 229, 236, 240, 242, 249, 250, 251, 252, 254, 262, 269, 273, 275, 282, 283, 284, 285, 287, 295, 302, 306, 308, 315, 316, 317, 318, 320, 328, 335, 339, 341, 348, 350, 351, 354, 362, 369, 373, 375, 382, 384, 385, 387, 395, 402, 406, 408, 415, 417, 418, 420, 428, 435, 439, 441, 448, 450, 451, 453, 461, 468, 472, 474, 481, 482, 483, 484, 494, 497, 501, 505, 507, 516, 517, 518, 525, 530, 534, 536, 544, 545, 554, 557, 561, 571, 577, 581, 583, 592, 601, 605, 611, 613, 614, 626, 628, 629, 652, 660, 748, 750, 798, 800, 828, 835, 927, 944, 950, 951, 956, 957, 958, 964, 966, 976, 983, 989, 990, 995, 996, 997, 1003, 1005, 1015, 1022, 1027, 1028, 1033, 1034, 1035, 1041, 1043, 1053, 1060, 1065, 1066, 1071, 1072, 1073, 1079, 1081, 1091, 1098, 1103, 1104, 1109, 1110, 1113, 1119, 1121, 1131, 1138, 1144, 1145, 1150, 1151, 1152, 1158, 1160, 1170, 1177, 1183, 1184, 1189, 1190, 1191, 1197, 1199, 1209, 1216, 1221, 1222, 1227, 1228, 1229, 1235, 1237, 1247, 1254, 1259, 1260, 1265, 1266, 1267, 1273, 1275, 1285, 1293, 1299, 1303, 1305, 1314, 1321, 1329, 1335, 1337, 1347, 1354, 1355, 1363, 1369, 1371, 1381, 1388, 1389, 1397, 1403, 1405, 1415, 1422, 1423, 1429, 1433, 1435, 1444, 1451, 1459, 1465, 1467, 1477, 1484, 1490, 1494, 1496, 1505, 1512, 1518, 1522, 1524, 1533, 1540, 1546, 1550, 1552, 1561, 1568, 1576, 1582, 1584, 1594, 1601, 1602, 1608, 1612, 1614, 1623, 1630, 1638, 1644, 1646, 1656, 1663, 1664, 1670, 1674, 1676, 1685, 1720, 1721, 1723, 1725, 1726, 1727, 1729, 1737, 1747, 1751, 1754, 1756, 1757, 1788, 1790, 1791, 1800, 1802, 1803, 1814, 1816, 1817, 1834, 1838, 1846, 1847, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1884, 1886, 1887, 1909, 1910, 1917], "attribut": [1, 2, 4, 10, 16, 18, 21, 26, 28, 30, 31, 34, 39, 60, 73, 99, 131, 152, 164, 185, 197, 229, 250, 262, 283, 295, 316, 328, 362, 395, 428, 461, 482, 494, 525, 554, 571, 590, 607, 620, 635, 638, 659, 668, 854, 944, 974, 983, 1013, 1022, 1051, 1060, 1089, 1098, 1129, 1138, 1168, 1177, 1207, 1216, 1245, 1254, 1283, 1293, 1312, 1321, 1344, 1355, 1378, 1389, 1412, 1423, 1442, 1451, 1474, 1484, 1503, 1512, 1531, 1540, 1559, 1568, 1591, 1602, 1621, 1630, 1653, 1664, 1683, 1760, 1761, 1763, 1770, 1772, 1774, 1776, 1785, 1835, 1848, 1860, 1861, 1898, 1910], "machineri": [1, 2], "workspac": [1, 2, 9, 11, 13, 24, 659, 1758, 1835, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897], "project": [1, 2, 5, 35, 36, 39, 73, 99, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 494, 525, 554, 571, 647, 652, 659, 662, 663, 664, 665, 666, 667, 668, 944, 983, 1022, 1060, 1098, 1138, 1177, 1216, 1254, 1293, 1321, 1355, 1389, 1423, 1451, 1484, 1512, 1540, 1568, 1602, 1630, 1664, 1711, 1758, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1879, 1881, 1883, 1888, 1889, 1890, 1893, 1894], "manag": [1, 2, 31, 553, 925], "cluster": [1, 2, 34, 100, 838, 839, 1712, 1720, 1724, 1735, 1738, 1745, 1750, 1756, 1899], "avail": [1, 2, 7, 11, 22, 24, 26, 32, 33, 34, 35, 37, 496, 543, 573, 637, 652, 879, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1324, 1358, 1392, 1425, 1454, 1486, 1514, 1542, 1571, 1604, 1633, 1666, 1699, 1722], "matrix": [1, 2, 19, 23, 26, 28, 30, 39, 131, 164, 229, 262, 295, 328, 362, 395, 428, 461, 944, 950, 951, 960, 962, 983, 989, 990, 999, 1001, 1022, 1027, 1028, 1037, 1039, 1060, 1065, 1066, 1075, 1077, 1098, 1103, 1104, 1115, 1117, 1138, 1144, 1145, 1154, 1156, 1177, 1183, 1184, 1193, 1195, 1216, 1221, 1222, 1231, 1233, 1254, 1259, 1260, 1269, 1271, 1699, 1700, 1715, 1717, 1722, 1739, 1740, 1741, 1742, 1748, 1749, 1754, 1757, 1906], "solver": [1, 2, 17, 19, 21, 23, 24, 60, 152, 185, 250, 283, 316, 482, 641, 1693, 1695, 1697, 1699, 1700, 1703], "steadi": [1, 2, 24, 35, 262, 328, 461, 660, 668], "state": [1, 2, 9, 24, 28, 33, 34, 35, 262, 461, 660, 666, 668, 858, 859, 927, 1325, 1359, 1393, 1455, 1572, 1634], "explan": [1, 2, 1797, 1882, 1920], "unit": [1, 2, 7, 648, 807, 854, 857, 858, 859, 860, 861, 863, 864, 865, 868, 870, 879, 881, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 899, 900, 902, 903, 930, 931, 944, 1177], "reactiv": [1, 2], "conduct": [1, 2, 4, 6, 8, 10, 17, 19, 21, 23, 28, 164, 229, 552, 889, 890, 891, 892, 904, 906, 911, 912, 913, 914, 916, 917, 919, 920, 921, 927, 931, 941, 942, 1060, 1254], "transient": [1, 2, 328, 349, 362, 383, 395, 416, 428, 449, 525, 543, 660, 668, 759], "softwar": [2, 27, 35, 648, 650], "illustr": [2, 5, 10, 23, 26, 27, 28, 29, 30, 32, 33, 34, 746, 748, 750, 797, 798, 800, 823, 828, 835, 1751], "problem": [2, 9, 10, 11, 12, 23, 26, 28, 29, 30, 328, 906, 1899], "fix": [2, 9, 14, 30, 32, 34, 854, 1899], "appli": [2, 11, 23, 24, 28, 30, 31, 33, 34, 35, 45, 52, 61, 62, 63, 64, 65, 66, 77, 84, 91, 92, 100, 104, 111, 120, 121, 122, 123, 124, 131, 137, 144, 153, 154, 155, 156, 157, 170, 177, 186, 187, 188, 189, 190, 202, 209, 219, 220, 221, 222, 235, 242, 251, 252, 253, 254, 255, 268, 275, 284, 285, 286, 287, 288, 301, 308, 317, 318, 319, 320, 321, 334, 341, 350, 351, 352, 353, 354, 355, 368, 375, 384, 385, 386, 387, 388, 401, 408, 417, 418, 419, 420, 421, 434, 441, 450, 451, 452, 453, 454, 467, 474, 483, 484, 485, 486, 495, 496, 500, 507, 517, 529, 536, 544, 545, 553, 572, 573, 576, 583, 592, 600, 601, 605, 636, 637, 818, 824, 854, 876, 901, 921, 930, 931, 946, 947, 950, 951, 952, 956, 957, 966, 967, 976, 985, 986, 989, 990, 991, 995, 996, 1005, 1006, 1015, 1023, 1024, 1027, 1028, 1029, 1033, 1034, 1043, 1044, 1053, 1061, 1062, 1065, 1066, 1067, 1071, 1072, 1081, 1082, 1091, 1099, 1100, 1103, 1104, 1105, 1109, 1110, 1121, 1122, 1131, 1140, 1141, 1144, 1145, 1146, 1150, 1151, 1160, 1161, 1170, 1179, 1180, 1183, 1184, 1185, 1189, 1190, 1199, 1200, 1209, 1217, 1218, 1221, 1222, 1223, 1227, 1228, 1237, 1238, 1247, 1255, 1256, 1259, 1260, 1261, 1265, 1266, 1275, 1276, 1285, 1294, 1295, 1298, 1305, 1314, 1322, 1323, 1324, 1328, 1333, 1337, 1347, 1356, 1357, 1358, 1362, 1367, 1371, 1381, 1390, 1391, 1392, 1396, 1401, 1405, 1415, 1424, 1425, 1428, 1435, 1444, 1452, 1453, 1454, 1458, 1463, 1467, 1477, 1485, 1486, 1489, 1496, 1505, 1513, 1514, 1517, 1524, 1533, 1541, 1542, 1545, 1552, 1561, 1569, 1570, 1571, 1575, 1580, 1584, 1594, 1603, 1604, 1607, 1614, 1623, 1631, 1632, 1633, 1637, 1642, 1646, 1656, 1665, 1666, 1669, 1676, 1685, 1710, 1713, 1714, 1718, 1725, 1726, 1728, 1737, 1743, 1745, 1751, 1834, 1846, 1859], "valu": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 29, 30, 31, 33, 34, 35, 43, 45, 46, 47, 49, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 77, 78, 79, 81, 88, 89, 91, 93, 94, 95, 96, 104, 105, 106, 108, 116, 117, 121, 122, 124, 125, 126, 127, 128, 135, 137, 138, 139, 141, 148, 149, 151, 153, 155, 157, 158, 159, 160, 161, 168, 170, 171, 172, 174, 181, 182, 184, 186, 188, 190, 191, 192, 193, 194, 198, 202, 203, 204, 206, 214, 215, 219, 220, 222, 223, 224, 225, 226, 233, 235, 236, 237, 239, 246, 247, 249, 251, 253, 255, 256, 257, 258, 259, 266, 268, 269, 270, 272, 279, 280, 282, 284, 286, 288, 289, 290, 291, 292, 299, 301, 302, 303, 305, 312, 313, 315, 317, 319, 321, 322, 323, 324, 325, 332, 334, 335, 336, 338, 345, 346, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 366, 368, 369, 370, 372, 379, 380, 382, 383, 384, 386, 388, 389, 390, 391, 392, 399, 401, 402, 403, 405, 412, 413, 415, 416, 417, 419, 421, 422, 423, 424, 425, 432, 434, 435, 436, 438, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 458, 465, 467, 468, 469, 471, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 495, 500, 501, 502, 504, 511, 512, 518, 519, 520, 521, 522, 529, 530, 531, 533, 540, 541, 543, 544, 546, 547, 548, 549, 557, 558, 560, 564, 566, 567, 568, 572, 576, 577, 578, 580, 587, 588, 593, 594, 595, 596, 600, 604, 606, 611, 612, 616, 617, 620, 626, 627, 631, 632, 636, 644, 648, 660, 667, 684, 685, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 741, 742, 744, 745, 746, 747, 748, 749, 750, 752, 754, 757, 758, 759, 760, 761, 764, 765, 766, 768, 769, 770, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 793, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 847, 854, 857, 858, 859, 860, 861, 863, 864, 865, 868, 870, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 923, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 946, 950, 951, 952, 954, 958, 959, 960, 962, 963, 967, 971, 972, 977, 978, 979, 980, 983, 985, 989, 990, 991, 993, 997, 998, 999, 1001, 1002, 1006, 1010, 1011, 1016, 1017, 1018, 1019, 1022, 1023, 1027, 1028, 1029, 1031, 1035, 1036, 1037, 1039, 1040, 1044, 1048, 1049, 1054, 1055, 1056, 1057, 1060, 1061, 1065, 1066, 1067, 1069, 1073, 1074, 1075, 1077, 1078, 1082, 1086, 1087, 1092, 1093, 1094, 1095, 1098, 1099, 1103, 1104, 1105, 1107, 1113, 1114, 1115, 1117, 1118, 1122, 1126, 1127, 1132, 1133, 1134, 1135, 1138, 1140, 1144, 1145, 1146, 1148, 1152, 1153, 1154, 1156, 1157, 1161, 1165, 1166, 1171, 1172, 1173, 1174, 1177, 1179, 1183, 1184, 1185, 1187, 1191, 1192, 1193, 1195, 1196, 1200, 1204, 1205, 1210, 1211, 1212, 1213, 1216, 1217, 1221, 1222, 1223, 1225, 1229, 1230, 1231, 1233, 1234, 1238, 1242, 1243, 1248, 1249, 1250, 1251, 1254, 1255, 1259, 1260, 1261, 1263, 1267, 1268, 1269, 1271, 1272, 1276, 1280, 1281, 1286, 1287, 1288, 1289, 1293, 1294, 1298, 1299, 1300, 1302, 1309, 1310, 1315, 1316, 1317, 1318, 1322, 1323, 1325, 1328, 1329, 1330, 1331, 1333, 1334, 1341, 1342, 1348, 1349, 1350, 1351, 1356, 1357, 1359, 1362, 1363, 1364, 1365, 1367, 1368, 1375, 1376, 1382, 1383, 1384, 1385, 1390, 1391, 1393, 1396, 1397, 1398, 1399, 1401, 1402, 1409, 1410, 1416, 1417, 1418, 1419, 1423, 1424, 1428, 1429, 1430, 1432, 1439, 1440, 1445, 1446, 1447, 1448, 1452, 1453, 1455, 1458, 1459, 1460, 1461, 1463, 1464, 1471, 1472, 1478, 1479, 1480, 1481, 1485, 1489, 1490, 1491, 1493, 1500, 1501, 1506, 1507, 1508, 1509, 1513, 1517, 1518, 1519, 1521, 1528, 1529, 1534, 1535, 1536, 1537, 1541, 1545, 1546, 1547, 1549, 1556, 1557, 1562, 1563, 1564, 1565, 1569, 1570, 1572, 1575, 1576, 1577, 1578, 1580, 1581, 1588, 1589, 1595, 1596, 1597, 1598, 1603, 1607, 1608, 1609, 1611, 1618, 1619, 1624, 1625, 1626, 1627, 1631, 1632, 1634, 1637, 1638, 1639, 1640, 1642, 1643, 1650, 1651, 1657, 1658, 1659, 1660, 1664, 1665, 1669, 1670, 1671, 1673, 1680, 1681, 1686, 1687, 1688, 1689, 1710, 1712, 1715, 1716, 1717, 1722, 1724, 1736, 1737, 1738, 1746, 1749, 1750, 1752, 1753, 1785, 1788, 1789, 1793, 1794, 1800, 1801, 1805, 1806, 1811, 1814, 1815, 1819, 1820, 1827, 1829, 1832, 1834, 1839, 1841, 1844, 1846, 1847, 1849, 1852, 1854, 1855, 1857, 1859, 1884, 1885, 1892, 1895, 1909, 1910, 1916, 1917, 1918, 1919, 1920], "rate": [2, 4, 6, 7, 8, 10, 13, 15, 19, 23, 24, 33, 42, 61, 64, 91, 121, 131, 134, 153, 155, 167, 186, 188, 219, 232, 251, 253, 265, 284, 286, 298, 317, 319, 331, 350, 353, 365, 384, 386, 398, 417, 419, 431, 450, 452, 464, 483, 485, 544, 904, 928, 930, 931, 932, 934, 935, 936, 937, 938, 939, 1916], "boundari": [2, 4, 7, 8, 9, 10, 11, 13, 15, 19, 24, 31, 34, 41, 61, 63, 64, 65, 66, 75, 91, 102, 121, 122, 124, 131, 133, 153, 155, 156, 157, 166, 186, 188, 189, 190, 200, 219, 220, 222, 231, 251, 253, 254, 255, 264, 284, 286, 287, 288, 297, 317, 319, 320, 321, 330, 350, 352, 353, 354, 355, 364, 384, 386, 387, 388, 397, 417, 419, 420, 421, 430, 450, 452, 453, 454, 463, 483, 485, 486, 527, 544, 945, 984, 1139, 1178, 1710, 1729, 1735, 1737, 1916, 1917], "condit": [2, 4, 8, 9, 13, 15, 19, 23, 24, 31, 34, 41, 61, 63, 64, 65, 66, 75, 91, 102, 121, 122, 124, 131, 133, 153, 155, 156, 157, 166, 186, 188, 189, 190, 200, 219, 220, 222, 231, 251, 253, 254, 255, 264, 284, 286, 287, 288, 297, 317, 319, 320, 321, 330, 349, 350, 352, 353, 354, 355, 364, 383, 384, 386, 387, 388, 397, 416, 417, 419, 420, 421, 430, 449, 450, 452, 453, 454, 463, 483, 485, 486, 527, 543, 544, 847, 854, 858, 865, 1735], "solv": [2, 4, 7, 19, 23, 24, 30, 33, 63, 352, 930, 931, 1699, 1701, 1705, 1707], "system": [2, 19, 23, 24, 494, 552, 644, 930, 931, 1694, 1696, 1698, 1699, 1700, 1701, 1702, 1704, 1705, 1706, 1707, 1708, 1729, 1747], "equat": [2, 4, 6, 9, 19, 22, 23, 24, 33, 34, 863, 868, 894, 908, 909, 924, 925, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 1694, 1696, 1698, 1702, 1704, 1706, 1708], "spars": [2, 34, 944, 950, 951, 960, 962, 983, 989, 990, 999, 1001, 1022, 1027, 1028, 1037, 1039, 1060, 1065, 1066, 1075, 1077, 1098, 1103, 1104, 1115, 1117, 1138, 1144, 1145, 1154, 1156, 1177, 1183, 1184, 1193, 1195, 1216, 1221, 1222, 1231, 1233, 1254, 1259, 1260, 1269, 1271, 1692, 1699, 1705, 1707, 1712, 1715, 1717, 1722, 1727, 1739, 1740, 1741, 1742, 1750, 1754, 1757, 1906], "matric": [2, 19, 60, 152, 185, 250, 283, 316, 482, 1216], "pressur": [2, 4, 6, 9, 12, 13, 15, 17, 21, 23, 24, 32, 33, 34, 100, 114, 120, 197, 212, 763, 764, 854, 857, 861, 863, 864, 884, 885, 888, 890, 892, 894, 895, 896, 899, 900, 902, 903, 906, 908, 909, 914, 923, 924, 925, 928], "v": [2, 6, 29, 30, 32, 71, 97, 129, 162, 195, 212, 227, 260, 293, 326, 360, 393, 426, 459, 491, 523, 550, 569, 597, 618, 633, 930, 931, 981, 1020, 1058, 1096, 1136, 1175, 1214, 1252, 1290, 1319, 1352, 1386, 1420, 1449, 1482, 1510, 1538, 1566, 1599, 1628, 1661, 1690, 1795, 1809, 1821, 1896], "gaug": 2, "convers": [2, 1835], "packag": [2, 13, 17, 26, 32, 34, 36, 648, 651, 660, 854, 894, 1321, 1512, 1568, 1630, 1923], "challeng": [2, 11, 34], "sourc": [2, 11, 35, 36, 37, 39, 63, 65, 73, 75, 91, 99, 100, 114, 119, 120, 122, 124, 131, 156, 164, 189, 197, 198, 212, 217, 218, 220, 222, 229, 254, 262, 284, 287, 295, 320, 328, 354, 362, 387, 395, 420, 428, 449, 453, 461, 464, 465, 481, 482, 485, 486, 494, 497, 514, 516, 518, 525, 543, 552, 554, 555, 559, 560, 562, 563, 565, 567, 568, 571, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 620, 623, 624, 625, 633, 635, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 741, 742, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 761, 763, 764, 766, 768, 769, 770, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 792, 793, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 807, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 917, 919, 920, 921, 923, 924, 925, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 945, 983, 984, 1022, 1060, 1098, 1111, 1112, 1138, 1177, 1178, 1216, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1231, 1233, 1238, 1254, 1293, 1321, 1355, 1388, 1389, 1422, 1423, 1451, 1452, 1455, 1461, 1463, 1474, 1475, 1484, 1512, 1540, 1568, 1602, 1630, 1664, 1693, 1694, 1695, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1785, 1797, 1803, 1807, 1808, 1811, 1823, 1835, 1838, 1847, 1848, 1849, 1853, 1855, 1860, 1861, 1862, 1879, 1881, 1882, 1883, 1888, 1889, 1890, 1893, 1894, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922], "term": [2, 12, 24, 31, 33, 34, 65, 156, 189, 254, 262, 287, 320, 354, 387, 420, 453, 648, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 983], "function": [2, 5, 6, 9, 10, 11, 16, 18, 21, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 52, 61, 69, 84, 91, 95, 100, 111, 121, 127, 144, 153, 160, 177, 186, 193, 198, 209, 219, 225, 242, 251, 258, 275, 284, 291, 308, 317, 324, 341, 349, 350, 358, 375, 383, 384, 391, 408, 416, 417, 424, 441, 449, 450, 457, 474, 483, 489, 493, 495, 507, 521, 536, 543, 544, 548, 567, 571, 572, 583, 590, 595, 599, 601, 607, 608, 635, 636, 638, 644, 663, 672, 673, 674, 675, 676, 677, 678, 681, 684, 685, 687, 688, 690, 704, 719, 734, 740, 743, 747, 748, 750, 751, 754, 756, 762, 765, 767, 771, 773, 787, 791, 794, 798, 800, 801, 806, 808, 815, 824, 826, 828, 830, 835, 836, 853, 854, 856, 858, 862, 866, 871, 874, 879, 880, 882, 886, 893, 897, 905, 906, 907, 910, 915, 918, 921, 922, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 946, 966, 974, 979, 985, 1005, 1013, 1018, 1023, 1043, 1051, 1056, 1061, 1081, 1089, 1094, 1099, 1121, 1129, 1134, 1140, 1160, 1168, 1173, 1179, 1199, 1207, 1212, 1216, 1217, 1237, 1245, 1250, 1255, 1275, 1283, 1288, 1294, 1305, 1312, 1317, 1321, 1323, 1337, 1344, 1350, 1357, 1371, 1378, 1384, 1391, 1405, 1412, 1418, 1424, 1435, 1442, 1447, 1453, 1467, 1474, 1480, 1485, 1496, 1503, 1508, 1513, 1524, 1531, 1536, 1541, 1552, 1559, 1564, 1568, 1570, 1584, 1591, 1597, 1603, 1614, 1621, 1626, 1630, 1632, 1646, 1653, 1659, 1665, 1676, 1683, 1688, 1711, 1712, 1714, 1716, 1728, 1729, 1743, 1749, 1750, 1756, 1760, 1766, 1768, 1769, 1778, 1779, 1780, 1781, 1834, 1846, 1847, 1859, 1879, 1903, 1904, 1913, 1917], "how": [2, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 24, 26, 27, 28, 29, 30, 31, 32, 33, 45, 49, 52, 53, 54, 57, 59, 61, 62, 63, 64, 65, 66, 68, 77, 81, 84, 85, 86, 89, 91, 92, 94, 104, 108, 111, 112, 113, 117, 121, 122, 123, 124, 126, 137, 141, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 159, 170, 174, 177, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 202, 206, 209, 210, 211, 215, 219, 220, 221, 222, 224, 235, 239, 242, 243, 244, 247, 249, 251, 252, 253, 254, 255, 257, 268, 272, 275, 276, 277, 280, 282, 284, 285, 286, 287, 288, 290, 301, 305, 308, 309, 310, 313, 315, 317, 318, 319, 320, 321, 323, 334, 338, 341, 342, 343, 346, 348, 350, 351, 352, 353, 354, 355, 357, 368, 372, 375, 376, 377, 380, 382, 384, 385, 386, 387, 388, 390, 401, 405, 408, 409, 410, 413, 415, 417, 418, 419, 420, 421, 423, 434, 438, 441, 442, 443, 446, 448, 450, 451, 452, 453, 454, 456, 467, 471, 474, 475, 476, 479, 481, 483, 484, 485, 486, 488, 495, 500, 504, 507, 508, 509, 512, 517, 520, 529, 533, 536, 537, 538, 541, 544, 545, 547, 560, 572, 576, 580, 583, 584, 585, 588, 592, 594, 600, 601, 602, 603, 604, 605, 606, 636, 663, 745, 793, 796, 821, 822, 824, 827, 927, 946, 952, 963, 966, 968, 969, 972, 976, 978, 985, 991, 1002, 1005, 1007, 1008, 1011, 1015, 1017, 1023, 1029, 1040, 1043, 1045, 1046, 1049, 1053, 1055, 1061, 1067, 1078, 1081, 1083, 1084, 1087, 1091, 1093, 1099, 1105, 1118, 1121, 1123, 1124, 1127, 1131, 1133, 1140, 1146, 1157, 1160, 1162, 1163, 1166, 1170, 1172, 1179, 1185, 1196, 1199, 1201, 1202, 1205, 1209, 1211, 1217, 1223, 1234, 1237, 1239, 1240, 1243, 1247, 1249, 1255, 1261, 1272, 1275, 1277, 1278, 1281, 1285, 1287, 1294, 1298, 1302, 1305, 1306, 1307, 1310, 1314, 1316, 1323, 1328, 1334, 1337, 1338, 1339, 1342, 1347, 1349, 1357, 1362, 1368, 1371, 1372, 1373, 1376, 1381, 1383, 1391, 1396, 1402, 1405, 1406, 1407, 1410, 1415, 1417, 1424, 1428, 1432, 1435, 1436, 1437, 1440, 1444, 1446, 1453, 1458, 1464, 1467, 1468, 1469, 1472, 1477, 1479, 1485, 1489, 1493, 1496, 1497, 1498, 1501, 1505, 1507, 1513, 1517, 1521, 1524, 1525, 1526, 1529, 1533, 1535, 1541, 1545, 1549, 1552, 1553, 1554, 1557, 1561, 1563, 1570, 1575, 1581, 1584, 1585, 1586, 1589, 1594, 1596, 1603, 1607, 1611, 1614, 1615, 1616, 1619, 1623, 1625, 1632, 1637, 1643, 1646, 1647, 1648, 1651, 1656, 1658, 1665, 1669, 1673, 1676, 1677, 1678, 1681, 1685, 1687, 1737, 1916], "work": [2, 5, 6, 7, 9, 14, 16, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 37, 514, 624, 648, 652, 667, 742, 748, 750, 798, 800, 828, 835, 847, 854, 1060, 1254, 1321, 1354, 1388, 1422, 1512, 1601, 1663, 1714, 1745, 1765, 1767, 1778, 1780, 1823, 1888, 1893, 1919], "conduit": [2, 4, 6, 12, 13, 21, 33, 552, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 906, 911, 912, 913, 914, 916, 917, 919, 920, 921, 927, 941, 942], "shape": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 27, 28, 29, 30, 32, 33, 34, 35, 653, 690, 704, 705, 706, 707, 708, 710, 711, 713, 716, 718, 719, 734, 744, 746, 750, 756, 764, 773, 795, 797, 800, 804, 808, 810, 811, 814, 823, 824, 835, 906, 921, 933, 944, 950, 951, 953, 954, 955, 956, 957, 967, 983, 989, 990, 992, 993, 994, 995, 996, 1006, 1022, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1044, 1060, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1082, 1098, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1122, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1161, 1177, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1200, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1238, 1254, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1276, 1715, 1718, 1729, 1732, 1737, 1738, 1743, 1747, 1752, 1753, 1811, 1915, 1916, 1917], "built": [2, 5, 7, 21, 26, 660, 1540, 1602], "deriv": [2, 23, 553], "arbitrari": [2, 27, 28, 804, 824, 1022, 1060, 1254, 1873, 1901], "throat": [2, 4, 6, 7, 10, 12, 13, 15, 16, 17, 19, 21, 23, 26, 27, 32, 33, 34, 35, 39, 40, 45, 48, 49, 52, 54, 57, 58, 59, 62, 69, 70, 73, 74, 77, 80, 81, 84, 86, 89, 90, 92, 95, 96, 99, 100, 101, 104, 107, 108, 111, 113, 117, 118, 123, 127, 128, 131, 132, 137, 140, 141, 144, 146, 149, 150, 151, 154, 160, 161, 164, 165, 170, 173, 174, 177, 179, 182, 183, 184, 187, 193, 194, 197, 198, 199, 202, 205, 206, 209, 211, 215, 216, 221, 225, 226, 229, 230, 235, 238, 239, 242, 244, 247, 248, 249, 252, 258, 259, 262, 263, 268, 271, 272, 275, 277, 280, 281, 282, 285, 291, 292, 295, 296, 301, 304, 305, 308, 310, 313, 314, 315, 318, 324, 325, 328, 329, 334, 337, 338, 341, 343, 346, 347, 348, 351, 358, 359, 362, 363, 368, 371, 372, 375, 377, 380, 381, 382, 385, 391, 392, 395, 396, 401, 404, 405, 408, 410, 413, 414, 415, 418, 424, 425, 428, 429, 434, 437, 438, 441, 443, 446, 447, 448, 451, 457, 458, 461, 462, 467, 470, 471, 474, 476, 479, 480, 481, 484, 489, 490, 494, 498, 500, 503, 504, 507, 509, 512, 513, 517, 518, 521, 522, 525, 526, 529, 532, 533, 536, 538, 541, 542, 545, 548, 549, 552, 553, 554, 555, 559, 560, 565, 567, 568, 571, 574, 576, 579, 580, 583, 585, 588, 589, 592, 595, 596, 600, 601, 603, 604, 605, 648, 649, 653, 656, 660, 662, 663, 665, 672, 673, 674, 675, 676, 677, 678, 684, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 745, 752, 753, 754, 755, 759, 763, 764, 766, 768, 769, 770, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 795, 797, 798, 800, 802, 803, 804, 805, 807, 809, 810, 811, 812, 813, 814, 822, 827, 833, 845, 847, 848, 849, 850, 852, 872, 881, 906, 908, 909, 911, 912, 913, 914, 916, 917, 919, 920, 921, 923, 924, 925, 927, 928, 941, 942, 944, 948, 950, 951, 952, 953, 954, 957, 960, 961, 963, 966, 969, 972, 973, 976, 979, 980, 983, 987, 989, 990, 991, 992, 993, 996, 999, 1000, 1002, 1005, 1008, 1011, 1012, 1015, 1018, 1019, 1022, 1025, 1027, 1028, 1029, 1030, 1031, 1034, 1037, 1038, 1040, 1043, 1046, 1049, 1050, 1053, 1056, 1057, 1060, 1063, 1065, 1066, 1067, 1068, 1069, 1072, 1075, 1076, 1078, 1081, 1084, 1087, 1088, 1091, 1094, 1095, 1098, 1101, 1103, 1104, 1105, 1106, 1107, 1110, 1112, 1115, 1116, 1118, 1121, 1124, 1127, 1128, 1131, 1134, 1135, 1138, 1142, 1144, 1145, 1146, 1147, 1148, 1151, 1154, 1155, 1157, 1160, 1163, 1166, 1167, 1170, 1173, 1174, 1177, 1181, 1183, 1184, 1185, 1186, 1187, 1190, 1193, 1194, 1196, 1199, 1202, 1205, 1206, 1209, 1212, 1213, 1216, 1219, 1221, 1222, 1223, 1224, 1225, 1228, 1231, 1232, 1234, 1237, 1240, 1243, 1244, 1247, 1250, 1251, 1254, 1257, 1259, 1260, 1261, 1262, 1263, 1266, 1269, 1270, 1272, 1275, 1278, 1281, 1282, 1285, 1288, 1289, 1293, 1296, 1298, 1301, 1302, 1305, 1307, 1310, 1311, 1314, 1317, 1318, 1321, 1326, 1328, 1332, 1334, 1337, 1339, 1342, 1343, 1347, 1350, 1351, 1355, 1360, 1362, 1366, 1368, 1371, 1373, 1376, 1377, 1381, 1384, 1385, 1389, 1394, 1396, 1400, 1402, 1405, 1407, 1410, 1411, 1415, 1418, 1419, 1423, 1426, 1428, 1431, 1432, 1435, 1437, 1440, 1441, 1444, 1447, 1448, 1451, 1456, 1458, 1462, 1464, 1467, 1469, 1472, 1473, 1477, 1480, 1481, 1484, 1487, 1489, 1492, 1493, 1496, 1498, 1501, 1502, 1505, 1508, 1509, 1512, 1515, 1517, 1520, 1521, 1524, 1526, 1529, 1530, 1533, 1536, 1537, 1540, 1543, 1545, 1548, 1549, 1552, 1554, 1557, 1558, 1561, 1564, 1565, 1568, 1573, 1575, 1579, 1581, 1584, 1586, 1589, 1590, 1594, 1597, 1598, 1602, 1605, 1607, 1610, 1611, 1614, 1616, 1619, 1620, 1623, 1626, 1627, 1630, 1635, 1637, 1641, 1643, 1646, 1648, 1651, 1652, 1656, 1659, 1660, 1664, 1667, 1669, 1672, 1673, 1676, 1678, 1681, 1682, 1685, 1688, 1689, 1711, 1714, 1718, 1720, 1724, 1745, 1746, 1751, 1755, 1898, 1899, 1908, 1914, 1915, 1916, 1917, 1918, 1919, 1920], "element": [2, 17, 21, 26, 28, 30, 31, 33, 34, 52, 58, 84, 90, 111, 118, 144, 150, 177, 183, 209, 216, 242, 248, 275, 281, 308, 314, 341, 347, 375, 381, 408, 414, 441, 447, 474, 480, 507, 513, 536, 542, 565, 583, 589, 601, 644, 660, 663, 672, 673, 674, 675, 676, 677, 678, 701, 716, 731, 741, 742, 749, 799, 819, 827, 830, 832, 834, 927, 928, 950, 954, 966, 967, 973, 989, 993, 1005, 1006, 1012, 1027, 1031, 1043, 1044, 1050, 1065, 1069, 1081, 1082, 1088, 1103, 1107, 1121, 1122, 1128, 1144, 1148, 1160, 1161, 1167, 1183, 1187, 1199, 1200, 1206, 1221, 1225, 1237, 1238, 1244, 1259, 1263, 1275, 1276, 1282, 1305, 1311, 1337, 1343, 1371, 1377, 1405, 1411, 1435, 1441, 1467, 1473, 1496, 1502, 1524, 1530, 1552, 1558, 1584, 1590, 1614, 1620, 1646, 1652, 1676, 1682, 1712, 1714, 1722, 1750, 1828, 1834, 1840, 1846, 1848, 1853, 1859, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1873, 1874, 1875, 1877], "tutori": [3, 9, 19, 26, 27, 28, 30, 31, 32, 1920], "exampl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 21, 22, 24, 26, 27, 30, 32, 35, 746, 748, 750, 797, 798, 800, 823, 824, 828, 835, 933, 950, 951, 953, 954, 955, 956, 957, 967, 989, 990, 992, 993, 994, 995, 996, 1006, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1044, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1082, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1122, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1161, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1200, 1216, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1238, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1276, 1714, 1751, 1765, 1767, 1778, 1780, 1811, 1823, 1905, 1916, 1917], "explain": [4, 10, 11, 15, 19, 21, 23, 28, 30, 32, 1917], "permeabilti": 4, "note": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 52, 53, 54, 57, 61, 63, 65, 69, 84, 85, 86, 89, 91, 95, 100, 111, 112, 113, 117, 121, 127, 131, 144, 145, 146, 149, 153, 156, 160, 177, 178, 179, 182, 186, 189, 193, 197, 198, 209, 210, 211, 215, 219, 225, 242, 243, 244, 247, 251, 254, 258, 262, 275, 276, 277, 280, 284, 287, 291, 308, 309, 310, 313, 317, 320, 324, 341, 342, 343, 346, 350, 352, 354, 358, 375, 376, 377, 380, 384, 387, 391, 408, 409, 410, 413, 417, 420, 424, 428, 441, 442, 443, 446, 450, 453, 457, 474, 475, 476, 479, 483, 489, 494, 495, 496, 507, 508, 509, 512, 521, 536, 537, 538, 541, 544, 548, 552, 567, 572, 573, 583, 584, 585, 588, 590, 595, 601, 602, 603, 604, 624, 636, 637, 638, 648, 649, 650, 652, 653, 659, 660, 666, 668, 691, 696, 699, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 739, 742, 747, 750, 752, 754, 800, 807, 809, 810, 811, 812, 813, 814, 818, 830, 835, 847, 854, 858, 861, 868, 877, 879, 881, 885, 892, 894, 896, 903, 906, 908, 909, 916, 917, 924, 925, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 944, 946, 947, 950, 951, 954, 956, 957, 960, 962, 966, 967, 968, 969, 972, 974, 979, 983, 985, 986, 989, 990, 993, 995, 996, 999, 1001, 1005, 1006, 1007, 1008, 1011, 1013, 1018, 1022, 1023, 1024, 1027, 1028, 1031, 1033, 1034, 1037, 1039, 1043, 1044, 1045, 1046, 1049, 1051, 1056, 1060, 1061, 1062, 1065, 1066, 1069, 1071, 1072, 1075, 1077, 1081, 1082, 1083, 1084, 1087, 1089, 1094, 1098, 1099, 1100, 1103, 1104, 1107, 1109, 1110, 1111, 1112, 1115, 1117, 1121, 1122, 1123, 1124, 1127, 1129, 1134, 1140, 1141, 1144, 1145, 1148, 1150, 1151, 1154, 1156, 1160, 1161, 1162, 1163, 1166, 1168, 1173, 1177, 1179, 1180, 1183, 1184, 1187, 1189, 1190, 1193, 1195, 1199, 1200, 1201, 1202, 1205, 1207, 1212, 1217, 1218, 1221, 1222, 1225, 1227, 1228, 1231, 1233, 1237, 1238, 1239, 1240, 1243, 1245, 1250, 1254, 1255, 1256, 1259, 1260, 1263, 1265, 1266, 1269, 1271, 1275, 1276, 1277, 1278, 1281, 1283, 1288, 1294, 1295, 1305, 1306, 1307, 1310, 1312, 1317, 1322, 1323, 1324, 1337, 1338, 1339, 1342, 1344, 1345, 1350, 1354, 1356, 1357, 1358, 1371, 1372, 1373, 1376, 1378, 1379, 1384, 1388, 1390, 1391, 1392, 1405, 1406, 1407, 1410, 1412, 1413, 1418, 1422, 1424, 1425, 1435, 1436, 1437, 1440, 1442, 1447, 1452, 1453, 1454, 1467, 1468, 1469, 1472, 1474, 1475, 1480, 1485, 1486, 1496, 1497, 1498, 1501, 1503, 1508, 1513, 1514, 1524, 1525, 1526, 1529, 1531, 1536, 1541, 1542, 1552, 1553, 1554, 1557, 1559, 1564, 1569, 1570, 1571, 1584, 1585, 1586, 1589, 1591, 1592, 1597, 1601, 1603, 1604, 1614, 1615, 1616, 1619, 1621, 1626, 1631, 1632, 1633, 1646, 1647, 1648, 1651, 1653, 1654, 1659, 1663, 1665, 1666, 1676, 1677, 1678, 1681, 1683, 1688, 1699, 1700, 1712, 1714, 1716, 1718, 1721, 1722, 1725, 1726, 1727, 1728, 1729, 1737, 1745, 1746, 1749, 1750, 1751, 1756, 1763, 1774, 1838, 1879, 1888, 1893, 1894, 1899, 1903, 1904, 1915, 1916, 1917, 1919], "calcualt": [4, 854], "from": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35, 40, 46, 61, 62, 65, 71, 74, 78, 91, 92, 97, 101, 105, 121, 122, 123, 124, 129, 132, 138, 153, 154, 156, 162, 165, 171, 186, 187, 189, 195, 199, 203, 219, 220, 221, 222, 227, 230, 236, 251, 252, 254, 260, 263, 269, 284, 285, 287, 293, 296, 302, 317, 318, 320, 326, 329, 335, 350, 351, 354, 360, 363, 369, 384, 385, 387, 393, 396, 402, 417, 418, 420, 426, 429, 435, 450, 451, 453, 459, 462, 468, 483, 484, 491, 493, 498, 501, 517, 523, 526, 530, 544, 545, 550, 553, 555, 557, 569, 571, 574, 577, 592, 597, 605, 609, 611, 618, 620, 621, 626, 633, 646, 648, 649, 650, 652, 653, 660, 663, 664, 668, 744, 745, 746, 748, 750, 756, 757, 758, 760, 761, 795, 797, 798, 800, 807, 811, 812, 819, 822, 823, 828, 835, 852, 860, 865, 868, 872, 875, 878, 879, 894, 925, 928, 933, 945, 948, 958, 976, 981, 983, 984, 987, 997, 1015, 1020, 1022, 1025, 1035, 1053, 1058, 1063, 1073, 1091, 1096, 1101, 1111, 1112, 1113, 1131, 1136, 1139, 1142, 1152, 1170, 1175, 1178, 1181, 1191, 1209, 1214, 1219, 1229, 1247, 1252, 1257, 1267, 1285, 1290, 1296, 1299, 1314, 1319, 1326, 1329, 1331, 1345, 1347, 1352, 1360, 1363, 1365, 1379, 1381, 1386, 1394, 1397, 1399, 1413, 1415, 1420, 1426, 1429, 1444, 1449, 1456, 1459, 1461, 1475, 1477, 1482, 1487, 1490, 1505, 1510, 1512, 1515, 1518, 1533, 1538, 1543, 1546, 1561, 1566, 1568, 1573, 1576, 1578, 1592, 1594, 1599, 1605, 1608, 1623, 1628, 1630, 1635, 1638, 1640, 1654, 1656, 1661, 1667, 1670, 1685, 1690, 1700, 1711, 1715, 1717, 1718, 1726, 1737, 1746, 1754, 1755, 1756, 1757, 1760, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1778, 1780, 1786, 1788, 1795, 1798, 1800, 1809, 1811, 1812, 1814, 1821, 1823, 1825, 1828, 1837, 1840, 1850, 1853, 1863, 1866, 1867, 1874, 1879, 1880, 1881, 1884, 1888, 1889, 1896, 1899, 1900, 1905, 1915, 1917, 1919], "porespi": [4, 7, 8, 9, 10, 11, 651], "similar": [4, 6, 7, 8, 11, 12, 13, 24, 30, 32, 34, 764], "algorithm": [4, 6, 7, 8, 9, 10, 12, 13, 15, 17, 18, 19, 23, 24, 35, 39, 60, 61, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 119, 121, 131, 152, 153, 164, 185, 186, 197, 218, 219, 229, 250, 251, 262, 283, 284, 295, 316, 317, 328, 349, 350, 362, 383, 384, 395, 416, 417, 428, 449, 450, 461, 482, 483, 525, 543, 544, 571, 648, 879, 928, 930, 931, 1727, 1835, 1893, 1907], "numpi": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 35, 57, 60, 68, 89, 94, 117, 126, 149, 152, 159, 182, 185, 192, 215, 224, 247, 250, 257, 280, 283, 290, 313, 316, 323, 346, 349, 357, 380, 383, 390, 413, 416, 423, 446, 449, 456, 479, 482, 488, 512, 520, 541, 543, 547, 588, 594, 604, 606, 644, 738, 741, 742, 746, 747, 748, 749, 750, 754, 760, 766, 784, 789, 795, 797, 798, 799, 800, 803, 807, 810, 823, 824, 828, 832, 835, 841, 860, 881, 883, 884, 885, 891, 892, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 928, 933, 941, 942, 954, 956, 972, 978, 993, 995, 1011, 1017, 1031, 1033, 1049, 1055, 1069, 1071, 1087, 1093, 1107, 1109, 1127, 1133, 1148, 1150, 1166, 1172, 1187, 1189, 1205, 1211, 1216, 1225, 1227, 1243, 1249, 1263, 1265, 1281, 1287, 1310, 1316, 1342, 1349, 1376, 1383, 1410, 1417, 1440, 1446, 1472, 1479, 1501, 1507, 1529, 1535, 1557, 1563, 1589, 1596, 1619, 1625, 1651, 1658, 1681, 1687, 1700, 1721, 1725, 1726, 1734, 1752, 1753, 1774, 1811, 1900, 1903, 1904, 1905, 1912], "np": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 53, 57, 61, 69, 70, 73, 85, 89, 91, 95, 96, 99, 100, 112, 117, 121, 127, 128, 131, 145, 149, 153, 160, 161, 164, 178, 182, 186, 193, 194, 197, 210, 215, 219, 225, 226, 229, 243, 247, 251, 258, 259, 262, 276, 280, 284, 291, 292, 295, 309, 313, 317, 324, 325, 328, 342, 346, 350, 358, 359, 362, 376, 380, 384, 391, 392, 395, 409, 413, 417, 424, 425, 428, 442, 446, 450, 457, 458, 461, 475, 479, 483, 489, 490, 494, 495, 508, 512, 521, 522, 525, 537, 541, 544, 548, 549, 554, 567, 568, 571, 572, 584, 588, 595, 596, 602, 604, 636, 742, 746, 797, 823, 824, 839, 841, 898, 902, 933, 944, 946, 950, 951, 967, 968, 972, 979, 980, 983, 985, 989, 990, 1006, 1007, 1011, 1018, 1019, 1022, 1023, 1027, 1028, 1044, 1045, 1049, 1056, 1057, 1060, 1061, 1065, 1066, 1082, 1083, 1087, 1094, 1095, 1098, 1099, 1103, 1104, 1122, 1123, 1127, 1134, 1135, 1138, 1140, 1144, 1145, 1161, 1162, 1166, 1173, 1174, 1177, 1179, 1183, 1184, 1200, 1201, 1205, 1212, 1213, 1216, 1217, 1221, 1222, 1238, 1239, 1243, 1250, 1251, 1254, 1255, 1259, 1260, 1276, 1277, 1281, 1288, 1289, 1293, 1294, 1306, 1310, 1317, 1318, 1321, 1322, 1323, 1338, 1342, 1350, 1351, 1355, 1356, 1357, 1372, 1376, 1384, 1385, 1389, 1390, 1391, 1406, 1410, 1418, 1419, 1423, 1424, 1436, 1440, 1447, 1448, 1451, 1452, 1453, 1468, 1472, 1480, 1481, 1484, 1485, 1497, 1501, 1508, 1509, 1512, 1513, 1525, 1529, 1536, 1537, 1540, 1541, 1553, 1557, 1564, 1565, 1568, 1569, 1570, 1585, 1589, 1597, 1598, 1602, 1603, 1615, 1619, 1626, 1627, 1630, 1631, 1632, 1647, 1651, 1659, 1660, 1664, 1665, 1677, 1681, 1688, 1689, 1699, 1720, 1724, 1734, 1905], "op": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 746, 797, 823, 824, 933, 950, 951, 953, 954, 955, 956, 957, 967, 989, 990, 992, 993, 994, 995, 996, 1006, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1044, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1082, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1122, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1161, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1200, 1216, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1238, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1276, 1746, 1916, 1917], "set_mpl_styl": [4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35], "seed": [4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 19, 22, 27, 28, 30, 31, 33, 34, 35, 672, 673, 674, 675, 676, 677, 678, 741, 742, 746, 748, 749, 750, 792, 793, 797, 798, 799, 800, 823, 828, 832, 835], "matplotlib": [4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 19, 22, 27, 29, 30, 31, 34, 35, 625, 746, 748, 750, 797, 798, 800, 823, 828, 835, 1916, 1917, 1918, 1922], "inlin": [4, 6, 7, 8, 11, 12, 13, 22, 35], "set_printopt": [4, 6, 7, 8, 9, 11, 12, 13, 22], "precis": [4, 6, 7, 8, 9, 11, 12, 13, 22], "5": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 649, 672, 673, 674, 675, 676, 677, 678, 684, 714, 729, 747, 750, 800, 824, 835, 854, 864, 896, 903, 930, 931, 932, 933, 935, 936, 937, 950, 951, 953, 954, 955, 956, 957, 967, 989, 990, 992, 993, 994, 995, 996, 1006, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1044, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1082, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1122, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1161, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1200, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1238, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1276, 1714, 1905, 1919], "pn": [4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 746, 797, 823, 824, 830, 933, 950, 951, 953, 954, 955, 956, 957, 967, 989, 990, 992, 993, 994, 995, 996, 1006, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1044, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1082, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1122, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1161, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1200, 1216, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1238, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1276, 1916, 1917], "15": [4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 19, 22, 26, 27, 28, 29, 30, 31, 33, 34, 35], "space": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 22, 27, 28, 30, 31, 33, 34, 35, 131, 648, 906, 933, 944, 945, 983, 984, 1022, 1139, 1177, 1178, 1733, 1783], "1e": [4, 6, 7, 8, 9, 11, 12, 13, 15, 17, 22, 23, 27, 30, 33, 34, 35, 643, 841, 846, 927, 1697, 1699, 1703, 1705, 1906], "6": [4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 681, 684, 927, 930, 931, 932, 935, 956, 967, 983, 995, 1006, 1033, 1044, 1071, 1082, 1109, 1122, 1150, 1161, 1189, 1200, 1227, 1238, 1265, 1276, 1728, 1747], "add_model_collect": [4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 17, 22, 30, 35], "collect": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 22, 35, 496, 573, 637, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1324, 1358, 1392, 1425, 1454, 1486, 1514, 1542, 1571, 1604, 1633, 1666], "geometri": [4, 6, 8, 9, 10, 11, 12, 13, 15, 21, 22, 24, 30, 31, 35, 653, 746, 747, 797, 823, 1098, 1711], "spheres_and_cylind": [4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 22, 24, 30, 35], "regenerate_model": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 22, 30, 32, 35, 495, 572, 636, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "It": [4, 5, 7, 9, 10, 12, 14, 15, 16, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 61, 91, 121, 153, 186, 198, 219, 251, 284, 317, 350, 384, 417, 450, 483, 514, 544, 635, 648, 742, 854, 1060, 1254, 1737, 1746, 1752, 1753, 1762, 1764, 1766, 1768, 1771, 1773, 1775, 1777, 1779, 1781, 1782, 1784, 1879, 1899, 1919], "assum": [4, 6, 7, 9, 10, 11, 12, 13, 24, 26, 27, 29, 30, 31, 33, 34, 61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 494, 544, 552, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 744, 747, 752, 753, 754, 755, 756, 757, 758, 760, 761, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 795, 854, 879, 906, 908, 909, 930, 931, 933, 950, 983, 989, 1022, 1027, 1065, 1103, 1112, 1144, 1183, 1221, 1259, 1710, 1715, 1738, 1743], "flowsthrough": 4, "porou": [4, 6, 7, 8, 9, 12, 13, 24, 27, 34, 36, 131, 1923], "medium": [4, 6, 8, 12, 13, 24, 927], "As": [4, 12, 13, 15, 16, 17, 19, 22, 23, 24, 28, 30, 31, 32, 33, 35, 854], "fluid": [4, 6, 7, 9, 12, 13, 21, 24, 33, 34, 100, 122, 124, 197, 220, 222, 906, 928], "ani": [4, 5, 7, 8, 9, 10, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 34, 35, 37, 45, 52, 53, 54, 57, 61, 68, 77, 84, 85, 86, 89, 91, 94, 104, 111, 112, 113, 117, 121, 122, 124, 126, 137, 144, 145, 146, 149, 153, 159, 170, 177, 178, 179, 182, 186, 192, 202, 209, 210, 211, 215, 219, 220, 222, 224, 235, 242, 243, 244, 247, 251, 257, 268, 275, 276, 277, 280, 284, 290, 301, 308, 309, 310, 313, 317, 323, 334, 341, 342, 343, 346, 350, 357, 368, 375, 376, 377, 380, 384, 390, 401, 408, 409, 410, 413, 417, 423, 434, 441, 442, 443, 446, 450, 456, 467, 474, 475, 476, 479, 483, 488, 500, 507, 508, 509, 512, 518, 520, 529, 536, 537, 538, 541, 544, 547, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 649, 659, 660, 663, 668, 747, 824, 846, 847, 848, 849, 850, 852, 854, 927, 952, 953, 956, 957, 966, 967, 968, 969, 972, 978, 983, 991, 992, 995, 996, 1005, 1006, 1007, 1008, 1011, 1017, 1029, 1030, 1033, 1034, 1043, 1044, 1045, 1046, 1049, 1055, 1067, 1068, 1071, 1072, 1081, 1082, 1083, 1084, 1087, 1093, 1105, 1106, 1109, 1110, 1121, 1122, 1123, 1124, 1127, 1133, 1146, 1147, 1150, 1151, 1160, 1161, 1162, 1163, 1166, 1172, 1185, 1186, 1189, 1190, 1199, 1200, 1201, 1202, 1205, 1211, 1223, 1224, 1227, 1228, 1237, 1238, 1239, 1240, 1243, 1249, 1261, 1262, 1265, 1266, 1275, 1276, 1277, 1278, 1281, 1287, 1298, 1305, 1306, 1307, 1310, 1316, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1396, 1405, 1406, 1407, 1410, 1417, 1428, 1435, 1436, 1437, 1440, 1446, 1458, 1467, 1468, 1469, 1472, 1479, 1484, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1545, 1552, 1553, 1554, 1557, 1563, 1575, 1584, 1585, 1586, 1589, 1596, 1607, 1614, 1615, 1616, 1619, 1625, 1637, 1646, 1647, 1648, 1651, 1658, 1669, 1676, 1677, 1678, 1681, 1687, 1712, 1716, 1721, 1724, 1725, 1726, 1728, 1744, 1745, 1749, 1756, 1835, 1881, 1888, 1903, 1904, 1909, 1910], "other": [4, 5, 6, 7, 9, 10, 11, 12, 13, 18, 19, 24, 26, 28, 30, 32, 33, 34, 35, 61, 63, 91, 121, 122, 124, 153, 186, 219, 220, 222, 251, 284, 317, 350, 352, 384, 417, 450, 483, 495, 544, 553, 572, 636, 644, 645, 659, 660, 665, 667, 668, 741, 745, 746, 748, 749, 750, 793, 796, 797, 798, 799, 800, 815, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 841, 847, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 945, 946, 955, 960, 962, 984, 985, 994, 999, 1001, 1022, 1023, 1032, 1037, 1039, 1061, 1070, 1075, 1077, 1099, 1108, 1115, 1117, 1139, 1140, 1149, 1154, 1156, 1177, 1178, 1179, 1188, 1193, 1195, 1217, 1226, 1231, 1233, 1255, 1264, 1269, 1271, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1713, 1717, 1736, 1744, 1749, 1751, 1774, 1835, 1865, 1878, 1899, 1916, 1917], "viscos": [4, 6, 10, 13, 15, 22, 24, 32, 681, 684, 685, 854, 865, 887, 898, 899, 900, 901, 902, 903, 919, 920, 921, 1331, 1333, 1365, 1367, 1399, 1401, 1461, 1463, 1578, 1580, 1640, 1642, 1902, 1903, 1904], "found": [4, 5, 6, 9, 10, 11, 12, 13, 15, 18, 19, 24, 26, 27, 28, 29, 30, 31, 33, 34, 615, 630, 745, 812, 813, 822, 846, 894, 953, 954, 955, 956, 957, 967, 992, 993, 994, 995, 996, 1006, 1030, 1031, 1032, 1033, 1034, 1044, 1068, 1069, 1070, 1071, 1072, 1082, 1106, 1107, 1108, 1109, 1110, 1111, 1122, 1147, 1148, 1149, 1150, 1151, 1161, 1186, 1187, 1188, 1189, 1190, 1200, 1224, 1225, 1226, 1227, 1228, 1238, 1262, 1263, 1264, 1265, 1266, 1276, 1700, 1711, 1721, 1725, 1726, 1727, 1728, 1743, 1756, 1792, 1804, 1818, 1891], "To": [4, 5, 6, 7, 8, 9, 12, 13, 22, 24, 26, 29, 30, 32, 33, 34, 35, 37, 57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 479, 512, 541, 588, 604, 659, 960, 962, 972, 999, 1001, 1011, 1037, 1039, 1049, 1075, 1077, 1087, 1115, 1117, 1127, 1154, 1156, 1166, 1193, 1195, 1205, 1231, 1233, 1243, 1269, 1271, 1281, 1310, 1342, 1376, 1410, 1440, 1472, 1501, 1529, 1557, 1589, 1619, 1651, 1681, 1729, 1751, 1778, 1780, 1916, 1917], "hydraul": [4, 13, 33, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 906, 914, 919, 920, 921], "must": [4, 6, 7, 9, 12, 13, 17, 21, 24, 26, 29, 30, 31, 32, 34, 64, 66, 69, 95, 127, 155, 157, 160, 188, 190, 193, 198, 222, 225, 253, 255, 258, 286, 288, 291, 319, 321, 324, 353, 355, 358, 386, 388, 391, 419, 421, 424, 428, 452, 454, 457, 485, 486, 489, 521, 548, 567, 595, 652, 664, 667, 830, 854, 861, 885, 892, 896, 903, 930, 931, 933, 945, 954, 979, 993, 1018, 1031, 1056, 1069, 1094, 1107, 1134, 1148, 1173, 1178, 1187, 1212, 1225, 1250, 1263, 1288, 1317, 1350, 1384, 1418, 1447, 1480, 1484, 1508, 1512, 1536, 1564, 1597, 1626, 1659, 1688, 1699, 1710, 1718, 1722, 1737, 1748, 1749, 1756, 1763, 1774, 1874, 1900], "here": [4, 5, 6, 7, 9, 10, 12, 13, 17, 18, 26, 27, 28, 29, 30, 31, 32, 35, 650, 807, 881, 930, 931, 967, 1006, 1044, 1082, 1122, 1161, 1200, 1238, 1276, 1700, 1770, 1772, 1917], "basic": [4, 7, 8, 9, 10, 12, 13, 17, 18, 26, 27, 28, 29, 32, 35, 349, 383, 416, 449, 543, 742, 876, 901, 909, 943, 1333, 1367, 1401, 1463, 1580, 1642, 1898], "includ": [4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 52, 53, 54, 57, 61, 77, 84, 85, 86, 89, 91, 104, 111, 112, 113, 117, 121, 122, 124, 137, 144, 145, 146, 149, 153, 170, 177, 178, 179, 182, 186, 202, 209, 210, 211, 215, 219, 220, 222, 235, 242, 243, 244, 247, 251, 268, 275, 276, 277, 280, 284, 301, 308, 309, 310, 313, 317, 334, 341, 342, 343, 346, 350, 368, 375, 376, 377, 380, 384, 401, 408, 409, 410, 413, 417, 434, 441, 442, 443, 446, 450, 467, 474, 475, 476, 479, 483, 493, 500, 507, 508, 509, 512, 514, 529, 536, 537, 538, 541, 544, 576, 583, 584, 585, 588, 600, 601, 602, 603, 604, 664, 668, 854, 904, 952, 955, 956, 966, 968, 969, 972, 991, 994, 995, 1005, 1007, 1008, 1011, 1029, 1032, 1033, 1043, 1045, 1046, 1049, 1067, 1070, 1071, 1081, 1083, 1084, 1087, 1105, 1108, 1109, 1121, 1123, 1124, 1127, 1146, 1149, 1150, 1160, 1162, 1163, 1166, 1185, 1188, 1189, 1199, 1201, 1202, 1205, 1223, 1226, 1227, 1237, 1239, 1240, 1243, 1261, 1264, 1265, 1275, 1277, 1278, 1281, 1298, 1305, 1306, 1307, 1310, 1328, 1337, 1338, 1339, 1342, 1362, 1371, 1372, 1373, 1376, 1396, 1405, 1406, 1407, 1410, 1428, 1435, 1436, 1437, 1440, 1458, 1467, 1468, 1469, 1472, 1489, 1496, 1497, 1498, 1501, 1517, 1524, 1525, 1526, 1529, 1545, 1552, 1553, 1554, 1557, 1575, 1584, 1585, 1586, 1589, 1607, 1614, 1615, 1616, 1619, 1637, 1646, 1647, 1648, 1651, 1669, 1676, 1677, 1678, 1681, 1727, 1888, 1893, 1909, 1910], "generic_hydraul": [4, 15, 19, 33, 687, 688], "1": [4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 100, 198, 516, 518, 648, 649, 667, 681, 684, 691, 692, 694, 697, 701, 707, 716, 717, 722, 731, 732, 741, 742, 749, 750, 764, 793, 799, 800, 819, 829, 831, 832, 835, 847, 854, 861, 864, 876, 877, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 908, 916, 917, 921, 924, 925, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 945, 950, 951, 953, 954, 955, 956, 957, 960, 967, 983, 984, 989, 990, 992, 993, 994, 995, 996, 999, 1006, 1022, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1037, 1044, 1060, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1075, 1082, 1098, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1115, 1122, 1139, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1154, 1161, 1178, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1193, 1200, 1216, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1231, 1238, 1254, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1269, 1276, 1333, 1367, 1401, 1463, 1580, 1642, 1710, 1711, 1712, 1714, 1715, 1716, 1720, 1727, 1729, 1734, 1737, 1745, 1747, 1749, 1750, 1752, 1753, 1754, 1756, 1757, 1774, 1778, 1780, 1811, 1823, 1831, 1843, 1856, 1905, 1915, 1916, 1917, 1918, 1919], "0": [4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 63, 69, 95, 100, 127, 160, 193, 197, 225, 258, 291, 324, 352, 358, 391, 424, 457, 489, 497, 521, 548, 567, 595, 649, 660, 667, 672, 673, 674, 675, 676, 677, 678, 681, 684, 685, 741, 742, 746, 747, 748, 749, 750, 793, 797, 798, 799, 800, 817, 819, 823, 828, 829, 830, 831, 832, 835, 861, 877, 879, 885, 892, 896, 903, 924, 925, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 950, 951, 953, 954, 955, 956, 957, 967, 979, 989, 990, 992, 993, 994, 995, 996, 1006, 1018, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1044, 1056, 1060, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1082, 1094, 1098, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1122, 1134, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1161, 1173, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1200, 1212, 1216, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1238, 1250, 1254, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1276, 1288, 1317, 1350, 1384, 1418, 1447, 1480, 1508, 1536, 1564, 1597, 1626, 1659, 1688, 1710, 1711, 1714, 1729, 1737, 1738, 1743, 1747, 1748, 1749, 1752, 1753, 1762, 1764, 1766, 1768, 1771, 1773, 1775, 1777, 1779, 1780, 1781, 1782, 1783, 1784, 1829, 1841, 1854, 1905, 1915, 1916, 1917, 1918, 1919], "physic": [4, 6, 8, 10, 12, 13, 15, 17, 19, 21, 23, 24, 29, 30, 31, 32, 33, 34, 35, 543, 879, 906, 933], "09": [4, 6, 8, 10, 19, 30, 35], "52": [4, 6, 27, 34, 35], "26": [4, 9, 10, 27, 29, 34, 956, 983, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265], "warn": [4, 5, 6, 8, 10, 19, 35, 667, 1761, 1783, 1905], "entry_pressur": [4, 7, 9, 10, 15, 34, 35, 687, 688], "wa": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 28, 29, 30, 31, 32, 33, 34, 35, 69, 70, 95, 96, 127, 128, 160, 161, 193, 194, 225, 226, 258, 259, 291, 292, 324, 325, 358, 359, 391, 392, 424, 425, 457, 458, 489, 490, 495, 521, 522, 548, 549, 567, 568, 572, 595, 596, 636, 648, 665, 813, 946, 979, 980, 985, 1018, 1019, 1023, 1056, 1057, 1061, 1094, 1095, 1099, 1134, 1135, 1140, 1173, 1174, 1179, 1212, 1213, 1217, 1250, 1251, 1255, 1288, 1289, 1294, 1317, 1318, 1323, 1350, 1351, 1357, 1384, 1385, 1391, 1418, 1419, 1424, 1447, 1448, 1453, 1480, 1481, 1485, 1508, 1509, 1513, 1536, 1537, 1541, 1564, 1565, 1570, 1597, 1598, 1603, 1626, 1627, 1632, 1659, 1660, 1665, 1688, 1689, 1727], "run": [4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 19, 23, 30, 32, 33, 34, 35, 39, 73, 99, 119, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 495, 514, 515, 525, 572, 590, 591, 607, 635, 636, 638, 639, 648, 741, 747, 749, 799, 824, 832, 946, 974, 975, 985, 1013, 1014, 1023, 1051, 1052, 1061, 1089, 1090, 1099, 1129, 1130, 1140, 1168, 1169, 1179, 1207, 1208, 1217, 1245, 1246, 1255, 1283, 1284, 1294, 1312, 1313, 1323, 1344, 1346, 1357, 1378, 1380, 1391, 1412, 1414, 1424, 1442, 1443, 1453, 1474, 1476, 1485, 1503, 1504, 1513, 1531, 1532, 1541, 1559, 1560, 1570, 1591, 1593, 1603, 1621, 1622, 1632, 1653, 1655, 1665, 1683, 1684, 1699, 1902], "sinc": [4, 5, 6, 7, 8, 9, 10, 11, 16, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 100, 514, 590, 638, 649, 660, 858, 945, 956, 974, 983, 984, 995, 1013, 1033, 1051, 1060, 1071, 1089, 1109, 1129, 1139, 1150, 1168, 1178, 1189, 1207, 1227, 1245, 1254, 1265, 1283, 1312, 1321, 1344, 1378, 1412, 1442, 1474, 1503, 1531, 1559, 1591, 1621, 1653, 1683, 1721, 1725, 1726, 1748, 1749, 1762, 1764, 1766, 1768, 1771, 1773, 1775, 1777, 1779, 1781, 1782, 1784, 1835, 1920], "miss": [4, 6, 10, 29, 35, 924, 1748], "_model": [4, 6, 10, 35], "py": [4, 6, 8, 10, 19, 35, 659, 1699], "480": [4, 6, 9, 10, 35], "surface_tens": [4, 10, 12, 13, 15, 32, 34, 35, 684, 685, 883, 908, 909, 923, 924, 925], "diffusive_conduct": [4, 7, 12, 21, 23, 687, 688, 906], "x": [4, 5, 6, 8, 9, 10, 11, 12, 13, 19, 21, 23, 24, 27, 28, 32, 39, 60, 131, 152, 164, 185, 229, 250, 262, 283, 295, 316, 328, 362, 395, 428, 461, 482, 649, 742, 827, 923, 925, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 1060, 1098, 1216, 1254, 1389, 1710, 1712, 1715, 1716, 1727, 1728, 1729, 1737, 1738, 1747, 1748, 1749, 1750, 1902, 1905], "direct": [4, 7, 8, 11, 12, 13, 16, 21, 28, 31, 34, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 742, 807, 944, 956, 960, 983, 995, 999, 1022, 1033, 1037, 1071, 1075, 1109, 1115, 1150, 1154, 1177, 1189, 1193, 1227, 1231, 1265, 1269, 1695, 1700, 1710, 1732, 1733, 1749], "constant": [4, 8, 23, 28, 51, 64, 66, 83, 110, 143, 155, 157, 176, 188, 190, 208, 241, 253, 255, 274, 286, 288, 307, 319, 321, 340, 353, 355, 374, 386, 388, 407, 419, 421, 440, 452, 454, 473, 485, 486, 495, 506, 514, 535, 562, 572, 582, 636, 684, 685, 854, 881, 906, 930, 931, 946, 965, 985, 1004, 1023, 1042, 1061, 1080, 1099, 1120, 1140, 1159, 1179, 1198, 1217, 1236, 1255, 1274, 1294, 1304, 1323, 1336, 1357, 1370, 1391, 1404, 1424, 1434, 1453, 1466, 1485, 1495, 1512, 1513, 1523, 1541, 1551, 1570, 1583, 1603, 1613, 1632, 1645, 1665, 1675], "left": [4, 5, 7, 8, 9, 11, 12, 13, 15, 19, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 474, 495, 507, 536, 572, 583, 601, 636, 945, 946, 966, 984, 985, 1005, 1023, 1043, 1061, 1081, 1099, 1121, 1139, 1140, 1160, 1178, 1179, 1199, 1217, 1237, 1255, 1275, 1294, 1305, 1323, 1337, 1357, 1371, 1391, 1405, 1424, 1435, 1453, 1467, 1485, 1496, 1513, 1524, 1541, 1552, 1570, 1584, 1603, 1614, 1632, 1646, 1665, 1676], "right": [4, 5, 7, 8, 9, 11, 12, 13, 15, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 131, 164, 229, 262, 295, 328, 362, 395, 428, 461, 945, 984, 1139, 1178, 1700], "side": [4, 8, 9, 11, 21, 24, 31, 33, 34, 39, 131, 164, 229, 262, 295, 328, 362, 395, 428, 461, 1254, 1700], "procedur": [4, 7, 8, 12, 13, 198], "y": [4, 8, 9, 10, 12, 13, 23, 27, 28, 32, 198, 644, 649, 827, 923, 933, 1060, 1098, 1216, 1254, 1355, 1729, 1737, 1747, 1748, 1749], "z": [4, 8, 10, 12, 13, 27, 32, 649, 876, 901, 1060, 1098, 1216, 1254, 1333, 1367, 1401, 1463, 1580, 1642, 1710, 1719, 1729, 1737, 1746, 1747, 1748, 1749, 1752, 1920], "inlet": [4, 6, 7, 8, 9, 11, 12, 13, 34, 35, 220, 1711, 1724, 1730, 1731, 1735, 1738, 1756], "outlet": [4, 6, 7, 8, 11, 12, 13, 34, 35, 100, 124, 198, 222, 1711, 1730, 1731, 1735, 1738], "stokesflow": [4, 6, 10, 13, 15, 17, 19, 24, 33, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327], "set_value_bc": [4, 6, 7, 8, 10, 12, 13, 15, 19, 23, 33, 35, 61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 544], "updat": [4, 5, 6, 10, 12, 13, 23, 29, 30, 35, 37, 62, 92, 123, 154, 187, 221, 252, 285, 318, 351, 385, 418, 451, 484, 517, 545, 592, 605, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685, 1717, 1869, 1876], "soln": [4, 6, 33, 35, 60, 152, 185, 250, 283, 316, 482, 644, 930, 931], "solut": [4, 6, 23, 24, 34, 39, 60, 131, 152, 164, 185, 229, 250, 262, 283, 295, 316, 328, 349, 362, 383, 395, 416, 428, 449, 461, 482, 543, 644, 865, 879, 930, 931, 1700], "dict": [4, 23, 28, 31, 32, 33, 40, 56, 71, 73, 74, 88, 97, 101, 116, 129, 131, 132, 148, 162, 165, 181, 195, 199, 214, 227, 230, 246, 260, 262, 263, 279, 293, 296, 312, 326, 329, 345, 360, 363, 379, 393, 396, 412, 426, 429, 445, 459, 461, 462, 478, 491, 494, 496, 498, 511, 516, 523, 526, 540, 550, 553, 554, 555, 564, 569, 573, 574, 587, 597, 616, 618, 631, 633, 637, 647, 648, 649, 651, 656, 665, 746, 748, 750, 797, 798, 800, 819, 823, 828, 835, 839, 841, 846, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 873, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 902, 903, 923, 930, 931, 932, 934, 935, 936, 937, 938, 939, 944, 947, 948, 971, 981, 983, 986, 987, 1010, 1020, 1024, 1025, 1048, 1058, 1060, 1062, 1063, 1086, 1096, 1098, 1100, 1101, 1126, 1136, 1138, 1141, 1142, 1165, 1175, 1177, 1180, 1181, 1204, 1214, 1216, 1218, 1219, 1242, 1252, 1254, 1256, 1257, 1280, 1290, 1293, 1295, 1296, 1309, 1319, 1324, 1325, 1326, 1331, 1341, 1352, 1358, 1359, 1360, 1365, 1375, 1386, 1392, 1393, 1394, 1399, 1409, 1420, 1425, 1426, 1439, 1449, 1451, 1454, 1455, 1456, 1461, 1471, 1482, 1484, 1486, 1487, 1500, 1510, 1514, 1515, 1528, 1538, 1542, 1543, 1556, 1566, 1571, 1572, 1573, 1578, 1588, 1599, 1604, 1605, 1618, 1628, 1633, 1634, 1635, 1640, 1650, 1661, 1664, 1666, 1667, 1680, 1690, 1716, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1732, 1733, 1737, 1774, 1785, 1793, 1795, 1805, 1809, 1811, 1819, 1821, 1892, 1896, 1898, 1899, 1900, 1903, 1904, 1911, 1912, 1916, 1917], "quantiti": [4, 7, 17, 21, 23, 33, 35, 63, 352, 930, 931, 932, 934, 935, 936, 937, 938, 939], "kei": [4, 5, 10, 16, 19, 21, 23, 26, 27, 29, 30, 31, 32, 33, 46, 47, 48, 52, 56, 58, 67, 71, 78, 79, 80, 84, 88, 90, 93, 97, 105, 106, 107, 111, 116, 118, 125, 129, 138, 139, 140, 144, 148, 150, 158, 162, 171, 172, 173, 177, 181, 183, 191, 195, 203, 204, 205, 209, 214, 216, 223, 227, 236, 237, 238, 242, 246, 248, 256, 260, 269, 270, 271, 275, 279, 281, 289, 293, 302, 303, 304, 308, 312, 314, 322, 326, 335, 336, 337, 341, 345, 347, 356, 360, 369, 370, 371, 375, 379, 381, 389, 393, 402, 403, 404, 408, 412, 414, 422, 426, 435, 436, 437, 441, 445, 447, 455, 459, 468, 469, 470, 474, 478, 480, 487, 491, 501, 502, 503, 507, 511, 513, 519, 523, 530, 531, 532, 536, 540, 542, 546, 550, 557, 558, 559, 564, 565, 566, 569, 577, 578, 579, 583, 587, 589, 593, 597, 601, 611, 612, 615, 616, 617, 618, 620, 626, 627, 630, 631, 632, 633, 663, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 744, 745, 746, 747, 748, 750, 752, 754, 757, 758, 759, 760, 761, 764, 768, 769, 770, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 793, 795, 796, 797, 798, 800, 802, 803, 804, 805, 809, 810, 811, 812, 813, 814, 819, 820, 821, 822, 823, 824, 825, 826, 828, 830, 833, 834, 835, 839, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 876, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 958, 959, 961, 966, 971, 973, 977, 981, 983, 997, 998, 1000, 1005, 1010, 1012, 1016, 1020, 1035, 1036, 1038, 1043, 1048, 1050, 1054, 1058, 1060, 1073, 1074, 1076, 1081, 1086, 1088, 1092, 1096, 1098, 1113, 1114, 1116, 1121, 1126, 1128, 1132, 1136, 1138, 1152, 1153, 1155, 1160, 1165, 1167, 1171, 1175, 1177, 1191, 1192, 1194, 1199, 1204, 1206, 1210, 1214, 1216, 1229, 1230, 1232, 1237, 1242, 1244, 1248, 1252, 1254, 1267, 1268, 1270, 1275, 1280, 1282, 1286, 1290, 1299, 1300, 1301, 1305, 1309, 1311, 1315, 1319, 1329, 1330, 1331, 1332, 1337, 1341, 1343, 1348, 1352, 1354, 1363, 1364, 1365, 1366, 1371, 1375, 1377, 1382, 1386, 1388, 1397, 1398, 1399, 1400, 1405, 1409, 1411, 1416, 1420, 1422, 1429, 1430, 1431, 1435, 1439, 1441, 1445, 1449, 1459, 1460, 1461, 1462, 1467, 1471, 1473, 1478, 1482, 1490, 1491, 1492, 1496, 1500, 1502, 1506, 1510, 1518, 1519, 1520, 1524, 1528, 1530, 1534, 1538, 1546, 1547, 1548, 1552, 1556, 1558, 1562, 1566, 1576, 1577, 1578, 1579, 1584, 1588, 1590, 1595, 1599, 1601, 1608, 1609, 1610, 1614, 1618, 1620, 1624, 1628, 1638, 1639, 1640, 1641, 1646, 1650, 1652, 1657, 1661, 1663, 1670, 1671, 1672, 1676, 1680, 1682, 1686, 1690, 1761, 1763, 1765, 1767, 1770, 1772, 1776, 1778, 1780, 1783, 1788, 1789, 1792, 1793, 1794, 1795, 1800, 1801, 1804, 1805, 1806, 1809, 1811, 1814, 1815, 1818, 1819, 1820, 1821, 1834, 1846, 1859, 1884, 1885, 1891, 1892, 1895, 1896, 1899, 1900, 1903, 1904, 1912, 1916, 1917], "e": [4, 7, 9, 13, 17, 18, 19, 26, 28, 29, 30, 31, 32, 34, 37, 40, 49, 58, 63, 71, 74, 81, 90, 97, 101, 108, 118, 129, 132, 141, 150, 162, 165, 174, 183, 195, 199, 206, 216, 227, 230, 239, 248, 260, 263, 272, 281, 293, 296, 305, 314, 326, 329, 338, 347, 349, 352, 360, 363, 372, 381, 383, 393, 396, 405, 414, 416, 426, 429, 438, 447, 449, 459, 462, 471, 480, 491, 495, 498, 504, 513, 523, 526, 533, 542, 543, 550, 555, 560, 565, 569, 572, 574, 580, 589, 597, 618, 623, 624, 633, 636, 649, 663, 664, 691, 696, 699, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 717, 718, 725, 728, 732, 733, 735, 739, 741, 746, 748, 749, 750, 797, 798, 799, 800, 823, 827, 828, 832, 835, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 945, 946, 948, 963, 973, 981, 983, 984, 985, 987, 1002, 1012, 1020, 1023, 1025, 1040, 1050, 1058, 1061, 1063, 1078, 1088, 1096, 1098, 1099, 1101, 1118, 1128, 1136, 1139, 1140, 1142, 1157, 1167, 1175, 1177, 1178, 1179, 1181, 1196, 1206, 1214, 1217, 1219, 1234, 1244, 1252, 1255, 1257, 1272, 1282, 1290, 1294, 1296, 1302, 1311, 1319, 1321, 1323, 1326, 1334, 1343, 1352, 1354, 1357, 1360, 1368, 1377, 1386, 1388, 1391, 1394, 1402, 1411, 1420, 1422, 1424, 1426, 1432, 1441, 1449, 1453, 1456, 1464, 1473, 1482, 1485, 1487, 1493, 1502, 1510, 1513, 1515, 1521, 1530, 1538, 1541, 1543, 1549, 1558, 1566, 1570, 1573, 1581, 1590, 1599, 1601, 1603, 1605, 1611, 1620, 1628, 1632, 1635, 1643, 1652, 1661, 1663, 1665, 1667, 1673, 1682, 1690, 1700, 1717, 1735, 1738, 1763, 1765, 1772, 1778, 1795, 1809, 1821, 1834, 1846, 1859, 1865, 1868, 1875, 1877, 1883, 1890, 1896, 1908, 1916, 1917], "ndarrai": [4, 28, 32, 48, 49, 60, 69, 70, 80, 81, 95, 96, 107, 108, 120, 122, 124, 127, 128, 140, 141, 152, 160, 161, 173, 174, 185, 193, 194, 205, 206, 220, 222, 225, 226, 238, 239, 250, 258, 259, 271, 272, 283, 291, 292, 304, 305, 316, 324, 325, 337, 338, 349, 358, 359, 371, 372, 383, 391, 392, 404, 405, 416, 424, 425, 437, 438, 449, 457, 458, 470, 471, 482, 489, 490, 503, 504, 518, 521, 522, 532, 533, 543, 548, 549, 559, 560, 567, 568, 579, 580, 595, 596, 644, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 742, 744, 745, 746, 747, 750, 752, 754, 757, 758, 759, 760, 761, 764, 766, 768, 769, 770, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 793, 795, 796, 797, 800, 802, 803, 804, 805, 807, 809, 810, 811, 812, 813, 814, 818, 821, 822, 823, 824, 826, 827, 830, 831, 833, 835, 839, 841, 847, 857, 858, 859, 860, 861, 863, 864, 865, 868, 870, 872, 878, 879, 881, 883, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 898, 899, 900, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 928, 941, 942, 953, 954, 961, 963, 979, 980, 992, 993, 1000, 1002, 1018, 1019, 1030, 1031, 1038, 1040, 1056, 1057, 1068, 1069, 1076, 1078, 1094, 1095, 1106, 1107, 1116, 1118, 1134, 1135, 1147, 1148, 1155, 1157, 1173, 1174, 1186, 1187, 1194, 1196, 1212, 1213, 1224, 1225, 1232, 1234, 1250, 1251, 1262, 1263, 1270, 1272, 1288, 1289, 1301, 1302, 1317, 1318, 1322, 1332, 1333, 1334, 1350, 1351, 1354, 1356, 1366, 1367, 1368, 1384, 1385, 1388, 1390, 1400, 1401, 1402, 1418, 1419, 1422, 1431, 1432, 1447, 1448, 1452, 1462, 1463, 1464, 1480, 1481, 1492, 1493, 1508, 1509, 1520, 1521, 1536, 1537, 1548, 1549, 1564, 1565, 1569, 1579, 1580, 1581, 1597, 1598, 1601, 1610, 1611, 1626, 1627, 1631, 1641, 1642, 1643, 1659, 1660, 1663, 1672, 1673, 1688, 1689, 1700, 1712, 1714, 1715, 1717, 1720, 1722, 1723, 1724, 1726, 1727, 1732, 1733, 1734, 1737, 1746, 1747, 1748, 1749, 1750, 1756, 1906, 1915, 1916, 1917, 1919], "last": [4, 10, 11, 26, 28, 37, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 564, 587, 616, 631, 950, 971, 989, 1010, 1027, 1048, 1065, 1086, 1103, 1126, 1144, 1165, 1183, 1204, 1221, 1242, 1259, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1793, 1805, 1819, 1831, 1843, 1856, 1892], "line": [4, 9, 10, 11, 15, 16, 29, 30, 31, 32, 1772, 1823, 1916, 1917, 1919, 1920], "cell": [4, 5, 10, 11, 26, 30, 34, 35, 742, 944, 1177, 1254], "abov": [4, 5, 6, 9, 10, 11, 16, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 817, 1728, 1747, 1772, 1888, 1893], "new": [4, 5, 7, 9, 15, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31, 32, 34, 37, 46, 78, 105, 138, 171, 197, 203, 236, 269, 302, 335, 369, 402, 435, 468, 501, 530, 557, 577, 611, 626, 742, 854, 881, 958, 997, 1035, 1073, 1113, 1152, 1191, 1229, 1267, 1299, 1329, 1363, 1397, 1429, 1459, 1490, 1518, 1546, 1576, 1608, 1638, 1670, 1711, 1713, 1714, 1718, 1745, 1747, 1749, 1751, 1765, 1767, 1778, 1780, 1788, 1800, 1814, 1838, 1865, 1868, 1875, 1877, 1883, 1884, 1890, 1916, 1917], "comput": [4, 9, 10, 16, 23, 24, 28, 29, 31, 32, 33, 34, 35, 36, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 495, 504, 533, 560, 572, 580, 590, 636, 638, 648, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 772, 854, 858, 859, 876, 877, 878, 883, 884, 898, 901, 902, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 928, 941, 942, 946, 963, 974, 985, 1002, 1013, 1023, 1040, 1051, 1061, 1078, 1089, 1099, 1118, 1129, 1140, 1157, 1168, 1179, 1196, 1207, 1217, 1234, 1245, 1255, 1272, 1283, 1294, 1302, 1312, 1321, 1323, 1334, 1344, 1357, 1368, 1378, 1391, 1402, 1412, 1424, 1432, 1442, 1453, 1464, 1474, 1485, 1493, 1503, 1513, 1521, 1531, 1541, 1549, 1559, 1568, 1570, 1581, 1591, 1603, 1611, 1621, 1630, 1632, 1643, 1653, 1665, 1673, 1683, 1699, 1734, 1756], "we": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 854, 930, 931], "visul": 4, "ax": [4, 5, 6, 7, 8, 9, 15, 19, 27, 29, 30, 31, 34, 35, 39, 131, 164, 229, 262, 295, 328, 362, 395, 428, 461, 625, 1694, 1696, 1698, 1699, 1700, 1702, 1704, 1706, 1708, 1716, 1916, 1917, 1918], "plot_connect": [4, 5, 7, 19, 27, 29, 34, 35, 1917], "plot_coordin": [4, 7, 8, 19, 27, 29, 34, 35, 1916], "color_bi": [4, 7, 8, 19, 27, 34, 35, 1916, 1917], "darci": [4, 10, 15], "": [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 45, 50, 57, 60, 61, 68, 72, 74, 75, 77, 82, 89, 91, 94, 98, 101, 102, 104, 109, 117, 119, 121, 126, 130, 131, 132, 133, 137, 142, 149, 152, 153, 159, 163, 165, 166, 170, 175, 182, 185, 186, 192, 196, 199, 200, 202, 207, 215, 219, 224, 228, 230, 231, 235, 240, 247, 250, 251, 257, 261, 263, 264, 268, 273, 280, 283, 284, 290, 294, 296, 297, 301, 306, 313, 316, 317, 323, 327, 329, 330, 334, 339, 346, 350, 357, 361, 363, 364, 368, 373, 380, 384, 390, 394, 396, 397, 401, 406, 413, 417, 423, 427, 429, 430, 434, 439, 446, 450, 456, 460, 462, 463, 467, 472, 479, 482, 483, 488, 492, 498, 500, 505, 512, 520, 524, 526, 527, 529, 534, 541, 544, 547, 551, 552, 555, 561, 570, 574, 576, 581, 588, 590, 594, 598, 600, 604, 606, 613, 614, 619, 620, 624, 628, 629, 634, 638, 643, 644, 648, 649, 652, 664, 665, 667, 716, 731, 741, 746, 747, 748, 749, 750, 753, 755, 763, 797, 798, 799, 800, 823, 827, 828, 832, 835, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 917, 919, 920, 921, 923, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 948, 950, 951, 952, 955, 956, 957, 960, 962, 964, 972, 974, 978, 982, 987, 989, 990, 991, 994, 995, 996, 999, 1001, 1003, 1011, 1013, 1017, 1021, 1025, 1027, 1028, 1029, 1032, 1033, 1034, 1037, 1039, 1041, 1049, 1051, 1055, 1059, 1063, 1065, 1066, 1067, 1070, 1071, 1072, 1075, 1077, 1079, 1087, 1089, 1093, 1097, 1101, 1103, 1104, 1105, 1108, 1109, 1110, 1115, 1117, 1119, 1127, 1129, 1133, 1137, 1142, 1144, 1145, 1146, 1149, 1150, 1151, 1154, 1156, 1158, 1166, 1168, 1172, 1176, 1181, 1183, 1184, 1185, 1188, 1189, 1190, 1193, 1195, 1197, 1205, 1207, 1211, 1215, 1219, 1221, 1222, 1223, 1226, 1227, 1228, 1231, 1233, 1235, 1243, 1245, 1249, 1253, 1257, 1259, 1260, 1261, 1264, 1265, 1266, 1269, 1271, 1273, 1281, 1283, 1287, 1291, 1296, 1298, 1303, 1310, 1312, 1316, 1320, 1326, 1328, 1335, 1342, 1344, 1345, 1349, 1353, 1360, 1362, 1369, 1376, 1378, 1379, 1383, 1387, 1394, 1396, 1403, 1410, 1412, 1413, 1417, 1421, 1423, 1426, 1428, 1433, 1440, 1442, 1446, 1450, 1456, 1458, 1465, 1472, 1474, 1475, 1479, 1483, 1487, 1489, 1494, 1501, 1503, 1507, 1511, 1515, 1517, 1522, 1529, 1531, 1535, 1539, 1543, 1545, 1550, 1557, 1559, 1563, 1567, 1573, 1575, 1582, 1589, 1591, 1592, 1596, 1600, 1605, 1607, 1612, 1619, 1621, 1625, 1629, 1635, 1637, 1644, 1651, 1653, 1654, 1658, 1662, 1667, 1669, 1674, 1681, 1683, 1687, 1691, 1703, 1727, 1744, 1748, 1749, 1751, 1752, 1753, 1754, 1757, 1759, 1760, 1761, 1763, 1767, 1769, 1770, 1772, 1774, 1776, 1778, 1780, 1783, 1790, 1791, 1796, 1802, 1803, 1810, 1816, 1817, 1822, 1835, 1886, 1887, 1889, 1897, 1900, 1908, 1912, 1917, 1922], "law": [4, 7, 15, 21, 23, 24, 131, 716, 857, 881, 896], "k_": [4, 13], "ab": [4, 7, 8, 12, 13, 21, 716], "frac": [4, 6, 7, 8, 9, 12, 13, 21, 23, 24, 33, 716, 731, 881, 909, 921, 925, 930, 931], "q": [4, 15, 24, 30, 33, 34, 731, 746, 748, 750, 797, 798, 800, 823, 828, 835], "A": [4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 21, 23, 24, 28, 29, 30, 31, 32, 34, 35, 36, 39, 45, 52, 57, 60, 62, 68, 69, 70, 77, 84, 89, 92, 94, 95, 96, 99, 100, 104, 111, 117, 123, 126, 127, 128, 131, 137, 144, 149, 152, 154, 159, 160, 161, 164, 170, 177, 182, 185, 187, 192, 193, 194, 197, 202, 209, 215, 221, 224, 225, 226, 229, 235, 242, 247, 250, 252, 257, 258, 259, 262, 268, 275, 280, 283, 285, 290, 291, 292, 295, 301, 308, 313, 316, 318, 323, 324, 325, 328, 334, 341, 346, 351, 357, 358, 359, 362, 368, 375, 380, 385, 390, 391, 392, 395, 401, 408, 413, 418, 423, 424, 425, 428, 434, 441, 446, 451, 456, 457, 458, 461, 467, 474, 479, 482, 484, 488, 489, 490, 494, 500, 507, 512, 517, 520, 521, 522, 525, 529, 536, 541, 545, 547, 548, 549, 554, 567, 568, 576, 583, 588, 592, 594, 595, 596, 600, 601, 604, 605, 606, 648, 656, 663, 664, 667, 668, 691, 692, 694, 697, 701, 716, 731, 738, 741, 742, 744, 747, 749, 750, 766, 784, 789, 795, 799, 800, 803, 807, 810, 819, 824, 830, 832, 835, 841, 860, 865, 881, 883, 884, 885, 891, 892, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 923, 925, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 952, 955, 966, 972, 976, 978, 979, 980, 983, 991, 994, 1005, 1011, 1015, 1017, 1018, 1019, 1029, 1032, 1043, 1049, 1053, 1055, 1056, 1057, 1060, 1067, 1070, 1081, 1087, 1091, 1093, 1094, 1095, 1098, 1105, 1108, 1121, 1127, 1131, 1133, 1134, 1135, 1138, 1146, 1149, 1160, 1166, 1170, 1172, 1173, 1174, 1177, 1185, 1188, 1199, 1205, 1209, 1211, 1212, 1213, 1216, 1223, 1226, 1237, 1243, 1247, 1249, 1250, 1251, 1254, 1261, 1264, 1275, 1281, 1285, 1287, 1288, 1289, 1298, 1305, 1310, 1314, 1316, 1317, 1318, 1321, 1325, 1328, 1331, 1337, 1342, 1347, 1349, 1350, 1351, 1359, 1362, 1365, 1371, 1376, 1381, 1383, 1384, 1385, 1393, 1396, 1399, 1405, 1410, 1415, 1417, 1418, 1419, 1428, 1435, 1440, 1444, 1446, 1447, 1448, 1451, 1455, 1458, 1461, 1467, 1472, 1477, 1479, 1480, 1481, 1489, 1496, 1501, 1505, 1507, 1508, 1509, 1512, 1517, 1524, 1529, 1533, 1535, 1536, 1537, 1540, 1545, 1552, 1557, 1561, 1563, 1564, 1565, 1568, 1572, 1575, 1578, 1584, 1589, 1594, 1596, 1597, 1598, 1602, 1607, 1614, 1619, 1623, 1625, 1626, 1627, 1630, 1634, 1637, 1640, 1646, 1651, 1656, 1658, 1659, 1660, 1669, 1676, 1681, 1685, 1687, 1688, 1689, 1700, 1702, 1704, 1706, 1708, 1710, 1712, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1734, 1736, 1737, 1738, 1739, 1746, 1748, 1749, 1750, 1752, 1753, 1754, 1757, 1770, 1772, 1774, 1776, 1778, 1780, 1835, 1838, 1847, 1848, 1861, 1883, 1898, 1899, 1900, 1903, 1904, 1912, 1916, 1917, 1919, 1920], "mu": [4, 15, 24, 32, 33, 731, 854, 865, 898, 902, 903, 1902], "l": [4, 6, 7, 8, 10, 11, 15, 21, 24, 26, 33, 131, 716, 731, 879, 881], "delta": [4, 7, 21, 24, 33, 131, 716, 731], "p": [4, 10, 11, 19, 24, 27, 29, 31, 33, 34, 39, 73, 99, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 494, 495, 525, 554, 571, 572, 636, 731, 857, 863, 864, 928, 944, 946, 953, 955, 956, 983, 985, 992, 994, 995, 1022, 1023, 1030, 1032, 1033, 1060, 1061, 1068, 1070, 1071, 1098, 1099, 1106, 1108, 1109, 1138, 1140, 1147, 1149, 1150, 1177, 1179, 1186, 1188, 1189, 1216, 1217, 1224, 1226, 1227, 1254, 1255, 1262, 1264, 1265, 1293, 1294, 1321, 1323, 1355, 1357, 1389, 1391, 1423, 1424, 1451, 1453, 1484, 1485, 1512, 1513, 1540, 1541, 1568, 1570, 1602, 1603, 1630, 1632, 1664, 1665, 1917], "where": [4, 6, 12, 13, 16, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 89, 91, 92, 94, 95, 96, 117, 121, 123, 126, 127, 128, 149, 153, 154, 155, 156, 157, 159, 160, 161, 182, 186, 187, 188, 189, 190, 192, 193, 194, 215, 219, 221, 224, 225, 226, 247, 251, 252, 253, 254, 255, 257, 258, 259, 280, 284, 285, 286, 287, 288, 290, 291, 292, 313, 317, 318, 319, 320, 321, 323, 324, 325, 346, 350, 351, 352, 353, 354, 355, 357, 358, 359, 380, 384, 385, 386, 387, 388, 390, 391, 392, 413, 417, 418, 419, 420, 421, 423, 424, 425, 446, 450, 451, 452, 453, 454, 456, 457, 458, 479, 483, 484, 485, 486, 488, 489, 490, 495, 512, 517, 520, 521, 522, 541, 544, 545, 547, 548, 549, 567, 568, 572, 588, 592, 594, 595, 596, 604, 605, 606, 636, 649, 653, 695, 697, 746, 747, 797, 823, 830, 852, 916, 917, 921, 925, 930, 931, 945, 946, 955, 956, 957, 972, 976, 978, 979, 980, 984, 985, 994, 995, 996, 1011, 1015, 1017, 1018, 1019, 1023, 1032, 1033, 1034, 1049, 1053, 1055, 1056, 1057, 1061, 1070, 1071, 1072, 1087, 1091, 1093, 1094, 1095, 1099, 1108, 1109, 1110, 1127, 1131, 1133, 1134, 1135, 1139, 1140, 1149, 1150, 1151, 1166, 1170, 1172, 1173, 1174, 1178, 1179, 1188, 1189, 1190, 1205, 1209, 1211, 1212, 1213, 1217, 1226, 1227, 1228, 1243, 1247, 1249, 1250, 1251, 1255, 1264, 1265, 1266, 1281, 1285, 1287, 1288, 1289, 1294, 1310, 1314, 1316, 1317, 1318, 1323, 1325, 1342, 1347, 1349, 1350, 1351, 1357, 1359, 1376, 1381, 1383, 1384, 1385, 1391, 1393, 1410, 1415, 1417, 1418, 1419, 1424, 1440, 1444, 1446, 1447, 1448, 1453, 1455, 1472, 1477, 1479, 1480, 1481, 1485, 1501, 1505, 1507, 1508, 1509, 1513, 1529, 1533, 1535, 1536, 1537, 1541, 1557, 1561, 1563, 1564, 1565, 1568, 1570, 1572, 1589, 1594, 1596, 1597, 1598, 1603, 1619, 1623, 1625, 1626, 1627, 1630, 1632, 1634, 1651, 1656, 1658, 1659, 1660, 1665, 1681, 1685, 1687, 1688, 1689, 1699, 1718, 1749, 1905], "area": [4, 8, 24, 33, 648, 716, 731, 735, 736, 737, 738, 739, 742, 752, 753, 754, 755, 768, 769, 770, 795, 802, 803, 804, 805, 811, 906, 914, 921, 930, 931, 983, 1730, 1731, 1917], "distanc": [4, 11, 30, 742, 747, 813, 841, 842, 843, 844, 846, 851, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1710, 1711, 1745], "between": [4, 5, 6, 11, 19, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 645, 660, 772, 806, 807, 812, 813, 820, 829, 842, 843, 847, 851, 930, 931, 944, 983, 1022, 1060, 1098, 1112, 1177, 1216, 1713, 1714, 1723, 1727, 1728, 1729, 1733, 1903, 1904], "differ": [4, 7, 9, 11, 12, 21, 22, 24, 26, 27, 28, 30, 32, 33, 35, 61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 544, 652, 663, 665, 676, 690, 741, 747, 749, 799, 832, 854, 906, 921, 930, 931, 1098, 1700, 1875, 1876, 1916, 1917], "were": [4, 5, 8, 9, 18, 22, 26, 27, 29, 30, 31, 32, 40, 51, 74, 83, 100, 101, 110, 132, 143, 165, 176, 199, 208, 230, 241, 263, 274, 296, 307, 329, 340, 363, 374, 396, 407, 429, 440, 462, 473, 498, 506, 526, 535, 555, 562, 574, 582, 746, 797, 812, 823, 846, 948, 953, 955, 957, 965, 987, 992, 994, 996, 1004, 1025, 1030, 1032, 1034, 1042, 1063, 1068, 1070, 1072, 1080, 1101, 1106, 1108, 1110, 1120, 1142, 1147, 1149, 1151, 1159, 1181, 1186, 1188, 1190, 1198, 1219, 1224, 1226, 1228, 1236, 1257, 1262, 1264, 1266, 1274, 1296, 1304, 1326, 1336, 1360, 1370, 1394, 1404, 1426, 1434, 1456, 1466, 1487, 1495, 1515, 1523, 1543, 1551, 1573, 1583, 1605, 1613, 1635, 1645, 1667, 1675, 1713, 1717], "have": [4, 5, 7, 9, 10, 12, 13, 16, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 45, 61, 65, 77, 91, 104, 121, 137, 153, 156, 170, 186, 189, 202, 219, 235, 251, 254, 268, 284, 287, 301, 317, 320, 334, 350, 354, 368, 384, 387, 401, 417, 420, 434, 450, 453, 467, 483, 500, 529, 544, 576, 600, 653, 690, 704, 719, 747, 773, 854, 945, 952, 953, 956, 957, 967, 984, 991, 992, 995, 996, 1006, 1029, 1030, 1033, 1034, 1044, 1060, 1067, 1068, 1071, 1072, 1082, 1098, 1105, 1106, 1109, 1110, 1122, 1139, 1146, 1147, 1150, 1151, 1161, 1178, 1185, 1186, 1189, 1190, 1200, 1216, 1223, 1224, 1227, 1228, 1238, 1254, 1261, 1262, 1265, 1266, 1276, 1298, 1328, 1362, 1396, 1428, 1458, 1489, 1517, 1545, 1575, 1607, 1637, 1669, 1716, 1721, 1725, 1726, 1729, 1747, 1848, 1861, 1870, 1916], "simplifi": [4, 9, 24], "nbval_ignore_output": [4, 8], "mode": [4, 5, 6, 8, 9, 12, 13, 16, 19, 29, 30, 32, 34, 37, 40, 45, 49, 51, 52, 53, 54, 57, 59, 61, 62, 63, 64, 65, 66, 68, 74, 77, 81, 83, 84, 85, 86, 89, 91, 92, 94, 101, 104, 108, 110, 111, 112, 113, 117, 121, 122, 123, 124, 126, 132, 137, 141, 143, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 159, 165, 170, 174, 176, 177, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 199, 202, 206, 208, 209, 210, 211, 215, 219, 220, 221, 222, 224, 230, 235, 239, 241, 242, 243, 244, 247, 249, 251, 252, 253, 254, 255, 257, 263, 268, 272, 274, 275, 276, 277, 280, 282, 284, 285, 286, 287, 288, 290, 296, 301, 305, 307, 308, 309, 310, 313, 315, 317, 318, 319, 320, 321, 323, 329, 334, 338, 340, 341, 342, 343, 346, 348, 350, 351, 352, 353, 354, 355, 357, 363, 368, 372, 374, 375, 376, 377, 380, 382, 384, 385, 386, 387, 388, 390, 396, 401, 405, 407, 408, 409, 410, 413, 415, 417, 418, 419, 420, 421, 423, 429, 434, 438, 440, 441, 442, 443, 446, 448, 450, 451, 452, 453, 454, 456, 462, 467, 471, 473, 474, 475, 476, 479, 481, 483, 484, 485, 486, 488, 498, 500, 504, 506, 507, 508, 509, 512, 517, 520, 526, 529, 533, 535, 536, 537, 538, 541, 544, 545, 547, 555, 560, 562, 574, 576, 580, 582, 583, 584, 585, 588, 592, 594, 600, 601, 602, 603, 604, 605, 606, 672, 673, 674, 675, 676, 677, 678, 745, 792, 793, 796, 821, 822, 876, 901, 923, 924, 925, 927, 948, 952, 953, 956, 957, 963, 965, 966, 967, 968, 969, 972, 976, 978, 987, 991, 992, 995, 996, 1002, 1004, 1005, 1006, 1007, 1008, 1011, 1015, 1017, 1025, 1029, 1030, 1033, 1034, 1040, 1042, 1043, 1044, 1045, 1046, 1049, 1053, 1055, 1063, 1067, 1068, 1071, 1072, 1078, 1080, 1081, 1082, 1083, 1084, 1087, 1091, 1093, 1101, 1105, 1106, 1109, 1110, 1118, 1120, 1121, 1122, 1123, 1124, 1127, 1131, 1133, 1142, 1146, 1147, 1150, 1151, 1157, 1159, 1160, 1161, 1162, 1163, 1166, 1170, 1172, 1181, 1185, 1186, 1189, 1190, 1196, 1198, 1199, 1200, 1201, 1202, 1205, 1209, 1211, 1219, 1223, 1224, 1227, 1228, 1234, 1236, 1237, 1238, 1239, 1240, 1243, 1247, 1249, 1257, 1261, 1262, 1265, 1266, 1272, 1274, 1275, 1276, 1277, 1278, 1281, 1285, 1287, 1296, 1298, 1302, 1304, 1305, 1306, 1307, 1310, 1314, 1316, 1326, 1328, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1347, 1349, 1360, 1362, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1381, 1383, 1394, 1396, 1401, 1402, 1404, 1405, 1406, 1407, 1410, 1415, 1417, 1426, 1428, 1432, 1434, 1435, 1436, 1437, 1440, 1444, 1446, 1456, 1458, 1463, 1464, 1466, 1467, 1468, 1469, 1472, 1477, 1479, 1487, 1489, 1493, 1495, 1496, 1497, 1498, 1501, 1505, 1507, 1515, 1517, 1521, 1523, 1524, 1525, 1526, 1529, 1533, 1535, 1543, 1545, 1549, 1551, 1552, 1553, 1554, 1557, 1561, 1563, 1573, 1575, 1580, 1581, 1583, 1584, 1585, 1586, 1589, 1594, 1596, 1605, 1607, 1611, 1613, 1614, 1615, 1616, 1619, 1623, 1625, 1635, 1637, 1642, 1643, 1645, 1646, 1647, 1648, 1651, 1656, 1658, 1667, 1669, 1673, 1675, 1676, 1677, 1678, 1681, 1685, 1687, 1713, 1751, 1916], "group": [4, 8, 10, 12, 13, 23, 37, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 648, 652, 1714], "topotool": [4, 8, 10, 11, 19, 27, 29, 983, 1746], "get_domain_area": [4, 8, 11], "get_domain_length": [4, 8, 11], "k": [4, 5, 9, 10, 15, 19, 22, 23, 24, 28, 29, 30, 32, 33, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 491, 494, 523, 550, 569, 597, 618, 633, 857, 858, 859, 861, 863, 864, 865, 868, 870, 879, 881, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 899, 900, 902, 903, 930, 931, 960, 981, 999, 1020, 1037, 1058, 1075, 1096, 1115, 1136, 1154, 1175, 1193, 1214, 1231, 1252, 1269, 1290, 1319, 1352, 1386, 1420, 1449, 1482, 1510, 1538, 1566, 1599, 1628, 1661, 1690, 1795, 1809, 1821, 1896], "delta_p": 4, "print": [4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 607, 660, 661, 953, 954, 955, 956, 957, 967, 992, 993, 994, 995, 996, 1006, 1030, 1031, 1032, 1033, 1034, 1044, 1068, 1069, 1070, 1071, 1072, 1082, 1106, 1107, 1108, 1109, 1110, 1122, 1147, 1148, 1149, 1150, 1151, 1161, 1186, 1187, 1188, 1189, 1190, 1200, 1216, 1224, 1225, 1226, 1227, 1228, 1238, 1262, 1263, 1264, 1265, 1266, 1276, 1568, 1630, 1778, 1780, 1811, 1823, 1835, 1903, 1904], "f": [4, 5, 7, 8, 9, 10, 11, 22, 23, 30, 32, 34, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 491, 523, 550, 569, 597, 618, 633, 661, 664, 854, 930, 931, 981, 1020, 1058, 1060, 1096, 1098, 1136, 1175, 1214, 1252, 1254, 1290, 1319, 1352, 1386, 1420, 1449, 1482, 1510, 1538, 1566, 1599, 1628, 1661, 1690, 1729, 1747, 1795, 1809, 1821, 1896], "98e": 4, "12": [4, 5, 7, 9, 10, 15, 19, 23, 27, 28, 29, 30, 31, 33, 34, 684, 1920], "1000": [4, 10, 15, 22, 746, 797, 823, 923, 924, 925, 1697, 1699, 1703, 1705], "2f": [4, 8, 11], "md": 4, "28": [4, 9, 27, 34, 681, 885], "attempt": [4, 7, 8, 9, 19, 28, 32, 33, 65, 156, 189, 254, 287, 320, 354, 387, 420, 453, 1512], "estim": [4, 8, 9, 11, 22, 32, 864, 865], "low": [4, 8, 9, 30, 741, 749, 799, 832, 881, 1325, 1359, 1393, 1455, 1572, 1634], "_topotool": [4, 8], "1046": [4, 8], "length": [4, 5, 6, 7, 8, 9, 11, 15, 19, 21, 24, 26, 27, 29, 33, 57, 61, 68, 69, 70, 89, 91, 94, 95, 96, 117, 121, 126, 127, 128, 149, 153, 159, 160, 161, 182, 186, 192, 193, 194, 215, 219, 224, 225, 226, 247, 251, 257, 258, 259, 280, 284, 290, 291, 292, 313, 317, 323, 324, 325, 346, 350, 357, 358, 359, 380, 384, 390, 391, 392, 413, 417, 423, 424, 425, 446, 450, 456, 457, 458, 479, 483, 488, 489, 490, 495, 512, 520, 521, 522, 541, 544, 547, 548, 549, 567, 568, 572, 588, 594, 595, 596, 604, 606, 636, 648, 649, 665, 672, 673, 674, 675, 676, 677, 678, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 716, 731, 741, 744, 745, 746, 748, 749, 750, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 793, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 809, 810, 811, 812, 813, 814, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 841, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 923, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 946, 954, 967, 972, 978, 979, 980, 983, 985, 993, 1006, 1011, 1017, 1018, 1019, 1023, 1031, 1044, 1049, 1055, 1056, 1057, 1061, 1069, 1082, 1087, 1093, 1094, 1095, 1099, 1107, 1122, 1127, 1133, 1134, 1135, 1140, 1148, 1161, 1166, 1172, 1173, 1174, 1179, 1187, 1200, 1205, 1211, 1212, 1213, 1217, 1225, 1238, 1243, 1249, 1250, 1251, 1255, 1263, 1276, 1281, 1287, 1288, 1289, 1294, 1310, 1316, 1317, 1318, 1323, 1342, 1349, 1350, 1351, 1357, 1376, 1383, 1384, 1385, 1391, 1410, 1417, 1418, 1419, 1424, 1440, 1446, 1447, 1448, 1453, 1472, 1479, 1480, 1481, 1485, 1501, 1507, 1508, 1509, 1513, 1529, 1535, 1536, 1537, 1541, 1557, 1563, 1564, 1565, 1570, 1589, 1596, 1597, 1598, 1603, 1619, 1625, 1626, 1627, 1632, 1651, 1658, 1659, 1660, 1665, 1681, 1687, 1688, 1689, 1722, 1724, 1731, 1738, 1751], "could": [4, 7, 8, 9, 11, 19, 21, 23, 28, 30, 32, 34, 812, 813, 1111, 1112], "1090": [4, 8], "ad": [4, 5, 6, 7, 8, 11, 12, 13, 18, 19, 23, 26, 27, 28, 31, 34, 37, 62, 92, 123, 154, 187, 197, 221, 252, 262, 285, 318, 349, 351, 383, 385, 416, 418, 449, 451, 484, 495, 516, 517, 543, 545, 553, 571, 572, 592, 605, 635, 636, 644, 689, 746, 759, 797, 813, 823, 945, 946, 976, 984, 985, 1015, 1023, 1053, 1060, 1061, 1091, 1099, 1131, 1138, 1139, 1140, 1170, 1178, 1179, 1209, 1217, 1247, 1254, 1255, 1285, 1294, 1314, 1323, 1347, 1357, 1381, 1391, 1415, 1424, 1444, 1453, 1477, 1485, 1505, 1513, 1533, 1541, 1561, 1570, 1594, 1603, 1623, 1632, 1656, 1665, 1685, 1711, 1713, 1714, 1718, 1728, 1744, 1888, 1898], "07": [4, 7], "method": [4, 5, 7, 9, 11, 17, 23, 24, 27, 28, 30, 32, 34, 35, 39, 60, 61, 71, 73, 91, 97, 99, 121, 129, 131, 152, 153, 162, 164, 185, 186, 195, 197, 198, 219, 227, 229, 250, 251, 260, 262, 283, 284, 293, 295, 316, 317, 326, 328, 350, 360, 362, 384, 393, 395, 417, 426, 428, 450, 459, 461, 482, 483, 491, 494, 514, 518, 523, 525, 544, 550, 552, 553, 554, 569, 571, 597, 599, 618, 620, 633, 635, 643, 659, 668, 748, 750, 798, 800, 811, 828, 835, 858, 859, 881, 888, 890, 927, 944, 950, 951, 960, 962, 967, 981, 983, 989, 990, 999, 1001, 1006, 1020, 1022, 1027, 1028, 1037, 1039, 1044, 1058, 1060, 1065, 1066, 1075, 1077, 1082, 1096, 1098, 1103, 1104, 1112, 1115, 1117, 1122, 1136, 1138, 1144, 1145, 1154, 1156, 1161, 1175, 1177, 1183, 1184, 1193, 1195, 1200, 1214, 1216, 1221, 1222, 1231, 1233, 1238, 1252, 1254, 1259, 1260, 1269, 1271, 1276, 1290, 1293, 1319, 1321, 1322, 1345, 1352, 1354, 1355, 1356, 1379, 1386, 1388, 1389, 1390, 1413, 1420, 1422, 1423, 1449, 1451, 1452, 1475, 1482, 1484, 1510, 1512, 1538, 1540, 1566, 1568, 1569, 1592, 1599, 1601, 1602, 1628, 1630, 1631, 1654, 1661, 1663, 1664, 1690, 1693, 1695, 1697, 1699, 1700, 1701, 1703, 1705, 1707, 1710, 1714, 1720, 1728, 1739, 1745, 1746, 1751, 1752, 1753, 1759, 1762, 1764, 1765, 1767, 1769, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1782, 1784, 1785, 1795, 1797, 1809, 1821, 1861, 1879, 1896, 1899, 1903, 1904, 1909, 1915, 1916, 1917, 1919], "base": [4, 5, 6, 12, 19, 22, 24, 27, 30, 32, 34, 35, 37, 642, 643, 649, 660, 745, 793, 796, 817, 818, 820, 821, 822, 824, 825, 826, 829, 830, 831, 833, 834, 872, 896, 927, 928, 930, 931, 1060, 1098, 1254, 1693, 1695, 1697, 1700, 1703, 1729, 1756, 1763, 1767, 1769, 1770, 1772, 1774, 1776, 1778, 1780, 1860, 1898, 1899, 1909, 1910], "scipi": [4, 6, 9, 21, 28, 29, 34, 37, 643, 746, 748, 750, 797, 798, 800, 823, 828, 835, 950, 989, 1027, 1060, 1065, 1103, 1144, 1183, 1221, 1254, 1259, 1705, 1707, 1712, 1715, 1717, 1722, 1727, 1750, 1754, 1757], "convexhul": 4, "approxim": [4, 9, 11, 13, 24, 32, 714, 729], "both": [4, 9, 10, 12, 16, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 52, 58, 84, 90, 111, 118, 144, 150, 177, 183, 209, 216, 242, 248, 275, 281, 308, 314, 341, 347, 375, 381, 408, 414, 441, 447, 474, 480, 493, 507, 513, 536, 542, 565, 583, 589, 601, 850, 854, 864, 927, 930, 931, 966, 973, 1005, 1012, 1043, 1050, 1081, 1088, 1121, 1128, 1160, 1167, 1199, 1206, 1237, 1244, 1275, 1282, 1305, 1311, 1337, 1343, 1371, 1377, 1405, 1411, 1435, 1441, 1467, 1473, 1496, 1502, 1524, 1530, 1552, 1558, 1584, 1590, 1614, 1620, 1646, 1652, 1676, 1682, 1715, 1721, 1725, 1726, 1738, 1750, 1756, 1868, 1916, 1917], "without": [4, 17, 19, 30, 31, 32, 33, 34, 747, 1216, 1744, 1745, 1765, 1767, 1916], "necessarili": [4, 9, 16], "locat": [4, 5, 7, 9, 10, 11, 15, 19, 21, 23, 26, 27, 28, 29, 30, 32, 33, 34, 45, 52, 53, 54, 57, 61, 62, 64, 65, 66, 68, 70, 77, 84, 85, 86, 89, 91, 92, 94, 96, 104, 111, 112, 113, 117, 121, 122, 123, 124, 126, 128, 137, 144, 145, 146, 149, 153, 154, 155, 156, 157, 159, 161, 170, 177, 178, 179, 182, 186, 187, 188, 189, 190, 192, 194, 202, 209, 210, 211, 215, 219, 220, 221, 222, 224, 226, 235, 242, 243, 244, 247, 251, 252, 253, 254, 255, 257, 259, 268, 275, 276, 277, 280, 284, 285, 286, 287, 288, 290, 292, 301, 308, 309, 310, 313, 317, 318, 319, 320, 321, 323, 325, 334, 341, 342, 343, 346, 350, 351, 353, 354, 355, 357, 359, 368, 375, 376, 377, 380, 384, 385, 386, 387, 388, 390, 392, 401, 408, 409, 410, 413, 417, 418, 419, 420, 421, 423, 425, 434, 441, 442, 443, 446, 450, 451, 452, 453, 454, 456, 458, 467, 474, 475, 476, 479, 483, 484, 485, 486, 488, 490, 495, 496, 500, 507, 508, 509, 512, 515, 517, 518, 520, 522, 529, 536, 537, 538, 541, 544, 545, 547, 549, 568, 572, 573, 576, 583, 584, 585, 588, 591, 592, 594, 596, 600, 601, 602, 603, 604, 605, 606, 636, 637, 639, 648, 652, 747, 812, 813, 864, 944, 946, 947, 950, 951, 952, 953, 960, 962, 966, 968, 969, 972, 975, 976, 978, 980, 985, 986, 989, 990, 991, 992, 999, 1001, 1005, 1007, 1008, 1011, 1014, 1015, 1017, 1019, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1037, 1039, 1043, 1045, 1046, 1049, 1052, 1053, 1055, 1057, 1061, 1062, 1065, 1066, 1067, 1068, 1075, 1077, 1081, 1083, 1084, 1087, 1090, 1091, 1093, 1095, 1099, 1100, 1103, 1104, 1105, 1106, 1115, 1117, 1121, 1123, 1124, 1127, 1130, 1131, 1133, 1135, 1140, 1141, 1144, 1145, 1146, 1147, 1154, 1156, 1160, 1162, 1163, 1166, 1169, 1170, 1172, 1174, 1177, 1179, 1180, 1183, 1184, 1185, 1186, 1193, 1195, 1199, 1201, 1202, 1205, 1208, 1209, 1211, 1213, 1216, 1217, 1218, 1221, 1222, 1223, 1224, 1231, 1233, 1237, 1239, 1240, 1243, 1246, 1247, 1249, 1251, 1255, 1256, 1259, 1260, 1261, 1262, 1269, 1271, 1275, 1277, 1278, 1281, 1284, 1285, 1287, 1289, 1294, 1295, 1298, 1305, 1306, 1307, 1310, 1313, 1314, 1316, 1318, 1323, 1324, 1325, 1328, 1337, 1338, 1339, 1342, 1346, 1347, 1349, 1351, 1357, 1358, 1359, 1362, 1371, 1372, 1373, 1376, 1380, 1381, 1383, 1385, 1391, 1392, 1393, 1396, 1405, 1406, 1407, 1410, 1414, 1415, 1417, 1419, 1424, 1425, 1428, 1435, 1436, 1437, 1440, 1443, 1444, 1446, 1448, 1453, 1454, 1455, 1458, 1467, 1468, 1469, 1472, 1476, 1477, 1479, 1481, 1485, 1486, 1489, 1496, 1497, 1498, 1501, 1504, 1505, 1507, 1509, 1513, 1514, 1517, 1524, 1525, 1526, 1529, 1532, 1533, 1535, 1537, 1541, 1542, 1545, 1552, 1553, 1554, 1557, 1560, 1561, 1563, 1565, 1570, 1571, 1572, 1575, 1584, 1585, 1586, 1589, 1593, 1594, 1596, 1598, 1603, 1604, 1607, 1614, 1615, 1616, 1619, 1622, 1623, 1625, 1627, 1632, 1633, 1634, 1637, 1646, 1647, 1648, 1651, 1655, 1656, 1658, 1660, 1665, 1666, 1669, 1676, 1677, 1678, 1681, 1684, 1685, 1687, 1689, 1710, 1717, 1720, 1722, 1745], "almost": [4, 10, 24, 26, 29, 30], "flat": [4, 661, 1254, 1823, 1901], "plane": [4, 11, 695, 697], "2": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 56, 88, 100, 116, 148, 181, 214, 229, 246, 279, 312, 345, 379, 412, 445, 478, 511, 514, 516, 540, 564, 587, 616, 631, 644, 649, 672, 673, 674, 675, 676, 677, 678, 684, 691, 692, 694, 697, 701, 716, 731, 746, 763, 772, 797, 823, 864, 885, 896, 908, 909, 916, 917, 921, 924, 925, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 945, 950, 953, 954, 955, 956, 967, 971, 984, 989, 992, 993, 994, 995, 1006, 1010, 1027, 1030, 1031, 1032, 1033, 1044, 1048, 1060, 1065, 1068, 1069, 1070, 1071, 1082, 1086, 1098, 1103, 1106, 1107, 1108, 1109, 1122, 1126, 1139, 1144, 1147, 1148, 1149, 1150, 1161, 1165, 1178, 1183, 1186, 1187, 1188, 1189, 1200, 1204, 1216, 1221, 1224, 1225, 1226, 1227, 1238, 1242, 1254, 1259, 1262, 1263, 1264, 1265, 1276, 1280, 1309, 1321, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1712, 1714, 1715, 1718, 1722, 1727, 1729, 1738, 1745, 1747, 1750, 1778, 1793, 1805, 1811, 1819, 1823, 1888, 1892, 1893, 1915, 1917, 1920], "ha": [4, 5, 6, 7, 9, 10, 14, 16, 17, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 71, 77, 97, 104, 129, 137, 162, 170, 195, 202, 227, 235, 260, 268, 293, 301, 326, 334, 360, 368, 393, 401, 426, 434, 459, 467, 491, 500, 523, 529, 550, 553, 569, 571, 576, 597, 600, 618, 624, 633, 695, 697, 734, 858, 921, 930, 931, 950, 951, 952, 981, 989, 990, 991, 1020, 1027, 1028, 1029, 1058, 1065, 1066, 1067, 1096, 1103, 1104, 1105, 1136, 1144, 1145, 1146, 1175, 1183, 1184, 1185, 1214, 1216, 1221, 1222, 1223, 1252, 1259, 1260, 1261, 1290, 1298, 1319, 1321, 1328, 1352, 1355, 1362, 1386, 1389, 1396, 1420, 1428, 1449, 1458, 1482, 1489, 1510, 1517, 1538, 1545, 1566, 1568, 1575, 1599, 1607, 1628, 1630, 1637, 1661, 1669, 1690, 1756, 1763, 1795, 1809, 1811, 1821, 1823, 1862, 1896, 1909, 1910, 1919], "spheric": [4, 9, 11, 24, 27, 30, 33, 35, 757, 760, 772, 809, 810, 811, 812, 813, 814, 1060, 1254, 1729, 1737, 1753], "cylindr": [4, 9, 11, 24, 27, 33, 714, 729, 769, 803, 810, 812, 813, 906, 909, 924, 1060, 1254, 1729, 1737], "each": [4, 5, 6, 9, 10, 11, 12, 13, 16, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 48, 49, 59, 61, 64, 66, 80, 81, 91, 107, 108, 121, 140, 141, 151, 153, 155, 157, 173, 174, 184, 186, 188, 190, 205, 206, 219, 220, 222, 238, 239, 249, 251, 253, 255, 271, 272, 282, 284, 286, 288, 304, 305, 315, 317, 319, 321, 337, 338, 348, 350, 353, 355, 371, 372, 382, 384, 386, 388, 404, 405, 415, 417, 419, 421, 437, 438, 448, 450, 452, 454, 470, 471, 481, 483, 485, 486, 494, 495, 503, 504, 518, 532, 533, 543, 544, 559, 560, 572, 579, 580, 620, 636, 649, 652, 665, 701, 714, 716, 729, 731, 741, 742, 747, 749, 772, 799, 827, 832, 838, 839, 840, 842, 843, 846, 851, 854, 858, 863, 864, 865, 872, 873, 876, 877, 878, 883, 887, 889, 898, 901, 902, 927, 928, 944, 945, 946, 950, 951, 953, 954, 955, 956, 957, 960, 961, 962, 963, 967, 983, 984, 985, 989, 990, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1006, 1022, 1023, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1037, 1038, 1039, 1040, 1044, 1061, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1082, 1098, 1099, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1122, 1139, 1140, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1156, 1157, 1161, 1177, 1178, 1179, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1200, 1216, 1217, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1231, 1232, 1233, 1234, 1238, 1254, 1255, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1269, 1270, 1271, 1272, 1276, 1294, 1301, 1302, 1322, 1323, 1325, 1331, 1332, 1334, 1356, 1357, 1359, 1365, 1366, 1368, 1390, 1391, 1393, 1399, 1400, 1402, 1424, 1431, 1432, 1452, 1453, 1455, 1461, 1462, 1464, 1485, 1492, 1493, 1513, 1520, 1521, 1541, 1548, 1549, 1569, 1570, 1572, 1578, 1579, 1581, 1603, 1610, 1611, 1631, 1632, 1634, 1640, 1641, 1643, 1665, 1672, 1673, 1712, 1713, 1714, 1716, 1721, 1722, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1736, 1737, 1743, 1746, 1748, 1749, 1750, 1751, 1756, 1774, 1823, 1834, 1846, 1859, 1894, 1899, 1900, 1903, 1904, 1915, 1916, 1917], "necessari": [4, 6, 9, 18, 23, 24, 28, 30, 34, 741, 745, 746, 748, 749, 750, 793, 796, 797, 798, 799, 800, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 1751, 1888, 1911], "accordingli": [4, 1717], "These": [4, 7, 10, 12, 16, 19, 26, 27, 28, 29, 30, 32, 34, 35, 66, 157, 190, 255, 288, 321, 355, 388, 421, 454, 486, 493, 648, 689, 933, 944, 954, 993, 1031, 1069, 1107, 1148, 1177, 1187, 1216, 1225, 1254, 1263, 1718, 1916, 1917], "altern": [4, 9, 26, 32, 930, 931], "add_model": [4, 5, 6, 9, 10, 11, 12, 13, 15, 19, 22, 23, 30, 31, 32, 33, 34, 496, 573, 637, 746, 797, 823, 824, 933, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1324, 1358, 1392, 1425, 1454, 1486, 1514, 1542, 1571, 1604, 1633, 1666], "choos": [4, 7, 12], "hydraulic_size_factor": [4, 5, 7, 10, 15, 19, 24, 28, 30, 33, 672, 673, 674, 675, 676, 677, 678, 919, 920], "For": [4, 5, 7, 9, 10, 11, 12, 13, 16, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 63, 64, 66, 155, 157, 188, 190, 253, 255, 286, 288, 319, 321, 352, 353, 355, 386, 388, 419, 421, 452, 454, 485, 486, 495, 572, 636, 750, 800, 835, 854, 930, 931, 946, 983, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1512, 1513, 1541, 1570, 1603, 1632, 1665, 1710, 1728, 1737, 1745, 1847, 1919], "more": [4, 7, 9, 10, 13, 15, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 52, 53, 54, 57, 61, 68, 77, 84, 85, 86, 89, 91, 94, 104, 111, 112, 113, 117, 121, 126, 137, 144, 145, 146, 149, 153, 159, 170, 177, 178, 179, 182, 186, 192, 197, 202, 209, 210, 211, 215, 219, 224, 235, 242, 243, 244, 247, 251, 257, 268, 275, 276, 277, 280, 284, 290, 301, 308, 309, 310, 313, 317, 323, 334, 341, 342, 343, 346, 350, 357, 368, 375, 376, 377, 380, 384, 390, 401, 408, 409, 410, 413, 417, 423, 434, 441, 442, 443, 446, 450, 456, 467, 474, 475, 476, 479, 483, 488, 495, 496, 500, 507, 508, 509, 512, 514, 520, 529, 536, 537, 538, 541, 544, 547, 552, 572, 573, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 636, 637, 650, 750, 800, 835, 930, 931, 946, 947, 952, 953, 956, 957, 966, 967, 968, 969, 972, 978, 983, 985, 986, 991, 992, 995, 996, 1005, 1006, 1007, 1008, 1011, 1017, 1023, 1024, 1029, 1030, 1033, 1034, 1043, 1044, 1045, 1046, 1049, 1055, 1061, 1062, 1067, 1068, 1071, 1072, 1081, 1082, 1083, 1084, 1087, 1093, 1099, 1100, 1105, 1106, 1109, 1110, 1121, 1122, 1123, 1124, 1127, 1133, 1140, 1141, 1146, 1147, 1150, 1151, 1160, 1161, 1162, 1163, 1166, 1172, 1179, 1180, 1185, 1186, 1189, 1190, 1199, 1200, 1201, 1202, 1205, 1211, 1217, 1218, 1223, 1224, 1227, 1228, 1237, 1238, 1239, 1240, 1243, 1249, 1254, 1255, 1256, 1261, 1262, 1265, 1266, 1275, 1276, 1277, 1278, 1281, 1287, 1294, 1295, 1298, 1305, 1306, 1307, 1310, 1316, 1323, 1324, 1328, 1337, 1338, 1339, 1342, 1349, 1357, 1358, 1362, 1371, 1372, 1373, 1376, 1383, 1391, 1392, 1396, 1405, 1406, 1407, 1410, 1417, 1424, 1425, 1428, 1435, 1436, 1437, 1440, 1446, 1453, 1454, 1458, 1467, 1468, 1469, 1472, 1479, 1485, 1486, 1489, 1496, 1497, 1498, 1501, 1507, 1513, 1514, 1517, 1524, 1525, 1526, 1529, 1535, 1541, 1542, 1545, 1552, 1553, 1554, 1557, 1563, 1570, 1571, 1575, 1584, 1585, 1586, 1589, 1596, 1603, 1604, 1607, 1614, 1615, 1616, 1619, 1625, 1632, 1633, 1637, 1646, 1647, 1648, 1651, 1658, 1665, 1666, 1669, 1676, 1677, 1678, 1681, 1687, 1721, 1725, 1726, 1728, 1785, 1865, 1888, 1893, 1909, 1910], "inform": [4, 5, 7, 9, 10, 12, 16, 26, 28, 29, 32, 33, 34, 496, 552, 573, 637, 750, 800, 835, 923, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1324, 1358, 1392, 1425, 1454, 1486, 1514, 1542, 1571, 1604, 1633, 1666, 1888, 1893, 1903, 1904], "see": [4, 9, 10, 13, 16, 19, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 62, 63, 64, 66, 92, 123, 154, 155, 157, 187, 188, 190, 221, 252, 253, 255, 285, 286, 288, 318, 319, 321, 351, 352, 353, 355, 385, 386, 388, 418, 419, 421, 451, 452, 454, 484, 485, 486, 495, 496, 517, 545, 552, 572, 573, 592, 605, 636, 637, 650, 660, 868, 916, 917, 946, 947, 976, 985, 986, 1015, 1023, 1024, 1053, 1061, 1062, 1091, 1099, 1100, 1131, 1140, 1141, 1170, 1179, 1180, 1209, 1217, 1218, 1247, 1254, 1255, 1256, 1285, 1294, 1295, 1314, 1323, 1324, 1347, 1357, 1358, 1381, 1391, 1392, 1415, 1424, 1425, 1444, 1453, 1454, 1477, 1485, 1486, 1505, 1513, 1514, 1533, 1541, 1542, 1561, 1570, 1571, 1594, 1603, 1604, 1623, 1632, 1633, 1656, 1665, 1666, 1685, 1720, 1729, 1765, 1767, 1888, 1893], "notebook": [4, 7, 16, 17, 21, 22, 23, 24, 25, 27, 32, 33, 34, 1919], "show": [5, 6, 7, 8, 9, 10, 27, 28, 29, 30, 32, 34, 35, 746, 748, 750, 797, 798, 800, 823, 824, 828, 835, 1916, 1917], "your": [5, 18, 19, 30, 31, 37], "veri": [5, 18, 21, 26, 27, 28, 29, 30, 31, 33, 37, 197, 854, 881, 956, 957, 995, 996, 1033, 1034, 1071, 1072, 1109, 1110, 1150, 1151, 1189, 1190, 1227, 1228, 1265, 1266, 1725, 1726, 1758], "own": [5, 16, 19, 27, 30, 31, 883, 884], "custom": [5, 6, 9, 16, 17, 26, 745, 793, 796, 821, 822, 824, 1759, 1847], "describ": [5, 21, 23, 24, 28, 29, 30, 31, 908, 924, 1022], "next": [5, 7, 9, 12, 13, 16, 27, 28, 30, 34, 35, 197, 819], "add": [5, 6, 7, 11, 16, 17, 19, 21, 23, 26, 27, 29, 30, 31, 32, 33, 34, 36, 61, 62, 63, 64, 65, 66, 91, 92, 121, 122, 123, 124, 153, 154, 155, 156, 157, 186, 187, 188, 189, 190, 219, 220, 221, 222, 251, 252, 253, 254, 255, 284, 285, 286, 287, 288, 317, 318, 319, 320, 321, 350, 351, 352, 353, 354, 355, 384, 385, 386, 387, 388, 417, 418, 419, 420, 421, 450, 451, 452, 453, 454, 483, 484, 485, 486, 495, 496, 497, 517, 544, 545, 572, 573, 592, 599, 605, 636, 637, 746, 797, 823, 945, 946, 947, 976, 984, 985, 986, 1015, 1023, 1024, 1053, 1061, 1062, 1091, 1099, 1100, 1131, 1139, 1140, 1141, 1170, 1178, 1179, 1180, 1209, 1217, 1218, 1247, 1255, 1256, 1285, 1294, 1295, 1314, 1322, 1323, 1324, 1347, 1356, 1357, 1358, 1381, 1390, 1391, 1392, 1415, 1424, 1425, 1444, 1452, 1453, 1454, 1477, 1484, 1485, 1486, 1505, 1513, 1514, 1533, 1541, 1542, 1561, 1569, 1570, 1571, 1594, 1603, 1604, 1623, 1631, 1632, 1633, 1656, 1665, 1666, 1685, 1711, 1713, 1718, 1744, 1785], "weibul": [5, 9, 15, 748, 798, 828], "might": [5, 9, 16, 27, 28, 29, 32, 33, 644, 667, 812, 813, 818, 956, 957, 995, 996, 1033, 1034, 1071, 1072, 1109, 1110, 1150, 1151, 1189, 1190, 1227, 1228, 1265, 1266, 1721, 1725, 1726, 1728, 1751, 1879], "our": [5, 7, 9, 16, 19, 21, 23, 24, 26, 27, 30, 32, 34, 37], "histogram": [5, 15, 35, 827], "pyplot": [5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 19, 27, 29, 30, 31, 34, 35, 746, 748, 750, 797, 798, 800, 823, 828, 835, 1916, 1917], "plt": [5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 19, 27, 29, 30, 31, 34, 35, 746, 748, 750, 797, 798, 800, 823, 828, 835, 1916, 1917], "spst": [5, 9, 30], "standard": [5, 6, 10, 23, 27, 29, 31, 32, 34, 660, 748, 798, 828, 950, 951, 989, 990, 1022, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260, 1540, 1602, 1785, 1888, 1893], "lattic": [5, 9, 944, 983, 984, 1022, 1139, 1177], "given": [5, 6, 12, 13, 17, 18, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 41, 45, 51, 52, 53, 54, 57, 59, 61, 62, 64, 65, 66, 68, 70, 75, 77, 83, 84, 85, 86, 89, 91, 92, 94, 96, 102, 104, 110, 111, 112, 113, 117, 121, 122, 123, 124, 126, 128, 133, 137, 143, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 159, 161, 166, 170, 176, 177, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 194, 200, 202, 208, 209, 210, 211, 215, 218, 219, 220, 221, 222, 224, 226, 231, 235, 241, 242, 243, 244, 247, 249, 251, 252, 253, 254, 255, 257, 259, 264, 268, 274, 275, 276, 277, 280, 282, 284, 285, 286, 287, 288, 290, 292, 297, 301, 307, 308, 309, 310, 313, 315, 317, 318, 319, 320, 321, 323, 325, 330, 334, 340, 341, 342, 343, 346, 348, 350, 351, 353, 354, 355, 357, 359, 364, 368, 374, 375, 376, 377, 380, 382, 384, 385, 386, 387, 388, 390, 392, 397, 401, 407, 408, 409, 410, 413, 415, 417, 418, 419, 420, 421, 423, 425, 430, 434, 440, 441, 442, 443, 446, 448, 450, 451, 452, 453, 454, 456, 458, 463, 467, 473, 474, 475, 476, 479, 481, 483, 484, 485, 486, 488, 490, 494, 495, 500, 506, 507, 508, 509, 512, 514, 517, 520, 522, 527, 529, 535, 536, 537, 538, 541, 544, 545, 547, 549, 562, 568, 572, 576, 582, 583, 584, 585, 588, 590, 592, 594, 596, 600, 601, 602, 603, 604, 605, 606, 615, 630, 636, 638, 647, 652, 653, 655, 660, 661, 663, 667, 668, 746, 747, 748, 750, 797, 798, 800, 817, 818, 823, 824, 825, 826, 827, 828, 829, 830, 834, 835, 861, 868, 872, 875, 877, 885, 892, 896, 903, 909, 923, 927, 928, 930, 931, 932, 934, 935, 936, 937, 938, 939, 944, 945, 946, 952, 953, 955, 956, 957, 965, 966, 967, 968, 969, 972, 974, 976, 978, 980, 983, 984, 985, 991, 992, 994, 995, 996, 1004, 1005, 1006, 1007, 1008, 1011, 1013, 1015, 1017, 1019, 1022, 1023, 1029, 1030, 1032, 1033, 1034, 1042, 1043, 1044, 1045, 1046, 1049, 1051, 1053, 1055, 1057, 1060, 1061, 1067, 1068, 1070, 1071, 1072, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1091, 1093, 1095, 1098, 1099, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1120, 1121, 1122, 1123, 1124, 1127, 1129, 1131, 1133, 1135, 1138, 1139, 1140, 1146, 1147, 1149, 1150, 1151, 1159, 1160, 1161, 1162, 1163, 1166, 1168, 1170, 1172, 1174, 1177, 1178, 1179, 1185, 1186, 1188, 1189, 1190, 1198, 1199, 1200, 1201, 1202, 1205, 1207, 1209, 1211, 1213, 1216, 1217, 1223, 1224, 1226, 1227, 1228, 1236, 1237, 1238, 1239, 1240, 1243, 1245, 1247, 1249, 1251, 1254, 1255, 1261, 1262, 1264, 1265, 1266, 1274, 1275, 1276, 1277, 1278, 1281, 1283, 1285, 1287, 1289, 1294, 1298, 1304, 1305, 1306, 1307, 1310, 1312, 1314, 1316, 1318, 1322, 1323, 1328, 1333, 1336, 1337, 1338, 1339, 1342, 1344, 1345, 1347, 1349, 1351, 1354, 1356, 1357, 1362, 1367, 1370, 1371, 1372, 1373, 1376, 1378, 1379, 1381, 1383, 1385, 1388, 1390, 1391, 1396, 1401, 1404, 1405, 1406, 1407, 1410, 1412, 1413, 1415, 1417, 1419, 1422, 1424, 1428, 1434, 1435, 1436, 1437, 1440, 1442, 1444, 1446, 1448, 1451, 1452, 1453, 1458, 1463, 1466, 1467, 1468, 1469, 1472, 1474, 1475, 1477, 1479, 1481, 1485, 1489, 1495, 1496, 1497, 1498, 1501, 1503, 1505, 1507, 1509, 1512, 1513, 1517, 1523, 1524, 1525, 1526, 1529, 1531, 1533, 1535, 1537, 1541, 1545, 1551, 1552, 1553, 1554, 1557, 1559, 1561, 1563, 1565, 1569, 1570, 1575, 1580, 1583, 1584, 1585, 1586, 1589, 1591, 1592, 1594, 1596, 1598, 1601, 1603, 1607, 1613, 1614, 1615, 1616, 1619, 1621, 1623, 1625, 1627, 1631, 1632, 1637, 1642, 1645, 1646, 1647, 1648, 1651, 1653, 1654, 1656, 1658, 1660, 1663, 1665, 1669, 1675, 1676, 1677, 1678, 1681, 1683, 1685, 1687, 1689, 1694, 1696, 1698, 1702, 1704, 1706, 1708, 1710, 1711, 1712, 1715, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1734, 1735, 1736, 1737, 1738, 1744, 1745, 1747, 1748, 1749, 1750, 1754, 1756, 1757, 1765, 1767, 1774, 1776, 1778, 1780, 1792, 1804, 1818, 1834, 1835, 1838, 1846, 1859, 1890, 1891, 1893, 1901, 1911, 1914, 1915, 1916, 1917, 1918, 1919], "yet": [5, 9, 23, 28, 37, 495, 572, 636, 946, 985, 1023, 1060, 1061, 1099, 1140, 1179, 1217, 1254, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1899], "onli": [5, 6, 9, 12, 13, 14, 17, 18, 19, 24, 27, 28, 29, 30, 31, 32, 33, 34, 45, 51, 52, 53, 54, 57, 68, 77, 83, 84, 85, 86, 89, 94, 104, 110, 111, 112, 113, 117, 124, 126, 137, 143, 144, 145, 146, 149, 159, 170, 176, 177, 178, 179, 182, 192, 202, 208, 209, 210, 211, 215, 224, 235, 241, 242, 243, 244, 247, 257, 268, 274, 275, 276, 277, 280, 290, 301, 307, 308, 309, 310, 313, 323, 334, 340, 341, 342, 343, 346, 357, 368, 374, 375, 376, 377, 380, 390, 401, 407, 408, 409, 410, 413, 423, 434, 440, 441, 442, 443, 446, 456, 467, 473, 474, 475, 476, 479, 488, 494, 495, 500, 506, 507, 508, 509, 512, 520, 529, 535, 536, 537, 538, 541, 547, 562, 572, 576, 582, 583, 584, 585, 588, 590, 594, 600, 601, 602, 603, 604, 606, 623, 636, 638, 653, 659, 667, 668, 691, 696, 699, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 717, 718, 725, 728, 732, 733, 735, 739, 742, 805, 847, 854, 858, 879, 927, 930, 931, 946, 950, 951, 952, 953, 956, 957, 960, 962, 965, 966, 967, 968, 969, 972, 974, 978, 983, 985, 989, 990, 991, 992, 995, 996, 999, 1001, 1004, 1005, 1006, 1007, 1008, 1011, 1013, 1017, 1023, 1027, 1028, 1029, 1030, 1033, 1034, 1037, 1039, 1042, 1043, 1044, 1045, 1046, 1049, 1051, 1055, 1060, 1061, 1065, 1066, 1067, 1068, 1071, 1072, 1075, 1077, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1093, 1098, 1099, 1103, 1104, 1105, 1106, 1109, 1110, 1115, 1117, 1120, 1121, 1122, 1123, 1124, 1127, 1129, 1133, 1140, 1144, 1145, 1146, 1147, 1150, 1151, 1154, 1156, 1159, 1160, 1161, 1162, 1163, 1166, 1168, 1172, 1179, 1183, 1184, 1185, 1186, 1189, 1190, 1193, 1195, 1198, 1199, 1200, 1201, 1202, 1205, 1207, 1211, 1217, 1221, 1222, 1223, 1224, 1227, 1228, 1231, 1233, 1236, 1237, 1238, 1239, 1240, 1243, 1245, 1249, 1255, 1259, 1260, 1261, 1262, 1265, 1266, 1269, 1271, 1274, 1275, 1276, 1277, 1278, 1281, 1283, 1287, 1294, 1298, 1304, 1305, 1306, 1307, 1310, 1312, 1316, 1321, 1323, 1328, 1336, 1337, 1338, 1339, 1342, 1344, 1349, 1357, 1362, 1370, 1371, 1372, 1373, 1376, 1378, 1383, 1391, 1396, 1404, 1405, 1406, 1407, 1410, 1412, 1417, 1424, 1428, 1434, 1435, 1436, 1437, 1440, 1442, 1446, 1453, 1458, 1466, 1467, 1468, 1469, 1472, 1474, 1479, 1485, 1489, 1495, 1496, 1497, 1498, 1501, 1503, 1507, 1513, 1517, 1523, 1524, 1525, 1526, 1529, 1531, 1535, 1541, 1545, 1551, 1552, 1553, 1554, 1557, 1559, 1563, 1570, 1575, 1583, 1584, 1585, 1586, 1589, 1591, 1596, 1603, 1607, 1613, 1614, 1615, 1616, 1619, 1621, 1625, 1632, 1637, 1645, 1646, 1647, 1648, 1651, 1653, 1658, 1665, 1669, 1675, 1676, 1677, 1678, 1681, 1683, 1687, 1713, 1721, 1725, 1726, 1735, 1746, 1774, 1778, 1780, 1823, 1835, 1899, 1903, 1904, 1916, 1917, 1919], "dictat": [5, 21, 34, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 495, 504, 533, 560, 572, 580, 636, 946, 963, 985, 1002, 1023, 1040, 1061, 1078, 1099, 1118, 1140, 1157, 1179, 1196, 1217, 1234, 1255, 1272, 1294, 1302, 1323, 1334, 1357, 1368, 1391, 1402, 1424, 1432, 1453, 1464, 1485, 1493, 1513, 1521, 1541, 1549, 1570, 1581, 1603, 1611, 1632, 1643, 1665, 1673], "upper": [5, 28, 29, 30, 829, 950, 960, 989, 999, 1027, 1037, 1065, 1075, 1103, 1115, 1144, 1154, 1183, 1193, 1221, 1231, 1259, 1269, 1715, 1740, 1742, 1754, 1757], "limit": [5, 9, 13, 16, 24, 26, 27, 30, 34, 747, 817, 829, 927, 1751], "don": [5, 7, 11, 16, 18, 19, 24, 30, 37], "t": [5, 6, 7, 9, 11, 16, 18, 19, 24, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 73, 99, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 494, 518, 525, 554, 571, 644, 854, 857, 858, 859, 861, 863, 864, 865, 868, 870, 879, 881, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 899, 900, 902, 903, 921, 930, 931, 944, 954, 957, 983, 993, 996, 1022, 1031, 1034, 1060, 1069, 1072, 1098, 1107, 1110, 1138, 1148, 1151, 1177, 1187, 1190, 1216, 1225, 1228, 1254, 1263, 1266, 1293, 1321, 1355, 1389, 1423, 1451, 1484, 1512, 1540, 1568, 1602, 1630, 1664, 1915, 1916], "want": [5, 7, 9, 16, 17, 21, 26, 29, 30, 31, 33, 37, 1714, 1905, 1917], "exce": [5, 34], "overlap": [5, 9, 10, 29, 30, 31, 747, 812, 813], "neighbor": [5, 6, 9, 21, 24, 30, 34, 49, 81, 100, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 504, 533, 560, 580, 740, 742, 745, 747, 752, 753, 754, 755, 793, 796, 821, 822, 840, 842, 843, 944, 953, 955, 956, 957, 963, 967, 983, 992, 994, 995, 996, 1002, 1006, 1030, 1032, 1033, 1034, 1040, 1044, 1068, 1070, 1071, 1072, 1078, 1082, 1098, 1106, 1108, 1109, 1110, 1118, 1122, 1147, 1149, 1150, 1151, 1157, 1161, 1177, 1186, 1188, 1189, 1190, 1196, 1200, 1224, 1226, 1227, 1228, 1234, 1238, 1262, 1264, 1265, 1266, 1272, 1276, 1302, 1334, 1368, 1402, 1432, 1464, 1493, 1521, 1549, 1581, 1611, 1643, 1673, 1719, 1721, 1725, 1726, 1745, 1749], "caus": [5, 19, 30, 34, 1745], "paradox": [5, 747], "neg": [5, 9, 30, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 1715], "ll": [5, 9, 10, 16, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37], "larg": [5, 9, 10, 18, 19, 21, 29, 30, 34, 812, 813, 956, 957, 995, 996, 1033, 1034, 1071, 1072, 1109, 1110, 1111, 1112, 1150, 1151, 1189, 1190, 1227, 1228, 1265, 1266, 1725, 1726], "so": [5, 9, 10, 14, 15, 16, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 58, 61, 65, 90, 91, 118, 119, 121, 150, 153, 156, 183, 186, 189, 197, 216, 219, 220, 222, 248, 251, 254, 281, 284, 287, 314, 317, 320, 347, 350, 354, 381, 384, 387, 414, 417, 420, 447, 450, 453, 480, 483, 513, 542, 544, 553, 565, 589, 599, 649, 652, 667, 747, 830, 854, 858, 950, 955, 973, 989, 994, 1012, 1027, 1032, 1050, 1060, 1065, 1070, 1088, 1098, 1103, 1108, 1111, 1112, 1128, 1144, 1149, 1167, 1183, 1188, 1206, 1221, 1226, 1244, 1254, 1259, 1264, 1282, 1311, 1343, 1377, 1411, 1441, 1473, 1502, 1530, 1558, 1590, 1620, 1652, 1682, 1712, 1718, 1722, 1728, 1729, 1745, 1747, 1749, 1750, 1751, 1754, 1757, 1879, 1881, 1903, 1904, 1916, 1917], "do": [5, 6, 7, 9, 10, 12, 13, 19, 24, 26, 28, 29, 30, 31, 32, 33, 34, 65, 156, 189, 254, 287, 320, 354, 387, 420, 453, 854, 1060, 1254, 1867, 1917], "need": [5, 7, 9, 10, 11, 12, 13, 16, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 73, 99, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 525, 649, 854, 906, 1711, 1722], "express": [5, 24, 28, 33], "scientif": [5, 26], "notat": [5, 21, 24, 30, 31], "below": [5, 7, 9, 10, 11, 19, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 647, 817, 841, 846, 854, 1747, 1751], "25": [5, 9, 10, 19, 30, 31, 33, 34, 36, 120, 956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265, 1905, 1915], "under": [5, 7, 23, 24, 30, 635, 663, 1770, 1772, 1776, 1899], "fig": [5, 6, 7, 8, 9, 15, 29, 30, 31, 748, 798, 828, 1916, 1917, 1919], "readi": [5, 7, 10, 14, 21, 23, 36, 493], "object": [5, 7, 9, 10, 15, 16, 17, 18, 23, 26, 27, 28, 30, 31, 34, 35, 39, 40, 50, 52, 58, 60, 62, 72, 73, 74, 82, 84, 90, 92, 98, 99, 100, 101, 109, 111, 118, 123, 130, 131, 132, 142, 144, 150, 152, 154, 163, 164, 165, 175, 177, 183, 185, 187, 196, 197, 198, 199, 207, 209, 216, 221, 228, 229, 230, 240, 242, 248, 250, 252, 261, 262, 263, 273, 275, 281, 283, 285, 294, 295, 296, 306, 308, 314, 316, 318, 327, 328, 329, 339, 341, 347, 349, 351, 361, 362, 363, 373, 375, 381, 383, 385, 394, 395, 396, 406, 408, 414, 416, 418, 427, 428, 429, 439, 441, 447, 449, 451, 460, 461, 462, 472, 474, 480, 482, 484, 492, 494, 495, 497, 498, 505, 507, 513, 514, 517, 524, 525, 526, 534, 536, 542, 543, 545, 551, 553, 554, 555, 561, 565, 570, 571, 572, 574, 581, 583, 589, 590, 592, 598, 601, 605, 607, 613, 614, 619, 620, 623, 625, 628, 629, 634, 635, 636, 638, 649, 653, 656, 659, 660, 662, 663, 664, 665, 668, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 741, 742, 744, 745, 746, 747, 748, 749, 750, 752, 754, 757, 758, 759, 760, 761, 764, 766, 768, 769, 770, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 793, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 807, 809, 810, 811, 812, 813, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 946, 948, 960, 962, 964, 966, 973, 974, 976, 982, 983, 985, 987, 999, 1001, 1003, 1005, 1012, 1013, 1015, 1021, 1022, 1023, 1025, 1037, 1039, 1041, 1043, 1050, 1051, 1053, 1059, 1060, 1061, 1063, 1075, 1077, 1079, 1081, 1088, 1089, 1091, 1097, 1098, 1099, 1101, 1115, 1117, 1119, 1121, 1128, 1129, 1131, 1137, 1138, 1140, 1142, 1154, 1156, 1158, 1160, 1167, 1168, 1170, 1176, 1177, 1179, 1181, 1193, 1195, 1197, 1199, 1206, 1207, 1209, 1215, 1216, 1217, 1219, 1231, 1233, 1235, 1237, 1244, 1245, 1247, 1253, 1254, 1255, 1257, 1269, 1271, 1273, 1275, 1282, 1283, 1285, 1291, 1293, 1294, 1296, 1303, 1305, 1311, 1312, 1314, 1320, 1321, 1322, 1323, 1325, 1326, 1335, 1337, 1343, 1344, 1345, 1347, 1353, 1355, 1356, 1357, 1359, 1360, 1369, 1371, 1377, 1378, 1379, 1381, 1387, 1389, 1390, 1391, 1393, 1394, 1403, 1405, 1411, 1412, 1413, 1415, 1421, 1423, 1424, 1426, 1433, 1435, 1441, 1442, 1444, 1450, 1451, 1452, 1453, 1455, 1456, 1465, 1467, 1473, 1474, 1475, 1477, 1483, 1484, 1485, 1487, 1494, 1496, 1502, 1503, 1505, 1511, 1512, 1513, 1515, 1522, 1524, 1530, 1531, 1533, 1539, 1540, 1541, 1543, 1550, 1552, 1558, 1559, 1561, 1567, 1568, 1569, 1570, 1572, 1573, 1582, 1584, 1590, 1591, 1592, 1594, 1600, 1602, 1603, 1605, 1612, 1614, 1620, 1621, 1623, 1629, 1630, 1631, 1632, 1634, 1635, 1644, 1646, 1652, 1653, 1654, 1656, 1662, 1664, 1665, 1667, 1674, 1676, 1682, 1683, 1685, 1691, 1700, 1711, 1713, 1730, 1731, 1744, 1754, 1757, 1790, 1791, 1796, 1802, 1803, 1810, 1816, 1817, 1822, 1824, 1830, 1835, 1836, 1838, 1842, 1847, 1849, 1855, 1879, 1881, 1883, 1886, 1887, 1888, 1890, 1893, 1897, 1898, 1903, 1904, 1906, 1909, 1910, 1916, 1917, 1918, 1919, 1920], "dictionari": [5, 10, 16, 23, 29, 30, 31, 32, 33, 34, 40, 46, 47, 48, 58, 67, 74, 78, 79, 80, 90, 93, 101, 105, 106, 107, 118, 125, 132, 138, 139, 140, 150, 158, 165, 171, 172, 173, 183, 191, 199, 203, 204, 205, 216, 223, 230, 236, 237, 238, 248, 256, 263, 269, 270, 271, 281, 289, 296, 302, 303, 304, 314, 322, 329, 335, 336, 337, 347, 356, 363, 369, 370, 371, 381, 389, 396, 402, 403, 404, 414, 422, 429, 435, 436, 437, 447, 455, 462, 468, 469, 470, 480, 487, 496, 498, 501, 502, 503, 513, 519, 526, 530, 531, 532, 542, 546, 554, 555, 557, 558, 559, 565, 566, 573, 574, 577, 578, 579, 589, 593, 611, 612, 617, 620, 626, 627, 632, 637, 647, 648, 649, 651, 663, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 744, 745, 746, 747, 748, 750, 752, 754, 757, 758, 759, 760, 761, 764, 768, 769, 770, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 793, 795, 796, 797, 798, 800, 802, 803, 804, 805, 809, 810, 811, 812, 813, 814, 820, 821, 822, 823, 824, 825, 826, 828, 830, 833, 834, 835, 857, 858, 859, 860, 861, 863, 864, 865, 868, 870, 872, 876, 879, 881, 883, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 923, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 947, 948, 958, 959, 961, 973, 977, 986, 987, 997, 998, 1000, 1012, 1016, 1024, 1025, 1035, 1036, 1038, 1050, 1054, 1062, 1063, 1073, 1074, 1076, 1088, 1092, 1100, 1101, 1113, 1114, 1116, 1128, 1132, 1141, 1142, 1152, 1153, 1155, 1167, 1171, 1180, 1181, 1191, 1192, 1194, 1206, 1210, 1218, 1219, 1229, 1230, 1232, 1244, 1248, 1256, 1257, 1267, 1268, 1270, 1282, 1286, 1295, 1296, 1299, 1300, 1301, 1311, 1315, 1322, 1324, 1326, 1329, 1330, 1331, 1332, 1343, 1348, 1354, 1356, 1358, 1360, 1363, 1364, 1365, 1366, 1377, 1382, 1388, 1390, 1392, 1394, 1397, 1398, 1399, 1400, 1411, 1416, 1422, 1425, 1426, 1429, 1430, 1431, 1441, 1445, 1452, 1454, 1456, 1459, 1460, 1461, 1462, 1473, 1478, 1486, 1487, 1490, 1491, 1492, 1502, 1506, 1514, 1515, 1518, 1519, 1520, 1530, 1534, 1542, 1543, 1546, 1547, 1548, 1558, 1562, 1569, 1571, 1573, 1576, 1577, 1578, 1579, 1590, 1595, 1601, 1604, 1605, 1608, 1609, 1610, 1620, 1624, 1631, 1633, 1635, 1638, 1639, 1640, 1641, 1652, 1657, 1663, 1666, 1667, 1670, 1671, 1672, 1682, 1686, 1719, 1721, 1722, 1723, 1725, 1726, 1727, 1732, 1733, 1737, 1765, 1767, 1778, 1780, 1785, 1788, 1789, 1794, 1800, 1801, 1806, 1814, 1815, 1820, 1879, 1884, 1885, 1895, 1898, 1899, 1900, 1903, 1904, 1911, 1912, 1916, 1917], "contain": [5, 7, 9, 14, 17, 18, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 48, 49, 51, 52, 57, 58, 68, 69, 80, 81, 83, 84, 89, 90, 94, 95, 100, 107, 108, 110, 111, 117, 118, 126, 127, 140, 141, 143, 144, 149, 150, 159, 160, 173, 174, 176, 177, 182, 183, 192, 193, 205, 206, 208, 209, 215, 216, 224, 225, 238, 239, 241, 242, 247, 248, 257, 258, 271, 272, 274, 275, 280, 281, 290, 291, 304, 305, 307, 308, 313, 314, 323, 324, 337, 338, 340, 341, 346, 347, 349, 357, 358, 371, 372, 374, 375, 380, 381, 383, 390, 391, 404, 405, 407, 408, 413, 414, 416, 423, 424, 437, 438, 440, 441, 446, 447, 449, 456, 457, 470, 471, 473, 474, 479, 480, 488, 489, 493, 494, 503, 504, 506, 507, 512, 513, 520, 521, 532, 533, 535, 536, 541, 542, 543, 547, 548, 552, 553, 559, 560, 562, 565, 567, 579, 580, 582, 583, 588, 589, 594, 595, 601, 604, 606, 620, 625, 641, 645, 647, 649, 652, 653, 659, 660, 663, 664, 665, 666, 667, 668, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 754, 756, 757, 758, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 818, 819, 821, 822, 823, 824, 826, 828, 830, 831, 833, 835, 836, 839, 841, 847, 853, 857, 858, 859, 860, 861, 863, 864, 865, 868, 870, 872, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 923, 927, 928, 930, 931, 932, 934, 935, 936, 937, 938, 939, 941, 942, 943, 950, 951, 953, 954, 955, 956, 957, 961, 963, 965, 966, 972, 973, 978, 979, 989, 990, 992, 993, 994, 995, 996, 1000, 1002, 1004, 1005, 1011, 1012, 1017, 1018, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1038, 1040, 1042, 1043, 1049, 1050, 1055, 1056, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1076, 1078, 1080, 1081, 1087, 1088, 1093, 1094, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1116, 1118, 1120, 1121, 1127, 1128, 1133, 1134, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1155, 1157, 1159, 1160, 1166, 1167, 1172, 1173, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1194, 1196, 1198, 1199, 1205, 1206, 1211, 1212, 1216, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1232, 1234, 1236, 1237, 1243, 1244, 1249, 1250, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1270, 1272, 1274, 1275, 1281, 1282, 1287, 1288, 1292, 1301, 1302, 1304, 1305, 1310, 1311, 1316, 1317, 1325, 1332, 1334, 1336, 1337, 1342, 1343, 1349, 1350, 1359, 1366, 1368, 1370, 1371, 1376, 1377, 1383, 1384, 1393, 1400, 1402, 1404, 1405, 1410, 1411, 1417, 1418, 1431, 1432, 1434, 1435, 1440, 1441, 1446, 1447, 1455, 1462, 1464, 1466, 1467, 1472, 1473, 1479, 1480, 1492, 1493, 1495, 1496, 1501, 1502, 1507, 1508, 1520, 1521, 1523, 1524, 1529, 1530, 1535, 1536, 1548, 1549, 1551, 1552, 1557, 1558, 1563, 1564, 1572, 1579, 1581, 1583, 1584, 1589, 1590, 1596, 1597, 1610, 1611, 1613, 1614, 1619, 1620, 1625, 1626, 1634, 1641, 1643, 1645, 1646, 1651, 1652, 1658, 1659, 1672, 1673, 1675, 1676, 1681, 1682, 1687, 1688, 1692, 1709, 1712, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1730, 1731, 1732, 1733, 1734, 1750, 1752, 1753, 1756, 1758, 1811, 1823, 1835, 1838, 1871, 1872, 1879, 1889, 1894, 1899, 1903, 1904, 1916, 1917, 1919], "everyth": [5, 7], "pro": 5, "tip": 5, "store": [5, 9, 15, 16, 17, 18, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 60, 73, 99, 131, 152, 164, 185, 197, 229, 250, 262, 283, 295, 316, 328, 349, 362, 383, 395, 416, 428, 449, 461, 482, 494, 495, 525, 543, 553, 554, 571, 572, 590, 635, 636, 638, 644, 648, 652, 662, 663, 747, 807, 830, 881, 933, 944, 946, 960, 962, 974, 983, 985, 999, 1001, 1013, 1022, 1023, 1037, 1039, 1051, 1060, 1061, 1075, 1077, 1089, 1098, 1099, 1115, 1117, 1129, 1138, 1140, 1154, 1156, 1168, 1177, 1179, 1193, 1195, 1207, 1216, 1217, 1231, 1233, 1245, 1254, 1255, 1269, 1271, 1283, 1293, 1294, 1312, 1321, 1323, 1344, 1355, 1357, 1378, 1389, 1391, 1412, 1423, 1424, 1442, 1451, 1453, 1474, 1484, 1485, 1503, 1512, 1513, 1531, 1540, 1541, 1559, 1568, 1570, 1591, 1602, 1603, 1621, 1630, 1632, 1653, 1664, 1665, 1683, 1763, 1770, 1772, 1776, 1835, 1838, 1879], "geo": [5, 7, 15, 746, 797, 823], "rememb": [5, 9], "just": [5, 6, 9, 15, 16, 17, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 457, 489, 521, 548, 567, 595, 967, 979, 1006, 1018, 1044, 1056, 1082, 1094, 1122, 1134, 1161, 1173, 1200, 1212, 1238, 1250, 1276, 1288, 1317, 1322, 1345, 1350, 1356, 1379, 1384, 1390, 1413, 1418, 1447, 1452, 1475, 1480, 1508, 1536, 1564, 1569, 1592, 1597, 1626, 1631, 1654, 1659, 1688, 1737, 1778, 1780, 1899, 1909, 1910, 1911], "mean": [5, 7, 9, 15, 17, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 45, 49, 52, 53, 54, 57, 59, 61, 63, 65, 68, 77, 81, 84, 85, 86, 89, 91, 94, 104, 108, 111, 112, 113, 117, 121, 122, 124, 126, 137, 141, 144, 145, 146, 149, 151, 153, 156, 159, 170, 174, 177, 178, 179, 182, 184, 186, 189, 192, 197, 202, 206, 209, 210, 211, 215, 219, 220, 222, 224, 235, 239, 242, 243, 244, 247, 249, 251, 254, 257, 268, 272, 275, 276, 277, 280, 282, 284, 287, 290, 301, 305, 308, 309, 310, 313, 315, 317, 320, 323, 334, 338, 341, 342, 343, 346, 348, 350, 352, 354, 357, 368, 372, 375, 376, 377, 380, 382, 384, 387, 390, 401, 405, 408, 409, 410, 413, 415, 417, 420, 423, 434, 438, 441, 442, 443, 446, 448, 450, 453, 456, 467, 471, 474, 475, 476, 479, 481, 483, 488, 500, 504, 507, 508, 509, 512, 520, 529, 533, 536, 537, 538, 541, 544, 547, 560, 576, 580, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 624, 652, 663, 667, 741, 745, 747, 748, 749, 793, 796, 798, 799, 821, 822, 828, 832, 846, 847, 854, 927, 952, 953, 956, 957, 963, 966, 967, 968, 969, 972, 978, 991, 992, 995, 996, 1002, 1005, 1006, 1007, 1008, 1011, 1017, 1029, 1030, 1033, 1034, 1040, 1043, 1044, 1045, 1046, 1049, 1055, 1067, 1068, 1071, 1072, 1078, 1081, 1082, 1083, 1084, 1087, 1093, 1105, 1106, 1109, 1110, 1118, 1121, 1122, 1123, 1124, 1127, 1133, 1146, 1147, 1150, 1151, 1157, 1160, 1161, 1162, 1163, 1166, 1172, 1185, 1186, 1189, 1190, 1196, 1199, 1200, 1201, 1202, 1205, 1211, 1223, 1224, 1227, 1228, 1234, 1237, 1238, 1239, 1240, 1243, 1249, 1254, 1261, 1262, 1265, 1266, 1272, 1275, 1276, 1277, 1278, 1281, 1287, 1298, 1302, 1305, 1306, 1307, 1310, 1316, 1328, 1334, 1337, 1338, 1339, 1342, 1349, 1362, 1368, 1371, 1372, 1373, 1376, 1383, 1396, 1402, 1405, 1406, 1407, 1410, 1417, 1428, 1432, 1435, 1436, 1437, 1440, 1446, 1458, 1464, 1467, 1468, 1469, 1472, 1479, 1489, 1493, 1496, 1497, 1498, 1501, 1507, 1517, 1521, 1524, 1525, 1526, 1529, 1535, 1545, 1549, 1552, 1553, 1554, 1557, 1563, 1575, 1581, 1584, 1585, 1586, 1589, 1596, 1607, 1611, 1614, 1615, 1616, 1619, 1625, 1637, 1643, 1646, 1647, 1648, 1651, 1658, 1669, 1673, 1676, 1677, 1678, 1681, 1687, 1746, 1749, 1838], "treat": [5, 23, 220, 222, 599, 1721, 1725, 1726, 1737, 1756], "list": [5, 10, 17, 19, 23, 28, 29, 30, 31, 32, 34, 41, 45, 52, 53, 54, 57, 58, 61, 62, 68, 75, 77, 84, 85, 86, 89, 90, 91, 92, 94, 102, 104, 111, 112, 113, 117, 118, 121, 122, 123, 124, 126, 133, 137, 144, 145, 146, 149, 150, 153, 154, 159, 166, 170, 177, 178, 179, 182, 183, 186, 187, 192, 197, 200, 202, 209, 210, 211, 215, 216, 219, 220, 221, 222, 224, 231, 235, 242, 243, 244, 247, 248, 251, 252, 257, 264, 268, 275, 276, 277, 280, 281, 284, 285, 290, 297, 301, 308, 309, 310, 313, 314, 317, 318, 323, 330, 334, 341, 342, 343, 346, 347, 350, 351, 357, 364, 368, 375, 376, 377, 380, 381, 384, 385, 390, 397, 401, 408, 409, 410, 413, 414, 417, 418, 423, 430, 434, 441, 442, 443, 446, 447, 450, 451, 456, 463, 467, 474, 475, 476, 479, 480, 483, 484, 488, 494, 497, 500, 507, 508, 509, 512, 513, 514, 516, 517, 520, 527, 529, 536, 537, 538, 541, 542, 544, 545, 547, 565, 576, 583, 584, 585, 588, 589, 590, 592, 594, 600, 601, 602, 603, 604, 605, 606, 624, 638, 649, 660, 662, 663, 664, 665, 667, 668, 707, 717, 722, 732, 741, 742, 749, 799, 819, 830, 831, 832, 834, 846, 854, 865, 868, 872, 909, 923, 944, 945, 952, 953, 954, 955, 956, 957, 966, 968, 969, 972, 973, 974, 976, 978, 983, 984, 991, 992, 993, 994, 995, 996, 1005, 1007, 1008, 1011, 1012, 1013, 1015, 1017, 1022, 1029, 1030, 1031, 1032, 1033, 1034, 1043, 1045, 1046, 1049, 1050, 1051, 1053, 1055, 1060, 1067, 1068, 1069, 1070, 1071, 1072, 1081, 1083, 1084, 1087, 1088, 1089, 1091, 1093, 1098, 1105, 1106, 1107, 1108, 1109, 1110, 1121, 1123, 1124, 1127, 1128, 1129, 1131, 1133, 1138, 1139, 1146, 1147, 1148, 1149, 1150, 1151, 1160, 1162, 1163, 1166, 1167, 1168, 1170, 1172, 1177, 1178, 1185, 1186, 1187, 1188, 1189, 1190, 1199, 1201, 1202, 1205, 1206, 1207, 1209, 1211, 1216, 1223, 1224, 1225, 1226, 1227, 1228, 1237, 1239, 1240, 1243, 1244, 1245, 1247, 1249, 1254, 1261, 1262, 1263, 1264, 1265, 1266, 1275, 1277, 1278, 1281, 1282, 1283, 1285, 1287, 1298, 1305, 1306, 1307, 1310, 1311, 1312, 1314, 1316, 1325, 1328, 1337, 1338, 1339, 1342, 1343, 1344, 1347, 1349, 1359, 1362, 1371, 1372, 1373, 1376, 1377, 1378, 1381, 1383, 1393, 1396, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1428, 1435, 1436, 1437, 1440, 1441, 1442, 1444, 1446, 1451, 1455, 1458, 1467, 1468, 1469, 1472, 1473, 1474, 1477, 1479, 1489, 1496, 1497, 1498, 1501, 1502, 1503, 1505, 1507, 1517, 1524, 1525, 1526, 1529, 1530, 1531, 1533, 1535, 1545, 1552, 1553, 1554, 1557, 1558, 1559, 1561, 1563, 1572, 1575, 1584, 1585, 1586, 1589, 1590, 1591, 1594, 1596, 1607, 1614, 1615, 1616, 1619, 1620, 1621, 1623, 1625, 1634, 1637, 1646, 1647, 1648, 1651, 1652, 1653, 1656, 1658, 1669, 1676, 1677, 1678, 1681, 1682, 1683, 1685, 1687, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1723, 1725, 1726, 1727, 1729, 1736, 1737, 1744, 1745, 1746, 1747, 1750, 1751, 1774, 1785, 1823, 1824, 1825, 1826, 1828, 1831, 1834, 1835, 1836, 1837, 1838, 1840, 1843, 1846, 1848, 1849, 1850, 1851, 1853, 1856, 1859, 1860, 1879, 1883, 1890, 1898, 1899, 1901, 1903, 1904, 1909, 1910, 1916, 1917, 1918, 1920], "quickli": [5, 9, 21, 26, 27], "view": [5, 7, 17, 18, 28, 32, 50, 72, 82, 98, 109, 130, 142, 163, 175, 196, 207, 228, 240, 261, 273, 294, 306, 327, 339, 361, 373, 394, 406, 427, 439, 460, 472, 492, 505, 524, 534, 551, 561, 570, 581, 598, 613, 614, 619, 628, 629, 634, 661, 964, 982, 1003, 1021, 1041, 1059, 1079, 1097, 1119, 1137, 1158, 1176, 1197, 1215, 1235, 1253, 1273, 1291, 1303, 1320, 1335, 1353, 1369, 1387, 1403, 1421, 1433, 1450, 1465, 1483, 1494, 1511, 1522, 1539, 1550, 1567, 1568, 1582, 1600, 1612, 1629, 1630, 1644, 1662, 1674, 1691, 1790, 1791, 1796, 1802, 1803, 1810, 1816, 1817, 1822, 1835, 1886, 1887, 1897], "alreadi": [5, 9, 10, 13, 16, 29, 31, 32, 33, 34, 61, 65, 91, 121, 122, 124, 153, 156, 186, 189, 219, 220, 222, 251, 254, 284, 287, 317, 320, 350, 354, 384, 387, 417, 420, 450, 453, 483, 544, 747, 945, 960, 962, 984, 999, 1001, 1037, 1039, 1075, 1077, 1115, 1117, 1138, 1139, 1154, 1156, 1178, 1193, 1195, 1231, 1233, 1269, 1271, 1722, 1862], "dict_kei": [5, 26, 32, 33], "max_siz": [5, 7, 15, 19, 28, 30, 33, 672, 673, 674, 675, 676, 677, 678], "diamet": [5, 7, 8, 9, 10, 11, 15, 16, 19, 21, 22, 24, 27, 28, 30, 31, 33, 34, 35, 495, 515, 572, 590, 591, 636, 638, 639, 649, 672, 673, 674, 675, 676, 677, 678, 691, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 744, 747, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 768, 769, 770, 772, 774, 775, 776, 777, 778, 779, 783, 784, 785, 786, 788, 789, 790, 795, 796, 802, 803, 809, 810, 812, 813, 814, 908, 909, 912, 923, 924, 925, 946, 974, 975, 985, 1013, 1014, 1023, 1051, 1052, 1061, 1089, 1090, 1099, 1129, 1130, 1140, 1168, 1169, 1179, 1207, 1208, 1217, 1245, 1246, 1255, 1283, 1284, 1294, 1312, 1313, 1323, 1344, 1346, 1357, 1378, 1380, 1391, 1412, 1414, 1424, 1442, 1443, 1453, 1474, 1476, 1485, 1503, 1504, 1513, 1531, 1532, 1541, 1559, 1560, 1570, 1591, 1593, 1603, 1621, 1622, 1632, 1653, 1655, 1665, 1683, 1684, 1917], "volum": [5, 7, 9, 10, 12, 13, 15, 19, 22, 28, 30, 31, 33, 34, 590, 638, 648, 672, 673, 674, 675, 676, 677, 678, 695, 697, 744, 757, 758, 759, 760, 761, 809, 810, 811, 812, 813, 814, 858, 859, 865, 928, 974, 1013, 1051, 1089, 1129, 1168, 1207, 1245, 1283, 1312, 1344, 1378, 1412, 1442, 1474, 1503, 1531, 1559, 1591, 1621, 1653, 1683], "cross_sectional_area": [5, 6, 7, 10, 15, 19, 28, 30, 33, 672, 673, 674, 675, 676, 677, 678, 752, 753, 754, 755, 763, 764, 795, 811, 914, 921], "total_volum": [5, 7, 9, 11, 15, 19, 28, 30, 33, 676], "lens_volum": [5, 7, 9, 15, 19, 28, 30, 33, 676], "diffusive_size_factor": [5, 7, 10, 15, 19, 24, 28, 30, 33, 552, 672, 673, 674, 675, 676, 677, 678, 911, 912, 913, 914, 916, 917, 941, 942], "return": [5, 6, 9, 10, 12, 13, 16, 18, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 39, 45, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 67, 68, 69, 70, 73, 77, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 96, 99, 100, 104, 106, 107, 108, 110, 111, 112, 113, 116, 117, 118, 125, 126, 127, 128, 131, 137, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 158, 159, 160, 161, 164, 170, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 191, 192, 193, 194, 197, 198, 202, 204, 205, 206, 208, 209, 210, 211, 214, 215, 216, 223, 224, 225, 226, 229, 235, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 256, 257, 258, 259, 262, 268, 270, 271, 272, 274, 275, 276, 277, 279, 280, 281, 282, 283, 289, 290, 291, 292, 295, 301, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 322, 323, 324, 325, 328, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348, 349, 356, 357, 358, 359, 362, 368, 370, 371, 372, 374, 375, 376, 377, 379, 380, 381, 382, 383, 389, 390, 391, 392, 395, 401, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 422, 423, 424, 425, 428, 434, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 448, 449, 455, 456, 457, 458, 461, 467, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 487, 488, 489, 490, 495, 500, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 518, 519, 520, 521, 522, 525, 529, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 546, 547, 548, 549, 552, 558, 559, 560, 562, 564, 565, 566, 567, 568, 572, 576, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 593, 594, 595, 596, 600, 601, 602, 603, 604, 606, 607, 612, 615, 616, 617, 623, 624, 627, 630, 631, 632, 636, 644, 647, 648, 649, 651, 652, 656, 663, 664, 665, 701, 716, 731, 738, 741, 742, 744, 745, 746, 747, 749, 750, 754, 760, 766, 772, 784, 789, 793, 795, 796, 797, 799, 800, 803, 807, 810, 818, 821, 822, 823, 824, 826, 827, 830, 831, 832, 833, 835, 839, 841, 846, 847, 858, 860, 864, 872, 875, 877, 878, 879, 881, 883, 884, 885, 891, 892, 898, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 917, 919, 920, 921, 923, 927, 928, 930, 931, 932, 934, 935, 936, 937, 938, 939, 941, 942, 944, 946, 950, 951, 952, 953, 954, 955, 956, 957, 959, 960, 961, 962, 963, 965, 966, 967, 968, 969, 971, 972, 973, 977, 978, 979, 980, 983, 985, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1016, 1017, 1018, 1019, 1022, 1023, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1054, 1055, 1056, 1057, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1092, 1093, 1094, 1095, 1098, 1099, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1132, 1133, 1134, 1135, 1138, 1140, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1171, 1172, 1173, 1174, 1177, 1179, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1210, 1211, 1212, 1213, 1216, 1217, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1248, 1249, 1250, 1251, 1254, 1255, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1294, 1298, 1300, 1301, 1302, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1315, 1316, 1317, 1318, 1323, 1325, 1328, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1348, 1349, 1350, 1351, 1354, 1357, 1359, 1362, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1382, 1383, 1384, 1385, 1388, 1391, 1393, 1396, 1398, 1399, 1400, 1401, 1402, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1416, 1417, 1418, 1419, 1422, 1424, 1428, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1445, 1446, 1447, 1448, 1453, 1455, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1471, 1472, 1473, 1478, 1479, 1480, 1481, 1485, 1489, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1506, 1507, 1508, 1509, 1513, 1517, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1534, 1535, 1536, 1537, 1541, 1545, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1556, 1557, 1558, 1562, 1563, 1564, 1565, 1570, 1572, 1575, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1588, 1589, 1590, 1595, 1596, 1597, 1598, 1601, 1603, 1607, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1624, 1625, 1626, 1627, 1632, 1634, 1637, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1657, 1658, 1659, 1660, 1663, 1665, 1669, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1680, 1681, 1682, 1686, 1687, 1688, 1689, 1700, 1711, 1712, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1746, 1747, 1748, 1749, 1750, 1752, 1753, 1754, 1756, 1757, 1770, 1772, 1774, 1776, 1780, 1783, 1785, 1789, 1792, 1793, 1794, 1801, 1804, 1805, 1806, 1815, 1818, 1819, 1820, 1826, 1827, 1829, 1831, 1834, 1838, 1839, 1841, 1843, 1846, 1851, 1852, 1854, 1856, 1859, 1864, 1865, 1868, 1870, 1873, 1875, 1877, 1883, 1885, 1890, 1891, 1892, 1895, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1912, 1915, 1916, 1917, 1919, 1920], "argument": [5, 16, 26, 27, 28, 29, 32, 40, 57, 62, 65, 68, 74, 89, 92, 94, 101, 117, 123, 126, 132, 149, 154, 156, 159, 165, 182, 187, 189, 192, 199, 215, 221, 224, 230, 247, 252, 254, 257, 263, 280, 285, 287, 290, 296, 313, 318, 320, 323, 329, 346, 351, 354, 357, 363, 380, 385, 387, 390, 396, 413, 418, 420, 423, 429, 446, 451, 453, 456, 462, 479, 484, 488, 495, 498, 512, 516, 517, 520, 526, 541, 545, 547, 555, 572, 574, 588, 592, 594, 604, 605, 606, 636, 644, 648, 663, 746, 797, 823, 824, 831, 854, 906, 933, 946, 948, 950, 951, 955, 967, 972, 976, 978, 985, 987, 989, 990, 994, 1006, 1011, 1015, 1017, 1022, 1023, 1025, 1027, 1028, 1032, 1044, 1049, 1053, 1055, 1061, 1063, 1065, 1066, 1070, 1082, 1087, 1091, 1093, 1099, 1101, 1103, 1104, 1108, 1122, 1127, 1131, 1133, 1140, 1142, 1144, 1145, 1149, 1161, 1166, 1170, 1172, 1179, 1181, 1183, 1184, 1188, 1200, 1205, 1209, 1211, 1217, 1219, 1221, 1222, 1226, 1238, 1243, 1247, 1249, 1255, 1257, 1259, 1260, 1264, 1276, 1281, 1285, 1287, 1294, 1296, 1310, 1314, 1316, 1323, 1326, 1342, 1347, 1349, 1357, 1360, 1376, 1381, 1383, 1391, 1394, 1410, 1415, 1417, 1424, 1426, 1440, 1444, 1446, 1453, 1456, 1472, 1477, 1479, 1485, 1487, 1501, 1505, 1507, 1513, 1515, 1529, 1533, 1535, 1541, 1543, 1557, 1561, 1563, 1570, 1573, 1589, 1594, 1596, 1603, 1605, 1619, 1623, 1625, 1632, 1635, 1651, 1656, 1658, 1665, 1667, 1681, 1685, 1687, 1720, 1737, 1749, 1763, 1780, 1835, 1916, 1917], "misc": [5, 9, 30, 32, 824], "_basic_math": 5, "product": [5, 30, 672, 673, 674, 675, 676, 677, 678], "target": [5, 6, 607, 620, 745, 746, 748, 750, 793, 796, 797, 798, 800, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 923, 927, 928, 939, 941, 942, 1746], "prop": [5, 9, 28, 30, 32, 40, 51, 52, 74, 83, 84, 101, 110, 111, 132, 143, 144, 165, 176, 177, 199, 208, 209, 230, 241, 242, 263, 274, 275, 296, 307, 308, 329, 340, 341, 363, 374, 375, 396, 407, 408, 429, 440, 441, 462, 473, 474, 498, 506, 507, 526, 535, 536, 555, 562, 574, 582, 583, 601, 672, 673, 674, 675, 676, 677, 678, 681, 684, 745, 792, 793, 796, 817, 819, 821, 822, 824, 825, 826, 829, 830, 831, 833, 834, 872, 875, 876, 901, 948, 965, 966, 987, 1004, 1005, 1025, 1042, 1043, 1063, 1080, 1081, 1101, 1120, 1121, 1142, 1159, 1160, 1181, 1198, 1199, 1216, 1219, 1236, 1237, 1257, 1274, 1275, 1296, 1304, 1305, 1326, 1336, 1337, 1360, 1370, 1371, 1394, 1404, 1405, 1426, 1434, 1435, 1456, 1466, 1467, 1487, 1495, 1496, 1515, 1523, 1524, 1543, 1551, 1552, 1573, 1583, 1584, 1605, 1613, 1614, 1635, 1645, 1646, 1667, 1675, 1676], "final": [5, 10, 16, 21, 24, 26, 33, 34, 35, 1098, 1700, 1767, 1780, 1919], "forget": [5, 21], "els": [5, 30, 47, 67, 79, 93, 106, 125, 139, 158, 172, 191, 198, 204, 223, 237, 256, 270, 289, 303, 322, 336, 356, 370, 389, 403, 422, 436, 455, 469, 487, 502, 519, 531, 546, 558, 566, 578, 593, 612, 617, 627, 632, 959, 977, 998, 1016, 1036, 1054, 1074, 1092, 1114, 1132, 1153, 1171, 1192, 1210, 1230, 1248, 1268, 1286, 1300, 1315, 1330, 1348, 1364, 1382, 1398, 1416, 1430, 1445, 1460, 1478, 1491, 1506, 1519, 1534, 1547, 1562, 1577, 1595, 1609, 1624, 1639, 1657, 1671, 1686, 1785, 1789, 1794, 1801, 1806, 1815, 1820, 1885, 1895], "appear": [5, 18, 23, 28, 30, 32, 1774, 1776, 1916, 1917], "been": [5, 6, 7, 9, 10, 13, 14, 19, 21, 26, 28, 29, 30, 31, 32, 33, 34, 45, 65, 77, 104, 137, 156, 170, 189, 202, 235, 254, 268, 287, 301, 320, 334, 354, 368, 387, 401, 420, 434, 453, 467, 500, 529, 576, 600, 747, 921, 952, 991, 1029, 1067, 1105, 1146, 1185, 1223, 1261, 1298, 1328, 1362, 1396, 1428, 1458, 1489, 1517, 1545, 1575, 1607, 1637, 1669, 1721], "net": [5, 7, 9, 10, 15, 18, 19, 21, 23, 24, 27, 29, 30, 31, 33, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 930, 931, 1917], "0x7faea714f100": 5, "valid": [5, 7, 9, 10, 15, 19, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 457, 489, 521, 548, 567, 595, 861, 879, 885, 892, 896, 903, 979, 1018, 1056, 1094, 1134, 1173, 1212, 1250, 1288, 1317, 1350, 1384, 1418, 1447, 1480, 1508, 1536, 1564, 1597, 1626, 1659, 1688, 1908, 1915], "coord": [5, 7, 9, 10, 15, 19, 23, 27, 28, 29, 30, 31, 33, 40, 74, 101, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 462, 498, 526, 555, 574, 649, 694, 695, 696, 697, 698, 699, 708, 709, 710, 711, 712, 713, 723, 724, 725, 726, 727, 728, 777, 778, 779, 780, 781, 782, 944, 948, 983, 987, 1022, 1025, 1060, 1063, 1098, 1101, 1138, 1142, 1177, 1181, 1216, 1219, 1254, 1257, 1296, 1326, 1360, 1394, 1426, 1456, 1487, 1515, 1543, 1573, 1605, 1635, 1667, 1718, 1736, 1748, 1749], "625": [5, 34], "3": [5, 6, 7, 9, 10, 11, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 48, 80, 100, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 495, 503, 532, 559, 572, 579, 636, 648, 649, 681, 684, 701, 716, 731, 746, 772, 797, 807, 823, 859, 860, 864, 892, 894, 928, 930, 931, 932, 933, 935, 936, 937, 938, 946, 955, 956, 961, 967, 985, 994, 995, 1000, 1006, 1023, 1032, 1033, 1038, 1044, 1061, 1070, 1071, 1076, 1082, 1098, 1099, 1108, 1109, 1116, 1122, 1140, 1149, 1150, 1155, 1161, 1179, 1188, 1189, 1194, 1200, 1216, 1217, 1226, 1227, 1232, 1238, 1255, 1264, 1265, 1270, 1276, 1294, 1301, 1323, 1332, 1357, 1366, 1391, 1400, 1424, 1431, 1453, 1462, 1485, 1492, 1513, 1520, 1541, 1548, 1570, 1579, 1603, 1610, 1632, 1641, 1665, 1672, 1710, 1714, 1716, 1718, 1728, 1734, 1736, 1748, 1749, 1761, 1762, 1764, 1766, 1768, 1771, 1773, 1775, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1823, 1916, 1917], "conn": [5, 6, 7, 9, 10, 15, 19, 23, 27, 28, 29, 30, 31, 33, 34, 40, 74, 101, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 462, 498, 526, 555, 574, 649, 807, 944, 948, 983, 987, 1022, 1025, 1060, 1063, 1098, 1101, 1138, 1142, 1177, 1181, 1216, 1219, 1254, 1257, 1296, 1326, 1360, 1394, 1426, 1456, 1487, 1515, 1543, 1573, 1605, 1635, 1667, 1712, 1715, 1718, 1738, 1750], "1200": [5, 34], "4": [5, 6, 7, 9, 10, 11, 15, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 649, 652, 921, 932, 935, 936, 937, 955, 967, 994, 1006, 1032, 1044, 1070, 1082, 1108, 1122, 1149, 1161, 1188, 1200, 1216, 1226, 1238, 1264, 1276, 1762, 1764, 1766, 1768, 1771, 1773, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1784], "coordination_numb": [5, 7, 15, 16, 19, 28, 30, 31, 33], "7": [5, 6, 7, 9, 10, 15, 19, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 660, 672, 673, 674, 675, 676, 677, 678, 681, 921, 956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265, 1714], "8": [5, 7, 9, 10, 15, 16, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 514, 731, 861, 881, 892, 930, 931], "9": [5, 6, 7, 8, 9, 10, 12, 15, 16, 19, 23, 27, 28, 29, 30, 31, 32, 33, 34, 37, 681, 684, 741, 749, 799, 832, 925, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1714], "11": [5, 7, 9, 10, 15, 19, 23, 27, 28, 29, 30, 31, 32, 33, 34, 681], "13": [5, 7, 9, 10, 15, 19, 24, 27, 28, 29, 30, 31, 33, 34], "14": [5, 7, 9, 10, 15, 19, 24, 27, 28, 29, 30, 31, 33, 34, 681, 983], "16": [5, 7, 9, 10, 15, 19, 24, 27, 28, 30, 31, 33, 34, 681], "17": [5, 7, 9, 10, 15, 19, 24, 27, 28, 30, 31, 33, 34, 681], "18": [5, 7, 9, 10, 15, 19, 24, 27, 28, 30, 31, 33, 34, 36, 864, 983], "xmin": [5, 7, 9, 10, 15, 19, 23, 27, 28, 29, 30, 31, 33, 817, 829, 923], "xmax": [5, 7, 9, 10, 15, 19, 23, 27, 28, 29, 30, 31, 33, 817, 829, 923], "ymin": [5, 7, 9, 15, 19, 23, 27, 29, 30, 31, 33], "ymax": [5, 7, 9, 15, 19, 23, 27, 29, 30, 31, 33], "surfac": [5, 7, 9, 12, 13, 15, 19, 23, 27, 28, 29, 31, 33, 34, 35, 660, 752, 753, 754, 755, 764, 795, 802, 803, 804, 805, 811, 865, 883, 884, 885, 908, 909, 923, 1060, 1254, 1710, 1728, 1729, 1743, 1747], "96": [5, 27, 34], "front": [5, 6, 7, 9, 15, 19, 23, 27, 29, 30, 31, 33, 984, 1139], "back": [5, 6, 7, 9, 15, 19, 23, 27, 28, 29, 30, 31, 33, 742, 744, 795, 818, 923, 984, 1139], "hist": [5, 9, 15, 30, 746, 748, 750, 797, 798, 800, 823, 828, 835], "ax1": 5, "ax2": 5, "subplot": [5, 6, 7, 8, 9, 15, 19, 29, 30, 31, 1916, 1917], "figsiz": [5, 7, 8, 12, 13, 19, 29, 30, 31, 625], "bin": [5, 9, 746, 748, 750, 797, 798, 800, 823, 828, 835], "edgecolor": [5, 9, 15, 19, 30], "set_titl": 5, "two": [5, 9, 11, 12, 15, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 37, 100, 516, 648, 649, 665, 695, 697, 741, 749, 799, 820, 832, 841, 846, 847, 921, 930, 931, 953, 956, 957, 967, 992, 995, 996, 1006, 1030, 1033, 1034, 1044, 1068, 1071, 1072, 1082, 1098, 1106, 1109, 1110, 1122, 1147, 1150, 1151, 1161, 1186, 1189, 1190, 1200, 1216, 1224, 1227, 1228, 1238, 1262, 1265, 1266, 1276, 1714, 1721, 1723, 1725, 1726, 1738, 1750, 1758, 1776, 1778, 1780, 1834, 1846, 1859, 1865, 1868, 1870, 1875], "approach": [5, 9, 18, 29, 30, 31, 34, 37, 742, 858, 908, 909, 924], "first": [5, 6, 7, 9, 10, 12, 13, 15, 17, 18, 19, 23, 24, 26, 28, 29, 30, 31, 32, 34, 35, 37, 56, 88, 116, 131, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 514, 540, 564, 587, 616, 631, 819, 865, 950, 971, 989, 1010, 1027, 1048, 1065, 1086, 1103, 1126, 1144, 1165, 1183, 1204, 1221, 1242, 1259, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1714, 1723, 1746, 1793, 1805, 1819, 1829, 1832, 1841, 1844, 1854, 1857, 1892], "most": [5, 7, 10, 11, 16, 19, 26, 29, 32, 33, 34, 197, 854, 909, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "simpl": [5, 7, 9, 24, 26, 27, 28, 29, 31, 32, 33, 944, 983, 1022, 1177, 1811, 1823], "straight": [5, 806, 807], "forward": 5, "modul": [5, 10, 11, 23, 27, 28, 30, 33, 38, 349, 383, 416, 449, 493, 543, 553, 641, 645, 669, 670, 671, 679, 680, 682, 683, 686, 689, 690, 704, 719, 734, 740, 743, 748, 750, 751, 756, 762, 765, 767, 771, 773, 787, 791, 794, 798, 800, 801, 806, 808, 815, 828, 835, 836, 853, 855, 856, 862, 866, 871, 874, 880, 882, 886, 893, 897, 904, 905, 907, 910, 915, 918, 922, 926, 929, 940, 943, 1292, 1692, 1709, 1727, 1754, 1757, 1758, 1913], "second": [5, 7, 9, 19, 23, 24, 26, 32, 651, 1714, 1723, 1751, 1778, 1780], "latter": [5, 746, 797, 823, 930, 931, 1721], "recommend": [5, 30, 31, 37, 648, 1745], "let": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 651], "fetch": [5, 9, 17, 28, 30, 32, 33, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 854, 875, 961, 1000, 1038, 1076, 1116, 1155, 1194, 1232, 1270, 1301, 1331, 1332, 1333, 1365, 1366, 1367, 1399, 1400, 1401, 1431, 1461, 1462, 1463, 1492, 1520, 1548, 1578, 1579, 1580, 1610, 1640, 1641, 1642, 1672], "statist": [5, 9, 16, 30], "case": [5, 9, 10, 11, 18, 21, 24, 29, 31, 32, 33, 34, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 491, 523, 543, 550, 569, 597, 618, 624, 633, 746, 747, 797, 823, 854, 930, 931, 981, 1020, 1058, 1096, 1136, 1175, 1214, 1252, 1290, 1319, 1352, 1386, 1420, 1449, 1482, 1510, 1538, 1566, 1599, 1628, 1661, 1690, 1714, 1721, 1745, 1795, 1809, 1821, 1835, 1896], "weibull_min": [5, 9, 30, 746, 750, 797, 800, 823, 835], "genert": 5, "number": [5, 9, 14, 16, 19, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 53, 54, 73, 85, 86, 99, 112, 113, 120, 131, 145, 146, 164, 178, 179, 197, 210, 211, 218, 229, 243, 244, 262, 276, 277, 295, 309, 310, 328, 342, 343, 362, 376, 377, 395, 409, 410, 428, 442, 443, 461, 475, 476, 494, 508, 509, 525, 537, 538, 554, 571, 584, 585, 602, 603, 649, 714, 729, 741, 742, 744, 747, 748, 749, 750, 798, 799, 800, 815, 827, 828, 832, 835, 838, 839, 840, 841, 923, 930, 931, 944, 953, 967, 968, 969, 983, 992, 1006, 1007, 1008, 1022, 1030, 1044, 1045, 1046, 1060, 1068, 1082, 1083, 1084, 1098, 1106, 1122, 1123, 1124, 1138, 1147, 1161, 1162, 1163, 1177, 1186, 1200, 1201, 1202, 1216, 1224, 1238, 1239, 1240, 1254, 1262, 1276, 1277, 1278, 1293, 1306, 1307, 1321, 1338, 1339, 1355, 1372, 1373, 1389, 1406, 1407, 1423, 1436, 1437, 1451, 1468, 1469, 1484, 1497, 1498, 1512, 1525, 1526, 1540, 1553, 1554, 1568, 1585, 1586, 1602, 1615, 1616, 1630, 1647, 1648, 1664, 1677, 1678, 1699, 1712, 1715, 1718, 1719, 1720, 1722, 1729, 1738, 1746, 1750, 1752, 1753, 1756, 1758, 1780, 1783, 1827, 1839, 1852, 1899, 1914, 1915], "rv": [5, 9, 30], "arrai": [5, 10, 19, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 48, 49, 51, 57, 60, 61, 62, 68, 69, 70, 80, 81, 83, 89, 91, 92, 94, 95, 96, 107, 108, 110, 117, 120, 121, 123, 126, 127, 128, 140, 141, 143, 149, 152, 153, 154, 159, 160, 161, 173, 174, 176, 182, 185, 186, 187, 192, 193, 194, 198, 205, 206, 208, 215, 219, 221, 224, 225, 226, 238, 239, 241, 247, 250, 251, 252, 257, 258, 259, 271, 272, 274, 280, 283, 284, 285, 290, 291, 292, 304, 305, 307, 313, 316, 317, 318, 323, 324, 325, 337, 338, 340, 346, 349, 350, 351, 357, 358, 359, 371, 372, 374, 380, 383, 384, 385, 390, 391, 392, 404, 405, 407, 413, 416, 417, 418, 423, 424, 425, 437, 438, 440, 446, 449, 450, 451, 456, 457, 458, 470, 471, 473, 479, 482, 483, 484, 488, 489, 490, 495, 503, 504, 506, 512, 517, 520, 521, 522, 532, 533, 535, 541, 543, 544, 545, 547, 548, 549, 559, 560, 562, 567, 568, 572, 579, 580, 582, 588, 592, 594, 595, 596, 599, 604, 605, 606, 636, 644, 663, 667, 701, 716, 731, 741, 742, 745, 746, 747, 748, 749, 750, 772, 793, 796, 797, 798, 799, 800, 807, 815, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 839, 841, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 946, 950, 951, 953, 955, 956, 957, 961, 963, 965, 967, 972, 976, 978, 979, 980, 985, 989, 990, 992, 994, 995, 996, 1000, 1002, 1004, 1006, 1011, 1015, 1017, 1018, 1019, 1022, 1023, 1027, 1028, 1030, 1032, 1033, 1034, 1038, 1040, 1042, 1044, 1049, 1053, 1055, 1056, 1057, 1060, 1061, 1065, 1066, 1068, 1070, 1071, 1072, 1076, 1078, 1080, 1082, 1087, 1091, 1093, 1094, 1095, 1098, 1099, 1103, 1104, 1106, 1108, 1109, 1110, 1116, 1118, 1120, 1122, 1127, 1131, 1133, 1134, 1135, 1140, 1144, 1145, 1147, 1149, 1150, 1151, 1155, 1157, 1159, 1161, 1166, 1170, 1172, 1173, 1174, 1179, 1183, 1184, 1186, 1188, 1189, 1190, 1194, 1196, 1198, 1200, 1205, 1209, 1211, 1212, 1213, 1216, 1217, 1221, 1222, 1224, 1226, 1227, 1228, 1232, 1234, 1236, 1238, 1243, 1247, 1249, 1250, 1251, 1254, 1255, 1259, 1260, 1262, 1264, 1265, 1266, 1270, 1272, 1274, 1276, 1281, 1285, 1287, 1288, 1289, 1294, 1301, 1302, 1304, 1310, 1314, 1316, 1317, 1318, 1323, 1332, 1334, 1336, 1342, 1347, 1349, 1350, 1351, 1357, 1366, 1368, 1370, 1376, 1381, 1383, 1384, 1385, 1391, 1400, 1402, 1404, 1410, 1415, 1417, 1418, 1419, 1424, 1431, 1432, 1434, 1440, 1444, 1446, 1447, 1448, 1453, 1462, 1464, 1466, 1472, 1477, 1479, 1480, 1481, 1485, 1492, 1493, 1495, 1501, 1505, 1507, 1508, 1509, 1513, 1520, 1521, 1523, 1529, 1533, 1535, 1536, 1537, 1541, 1548, 1549, 1551, 1557, 1561, 1563, 1564, 1565, 1570, 1579, 1581, 1583, 1589, 1594, 1596, 1597, 1598, 1603, 1610, 1611, 1613, 1619, 1623, 1625, 1626, 1627, 1632, 1641, 1643, 1645, 1651, 1656, 1658, 1659, 1660, 1665, 1672, 1673, 1675, 1681, 1685, 1687, 1688, 1689, 1700, 1710, 1712, 1715, 1716, 1717, 1718, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1737, 1738, 1746, 1747, 1750, 1752, 1753, 1756, 1811, 1898, 1900, 1903, 1904, 1905, 1912, 1916, 1917, 1919], "put": [5, 16, 29, 30, 198, 665, 1748], "one": [5, 8, 9, 10, 16, 18, 19, 24, 26, 28, 29, 30, 31, 32, 33, 34, 45, 52, 53, 54, 57, 61, 68, 77, 84, 85, 86, 89, 91, 94, 104, 111, 112, 113, 117, 121, 126, 137, 144, 145, 146, 149, 153, 159, 170, 177, 178, 179, 182, 186, 192, 202, 209, 210, 211, 215, 219, 224, 235, 242, 243, 244, 247, 251, 257, 268, 275, 276, 277, 280, 284, 290, 301, 308, 309, 310, 313, 317, 323, 334, 341, 342, 343, 346, 350, 357, 368, 375, 376, 377, 380, 384, 390, 401, 408, 409, 410, 413, 417, 423, 434, 441, 442, 443, 446, 450, 456, 467, 474, 475, 476, 479, 483, 488, 500, 507, 508, 509, 512, 520, 529, 536, 537, 538, 541, 544, 547, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 624, 652, 665, 810, 847, 864, 944, 952, 953, 956, 957, 960, 962, 966, 967, 968, 969, 972, 978, 983, 991, 992, 995, 996, 999, 1001, 1005, 1006, 1007, 1008, 1011, 1017, 1022, 1029, 1030, 1033, 1034, 1037, 1039, 1043, 1044, 1045, 1046, 1049, 1055, 1060, 1067, 1068, 1071, 1072, 1075, 1077, 1081, 1082, 1083, 1084, 1087, 1093, 1098, 1105, 1106, 1109, 1110, 1115, 1117, 1121, 1122, 1123, 1124, 1127, 1133, 1138, 1146, 1147, 1150, 1151, 1154, 1156, 1160, 1161, 1162, 1163, 1166, 1172, 1177, 1185, 1186, 1189, 1190, 1193, 1195, 1199, 1200, 1201, 1202, 1205, 1211, 1216, 1223, 1224, 1227, 1228, 1231, 1233, 1237, 1238, 1239, 1240, 1243, 1249, 1254, 1261, 1262, 1265, 1266, 1269, 1271, 1275, 1276, 1277, 1278, 1281, 1287, 1298, 1305, 1306, 1307, 1310, 1316, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1396, 1405, 1406, 1407, 1410, 1417, 1428, 1435, 1436, 1437, 1440, 1446, 1458, 1467, 1468, 1469, 1472, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1512, 1517, 1524, 1525, 1526, 1529, 1535, 1545, 1552, 1553, 1554, 1557, 1563, 1575, 1584, 1585, 1586, 1589, 1596, 1607, 1614, 1615, 1616, 1619, 1625, 1637, 1646, 1647, 1648, 1651, 1658, 1669, 1676, 1677, 1678, 1681, 1687, 1712, 1715, 1721, 1725, 1726, 1728, 1744, 1749, 1750, 1751, 1785, 1835, 1875, 1879, 1883, 1890, 1894, 1916], "c": [5, 6, 7, 9, 26, 27, 29, 30, 34, 37, 746, 750, 797, 800, 819, 823, 835, 864, 928, 930, 931, 933, 1748, 1749, 1778, 1780, 1888, 1893], "loc": [5, 9, 15, 30, 31, 746, 748, 750, 797, 798, 800, 823, 828, 835], "random_st": 5, "none": [5, 10, 16, 28, 30, 31, 33, 40, 45, 46, 47, 51, 52, 53, 54, 57, 60, 61, 62, 64, 66, 67, 68, 70, 71, 74, 77, 78, 79, 83, 84, 85, 86, 89, 91, 92, 93, 94, 96, 97, 101, 104, 105, 106, 110, 111, 112, 113, 114, 117, 121, 123, 125, 126, 128, 129, 132, 137, 138, 139, 143, 144, 145, 146, 149, 152, 153, 154, 155, 157, 158, 159, 161, 162, 165, 170, 171, 172, 176, 177, 178, 179, 182, 185, 186, 187, 188, 190, 191, 192, 194, 195, 199, 202, 203, 204, 208, 209, 210, 211, 215, 219, 220, 221, 222, 223, 224, 226, 227, 230, 235, 236, 237, 241, 242, 243, 244, 247, 250, 251, 252, 253, 255, 256, 257, 259, 260, 263, 268, 269, 270, 274, 275, 276, 277, 280, 283, 284, 285, 286, 288, 289, 290, 292, 293, 296, 301, 302, 303, 307, 308, 309, 310, 313, 316, 317, 318, 319, 321, 322, 323, 325, 326, 329, 334, 335, 336, 340, 341, 342, 343, 346, 349, 350, 351, 353, 355, 356, 357, 359, 360, 363, 368, 369, 370, 374, 375, 376, 377, 380, 383, 384, 385, 386, 388, 389, 390, 392, 393, 396, 401, 402, 403, 407, 408, 409, 410, 413, 416, 417, 418, 419, 421, 422, 423, 425, 426, 429, 434, 435, 436, 440, 441, 442, 443, 446, 449, 450, 451, 452, 454, 455, 456, 458, 459, 462, 467, 468, 469, 473, 474, 475, 476, 479, 482, 483, 484, 485, 486, 487, 488, 490, 491, 498, 500, 501, 502, 506, 507, 508, 509, 512, 514, 515, 517, 519, 520, 522, 523, 526, 529, 530, 531, 535, 536, 537, 538, 541, 543, 544, 545, 546, 547, 549, 550, 555, 557, 558, 562, 566, 568, 569, 574, 576, 577, 578, 582, 583, 584, 585, 588, 590, 591, 592, 593, 594, 596, 597, 600, 601, 602, 603, 604, 605, 606, 609, 611, 612, 617, 618, 621, 625, 626, 627, 632, 633, 638, 639, 643, 653, 659, 660, 663, 664, 667, 668, 672, 673, 674, 675, 676, 677, 678, 741, 742, 749, 793, 799, 828, 832, 839, 923, 924, 925, 948, 950, 951, 952, 954, 958, 959, 965, 966, 968, 969, 972, 974, 975, 976, 977, 978, 980, 981, 984, 987, 989, 990, 991, 993, 997, 998, 1004, 1005, 1007, 1008, 1011, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1025, 1027, 1028, 1029, 1031, 1035, 1036, 1042, 1043, 1045, 1046, 1049, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1063, 1065, 1066, 1067, 1069, 1073, 1074, 1080, 1081, 1083, 1084, 1087, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1101, 1103, 1104, 1105, 1107, 1111, 1112, 1113, 1114, 1120, 1121, 1123, 1124, 1127, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1139, 1142, 1144, 1145, 1146, 1148, 1152, 1153, 1159, 1160, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1174, 1175, 1181, 1183, 1184, 1185, 1187, 1191, 1192, 1198, 1199, 1201, 1202, 1205, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1219, 1221, 1222, 1223, 1225, 1229, 1230, 1236, 1237, 1239, 1240, 1243, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1257, 1259, 1260, 1261, 1263, 1267, 1268, 1274, 1275, 1277, 1278, 1281, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1296, 1298, 1299, 1300, 1304, 1305, 1306, 1307, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1326, 1328, 1329, 1330, 1336, 1337, 1338, 1339, 1342, 1346, 1347, 1348, 1349, 1351, 1352, 1354, 1360, 1362, 1363, 1364, 1370, 1371, 1372, 1373, 1376, 1380, 1381, 1382, 1383, 1385, 1386, 1388, 1394, 1396, 1397, 1398, 1404, 1405, 1406, 1407, 1410, 1414, 1415, 1416, 1417, 1419, 1420, 1422, 1426, 1428, 1429, 1430, 1434, 1435, 1436, 1437, 1440, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1456, 1458, 1459, 1460, 1466, 1467, 1468, 1469, 1472, 1476, 1477, 1478, 1479, 1481, 1482, 1487, 1489, 1490, 1491, 1495, 1496, 1497, 1498, 1501, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1515, 1517, 1518, 1519, 1523, 1524, 1525, 1526, 1529, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1543, 1545, 1546, 1547, 1551, 1552, 1553, 1554, 1557, 1559, 1560, 1561, 1562, 1563, 1565, 1566, 1573, 1575, 1576, 1577, 1583, 1584, 1585, 1586, 1589, 1593, 1594, 1595, 1596, 1598, 1599, 1601, 1605, 1607, 1608, 1609, 1613, 1614, 1615, 1616, 1619, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1635, 1637, 1638, 1639, 1645, 1646, 1647, 1648, 1651, 1655, 1656, 1657, 1658, 1660, 1661, 1663, 1667, 1669, 1670, 1671, 1675, 1676, 1677, 1678, 1681, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1700, 1704, 1710, 1715, 1727, 1728, 1730, 1731, 1735, 1751, 1763, 1769, 1770, 1772, 1774, 1776, 1786, 1788, 1789, 1794, 1795, 1798, 1800, 1801, 1806, 1807, 1809, 1812, 1814, 1815, 1820, 1821, 1834, 1838, 1846, 1859, 1880, 1883, 1884, 1885, 1890, 1893, 1894, 1895, 1896, 1915, 1916, 1917, 1918, 1920, 1921], "would": [5, 6, 9, 11, 18, 19, 21, 23, 26, 27, 29, 31, 32, 742, 847, 928, 1751, 1915], "overwrit": [5, 26, 31, 32, 34, 61, 62, 91, 92, 121, 122, 123, 124, 153, 154, 186, 187, 219, 220, 221, 222, 251, 252, 284, 285, 317, 318, 350, 351, 384, 385, 417, 418, 450, 451, 483, 484, 517, 544, 545, 592, 605, 854, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685], "exist": [5, 11, 12, 13, 15, 23, 29, 30, 31, 32, 33, 35, 57, 61, 62, 65, 68, 89, 91, 92, 94, 117, 121, 122, 123, 124, 126, 149, 153, 154, 156, 159, 182, 186, 187, 189, 192, 215, 219, 220, 221, 222, 224, 247, 251, 252, 254, 257, 280, 284, 285, 287, 290, 313, 317, 318, 320, 323, 346, 350, 351, 354, 357, 380, 384, 385, 387, 390, 413, 417, 418, 420, 423, 446, 450, 451, 453, 456, 479, 483, 484, 488, 494, 495, 512, 517, 520, 541, 544, 545, 547, 572, 588, 592, 594, 604, 605, 606, 636, 833, 848, 854, 946, 972, 976, 978, 985, 1011, 1015, 1017, 1023, 1049, 1053, 1055, 1061, 1087, 1091, 1093, 1099, 1127, 1131, 1133, 1140, 1166, 1170, 1172, 1179, 1205, 1209, 1211, 1217, 1243, 1247, 1249, 1255, 1281, 1285, 1287, 1294, 1310, 1314, 1316, 1323, 1342, 1347, 1349, 1357, 1376, 1381, 1383, 1391, 1410, 1415, 1417, 1424, 1440, 1444, 1446, 1453, 1472, 1477, 1479, 1485, 1501, 1505, 1507, 1513, 1529, 1533, 1535, 1541, 1557, 1561, 1563, 1570, 1589, 1594, 1596, 1603, 1619, 1623, 1625, 1632, 1651, 1656, 1658, 1665, 1681, 1685, 1687, 1716, 1718, 1738, 1883, 1888], "now": [5, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 746, 797, 823], "advantag": [5, 9, 31, 983], "regener": [5, 9, 16, 22, 23, 30, 31, 32, 495, 496, 514, 515, 572, 573, 591, 636, 637, 639, 824, 946, 947, 975, 985, 986, 1014, 1023, 1024, 1052, 1061, 1062, 1090, 1099, 1100, 1130, 1140, 1141, 1169, 1179, 1180, 1208, 1217, 1218, 1246, 1255, 1256, 1284, 1294, 1295, 1313, 1323, 1324, 1346, 1357, 1358, 1380, 1391, 1392, 1414, 1424, 1425, 1443, 1453, 1454, 1476, 1485, 1486, 1504, 1513, 1514, 1532, 1541, 1542, 1560, 1570, 1571, 1593, 1603, 1604, 1622, 1632, 1633, 1655, 1665, 1666, 1684], "programmat": [5, 17], "b": [5, 9, 19, 21, 23, 26, 34, 36, 39, 60, 131, 152, 164, 185, 229, 250, 262, 283, 295, 316, 328, 362, 395, 428, 461, 482, 648, 684, 763, 819, 826, 865, 921, 933, 939, 956, 957, 995, 996, 1033, 1034, 1071, 1072, 1109, 1110, 1150, 1151, 1189, 1190, 1227, 1228, 1265, 1266, 1694, 1696, 1698, 1699, 1700, 1702, 1704, 1706, 1708, 1725, 1748, 1749, 1778, 1916, 1917, 1919, 1920], "save": [5, 6, 17, 18, 31, 35, 651, 653, 659, 660, 662, 666, 667, 668, 960, 962, 999, 1001, 1037, 1039, 1075, 1077, 1115, 1117, 1154, 1156, 1193, 1195, 1216, 1231, 1233, 1269, 1271, 1722, 1769, 1774, 1881, 1889, 1893, 1894], "file": [5, 14, 27, 35, 37, 646, 647, 648, 650, 651, 652, 653, 654, 655, 659, 660, 661, 662, 664, 665, 666, 667, 668, 1711, 1879, 1888, 1893, 1894], "retain": [5, 34], "chang": [5, 9, 15, 24, 26, 28, 30, 32, 33, 35, 37, 63, 352, 493, 1881, 1915], "paramet": [5, 7, 9, 12, 13, 16, 22, 24, 28, 30, 31, 32, 35, 40, 41, 45, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74, 75, 77, 80, 81, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 107, 108, 110, 111, 112, 113, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 137, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 165, 166, 170, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 199, 200, 202, 205, 206, 208, 209, 210, 211, 215, 216, 219, 220, 221, 222, 224, 225, 226, 230, 231, 235, 238, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 262, 263, 264, 268, 271, 272, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 296, 297, 301, 304, 305, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 329, 330, 334, 337, 338, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 363, 364, 368, 371, 372, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 396, 397, 401, 404, 405, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 430, 434, 437, 438, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 461, 462, 463, 467, 470, 471, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 494, 495, 496, 497, 498, 500, 503, 504, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 526, 527, 529, 532, 533, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 552, 554, 555, 559, 560, 562, 565, 567, 568, 572, 573, 574, 576, 579, 580, 582, 583, 584, 585, 588, 589, 590, 591, 592, 594, 595, 596, 600, 601, 602, 603, 604, 605, 606, 620, 623, 625, 636, 637, 638, 639, 644, 647, 648, 649, 651, 652, 653, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 741, 742, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 761, 763, 764, 766, 768, 769, 770, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 793, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 807, 809, 810, 811, 812, 813, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 839, 841, 846, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 917, 919, 920, 921, 923, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 960, 961, 962, 963, 965, 966, 967, 968, 969, 972, 973, 974, 975, 976, 978, 979, 980, 983, 984, 985, 986, 987, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1177, 1178, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1293, 1294, 1295, 1296, 1298, 1301, 1302, 1304, 1305, 1306, 1307, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1322, 1323, 1324, 1326, 1328, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1354, 1356, 1357, 1358, 1360, 1362, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1388, 1390, 1391, 1392, 1394, 1396, 1399, 1400, 1401, 1402, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1428, 1431, 1432, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1451, 1452, 1453, 1454, 1456, 1458, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1484, 1485, 1486, 1487, 1489, 1492, 1493, 1495, 1496, 1497, 1498, 1501, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1512, 1513, 1514, 1515, 1517, 1520, 1521, 1523, 1524, 1525, 1526, 1529, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1541, 1542, 1543, 1545, 1548, 1549, 1551, 1552, 1553, 1554, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1569, 1570, 1571, 1573, 1575, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1601, 1603, 1604, 1605, 1607, 1610, 1611, 1613, 1614, 1615, 1616, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1631, 1632, 1633, 1635, 1637, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1663, 1664, 1665, 1666, 1667, 1669, 1672, 1673, 1675, 1676, 1677, 1678, 1681, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1700, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1761, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1778, 1780, 1783, 1838, 1881, 1883, 1888, 1889, 1890, 1893, 1894, 1898, 1900, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1912, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "parametr": 5, "studi": [5, 9, 29, 34], "easili": [5, 7, 10, 17, 30, 34, 37, 197], "hard": [5, 9, 18], "code": [5, 13, 14, 15, 17, 18, 23, 26, 28, 30, 34, 35, 652, 746, 748, 750, 797, 798, 800, 823, 828, 835, 854], "previous": [5, 31, 37], "pore_s": [5, 9, 15, 30, 31, 746, 797, 823, 1921], "propnam": [5, 6, 7, 9, 10, 11, 12, 13, 15, 19, 22, 23, 28, 30, 31, 32, 33, 34, 48, 49, 65, 80, 81, 107, 108, 140, 141, 156, 173, 174, 189, 205, 206, 238, 239, 254, 271, 272, 287, 304, 305, 320, 337, 338, 354, 371, 372, 387, 404, 405, 420, 437, 438, 453, 470, 471, 495, 503, 504, 514, 515, 532, 533, 559, 560, 572, 579, 580, 590, 591, 607, 636, 638, 639, 663, 746, 797, 823, 824, 933, 946, 961, 963, 974, 975, 985, 1000, 1002, 1013, 1014, 1023, 1038, 1040, 1051, 1052, 1061, 1076, 1078, 1089, 1090, 1099, 1116, 1118, 1129, 1130, 1140, 1155, 1157, 1168, 1169, 1179, 1194, 1196, 1207, 1208, 1217, 1232, 1234, 1245, 1246, 1255, 1270, 1272, 1283, 1284, 1294, 1301, 1302, 1312, 1313, 1323, 1331, 1332, 1333, 1334, 1344, 1346, 1357, 1365, 1366, 1367, 1368, 1378, 1380, 1391, 1399, 1400, 1401, 1402, 1412, 1414, 1424, 1431, 1432, 1442, 1443, 1453, 1461, 1462, 1463, 1464, 1474, 1476, 1485, 1492, 1493, 1503, 1504, 1513, 1520, 1521, 1531, 1532, 1541, 1548, 1549, 1559, 1560, 1570, 1578, 1579, 1580, 1581, 1591, 1593, 1603, 1610, 1611, 1621, 1622, 1632, 1640, 1641, 1642, 1643, 1653, 1655, 1665, 1672, 1673, 1683, 1684, 1908], "revers": [5, 9, 198, 1834, 1846, 1859], "look": [5, 7, 9, 18, 19, 23, 24, 26, 29, 30, 31, 32, 33, 37, 197, 747, 854, 872, 894, 983, 1716, 1774, 1785, 1888, 1893], "up": [5, 7, 9, 11, 18, 24, 28, 29, 30, 32, 34, 37, 197, 494, 854, 872, 879, 894], "random": [5, 6, 7, 8, 12, 13, 16, 21, 22, 23, 28, 30, 31, 32, 34, 35, 672, 673, 674, 675, 676, 677, 678, 742, 746, 748, 750, 797, 798, 800, 812, 813, 815, 823, 824, 828, 835, 908, 933, 950, 951, 983, 989, 990, 1027, 1028, 1060, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1254, 1259, 1260, 1743, 1746, 1780], "correspond": [5, 8, 19, 22, 28, 29, 30, 31, 32, 33, 34, 495, 572, 620, 636, 652, 660, 663, 750, 800, 807, 827, 830, 835, 846, 854, 858, 879, 946, 950, 951, 954, 956, 957, 985, 989, 990, 993, 995, 996, 1023, 1027, 1028, 1031, 1033, 1034, 1061, 1065, 1066, 1069, 1071, 1072, 1098, 1099, 1103, 1104, 1107, 1109, 1110, 1140, 1144, 1145, 1148, 1150, 1151, 1179, 1183, 1184, 1187, 1189, 1190, 1217, 1221, 1222, 1225, 1227, 1228, 1255, 1259, 1260, 1263, 1265, 1266, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1714, 1720, 1722, 1747, 1756, 1915, 1918], "determin": [5, 7, 8, 9, 21, 23, 29, 33, 34, 660, 854, 923, 927, 930, 931, 983, 1716, 1730, 1731, 1732, 1733, 1736, 1738, 1906], "cumul": [5, 9, 29, 30, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481], "probabl": [5, 9, 18, 29, 30, 32, 34], "allow": [5, 26, 27, 30, 32, 649, 660, 742, 824, 854, 1355, 1389, 1512, 1728, 1879], "user": [5, 6, 10, 12, 13, 14, 16, 17, 26, 27, 28, 31, 32, 35, 493, 651, 667, 824, 944, 983, 1060, 1098, 1138, 1177, 1216, 1254, 1484, 1728], "instanc": [5, 9, 10, 17, 18, 26, 27, 28, 29, 30, 31, 32, 495, 572, 636, 854, 945, 946, 984, 985, 1023, 1061, 1099, 1139, 1140, 1178, 1179, 1216, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1512, 1513, 1541, 1568, 1570, 1603, 1630, 1632, 1665, 1700, 1710, 1728, 1745, 1835, 1847, 1879, 1916], "spatial": [5, 9, 742, 841, 846, 955, 994, 1032, 1070, 1108, 1149, 1188, 1216, 1226, 1264, 1729, 1754, 1757], "correl": [5, 9, 740, 742, 826, 864, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 895, 898, 899, 900, 902, 903], "origin": [5, 6, 10, 11, 23, 34, 35, 927, 1737, 1747, 1765, 1767, 1778, 1780, 1838], "make": [5, 6, 7, 9, 16, 17, 18, 19, 23, 26, 27, 29, 30, 31, 32, 33, 52, 53, 54, 57, 84, 85, 86, 89, 111, 112, 113, 117, 144, 145, 146, 149, 177, 178, 179, 182, 209, 210, 211, 215, 242, 243, 244, 247, 275, 276, 277, 280, 308, 309, 310, 313, 341, 342, 343, 346, 375, 376, 377, 380, 408, 409, 410, 413, 441, 442, 443, 446, 474, 475, 476, 479, 494, 507, 508, 509, 512, 536, 537, 538, 541, 583, 584, 585, 588, 601, 602, 603, 604, 847, 921, 923, 933, 966, 968, 969, 972, 1005, 1007, 1008, 1011, 1043, 1045, 1046, 1049, 1081, 1083, 1084, 1087, 1121, 1123, 1124, 1127, 1160, 1162, 1163, 1166, 1199, 1201, 1202, 1205, 1237, 1239, 1240, 1243, 1254, 1275, 1277, 1278, 1281, 1305, 1306, 1307, 1310, 1337, 1338, 1339, 1342, 1371, 1372, 1373, 1376, 1405, 1406, 1407, 1410, 1435, 1436, 1437, 1440, 1467, 1468, 1469, 1472, 1496, 1497, 1498, 1501, 1524, 1525, 1526, 1529, 1552, 1553, 1554, 1557, 1584, 1585, 1586, 1589, 1614, 1615, 1616, 1619, 1646, 1647, 1648, 1651, 1676, 1677, 1678, 1681, 1711, 1714, 1744, 1751, 1752, 1753, 1883, 1916], "sure": [5, 7, 21, 30, 37, 1714], "afterward": 5, "pore_se": [5, 9, 16, 30, 31, 746, 797, 823], "num_rang": [5, 9, 16, 30, 31, 672, 673, 674, 675, 676, 677, 678, 741, 749, 793, 799, 832], "99": [5, 10, 27, 30, 34], "ve": [5, 19, 37], "settl": 5, "should": [5, 7, 9, 10, 11, 16, 19, 23, 26, 28, 29, 30, 33, 34, 37, 52, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 84, 85, 86, 89, 90, 91, 92, 94, 111, 112, 113, 117, 118, 121, 122, 123, 124, 126, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 159, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 209, 210, 211, 215, 216, 219, 220, 221, 224, 242, 243, 244, 247, 248, 249, 251, 252, 253, 254, 255, 257, 275, 276, 277, 280, 281, 282, 284, 285, 286, 287, 288, 290, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 323, 341, 342, 343, 346, 347, 348, 350, 351, 352, 353, 354, 355, 357, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 388, 390, 408, 409, 410, 413, 414, 415, 417, 418, 419, 420, 421, 423, 441, 442, 443, 446, 447, 448, 450, 451, 452, 453, 454, 456, 474, 475, 476, 479, 480, 481, 483, 484, 485, 486, 488, 495, 496, 507, 508, 509, 512, 513, 515, 517, 520, 536, 537, 538, 541, 542, 544, 545, 547, 565, 572, 573, 583, 584, 585, 588, 589, 591, 592, 594, 601, 602, 603, 604, 605, 606, 620, 624, 636, 637, 639, 648, 649, 661, 663, 691, 696, 699, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 717, 718, 725, 728, 732, 733, 735, 739, 742, 746, 797, 812, 813, 823, 833, 834, 847, 854, 927, 930, 931, 946, 947, 955, 966, 968, 969, 972, 973, 975, 976, 978, 984, 985, 986, 994, 1005, 1007, 1008, 1011, 1012, 1014, 1015, 1017, 1023, 1024, 1032, 1043, 1045, 1046, 1049, 1050, 1052, 1053, 1055, 1060, 1061, 1062, 1070, 1081, 1083, 1084, 1087, 1088, 1090, 1091, 1093, 1098, 1099, 1100, 1108, 1111, 1112, 1121, 1123, 1124, 1127, 1128, 1130, 1131, 1133, 1139, 1140, 1141, 1149, 1160, 1162, 1163, 1166, 1167, 1169, 1170, 1172, 1179, 1180, 1188, 1199, 1201, 1202, 1205, 1206, 1208, 1209, 1211, 1217, 1218, 1226, 1237, 1239, 1240, 1243, 1244, 1246, 1247, 1249, 1254, 1255, 1256, 1264, 1275, 1277, 1278, 1281, 1282, 1284, 1285, 1287, 1294, 1295, 1305, 1306, 1307, 1310, 1311, 1313, 1314, 1316, 1323, 1324, 1337, 1338, 1339, 1342, 1343, 1346, 1347, 1349, 1357, 1358, 1371, 1372, 1373, 1376, 1377, 1380, 1381, 1383, 1391, 1392, 1405, 1406, 1407, 1410, 1411, 1414, 1415, 1417, 1424, 1425, 1435, 1436, 1437, 1440, 1441, 1443, 1444, 1446, 1453, 1454, 1467, 1468, 1469, 1472, 1473, 1476, 1477, 1479, 1485, 1486, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1507, 1513, 1514, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1541, 1542, 1552, 1553, 1554, 1557, 1558, 1560, 1561, 1563, 1570, 1571, 1584, 1585, 1586, 1589, 1590, 1593, 1594, 1596, 1603, 1604, 1614, 1615, 1616, 1619, 1620, 1622, 1623, 1625, 1632, 1633, 1646, 1647, 1648, 1651, 1652, 1655, 1656, 1658, 1665, 1666, 1676, 1677, 1678, 1681, 1682, 1684, 1685, 1687, 1710, 1711, 1714, 1718, 1722, 1729, 1737, 1744, 1745, 1747, 1749, 1755, 1783, 1899, 1917, 1919, 1920], "alwai": [5, 10, 28, 30, 34, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 1748, 1749], "less": [5, 11, 28, 30, 813, 1915], "than": [5, 6, 9, 19, 24, 27, 28, 30, 31, 32, 34, 45, 52, 53, 54, 57, 68, 77, 84, 85, 86, 89, 94, 100, 104, 111, 112, 113, 117, 126, 137, 144, 145, 146, 149, 159, 170, 177, 178, 179, 182, 192, 202, 209, 210, 211, 215, 224, 235, 242, 243, 244, 247, 257, 268, 275, 276, 277, 280, 290, 301, 308, 309, 310, 313, 323, 334, 341, 342, 343, 346, 357, 368, 375, 376, 377, 380, 390, 401, 408, 409, 410, 413, 423, 434, 441, 442, 443, 446, 456, 467, 474, 475, 476, 479, 488, 500, 507, 508, 509, 512, 514, 520, 529, 536, 537, 538, 541, 547, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 665, 858, 861, 885, 903, 952, 956, 960, 962, 966, 968, 969, 972, 978, 991, 995, 999, 1001, 1005, 1007, 1008, 1011, 1017, 1029, 1033, 1037, 1039, 1043, 1045, 1046, 1049, 1055, 1067, 1071, 1075, 1077, 1081, 1083, 1084, 1087, 1093, 1105, 1109, 1115, 1117, 1121, 1123, 1124, 1127, 1133, 1146, 1150, 1154, 1156, 1160, 1162, 1163, 1166, 1172, 1185, 1189, 1193, 1195, 1199, 1201, 1202, 1205, 1211, 1223, 1227, 1231, 1233, 1237, 1239, 1240, 1243, 1249, 1261, 1265, 1269, 1271, 1275, 1277, 1278, 1281, 1287, 1298, 1305, 1306, 1307, 1310, 1316, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1396, 1405, 1406, 1407, 1410, 1417, 1428, 1435, 1436, 1437, 1440, 1446, 1458, 1467, 1468, 1469, 1472, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1545, 1552, 1553, 1554, 1557, 1563, 1575, 1584, 1585, 1586, 1589, 1596, 1607, 1614, 1615, 1616, 1619, 1625, 1637, 1646, 1647, 1648, 1651, 1658, 1669, 1676, 1677, 1678, 1681, 1687, 1721, 1725, 1726], "equal": [5, 6, 23, 26, 28, 818, 925, 930, 931, 983, 1738, 1834, 1846, 1859], "thei": [5, 9, 10, 11, 12, 13, 14, 17, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 100, 624, 648, 667, 742, 747, 752, 753, 754, 755, 854, 930, 931, 933, 944, 945, 953, 955, 957, 983, 984, 992, 994, 996, 1030, 1032, 1034, 1068, 1070, 1072, 1098, 1106, 1108, 1110, 1139, 1147, 1149, 1151, 1177, 1178, 1186, 1188, 1190, 1216, 1224, 1226, 1228, 1254, 1262, 1264, 1266, 1325, 1359, 1393, 1455, 1484, 1512, 1572, 1634, 1712, 1738, 1743, 1745, 1749, 1750, 1838, 1847, 1916], "connect": [5, 9, 19, 23, 24, 27, 28, 30, 33, 34, 35, 100, 649, 806, 807, 812, 813, 844, 845, 847, 849, 850, 852, 923, 925, 944, 950, 951, 953, 954, 955, 983, 989, 990, 992, 993, 994, 1022, 1027, 1028, 1030, 1031, 1032, 1060, 1065, 1066, 1068, 1069, 1070, 1098, 1103, 1104, 1106, 1107, 1108, 1112, 1138, 1144, 1145, 1147, 1148, 1149, 1177, 1183, 1184, 1186, 1187, 1188, 1216, 1221, 1222, 1224, 1225, 1226, 1254, 1259, 1260, 1262, 1263, 1264, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1735, 1738, 1744, 1745, 1746, 1750, 1751, 1756, 1916, 1917], "otherwis": [5, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 457, 489, 521, 548, 567, 595, 615, 630, 665, 876, 901, 955, 967, 979, 994, 1006, 1018, 1032, 1044, 1056, 1070, 1082, 1094, 1108, 1122, 1134, 1149, 1161, 1173, 1188, 1200, 1212, 1226, 1238, 1250, 1264, 1276, 1288, 1317, 1333, 1350, 1367, 1384, 1401, 1418, 1447, 1463, 1480, 1508, 1536, 1564, 1580, 1597, 1626, 1642, 1659, 1688, 1738, 1770, 1772, 1776, 1792, 1804, 1811, 1818, 1891, 1898, 1906, 1916, 1917], "re": [5, 9, 16, 18, 19, 28, 30, 32, 37, 119, 514, 741, 749, 799, 829, 832, 854], "realli": [5, 9, 10, 26, 28, 29, 30, 31, 34], "break": [5, 18, 28, 34], "happen": [5, 9, 10, 16, 30, 31, 32, 33, 812, 813], "d": [5, 7, 21, 24, 26, 28, 29, 32, 44, 50, 71, 72, 76, 82, 97, 98, 103, 109, 129, 130, 136, 142, 162, 163, 169, 175, 195, 196, 201, 207, 227, 228, 234, 240, 260, 261, 267, 273, 293, 294, 300, 306, 326, 327, 333, 339, 360, 361, 367, 373, 393, 394, 400, 406, 426, 427, 433, 439, 459, 460, 466, 472, 491, 492, 499, 505, 523, 524, 528, 534, 550, 551, 556, 561, 569, 570, 575, 581, 597, 598, 609, 610, 613, 614, 618, 619, 621, 622, 628, 629, 633, 634, 648, 864, 892, 921, 949, 964, 981, 982, 988, 1003, 1020, 1021, 1026, 1041, 1058, 1059, 1060, 1064, 1079, 1096, 1097, 1102, 1119, 1136, 1137, 1143, 1158, 1175, 1176, 1182, 1197, 1214, 1215, 1220, 1235, 1252, 1253, 1254, 1258, 1273, 1290, 1291, 1297, 1303, 1319, 1320, 1327, 1335, 1352, 1353, 1361, 1369, 1386, 1387, 1395, 1403, 1420, 1421, 1427, 1433, 1449, 1450, 1457, 1465, 1482, 1483, 1488, 1494, 1510, 1511, 1516, 1522, 1538, 1539, 1544, 1550, 1566, 1567, 1574, 1582, 1599, 1600, 1606, 1612, 1628, 1629, 1636, 1644, 1661, 1662, 1668, 1674, 1690, 1691, 1737, 1778, 1780, 1786, 1787, 1790, 1791, 1795, 1796, 1798, 1799, 1802, 1803, 1809, 1810, 1811, 1812, 1813, 1816, 1817, 1821, 1822, 1880, 1886, 1887, 1896, 1897, 1900, 1912], "check": [5, 10, 26, 28, 33, 34, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 457, 489, 521, 548, 567, 595, 854, 979, 1018, 1056, 1094, 1134, 1173, 1212, 1250, 1288, 1317, 1325, 1350, 1359, 1384, 1393, 1418, 1447, 1455, 1480, 1508, 1536, 1564, 1572, 1597, 1626, 1634, 1659, 1688, 1728, 1735, 1736, 1739, 1785, 1898, 1899, 1906, 1908, 1916, 1917], "consist": [5, 11, 24, 28, 33, 494, 648, 652, 716, 731, 1451, 1847], "result": [5, 6, 9, 10, 11, 12, 19, 21, 22, 23, 24, 28, 30, 31, 32, 33, 34, 35, 37, 52, 57, 61, 65, 84, 89, 91, 111, 117, 119, 121, 144, 149, 153, 156, 177, 182, 186, 189, 209, 215, 219, 220, 222, 242, 247, 251, 254, 275, 280, 284, 287, 308, 313, 317, 320, 341, 346, 350, 354, 375, 380, 384, 387, 408, 413, 417, 420, 441, 446, 450, 453, 474, 479, 483, 495, 507, 512, 515, 536, 541, 544, 572, 583, 588, 591, 601, 604, 636, 639, 660, 661, 763, 793, 796, 819, 821, 824, 946, 953, 956, 957, 966, 972, 975, 983, 985, 992, 995, 996, 1005, 1011, 1014, 1023, 1030, 1033, 1034, 1043, 1049, 1052, 1060, 1061, 1068, 1071, 1072, 1081, 1087, 1090, 1098, 1099, 1106, 1109, 1110, 1121, 1127, 1130, 1140, 1147, 1150, 1151, 1160, 1166, 1169, 1179, 1186, 1189, 1190, 1199, 1205, 1208, 1217, 1224, 1227, 1228, 1237, 1243, 1246, 1254, 1255, 1262, 1265, 1266, 1275, 1281, 1284, 1294, 1305, 1310, 1313, 1323, 1337, 1342, 1346, 1357, 1371, 1376, 1380, 1391, 1405, 1410, 1414, 1424, 1435, 1440, 1443, 1453, 1467, 1472, 1476, 1485, 1496, 1501, 1504, 1513, 1524, 1529, 1532, 1541, 1552, 1557, 1560, 1570, 1584, 1589, 1593, 1603, 1614, 1619, 1622, 1632, 1646, 1651, 1655, 1665, 1676, 1681, 1684, 1721, 1725, 1726, 1729, 1736, 1747, 1752, 1753, 1763, 1767, 1780, 1811, 1823, 1835], "carefulli": [5, 33, 34, 1745], "ensur": [5, 6, 8, 9, 11, 17, 28, 30, 32, 34, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 457, 489, 521, 548, 567, 590, 595, 624, 638, 854, 974, 979, 1013, 1018, 1051, 1056, 1089, 1094, 1129, 1134, 1168, 1173, 1207, 1212, 1245, 1250, 1283, 1288, 1312, 1317, 1344, 1350, 1378, 1384, 1412, 1418, 1442, 1447, 1474, 1480, 1503, 1508, 1531, 1536, 1559, 1564, 1591, 1597, 1621, 1626, 1653, 1659, 1683, 1688, 1847, 1911], "thoat": 5, "smaller": [5, 9, 30], "provid": [5, 9, 10, 11, 22, 29, 30, 31, 32, 33, 34, 36, 40, 41, 50, 61, 72, 74, 75, 82, 91, 98, 101, 102, 109, 121, 130, 132, 133, 142, 153, 163, 165, 166, 175, 186, 196, 199, 200, 207, 219, 220, 222, 228, 230, 231, 240, 251, 261, 263, 264, 273, 284, 294, 296, 297, 306, 317, 327, 329, 330, 339, 350, 361, 363, 364, 373, 384, 394, 396, 397, 406, 417, 427, 429, 430, 439, 450, 460, 462, 463, 472, 483, 492, 498, 505, 524, 526, 527, 534, 544, 551, 555, 561, 570, 574, 581, 598, 607, 613, 614, 619, 628, 629, 634, 635, 652, 741, 745, 746, 747, 748, 749, 750, 793, 796, 797, 798, 799, 800, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 839, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 948, 964, 982, 987, 1003, 1021, 1022, 1025, 1041, 1059, 1063, 1079, 1097, 1101, 1119, 1137, 1142, 1158, 1176, 1181, 1197, 1215, 1219, 1235, 1253, 1257, 1273, 1291, 1296, 1303, 1320, 1326, 1335, 1353, 1354, 1360, 1369, 1387, 1388, 1394, 1403, 1421, 1422, 1426, 1433, 1450, 1456, 1465, 1483, 1487, 1494, 1511, 1512, 1515, 1522, 1539, 1543, 1550, 1567, 1573, 1582, 1600, 1601, 1605, 1612, 1629, 1635, 1644, 1662, 1663, 1667, 1674, 1691, 1722, 1727, 1728, 1790, 1791, 1796, 1802, 1803, 1810, 1816, 1817, 1822, 1835, 1879, 1886, 1887, 1894, 1897, 1903, 1904, 1915, 1916, 1917, 1920], "call": [5, 7, 9, 10, 11, 13, 16, 18, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 60, 61, 69, 91, 95, 121, 127, 152, 153, 160, 185, 186, 193, 219, 225, 250, 251, 258, 283, 284, 291, 316, 317, 324, 349, 350, 358, 383, 384, 391, 416, 417, 424, 449, 450, 457, 482, 483, 489, 495, 521, 543, 544, 548, 567, 572, 590, 595, 608, 620, 624, 636, 638, 750, 800, 835, 854, 946, 974, 979, 985, 1013, 1018, 1023, 1051, 1056, 1061, 1089, 1094, 1099, 1129, 1134, 1140, 1168, 1173, 1179, 1207, 1212, 1217, 1245, 1250, 1255, 1283, 1288, 1294, 1312, 1317, 1323, 1344, 1345, 1350, 1357, 1378, 1379, 1384, 1391, 1412, 1413, 1418, 1424, 1442, 1447, 1453, 1474, 1475, 1480, 1485, 1503, 1508, 1513, 1531, 1536, 1541, 1559, 1564, 1570, 1591, 1592, 1597, 1603, 1621, 1626, 1632, 1653, 1654, 1659, 1665, 1683, 1688, 1916, 1917, 1919], "from_neighbor_por": [5, 9, 30, 31, 672, 673, 674, 675, 676, 677, 678], "either": [5, 13, 19, 21, 23, 26, 28, 29, 30, 32, 33, 34, 37, 69, 71, 95, 97, 100, 127, 129, 160, 162, 193, 195, 225, 227, 258, 260, 291, 293, 324, 326, 358, 360, 391, 393, 424, 426, 428, 457, 459, 489, 491, 521, 523, 548, 550, 567, 569, 595, 597, 618, 633, 651, 746, 797, 823, 827, 865, 927, 979, 981, 1018, 1020, 1056, 1058, 1060, 1094, 1096, 1098, 1134, 1136, 1173, 1175, 1212, 1214, 1250, 1252, 1254, 1288, 1290, 1317, 1319, 1322, 1345, 1350, 1352, 1356, 1379, 1384, 1386, 1390, 1413, 1418, 1420, 1447, 1449, 1452, 1475, 1480, 1482, 1508, 1510, 1536, 1538, 1564, 1566, 1569, 1592, 1597, 1599, 1626, 1628, 1631, 1654, 1659, 1661, 1688, 1690, 1710, 1717, 1720, 1722, 1724, 1737, 1740, 1763, 1774, 1795, 1809, 1821, 1835, 1877, 1896, 1916, 1917], "minimum": [5, 9, 30, 745, 793, 796, 821, 822, 928, 1743, 1746], "mayb": 5, "also": [5, 6, 9, 10, 11, 15, 16, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 45, 52, 53, 54, 57, 68, 77, 84, 85, 86, 89, 94, 104, 111, 112, 113, 117, 126, 137, 144, 145, 146, 149, 159, 170, 177, 178, 179, 182, 192, 198, 202, 209, 210, 211, 215, 224, 235, 242, 243, 244, 247, 257, 268, 275, 276, 277, 280, 290, 301, 308, 309, 310, 313, 323, 334, 341, 342, 343, 346, 357, 368, 375, 376, 377, 380, 390, 401, 408, 409, 410, 413, 423, 434, 441, 442, 443, 446, 456, 467, 474, 475, 476, 479, 488, 495, 500, 507, 508, 509, 512, 520, 529, 536, 537, 538, 541, 547, 571, 572, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 636, 741, 745, 746, 747, 748, 749, 750, 793, 796, 797, 798, 799, 800, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 946, 952, 953, 956, 957, 966, 967, 968, 969, 972, 978, 983, 985, 991, 992, 995, 996, 1005, 1006, 1007, 1008, 1011, 1017, 1023, 1029, 1030, 1033, 1034, 1043, 1044, 1045, 1046, 1049, 1055, 1060, 1061, 1067, 1068, 1071, 1072, 1081, 1082, 1083, 1084, 1087, 1093, 1099, 1105, 1106, 1109, 1110, 1121, 1122, 1123, 1124, 1127, 1133, 1140, 1146, 1147, 1150, 1151, 1160, 1161, 1162, 1163, 1166, 1172, 1179, 1185, 1186, 1189, 1190, 1199, 1200, 1201, 1202, 1205, 1211, 1217, 1223, 1224, 1227, 1228, 1237, 1238, 1239, 1240, 1243, 1249, 1254, 1255, 1261, 1262, 1265, 1266, 1275, 1276, 1277, 1278, 1281, 1287, 1294, 1298, 1305, 1306, 1307, 1310, 1316, 1323, 1328, 1337, 1338, 1339, 1342, 1349, 1354, 1357, 1362, 1371, 1372, 1373, 1376, 1383, 1388, 1391, 1396, 1405, 1406, 1407, 1410, 1417, 1424, 1428, 1435, 1436, 1437, 1440, 1446, 1453, 1458, 1467, 1468, 1469, 1472, 1479, 1485, 1489, 1496, 1497, 1498, 1501, 1507, 1512, 1513, 1517, 1524, 1525, 1526, 1529, 1535, 1541, 1545, 1552, 1553, 1554, 1557, 1563, 1568, 1570, 1575, 1584, 1585, 1586, 1589, 1596, 1601, 1603, 1607, 1614, 1615, 1616, 1619, 1625, 1630, 1632, 1637, 1646, 1647, 1648, 1651, 1658, 1665, 1669, 1676, 1677, 1678, 1681, 1687, 1712, 1714, 1721, 1725, 1726, 1737, 1745, 1756, 1760, 1838, 1888, 1893, 1899], "down": [5, 18, 24, 28, 34], "distinct": 5, "demonstr": [5, 12, 17, 22, 29, 30, 31, 32, 33, 34, 35], "min": [5, 9, 30, 31, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 504, 533, 560, 580, 672, 673, 674, 675, 676, 677, 678, 745, 792, 793, 796, 821, 822, 963, 1002, 1040, 1078, 1118, 1157, 1196, 1234, 1272, 1302, 1334, 1368, 1402, 1432, 1464, 1493, 1521, 1549, 1581, 1611, 1643, 1673], "throat_siz": [5, 9, 30, 31, 1921], "diameter_2": [5, 9], "carefuli": 5, "chosen": [5, 9, 32, 1745], "reason": [5, 9, 11, 16, 17, 18, 22, 24, 26, 29, 30, 32, 33], "mention": [5, 23], "If": [5, 9, 18, 21, 23, 28, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 51, 52, 53, 54, 57, 59, 61, 63, 64, 66, 68, 70, 71, 74, 75, 83, 84, 85, 86, 89, 91, 94, 96, 97, 101, 102, 110, 111, 112, 113, 117, 121, 122, 124, 126, 128, 129, 132, 133, 143, 144, 145, 146, 149, 151, 153, 155, 157, 159, 161, 162, 165, 166, 176, 177, 178, 179, 182, 184, 186, 188, 190, 192, 194, 195, 199, 200, 208, 209, 210, 211, 215, 219, 220, 222, 224, 226, 227, 230, 231, 241, 242, 243, 244, 247, 249, 251, 253, 255, 257, 259, 260, 263, 264, 274, 275, 276, 277, 280, 282, 284, 286, 288, 290, 292, 293, 296, 297, 307, 308, 309, 310, 313, 315, 317, 319, 321, 323, 325, 326, 329, 330, 340, 341, 342, 343, 346, 348, 349, 350, 352, 353, 355, 357, 359, 360, 363, 364, 374, 375, 376, 377, 380, 382, 383, 384, 386, 388, 390, 392, 393, 396, 397, 407, 408, 409, 410, 413, 415, 416, 417, 419, 421, 423, 425, 426, 429, 430, 440, 441, 442, 443, 446, 448, 449, 450, 452, 454, 456, 458, 459, 462, 463, 473, 474, 475, 476, 479, 481, 483, 485, 486, 488, 490, 491, 495, 498, 506, 507, 508, 509, 512, 514, 520, 522, 523, 526, 527, 535, 536, 537, 538, 541, 543, 544, 547, 549, 550, 555, 562, 568, 569, 572, 574, 582, 583, 584, 585, 588, 590, 594, 596, 597, 601, 602, 603, 604, 606, 615, 618, 630, 633, 636, 638, 644, 652, 663, 665, 667, 747, 793, 796, 819, 821, 839, 857, 858, 859, 860, 861, 863, 864, 865, 868, 870, 876, 879, 881, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 899, 900, 901, 902, 903, 909, 923, 927, 933, 944, 946, 948, 950, 951, 953, 955, 956, 957, 960, 962, 965, 966, 967, 968, 969, 972, 974, 978, 980, 981, 983, 985, 987, 989, 990, 992, 994, 995, 996, 999, 1001, 1004, 1005, 1006, 1007, 1008, 1011, 1013, 1017, 1019, 1020, 1022, 1023, 1025, 1027, 1028, 1030, 1032, 1033, 1034, 1037, 1039, 1042, 1043, 1044, 1045, 1046, 1049, 1051, 1055, 1057, 1058, 1060, 1061, 1063, 1065, 1066, 1068, 1070, 1071, 1072, 1075, 1077, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1093, 1095, 1096, 1098, 1099, 1101, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1115, 1117, 1120, 1121, 1122, 1123, 1124, 1127, 1129, 1133, 1135, 1136, 1138, 1140, 1142, 1144, 1145, 1147, 1149, 1150, 1151, 1154, 1156, 1159, 1160, 1161, 1162, 1163, 1166, 1168, 1172, 1174, 1175, 1177, 1179, 1181, 1183, 1184, 1186, 1188, 1189, 1190, 1193, 1195, 1198, 1199, 1200, 1201, 1202, 1205, 1207, 1211, 1213, 1214, 1216, 1217, 1219, 1221, 1222, 1224, 1226, 1227, 1228, 1231, 1233, 1236, 1237, 1238, 1239, 1240, 1243, 1245, 1249, 1251, 1252, 1254, 1255, 1257, 1259, 1260, 1262, 1264, 1265, 1266, 1269, 1271, 1274, 1275, 1276, 1277, 1278, 1281, 1283, 1287, 1289, 1290, 1294, 1296, 1304, 1305, 1306, 1307, 1310, 1312, 1316, 1318, 1319, 1323, 1326, 1333, 1336, 1337, 1338, 1339, 1342, 1344, 1349, 1351, 1352, 1354, 1357, 1360, 1367, 1370, 1371, 1372, 1373, 1376, 1378, 1383, 1385, 1386, 1388, 1391, 1394, 1401, 1404, 1405, 1406, 1407, 1410, 1412, 1417, 1419, 1420, 1422, 1424, 1426, 1434, 1435, 1436, 1437, 1440, 1442, 1446, 1448, 1449, 1453, 1456, 1463, 1466, 1467, 1468, 1469, 1472, 1474, 1479, 1481, 1482, 1485, 1487, 1495, 1496, 1497, 1498, 1501, 1503, 1507, 1509, 1510, 1512, 1513, 1515, 1523, 1524, 1525, 1526, 1529, 1531, 1535, 1537, 1538, 1541, 1543, 1551, 1552, 1553, 1554, 1557, 1559, 1563, 1565, 1566, 1570, 1573, 1580, 1583, 1584, 1585, 1586, 1589, 1591, 1596, 1598, 1599, 1601, 1603, 1605, 1613, 1614, 1615, 1616, 1619, 1621, 1625, 1627, 1628, 1632, 1635, 1642, 1645, 1646, 1647, 1648, 1651, 1653, 1658, 1660, 1661, 1663, 1665, 1667, 1675, 1676, 1677, 1678, 1681, 1683, 1687, 1689, 1690, 1710, 1714, 1715, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1729, 1735, 1737, 1738, 1748, 1749, 1750, 1751, 1770, 1772, 1776, 1785, 1792, 1795, 1804, 1809, 1811, 1818, 1821, 1834, 1838, 1846, 1859, 1867, 1874, 1883, 1890, 1891, 1893, 1894, 1896, 1903, 1904, 1915, 1916, 1917, 1919, 1920], "some": [5, 9, 10, 11, 12, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 607, 644, 833, 854, 928, 930, 931, 1216, 1512, 1728, 1749, 1751], "unhappi": 5, "reduc": [5, 11, 31, 34, 131, 1715], "small": [5, 9, 10, 14, 19, 21, 27, 29, 30, 34, 660, 1916, 1917, 1919], "after": [5, 6, 7, 24, 30, 32, 34, 35, 667, 747, 1717, 1756], "power": [5, 23, 30, 31, 34, 742, 876, 901, 1333, 1367, 1401, 1463, 1580, 1642], "util": [5, 10, 30, 32, 1811, 1823, 1905], "properli": [5, 6, 9, 37], "instead": [5, 9, 16, 19, 21, 24, 26, 29, 30, 31, 32, 33, 1762, 1764, 1766, 1768, 1771, 1773, 1775, 1777, 1779, 1781, 1782, 1784], "essenti": [5, 28, 29, 30, 31, 649, 1712, 1729, 1749, 1750], "done": [5, 7, 9, 10, 17, 18, 21, 26, 27, 28, 29, 30, 33, 34, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 504, 533, 560, 580, 664, 854, 963, 1002, 1040, 1078, 1118, 1157, 1196, 1234, 1272, 1302, 1334, 1368, 1402, 1432, 1464, 1493, 1521, 1549, 1581, 1611, 1643, 1673], "plot": [5, 6, 9, 12, 13, 27, 29, 30, 31, 34, 1916, 1917, 1918, 1919, 1920, 1921], "itself": [5, 18, 29, 30, 60, 152, 185, 250, 283, 316, 482, 607, 1715, 1834, 1846, 1859, 1869, 1876, 1878], "ahould": 5, "ideal": [5, 26, 854, 857], "paraview": [5, 10, 27, 37, 666, 667, 1916, 1919], "plot_networkx": 5, "ig": 5, "fri": 6, "combarn": 6, "1971": 6, "longitudin": 6, "c_": [6, 23, 131, 930, 931], "erfc": 6, "bigl": 6, "ut": 6, "d_": [6, 7, 8, 12, 21, 24, 131, 716], "bigr": 6, "exp": [6, 930, 931, 936], "ux": 6, "time": [6, 7, 9, 18, 24, 26, 28, 29, 30, 31, 34, 35, 197, 349, 383, 416, 449, 495, 543, 572, 636, 644, 741, 749, 799, 832, 946, 985, 1023, 1061, 1098, 1099, 1140, 1179, 1216, 1217, 1254, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1722, 1894], "u": [6, 9, 26, 27, 29], "averag": [6, 7, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 504, 533, 560, 580, 742, 765, 766, 867, 869, 872, 925, 963, 1002, 1040, 1078, 1118, 1157, 1196, 1234, 1272, 1302, 1334, 1368, 1402, 1432, 1464, 1493, 1521, 1549, 1581, 1611, 1643, 1673, 1746], "veloc": 6, "concentr": [6, 7, 8, 21, 23, 24, 28, 35, 61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 516, 544, 879, 881, 930, 931, 1917], "complementari": [6, 27], "error": [6, 11, 23, 26, 28, 30, 32, 65, 156, 189, 254, 287, 320, 354, 387, 420, 453], "implement": [6, 12, 17, 23, 28, 32, 229, 461, 643, 854, 924, 925], "fit": [6, 7, 9, 32], "special": [6, 11, 30, 33, 34, 1512], "optim": [6, 197, 1111, 1112], "curve_fit": 6, "2d": [6, 31, 653, 691, 696, 699, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 717, 718, 725, 728, 732, 733, 735, 739, 790, 805, 983, 1060, 1098, 1254, 1716, 1729, 1737, 1748, 1752, 1918, 1920], "3d": [6, 31, 660, 742, 1060, 1098, 1254, 1716, 1729, 1737, 1748, 1749, 1916, 1917, 1919], "well": [6, 7, 9, 10, 21, 24, 27, 28, 29, 30, 31, 32, 33, 34, 63, 352, 493, 648, 932, 934, 935, 936, 937, 938, 939, 960, 962, 999, 1001, 1037, 1039, 1075, 1077, 1112, 1115, 1117, 1154, 1156, 1193, 1195, 1231, 1233, 1269, 1271, 1729, 1758, 1917, 1918], "etc": [6, 7, 12, 13, 17, 24, 28, 31, 33, 35, 37, 831, 854, 1743, 1922], "entri": [6, 12, 13, 17, 19, 21, 23, 29, 30, 34, 197, 620, 830, 854, 908, 909, 923, 960, 999, 1037, 1075, 1115, 1154, 1193, 1231, 1269, 1785, 1898, 1906], "water": [6, 8, 9, 12, 13, 15, 17, 19, 22, 33, 34, 861, 879, 881, 885, 892, 896, 903, 921, 925, 933, 1512, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691], "40": [6, 9, 11, 13, 31, 33, 34, 885, 921], "43": [6, 9, 27, 34], "electrical_conduct": [6, 688, 916, 917], "accumul": 6, "mass": [6, 19, 21, 23, 24, 33, 857, 860, 873, 878, 930], "occur": [6, 9, 10, 18, 19, 28, 30, 32, 33, 34, 131, 197, 1748], "order": [6, 23, 28, 29, 30, 32, 34, 56, 61, 88, 91, 116, 121, 148, 153, 181, 186, 197, 214, 219, 220, 222, 246, 251, 279, 284, 312, 317, 345, 350, 379, 384, 412, 417, 445, 450, 478, 483, 511, 540, 544, 564, 587, 590, 616, 620, 624, 631, 638, 830, 923, 953, 957, 971, 974, 992, 996, 1010, 1013, 1030, 1034, 1048, 1051, 1068, 1072, 1086, 1089, 1106, 1110, 1126, 1129, 1147, 1151, 1165, 1168, 1186, 1190, 1204, 1207, 1224, 1228, 1242, 1245, 1262, 1266, 1280, 1283, 1309, 1312, 1341, 1344, 1375, 1378, 1409, 1412, 1439, 1442, 1471, 1474, 1500, 1503, 1528, 1531, 1556, 1559, 1588, 1591, 1618, 1621, 1650, 1653, 1680, 1683, 1728, 1746, 1793, 1805, 1819, 1834, 1846, 1859, 1892], "surround": [6, 9, 908], "its": [6, 11, 12, 17, 24, 27, 30, 31, 32, 34, 35, 100, 842, 843, 847, 854, 865, 883, 884, 1098, 1713], "def": [6, 12, 13, 16, 26, 32, 1778, 1780, 1905], "effective_pore_volum": 6, "throat_volum": [6, 9, 11, 30, 759], "pore_volum": [6, 9, 11, 30, 31, 744, 759], "pvol": 6, "tvol": 6, "vtot": 6, "sum": [6, 7, 9, 11, 12, 13, 26, 29, 30, 33, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 745, 793, 796, 821, 822, 834, 877, 967, 1006, 1044, 1082, 1122, 1161, 1200, 1238, 1276], "assert": 6, "isclos": 6, "total": [6, 11, 15, 19, 24, 27, 30, 33, 131, 877, 967, 1006, 1044, 1082, 1122, 1161, 1200, 1238, 1276, 1711], "effective_volum": 6, "field": [6, 1900, 1912], "therefor": [6, 8, 11, 12, 13, 22, 24, 28, 34, 648, 695, 697, 930, 931], "netwok": 6, "prior": [6, 17, 34, 1060, 1098, 1254], "advectiondiffus": [6, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "algorthim": 6, "sf": [6, 10, 15, 24, 33], "50": [6, 9, 11, 24, 29, 30, 32, 34, 746, 748, 750, 797, 798, 800, 823, 828, 835], "rang": [6, 9, 12, 13, 16, 26, 30, 34, 36, 1729, 1831, 1843, 1856], "timestep": 6, "tell": [6, 18, 19, 23, 26, 29, 30, 34], "rather": [6, 17, 23, 30, 34, 858, 956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265, 1721, 1725, 1726], "default": [6, 22, 26, 31, 32, 33, 35, 37, 40, 45, 47, 52, 58, 59, 61, 62, 63, 64, 65, 66, 67, 74, 77, 79, 84, 90, 91, 92, 93, 101, 104, 106, 111, 118, 121, 122, 123, 124, 125, 132, 137, 139, 144, 150, 151, 153, 154, 155, 156, 157, 158, 165, 170, 172, 177, 183, 184, 186, 187, 188, 189, 190, 191, 199, 202, 204, 209, 216, 219, 220, 221, 222, 223, 229, 230, 235, 237, 242, 248, 249, 251, 252, 253, 254, 255, 256, 263, 268, 270, 275, 281, 282, 284, 285, 286, 287, 288, 289, 296, 301, 303, 308, 314, 315, 317, 318, 319, 320, 321, 322, 329, 334, 336, 341, 347, 348, 350, 351, 352, 353, 354, 355, 356, 363, 368, 370, 375, 381, 382, 384, 385, 386, 387, 388, 389, 396, 401, 403, 408, 414, 415, 417, 418, 419, 420, 421, 422, 429, 434, 436, 441, 447, 448, 450, 451, 452, 453, 454, 455, 462, 467, 469, 474, 480, 481, 483, 484, 485, 486, 487, 495, 496, 498, 500, 502, 507, 513, 514, 517, 519, 526, 529, 531, 536, 542, 544, 545, 546, 555, 558, 565, 566, 572, 573, 574, 576, 578, 583, 589, 592, 593, 600, 601, 605, 612, 615, 617, 623, 627, 630, 632, 636, 637, 648, 655, 660, 661, 663, 664, 665, 667, 668, 741, 744, 745, 747, 749, 793, 795, 796, 799, 818, 821, 822, 832, 854, 876, 901, 923, 927, 944, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 959, 960, 962, 966, 967, 973, 976, 977, 983, 985, 986, 987, 989, 990, 991, 992, 994, 995, 996, 998, 999, 1001, 1005, 1006, 1012, 1015, 1016, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1037, 1039, 1043, 1044, 1050, 1053, 1054, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1074, 1075, 1077, 1081, 1082, 1088, 1091, 1092, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1114, 1115, 1117, 1121, 1122, 1128, 1131, 1132, 1138, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1156, 1160, 1161, 1167, 1170, 1171, 1177, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1192, 1193, 1195, 1199, 1200, 1206, 1209, 1210, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1230, 1231, 1233, 1237, 1238, 1244, 1247, 1248, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1268, 1269, 1271, 1275, 1276, 1282, 1285, 1286, 1294, 1295, 1296, 1298, 1300, 1305, 1311, 1314, 1315, 1323, 1324, 1326, 1328, 1330, 1333, 1337, 1343, 1347, 1348, 1357, 1358, 1360, 1362, 1364, 1367, 1371, 1377, 1381, 1382, 1391, 1392, 1394, 1396, 1398, 1401, 1405, 1411, 1415, 1416, 1424, 1425, 1426, 1428, 1430, 1435, 1441, 1444, 1445, 1453, 1454, 1456, 1458, 1460, 1463, 1467, 1473, 1477, 1478, 1485, 1486, 1487, 1489, 1491, 1496, 1502, 1505, 1506, 1513, 1514, 1515, 1517, 1519, 1524, 1530, 1533, 1534, 1541, 1542, 1543, 1545, 1547, 1552, 1558, 1561, 1562, 1570, 1571, 1573, 1575, 1577, 1580, 1584, 1590, 1594, 1595, 1603, 1604, 1605, 1607, 1609, 1614, 1620, 1623, 1624, 1632, 1633, 1635, 1637, 1639, 1642, 1646, 1652, 1656, 1657, 1665, 1666, 1667, 1669, 1671, 1676, 1682, 1685, 1686, 1700, 1710, 1713, 1714, 1715, 1721, 1725, 1726, 1728, 1729, 1743, 1747, 1751, 1789, 1792, 1794, 1801, 1804, 1806, 1815, 1818, 1820, 1831, 1843, 1856, 1885, 1891, 1895, 1916, 1917], "which": [6, 7, 9, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 45, 51, 59, 73, 74, 77, 83, 100, 101, 104, 110, 122, 124, 131, 132, 137, 143, 151, 165, 170, 176, 184, 197, 199, 202, 208, 220, 222, 230, 235, 241, 249, 262, 263, 268, 274, 282, 296, 301, 307, 315, 329, 334, 340, 348, 349, 363, 368, 374, 382, 383, 396, 401, 407, 415, 416, 428, 429, 434, 440, 448, 449, 461, 462, 467, 473, 481, 494, 495, 496, 498, 500, 506, 515, 516, 526, 529, 535, 543, 553, 554, 555, 562, 572, 573, 574, 576, 582, 591, 600, 607, 620, 624, 625, 636, 637, 639, 644, 648, 660, 663, 665, 667, 716, 731, 741, 745, 746, 747, 748, 749, 750, 793, 796, 797, 798, 799, 800, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 839, 841, 846, 847, 849, 854, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 946, 947, 948, 950, 951, 952, 954, 955, 965, 975, 983, 985, 986, 987, 989, 990, 991, 993, 994, 1004, 1014, 1023, 1024, 1025, 1027, 1028, 1029, 1031, 1032, 1042, 1052, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1069, 1070, 1080, 1090, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1107, 1108, 1120, 1130, 1140, 1141, 1142, 1144, 1145, 1146, 1148, 1149, 1159, 1169, 1177, 1179, 1180, 1181, 1183, 1184, 1185, 1187, 1188, 1198, 1208, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1225, 1226, 1236, 1246, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1263, 1264, 1274, 1284, 1293, 1294, 1295, 1296, 1298, 1304, 1313, 1322, 1323, 1324, 1326, 1328, 1336, 1346, 1355, 1356, 1357, 1358, 1360, 1362, 1370, 1380, 1389, 1390, 1391, 1392, 1394, 1396, 1404, 1414, 1424, 1425, 1426, 1428, 1434, 1443, 1451, 1452, 1453, 1454, 1456, 1458, 1466, 1476, 1484, 1485, 1486, 1487, 1489, 1495, 1504, 1512, 1513, 1514, 1515, 1517, 1523, 1532, 1541, 1542, 1543, 1545, 1551, 1560, 1569, 1570, 1571, 1573, 1575, 1583, 1593, 1603, 1604, 1605, 1607, 1613, 1622, 1631, 1632, 1633, 1635, 1637, 1645, 1655, 1664, 1665, 1666, 1667, 1669, 1675, 1684, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1724, 1727, 1728, 1729, 1737, 1738, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1755, 1765, 1767, 1770, 1772, 1776, 1778, 1780, 1783, 1835, 1888, 1893, 1898, 1899, 1915], "interv": [6, 349, 383, 416, 449, 543, 644], "through": [6, 7, 8, 13, 15, 18, 21, 30, 33, 34, 37, 59, 131, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 1111, 1112], "integr": [6, 24, 33, 349, 383, 416, 449, 543, 643, 644], "span": [6, 349, 383, 416, 449, 543, 1738, 1746], "tspan": [6, 349, 383, 416, 449, 543, 644], "mod": [6, 30], "ad_dif_conduct": [6, 688], "ad_dif": [6, 688], "s_scheme": [6, 906], "powerlaw": [6, 906], "transientadvectiondiffus": [6, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361], "_updat": [6, 12, 13], "set_outflow_bc": 6, "100": [6, 7, 8, 9, 11, 15, 19, 26, 27, 34, 957, 996, 1034, 1072, 1110, 1151, 1190, 1228, 1266], "saveat": [6, 349, 383, 416, 449, 543, 644], "x0": [6, 60, 152, 185, 250, 283, 316, 349, 383, 416, 449, 482, 543, 644, 1700, 1704], "ps_front": 6, "ts_front": 6, "find_neighbor_throat": [6, 29, 31, 34, 967, 1006, 1044, 1082, 1122, 1161, 1200, 1216, 1238, 1276], "xor": [6, 29, 31, 45, 52, 53, 54, 57, 68, 77, 84, 85, 86, 89, 94, 104, 111, 112, 113, 117, 126, 137, 144, 145, 146, 149, 159, 170, 177, 178, 179, 182, 192, 202, 209, 210, 211, 215, 224, 235, 242, 243, 244, 247, 257, 268, 275, 276, 277, 280, 290, 301, 308, 309, 310, 313, 323, 334, 341, 342, 343, 346, 357, 368, 375, 376, 377, 380, 390, 401, 408, 409, 410, 413, 423, 434, 441, 442, 443, 446, 456, 467, 474, 475, 476, 479, 488, 500, 507, 508, 509, 512, 520, 529, 536, 537, 538, 541, 547, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 952, 953, 956, 957, 966, 967, 968, 969, 972, 978, 991, 992, 995, 996, 1005, 1006, 1007, 1008, 1011, 1017, 1029, 1030, 1033, 1034, 1043, 1044, 1045, 1046, 1049, 1055, 1067, 1068, 1071, 1072, 1081, 1082, 1083, 1084, 1087, 1093, 1105, 1106, 1109, 1110, 1121, 1122, 1123, 1124, 1127, 1133, 1146, 1147, 1150, 1151, 1160, 1161, 1162, 1163, 1166, 1172, 1185, 1186, 1189, 1190, 1199, 1200, 1201, 1202, 1205, 1211, 1223, 1224, 1227, 1228, 1237, 1238, 1239, 1240, 1243, 1249, 1261, 1262, 1265, 1266, 1275, 1276, 1277, 1278, 1281, 1287, 1298, 1305, 1306, 1307, 1310, 1316, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1396, 1405, 1406, 1407, 1410, 1417, 1428, 1435, 1436, 1437, 1440, 1446, 1458, 1467, 1468, 1469, 1472, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1545, 1552, 1553, 1554, 1557, 1563, 1575, 1584, 1585, 1586, 1589, 1596, 1607, 1614, 1615, 1616, 1619, 1625, 1637, 1646, 1647, 1648, 1651, 1658, 1669, 1676, 1677, 1678, 1681, 1687, 1721, 1725, 1726], "count": [6, 9, 30, 53, 54, 85, 86, 112, 113, 145, 146, 178, 179, 210, 211, 243, 244, 276, 277, 309, 310, 342, 343, 376, 377, 409, 410, 442, 443, 475, 476, 508, 509, 537, 538, 584, 585, 602, 603, 648, 841, 953, 956, 957, 967, 968, 969, 992, 995, 996, 1006, 1007, 1008, 1030, 1033, 1034, 1044, 1045, 1046, 1068, 1071, 1072, 1082, 1083, 1084, 1106, 1109, 1110, 1122, 1123, 1124, 1147, 1150, 1151, 1161, 1162, 1163, 1186, 1189, 1190, 1200, 1201, 1202, 1224, 1227, 1228, 1238, 1239, 1240, 1262, 1265, 1266, 1276, 1277, 1278, 1306, 1307, 1338, 1339, 1372, 1373, 1406, 1407, 1436, 1437, 1468, 1469, 1497, 1498, 1525, 1526, 1553, 1554, 1585, 1586, 1615, 1616, 1647, 1648, 1677, 1678, 1743], "c_avg": 6, "ti": 6, "c_front": 6, "q_front": 6, "append": [6, 12, 13, 26, 31, 32, 1718, 1751, 1828, 1840, 1853], "o": [6, 10, 12, 13, 15, 31, 34, 35, 1888, 1893, 1917], "legend": [6, 9, 12, 13, 15, 31, 34], "set_xlabel": [6, 9, 15, 31], "set_ylabel": [6, 15, 31], "being": [6, 9, 13, 19, 23, 26, 31, 32, 34, 65, 156, 189, 254, 287, 320, 354, 387, 420, 453, 493, 495, 516, 518, 572, 636, 665, 826, 830, 946, 950, 951, 985, 989, 990, 1023, 1027, 1028, 1061, 1065, 1066, 1099, 1103, 1104, 1140, 1144, 1145, 1179, 1183, 1184, 1217, 1221, 1222, 1255, 1259, 1260, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1888, 1906, 1916, 1917], "effictivli": 6, "known": [6, 7, 8, 9, 10, 11, 15, 23, 28, 30, 32, 879, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260, 1721, 1725, 1726], "fittiong": 6, "dl": 6, "el1": 6, "el2": 6, "el3": 6, "v_pred": 6, "compar": [6, 9, 10, 15, 24, 33], "q_throat": 6, "a_throat": 6, "v_throat": 6, "g": [6, 21, 24, 27, 30, 31, 32, 34, 37, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 495, 504, 533, 560, 572, 580, 636, 649, 656, 663, 763, 764, 857, 859, 860, 861, 879, 885, 888, 890, 891, 892, 896, 899, 900, 902, 903, 908, 930, 931, 944, 945, 946, 963, 984, 985, 1002, 1023, 1040, 1061, 1078, 1099, 1118, 1139, 1140, 1157, 1177, 1178, 1179, 1196, 1217, 1234, 1255, 1272, 1294, 1302, 1323, 1334, 1357, 1368, 1391, 1402, 1424, 1432, 1453, 1464, 1485, 1493, 1513, 1521, 1541, 1549, 1570, 1581, 1603, 1611, 1632, 1643, 1665, 1673, 1722, 1765, 1778, 1883, 1890, 1916, 1917, 1920], "xdata": 6, "float": [6, 17, 21, 29, 64, 66, 155, 157, 188, 190, 253, 255, 286, 288, 319, 321, 349, 353, 355, 383, 386, 388, 416, 419, 421, 449, 452, 454, 485, 486, 518, 543, 644, 660, 748, 750, 798, 800, 817, 826, 828, 829, 835, 841, 846, 865, 908, 923, 927, 928, 930, 931, 1060, 1098, 1254, 1322, 1356, 1390, 1452, 1569, 1631, 1721, 1729, 1747, 1751, 1778, 1780, 1906, 1915, 1916, 1917, 1918], "ydata": 6, "popt": 6, "pcov": 6, "p0": 6, "disp_coeff": 6, "v_fit": 6, "4e": [6, 27], "m": [6, 22, 24, 30, 36, 648, 684, 763, 826, 859, 860, 861, 865, 884, 885, 891, 892, 896, 903, 930, 931], "6581e": 6, "3610e": 6, "04": 6, "0669e": 6, "05": [6, 9, 10, 30, 32, 681, 684, 879], "el": 6, "zero": [6, 21, 28, 29, 34, 649, 695, 697, 927, 930, 931, 944, 950, 951, 960, 962, 983, 989, 990, 999, 1001, 1022, 1027, 1028, 1037, 1039, 1060, 1065, 1066, 1075, 1077, 1098, 1103, 1104, 1115, 1117, 1138, 1144, 1145, 1154, 1156, 1177, 1183, 1184, 1193, 1195, 1216, 1221, 1222, 1231, 1233, 1254, 1259, 1260, 1269, 1271, 1722], "len": [6, 9, 11, 13, 30, 33, 495, 572, 636, 676, 772, 810, 813, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "torutous": 7, "complic": [7, 18, 21, 29, 30, 31, 32, 34], "multipli": [7, 9, 26, 31, 925, 927, 1711], "divid": [7, 13], "eff": [7, 8, 12, 131], "epsilon": [7, 863], "tau": 7, "correct": [7, 8, 11, 22, 24, 29, 30, 31, 33, 34, 495, 515, 572, 590, 591, 636, 638, 639, 906, 912, 946, 974, 975, 985, 1013, 1014, 1023, 1051, 1052, 1061, 1089, 1090, 1099, 1129, 1130, 1140, 1168, 1169, 1179, 1207, 1208, 1217, 1245, 1246, 1255, 1283, 1284, 1294, 1312, 1313, 1323, 1344, 1346, 1357, 1378, 1380, 1391, 1412, 1414, 1424, 1442, 1443, 1453, 1474, 1476, 1485, 1503, 1504, 1513, 1531, 1532, 1541, 1559, 1560, 1570, 1591, 1593, 1603, 1621, 1622, 1632, 1653, 1655, 1665, 1683, 1684], "windi": 7, "path": [7, 10, 648, 652, 662, 666, 806, 807, 1727, 1888, 1889, 1893], "matter": 7, "move": [7, 9, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 493, 1098, 1254, 1710, 1715], "substanc": 7, "classic": [7, 197], "definit": [7, 10, 16, 23, 24, 32, 63, 64, 66, 155, 157, 188, 190, 253, 255, 286, 288, 319, 321, 352, 353, 355, 386, 388, 419, 421, 452, 454, 485, 486, 1879], "actual": [7, 16, 17, 18, 19, 23, 24, 26, 28, 29, 30, 31, 32, 34, 648, 659, 663, 750, 754, 800, 835, 928, 1728, 1756, 1894], "realiti": [7, 24, 32], "mani": [7, 9, 10, 16, 17, 19, 21, 26, 30, 32, 660, 827, 854, 908, 924, 983], "pathwai": 7, "thought": [7, 28, 34], "l_": 7, "repres": [7, 9, 19, 29, 31, 34, 494, 644, 716, 731, 750, 800, 835, 858, 930, 931, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260, 1451, 1512, 1711, 1712, 1748, 1750, 1916, 1917], "microstructur": 7, "materi": [7, 9, 10, 12, 13, 27, 34, 59, 131, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 909, 1923], "toray090": 7, "carbon": 7, "paper": [7, 9], "sand": [7, 34], "stone": 7, "electrospun": 7, "fiber": 7, "sphere": [7, 9, 11, 24, 27, 30, 31, 35, 673, 675, 676, 701, 714, 716, 729, 731, 744, 772, 784, 847, 908, 1753, 1915], "cylind": [7, 9, 11, 24, 27, 30, 673, 676, 692, 694, 701, 706, 708, 714, 716, 721, 723, 729, 731, 772, 775, 777, 784, 908, 924, 1752, 1915], "all": [7, 9, 10, 15, 16, 17, 18, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 45, 52, 53, 54, 57, 58, 61, 62, 63, 64, 65, 66, 68, 73, 74, 75, 77, 84, 85, 86, 89, 90, 91, 92, 94, 99, 100, 101, 102, 104, 111, 112, 113, 117, 118, 121, 122, 123, 124, 126, 131, 132, 133, 134, 135, 137, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 159, 164, 165, 166, 167, 168, 170, 177, 178, 179, 182, 183, 186, 187, 188, 189, 190, 192, 197, 199, 200, 202, 209, 210, 211, 215, 216, 219, 220, 221, 222, 224, 229, 230, 231, 232, 233, 235, 242, 243, 244, 247, 248, 251, 252, 253, 254, 255, 257, 262, 263, 264, 265, 266, 268, 275, 276, 277, 280, 281, 284, 285, 286, 287, 288, 290, 295, 296, 297, 298, 299, 301, 308, 309, 310, 313, 314, 317, 318, 319, 320, 321, 323, 328, 329, 330, 331, 332, 334, 341, 342, 343, 346, 347, 350, 351, 352, 353, 354, 355, 357, 362, 363, 364, 365, 366, 368, 375, 376, 377, 380, 381, 384, 385, 386, 387, 388, 390, 395, 396, 397, 398, 399, 401, 408, 409, 410, 413, 414, 417, 418, 419, 420, 421, 423, 428, 429, 430, 431, 432, 434, 441, 442, 443, 446, 447, 450, 451, 452, 453, 454, 456, 461, 462, 463, 464, 465, 467, 474, 475, 476, 479, 480, 483, 484, 485, 486, 488, 494, 495, 496, 498, 500, 507, 508, 509, 512, 513, 514, 515, 517, 520, 525, 526, 527, 529, 536, 537, 538, 541, 542, 543, 544, 545, 547, 553, 554, 555, 565, 571, 572, 573, 574, 576, 583, 584, 585, 588, 589, 590, 591, 592, 594, 600, 601, 602, 603, 604, 605, 606, 609, 620, 621, 636, 637, 638, 639, 652, 656, 662, 663, 665, 746, 747, 759, 797, 815, 823, 824, 847, 854, 933, 944, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 966, 967, 968, 969, 972, 973, 974, 975, 976, 978, 983, 985, 986, 987, 989, 990, 991, 992, 994, 995, 996, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1014, 1015, 1017, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1055, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1093, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1133, 1138, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1169, 1170, 1172, 1177, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1199, 1200, 1201, 1202, 1205, 1206, 1207, 1208, 1209, 1211, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1237, 1238, 1239, 1240, 1243, 1244, 1245, 1246, 1247, 1249, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1275, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1287, 1293, 1294, 1295, 1296, 1298, 1305, 1306, 1307, 1310, 1311, 1312, 1313, 1314, 1316, 1321, 1323, 1324, 1325, 1326, 1328, 1337, 1338, 1339, 1342, 1343, 1344, 1346, 1347, 1349, 1354, 1355, 1357, 1358, 1359, 1360, 1362, 1371, 1372, 1373, 1376, 1377, 1378, 1380, 1381, 1383, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1405, 1406, 1407, 1410, 1411, 1412, 1414, 1415, 1417, 1422, 1423, 1424, 1425, 1426, 1428, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1444, 1446, 1451, 1453, 1454, 1455, 1456, 1458, 1467, 1468, 1469, 1472, 1473, 1474, 1476, 1477, 1479, 1484, 1485, 1486, 1487, 1489, 1496, 1497, 1498, 1501, 1502, 1503, 1504, 1505, 1507, 1512, 1513, 1514, 1515, 1517, 1524, 1525, 1526, 1529, 1530, 1531, 1532, 1533, 1535, 1540, 1541, 1542, 1543, 1545, 1552, 1553, 1554, 1557, 1558, 1559, 1560, 1561, 1563, 1568, 1570, 1571, 1572, 1573, 1575, 1584, 1585, 1586, 1589, 1590, 1591, 1593, 1594, 1596, 1601, 1602, 1603, 1604, 1605, 1607, 1614, 1615, 1616, 1619, 1620, 1621, 1622, 1623, 1625, 1630, 1632, 1633, 1634, 1635, 1637, 1646, 1647, 1648, 1651, 1652, 1653, 1655, 1656, 1658, 1663, 1664, 1665, 1666, 1667, 1669, 1676, 1677, 1678, 1681, 1682, 1683, 1684, 1685, 1687, 1693, 1695, 1700, 1710, 1711, 1712, 1715, 1716, 1721, 1725, 1726, 1728, 1729, 1735, 1743, 1744, 1745, 1747, 1750, 1754, 1757, 1770, 1772, 1776, 1785, 1786, 1798, 1812, 1825, 1835, 1837, 1838, 1848, 1850, 1861, 1863, 1865, 1866, 1868, 1875, 1877, 1879, 1880, 1893, 1894, 1898, 1900, 1903, 1904, 1909, 1910, 1911, 1916, 1917, 1919], "notic": [7, 9, 32, 34], "0x7fd7f7b6cb30": 7, "180": [7, 10, 12, 13, 26, 34, 763], "36": [7, 9, 10, 27, 30, 32, 34], "thermophys": [7, 9, 10, 32, 853, 1292, 1484], "about": [7, 9, 10, 17, 18, 19, 23, 28, 29, 31, 32, 33, 34, 930, 931, 932, 934, 935, 936, 937, 938, 939, 967, 1006, 1044, 1082, 1122, 1161, 1200, 1238, 1276, 1729, 1747, 1748, 1749], "air": [7, 9, 12, 13, 18, 21, 32, 34, 35, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320], "easi": [7, 9, 15, 16, 17, 19, 23, 26, 29, 31, 983], "remov": [7, 10, 19, 24, 26, 27, 30, 31, 34, 37, 56, 61, 62, 65, 88, 91, 92, 116, 121, 122, 123, 124, 148, 153, 154, 156, 181, 186, 187, 189, 214, 219, 220, 221, 222, 246, 251, 252, 254, 279, 284, 285, 287, 312, 317, 318, 320, 345, 350, 351, 354, 379, 384, 385, 387, 412, 417, 418, 420, 445, 450, 451, 453, 478, 483, 484, 493, 511, 517, 540, 544, 545, 564, 587, 592, 605, 609, 616, 621, 631, 950, 951, 971, 976, 983, 989, 990, 1010, 1015, 1027, 1028, 1048, 1053, 1060, 1065, 1066, 1086, 1091, 1098, 1103, 1104, 1126, 1131, 1144, 1145, 1165, 1170, 1183, 1184, 1204, 1209, 1221, 1222, 1242, 1247, 1254, 1259, 1260, 1280, 1285, 1309, 1314, 1341, 1345, 1347, 1375, 1379, 1381, 1409, 1413, 1415, 1439, 1444, 1471, 1475, 1477, 1500, 1505, 1528, 1533, 1556, 1561, 1588, 1592, 1594, 1618, 1623, 1650, 1654, 1656, 1680, 1685, 1715, 1717, 1721, 1726, 1755, 1762, 1764, 1766, 1768, 1771, 1773, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1786, 1793, 1798, 1805, 1812, 1819, 1825, 1831, 1837, 1843, 1850, 1856, 1863, 1866, 1867, 1873, 1880, 1881, 1892, 1899], "phy": [7, 864], "del": [7, 26, 31, 32, 1345, 1379, 1413, 1475, 1592, 1654], "purpos": [7, 16, 21, 22, 30, 32, 34, 818], "fickiandiffus": [7, 8, 10, 12, 23, 35, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "fd": [7, 10, 12, 23, 35], "requir": [7, 9, 12, 13, 14, 16, 18, 19, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 124, 590, 638, 660, 824, 854, 908, 924, 928, 974, 983, 1013, 1051, 1089, 1129, 1168, 1207, 1216, 1245, 1283, 1312, 1344, 1378, 1412, 1442, 1474, 1484, 1503, 1531, 1559, 1591, 1621, 1653, 1683, 1711, 1736], "pretti": [7, 9, 31, 607, 1918, 1921], "much": [7, 10, 21, 24, 26, 29, 30, 31, 33, 37, 1915], "everi": [7, 16, 17, 28, 30, 31, 32, 37, 1322, 1356, 1390, 1452, 1569, 1631, 1903, 1904], "specifi": [7, 19, 21, 23, 30, 31, 32, 34, 45, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 77, 84, 85, 86, 89, 91, 92, 94, 104, 111, 112, 113, 117, 121, 122, 123, 124, 126, 131, 137, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 159, 170, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 192, 198, 202, 209, 210, 211, 215, 219, 220, 221, 222, 224, 235, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 257, 268, 275, 276, 277, 280, 282, 283, 284, 285, 286, 287, 288, 290, 301, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 323, 334, 341, 342, 343, 346, 348, 350, 351, 353, 354, 355, 357, 368, 375, 376, 377, 380, 382, 384, 385, 386, 387, 388, 390, 401, 408, 409, 410, 413, 415, 417, 418, 419, 420, 421, 423, 428, 434, 441, 442, 443, 446, 448, 450, 451, 452, 453, 454, 456, 467, 474, 475, 476, 479, 481, 482, 483, 484, 485, 486, 488, 500, 507, 508, 509, 512, 514, 517, 518, 520, 529, 536, 537, 538, 541, 544, 545, 547, 576, 583, 584, 585, 588, 590, 592, 594, 600, 601, 602, 603, 604, 605, 606, 638, 649, 652, 653, 660, 663, 664, 668, 741, 742, 746, 749, 750, 797, 799, 800, 823, 832, 835, 875, 876, 901, 906, 944, 945, 950, 951, 952, 953, 956, 957, 960, 962, 966, 968, 969, 972, 974, 976, 978, 983, 989, 990, 991, 992, 995, 996, 999, 1001, 1005, 1007, 1008, 1011, 1013, 1015, 1017, 1022, 1027, 1028, 1029, 1030, 1033, 1034, 1037, 1039, 1043, 1045, 1046, 1049, 1051, 1053, 1055, 1060, 1065, 1066, 1067, 1068, 1071, 1072, 1075, 1077, 1081, 1083, 1084, 1087, 1089, 1091, 1093, 1098, 1103, 1104, 1105, 1106, 1109, 1110, 1112, 1115, 1117, 1121, 1123, 1124, 1127, 1129, 1131, 1133, 1138, 1144, 1145, 1146, 1147, 1150, 1151, 1154, 1156, 1160, 1162, 1163, 1166, 1168, 1170, 1172, 1177, 1178, 1183, 1184, 1185, 1186, 1189, 1190, 1193, 1195, 1199, 1201, 1202, 1205, 1207, 1209, 1211, 1216, 1221, 1222, 1223, 1224, 1227, 1228, 1231, 1233, 1237, 1239, 1240, 1243, 1245, 1247, 1249, 1254, 1259, 1260, 1261, 1262, 1265, 1266, 1269, 1271, 1275, 1277, 1278, 1281, 1283, 1285, 1287, 1298, 1305, 1306, 1307, 1310, 1312, 1314, 1316, 1328, 1333, 1337, 1338, 1339, 1342, 1344, 1347, 1349, 1354, 1362, 1367, 1371, 1372, 1373, 1376, 1378, 1381, 1383, 1388, 1396, 1401, 1405, 1406, 1407, 1410, 1412, 1415, 1417, 1422, 1428, 1435, 1436, 1437, 1440, 1442, 1444, 1446, 1458, 1463, 1467, 1468, 1469, 1472, 1474, 1477, 1479, 1484, 1489, 1496, 1497, 1498, 1501, 1503, 1505, 1507, 1517, 1524, 1525, 1526, 1529, 1531, 1533, 1535, 1545, 1552, 1553, 1554, 1557, 1559, 1561, 1563, 1575, 1580, 1584, 1585, 1586, 1589, 1591, 1594, 1596, 1601, 1607, 1614, 1615, 1616, 1619, 1621, 1623, 1625, 1637, 1642, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1663, 1669, 1676, 1677, 1678, 1681, 1683, 1685, 1687, 1710, 1713, 1721, 1725, 1726, 1728, 1729, 1735, 1737, 1746, 1774, 1881, 1888, 1916, 1917], "c_in": [7, 8], "c_out": [7, 8], "attach": [7, 10, 16, 26, 29, 31, 32, 656, 741, 746, 748, 749, 750, 797, 798, 799, 800, 823, 827, 828, 832, 835, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 1512, 1751, 1903, 1904], "know": [7, 9, 14, 16, 19, 24, 26, 27, 28, 29, 30, 32, 33, 34, 37], "take": [7, 24, 26, 28, 30, 32, 197, 1900], "interpol": [7, 33, 35, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 504, 533, 560, 580, 909, 923, 963, 1002, 1040, 1078, 1118, 1157, 1196, 1234, 1272, 1302, 1334, 1368, 1402, 1432, 1464, 1493, 1521, 1549, 1581, 1611, 1643, 1673], "pc": [7, 9, 12, 15, 32, 34, 854, 863, 884, 888, 890, 895, 899, 900, 902, 928, 1917], "tc": [7, 32, 854, 858, 859, 863, 870, 884, 891, 894, 895, 899, 900, 902], "interpolate_data": [7, 33], "size_bi": [7, 8, 27, 1916, 1917], "markers": [7, 8, 19, 27, 29, 1917, 1922], "400": [7, 27, 30], "linewidth": [7, 19, 27, 1916], "_": [7, 8, 17, 24, 34, 1916, 1917], "axi": [7, 8, 9, 30, 33, 625, 648, 827, 923, 1710, 1716, 1728, 1737, 1743, 1748, 1749, 1917], "off": [7, 8, 19, 34, 854, 1749], "fick": [7, 21, 24, 131, 716], "shown": [7, 9, 11, 17, 22, 23, 24, 27, 28, 29, 31, 33, 34, 35, 1916, 1917], "n_a": [7, 21, 716], "molar": [7, 858, 860, 865], "flow": [7, 10, 12, 13, 15, 17, 19, 21, 24, 28, 29, 33, 295, 731, 906, 914, 921], "go": [7, 9, 14, 15, 24, 26, 30, 31], "give": [7, 24, 26, 28, 29, 33, 61, 91, 121, 153, 186, 219, 220, 222, 251, 284, 317, 350, 384, 417, 450, 483, 544, 804, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260, 1712, 1750, 1838, 1890], "mole": [7, 858, 867, 869, 873, 876, 877, 878, 901, 1322, 1325, 1333, 1354, 1356, 1359, 1367, 1388, 1390, 1393, 1401, 1422, 1452, 1455, 1463, 1569, 1572, 1580, 1601, 1631, 1634, 1642, 1663], "per": [7, 9, 861, 879, 885, 892, 896, 903, 921], "rate_inlet": 7, "5e": [7, 16, 27, 30, 33, 924, 925], "mol": [7, 857, 859, 860, 865, 870, 879, 881, 888, 890, 891, 899, 900, 902, 930, 931], "88846e": 7, "d_eff": [7, 8], "6e": 7, "776925e": 7, "measur": [7, 8], "varepsilon": 7, "But": [7, 31, 32], "pleas": [7, 8, 36], "v_p": 7, "v_t": 7, "v_bulk": 7, "prod": 7, "429901e": 7, "02": [7, 198], "d_ab": 7, "270571e": 7, "00": [7, 8], "ratio": [8, 13, 24, 516, 707, 717, 722, 732, 763, 820, 925], "conducit": 8, "pure": [8, 28, 33, 328, 854, 859, 861, 884, 885, 888, 890, 891, 892, 894, 895, 896, 899, 900, 902, 903, 1322, 1356, 1390, 1452, 1569, 1631], "brine": 8, "sigma_": 8, "factior": 8, "299e": 8, "diff": [8, 30], "colour": [8, 35], "media": [8, 9, 36, 908, 921], "research": [8, 36, 921], "process": [8, 9, 10, 13, 16, 21, 23, 26, 30, 31, 33, 495, 572, 636, 746, 797, 823, 904, 906, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1712, 1750], "substitut": [8, 24, 1699, 1760, 1761, 1783], "anoth": [8, 11, 12, 15, 19, 21, 26, 27, 28, 29, 31, 32, 34, 624, 854, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260, 1325, 1359, 1393, 1455, 1572, 1634, 1866, 1869, 1871, 1872, 1876], "electron": [8, 24, 229, 930, 931], "analag": 8, "sigma": [8, 9, 21, 858, 863, 876, 883, 901, 909, 925, 1333, 1367, 1401, 1463, 1580, 1642], "respect": [8, 24, 28, 32, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 653, 827, 930, 931, 961, 1000, 1038, 1076, 1098, 1116, 1155, 1194, 1232, 1254, 1270, 1301, 1332, 1366, 1400, 1431, 1462, 1492, 1520, 1548, 1579, 1610, 1641, 1672, 1748, 1906, 1915], "pai": 8, "attent": 8, "mai": [8, 9, 11, 18, 21, 26, 28, 29, 30, 31, 32, 36, 61, 91, 121, 122, 124, 153, 186, 219, 220, 222, 251, 284, 317, 350, 384, 417, 450, 483, 495, 514, 544, 572, 636, 660, 741, 747, 749, 799, 832, 946, 985, 1023, 1060, 1061, 1098, 1099, 1140, 1179, 1217, 1254, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1728, 1729, 1747], "underestim": [8, 11], "r": [8, 9, 11, 12, 13, 27, 33, 34, 37, 599, 763, 764, 908, 909, 925, 932, 934, 935, 936, 937, 938, 939, 955, 994, 1032, 1060, 1070, 1108, 1149, 1188, 1226, 1254, 1264, 1729, 1737, 1747, 1748, 1916, 1917, 1920], "53": [8, 19, 27, 34], "10089643222": 8, "porosimetri": [9, 34, 763], "mip": [9, 15, 34], "common": [9, 19, 26, 27, 28, 29, 30, 31, 953, 956, 957, 967, 992, 995, 996, 1006, 1030, 1033, 1034, 1044, 1068, 1071, 1072, 1082, 1106, 1109, 1110, 1122, 1147, 1150, 1151, 1161, 1186, 1189, 1190, 1200, 1224, 1227, 1228, 1238, 1262, 1265, 1266, 1276, 1721, 1725, 1726, 1751], "techniqu": 9, "There": [9, 18, 26, 27, 29, 30, 31, 32, 33, 649, 807], "why": [9, 16, 19, 26], "pnm": [9, 11, 21, 33, 34, 816, 1888, 1893, 1894], "accur": [9, 983], "univers": [9, 32], "interpret": [9, 26, 652, 933, 1737], "bundl": 9, "tube": [9, 33, 35, 764, 908, 909, 921, 924], "neglect": [9, 11, 34], "shield": [9, 27], "when": [9, 10, 17, 19, 23, 26, 28, 29, 30, 31, 32, 34, 35, 52, 61, 84, 91, 111, 121, 144, 153, 177, 186, 209, 219, 242, 251, 262, 275, 284, 308, 317, 341, 350, 375, 384, 408, 417, 441, 450, 474, 483, 495, 507, 536, 544, 572, 583, 601, 636, 664, 744, 747, 772, 795, 906, 923, 927, 946, 966, 985, 1005, 1023, 1043, 1061, 1081, 1099, 1121, 1140, 1160, 1179, 1199, 1217, 1237, 1255, 1275, 1294, 1305, 1323, 1337, 1357, 1371, 1391, 1405, 1424, 1435, 1453, 1467, 1485, 1496, 1513, 1524, 1541, 1552, 1570, 1584, 1603, 1614, 1632, 1646, 1665, 1676, 1700, 1727, 1751, 1761, 1783, 1835, 1894, 1903, 1904], "bodi": [9, 19, 27, 30, 33, 734, 735, 736, 737, 738, 739, 744, 752, 753, 754, 755, 756, 757, 758, 760, 761, 809, 810, 811, 814, 928, 944, 1903, 1904], "behind": [9, 18, 23, 26, 29, 32, 1512], "ones": [9, 26, 27, 29, 65, 156, 189, 254, 287, 320, 354, 387, 420, 453, 854, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260], "nuanc": 9, "usual": [9, 10, 14, 18, 24, 28, 31], "becaus": [9, 10, 11, 19, 24, 26, 28, 29, 30, 31, 32, 33, 34, 742, 747, 956, 957, 995, 996, 1033, 1034, 1071, 1072, 1109, 1110, 1150, 1151, 1189, 1190, 1227, 1228, 1265, 1266, 1725, 1726, 1838], "quit": [9, 10, 14, 27, 29, 30, 34, 747, 945, 984, 1060, 1139, 1178, 1254], "bit": [9, 27, 31, 33, 34], "difficult": [9, 37, 945, 984, 1139, 1178], "accuraci": [9, 10, 861, 885, 892, 896, 903], "justifi": 9, "often": [9, 26, 28, 29, 31, 32, 33], "wish": [9, 29, 30, 32, 1728], "specif": [9, 23, 24, 26, 29, 30, 31, 34, 41, 75, 102, 120, 133, 166, 200, 231, 264, 297, 330, 364, 397, 430, 463, 514, 527, 652, 824, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260, 1709, 1728, 1743, 1778, 1780, 1835], "involv": [9, 24, 34], "successfulli": 9, "metric": [9, 11], "better": [9, 11, 13, 32, 35], "experiment": [9, 32, 34, 930, 931], "iter": [9, 23, 30, 39, 46, 71, 73, 78, 97, 99, 105, 129, 131, 138, 162, 164, 171, 195, 197, 203, 227, 229, 236, 260, 262, 269, 293, 295, 302, 326, 328, 335, 360, 362, 369, 393, 395, 402, 426, 428, 435, 459, 461, 468, 491, 501, 523, 525, 530, 550, 557, 569, 577, 597, 611, 618, 626, 633, 672, 673, 674, 675, 676, 677, 678, 747, 958, 981, 997, 1020, 1035, 1058, 1073, 1096, 1098, 1113, 1136, 1152, 1175, 1191, 1214, 1229, 1252, 1254, 1267, 1290, 1299, 1319, 1329, 1352, 1363, 1386, 1397, 1420, 1429, 1449, 1459, 1482, 1490, 1510, 1518, 1538, 1546, 1566, 1576, 1599, 1608, 1628, 1638, 1661, 1670, 1690, 1697, 1700, 1703, 1788, 1795, 1800, 1809, 1814, 1821, 1823, 1828, 1840, 1848, 1853, 1860, 1861, 1884, 1896], "until": [9, 18, 34, 747, 1776], "match": [9, 15, 22, 24, 28, 34, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1512, 1746], "panda": [9, 28, 657, 665], "pd": [9, 28], "stat": [9, 746, 748, 750, 797, 798, 800, 823, 828, 835], "w": [9, 17, 18, 19, 36, 648, 878, 891, 892, 921], "loglevel": [9, 11, 13, 24], "character": 9, "structur": [9, 26, 31, 34, 197, 648, 663, 742, 983], "reservoir": [9, 1711], "rock": [9, 648], "aid": 9, "serial": 9, "section": [9, 22, 23, 24, 28, 30, 33, 648, 695, 697, 735, 736, 737, 738, 739, 742, 752, 754, 768, 769, 770, 787, 788, 789, 790, 795, 809, 906, 914, 916, 917, 1730, 1760, 1761, 1763, 1765, 1767, 1774, 1778, 1780], "analysi": [9, 35, 648, 742], "tsakirogl": 9, "payatak": 9, "advanc": [9, 908, 924, 925], "resourc": [9, 26, 921], "23": [9, 10, 27, 31, 34], "2000": 9, "773": 9, "789": 9, "figur": [9, 11, 12, 13, 24, 31, 1916, 1917, 1919], "graph": [9, 30, 32, 623, 624, 625, 649, 656, 847, 950, 951, 960, 989, 990, 999, 1027, 1028, 1037, 1065, 1066, 1075, 1103, 1104, 1115, 1144, 1145, 1154, 1183, 1184, 1193, 1221, 1222, 1231, 1259, 1260, 1269, 1919], "digit": 9, "sampl": [9, 10, 1916, 1917], "df": 9, "read_csv": 9, "csv": [9, 646, 654, 662], "pa": [9, 15, 22, 32, 34, 857, 863, 864, 865, 884, 888, 890, 895, 899, 900, 902, 903], "s_hg": 9, "12056": 9, "00122": 9, "15162": 9, "00368": 9, "17630": 9, "00741": 9, "23693": 9, "00860": 9, "30708": 9, "01607": 9, "36799": 9, "01979": 9, "44633": 9, "02351": 9, "49752": 9, "02599": 9, "52522": 9, "03474": 9, "55439": 9, "05476": 9, "55449": 9, "05473": 9, "57820": 9, "06977": 9, "59569": 9, "09980": 9, "62089": 9, "16613": 9, "63563": 9, "22244": 9, "65092": 9, "25123": 9, "66585": 9, "37262": 9, "68232": 9, "34759": 9, "69833": 9, "42518": 9, "19": [9, 10, 19, 27, 28, 31, 33, 34], "71069": 9, "47100": 9, "20": [9, 10, 19, 27, 28, 30, 31, 34, 930, 931, 983, 1919], "71085": 9, "45271": 9, "21": [9, 10, 11, 19, 27, 28, 31, 32, 34], "76355": 9, "54039": 9, "22": [9, 10, 27, 31, 34, 903], "76802": 9, "54156": 9, "101289": 9, "60534": 9, "24": [9, 10, 27, 31, 34, 930, 931], "117732": 9, "63785": 9, "135188": 9, "67913": 9, "160014": 9, "70663": 9, "27": [9, 27, 34, 956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265], "203630": 9, "73037": 9, "222870": 9, "74787": 9, "29": [9, 27, 34], "267020": 9, "76787": 9, "30": [9, 19, 26, 27, 34], "348080": 9, "79660": 9, "31": [9, 19, 27, 32, 34, 681], "437710": 9, "80783": 9, "32": [9, 19, 26, 27, 34], "696280": 9, "83528": 9, "33": [9, 27, 34], "1148210": 9, "87899": 9, "34": [9, 27, 34], "1860000": 9, "90268": 9, "35": [9, 27, 34], "2352900": 9, "92016": 9, "3975500": 9, "94885": 9, "37": [9, 27, 30, 34], "5214900": 9, "95882": 9, "38": [9, 27, 34, 763], "7353000": 9, "98253": 9, "39": [9, 34], "9821400": 9, "99375": 9, "11698800": 9, "99622": 9, "41": [9, 27, 34], "12884400": 9, "99620": 9, "42": [9, 27, 34], "15440700": 9, "99617": 9, "17108000": 9, "99865": 9, "45": [9, 26, 27, 34, 1749], "point": [9, 12, 13, 16, 19, 27, 28, 29, 30, 31, 32, 33, 35, 37, 120, 349, 383, 416, 449, 543, 644, 651, 746, 748, 750, 772, 797, 798, 800, 812, 820, 823, 825, 828, 834, 835, 839, 848, 852, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 928, 933, 939, 941, 942, 1060, 1098, 1254, 1715, 1718, 1728, 1729, 1734, 1736, 1737, 1747, 1749], "normal": [9, 11, 30, 31, 32, 37, 40, 61, 74, 91, 101, 121, 132, 153, 165, 186, 199, 219, 230, 251, 263, 284, 296, 317, 329, 350, 363, 384, 396, 417, 429, 450, 462, 483, 495, 498, 526, 544, 555, 572, 574, 636, 742, 854, 861, 885, 892, 894, 903, 946, 948, 985, 987, 1023, 1025, 1061, 1063, 1099, 1101, 1140, 1142, 1179, 1181, 1217, 1219, 1255, 1257, 1294, 1296, 1323, 1326, 1357, 1360, 1391, 1394, 1424, 1426, 1453, 1456, 1485, 1487, 1513, 1515, 1541, 1543, 1570, 1573, 1603, 1605, 1632, 1635, 1665, 1667, 1711, 1911, 1917], "befor": [9, 13, 29, 30, 31, 32, 34, 35, 62, 92, 123, 154, 187, 221, 252, 285, 318, 351, 385, 418, 451, 484, 517, 545, 590, 592, 605, 624, 638, 854, 923, 974, 976, 1013, 1015, 1051, 1053, 1089, 1091, 1129, 1131, 1168, 1170, 1207, 1209, 1245, 1247, 1283, 1285, 1312, 1314, 1344, 1347, 1378, 1381, 1412, 1415, 1442, 1444, 1474, 1477, 1503, 1505, 1531, 1533, 1559, 1561, 1591, 1594, 1621, 1623, 1653, 1656, 1683, 1685, 1751, 1830, 1842, 1855], "good": [9, 10, 17, 26, 27, 30], "idea": [9, 10, 26, 27, 28], "convert": [9, 21, 22, 29, 30, 34, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 457, 489, 521, 548, 567, 595, 656, 657, 665, 742, 858, 873, 879, 933, 954, 979, 993, 1018, 1031, 1056, 1069, 1094, 1107, 1134, 1148, 1173, 1187, 1212, 1225, 1250, 1263, 1288, 1317, 1350, 1384, 1418, 1447, 1480, 1508, 1536, 1564, 1597, 1626, 1659, 1688, 1700, 1715, 1722, 1729, 1754, 1757, 1900, 1909, 1910, 1911, 1912], "expect": [9, 16, 17, 27, 30, 32, 1879], "co": [9, 824, 909, 925], "deg2rad": 9, "140": [9, 27, 34, 684], "semilogx": [9, 15], "1e6": 9, "um": [9, 30], "aim": [9, 33], "futur": [9, 17, 960, 962, 999, 1001, 1037, 1039, 1075, 1077, 1115, 1117, 1154, 1156, 1193, 1195, 1216, 1231, 1233, 1269, 1271], "sake": [9, 24, 28], "close": [9, 30, 32, 33, 660, 664, 927], "30e": 9, "0x7fe3170903b0": 9, "3375": 9, "9450": 9, "225": [9, 34], "zmin": [9, 15, 27, 30], "zmax": [9, 15, 27, 30], "1178": 9, "2352": 9, "bottom": [9, 15, 18, 19, 27, 29, 30, 984, 1139, 1743], "top": [9, 15, 18, 26, 27, 28, 30, 31, 984, 1139, 1743, 1749], "topolog": [9, 30, 32, 836, 842, 843, 844, 1216, 1744, 1899, 1916, 1917], "shine": 9, "light": 9, "them": [9, 14, 16, 17, 19, 23, 24, 26, 27, 28, 29, 31, 32, 34, 35, 495, 572, 636, 946, 985, 1023, 1061, 1098, 1099, 1140, 1179, 1217, 1254, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1710, 1713, 1738, 1743, 1750, 1751, 1834, 1846, 1859], "conveni": [9, 28, 29, 31, 32, 33, 34, 61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 514, 544, 930, 931, 1737], "pre": [9, 22, 23, 28, 30, 32, 34, 716, 731], "hand": [9, 21, 24, 26, 27, 29, 30, 32, 33, 34, 39, 131, 164, 229, 262, 295, 328, 362, 395, 428, 461, 1700], "possibl": [9, 18, 23, 26, 27, 28, 29, 30, 31, 32, 37, 61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 544, 624, 812, 813, 956, 957, 995, 996, 1033, 1034, 1060, 1071, 1072, 1109, 1110, 1150, 1151, 1189, 1190, 1227, 1228, 1254, 1265, 1266, 1700, 1714, 1725, 1726, 1746, 1835, 1916], "produc": [9, 15, 30, 33, 40, 74, 101, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 462, 495, 498, 526, 555, 572, 574, 636, 748, 750, 798, 800, 828, 835, 930, 931, 946, 948, 985, 987, 1023, 1025, 1060, 1061, 1063, 1099, 1101, 1140, 1142, 1179, 1181, 1217, 1219, 1254, 1255, 1257, 1294, 1296, 1323, 1326, 1357, 1360, 1391, 1394, 1424, 1426, 1453, 1456, 1484, 1485, 1487, 1513, 1515, 1541, 1543, 1570, 1573, 1603, 1605, 1632, 1635, 1665, 1667, 1754, 1757, 1888, 1893, 1916, 1917], "directli": [9, 10, 18, 23, 24, 26, 28, 29, 30, 31, 32, 34, 857, 858, 859, 860, 861, 863, 864, 865, 868, 870, 879, 881, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 899, 900, 902, 903, 945, 984, 1139, 1178, 1254, 1726, 1749], "arg": [9, 28, 39, 55, 73, 87, 99, 115, 131, 147, 164, 180, 197, 213, 229, 245, 262, 278, 295, 311, 328, 344, 362, 378, 395, 411, 428, 444, 461, 477, 494, 510, 525, 539, 554, 563, 571, 586, 620, 635, 944, 970, 983, 1009, 1022, 1047, 1060, 1085, 1098, 1125, 1138, 1164, 1177, 1203, 1216, 1241, 1254, 1279, 1293, 1308, 1321, 1340, 1355, 1374, 1389, 1408, 1423, 1438, 1451, 1470, 1484, 1499, 1512, 1527, 1540, 1555, 1568, 1587, 1602, 1617, 1630, 1649, 1664, 1679, 1715, 1759, 1762, 1763, 1764, 1766, 1768, 1771, 1773, 1775, 1777, 1779, 1781, 1782, 1784, 1811, 1835, 1847, 1879, 1902], "howev": [9, 11, 12, 13, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 53, 54, 85, 86, 112, 113, 145, 146, 178, 179, 197, 210, 211, 243, 244, 276, 277, 309, 310, 342, 343, 376, 377, 409, 410, 442, 443, 475, 476, 508, 509, 537, 538, 584, 585, 602, 603, 854, 968, 969, 1007, 1008, 1045, 1046, 1083, 1084, 1123, 1124, 1162, 1163, 1201, 1202, 1239, 1240, 1277, 1278, 1306, 1307, 1338, 1339, 1372, 1373, 1406, 1407, 1436, 1437, 1468, 1469, 1497, 1498, 1525, 1526, 1553, 1554, 1585, 1586, 1615, 1616, 1647, 1648, 1677, 1678], "later": [9, 10, 15, 16, 24, 27, 28, 30, 31, 1751], "rand": [9, 16, 21, 23, 30, 32, 746, 748, 750, 797, 798, 800, 823, 824, 828, 835, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260], "mostli": [9, 28, 29, 818, 1711], "long": [9, 16, 26, 28, 30, 31, 69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 457, 489, 521, 548, 567, 595, 824, 839, 950, 955, 979, 989, 994, 1018, 1027, 1032, 1056, 1060, 1065, 1070, 1094, 1103, 1108, 1134, 1144, 1149, 1173, 1183, 1188, 1212, 1221, 1226, 1250, 1259, 1264, 1288, 1317, 1322, 1350, 1356, 1384, 1390, 1418, 1447, 1452, 1480, 1508, 1536, 1564, 1569, 1597, 1626, 1631, 1659, 1688, 1720, 1724], "tail": [9, 16, 30, 741, 749, 799, 832, 1216], "few": [9, 15, 16, 19, 26, 27, 29, 30, 31, 34, 858], "typic": [9, 858, 928, 1879], "dst": 9, "20e": 9, "what": [9, 16, 18, 19, 23, 24, 26, 28, 29, 30, 31, 32, 37, 854, 923, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260, 1743], "frozen": [9, 746, 797, 823], "chose": 9, "decent": [9, 625], "request": [9, 28, 29, 32, 33, 48, 49, 57, 68, 80, 81, 89, 94, 107, 108, 117, 126, 140, 141, 149, 159, 173, 174, 182, 192, 205, 206, 215, 224, 238, 239, 247, 257, 271, 272, 280, 290, 304, 305, 313, 323, 337, 338, 346, 357, 371, 372, 380, 390, 404, 405, 413, 423, 437, 438, 446, 456, 470, 471, 479, 488, 503, 504, 512, 515, 520, 532, 533, 541, 547, 559, 560, 579, 580, 588, 591, 594, 604, 606, 639, 875, 960, 961, 962, 963, 972, 975, 978, 999, 1000, 1001, 1002, 1011, 1014, 1017, 1037, 1038, 1039, 1040, 1049, 1052, 1055, 1075, 1076, 1077, 1078, 1087, 1090, 1093, 1115, 1116, 1117, 1118, 1127, 1130, 1133, 1154, 1155, 1156, 1157, 1166, 1169, 1172, 1193, 1194, 1195, 1196, 1205, 1208, 1211, 1231, 1232, 1233, 1234, 1243, 1246, 1249, 1254, 1269, 1270, 1271, 1272, 1281, 1284, 1287, 1301, 1302, 1310, 1313, 1316, 1331, 1332, 1333, 1334, 1342, 1346, 1349, 1354, 1365, 1366, 1367, 1368, 1376, 1380, 1383, 1388, 1399, 1400, 1401, 1402, 1410, 1414, 1417, 1422, 1431, 1432, 1440, 1443, 1446, 1461, 1462, 1463, 1464, 1472, 1476, 1479, 1492, 1493, 1501, 1504, 1507, 1520, 1521, 1529, 1532, 1535, 1548, 1549, 1557, 1560, 1563, 1578, 1579, 1580, 1581, 1589, 1593, 1596, 1601, 1610, 1611, 1619, 1622, 1625, 1640, 1641, 1642, 1643, 1651, 1655, 1658, 1663, 1672, 1673, 1681, 1684, 1687], "randomli": [9, 30, 1729, 1746], "10000": [9, 12, 748, 750, 798, 800, 828, 835], "tick_param": 9, "labelrot": 9, "nm": [9, 30], "posit": [9, 24, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 807, 1751], "within": [9, 13, 26, 28, 30, 32, 33, 623, 817, 846, 885, 892, 928, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1714, 1729, 1745, 1751], "lastli": [9, 29, 31, 32], "control": [9, 15, 28, 30, 34, 40, 45, 51, 52, 59, 61, 62, 63, 64, 65, 66, 74, 77, 83, 84, 91, 92, 101, 104, 110, 111, 121, 123, 131, 132, 137, 143, 144, 151, 153, 154, 155, 156, 157, 165, 170, 176, 177, 184, 186, 187, 188, 189, 190, 199, 202, 208, 209, 219, 220, 221, 222, 230, 235, 241, 242, 249, 251, 252, 253, 254, 255, 263, 268, 274, 275, 282, 284, 285, 286, 287, 288, 296, 301, 307, 308, 315, 317, 318, 319, 320, 321, 329, 334, 340, 341, 348, 350, 351, 352, 353, 354, 355, 363, 368, 374, 375, 382, 384, 385, 386, 387, 388, 396, 401, 407, 408, 415, 417, 418, 419, 420, 421, 429, 434, 440, 441, 448, 450, 451, 452, 453, 454, 462, 467, 473, 474, 481, 483, 484, 485, 486, 498, 500, 506, 507, 517, 526, 529, 535, 536, 544, 545, 555, 562, 574, 576, 582, 583, 592, 600, 601, 605, 741, 742, 745, 746, 748, 749, 750, 793, 796, 797, 798, 799, 800, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 948, 952, 955, 965, 966, 976, 987, 991, 994, 1004, 1005, 1015, 1025, 1029, 1032, 1042, 1043, 1053, 1063, 1067, 1070, 1080, 1081, 1091, 1101, 1105, 1108, 1120, 1121, 1131, 1142, 1146, 1149, 1159, 1160, 1170, 1181, 1185, 1188, 1198, 1199, 1209, 1219, 1223, 1226, 1236, 1237, 1247, 1257, 1261, 1264, 1274, 1275, 1285, 1296, 1298, 1304, 1305, 1314, 1326, 1328, 1336, 1337, 1347, 1360, 1362, 1370, 1371, 1381, 1394, 1396, 1404, 1405, 1415, 1426, 1428, 1434, 1435, 1444, 1456, 1458, 1466, 1467, 1477, 1487, 1489, 1495, 1496, 1505, 1515, 1517, 1523, 1524, 1533, 1543, 1545, 1551, 1552, 1561, 1573, 1575, 1583, 1584, 1594, 1605, 1607, 1613, 1614, 1623, 1635, 1637, 1645, 1646, 1656, 1667, 1669, 1675, 1676, 1685, 1711, 1713, 1729, 1737, 1747, 1879, 1916, 1917, 1919], "skew": [9, 750, 800, 835], "slighli": 9, "elong": 9, "noth": [9, 29, 100, 1867], "too": [9, 10, 11, 28, 1325, 1359, 1393, 1455, 1572, 1634, 1916], "extrem": [9, 26, 741, 749, 799, 832], "larger": [9, 21, 24, 30, 34], "revisit": [9, 23], "examin": [9, 22], "cdf": 9, "red": [9, 29, 1916, 1917], "ppf": [9, 30, 746, 748, 750, 797, 798, 800, 823, 828, 835], "firstli": 9, "prevent": [9, 17, 30, 32, 741, 749, 799, 832, 1060], "abnorm": [9, 811, 1745], "far": [9, 11, 24, 30, 31, 1737], "out": [9, 12, 13, 21, 24, 26, 28, 29, 30, 32, 33, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 564, 587, 616, 631, 872, 971, 1010, 1048, 1086, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1774, 1793, 1805, 1819, 1831, 1843, 1856, 1892], "end": [9, 10, 11, 24, 28, 29, 30, 33, 716, 731, 741, 749, 772, 799, 812, 813, 832, 850, 854, 906, 1715, 1747, 1756, 1824, 1835, 1836, 1849, 1903, 1904], "choosen": 9, "9999": 9, "seconli": 9, "bewteen": 9, "fractal_nois": 9, "won": [9, 37], "anisotrop": [9, 10], "issu": [9, 10, 19, 667], "current": [9, 18, 19, 23, 27, 32, 35, 39, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 648, 930, 931, 932, 934, 935, 936, 937, 938, 939, 1751, 1838, 1888, 1889, 1893, 1894], "haven": 9, "n": [9, 21, 24, 26, 29, 32, 34, 649, 714, 729, 764, 819, 864, 865, 884, 885, 908, 930, 931, 955, 956, 994, 995, 1032, 1033, 1060, 1070, 1071, 1098, 1108, 1109, 1149, 1150, 1188, 1189, 1226, 1227, 1254, 1264, 1265, 1712, 1715, 1718, 1727, 1728, 1737, 1738, 1750, 1756, 1774], "repeat": [9, 34, 845], "recomput": [9, 30], "depend": [9, 11, 21, 24, 28, 32, 34, 37, 495, 572, 623, 624, 625, 636, 663, 906, 930, 931, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "forth": 9, "leverag": [9, 32], "featur": [9, 16, 17, 18, 23, 26, 28, 29, 30, 31, 37, 620, 648, 923, 1060, 1098, 1254], "ie": [9, 854], "generic_distribut": 9, "accept": [9, 17, 28, 31, 45, 51, 52, 53, 54, 57, 68, 77, 83, 84, 85, 86, 89, 94, 104, 110, 111, 112, 113, 117, 126, 137, 143, 144, 145, 146, 149, 159, 170, 176, 177, 178, 179, 182, 192, 202, 208, 209, 210, 211, 215, 224, 235, 241, 242, 243, 244, 247, 257, 268, 274, 275, 276, 277, 280, 290, 301, 307, 308, 309, 310, 313, 323, 334, 340, 341, 342, 343, 346, 357, 368, 374, 375, 376, 377, 380, 390, 401, 407, 408, 409, 410, 413, 423, 434, 440, 441, 442, 443, 446, 456, 467, 473, 474, 475, 476, 479, 488, 500, 506, 507, 508, 509, 512, 520, 529, 535, 536, 537, 538, 541, 547, 562, 576, 582, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 746, 748, 797, 798, 823, 828, 933, 952, 953, 956, 957, 965, 966, 967, 968, 969, 972, 978, 991, 992, 995, 996, 1004, 1005, 1006, 1007, 1008, 1011, 1017, 1029, 1030, 1033, 1034, 1042, 1043, 1044, 1045, 1046, 1049, 1055, 1067, 1068, 1071, 1072, 1080, 1081, 1082, 1083, 1084, 1087, 1093, 1105, 1106, 1109, 1110, 1120, 1121, 1122, 1123, 1124, 1127, 1133, 1146, 1147, 1150, 1151, 1159, 1160, 1161, 1162, 1163, 1166, 1172, 1185, 1186, 1189, 1190, 1198, 1199, 1200, 1201, 1202, 1205, 1211, 1223, 1224, 1227, 1228, 1236, 1237, 1238, 1239, 1240, 1243, 1249, 1261, 1262, 1265, 1266, 1274, 1275, 1276, 1277, 1278, 1281, 1287, 1298, 1304, 1305, 1306, 1307, 1310, 1316, 1328, 1336, 1337, 1338, 1339, 1342, 1349, 1362, 1370, 1371, 1372, 1373, 1376, 1383, 1396, 1404, 1405, 1406, 1407, 1410, 1417, 1428, 1434, 1435, 1436, 1437, 1440, 1446, 1458, 1466, 1467, 1468, 1469, 1472, 1479, 1489, 1495, 1496, 1497, 1498, 1501, 1507, 1517, 1523, 1524, 1525, 1526, 1529, 1535, 1545, 1551, 1552, 1553, 1554, 1557, 1563, 1575, 1583, 1584, 1585, 1586, 1589, 1596, 1607, 1613, 1614, 1615, 1616, 1619, 1625, 1637, 1645, 1646, 1647, 1648, 1651, 1658, 1669, 1675, 1676, 1677, 1678, 1681, 1687, 1721, 1725, 1726], "initi": [9, 11, 17, 18, 23, 30, 33, 60, 152, 185, 250, 283, 316, 349, 383, 416, 449, 482, 543, 644], "truncat": [9, 30, 695, 700, 706, 708, 709, 715, 721, 723, 724, 730], "98": [9, 34], "func": [9, 746, 748, 750, 797, 798, 800, 823, 824, 828, 835, 1760], "strictli": 9, "pictur": 9, "simpler": 9, "d1": 9, "d2": 9, "taken": [9, 24, 30, 32, 746, 797, 807, 823, 1568, 1630, 1715], "those": [9, 16, 29, 31, 35, 349, 383, 416, 449, 514, 543, 652, 742, 745, 793, 796, 821, 822, 953, 956, 957, 967, 992, 995, 996, 1006, 1030, 1033, 1034, 1044, 1068, 1071, 1072, 1082, 1106, 1109, 1110, 1122, 1147, 1150, 1151, 1161, 1186, 1189, 1190, 1200, 1224, 1227, 1228, 1238, 1262, 1265, 1266, 1276, 1719, 1721, 1725, 1726], "desir": [9, 16, 28, 29, 30, 31, 32, 495, 572, 623, 636, 653, 655, 659, 660, 664, 666, 668, 875, 946, 950, 951, 985, 989, 990, 1022, 1023, 1027, 1028, 1060, 1061, 1065, 1066, 1099, 1103, 1104, 1140, 1144, 1145, 1179, 1183, 1184, 1217, 1221, 1222, 1254, 1255, 1259, 1260, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1746, 1916, 1917], "same": [9, 12, 13, 17, 18, 21, 24, 26, 27, 29, 30, 31, 32, 33, 34, 61, 64, 66, 91, 121, 153, 155, 157, 186, 188, 190, 219, 220, 222, 251, 253, 255, 284, 286, 288, 317, 319, 321, 350, 353, 355, 384, 386, 388, 417, 419, 421, 450, 452, 454, 483, 485, 486, 496, 544, 573, 637, 665, 666, 744, 795, 812, 813, 850, 858, 908, 924, 930, 931, 947, 954, 967, 986, 993, 1006, 1022, 1024, 1031, 1044, 1062, 1069, 1082, 1100, 1107, 1122, 1141, 1148, 1161, 1180, 1187, 1200, 1218, 1225, 1238, 1256, 1263, 1276, 1295, 1324, 1358, 1392, 1425, 1454, 1486, 1514, 1542, 1571, 1604, 1633, 1666, 1712, 1713, 1716, 1720, 1722, 1735, 1737, 1738, 1750, 1848, 1861, 1879, 1900, 1919], "diameter_1": 9, "And": [9, 10, 16, 21, 23, 26, 27, 28, 30, 31, 33], "becom": [9, 21, 24, 29, 31, 927, 1903, 1904], "offici": [9, 26, 37, 493], "togeth": [9, 19, 23, 30, 31, 33, 34, 648], "densiti": [9, 15, 30, 32, 681, 684, 685, 857, 858, 859, 860, 861, 883, 930, 931], "true": [9, 11, 17, 23, 26, 27, 28, 29, 30, 31, 34, 57, 63, 68, 69, 70, 89, 94, 95, 96, 100, 117, 126, 127, 128, 149, 159, 160, 161, 182, 192, 193, 194, 198, 215, 224, 225, 226, 247, 257, 258, 259, 280, 290, 291, 292, 313, 323, 324, 325, 346, 352, 357, 358, 359, 380, 390, 391, 392, 413, 423, 424, 425, 446, 456, 457, 458, 479, 488, 489, 490, 512, 520, 521, 522, 541, 547, 548, 549, 567, 568, 588, 594, 595, 596, 604, 606, 665, 691, 696, 699, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 717, 718, 725, 728, 732, 733, 735, 739, 793, 796, 805, 821, 822, 847, 950, 951, 953, 955, 956, 957, 967, 972, 978, 979, 980, 989, 990, 992, 994, 995, 996, 1006, 1011, 1017, 1018, 1019, 1022, 1027, 1028, 1030, 1032, 1033, 1034, 1044, 1049, 1055, 1056, 1057, 1060, 1065, 1066, 1068, 1070, 1071, 1072, 1082, 1087, 1093, 1094, 1095, 1098, 1103, 1104, 1106, 1108, 1109, 1110, 1122, 1127, 1133, 1134, 1135, 1144, 1145, 1147, 1149, 1150, 1151, 1161, 1166, 1172, 1173, 1174, 1183, 1184, 1186, 1188, 1189, 1190, 1200, 1205, 1211, 1212, 1213, 1221, 1222, 1224, 1226, 1227, 1228, 1238, 1243, 1249, 1250, 1251, 1254, 1259, 1260, 1262, 1264, 1265, 1266, 1276, 1281, 1287, 1288, 1289, 1310, 1316, 1317, 1318, 1325, 1342, 1349, 1350, 1351, 1359, 1376, 1383, 1384, 1385, 1393, 1410, 1417, 1418, 1419, 1440, 1446, 1447, 1448, 1455, 1472, 1479, 1480, 1481, 1501, 1507, 1508, 1509, 1529, 1535, 1536, 1537, 1557, 1563, 1564, 1565, 1572, 1589, 1596, 1597, 1598, 1619, 1625, 1626, 1627, 1634, 1651, 1658, 1659, 1660, 1681, 1687, 1688, 1689, 1712, 1715, 1716, 1717, 1721, 1724, 1725, 1726, 1729, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1746, 1750, 1870, 1898, 1906, 1909, 1910, 1917, 1918], "alpha": [9, 30, 35, 923, 925, 1916, 1917, 1918], "fulli": [9, 33, 34, 37, 927, 1111, 1735], "assumpt": [9, 24, 807], "cube": [9, 11, 674, 693, 707, 722, 744, 776, 1915], "thing": [9, 17, 28, 29, 30, 31, 32, 34, 37, 40, 74, 101, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 462, 498, 526, 555, 574, 948, 987, 1025, 1063, 1101, 1142, 1181, 1219, 1257, 1296, 1326, 1360, 1394, 1426, 1456, 1487, 1515, 1543, 1573, 1605, 1635, 1667], "region": [9, 10, 11, 30, 950, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259, 1916, 1917], "whose": [9, 52, 57, 68, 84, 89, 94, 111, 117, 126, 144, 149, 159, 177, 182, 192, 209, 215, 224, 242, 247, 257, 275, 280, 290, 308, 313, 323, 341, 346, 357, 375, 380, 390, 408, 413, 423, 441, 446, 456, 474, 479, 488, 507, 512, 514, 518, 520, 536, 541, 547, 583, 588, 594, 601, 604, 606, 664, 668, 834, 954, 956, 957, 966, 967, 972, 978, 993, 995, 996, 1005, 1006, 1011, 1017, 1031, 1033, 1034, 1043, 1044, 1049, 1055, 1069, 1071, 1072, 1081, 1082, 1087, 1093, 1107, 1109, 1110, 1111, 1112, 1121, 1122, 1127, 1133, 1148, 1150, 1151, 1160, 1161, 1166, 1172, 1187, 1189, 1190, 1199, 1200, 1205, 1211, 1225, 1227, 1228, 1237, 1238, 1243, 1249, 1263, 1265, 1266, 1275, 1276, 1281, 1287, 1305, 1310, 1316, 1337, 1342, 1349, 1371, 1376, 1383, 1405, 1410, 1417, 1435, 1440, 1446, 1467, 1472, 1479, 1496, 1501, 1507, 1524, 1529, 1535, 1552, 1557, 1563, 1584, 1589, 1596, 1614, 1619, 1625, 1646, 1651, 1658, 1676, 1681, 1687, 1721, 1725, 1726, 1735, 1737, 1746, 1760, 1916, 1917], "twice": 9, "throat_length": [9, 11, 30, 672, 673, 674, 675, 676, 677, 678, 802, 803, 804, 805, 809, 810, 811, 814], "invad": [9, 12, 13, 34, 100, 122, 197, 220, 909, 923, 927, 928, 1724], "tension": [9, 12, 13, 34, 865, 883, 884, 885, 908, 909, 923], "cours": [9, 26, 29, 31, 37], "hg": [9, 15, 34], "calul": 9, "capillari": [9, 12, 15, 34, 212, 763, 764, 904, 908, 909, 921, 923, 924, 925, 928], "washburn": [9, 15, 34, 687, 688, 925, 928], "p_c": [9, 34, 909, 925], "theta": [9, 909, 925], "r_t": [9, 921], "capillary_pressur": [9, 15, 34], "contact": [9, 11, 12, 13, 34, 813, 908, 909, 923], "angl": [9, 12, 13, 34, 908, 909, 923], "while": [9, 17, 18, 26, 27, 28, 32, 34, 39, 62, 73, 92, 99, 123, 131, 154, 164, 187, 197, 221, 229, 252, 262, 285, 295, 318, 328, 351, 362, 385, 395, 418, 428, 451, 461, 484, 517, 525, 545, 592, 605, 930, 931, 976, 1015, 1022, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685], "radiu": [9, 30, 33, 35, 908, 923, 924, 925, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1729, 1737, 1751, 1752, 1753], "setup": [9, 34], "wet": [9, 12, 13, 34, 212, 764, 909, 921, 928], "rarefi": 9, "drain": [9, 34], "non": [9, 12, 13, 21, 23, 28, 29, 34, 212, 848, 909, 928, 944, 950, 951, 960, 962, 983, 989, 990, 999, 1001, 1022, 1027, 1028, 1037, 1039, 1060, 1065, 1066, 1075, 1077, 1098, 1103, 1104, 1115, 1117, 1138, 1144, 1145, 1154, 1156, 1177, 1183, 1184, 1193, 1195, 1216, 1221, 1222, 1231, 1233, 1254, 1259, 1260, 1269, 1271, 1716, 1722], "consid": [9, 17, 21, 23, 24, 26, 28, 29, 30, 31, 32, 33, 124, 222, 747, 754, 812, 813, 841, 846, 914, 956, 957, 995, 996, 1033, 1034, 1071, 1072, 1109, 1110, 1150, 1151, 1189, 1190, 1216, 1227, 1228, 1265, 1266, 1712, 1716, 1720, 1724, 1725, 1728, 1737, 1756, 1785, 1916, 1917], "class": [9, 16, 17, 18, 22, 26, 28, 29, 31, 33, 34, 35, 38, 39, 73, 99, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 493, 494, 525, 552, 554, 571, 599, 607, 620, 635, 640, 641, 642, 643, 649, 652, 653, 921, 943, 944, 983, 1022, 1060, 1098, 1138, 1177, 1216, 1254, 1292, 1293, 1321, 1355, 1389, 1423, 1451, 1484, 1512, 1540, 1568, 1602, 1630, 1664, 1692, 1693, 1695, 1697, 1699, 1701, 1703, 1705, 1707, 1759, 1785, 1797, 1811, 1823, 1835, 1847, 1848, 1860, 1861, 1879, 1894, 1903, 1904, 1905, 1916], "set_inlet_bc": [9, 12, 13, 15, 34], "pc_sim": 9, "pc_curv": [9, 15, 34, 99], "agreement": [9, 10], "surprizingli": 9, "guess": [9, 23, 60, 152, 185, 250, 283, 316, 482], "littl": [9, 27, 28], "shift": [9, 30, 31, 1710], "recal": [9, 23, 30, 33], "took": 9, "readd": 9, "over": [9, 12, 13, 24, 30, 31, 35, 742, 854, 858, 872, 1699, 1879], "old": [9, 26, 1749], "still": [9, 17, 23, 27, 34, 37], "great": [9, 31], "peopl": [9, 26], "year": 9, "autom": [9, 648], "doe": [9, 10, 17, 18, 23, 28, 29, 30, 32, 33, 34, 62, 63, 69, 71, 92, 95, 97, 123, 127, 129, 154, 160, 162, 187, 193, 195, 198, 221, 225, 227, 252, 258, 260, 285, 291, 293, 318, 324, 326, 351, 352, 358, 360, 385, 391, 393, 418, 424, 426, 451, 457, 459, 484, 489, 491, 517, 521, 523, 545, 548, 550, 567, 569, 592, 595, 597, 605, 618, 633, 649, 667, 809, 810, 811, 812, 813, 814, 847, 928, 976, 979, 981, 1015, 1018, 1020, 1053, 1056, 1058, 1060, 1091, 1094, 1096, 1131, 1134, 1136, 1170, 1173, 1175, 1209, 1212, 1214, 1247, 1250, 1252, 1254, 1285, 1288, 1290, 1314, 1317, 1319, 1347, 1350, 1352, 1381, 1384, 1386, 1415, 1418, 1420, 1444, 1447, 1449, 1477, 1480, 1482, 1505, 1508, 1510, 1533, 1536, 1538, 1561, 1564, 1566, 1594, 1597, 1599, 1623, 1626, 1628, 1656, 1659, 1661, 1685, 1688, 1690, 1728, 1748, 1795, 1809, 1821, 1881, 1896, 1899, 1919], "least": [9, 14, 26, 1728, 1736], "moment": [9, 24], "forg": [9, 37], "ahead": 9, "try": [9, 17, 19, 26, 28, 35], "slightli": [9, 24, 28, 34], "higher": [9, 13, 27, 33, 34, 100, 807, 861, 885, 892, 903], "plai": 9, "22e": 9, "improv": [9, 1915], "teh": 9, "nearli": [9, 32], "perfect": [9, 10], "Of": [9, 29, 37], "high": [9, 11, 30, 34, 741, 749, 799, 832, 983, 1325, 1359, 1393, 1455, 1572, 1634], "dicuss": 9, "dual": [9, 27, 28], "microporos": 9, "resolv": [9, 10, 32, 620], "greater": [9, 30, 1254], "besid": 9, "inconsist": 9, "aris": [9, 28], "max": [9, 13, 30, 31, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 504, 533, 560, 580, 745, 793, 796, 821, 822, 923, 924, 925, 963, 1002, 1040, 1078, 1118, 1157, 1196, 1234, 1272, 1302, 1334, 1368, 1402, 1432, 1464, 1493, 1521, 1549, 1581, 1611, 1643, 1673], "079377537427984e": 9, "1974596571409195e": 9, "remedi": [9, 29, 747], "increas": [9, 34, 35, 747, 908, 924, 928, 1915, 1916], "entir": [9, 24, 28, 31, 32, 34, 906, 1735, 1769, 1774], "simpli": [9, 29, 31, 754, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260], "coordin": [9, 27, 28, 29, 30, 35, 649, 694, 695, 696, 697, 698, 699, 708, 709, 710, 711, 712, 713, 723, 724, 725, 727, 728, 765, 766, 772, 777, 779, 780, 781, 782, 944, 983, 1022, 1060, 1098, 1138, 1177, 1216, 1254, 1716, 1718, 1719, 1728, 1729, 1730, 1731, 1734, 1737, 1746, 1747, 1748, 1749, 1751, 1916, 1917, 1920], "681583689206006e": 9, "suitabl": [9, 29, 748, 750, 798, 800, 805, 828, 835, 909, 1721, 1890, 1920], "present": [9, 19, 21, 27, 28, 29, 31, 32, 45, 52, 53, 54, 57, 61, 68, 71, 77, 84, 85, 86, 89, 91, 94, 97, 104, 111, 112, 113, 117, 121, 122, 124, 126, 129, 137, 144, 145, 146, 149, 153, 159, 162, 170, 177, 178, 179, 182, 186, 192, 195, 202, 209, 210, 211, 215, 219, 220, 222, 224, 227, 235, 242, 243, 244, 247, 251, 257, 260, 268, 275, 276, 277, 280, 284, 290, 293, 301, 308, 309, 310, 313, 317, 323, 326, 334, 341, 342, 343, 346, 350, 357, 360, 368, 375, 376, 377, 380, 384, 390, 393, 401, 408, 409, 410, 413, 417, 423, 426, 434, 441, 442, 443, 446, 450, 456, 459, 467, 474, 475, 476, 479, 483, 488, 491, 500, 507, 508, 509, 512, 520, 523, 529, 536, 537, 538, 541, 544, 547, 550, 569, 576, 583, 584, 585, 588, 594, 597, 600, 601, 602, 603, 604, 606, 618, 633, 809, 811, 814, 881, 952, 960, 962, 966, 968, 969, 972, 978, 981, 991, 999, 1001, 1005, 1007, 1008, 1011, 1017, 1020, 1029, 1037, 1039, 1043, 1045, 1046, 1049, 1055, 1058, 1067, 1075, 1077, 1081, 1083, 1084, 1087, 1093, 1096, 1105, 1115, 1117, 1121, 1123, 1124, 1127, 1133, 1136, 1146, 1154, 1156, 1160, 1162, 1163, 1166, 1172, 1175, 1185, 1193, 1195, 1199, 1201, 1202, 1205, 1211, 1214, 1223, 1231, 1233, 1237, 1239, 1240, 1243, 1249, 1252, 1261, 1269, 1271, 1275, 1277, 1278, 1281, 1287, 1290, 1298, 1305, 1306, 1307, 1310, 1316, 1319, 1328, 1337, 1338, 1339, 1342, 1349, 1352, 1362, 1371, 1372, 1373, 1376, 1383, 1386, 1396, 1405, 1406, 1407, 1410, 1417, 1420, 1428, 1435, 1436, 1437, 1440, 1446, 1449, 1458, 1467, 1468, 1469, 1472, 1479, 1482, 1489, 1496, 1497, 1498, 1501, 1507, 1510, 1517, 1524, 1525, 1526, 1529, 1535, 1538, 1545, 1552, 1553, 1554, 1557, 1563, 1566, 1575, 1584, 1585, 1586, 1589, 1596, 1599, 1607, 1614, 1615, 1616, 1619, 1625, 1628, 1637, 1646, 1647, 1648, 1651, 1658, 1661, 1669, 1676, 1677, 1678, 1681, 1687, 1690, 1795, 1809, 1821, 1829, 1832, 1841, 1844, 1854, 1857, 1862, 1894, 1896], "50e": [9, 30], "15258430635887843": 9, "apart": 9, "perhap": [9, 32, 854], "48": [9, 27, 34], "imag": [10, 11, 19, 24, 27, 29, 30, 35, 648, 742, 950, 989, 1022, 1027, 1065, 1103, 1144, 1183, 1221, 1259, 1752, 1753, 1915], "binar": 10, "open": [10, 18, 35, 36, 37, 666, 930, 931, 1720, 1835, 1879, 1888], "pathlib": [10, 1888, 1893], "modulenotfounderror": [10, 11, 35], "traceback": [10, 11], "recent": [10, 11, 1060, 1254], "No": [10, 11, 28, 29, 1713], "name": [10, 11, 12, 13, 16, 18, 26, 27, 30, 31, 32, 35, 37, 39, 58, 61, 65, 73, 90, 91, 99, 118, 121, 131, 150, 153, 156, 164, 183, 186, 189, 197, 216, 219, 229, 248, 251, 254, 262, 281, 284, 287, 295, 314, 317, 320, 328, 347, 350, 354, 362, 381, 384, 387, 395, 414, 417, 420, 428, 447, 450, 453, 461, 480, 483, 494, 495, 513, 514, 515, 525, 542, 544, 554, 565, 571, 572, 589, 591, 607, 636, 639, 647, 649, 652, 655, 660, 662, 663, 666, 667, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 744, 746, 747, 748, 750, 752, 754, 757, 758, 759, 760, 761, 764, 768, 769, 770, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 795, 797, 798, 800, 802, 803, 804, 805, 809, 810, 811, 812, 813, 814, 823, 828, 831, 835, 854, 857, 858, 859, 860, 861, 863, 864, 865, 868, 870, 875, 879, 881, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 899, 900, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 928, 939, 941, 942, 944, 946, 973, 975, 983, 985, 1012, 1014, 1022, 1023, 1050, 1052, 1060, 1061, 1088, 1090, 1098, 1099, 1128, 1130, 1138, 1140, 1167, 1169, 1177, 1179, 1206, 1208, 1216, 1217, 1244, 1246, 1254, 1255, 1282, 1284, 1293, 1294, 1311, 1313, 1321, 1322, 1323, 1331, 1343, 1345, 1346, 1354, 1355, 1356, 1357, 1365, 1377, 1379, 1380, 1388, 1389, 1390, 1391, 1399, 1411, 1413, 1414, 1422, 1423, 1424, 1441, 1443, 1451, 1452, 1453, 1461, 1473, 1475, 1476, 1484, 1485, 1502, 1504, 1512, 1513, 1530, 1532, 1540, 1541, 1558, 1560, 1568, 1569, 1570, 1578, 1590, 1592, 1593, 1601, 1602, 1603, 1620, 1622, 1630, 1631, 1632, 1640, 1652, 1654, 1655, 1663, 1664, 1665, 1682, 1684, 1751, 1763, 1835, 1838, 1879, 1883, 1888, 1890, 1893, 1899, 1900, 1908, 1916, 1917], "load": [10, 18, 646, 647, 648, 650, 651, 652, 1888, 1889, 1894], "berea": 10, "sandston": 10, "getcwd": [10, 35], "test": [10, 14, 24, 26, 28, 818, 854, 1902], "fixtur": 10, "berea_100_to_300": 10, "npz": 10, "im": [10, 11, 27, 29, 944, 951, 983, 990, 1022, 1028, 1060, 1066, 1098, 1104, 1138, 1145, 1177, 1184, 1216, 1222, 1254, 1260, 1752, 1753, 1915], "meta": 10, "resolut": [10, 648], "345e": 10, "kx": 10, "1360": 10, "ky": 10, "1304": 10, "kz": 10, "1193": 10, "kave": 10, "1286": 10, "fx": 10, "fy": 10, "fz": 10, "fave": 10, "08": [10, 32, 681, 684, 1697, 1699, 1703, 1705], "snow2": [10, 11], "snow": [10, 11], "voxel_s": [10, 648], "boundary_width": [10, 11], "parallel": [10, 1699], "detail": [10, 13, 16, 24, 26, 27, 28, 30, 31, 32, 33, 35, 495, 572, 636, 650, 908, 924, 930, 931, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1254, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1720], "wed": 10, "nov": 10, "54": [10, 24, 27, 32, 34, 35], "2023": 10, "item": [10, 17, 18, 26, 29, 30, 32, 197, 609, 621, 923, 932, 934, 935, 936, 937, 938, 939, 1325, 1359, 1393, 1455, 1572, 1634, 1765, 1767, 1778, 1780, 1786, 1798, 1811, 1812, 1823, 1825, 1831, 1834, 1837, 1843, 1846, 1850, 1856, 1859, 1862, 1880, 1903, 1904], "206": [10, 34], "200": [10, 26, 27, 34, 957, 996, 1034, 1072, 1110, 1151, 1190, 1228, 1266], "io": [10, 11, 27, 35, 1894], "network_from_porespi": [10, 11], "inspect": [10, 19, 21, 24, 27, 28, 30, 31, 32, 624, 1216, 1916, 1917], "0x183be2404f0": 10, "2510": 10, "1420": 10, "region_label": 10, "region_volum": 10, "equivalent_diamet": 10, "local_peak": 10, "global_peak": 10, "geometric_centroid": 10, "inscribed_diamet": [10, 11], "extended_diamet": 10, "total_length": 10, "direct_length": 10, "perimet": [10, 763, 764, 788, 789, 790, 804, 1747], "surface_area": [10, 754, 803], "103": [10, 34], "77": [10, 27, 34], "opinion": 10, "decis": [10, 29], "version": [10, 14, 19, 26, 29, 30, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 506, 535, 562, 582, 858, 894, 965, 1004, 1042, 1080, 1120, 1159, 1198, 1236, 1274, 1304, 1336, 1370, 1404, 1434, 1466, 1495, 1523, 1551, 1583, 1613, 1645, 1675, 1762, 1764, 1766, 1768, 1771, 1773, 1775, 1777, 1779, 1781, 1782, 1784, 1838], "made": [10, 29, 31, 32, 36, 100, 983, 1748, 1749], "pick": 10, "onc": [10, 17, 26, 30, 32, 33, 37, 496, 573, 637, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1324, 1358, 1392, 1425, 1454, 1486, 1514, 1542, 1571, 1604, 1633, 1666, 1729, 1834, 1846, 1859], "decid": 10, "impact": [10, 34, 131], "pyramids_and_cuboid": [10, 24], "One": [10, 11, 21, 26, 27, 28, 29, 30, 31, 32, 34, 846, 921, 1325, 1359, 1393, 1455, 1572, 1634], "isol": [10, 18, 19, 29, 1713, 1724, 1743, 1899], "remaind": [10, 62, 92, 123, 154, 187, 221, 252, 285, 318, 351, 385, 418, 451, 484, 517, 545, 592, 605, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685], "disconnect": [10, 983, 1756, 1899], "discuss": [10, 24, 26, 27, 28, 854], "health": [10, 32, 1325, 1359, 1393, 1455, 1572, 1634, 1785, 1898, 1899], "deal": [10, 21, 32, 33, 1709], "h": [10, 33, 36, 648, 861, 881, 885, 896, 903, 921], "check_network_health": 10, "headless_throat": 10, "looped_throat": 10, "isolated_por": 10, "456": [10, 1847], "574": 10, "783": 10, "1023": 10, "1115": 10, "1158": 10, "1179": 10, "disconnected_por": 10, "227": [10, 34], "246": [10, 34], "247": [10, 34], "319": 10, "362": 10, "1181": 10, "1189": 10, "1204": 10, "1345": 10, "1346": 10, "1347": 10, "duplicate_throat": 10, "bidirectional_throat": 10, "output": [10, 21, 27, 28, 31, 34, 35, 37, 666, 1772, 1903, 1904, 1922], "trim": [10, 19, 27, 29, 34, 854, 983, 1022, 1060, 1098, 1254, 1729, 1744, 1746, 1899], "ga": [10, 742, 857, 863, 864, 870, 887, 888, 898, 899, 900, 908, 1355, 1540], "55": [10, 34], "fickian": [10, 12, 24, 35, 131], "dc": [10, 24], "deff": 10, "dn": [10, 28], "assert_allclos": 10, "rtol": [10, 643, 1700, 1737, 1906, 1915], "098142684548733": 10, "stoke": [10, 13, 731], "dp": [10, 24, 753, 755], "1e12": 10, "3181940680110902": 10, "agre": [10, 854, 930, 931], "due": [10, 22, 30, 31, 33, 854], "doubl": [10, 26, 30, 1763], "tripl": 10, "sane": 10, "mandatori": [10, 30], "reveal": [10, 27, 28, 32, 34], "tqdm": 11, "disabl": [11, 33], "cubes_and_cuboid": [11, 24], "vol_void": 11, "vol_bulk": 11, "poro": 11, "correctli": [11, 1751], "nx": [11, 15, 30, 742, 983], "erron": 11, "addit": [11, 21, 22, 27, 28, 30, 31, 32, 495, 496, 572, 573, 636, 637, 810, 854, 933, 944, 946, 947, 985, 986, 1023, 1024, 1061, 1062, 1099, 1100, 1140, 1141, 1177, 1179, 1180, 1217, 1218, 1255, 1256, 1294, 1295, 1323, 1324, 1357, 1358, 1391, 1392, 1424, 1425, 1453, 1454, 1485, 1486, 1513, 1514, 1541, 1542, 1570, 1571, 1603, 1604, 1632, 1633, 1665, 1666, 1916, 1917], "half": [11, 30, 33, 747, 759], "green": [11, 29, 30, 34], "center": [11, 24, 27, 28, 33, 813, 851, 923, 944, 983, 1022, 1177, 1254, 1737], "ignor": [11, 24, 62, 65, 70, 92, 96, 123, 128, 154, 156, 161, 187, 189, 194, 221, 226, 252, 254, 259, 285, 287, 292, 318, 320, 325, 351, 354, 359, 385, 387, 392, 418, 420, 425, 451, 453, 458, 484, 490, 517, 522, 545, 549, 568, 592, 596, 605, 793, 796, 821, 876, 901, 950, 976, 980, 989, 1015, 1019, 1027, 1053, 1057, 1060, 1065, 1091, 1095, 1103, 1131, 1135, 1144, 1170, 1174, 1183, 1209, 1213, 1221, 1247, 1251, 1254, 1259, 1285, 1289, 1314, 1318, 1333, 1347, 1351, 1367, 1381, 1385, 1401, 1415, 1419, 1444, 1448, 1463, 1477, 1481, 1505, 1509, 1533, 1537, 1561, 1565, 1580, 1594, 1598, 1623, 1627, 1642, 1656, 1660, 1685, 1689, 1700, 1748, 1749, 1903, 1904, 1905, 1920], "overestim": 11, "real": [11, 21, 667], "account": [11, 12, 13, 21, 24, 33, 754, 809, 810, 811, 814, 908, 924, 928, 1756], "pendular_r": [11, 810, 812], "tackl": 11, "vol_void_initi": 11, "vol_void_correct": 11, "poro_initi": 11, "poro_correct": 11, "5f": 11, "12852": 11, "12590": 11, "although": [11, 24, 28, 854, 930, 931], "neglig": [11, 695, 697], "pendular": [11, 813], "ring": [11, 813, 1752], "resid": [11, 812, 813], "radii": [11, 30, 813], "segment": 11, "regular": 11, "fill": [11, 29, 31, 34, 927, 928], "perfectli": [11, 764, 1729], "overlapping_spher": 11, "maxit": [11, 1697, 1699, 1700, 1703, 1705], "imshow": [11, 29], "im_poro": 11, "1f": 11, "63": [11, 27, 34], "regen_mod": [11, 12, 13, 23, 32, 495, 496, 514, 572, 573, 636, 637, 946, 947, 985, 986, 1023, 1024, 1061, 1062, 1099, 1100, 1140, 1141, 1179, 1180, 1217, 1218, 1255, 1256, 1294, 1295, 1323, 1324, 1357, 1358, 1391, 1392, 1424, 1425, 1453, 1454, 1485, 1486, 1513, 1514, 1541, 1542, 1570, 1571, 1603, 1604, 1632, 1633, 1665, 1666], "cuboid": [11, 30, 674, 675, 693, 700, 707, 709, 715, 722, 724, 730, 776, 778, 783, 1915], "pnm_poro": 11, "67": [11, 27, 34], "indic": [12, 13, 16, 23, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 57, 58, 59, 62, 63, 64, 65, 66, 68, 69, 70, 73, 89, 90, 92, 94, 95, 96, 99, 117, 118, 122, 123, 126, 127, 128, 131, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 164, 182, 183, 184, 187, 188, 189, 190, 192, 193, 194, 197, 215, 216, 220, 221, 222, 224, 225, 226, 229, 247, 248, 249, 252, 253, 254, 255, 257, 258, 259, 262, 280, 281, 282, 285, 286, 287, 288, 290, 291, 292, 295, 313, 314, 315, 318, 319, 320, 321, 323, 324, 325, 328, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 362, 380, 381, 382, 385, 386, 387, 388, 390, 391, 392, 395, 413, 414, 415, 418, 419, 420, 421, 423, 424, 425, 428, 446, 447, 448, 451, 452, 453, 454, 456, 457, 458, 461, 479, 480, 481, 484, 485, 486, 488, 489, 490, 494, 495, 496, 512, 513, 517, 520, 521, 522, 525, 541, 542, 545, 547, 548, 549, 554, 565, 567, 568, 571, 572, 573, 588, 589, 592, 594, 595, 596, 604, 605, 606, 636, 637, 649, 661, 663, 741, 742, 749, 799, 832, 846, 847, 876, 901, 944, 945, 946, 947, 950, 951, 954, 956, 957, 960, 962, 972, 973, 976, 978, 979, 980, 983, 984, 985, 986, 989, 990, 993, 995, 996, 999, 1001, 1011, 1012, 1015, 1017, 1018, 1019, 1022, 1023, 1024, 1027, 1028, 1031, 1033, 1034, 1037, 1039, 1049, 1050, 1053, 1055, 1056, 1057, 1060, 1061, 1062, 1065, 1066, 1069, 1071, 1072, 1075, 1077, 1087, 1088, 1091, 1093, 1094, 1095, 1098, 1099, 1100, 1103, 1104, 1107, 1109, 1110, 1111, 1115, 1117, 1127, 1128, 1131, 1133, 1134, 1135, 1138, 1139, 1140, 1141, 1144, 1145, 1148, 1150, 1151, 1154, 1156, 1166, 1167, 1170, 1172, 1173, 1174, 1177, 1178, 1179, 1180, 1183, 1184, 1187, 1189, 1190, 1193, 1195, 1205, 1206, 1209, 1211, 1212, 1213, 1216, 1217, 1218, 1221, 1222, 1225, 1227, 1228, 1231, 1233, 1243, 1244, 1247, 1249, 1250, 1251, 1254, 1255, 1256, 1259, 1260, 1263, 1265, 1266, 1269, 1271, 1281, 1282, 1285, 1287, 1288, 1289, 1293, 1294, 1295, 1310, 1311, 1314, 1316, 1317, 1318, 1321, 1323, 1324, 1325, 1333, 1342, 1343, 1347, 1349, 1350, 1351, 1355, 1357, 1358, 1359, 1367, 1376, 1377, 1381, 1383, 1384, 1385, 1389, 1391, 1392, 1393, 1401, 1410, 1411, 1415, 1417, 1418, 1419, 1423, 1424, 1425, 1440, 1441, 1444, 1446, 1447, 1448, 1451, 1453, 1454, 1455, 1463, 1472, 1473, 1477, 1479, 1480, 1481, 1484, 1485, 1486, 1501, 1502, 1505, 1507, 1508, 1509, 1512, 1513, 1514, 1529, 1530, 1533, 1535, 1536, 1537, 1540, 1541, 1542, 1557, 1558, 1561, 1563, 1564, 1565, 1568, 1570, 1571, 1572, 1580, 1589, 1590, 1594, 1596, 1597, 1598, 1602, 1603, 1604, 1619, 1620, 1623, 1625, 1626, 1627, 1630, 1632, 1633, 1634, 1642, 1651, 1652, 1656, 1658, 1659, 1660, 1664, 1665, 1666, 1681, 1682, 1685, 1687, 1688, 1689, 1710, 1712, 1716, 1717, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1731, 1735, 1737, 1738, 1746, 1750, 1755, 1756, 1909, 1910], "concept": [12, 24, 26, 30], "mechan": [12, 16, 34], "info": [12, 13, 944, 983, 1022, 1060, 1098, 1138, 1177, 1216, 1254, 1321, 1355, 1389, 1451, 1568, 1630], "similarli": [12, 18, 30], "072": [12, 13, 34], "contact_angl": [12, 13, 15, 32, 34, 684, 685, 908, 909, 923, 924, 925], "partial": [12, 31], "accomplish": [12, 31, 33, 34, 1216], "invasonpercol": 12, "ordinarypercol": 12, "drn": [12, 34], "occup": [12, 497, 518, 872, 927, 1756], "invasion_pressur": [12, 34, 100], "costum": [12, 13, 35], "sat_upd": 12, "nwp": [12, 13, 34, 928], "wp": [12, 13, 34, 928], "pore_mask": [12, 13], "throat_mask": [12, 13], "sat_p": [12, 13], "sat_t": [12, 13], "sat1": [12, 13], "bulk": [12, 13, 26], "sat": [12, 13], "cancel": [12, 13, 24], "remain": [12, 13, 34, 747, 1847], "fraction": [12, 13, 30, 858, 867, 869, 873, 876, 877, 878, 901, 928, 930, 931, 983, 1060, 1098, 1254, 1322, 1325, 1333, 1354, 1356, 1359, 1367, 1388, 1390, 1393, 1401, 1422, 1452, 1455, 1463, 1569, 1572, 1580, 1601, 1631, 1634, 1642, 1663, 1729, 1737, 1747], "text": [12, 24, 1751], "rate_": 12, "conduit_conduct": [12, 13], "wherea": [12, 13, 24, 930, 931, 1724], "generic_diffusive_conduct": 12, "calcuat": [12, 13, 30, 787, 788, 789, 790, 791, 794, 801, 808], "rate_calc": [12, 13], "keyword": [12, 13, 495, 516, 572, 636, 644, 746, 797, 823, 854, 933, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1721, 1725, 1726, 1916, 1917], "val": [12, 13, 16, 32, 495, 572, 636, 875, 877, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1331, 1333, 1357, 1365, 1367, 1391, 1399, 1401, 1424, 1453, 1461, 1463, 1485, 1513, 1541, 1570, 1578, 1580, 1603, 1632, 1640, 1642, 1665], "focus": [12, 13], "diff_in": 12, "diff_out": 12, "presenc": [12, 13, 32], "model_mp_cond": [12, 13], "conduit_diffusive_conduct": 12, "throat_conduct": [12, 13, 916, 917, 927, 941, 942], "defer": [12, 13, 16, 23, 30, 31, 32, 495, 496, 572, 573, 636, 637, 946, 947, 985, 986, 1023, 1024, 1061, 1062, 1099, 1100, 1140, 1141, 1179, 1180, 1217, 1218, 1255, 1256, 1294, 1295, 1323, 1324, 1357, 1358, 1391, 1392, 1424, 1425, 1453, 1454, 1485, 1486, 1513, 1514, 1541, 1542, 1570, 1571, 1603, 1604, 1632, 1633, 1665, 1666], "snwparr": [12, 13], "reldiff_nwp": 12, "reldiff_wp": 12, "uniqu": [12, 17, 29, 31, 944, 953, 957, 983, 992, 996, 1030, 1034, 1060, 1068, 1072, 1098, 1106, 1110, 1138, 1147, 1151, 1177, 1186, 1190, 1216, 1224, 1228, 1254, 1262, 1266, 1512, 1751, 1838, 1890], "sat_point": 12, "rate_single_nwp": 12, "rate_single_wp": 12, "rate_mult_nwp": 12, "rate_mult_wp": 12, "dr_nwp": 12, "dr_wp": 12, "xlabel": [12, 13, 34], "snwp": [12, 13, 15, 34], "ylabel": [12, 13, 34], "dr": [12, 925], "titl": [12, 13], "0x7f54f69b3100": 12, "sequenc": [13, 26, 34, 198], "asum": 13, "ip": [13, 34], "impplement": 13, "face": [13, 27, 131, 945, 983, 984, 1060, 1098, 1139, 1177, 1178, 1254, 1711, 1728, 1729, 1743, 1747], "By": [13, 24, 496, 573, 637, 847, 854, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1324, 1358, 1392, 1425, 1454, 1486, 1514, 1542, 1571, 1604, 1633, 1666, 1728], "invasionpercol": [13, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "finlets_init": 13, "finlet": 13, "satur": [13, 15, 34, 212, 861, 885, 892, 903], "sat_occ_upd": 13, "ran": 13, "int": [13, 24, 29, 53, 54, 61, 85, 86, 91, 112, 113, 120, 121, 145, 146, 153, 178, 179, 186, 210, 211, 219, 243, 244, 251, 276, 277, 284, 309, 310, 317, 342, 343, 350, 376, 377, 384, 409, 410, 417, 442, 443, 450, 475, 476, 483, 508, 509, 537, 538, 544, 584, 585, 602, 603, 649, 714, 729, 741, 742, 749, 799, 832, 968, 969, 983, 1007, 1008, 1045, 1046, 1060, 1083, 1084, 1098, 1123, 1124, 1162, 1163, 1201, 1202, 1239, 1240, 1254, 1277, 1278, 1306, 1307, 1338, 1339, 1372, 1373, 1406, 1407, 1436, 1437, 1468, 1469, 1497, 1498, 1525, 1526, 1553, 1554, 1585, 1586, 1615, 1616, 1647, 1648, 1677, 1678, 1719, 1752, 1753, 1761, 1778, 1780, 1783, 1915, 1920], "invasion_sequ": [13, 34, 100, 198], "mask": [13, 26, 29, 57, 62, 69, 70, 89, 92, 95, 96, 117, 123, 127, 128, 149, 154, 160, 161, 182, 187, 193, 194, 215, 221, 225, 226, 247, 252, 258, 259, 280, 285, 291, 292, 313, 318, 324, 325, 346, 351, 358, 359, 380, 385, 391, 392, 413, 418, 424, 425, 446, 451, 457, 458, 479, 484, 489, 490, 512, 517, 521, 522, 541, 545, 548, 549, 567, 568, 588, 592, 595, 596, 604, 605, 956, 957, 972, 976, 979, 980, 995, 996, 1011, 1015, 1018, 1019, 1022, 1033, 1034, 1049, 1053, 1056, 1057, 1071, 1072, 1087, 1091, 1094, 1095, 1109, 1110, 1127, 1131, 1134, 1135, 1150, 1151, 1166, 1170, 1173, 1174, 1189, 1190, 1205, 1209, 1212, 1213, 1227, 1228, 1243, 1247, 1250, 1251, 1265, 1266, 1281, 1285, 1288, 1289, 1310, 1314, 1317, 1318, 1342, 1347, 1350, 1351, 1376, 1381, 1384, 1385, 1410, 1415, 1418, 1419, 1440, 1444, 1447, 1448, 1472, 1477, 1480, 1481, 1501, 1505, 1508, 1509, 1529, 1533, 1536, 1537, 1557, 1561, 1564, 1565, 1589, 1594, 1597, 1598, 1619, 1623, 1626, 1627, 1651, 1656, 1659, 1660, 1681, 1685, 1688, 1689, 1716, 1717, 1720, 1724, 1737], "thorat": 13, "meet": [13, 33, 695, 697], "rphase": 13, "ephas": 13, "q_": 13, "generic_hydraulic_conduct": 13, "st_p": 13, "relativep": 13, "flow_in": 13, "flow_out": 13, "plesas": 13, "conduit_hydraulic_conduct": 13, "hydraulic_conduct": [13, 15, 17, 19, 33, 687, 688, 906, 914], "select": [13, 30, 32, 35, 63, 352, 690, 704, 719, 734, 743, 751, 756, 762, 767, 773, 787, 791, 794, 801, 808, 930, 931, 1709, 1745, 1765, 1778], "snwp_num": 13, "max_seq": 13, "stop": [13, 1829, 1841, 1854, 1915], "relperm_nwp": 13, "relperm_wp": 13, "rate_abs_nwp": 13, "rate_abs_wp": 13, "rate_enwp": 13, "rate_ewp": 13, "kr_nwp": 13, "kr_wp": 13, "kr": 13, "0x7fd7319acf40": 13, "folder": [14, 35, 37, 648, 652], "contribut": [14, 493], "develop": [14, 17, 22, 27, 31, 34, 37, 493, 648], "perman": 14, "worth": [14, 15, 21, 27, 29, 30, 31, 493], "repositori": 14, "access": [14, 16, 18, 23, 26, 28, 31, 32, 34, 37, 197, 649, 741, 745, 746, 748, 749, 750, 793, 796, 797, 798, 799, 800, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271, 1512, 1765, 1778], "via": [14, 18, 27, 28, 32, 34, 37, 644], "github": [14, 37], "NOT": [14, 34, 495, 572, 636, 649, 809, 811, 814, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "suit": [14, 30, 32, 1568, 1630], "gaurante": 14, "encourag": 14, "__version__": 14, "reader": 14, "inten": 14, "fact": [15, 28, 29, 30, 32, 33, 34], "block": [15, 23, 26, 27, 30, 34], "ny": [15, 742, 983], "nz": [15, 742, 983], "lc": [15, 1916], "0x7f8720f893f0": 15, "2700": 15, "488": 15, "972": 15, "phase_01": [15, 17, 23, 32, 33, 1903, 1904], "0x7f871ec1e520": 15, "temperatur": [15, 21, 22, 23, 28, 32, 33, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 504, 533, 560, 580, 681, 684, 854, 857, 858, 859, 861, 863, 864, 865, 868, 870, 879, 881, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 899, 900, 902, 903, 912, 930, 931, 963, 1002, 1040, 1078, 1118, 1157, 1196, 1234, 1272, 1302, 1334, 1368, 1402, 1432, 1464, 1493, 1521, 1549, 1581, 1611, 1643, 1673], "thermal_conduct": [15, 32, 681, 684, 685, 688, 887, 889, 941, 942], "molar_dens": [15, 32, 681, 684, 685], "logspac": 15, "pin": 15, "pout": 15, "200_000": [15, 19], "101_325": 15, "insert": [15, 31, 34, 67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 455, 487, 519, 546, 566, 593, 617, 632, 977, 1016, 1054, 1092, 1132, 1171, 1210, 1248, 1286, 1315, 1348, 1382, 1416, 1445, 1478, 1506, 1534, 1562, 1595, 1624, 1657, 1686, 1751, 1760, 1761, 1794, 1806, 1820, 1895], "45682101e": 15, "possess": [15, 31, 553, 875], "demand": [15, 1216], "dummi": [15, 1778], "variabl": [15, 18, 22, 24, 31, 60, 152, 185, 250, 283, 316, 482, 826, 830, 906, 930, 931, 933], "gmod": 15, "old_diamet": 15, "pop": [15, 26, 34], "glanc": 15, "complex": [15, 27, 30, 31, 57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 479, 512, 541, 588, 604, 972, 1011, 1049, 1087, 1127, 1166, 1205, 1243, 1281, 1310, 1342, 1376, 1410, 1440, 1472, 1501, 1529, 1557, 1589, 1619, 1651, 1681], "task": [15, 28], "part": [16, 24, 28, 29, 33, 716, 731, 861, 885, 892, 896, 903, 956, 957, 995, 996, 1033, 1034, 1071, 1072, 1109, 1110, 1150, 1151, 1189, 1190, 1227, 1228, 1265, 1266, 1720, 1725, 1726, 1738, 1750, 1763, 1765, 1776, 1778], "design": [16, 18, 23, 24, 27, 495, 572, 636, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "cover": [16, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "pore_to_pore_dist": [16, 31], "receiv": [16, 29, 45, 57, 77, 89, 104, 117, 137, 149, 170, 182, 202, 215, 235, 247, 268, 280, 301, 313, 334, 346, 368, 380, 401, 413, 434, 446, 467, 479, 500, 512, 529, 541, 576, 588, 600, 604, 854, 952, 972, 991, 1011, 1029, 1049, 1067, 1087, 1105, 1127, 1146, 1166, 1185, 1205, 1223, 1243, 1261, 1281, 1298, 1310, 1328, 1342, 1362, 1376, 1396, 1410, 1428, 1440, 1458, 1472, 1489, 1501, 1517, 1529, 1545, 1557, 1575, 1589, 1607, 1619, 1637, 1651, 1669, 1681], "avoid": [16, 18, 28, 30, 34, 651], "5292881": 16, "62911362": 16, "56165803": 16, "52692991": 16, "45419288": 16, "58753647": 16, "46255233": 16, "7350638": 16, "77819766": 16, "wonder": [16, 26], "write": [16, 17, 21, 23, 24, 26, 28, 30, 655, 656, 659, 667], "pass": [16, 26, 28, 30, 31, 32, 349, 383, 416, 449, 495, 515, 516, 543, 572, 591, 636, 639, 854, 857, 858, 859, 860, 861, 863, 864, 865, 868, 870, 879, 881, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 899, 900, 902, 903, 906, 933, 946, 975, 985, 1014, 1023, 1052, 1061, 1090, 1099, 1130, 1140, 1169, 1179, 1208, 1217, 1246, 1255, 1284, 1294, 1313, 1323, 1346, 1357, 1380, 1391, 1414, 1424, 1443, 1453, 1476, 1485, 1504, 1513, 1532, 1541, 1560, 1570, 1593, 1603, 1622, 1632, 1655, 1665, 1684, 1745, 1752, 1753, 1778, 1835, 1890, 1916, 1917], "forc": [16, 30, 63, 352], "caught": [16, 26], "written": [16, 17, 23, 26, 28, 30, 31, 33, 667], "abil": [16, 26, 28, 32, 33, 607, 1060, 1254], "variou": [16, 17, 29, 30, 32, 38, 63, 64, 66, 155, 157, 188, 190, 253, 255, 286, 288, 319, 321, 352, 353, 355, 386, 388, 419, 421, 452, 454, 485, 486, 652, 704, 719, 734, 756, 773, 808], "placesn": 16, "throughout": [16, 21, 28, 30, 31, 1512], "script": [16, 31, 1699], "proudc": 16, "relev": [17, 26, 31], "particularli": [17, 28, 31], "toler": [17, 1743, 1906], "overview": [17, 26, 30], "behavior": [17, 26, 27, 30, 31, 32, 40, 74, 101, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 462, 498, 514, 526, 555, 574, 764, 948, 987, 1025, 1063, 1101, 1142, 1181, 1219, 1257, 1296, 1326, 1360, 1394, 1426, 1456, 1487, 1515, 1543, 1573, 1605, 1635, 1667], "plenti": 17, "demo": [17, 18, 19, 26, 28, 32, 33, 34, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "uuid": [17, 1838], "0fa5da91": 17, "2f2d": 17, "4485": 17, "8722": 17, "3f4cf8a8c745": 17, "default_domain": 17, "domain_1": 17, "cach": 17, "variable_prop": 17, "typedset": [17, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878], "f_rtol": 17, "06": [17, 30, 643, 681, 684, 841, 846, 924, 925, 927], "newton_maxit": 17, "5000": 17, "relaxation_factor": 17, "x_rtol": 17, "behav": 17, "somewhat": [17, 33], "dataclass": [17, 944, 983, 1060, 1098, 1138, 1177, 1216, 1254], "sorri": 17, "explor": [17, 27, 28, 30, 908, 924, 967, 1006, 1044, 1082, 1122, 1161, 1200, 1238, 1276], "talk": 17, "subsequ": [17, 34, 741, 749, 799, 832], "except": [17, 19, 21, 26, 28, 35, 40, 61, 69, 74, 91, 95, 101, 121, 122, 124, 127, 132, 153, 160, 165, 186, 193, 198, 199, 219, 220, 222, 225, 230, 251, 258, 263, 284, 291, 296, 317, 324, 329, 350, 358, 363, 384, 391, 396, 417, 424, 429, 450, 457, 462, 483, 489, 498, 514, 521, 526, 544, 548, 555, 567, 574, 595, 624, 948, 979, 987, 1018, 1022, 1025, 1056, 1063, 1094, 1101, 1134, 1142, 1173, 1181, 1212, 1219, 1250, 1257, 1288, 1296, 1317, 1326, 1350, 1360, 1384, 1394, 1418, 1426, 1447, 1456, 1480, 1487, 1508, 1515, 1536, 1543, 1564, 1573, 1597, 1605, 1626, 1635, 1659, 1667, 1688], "reciev": 17, "str": [17, 26, 40, 41, 45, 48, 49, 51, 52, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 74, 75, 77, 80, 81, 83, 84, 85, 86, 89, 90, 91, 92, 94, 101, 102, 104, 107, 108, 110, 111, 112, 113, 117, 118, 121, 122, 123, 124, 126, 132, 133, 137, 140, 141, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 159, 165, 166, 170, 173, 174, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 199, 200, 202, 205, 206, 208, 209, 210, 211, 215, 216, 219, 220, 221, 222, 224, 230, 231, 235, 238, 239, 241, 242, 243, 244, 247, 248, 249, 251, 252, 253, 254, 255, 257, 263, 264, 268, 271, 272, 274, 275, 276, 277, 280, 281, 282, 284, 285, 286, 287, 288, 290, 296, 297, 301, 304, 305, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 323, 329, 330, 334, 337, 338, 340, 341, 342, 343, 346, 347, 348, 350, 351, 352, 353, 354, 355, 357, 363, 364, 368, 371, 372, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 388, 390, 396, 397, 401, 404, 405, 407, 408, 409, 410, 413, 414, 415, 417, 418, 419, 420, 421, 423, 429, 430, 434, 437, 438, 440, 441, 442, 443, 446, 447, 448, 450, 451, 452, 453, 454, 456, 462, 463, 467, 470, 471, 473, 474, 475, 476, 479, 480, 481, 483, 484, 485, 486, 488, 495, 496, 498, 500, 503, 504, 506, 507, 508, 509, 512, 513, 514, 515, 517, 520, 526, 527, 529, 532, 533, 535, 536, 537, 538, 541, 542, 544, 545, 547, 552, 555, 559, 560, 562, 565, 572, 573, 574, 576, 579, 580, 582, 583, 584, 585, 588, 589, 591, 592, 594, 600, 601, 602, 603, 604, 605, 606, 636, 637, 639, 647, 648, 651, 652, 655, 660, 662, 663, 666, 667, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 744, 745, 746, 747, 748, 750, 752, 754, 757, 758, 759, 760, 761, 764, 768, 769, 770, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 793, 795, 796, 797, 798, 800, 802, 803, 804, 805, 809, 810, 811, 812, 813, 814, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 833, 835, 839, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 917, 919, 920, 921, 923, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 945, 946, 947, 948, 950, 951, 952, 953, 956, 957, 960, 961, 962, 963, 965, 966, 967, 968, 969, 972, 973, 975, 976, 978, 983, 984, 985, 986, 987, 989, 990, 991, 992, 995, 996, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1014, 1015, 1017, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1033, 1034, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1052, 1053, 1055, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1071, 1072, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1090, 1091, 1093, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1109, 1110, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1130, 1131, 1133, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1150, 1151, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1169, 1170, 1172, 1177, 1178, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1189, 1190, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1205, 1206, 1208, 1209, 1211, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1227, 1228, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1243, 1244, 1246, 1247, 1249, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1265, 1266, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1281, 1282, 1284, 1285, 1287, 1294, 1295, 1296, 1298, 1301, 1302, 1304, 1305, 1306, 1307, 1310, 1311, 1313, 1314, 1316, 1323, 1324, 1326, 1328, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1343, 1345, 1346, 1347, 1349, 1354, 1357, 1358, 1360, 1362, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1377, 1379, 1380, 1381, 1383, 1388, 1391, 1392, 1394, 1396, 1399, 1400, 1401, 1402, 1404, 1405, 1406, 1407, 1410, 1411, 1413, 1414, 1415, 1417, 1422, 1424, 1425, 1426, 1428, 1431, 1432, 1434, 1435, 1436, 1437, 1440, 1441, 1443, 1444, 1446, 1453, 1454, 1456, 1458, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1472, 1473, 1475, 1476, 1477, 1479, 1485, 1486, 1487, 1489, 1492, 1493, 1495, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1507, 1512, 1513, 1514, 1515, 1517, 1520, 1521, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1541, 1542, 1543, 1545, 1548, 1549, 1551, 1552, 1553, 1554, 1557, 1558, 1560, 1561, 1563, 1570, 1571, 1573, 1575, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1589, 1590, 1592, 1593, 1594, 1596, 1601, 1603, 1604, 1605, 1607, 1610, 1611, 1613, 1614, 1615, 1616, 1619, 1620, 1622, 1623, 1625, 1632, 1633, 1635, 1637, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1651, 1652, 1654, 1655, 1656, 1658, 1663, 1665, 1666, 1667, 1669, 1672, 1673, 1675, 1676, 1677, 1678, 1681, 1682, 1684, 1685, 1687, 1700, 1710, 1713, 1718, 1721, 1725, 1726, 1728, 1743, 1745, 1751, 1761, 1763, 1765, 1767, 1770, 1772, 1774, 1776, 1778, 1780, 1783, 1838, 1883, 1888, 1889, 1890, 1893, 1894, 1903, 1904, 1908, 1915, 1916, 1917, 1919, 1920], "getattr": 17, "tab": [17, 18, 30, 35], "complet": [17, 30, 62, 92, 123, 154, 187, 221, 252, 285, 318, 351, 385, 418, 451, 484, 517, 545, 592, 605, 927, 930, 931, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685], "trait": 17, "attr": 17, "pydant": 17, "had": [17, 19, 23, 31], "major": [17, 31, 553], "drawback": 17, "clutter": 17, "dir": [17, 26], "startswith": [17, 26, 29], "certain": [17, 31, 40, 74, 101, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 462, 498, 526, 555, 574, 948, 987, 1025, 1063, 1101, 1142, 1181, 1219, 1257, 1296, 1326, 1360, 1394, 1426, 1456, 1487, 1515, 1543, 1573, 1605, 1635, 1667, 1700, 1745], "sever": [17, 23, 26, 27, 28, 29, 30, 31, 32, 34, 496, 571, 573, 637, 854, 927, 947, 986, 1024, 1062, 1100, 1141, 1180, 1216, 1218, 1256, 1295, 1324, 1358, 1392, 1425, 1454, 1486, 1514, 1542, 1571, 1604, 1633, 1666, 1919], "typedlist": [17, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859], "insist": [17, 37], "cannot": [17, 19, 21, 26, 28, 29, 32, 65, 100, 156, 189, 254, 287, 320, 354, 387, 420, 453, 1216], "place": [17, 27, 28, 30, 70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 458, 490, 515, 522, 549, 568, 591, 596, 639, 660, 667, 742, 747, 818, 824, 950, 951, 975, 980, 989, 990, 1014, 1019, 1027, 1028, 1052, 1057, 1065, 1066, 1090, 1095, 1103, 1104, 1130, 1135, 1144, 1145, 1169, 1174, 1183, 1184, 1208, 1213, 1221, 1222, 1246, 1251, 1259, 1260, 1284, 1289, 1313, 1318, 1346, 1351, 1380, 1385, 1414, 1419, 1443, 1448, 1476, 1481, 1504, 1509, 1532, 1537, 1560, 1565, 1593, 1598, 1622, 1627, 1655, 1660, 1684, 1689, 1748, 1749, 1833, 1834, 1845, 1846, 1858, 1859], "usabl": 17, "even": [17, 19, 27, 30, 31, 32, 844, 956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265], "overload": [17, 26, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 506, 535, 562, 582, 965, 1004, 1042, 1080, 1120, 1159, 1198, 1236, 1274, 1304, 1336, 1370, 1404, 1434, 1466, 1495, 1523, 1551, 1583, 1613, 1645, 1675], "__new__": 17, "base2": [17, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 599], "descend": [17, 1834, 1846, 1859], "core": [17, 1699], "30d98d15": 17, "d0a3": 17, "488f": 17, "81be": 17, "5f8885802258": 17, "dure": [17, 27, 30, 31, 1751], "reload": 17, "worri": [18, 24], "equival": [18, 32, 61, 69, 91, 95, 121, 127, 153, 160, 186, 193, 219, 225, 251, 258, 284, 291, 317, 324, 350, 358, 384, 391, 417, 424, 450, 457, 483, 489, 515, 521, 544, 548, 567, 591, 595, 639, 953, 956, 957, 967, 975, 979, 992, 995, 996, 1006, 1014, 1018, 1030, 1033, 1034, 1044, 1052, 1056, 1068, 1071, 1072, 1082, 1090, 1094, 1106, 1109, 1110, 1122, 1130, 1134, 1147, 1150, 1151, 1161, 1169, 1173, 1186, 1189, 1190, 1200, 1208, 1212, 1224, 1227, 1228, 1238, 1246, 1250, 1262, 1265, 1266, 1276, 1284, 1288, 1313, 1317, 1346, 1350, 1354, 1380, 1384, 1388, 1414, 1418, 1422, 1443, 1447, 1476, 1480, 1504, 1508, 1532, 1536, 1560, 1564, 1593, 1597, 1601, 1622, 1626, 1655, 1659, 1663, 1684, 1688, 1721, 1725, 1726, 1778, 1780], "web": 18, "browser": [18, 35], "window": 18, "insid": [18, 772, 923, 1112], "associ": [18, 39, 73, 99, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 494, 514, 525, 554, 571, 620, 741, 745, 746, 748, 749, 750, 793, 796, 797, 798, 799, 800, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 831, 832, 833, 834, 835, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 919, 920, 921, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 944, 983, 1022, 1060, 1098, 1138, 1177, 1216, 1254, 1293, 1321, 1355, 1389, 1423, 1451, 1484, 1512, 1540, 1568, 1602, 1630, 1664, 1835, 1893], "regist": [18, 1835], "verifi": [18, 24, 33], "empti": [18, 31, 32, 33, 52, 56, 61, 84, 88, 91, 111, 116, 121, 144, 148, 153, 177, 181, 186, 209, 214, 219, 242, 246, 251, 275, 279, 284, 308, 312, 317, 341, 345, 350, 375, 379, 384, 408, 412, 417, 441, 445, 450, 474, 478, 483, 507, 511, 536, 540, 544, 564, 583, 587, 601, 616, 631, 846, 966, 971, 1005, 1010, 1043, 1048, 1081, 1086, 1121, 1126, 1160, 1165, 1199, 1204, 1237, 1242, 1275, 1280, 1305, 1309, 1337, 1341, 1371, 1375, 1405, 1409, 1435, 1439, 1467, 1471, 1484, 1496, 1500, 1524, 1528, 1552, 1556, 1584, 1588, 1614, 1618, 1646, 1650, 1676, 1680, 1727, 1785, 1793, 1805, 1819, 1831, 1843, 1856, 1873, 1890, 1892, 1898, 1916, 1917], "automat": [18, 28, 30, 32, 33, 660, 824, 1699, 1728, 1838, 1890], "id": [18, 27, 35, 944, 960, 962, 983, 999, 1001, 1022, 1037, 1039, 1060, 1075, 1077, 1098, 1115, 1117, 1138, 1154, 1156, 1177, 1193, 1195, 1216, 1231, 1233, 1254, 1269, 1271], "0x7f19d52ec9a0": 18, "proj": [18, 1838, 1883, 1890], "new_project": 18, "pn2": 18, "activ": [18, 37, 1879], "proj_01": [18, 1890], "proj_02": [18, 1883], "0x7f1a26044720": 18, "purg": [18, 31, 62, 92, 123, 154, 187, 221, 252, 285, 318, 351, 385, 418, 451, 484, 517, 545, 592, 605, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685], "close_project": 18, "again": [18, 21, 29, 30, 33, 747], "pattern": [18, 19, 34, 742, 925], "ONE": 18, "session": [18, 1879], "enabl": [18, 34, 663, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271, 1917], "lookup": [18, 29, 31, 32, 33, 868, 881, 1512], "relationship": [18, 24], "belong": [18, 19, 23, 31, 34, 100, 495, 572, 636, 839, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1712, 1750, 1835], "scan": [18, 30, 1111, 1112], "0x7f19d4e2d080": 18, "handl": [18, 27, 29, 30, 32, 34, 39, 61, 62, 73, 91, 92, 99, 121, 123, 131, 153, 154, 164, 186, 187, 197, 219, 220, 221, 222, 229, 251, 252, 262, 284, 285, 295, 317, 318, 328, 350, 351, 362, 384, 385, 395, 417, 418, 428, 450, 451, 461, 483, 484, 494, 495, 517, 525, 544, 545, 554, 571, 572, 592, 605, 636, 644, 651, 661, 664, 746, 797, 823, 824, 854, 944, 946, 976, 983, 985, 1015, 1022, 1023, 1053, 1060, 1061, 1091, 1098, 1099, 1131, 1138, 1140, 1170, 1177, 1179, 1209, 1216, 1217, 1247, 1254, 1255, 1285, 1292, 1293, 1294, 1314, 1321, 1323, 1345, 1347, 1355, 1357, 1379, 1381, 1389, 1391, 1413, 1415, 1423, 1424, 1444, 1451, 1453, 1475, 1477, 1484, 1485, 1505, 1512, 1513, 1533, 1540, 1541, 1561, 1568, 1570, 1592, 1594, 1602, 1603, 1623, 1630, 1632, 1654, 1656, 1664, 1665, 1685, 1699, 1883, 1898, 1916, 1917], "trigger": [18, 26, 32], "search": [18, 31, 57, 68, 89, 94, 100, 117, 126, 149, 159, 182, 192, 215, 224, 247, 257, 280, 290, 313, 323, 346, 357, 380, 390, 413, 423, 446, 456, 479, 488, 512, 520, 541, 547, 588, 594, 604, 606, 747, 955, 972, 978, 994, 1011, 1017, 1032, 1049, 1055, 1070, 1087, 1093, 1108, 1127, 1133, 1149, 1166, 1172, 1188, 1205, 1211, 1226, 1243, 1249, 1264, 1281, 1287, 1310, 1316, 1342, 1349, 1376, 1383, 1410, 1417, 1440, 1446, 1472, 1479, 1501, 1507, 1529, 1535, 1557, 1563, 1589, 1596, 1619, 1625, 1651, 1658, 1681, 1687], "seem": [18, 26, 31], "convolut": [18, 24, 742], "benefit": [18, 30, 32], "v1": 18, "lead": [18, 19, 29, 30, 1060, 1098, 1254, 1714, 1729, 1747], "memori": [18, 29, 31, 651, 1700], "leak": 18, "tricki": 18, "delet": [18, 26, 27, 29, 31, 40, 65, 74, 101, 132, 156, 165, 189, 199, 230, 254, 263, 287, 296, 320, 329, 354, 363, 387, 396, 420, 429, 453, 462, 498, 526, 555, 574, 847, 948, 983, 987, 1025, 1063, 1101, 1142, 1181, 1219, 1257, 1296, 1326, 1360, 1394, 1426, 1456, 1487, 1515, 1543, 1573, 1605, 1635, 1667, 1746, 1763, 1765, 1767, 1888], "someth": [18, 26, 30, 1911], "syntact": [18, 32], "sugar": [18, 32], "scene": [18, 23, 26, 29, 32, 1512], "uphold": 18, "main": [19, 24, 28, 30, 32, 34, 61, 91, 119, 121, 153, 186, 219, 229, 251, 284, 317, 350, 384, 417, 450, 483, 544, 571, 620, 930, 931, 1216, 1847], "fairli": 19, "tomogram": 19, "creativ": 19, "stitch": [19, 1744], "singular": [19, 28], "plot_tutori": [19, 28], "font_siz": [19, 1920], "plu": [19, 26, 1747, 1749], "constitut": [19, 1451], "rest": [19, 27, 32, 34, 1022, 1909, 1910], "100_000": [19, 33], "ill": 19, "messag": [19, 26, 30], "todens": [19, 21, 23, 28, 29], "pcolormesh": 19, "reflect": [19, 28, 1060, 1098, 1254, 1729, 1747], "row": [19, 21, 28, 29, 846, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271, 1751], "diagon": [19, 21, 29, 944, 1177, 1700, 1749], "column": [19, 24, 28, 29, 30, 33, 34, 48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 652, 665, 807, 950, 951, 961, 989, 990, 1000, 1027, 1028, 1038, 1065, 1066, 1076, 1103, 1104, 1116, 1144, 1145, 1155, 1183, 1184, 1194, 1221, 1222, 1232, 1259, 1260, 1270, 1301, 1332, 1366, 1400, 1431, 1462, 1492, 1520, 1548, 1579, 1610, 1641, 1672, 1722, 1811], "NO": [19, 28], "balanc": [19, 21, 23, 24, 33], "coupl": [19, 21, 37], "sai": [19, 31], "form": [19, 21, 24, 29, 30, 32, 61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 544, 772, 812, 868, 876, 901, 908, 944, 1060, 1177, 1254, 1333, 1367, 1401, 1463, 1580, 1642, 1710, 1745, 1749], "independ": [19, 543, 826, 830, 858, 933], "exchang": [19, 930, 931], "mini": [19, 26, 30], "ey": [19, 35], "begin": [19, 24, 28, 34], "libari": 19, "among": 19, "cluster_numb": 19, "cluster_s": 19, "0x7fe1b7473880": 19, "proper": [19, 21, 30, 906, 1919], "clearli": [19, 26, 30, 31, 34], "though": [19, 27, 28, 30, 31, 951, 983, 990, 1028, 1066, 1104, 1145, 1184, 1222, 1260], "previou": [19, 23, 24, 35], "200000": 19, "180481": 19, "34358266": 19, "179453": 19, "3743243": 19, "177603": 19, "02686068": 19, "146753": 19, "56142075": 19, "150486": 19, "45425023": 19, "153745": 19, "87597493": 19, "102153": 19, "79999934": 19, "105667": 19, "41424756": 19, "113879": 19, "71828366": 19, "117760": 19, "3895203": 19, "128277": 19, "81773733": 19, "100000": 19, "home": [19, 30], "runner": 19, "_plottool": 19, "352": 19, "runtimewarn": [19, 1905], "overflow": 19, "encount": [19, 1761, 1783], "cast": [19, 28], "dtype": [19, 21, 28, 29, 34, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "float16": 19, "46": [19, 27, 34], "nan": [19, 29, 31, 33, 61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 544, 665, 667, 793, 796, 821, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1322, 1356, 1390, 1452, 1569, 1631, 1721, 1722, 1905], "inf": [19, 34, 100, 667, 1751, 1905], "357": 19, "pathcollect": [19, 1917], "0x7fe1a133f6d0": 19, "underli": 21, "speci": [21, 23, 28, 854, 858, 863, 864, 873, 878, 881, 883, 887, 889, 898, 930, 931, 1322, 1325, 1345, 1354, 1356, 1359, 1379, 1388, 1390, 1393, 1413, 1422, 1451, 1452, 1455, 1475, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1569, 1572, 1592, 1601, 1602, 1631, 1634, 1654, 1663], "j": [21, 24, 28, 29, 33, 36, 198, 742, 852, 861, 864, 870, 885, 892, 896, 903, 908, 921, 925, 1722, 1749, 1756], "c_a": [21, 23, 716], "composit": [21, 854, 858, 1321, 1355, 1389, 1568, 1630, 1902], "subject": [21, 30, 32, 33, 493], "2x2": 21, "nt": [21, 23, 24, 27, 28, 29, 30, 33, 34, 39, 48, 54, 68, 69, 70, 73, 80, 86, 94, 95, 96, 99, 107, 113, 126, 127, 128, 131, 140, 146, 159, 160, 161, 164, 173, 179, 192, 193, 194, 197, 205, 211, 224, 225, 226, 229, 238, 244, 257, 258, 259, 262, 271, 277, 290, 291, 292, 295, 304, 310, 323, 324, 325, 328, 337, 343, 357, 358, 359, 362, 371, 377, 390, 391, 392, 395, 404, 410, 423, 424, 425, 428, 437, 443, 456, 457, 458, 461, 470, 476, 488, 489, 490, 494, 503, 509, 520, 521, 522, 525, 532, 538, 547, 548, 549, 554, 559, 567, 568, 571, 579, 585, 594, 595, 596, 603, 606, 701, 716, 731, 746, 772, 797, 807, 823, 944, 950, 951, 961, 969, 978, 979, 980, 983, 989, 990, 1000, 1008, 1017, 1018, 1019, 1022, 1027, 1028, 1038, 1046, 1055, 1056, 1057, 1060, 1065, 1066, 1076, 1084, 1093, 1094, 1095, 1098, 1103, 1104, 1116, 1124, 1133, 1134, 1135, 1138, 1144, 1145, 1155, 1163, 1172, 1173, 1174, 1177, 1183, 1184, 1194, 1202, 1211, 1212, 1213, 1216, 1221, 1222, 1232, 1240, 1249, 1250, 1251, 1254, 1259, 1260, 1270, 1278, 1287, 1288, 1289, 1293, 1301, 1307, 1316, 1317, 1318, 1321, 1332, 1339, 1349, 1350, 1351, 1355, 1366, 1373, 1383, 1384, 1385, 1389, 1400, 1407, 1417, 1418, 1419, 1423, 1431, 1437, 1446, 1447, 1448, 1451, 1462, 1469, 1479, 1480, 1481, 1484, 1492, 1498, 1507, 1508, 1509, 1512, 1520, 1526, 1535, 1536, 1537, 1540, 1548, 1554, 1563, 1564, 1565, 1568, 1579, 1586, 1596, 1597, 1598, 1602, 1610, 1616, 1625, 1626, 1627, 1630, 1641, 1648, 1658, 1659, 1660, 1664, 1672, 1678, 1687, 1688, 1689, 1720, 1724], "interest": [21, 30, 32, 33, 34, 865, 876, 901, 930, 931, 932, 934, 935, 936, 937, 938, 939, 1716], "awai": [21, 26], "At": [21, 30, 763, 809, 811, 814, 1736], "absenc": 21, "reaction": [21, 23, 131, 262, 362, 904, 930, 931], "thu": [21, 28, 29, 30, 34, 59, 131, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 716, 731, 754, 956, 957, 995, 996, 1033, 1034, 1071, 1072, 1109, 1110, 1150, 1151, 1189, 1190, 1227, 1228, 1265, 1266, 1721, 1725, 1726], "summat": 21, "g_": [21, 23, 24], "x_j": 21, "x_i": [21, 23, 858, 876, 901, 1333, 1367, 1401, 1463, 1580, 1642], "linear": [21, 23, 24, 32, 33, 461, 648, 684, 876, 901, 930, 931, 932, 933, 935, 936, 937, 938, 939, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1216, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271, 1333, 1367, 1401, 1463, 1580, 1642, 1694, 1696, 1698, 1699, 1700, 1701, 1702, 1704, 1705, 1706, 1707, 1708, 1749], "csgraph": [21, 34, 1712, 1727, 1750], "csg": [21, 34], "am": [21, 28, 29, 34, 944, 950, 960, 983, 989, 999, 1022, 1027, 1037, 1060, 1065, 1075, 1098, 1103, 1115, 1138, 1144, 1154, 1177, 1183, 1193, 1216, 1221, 1231, 1254, 1259, 1269, 1715, 1717, 1722, 1739, 1740, 1741, 1742], "create_adjacency_matrix": [21, 28, 29, 34, 960, 999, 1037, 1075, 1115, 1154, 1193, 1231, 1269], "weight": [21, 28, 29, 34, 742, 857, 858, 859, 860, 867, 869, 872, 876, 878, 888, 890, 891, 899, 900, 901, 902, 912, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271, 1333, 1367, 1401, 1463, 1580, 1642, 1727, 1746, 1754, 1757], "fmt": [21, 29, 34, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "csr": [21, 28, 34, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "triu": [21, 28, 29, 34, 950, 960, 989, 999, 1027, 1037, 1065, 1075, 1103, 1115, 1144, 1154, 1183, 1193, 1221, 1231, 1259, 1269], "fals": [21, 27, 28, 29, 31, 34, 57, 60, 62, 63, 68, 89, 92, 94, 100, 117, 123, 126, 149, 152, 154, 159, 182, 185, 187, 192, 215, 221, 224, 247, 250, 252, 257, 280, 283, 285, 290, 313, 316, 318, 323, 346, 351, 352, 357, 380, 385, 390, 413, 418, 423, 446, 451, 456, 479, 482, 484, 488, 512, 517, 520, 541, 545, 547, 588, 592, 594, 604, 605, 606, 623, 625, 643, 657, 659, 661, 663, 665, 950, 951, 953, 955, 956, 957, 967, 972, 976, 978, 989, 990, 992, 994, 995, 996, 1006, 1011, 1015, 1017, 1027, 1028, 1030, 1032, 1033, 1034, 1044, 1049, 1053, 1055, 1065, 1066, 1068, 1070, 1071, 1072, 1082, 1087, 1091, 1093, 1103, 1104, 1106, 1108, 1109, 1110, 1122, 1127, 1131, 1133, 1144, 1145, 1147, 1149, 1150, 1151, 1161, 1166, 1170, 1172, 1183, 1184, 1186, 1188, 1189, 1190, 1200, 1205, 1209, 1211, 1221, 1222, 1224, 1226, 1227, 1228, 1238, 1243, 1247, 1249, 1259, 1260, 1262, 1264, 1265, 1266, 1276, 1281, 1285, 1287, 1310, 1314, 1316, 1342, 1347, 1349, 1376, 1381, 1383, 1410, 1415, 1417, 1440, 1444, 1446, 1472, 1477, 1479, 1501, 1505, 1507, 1529, 1533, 1535, 1557, 1561, 1563, 1589, 1594, 1596, 1619, 1623, 1625, 1651, 1656, 1658, 1681, 1685, 1687, 1721, 1725, 1726, 1736, 1785, 1834, 1846, 1859, 1898, 1906, 1909, 1910], "laplacian": 21, "60261618": 21, "30656585": 21, "29605033": 21, "41734961": 21, "11078376": 21, "00310696": 21, "70705662": 21, "81784039": 21, "trivial": [21, 29, 31, 34, 197], "movement": [21, 34], "r_i": [21, 24], "replac": [21, 30, 31, 32, 37, 667, 742, 817], "b_i": 21, "x_0": 21, "r_3": 21, "linalg": [21, 1705, 1707], "54241766": 21, "78493336": 21, "27617512": 21, "dens": 21, "natur": [21, 26, 27, 876, 901, 908, 924, 1333, 1367, 1401, 1463, 1580, 1642], "particular": 21, "bc": [21, 23, 33, 34, 41, 42, 43, 61, 75, 91, 102, 121, 133, 134, 135, 153, 166, 167, 168, 186, 198, 200, 219, 231, 232, 233, 251, 264, 265, 266, 284, 297, 298, 299, 317, 330, 331, 332, 350, 364, 365, 366, 384, 397, 398, 399, 417, 430, 431, 432, 450, 463, 464, 465, 483, 527, 544], "coo": [21, 28, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271, 1715, 1717, 1754, 1757], "manner": [21, 661, 1713], "index": [21, 26, 28, 29, 30, 31, 32, 34, 553, 649, 807, 844, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1721, 1830, 1831, 1842, 1843, 1855, 1856, 1920], "hit": [21, 30], "Then": [21, 30, 31, 35], "diag": 21, "setdiag": 21, "eliminate_zero": [21, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260], "spsolv": [21, 1701, 1707], "tocsr": 21, "identi": 21, "effort": 21, "intract": 21, "si": [22, 30, 648], "relat": [22, 24, 27, 30, 32, 34, 763, 764, 854, 904], "tabl": [22, 24, 28, 1700, 1903, 1904, 1909, 1910], "emperatur": 22, "298": 22, "101325": 22, "water_correl": [22, 32, 33, 685], "mean_vi": 22, "3f": 22, "mpa": 22, "893": 22, "report": [22, 32, 1871, 1872], "celsiu": 22, "incorrect": 22, "unyt": 22, "pint": 22, "despit": [22, 665], "broad": 22, "overhead": 22, "progress": [23, 25, 34], "incorpor": 23, "chemic": [23, 32, 854, 858, 868, 881, 894, 1321, 1512, 1568, 1630], "0x7f2d54ec8810": 23, "ph": 23, "varieti": [23, 27, 28, 32, 33, 1879], "standar": 23, "a_0": 23, "a_1": 23, "a_3": 23, "rightarrow": [23, 24], "r_a": 23, "kc_a": 23, "kinet": [23, 930, 931], "strong": [23, 32], "source_term": [23, 933], "power_law": 23, "isotherm": 23, "a1": [23, 32, 854, 932, 934, 935, 936, 937, 938], "a2": [23, 32, 932, 934, 935, 936, 937, 938], "a3": [23, 32, 932, 935, 936, 937, 938], "unpack": 23, "retriev": [23, 24, 26, 30, 31, 39, 58, 73, 90, 99, 118, 131, 150, 164, 183, 197, 216, 229, 248, 262, 281, 295, 314, 328, 347, 362, 381, 395, 414, 428, 447, 461, 480, 494, 513, 525, 542, 554, 565, 571, 589, 746, 797, 823, 944, 973, 983, 1012, 1022, 1050, 1060, 1088, 1098, 1128, 1138, 1167, 1177, 1206, 1216, 1244, 1254, 1282, 1293, 1311, 1321, 1343, 1355, 1377, 1389, 1411, 1423, 1441, 1451, 1473, 1484, 1502, 1512, 1530, 1540, 1558, 1568, 1590, 1602, 1620, 1630, 1652, 1664, 1682, 1835], "throw": [23, 28, 32, 1905], "scalar": [23, 31, 32, 39, 59, 64, 66, 73, 99, 131, 151, 155, 157, 164, 184, 188, 190, 197, 229, 249, 253, 255, 262, 282, 286, 288, 295, 315, 319, 321, 328, 348, 349, 353, 355, 362, 382, 383, 386, 388, 395, 415, 416, 419, 421, 428, 448, 449, 452, 454, 461, 481, 485, 486, 494, 525, 543, 554, 571, 648, 667, 818, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 876, 879, 881, 883, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 899, 900, 901, 902, 903, 944, 945, 955, 967, 983, 984, 994, 1006, 1022, 1032, 1044, 1060, 1070, 1082, 1098, 1108, 1122, 1138, 1139, 1149, 1161, 1177, 1178, 1188, 1200, 1216, 1226, 1238, 1254, 1264, 1276, 1293, 1321, 1322, 1333, 1354, 1355, 1356, 1367, 1388, 1389, 1390, 1401, 1422, 1423, 1451, 1452, 1463, 1484, 1512, 1540, 1568, 1569, 1580, 1601, 1602, 1630, 1631, 1642, 1663, 1664, 1711, 1729, 1730, 1731, 1737, 1743, 1746, 1748, 1749, 1917, 1919], "string": [23, 26, 45, 53, 54, 58, 61, 77, 85, 86, 90, 91, 104, 112, 113, 118, 121, 137, 145, 146, 150, 153, 170, 178, 179, 183, 186, 202, 210, 211, 216, 219, 220, 222, 235, 243, 244, 248, 251, 268, 276, 277, 281, 284, 301, 309, 310, 314, 317, 334, 342, 343, 347, 350, 368, 376, 377, 381, 384, 401, 409, 410, 414, 417, 434, 442, 443, 447, 450, 467, 475, 476, 480, 483, 500, 508, 509, 513, 529, 537, 538, 542, 544, 565, 576, 584, 585, 589, 590, 600, 602, 603, 638, 660, 663, 865, 952, 968, 969, 973, 974, 991, 1007, 1008, 1012, 1013, 1029, 1045, 1046, 1050, 1051, 1067, 1083, 1084, 1088, 1089, 1105, 1123, 1124, 1128, 1129, 1146, 1162, 1163, 1167, 1168, 1185, 1201, 1202, 1206, 1207, 1223, 1239, 1240, 1244, 1245, 1261, 1277, 1278, 1282, 1283, 1298, 1306, 1307, 1311, 1312, 1328, 1338, 1339, 1343, 1344, 1362, 1372, 1373, 1377, 1378, 1396, 1406, 1407, 1411, 1412, 1428, 1436, 1437, 1441, 1442, 1458, 1468, 1469, 1473, 1474, 1489, 1497, 1498, 1502, 1503, 1517, 1525, 1526, 1530, 1531, 1545, 1553, 1554, 1558, 1559, 1575, 1585, 1586, 1590, 1591, 1607, 1615, 1616, 1620, 1621, 1637, 1647, 1648, 1652, 1653, 1669, 1677, 1678, 1682, 1683, 1714, 1761, 1763, 1774, 1783, 1888, 1893, 1903, 1904], "set_sourc": 23, "act": [23, 26, 28, 753, 755, 816, 1711, 1911], "seen": [23, 27, 28, 30, 31, 32, 33], "fick_02": 23, "0x7f2d0468efc0": 23, "boolean": [23, 26, 27, 34, 40, 51, 57, 62, 68, 69, 70, 74, 83, 89, 92, 94, 95, 96, 101, 110, 117, 123, 126, 127, 128, 132, 143, 149, 154, 159, 160, 161, 165, 176, 182, 187, 192, 193, 194, 199, 208, 215, 221, 224, 225, 226, 230, 241, 247, 252, 257, 258, 259, 263, 274, 280, 285, 290, 291, 292, 296, 307, 313, 318, 323, 324, 325, 329, 340, 346, 351, 357, 358, 359, 363, 374, 380, 385, 390, 391, 392, 396, 407, 413, 418, 423, 424, 425, 429, 440, 446, 451, 456, 457, 458, 462, 473, 479, 484, 488, 489, 490, 498, 506, 512, 517, 520, 521, 522, 526, 535, 541, 545, 547, 548, 549, 555, 562, 567, 568, 574, 582, 588, 592, 594, 595, 596, 599, 604, 605, 606, 663, 847, 948, 956, 957, 965, 972, 976, 978, 979, 980, 987, 995, 996, 1004, 1011, 1015, 1017, 1018, 1019, 1025, 1033, 1034, 1042, 1049, 1053, 1055, 1056, 1057, 1063, 1071, 1072, 1080, 1087, 1091, 1093, 1094, 1095, 1101, 1109, 1110, 1120, 1127, 1131, 1133, 1134, 1135, 1142, 1150, 1151, 1159, 1166, 1170, 1172, 1173, 1174, 1181, 1189, 1190, 1198, 1205, 1209, 1211, 1212, 1213, 1219, 1227, 1228, 1236, 1243, 1247, 1249, 1250, 1251, 1257, 1265, 1266, 1274, 1281, 1285, 1287, 1288, 1289, 1296, 1304, 1310, 1314, 1316, 1317, 1318, 1326, 1336, 1342, 1347, 1349, 1350, 1351, 1360, 1370, 1376, 1381, 1383, 1384, 1385, 1394, 1404, 1410, 1415, 1417, 1418, 1419, 1426, 1434, 1440, 1444, 1446, 1447, 1448, 1456, 1466, 1472, 1477, 1479, 1480, 1481, 1487, 1495, 1501, 1505, 1507, 1508, 1509, 1515, 1523, 1529, 1533, 1535, 1536, 1537, 1543, 1551, 1557, 1561, 1563, 1564, 1565, 1573, 1583, 1589, 1594, 1596, 1597, 1598, 1605, 1613, 1619, 1623, 1625, 1626, 1627, 1635, 1645, 1651, 1656, 1658, 1659, 1660, 1667, 1675, 1681, 1685, 1687, 1688, 1689, 1712, 1716, 1717, 1720, 1721, 1724, 1725, 1726, 1736, 1737, 1738, 1746, 1750, 1903, 1904], "another_react": 23, "printout": [23, 27, 32], "initial_guess": [23, 33], "awar": [23, 26, 667], "henc": [23, 28, 30], "0x7f2d0468ebb0": 23, "s1": [23, 930, 931, 932, 934, 935, 936, 937, 938, 939], "s2": [23, 930, 931, 932, 934, 935, 936, 937, 938, 939], "self": [23, 26, 608], "explanatori": 23, "patankar": 23, "ref": [23, 930, 931], "slope": [23, 826, 930, 931, 932, 934, 935, 936, 937, 938, 939, 1749], "intercept": [23, 28, 826, 930, 931, 932, 934, 935, 936, 937, 938, 939], "outlin": [23, 29, 30, 32, 34, 198, 495, 572, 636, 647, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "around": [23, 24, 26, 33, 742, 1111], "flux": [23, 131], "consumpt": 23, "further": [23, 24, 27, 32, 1915], "expresss": 23, "abl": [23, 28, 29], "proce": [23, 29, 30, 100], "s_1": 23, "s_2": 23, "unknown": [23, 32, 60, 152, 185, 250, 283, 316, 482], "newton": 23, "rearrang": [23, 24], "lump": 23, "enter": [23, 24, 27, 59, 122, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260], "hidden": 23, "_build_a": 23, "_build_b": 23, "_apply_bc": 23, "_apply_sourc": 23, "rh": [23, 39, 131, 164, 229, 262, 295, 328, 362, 395, 428, 461, 644], "evolv": 23, "67062099": 23, "86153388": 23, "80908711": 23, "12905165": 23, "27146033": 23, "99605744": 23, "27728641": 23, "00582608": 23, "89986288": 23, "01918518": 23, "07159059": 23, "0517292": 23, "8736543": 23, "16283229": 23, "5878359": 23, "70835553": 23, "43401788": 23, "3624273": 23, "44344603": 23, "91818644": 23, "62654197": 23, "ultim": [24, 33], "come": [24, 32], "sum_k": 24, "nb": 24, "m_": 24, "ik": 24, "c_i": 24, "c_k": 24, "overal": 24, "exit": [24, 59, 124, 151, 184, 222, 249, 282, 315, 348, 382, 415, 448, 481], "n_p": 24, "cross": [24, 30, 33, 648, 695, 697, 735, 736, 737, 738, 739, 742, 752, 754, 768, 769, 770, 787, 788, 789, 790, 795, 809, 906, 914, 1730], "subscript": [24, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "denot": 24, "diffusion": 24, "transfer": [24, 930, 931], "cdot": [24, 858, 876, 901, 921, 1333, 1367, 1401, 1463, 1580, 1642], "assembli": 24, "seri": [24, 27, 28, 33, 34, 714, 729], "electr": [24, 916, 917], "circuit": [24, 930, 931], "analogi": 24, "resist": 24, "invers": [24, 33, 1749], "r_": [24, 930, 931], "r_k": 24, "superscript": 24, "rewritten": 24, "g_i": 24, "g_k": 24, "simplic": 24, "pi": [24, 33, 731], "d_i": 24, "ell_i": 24, "quad": 24, "d_k": 24, "ell_k": 24, "ell_": 24, "literatur": 24, "past": 24, "clariti": 24, "introduc": [24, 27, 28, 30, 32], "terminologi": [24, 31], "coin": 24, "mathcal": 24, "decoupl": 24, "word": [24, 28, 29, 34, 748, 798, 828], "join": [24, 26, 657, 665, 1765, 1778], "_func": 24, "__all__": 24, "circles_and_rectangl": 24, "cones_and_cylind": 24, "intersecting_con": 24, "hybrid_cones_and_cylind": 24, "trapezoids_and_rectangl": 24, "hybrid_trapezoids_and_rectangl": 24, "intersecting_trapezoid": 24, "intersecting_pyramid": 24, "hybrid_pyramids_and_cuboid": 24, "squares_and_rectangl": 24, "ncylinders_in_seri": 24, "molecular": [24, 28, 857, 858, 859, 860, 878, 888, 890, 891, 899, 900, 902, 912], "heat": [24, 164, 395, 870], "choic": [24, 30, 32, 1915], "dx": [24, 925], "gradient": [24, 32, 59, 63, 151, 184, 249, 282, 315, 348, 352, 382, 415, 448, 481, 1700], "int_": 24, "bigg": [24, 33], "big": [24, 930, 931], "combin": [24, 27, 31, 32, 543, 665, 716, 731, 983, 1060, 1098, 1254, 1700, 1744, 1745, 1772, 1916], "_i": 24, "_k": 24, "a_i": 24, "a_": [24, 930, 931, 932, 934, 935, 936, 937, 938], "a_k": 24, "declar": 24, "earlier": 24, "breviti": 24, "nitti": 24, "gritti": 24, "pointer": 24, "satisfi": [24, 31, 57, 68, 89, 94, 117, 126, 149, 159, 182, 192, 215, 224, 247, 257, 280, 290, 313, 323, 346, 357, 380, 390, 413, 423, 446, 456, 479, 488, 512, 520, 541, 547, 588, 594, 604, 606, 847, 972, 978, 1011, 1017, 1049, 1055, 1087, 1093, 1127, 1133, 1166, 1172, 1205, 1211, 1243, 1249, 1281, 1287, 1310, 1316, 1342, 1349, 1376, 1383, 1410, 1417, 1440, 1446, 1472, 1479, 1501, 1507, 1529, 1535, 1557, 1563, 1589, 1596, 1619, 1625, 1651, 1658, 1681, 1687, 1719], "drop": [24, 27, 1717], "along": [24, 27, 28, 31, 32, 495, 572, 636, 923, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1710, 1743, 1749], "p_i": 24, "p_k": 24, "slip": 24, "wall": 24, "gradual": 24, "i_p": 24, "rho": [24, 32, 860, 883], "da": 24, "volumetr": 24, "polar": 24, "inertia": 24, "calculu": 24, "p_j": 24, "friction": 24, "loss": [24, 28, 33], "inerti": 24, "safe": 24, "keep": [24, 29, 30, 37, 62, 92, 123, 154, 187, 197, 221, 252, 285, 318, 351, 385, 418, 451, 484, 517, 545, 592, 605, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1512, 1533, 1561, 1594, 1623, 1656, 1685, 1778, 1780, 1899], "expand": [24, 31, 747], "cylidnr": 24, "128": [24, 34], "hagen": [24, 921], "poiseuil": [24, 33, 921], "ell": 24, "individu": [24, 28, 31, 32, 33, 34, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481, 607, 854, 1451, 1749], "resistor": [24, 28, 33], "eventu": [24, 32], "third": [24, 29, 930, 931, 1778], "machin": 24, "voxel": [24, 648, 1915], "vector": [24, 30, 32, 39, 59, 64, 66, 131, 151, 155, 157, 164, 184, 188, 190, 229, 249, 253, 255, 262, 282, 286, 288, 295, 315, 319, 321, 328, 348, 353, 355, 362, 382, 386, 388, 395, 415, 419, 421, 428, 448, 452, 454, 461, 481, 485, 486, 644, 807, 854, 858, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1700, 1710, 1722], "input": [24, 29, 35, 953, 955, 956, 957, 967, 992, 994, 995, 996, 1006, 1030, 1032, 1033, 1034, 1044, 1068, 1070, 1071, 1072, 1082, 1106, 1108, 1109, 1110, 1122, 1147, 1149, 1150, 1151, 1161, 1186, 1188, 1189, 1190, 1200, 1224, 1226, 1227, 1228, 1238, 1262, 1264, 1265, 1266, 1276, 1710, 1721, 1725, 1726], "type": [24, 26, 27, 28, 31, 33, 35, 37, 41, 48, 49, 51, 53, 54, 58, 60, 61, 69, 70, 75, 80, 81, 83, 85, 86, 90, 91, 95, 96, 102, 107, 108, 110, 112, 113, 118, 121, 122, 124, 127, 128, 133, 140, 141, 143, 145, 146, 150, 152, 153, 160, 161, 166, 173, 174, 176, 178, 179, 183, 185, 186, 193, 194, 200, 205, 206, 208, 210, 211, 216, 219, 220, 222, 225, 226, 231, 238, 239, 241, 243, 244, 248, 250, 251, 258, 259, 264, 271, 272, 274, 276, 277, 281, 283, 284, 291, 292, 297, 304, 305, 307, 309, 310, 314, 316, 317, 324, 325, 330, 337, 338, 340, 342, 343, 347, 349, 350, 358, 359, 364, 371, 372, 374, 376, 377, 381, 383, 384, 391, 392, 397, 404, 405, 407, 409, 410, 414, 416, 417, 424, 425, 430, 437, 438, 440, 442, 443, 447, 449, 450, 457, 458, 463, 470, 471, 473, 475, 476, 480, 482, 483, 489, 490, 503, 504, 506, 508, 509, 513, 521, 522, 527, 532, 533, 535, 537, 538, 542, 543, 544, 548, 549, 552, 559, 560, 562, 565, 567, 568, 579, 580, 582, 584, 585, 589, 595, 596, 602, 603, 644, 647, 648, 649, 651, 652, 656, 663, 664, 701, 716, 731, 738, 742, 744, 745, 746, 747, 750, 754, 760, 766, 772, 784, 789, 793, 795, 796, 797, 800, 803, 807, 810, 818, 821, 822, 823, 824, 826, 827, 830, 831, 833, 835, 839, 841, 846, 847, 858, 860, 864, 872, 875, 877, 878, 879, 881, 883, 884, 885, 891, 892, 898, 902, 903, 906, 908, 909, 911, 912, 913, 914, 916, 917, 919, 920, 921, 923, 924, 927, 930, 931, 932, 934, 935, 936, 937, 938, 939, 941, 942, 944, 950, 951, 954, 961, 963, 965, 968, 969, 973, 979, 980, 983, 989, 990, 993, 1000, 1002, 1004, 1007, 1008, 1012, 1018, 1019, 1027, 1028, 1031, 1038, 1040, 1042, 1045, 1046, 1050, 1056, 1057, 1060, 1065, 1066, 1069, 1076, 1078, 1080, 1083, 1084, 1088, 1094, 1095, 1098, 1103, 1104, 1107, 1116, 1118, 1120, 1123, 1124, 1128, 1134, 1135, 1138, 1144, 1145, 1148, 1155, 1157, 1159, 1162, 1163, 1167, 1173, 1174, 1177, 1183, 1184, 1187, 1194, 1196, 1198, 1201, 1202, 1206, 1212, 1213, 1216, 1221, 1222, 1225, 1232, 1234, 1236, 1239, 1240, 1244, 1250, 1251, 1254, 1259, 1260, 1263, 1270, 1272, 1274, 1277, 1278, 1282, 1288, 1289, 1301, 1302, 1304, 1306, 1307, 1311, 1317, 1318, 1325, 1331, 1332, 1333, 1334, 1336, 1338, 1339, 1343, 1350, 1351, 1359, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1377, 1384, 1385, 1393, 1399, 1400, 1401, 1402, 1404, 1406, 1407, 1411, 1418, 1419, 1431, 1432, 1434, 1436, 1437, 1441, 1447, 1448, 1455, 1461, 1462, 1463, 1464, 1466, 1468, 1469, 1473, 1480, 1481, 1492, 1493, 1495, 1497, 1498, 1502, 1508, 1509, 1520, 1521, 1523, 1525, 1526, 1530, 1536, 1537, 1548, 1549, 1551, 1553, 1554, 1558, 1564, 1565, 1572, 1578, 1579, 1580, 1581, 1583, 1585, 1586, 1590, 1597, 1598, 1610, 1611, 1613, 1615, 1616, 1620, 1626, 1627, 1634, 1640, 1641, 1642, 1643, 1645, 1647, 1648, 1652, 1659, 1660, 1672, 1673, 1675, 1677, 1678, 1682, 1688, 1689, 1700, 1711, 1714, 1715, 1716, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1746, 1747, 1748, 1749, 1752, 1753, 1756, 1763, 1767, 1770, 1772, 1774, 1776, 1778, 1780, 1783, 1838, 1848, 1860, 1861, 1883, 1890, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1912, 1915, 1916, 1917, 1919, 1920], "akbari": 24, "sinton": 24, "bahrami": 24, "viscou": [24, 295], "microchannel": 24, "intern": [24, 28, 752, 753, 754, 755, 1722, 1728, 1916, 1917], "journal": [24, 764], "2011": 24, "3970": 24, "3978": 24, "majid": 24, "michael": 24, "yovanovich": 24, "richard": 24, "culham": 24, "novel": 24, "singli": 24, "2007": [24, 742], "2492": 24, "2502": 24, "http": [24, 37, 198], "en": 24, "wikipedia": [24, 28, 847], "org": [24, 198, 660], "wiki": 24, "e2": 24, "80": [24, 27, 34], "93poiseuille_equ": 24, "misaghian": 24, "niloo": 24, "et": [24, 742, 861, 864, 881, 885, 891, 899, 903, 925], "al": [24, 742, 861, 864, 881, 885, 891, 899, 903, 925], "neural": 24, "geoscienc": 24, "162": [24, 34], "2022": 24, "105086": 24, "stil": 25, "comfort": 26, "topic": [26, 32], "squar": [26, 30, 677, 702, 717, 732, 785, 787, 788, 795, 809, 921, 1060, 1098, 1254, 1729, 1737, 1739], "bracket": 26, "round": 26, "tupl": [26, 34, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 349, 379, 383, 412, 416, 445, 449, 478, 511, 540, 543, 564, 587, 616, 625, 631, 644, 971, 1010, 1048, 1086, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1712, 1720, 1750, 1756, 1793, 1805, 1819, 1892], "immut": 26, "read": [26, 27, 28, 32, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 504, 533, 560, 580, 930, 931, 963, 1002, 1040, 1078, 1118, 1157, 1196, 1234, 1272, 1302, 1334, 1368, 1402, 1432, 1464, 1493, 1521, 1549, 1581, 1611, 1643, 1673], "longer": [26, 30, 663], "ing": 26, "extend": [26, 29, 34, 894, 925, 1737, 1744, 1770], "300": [26, 32], "Or": [26, 28, 29], "math": 26, "typeerror": 26, "multipl": [26, 28, 31, 33, 61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 544, 747, 812, 813, 831, 1715, 1744, 1751, 1917], "duplic": [26, 29, 30, 34, 1899], "oper": [26, 28, 30, 31, 819, 824, 1749], "integ": [26, 31, 660, 747, 1717, 1780], "introduct": [26, 29], "internet": 26, "doc": [26, 1760], "answer": [26, 28], "question": 26, "exclus": 26, "nativ": [26, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "fast": [26, 29, 34], "downsid": [26, 30], "languag": [26, 30, 660], "understan": 26, "guid": 26, "fun": [26, 27], "arang": [26, 1905], "60": [26, 27, 34, 36, 881], "75": [26, 34, 35], "90": [26, 27, 32, 34], "hundr": 26, "profici": 26, "999": 26, "fanci": [26, 28], "111": [26, 27, 34], "222": [26, 34, 864], "333": 26, "sens": [26, 29, 30, 33], "assur": [26, 1746], "elementwis": 26, "unlik": [26, 30, 858, 881], "matlab": 26, "444": 26, "666": 26, "211": [26, 34], "322": 26, "433": 26, "190": [26, 34], "12321": 26, "49284": 26, "110889": 26, "8100": 26, "trick": [26, 30, 31, 33, 1729], "recogn": 26, "lack": [26, 29, 71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 491, 523, 550, 569, 597, 618, 633, 981, 1020, 1058, 1096, 1136, 1175, 1214, 1252, 1290, 1319, 1352, 1386, 1420, 1449, 1482, 1510, 1538, 1566, 1599, 1628, 1661, 1690, 1795, 1809, 1821, 1896], "thereof": 26, "offer": [26, 28, 30, 32, 34, 854, 983], "level": [26, 28, 32, 660, 663, 1879, 1901], "arr": [26, 31, 1811], "computation": [26, 34, 197], "ident": [26, 930, 931, 951, 990, 1028, 1066, 1104, 1145, 1184, 1222, 1260, 1838], "familiar": 26, "readabl": [26, 648, 661], "who": [26, 32], "prefer": [26, 30], "piec": [26, 28, 32], "puzzl": 26, "datatyp": [26, 1847], "address": [26, 35], "pair": [26, 28, 29, 30, 33, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 564, 587, 616, 631, 851, 930, 931, 944, 954, 971, 983, 993, 1010, 1031, 1048, 1060, 1069, 1086, 1098, 1107, 1126, 1138, 1148, 1165, 1177, 1187, 1204, 1216, 1225, 1242, 1254, 1263, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1715, 1722, 1727, 1793, 1805, 1819, 1892, 1916, 1917], "dict_valu": 26, "catch": [26, 31, 1905], "intimid": 26, "beautifulli": 26, "feel": [26, 30], "extens": [26, 28, 1767, 1780], "augment": [26, 27], "deep": [26, 623, 625, 1838], "dive": [26, 28], "pertain": [26, 28], "whenev": [26, 1879], "__getitem__": 26, "__setitem__": [26, 28], "underscor": 26, "intrins": 26, "sometim": [26, 66, 157, 190, 255, 288, 321, 355, 388, 421, 454, 486, 1721], "magic": [26, 1512], "extra": [26, 27, 30, 607], "newdict": 26, "setitem": 26, "super": 26, "dnew": 26, "enforc": [26, 28, 1847, 1848, 1860, 1861], "foo": [26, 28, 32, 1847], "bar": [26, 28, 32, 35, 1774, 1847], "param": [26, 32, 39, 73, 99, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 494, 525, 554, 571, 854, 857, 858, 859, 860, 863, 864, 865, 868, 870, 873, 878, 881, 883, 884, 887, 888, 889, 890, 891, 895, 898, 899, 900, 902, 944, 983, 1022, 1060, 1098, 1138, 1177, 1216, 1254, 1293, 1321, 1355, 1389, 1423, 1451, 1484, 1512, 1540, 1568, 1602, 1630, 1664, 1760, 1761, 1763, 1765, 1767, 1770, 1772, 1776, 1778, 1780, 1783, 1902, 1909, 1910], "statement": 26, "rais": [26, 56, 61, 65, 69, 88, 91, 95, 116, 121, 122, 124, 127, 148, 153, 156, 160, 181, 186, 189, 193, 198, 214, 219, 220, 222, 225, 246, 251, 254, 258, 279, 284, 287, 291, 312, 317, 320, 324, 345, 350, 354, 358, 379, 384, 387, 391, 412, 417, 420, 424, 445, 450, 453, 457, 478, 483, 489, 511, 521, 540, 544, 548, 564, 567, 587, 595, 615, 616, 624, 630, 631, 971, 979, 1010, 1018, 1048, 1056, 1086, 1094, 1126, 1134, 1165, 1173, 1204, 1212, 1242, 1250, 1280, 1288, 1309, 1317, 1341, 1350, 1375, 1384, 1409, 1418, 1439, 1447, 1471, 1480, 1500, 1508, 1528, 1536, 1556, 1564, 1588, 1597, 1618, 1626, 1650, 1659, 1680, 1688, 1761, 1783, 1792, 1793, 1804, 1805, 1818, 1819, 1829, 1831, 1832, 1841, 1843, 1844, 1854, 1856, 1857, 1873, 1874, 1891, 1892], "implememnt": 26, "poreprop": 26, "blah": [26, 854], "bob": 26, "summari": [26, 32, 1700, 1770, 1772, 1776], "versatil": 26, "handi": 26, "alter": [26, 27, 30, 34], "interact": [26, 27], "troubleshoot": 27, "full": [27, 30, 32, 33, 37, 495, 572, 636, 652, 691, 692, 694, 701, 742, 916, 917, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665, 1772], "dedic": [27, 34], "draongfli": 27, "percol": [27, 30, 100, 197, 198, 212, 928, 1712, 1720, 1724, 1738, 1750], "rough": 27, "displai": [27, 34, 1835], "10e": 27, "connreadd": 27, "descript": [27, 40, 51, 62, 74, 83, 92, 101, 110, 123, 132, 143, 154, 165, 176, 187, 199, 208, 221, 230, 241, 252, 263, 274, 285, 296, 307, 318, 329, 340, 351, 363, 374, 385, 396, 407, 418, 429, 440, 451, 462, 473, 484, 495, 498, 506, 517, 526, 535, 545, 555, 562, 572, 574, 582, 592, 605, 636, 923, 927, 939, 946, 948, 965, 976, 985, 987, 1004, 1015, 1023, 1025, 1042, 1053, 1061, 1063, 1080, 1091, 1099, 1101, 1120, 1131, 1140, 1142, 1159, 1170, 1179, 1181, 1198, 1209, 1217, 1219, 1236, 1247, 1255, 1257, 1274, 1285, 1294, 1296, 1304, 1314, 1323, 1326, 1336, 1347, 1357, 1360, 1370, 1381, 1391, 1394, 1404, 1415, 1424, 1426, 1434, 1444, 1453, 1456, 1466, 1477, 1485, 1487, 1495, 1505, 1513, 1515, 1523, 1533, 1541, 1543, 1551, 1561, 1570, 1573, 1583, 1594, 1603, 1605, 1613, 1623, 1632, 1635, 1645, 1656, 1665, 1667, 1675, 1685, 1713, 1720, 1721, 1725, 1726, 1751, 1765, 1767, 1772, 1778, 1780], "randint": 27, "500": [27, 30, 1920], "practic": [27, 29, 31], "prompt": 27, "0x7f277b222bb0": 27, "64": [27, 34], "161": [27, 34], "56": [27, 34], "elsewher": [27, 33, 1752, 1753], "convent": [27, 28, 1774], "AND": 27, "44": [27, 32, 34], "47": [27, 30, 34], "61": [27, 34], "62": [27, 34], "49": [27, 34, 36], "58": [27, 34, 864], "59": [27, 34], "68": [27, 34], "69": [27, 34], "71": [27, 34], "73": [27, 34, 864], "76": [27, 34], "83": [27, 34], "85": [27, 34], "86": [27, 34], "89": [27, 34], "91": [27, 34], "93": [27, 34], "97": [27, 34], "105": [27, 34], "109": [27, 34], "110": [27, 32, 34, 685, 881], "112": [27, 34], "113": [27, 34], "115": [27, 34], "119": [27, 34], "120": [27, 34], "121": [27, 34], "122": [27, 34], "124": [27, 34], "126": [27, 34], "130": [27, 34, 908], "131": [27, 34], "133": [27, 34], "134": [27, 34], "135": [27, 34], "136": [27, 34], "139": [27, 34], "141": [27, 34, 764], "143": [27, 34], "144": [27, 34], "146": [27, 32, 34], "147": [27, 34], "148": [27, 34], "149": [27, 34], "150": [27, 33, 34, 903], "151": [27, 34], "153": [27, 34], "154": [27, 32, 34], "160": [27, 34, 861, 879, 892, 908], "wil": 27, "catalyst": 27, "pellet": 27, "helper": [27, 28, 31, 1322, 1345, 1354, 1355, 1356, 1379, 1388, 1389, 1390, 1413, 1422, 1452, 1475, 1569, 1592, 1601, 1631, 1654, 1663], "free": [27, 1700], "template_cylinder_annulu": 27, "r_outer": [27, 1752, 1753], "r_inner": [27, 1752, 1753], "templat": [27, 1022, 1752, 1753], "facecenteredcub": [27, 944, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215], "bodycenteredcub": [27, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 1177], "jam": 27, "intersti": 27, "fcc": 27, "bcc": [27, 944], "4x4x4": 27, "corner": [27, 31, 34, 944, 983, 1177], "site": [27, 100, 956, 957, 995, 996, 1033, 1034, 1071, 1072, 1109, 1110, 1150, 1151, 1189, 1190, 1227, 1228, 1265, 1266, 1712, 1715, 1717, 1720, 1721, 1722, 1724, 1725, 1726, 1737, 1738, 1748, 1750, 1756], "node": [27, 30, 34, 649, 1098, 1111, 1112, 1717, 1719, 1721, 1722, 1723, 1725, 1726, 1727, 1733, 1737, 1738, 1752, 1753, 1756, 1920], "whether": [27, 32, 52, 58, 84, 90, 100, 111, 118, 144, 150, 177, 183, 209, 216, 242, 248, 275, 281, 308, 314, 341, 347, 375, 381, 408, 414, 441, 447, 474, 480, 507, 513, 536, 542, 565, 583, 589, 601, 623, 928, 955, 966, 973, 994, 1005, 1012, 1032, 1043, 1050, 1070, 1081, 1088, 1108, 1121, 1128, 1149, 1160, 1167, 1188, 1199, 1206, 1226, 1237, 1244, 1264, 1275, 1282, 1305, 1311, 1337, 1343, 1371, 1377, 1405, 1411, 1435, 1441, 1467, 1473, 1496, 1502, 1524, 1530, 1552, 1558, 1584, 1590, 1614, 1620, 1646, 1652, 1676, 1682, 1712, 1716, 1721, 1725, 1728, 1735, 1736, 1743, 1750, 1871, 1872, 1908, 1909, 1910], "indidc": 27, "portion": [27, 31, 1715], "color": [27, 34, 35, 1916, 1917, 1918, 1919, 1920], "0x7f277b61e020": 27, "414": 27, "corner_to_bodi": [27, 944, 1177], "216": [27, 34], "corner_to_corn": 27, "body_to_bodi": 27, "orang": [27, 30], "eas": 27, "interpenetr": 27, "delaunayvoronoidu": [27, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137], "cartesian": [27, 1060, 1254], "cyl": 27, "sph": 27, "dpore": 27, "dthroat": 27, "preced": [27, 649], "depth": [27, 28, 1901], "wide": [27, 28, 30, 36, 1903, 1904], "assort": [27, 32], "subclass": [28, 39, 73, 131, 164, 229, 262, 295, 328, 428, 461, 494, 525, 554, 620, 644, 1293, 1451, 1484, 1664, 1811, 1823], "deper": 28, "scheme": [28, 29, 906], "humbl": 28, "accord": [28, 45, 52, 57, 68, 77, 84, 89, 94, 104, 111, 117, 126, 137, 144, 149, 159, 170, 177, 182, 192, 197, 202, 209, 215, 224, 235, 242, 247, 257, 268, 275, 280, 290, 301, 308, 313, 323, 334, 341, 346, 357, 368, 375, 380, 390, 401, 408, 413, 423, 434, 441, 446, 456, 467, 474, 479, 488, 500, 507, 512, 520, 529, 536, 541, 547, 576, 583, 588, 594, 600, 601, 604, 606, 952, 956, 957, 966, 972, 978, 991, 995, 996, 1005, 1011, 1017, 1029, 1033, 1034, 1043, 1049, 1055, 1067, 1071, 1072, 1081, 1087, 1093, 1098, 1105, 1109, 1110, 1121, 1127, 1133, 1146, 1150, 1151, 1160, 1166, 1172, 1185, 1189, 1190, 1199, 1205, 1211, 1223, 1227, 1228, 1237, 1243, 1249, 1261, 1265, 1266, 1275, 1281, 1287, 1298, 1305, 1310, 1316, 1328, 1337, 1342, 1349, 1362, 1371, 1376, 1383, 1396, 1405, 1410, 1417, 1428, 1435, 1440, 1446, 1458, 1467, 1472, 1479, 1489, 1496, 1501, 1507, 1517, 1524, 1529, 1535, 1545, 1552, 1557, 1563, 1575, 1584, 1589, 1596, 1607, 1614, 1619, 1625, 1637, 1646, 1651, 1658, 1669, 1676, 1681, 1687, 1743, 1834, 1846, 1859], "imagin": 28, "pull": [28, 37], "pore_data_sheet": 28, "datafram": [28, 657, 665], "ndim": 28, "474407": 28, "055905": 28, "557595": 28, "090773": 28, "501382": 28, "065994": 28, "472442": 28, "055213": 28, "float64": 28, "05590507143096387": 28, "apt": 28, "colum": 28, "mathemat": 28, "serv": [28, 1769], "identifi": [28, 29, 34, 847, 983, 1022, 1720, 1724, 1728, 1737, 1743, 1765, 1767, 1774, 1778, 1780], "wrong": 28, "creation": [28, 746, 797, 823, 1714], "species_a": 28, "species_b": 28, "retreiv": [28, 875], "retun": 28, "subdictionari": [28, 32], "ask": [28, 32, 624], "int64": [28, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "set_label": 28, "meant": [28, 29, 1743, 1919], "pend": 28, "_hidden": 28, "shorthand": 28, "impli": [28, 950, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259], "critic": [28, 32, 859, 870, 884, 888, 890, 891, 894, 895, 899, 900, 902], "v3": [28, 30, 31, 32], "lattice_connect": 28, "dimension": 28, "dispatch": [28, 32], "delaunai": [28, 847, 908, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1111, 1112, 1728, 1754], "premis": 28, "sentenc": 28, "diagram": [28, 1098], "colunm": 28, "exactli": [28, 29, 31, 32, 33, 1875], "technic": [28, 29, 52, 53, 54, 57, 84, 85, 86, 89, 111, 112, 113, 117, 144, 145, 146, 149, 177, 178, 179, 182, 209, 210, 211, 215, 242, 243, 244, 247, 275, 276, 277, 280, 308, 309, 310, 313, 341, 342, 343, 346, 375, 376, 377, 380, 408, 409, 410, 413, 441, 442, 443, 446, 474, 475, 476, 479, 507, 508, 509, 512, 536, 537, 538, 541, 583, 584, 585, 588, 601, 602, 603, 604, 847, 966, 968, 969, 972, 1005, 1007, 1008, 1011, 1043, 1045, 1046, 1049, 1081, 1083, 1084, 1087, 1121, 1123, 1124, 1127, 1160, 1162, 1163, 1166, 1199, 1201, 1202, 1205, 1237, 1239, 1240, 1243, 1275, 1277, 1278, 1281, 1305, 1306, 1307, 1310, 1337, 1338, 1339, 1342, 1371, 1372, 1373, 1376, 1405, 1406, 1407, 1410, 1435, 1436, 1437, 1440, 1467, 1468, 1469, 1472, 1496, 1497, 1498, 1501, 1524, 1525, 1526, 1529, 1552, 1553, 1554, 1557, 1584, 1585, 1586, 1589, 1614, 1615, 1616, 1619, 1646, 1647, 1648, 1651, 1676, 1677, 1678, 1681], "rigorosli": 28, "support": [28, 32, 660, 1699, 1700], "unintend": 28, "merg": [28, 63, 64, 66, 155, 157, 188, 190, 253, 255, 286, 288, 319, 321, 352, 353, 355, 386, 388, 419, 421, 452, 454, 485, 486, 1745], "ijv": 28, "evid": 28, "symmetr": [28, 29, 950, 983, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259, 1722, 1739, 1875, 1876, 1906], "highli": [28, 909], "nonzero": [28, 29, 742], "travers": [28, 1727], "redund": [28, 951, 990, 1028, 1066, 1104, 1145, 1184, 1222, 1260], "triangular": [28, 29, 30, 764, 921, 950, 960, 989, 999, 1027, 1037, 1065, 1075, 1103, 1115, 1144, 1154, 1183, 1193, 1221, 1231, 1259, 1269, 1715, 1740, 1741, 1742, 1754, 1757], "lil": [28, 29, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "merit": 28, "articl": 28, "conductor": 28, "interconnect": [28, 1098], "enough": [28, 32, 1060, 1098, 1254, 1729, 1747], "get_conduit_data": 28, "47440675": 28, "23720338": 28, "55759468": 28, "25069084": 28, "50138169": 28, "2362208": 28, "47244159": 28, "r1_r2": 28, "understand": [29, 30, 31], "occassion": 29, "invok": 29, "easier": [29, 30, 31, 37, 944, 983, 1060, 1098, 1138, 1177, 1216, 1254], "notabl": 29, "obviou": 29, "grow": [29, 747], "million": [29, 858], "meaning": 29, "suggest": [29, 1899], "especi": 29, "amount": [29, 34, 1710, 1748, 1749], "intuit": [29, 31], "lower": [29, 33, 34, 807, 829, 950, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259, 1740, 1741], "problemat": [29, 30, 665], "mind": 29, "basi": 29, "luckili": 29, "locations_of_nonzero": 29, "values_of_nonzero": 29, "dicionari": [29, 944, 983, 1060, 1098, 1138, 1177, 1216, 1254], "thank": 29, "sophist": 29, "strutur": 29, "dok": [29, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271, 1722], "gotcha": 29, "subtract": [29, 30, 752, 753, 754, 755, 812, 819], "slight": 29, "variat": 29, "create_incidence_matrix": [29, 962, 1001, 1039, 1077, 1117, 1156, 1195, 1233, 1271], "background": 29, "predefin": [29, 32, 33, 1321, 1568, 1630], "cn": 29, "p_left": 29, "p_bottom": 29, "lightgrei": [29, 34], "marker": [29, 1728, 1917, 1919], "blue": 29, "OR": [29, 34], "find_neighbor_por": [29, 967, 1006, 1044, 1082, 1122, 1161, 1200, 1216, 1238, 1276], "exclusve_or": 29, "neigbhor": [29, 967, 1006, 1044, 1082, 1122, 1161, 1200, 1238, 1276], "xnor": [29, 31, 45, 52, 53, 54, 57, 68, 77, 84, 85, 86, 89, 94, 104, 111, 112, 113, 117, 126, 137, 144, 145, 146, 149, 159, 170, 177, 178, 179, 182, 192, 202, 209, 210, 211, 215, 224, 235, 242, 243, 244, 247, 257, 268, 275, 276, 277, 280, 290, 301, 308, 309, 310, 313, 323, 334, 341, 342, 343, 346, 357, 368, 375, 376, 377, 380, 390, 401, 408, 409, 410, 413, 423, 434, 441, 442, 443, 446, 456, 467, 474, 475, 476, 479, 488, 500, 507, 508, 509, 512, 520, 529, 536, 537, 538, 541, 547, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 952, 953, 956, 957, 966, 967, 968, 969, 972, 978, 991, 992, 995, 996, 1005, 1006, 1007, 1008, 1011, 1017, 1029, 1030, 1033, 1034, 1043, 1044, 1045, 1046, 1049, 1055, 1067, 1068, 1071, 1072, 1081, 1082, 1083, 1084, 1087, 1093, 1105, 1106, 1109, 1110, 1121, 1122, 1123, 1124, 1127, 1133, 1146, 1147, 1150, 1151, 1160, 1161, 1162, 1163, 1166, 1172, 1185, 1186, 1189, 1190, 1199, 1200, 1201, 1202, 1205, 1211, 1223, 1224, 1227, 1228, 1237, 1238, 1239, 1240, 1243, 1249, 1261, 1262, 1265, 1266, 1275, 1276, 1277, 1278, 1281, 1287, 1298, 1305, 1306, 1307, 1310, 1316, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1396, 1405, 1406, 1407, 1410, 1417, 1428, 1435, 1436, 1437, 1440, 1446, 1458, 1467, 1468, 1469, 1472, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1545, 1552, 1553, 1554, 1557, 1563, 1575, 1584, 1585, 1586, 1589, 1596, 1607, 1614, 1615, 1616, 1619, 1625, 1637, 1646, 1647, 1648, 1651, 1658, 1669, 1676, 1677, 1678, 1681, 1687, 1721, 1725, 1726], "opposit": 29, "nxor": [29, 1721, 1725, 1726], "interchang": 29, "logic": [29, 31, 57, 68, 89, 94, 117, 126, 149, 159, 182, 192, 215, 224, 247, 257, 280, 290, 313, 323, 346, 357, 380, 390, 413, 423, 446, 456, 479, 488, 512, 520, 541, 547, 588, 594, 604, 606, 953, 956, 957, 967, 972, 978, 992, 995, 996, 1006, 1011, 1017, 1030, 1033, 1034, 1044, 1049, 1055, 1068, 1071, 1072, 1082, 1087, 1093, 1106, 1109, 1110, 1122, 1127, 1133, 1147, 1150, 1151, 1161, 1166, 1172, 1186, 1189, 1190, 1200, 1205, 1211, 1224, 1227, 1228, 1238, 1243, 1249, 1262, 1265, 1266, 1276, 1281, 1287, 1310, 1316, 1342, 1349, 1376, 1383, 1410, 1417, 1440, 1446, 1472, 1479, 1501, 1507, 1529, 1535, 1557, 1563, 1589, 1596, 1619, 1625, 1651, 1658, 1681, 1687, 1721, 1725, 1726], "share": [29, 493, 953, 956, 957, 967, 992, 995, 996, 1006, 1030, 1033, 1034, 1044, 1068, 1071, 1072, 1082, 1106, 1109, 1110, 1122, 1147, 1150, 1151, 1161, 1186, 1189, 1190, 1200, 1224, 1227, 1228, 1238, 1262, 1265, 1266, 1276, 1715, 1721, 1723, 1725, 1726], "find_connecting_throat": 29, "p1": [29, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1722, 1723], "p2": [29, 954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263, 1722, 1723], "find_connected_por": [29, 34], "flatten": [29, 34, 663, 953, 955, 956, 957, 967, 992, 994, 995, 996, 1006, 1030, 1032, 1033, 1034, 1044, 1068, 1070, 1071, 1072, 1082, 1106, 1108, 1109, 1110, 1122, 1147, 1149, 1150, 1151, 1161, 1186, 1188, 1189, 1190, 1200, 1224, 1226, 1227, 1228, 1238, 1262, 1264, 1265, 1266, 1276, 1721, 1725, 1726], "heterogen": [29, 30, 31], "blockag": 29, "actuali": [29, 31], "manual": [29, 57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 479, 512, 541, 588, 604, 972, 1011, 1049, 1087, 1127, 1166, 1205, 1216, 1243, 1281, 1310, 1342, 1376, 1410, 1440, 1472, 1501, 1529, 1557, 1589, 1619, 1651, 1681, 1894], "0x7fdef77283b0": 29, "easiest": 29, "bool": [29, 34, 57, 63, 68, 89, 94, 117, 126, 149, 159, 182, 192, 215, 224, 247, 257, 280, 290, 313, 323, 346, 352, 357, 380, 390, 413, 423, 446, 456, 479, 488, 512, 520, 541, 547, 588, 594, 604, 606, 623, 661, 665, 793, 796, 821, 950, 951, 953, 955, 956, 957, 967, 972, 978, 989, 990, 992, 994, 995, 996, 1006, 1011, 1017, 1027, 1028, 1030, 1032, 1033, 1034, 1044, 1049, 1055, 1060, 1065, 1066, 1068, 1070, 1071, 1072, 1082, 1087, 1093, 1098, 1103, 1104, 1106, 1108, 1109, 1110, 1122, 1127, 1133, 1144, 1145, 1147, 1149, 1150, 1151, 1161, 1166, 1172, 1183, 1184, 1186, 1188, 1189, 1190, 1200, 1205, 1211, 1221, 1222, 1224, 1226, 1227, 1228, 1238, 1243, 1249, 1254, 1259, 1260, 1262, 1264, 1265, 1266, 1276, 1281, 1287, 1310, 1316, 1342, 1349, 1376, 1383, 1410, 1417, 1440, 1446, 1472, 1479, 1501, 1507, 1529, 1535, 1557, 1563, 1589, 1596, 1619, 1625, 1651, 1658, 1681, 1687, 1715, 1721, 1725, 1726, 1729, 1735, 1736, 1906, 1908, 1909, 1910, 1918], "inde": [29, 34], "signific": 29, "totrim": 29, "offset": [29, 945, 984, 1139, 1178, 1710, 1711], "cumsum": 29, "remap": 29, "did": 29, "0x7fdef7680d60": 29, "new_por": 29, "vstack": 29, "0x7fdef77d10d0": 29, "lucki": 29, "hstack": 29, "new_conn": [29, 1714], "obvious": 29, "enterpr": 30, "tomograph": 30, "Not": 30, "blank": 30, "0x7f117f7756c0": 30, "8000": 30, "22800": 30, "2168": 30, "4332": 30, "favor": [30, 950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "thorough": 30, "psd": 30, "norm": [30, 748, 798, 828], "xlim": 30, "5593961722893255": 30, "80996128980269": 30, "tsd": 30, "5130345457395142": 30, "96861960231873": 30, "vice": [30, 33, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "versa": [30, 33, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "strang": 30, "constrict": [30, 833], "564": 30, "ever": 30, "tempt": 30, "loop": [30, 34, 854, 1111, 1112], "interog": 30, "ye": 30, "safer": 30, "smallest": [30, 34, 1906, 1915], "amin": 30, "bia": 30, "toward": 30, "lo": 30, "hi": [30, 648], "01": [30, 32], "lie": [30, 772, 945, 984, 1139, 1178, 1254, 1728, 1729, 1737], "overli": 30, "tend": 30, "occupi": [30, 1712, 1738, 1750], "regard": 30, "r1": 30, "r2": 30, "l_total": 30, "sqrt": 30, "squeez": 30, "lt": 30, "euclidean": 30, "root": [30, 37], "nest": [30, 661, 1901, 1911], "deeper": 30, "unbuff": 30, "sap": 30, "08485305e": 30, "68134509e": 30, "33947201e": 30, "57211706e": 30, "92152447e": 30, "72429278e": 30, "potenti": [30, 493, 930, 931], "substract": 30, "fashion": [30, 1714], "adjac": [30, 745, 747, 765, 766, 793, 796, 821, 822, 944, 950, 951, 960, 983, 989, 990, 999, 1022, 1027, 1028, 1037, 1060, 1065, 1066, 1075, 1098, 1103, 1104, 1115, 1138, 1144, 1145, 1154, 1177, 1183, 1184, 1193, 1216, 1221, 1222, 1231, 1254, 1259, 1260, 1269, 1715, 1717, 1722, 1739, 1740, 1741, 1742, 1754, 1757], "analyz": 30, "lengthi": 30, "lai": [30, 1060, 1098, 1254], "bare": 30, "job": 30, "fresh": 30, "inherit": [30, 553, 571, 620], "throat_se": 30, "docstr": [30, 31, 32, 63, 64, 66, 155, 157, 188, 190, 253, 255, 286, 288, 319, 321, 352, 353, 355, 386, 388, 419, 421, 452, 454, 485, 486, 496, 573, 637, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1324, 1358, 1392, 1425, 1454, 1486, 1514, 1542, 1571, 1604, 1633, 1666, 1759, 1760, 1765, 1769, 1770, 1772, 1774, 1776, 1778, 1780], "78": [30, 34, 1903, 1904], "charact": [30, 1774, 1903, 1904], "cursor": 30, "explicitli": [30, 649], "track": [30, 34, 1512], "f1": 30, "f2": 30, "f3": 30, "f4": 30, "lens": 30, "27203214e": 30, "58686910e": 30, "44028684e": 30, "92245838e": 30, "40091924e": 30, "59556144e": 30, "57978631e": 30, "74677718e": 30, "68073070e": 30, "tediou": 30, "prone": 30, "predfin": 30, "pprint": 30, "0x7f113127eef0": 30, "largest_spher": [30, 672, 673, 674, 675, 676, 677, 678], "0x7f112eff3640": 30, "0x7f113127e8c0": 30, "0x7f112eff3a30": 30, "pore_diamet": [30, 672, 673, 674, 675, 676, 677, 678, 691, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 752, 753, 754, 755, 757, 758, 759, 760, 761, 772, 774, 775, 776, 777, 778, 779, 783, 784, 785, 786, 812, 813, 912, 925], "0x7f112f008790": 30, "throat_diamet": [30, 672, 673, 674, 675, 676, 677, 678, 691, 692, 693, 700, 701, 702, 703, 705, 706, 707, 714, 715, 716, 717, 718, 720, 721, 722, 726, 729, 730, 731, 732, 733, 759, 763, 768, 769, 770, 772, 774, 775, 776, 783, 784, 785, 786, 788, 789, 790, 802, 803, 809, 810, 812, 813, 814, 912, 923, 924, 925], "0x7f113127ef80": 30, "0x7f112f04e5f0": 30, "0x7f112f04cd30": 30, "0x7f112f0091b0": 30, "0x7f112f00a3b0": 30, "0x7f113127f0a0": 30, "0x7f112f00a170": 30, "0x7f113127eb90": 30, "nice": [30, 1254, 1823, 1903, 1904], "add_models_collect": 30, "0x7f112ca87e70": 30, "bound": 30, "nearest": [30, 747, 844, 1751], "dall": 30, "reach": [30, 34], "constrain": 30, "life": 30, "reomcomput": 30, "15319619": 30, "0328116": 30, "2287953": 30, "23887453": 30, "8411705": 30, "10988224": 30, "59011212e": 30, "75717988e": 30, "13561876e": 30, "66940036e": 30, "27284536e": 30, "36618201": 30, "35063831": 30, "40236746": 30, "58822388": 30, "42461491": 30, "9016327": 30, "11640227e": 30, "20171387e": 30, "57748463e": 30, "30989878e": 30, "79091080e": 30, "automatical": 30, "networkx": [30, 623, 649, 656, 1920], "sort": [30, 34, 197, 928], "tree": [30, 1746], "downstream": 30, "roughli": 30, "dependency_map": [30, 620, 623, 624], "style": [30, 625], "planar": [30, 691, 696, 699, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 717, 718, 725, 728, 732, 733, 735, 739], "circl": [30, 672, 678, 691, 705, 720, 774, 795, 847, 1737, 1752, 1917, 1920], "dependency_graph": [30, 620, 624, 625], "draw_networkx": 30, "draw_planar": 30, "bookmark": 31, "0x7f9a2512bce0": 31, "corner_por": 31, "build": [31, 60, 152, 185, 250, 283, 316, 482], "filter": [31, 35, 45, 52, 57, 68, 77, 84, 89, 94, 104, 111, 117, 126, 137, 144, 149, 159, 170, 177, 182, 192, 202, 209, 215, 224, 235, 242, 247, 257, 268, 275, 280, 290, 301, 308, 313, 323, 334, 341, 346, 357, 368, 375, 380, 390, 401, 408, 413, 423, 434, 441, 446, 456, 467, 474, 479, 488, 500, 507, 512, 520, 529, 536, 541, 547, 576, 583, 588, 594, 600, 601, 604, 606, 952, 953, 956, 957, 966, 972, 978, 991, 992, 995, 996, 1005, 1011, 1017, 1029, 1030, 1033, 1034, 1043, 1049, 1055, 1067, 1068, 1071, 1072, 1081, 1087, 1093, 1105, 1106, 1109, 1110, 1121, 1127, 1133, 1146, 1147, 1150, 1151, 1160, 1166, 1172, 1185, 1186, 1189, 1190, 1199, 1205, 1211, 1223, 1224, 1227, 1228, 1237, 1243, 1249, 1261, 1262, 1265, 1266, 1275, 1281, 1287, 1298, 1305, 1310, 1316, 1328, 1337, 1342, 1349, 1362, 1371, 1376, 1383, 1396, 1405, 1410, 1417, 1428, 1435, 1440, 1446, 1458, 1467, 1472, 1479, 1489, 1496, 1501, 1507, 1517, 1524, 1529, 1535, 1545, 1552, 1557, 1563, 1575, 1584, 1589, 1596, 1607, 1614, 1619, 1625, 1637, 1646, 1651, 1658, 1669, 1676, 1681, 1687, 1719, 1721, 1725, 1726], "decrib": 31, "nd": [31, 875, 877], "wast": [31, 34], "wors": 31, "consum": 31, "8x": 31, "nonetheless": 31, "invest": 31, "mask1": 31, "mask2": 31, "edg": [31, 34, 649, 744, 795, 983, 1717, 1721, 1722, 1723, 1725, 1727, 1756, 1920], "theori": [31, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260, 1721, 1725, 1726], "nor": [31, 45, 52, 53, 54, 57, 68, 77, 84, 85, 86, 89, 94, 104, 111, 112, 113, 117, 126, 137, 144, 145, 146, 149, 159, 170, 177, 178, 179, 182, 192, 202, 209, 210, 211, 215, 224, 235, 242, 243, 244, 247, 257, 268, 275, 276, 277, 280, 290, 301, 308, 309, 310, 313, 323, 334, 341, 342, 343, 346, 357, 368, 375, 376, 377, 380, 390, 401, 408, 409, 410, 413, 423, 434, 441, 442, 443, 446, 456, 467, 474, 475, 476, 479, 488, 500, 507, 508, 509, 512, 520, 529, 536, 537, 538, 541, 547, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 952, 966, 968, 969, 972, 978, 991, 1005, 1007, 1008, 1011, 1017, 1029, 1043, 1045, 1046, 1049, 1055, 1067, 1081, 1083, 1084, 1087, 1093, 1105, 1121, 1123, 1124, 1127, 1133, 1146, 1160, 1162, 1163, 1166, 1172, 1185, 1199, 1201, 1202, 1205, 1211, 1223, 1237, 1239, 1240, 1243, 1249, 1261, 1275, 1277, 1278, 1281, 1287, 1298, 1305, 1306, 1307, 1310, 1316, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1396, 1405, 1406, 1407, 1410, 1417, 1428, 1435, 1436, 1437, 1440, 1446, 1458, 1467, 1468, 1469, 1472, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1545, 1552, 1553, 1554, 1557, 1563, 1575, 1584, 1585, 1586, 1589, 1596, 1607, 1614, 1615, 1616, 1619, 1625, 1637, 1646, 1647, 1648, 1651, 1658, 1669, 1676, 1677, 1678, 1681, 1687], "confus": [31, 34], "nand": [31, 45, 52, 53, 54, 57, 68, 77, 84, 85, 86, 89, 94, 104, 111, 112, 113, 117, 126, 137, 144, 145, 146, 149, 159, 170, 177, 178, 179, 182, 192, 202, 209, 210, 211, 215, 224, 235, 242, 243, 244, 247, 257, 268, 275, 276, 277, 280, 290, 301, 308, 309, 310, 313, 323, 334, 341, 342, 343, 346, 357, 368, 375, 376, 377, 380, 390, 401, 408, 409, 410, 413, 423, 434, 441, 442, 443, 446, 456, 467, 474, 475, 476, 479, 488, 500, 507, 508, 509, 512, 520, 529, 536, 537, 538, 541, 547, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 952, 966, 968, 969, 972, 978, 991, 1005, 1007, 1008, 1011, 1017, 1029, 1043, 1045, 1046, 1049, 1055, 1067, 1081, 1083, 1084, 1087, 1093, 1105, 1121, 1123, 1124, 1127, 1133, 1146, 1160, 1162, 1163, 1166, 1172, 1185, 1199, 1201, 1202, 1205, 1211, 1223, 1237, 1239, 1240, 1243, 1249, 1261, 1275, 1277, 1278, 1281, 1287, 1298, 1305, 1306, 1307, 1310, 1316, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1396, 1405, 1406, 1407, 1410, 1417, 1428, 1435, 1436, 1437, 1440, 1446, 1458, 1467, 1468, 1469, 1472, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1545, 1552, 1553, 1554, 1557, 1563, 1575, 1584, 1585, 1586, 1589, 1596, 1607, 1614, 1615, 1616, 1619, 1625, 1637, 1646, 1647, 1648, 1651, 1658, 1669, 1676, 1677, 1678, 1681, 1687], "retiev": 31, "annoi": [31, 1905], "shortcut": [31, 33, 37, 39, 73, 99, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 494, 525, 554, 571, 944, 983, 1022, 1060, 1098, 1138, 1177, 1216, 1254, 1293, 1321, 1355, 1389, 1423, 1451, 1484, 1512, 1540, 1568, 1602, 1630, 1664], "edit": [31, 37, 930, 931], "syntax": [31, 649], "certainli": 31, "infer": [31, 945, 984, 1022, 1139, 1178], "suppli": [31, 32, 45, 53, 54, 61, 64, 65, 66, 77, 85, 86, 91, 104, 112, 113, 121, 122, 124, 137, 145, 146, 153, 155, 156, 157, 170, 178, 179, 186, 188, 189, 190, 202, 210, 211, 219, 220, 222, 235, 243, 244, 251, 253, 254, 255, 268, 276, 277, 284, 286, 287, 288, 301, 309, 310, 317, 319, 320, 321, 334, 342, 343, 350, 353, 354, 355, 368, 376, 377, 384, 386, 387, 388, 401, 409, 410, 417, 419, 420, 421, 434, 442, 443, 450, 452, 453, 454, 467, 475, 476, 483, 485, 486, 496, 497, 500, 508, 509, 514, 529, 537, 538, 544, 573, 576, 584, 585, 600, 602, 603, 637, 746, 797, 817, 823, 829, 947, 952, 955, 968, 969, 986, 991, 994, 1007, 1008, 1024, 1029, 1032, 1045, 1046, 1060, 1062, 1067, 1070, 1083, 1084, 1100, 1105, 1108, 1123, 1124, 1141, 1146, 1149, 1162, 1163, 1180, 1185, 1188, 1201, 1202, 1218, 1223, 1226, 1239, 1240, 1254, 1256, 1261, 1264, 1277, 1278, 1295, 1298, 1306, 1307, 1324, 1328, 1338, 1339, 1358, 1362, 1372, 1373, 1392, 1396, 1406, 1407, 1425, 1428, 1436, 1437, 1454, 1458, 1468, 1469, 1486, 1489, 1497, 1498, 1514, 1517, 1525, 1526, 1542, 1545, 1553, 1554, 1571, 1575, 1585, 1586, 1604, 1607, 1615, 1616, 1633, 1637, 1647, 1648, 1666, 1669, 1677, 1678, 1737, 1749, 1835, 1838, 1883, 1916, 1917], "bonu": 31, "new_arrai": 31, "overwrot": 31, "symbol": [31, 933], "conceptu": 31, "gone": 31, "bimod": 31, "layer": [31, 742, 925, 1749], "v2": [31, 32], "lost": [31, 1881], "suffici": [31, 32], "separ": [31, 663], "mainten": 31, "backend": 31, "think": 31, "tidier": 31, "consequ": [31, 33, 930, 931], "mark": [31, 1022, 1728], "leav": [31, 59, 62, 92, 123, 151, 154, 184, 187, 221, 249, 252, 282, 285, 315, 318, 348, 351, 382, 385, 415, 418, 448, 451, 481, 484, 517, 545, 592, 605, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685], "unspecifi": 31, "everywher": 31, "visibl": 31, "recogin": 31, "redefin": 31, "run_model": 31, "observ": [31, 34], "With": 31, "dealt": [31, 667], "uniform": 31, "uniformli": 31, "abstract": 31, "freeli": 31, "asmask": [31, 57, 68, 89, 94, 117, 126, 149, 159, 182, 192, 215, 224, 247, 257, 280, 290, 313, 323, 346, 357, 380, 390, 413, 423, 446, 456, 479, 488, 512, 520, 541, 547, 588, 594, 604, 606, 956, 957, 972, 978, 995, 996, 1011, 1017, 1033, 1034, 1049, 1055, 1071, 1072, 1087, 1093, 1109, 1110, 1127, 1133, 1150, 1151, 1166, 1172, 1189, 1190, 1205, 1211, 1227, 1228, 1243, 1249, 1265, 1266, 1281, 1287, 1310, 1316, 1342, 1349, 1376, 1383, 1410, 1417, 1440, 1446, 1472, 1479, 1501, 1507, 1529, 1535, 1557, 1563, 1589, 1596, 1619, 1625, 1651, 1658, 1681, 1687], "beed": 31, "thermodynam": [32, 33, 854], "framework": 32, "submodul": [32, 689, 746, 797, 815, 823, 836, 853, 904], "possibli": 32, "exhaust": 32, "librari": [32, 34, 35, 746, 797, 823, 1888, 1893], "polici": 32, "exact": [32, 858], "cantera": 32, "handler": 32, "ca": [32, 868], "extern": [32, 1728], "001": [32, 748, 798, 828], "three": [32, 33, 620, 932, 934, 935, 936, 937, 938, 939], "phase1": 32, "0x7f2d2a763010": 32, "broadcast": 32, "polynomi": [32, 681, 684], "4th": 32, "yield": 32, "a4": [32, 932, 935, 936, 937], "8543e": 32, "6756e": 32, "7831e": 32, "3156e": 32, "03": 32, "a0": [32, 830, 854], "8898e": 32, "00091476": 32, "350": 32, "rerun": [32, 37], "00049581": 32, "00069605": 32, "00071749": 32, "00076879": 32, "th": [32, 1749], "00046476": 32, "00066623": 32, "00068867": 32, "00074239": 32, "viscostii": 32, "custom_mu": 32, "reimplement": 32, "commonli": 32, "appropri": [32, 881, 906, 1728], "phase_02": 32, "0x7f2d2a6b53f0": 32, "vapor_pressur": [32, 685], "salin": [32, 861, 885, 892, 896, 903], "mass_to_molar": [32, 681, 684, 685], "mw": [32, 681, 857, 858, 859, 860, 863, 864, 873, 878, 883, 887, 888, 889, 890, 891, 898, 899, 900, 902, 1902], "molecular_weight": [32, 857, 858, 859, 860, 863, 864, 873, 878, 883, 887, 888, 889, 890, 891, 898, 899, 900, 902, 912, 1512, 1902], "liquid_pure_antoin": [32, 685], "therebi": 32, "molar_denstii": 32, "cycl": [32, 624], "upstream": 32, "unusu": 32, "reproduc": 32, "api": [32, 33, 493], "unnecessari": [32, 1060, 1098, 1254, 1729, 1747], "On": [32, 34, 37], "beta": [32, 930, 931], "oxygen": 32, "nitrogen": 32, "o2": 32, "phase_03": 32, "0x7f2d2736ab10": 32, "thermo": 32, "synonym": 32, "databas": 32, "BUT": 32, "host": 32, "7782": 32, "common_nam": 32, "charg": [32, 931], "formula": [32, 881, 921], "boiling_temperatur": [32, 884, 888, 890, 891], "1878078805": 32, "melting_temperatur": 32, "triple_point_temperatur": 32, "361": 32, "triple_point_pressur": 32, "277647044": 32, "dipole_mo": 32, "lj_diamet": [32, 863], "29728": 32, "lj_energi": [32, 863], "6520845934e": 32, "surface_tension_tb": [32, 865], "013145681055529814": 32, "molar_volume_tb": [32, 865], "8039990920723867e": 32, "9988": [32, 681], "critical_temperatur": [32, 854, 858, 859, 863, 870, 884, 891, 895, 899, 900, 902], "581": 32, "critical_pressur": [32, 863, 884, 888, 890, 895, 899, 900, 902], "5043000": 32, "critical_volum": [32, 858, 859], "33675715334e": 32, "critical_compressibilty_factor": 32, "28787424687871216": 32, "acentric_factor": [32, 858, 859, 863, 870, 888, 890, 895, 902], "0222": 32, "prefix": [32, 652], "stiel": [32, 900, 902], "thodo": [32, 900], "gas_pure_l": 32, "gas_pure_st": 32, "0102393e": 32, "tcrit": 32, "becuas": [32, 131], "gase": [32, 853], "standardliquid": [32, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629], "standardga": [32, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567], "approximat": 32, "h2o": [32, 1512], "popul": 32, "phase_04": 32, "0x7f2d273ad850": 32, "heat_capacity_ga": [32, 870], "heat_capac": [32, 867, 868, 869], "phase_05": 32, "0x7f2d273add00": 32, "minim": 32, "liquid_pure_costald": 32, "vc": [32, 858, 859], "omega": [32, 858, 859, 863, 870, 888, 890, 895, 902], "gas_pure_trc": 32, "liquid_pure_rp": 32, "cpg": [32, 870], "liquid_pure_gismr": 32, "tb": [32, 884, 888, 890, 891], "liquid_pure_l": 32, "n2": 32, "standardgasmixtur": [32, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601], "79": [32, 34], "compositio": 32, "mixture_01": 32, "0x7f2d273906d0": 32, "mole_fract": [32, 1322, 1345, 1354, 1356, 1379, 1388, 1390, 1413, 1422, 1452, 1475, 1569, 1592, 1601, 1631, 1654, 1663], "blend": 32, "78599451e": 32, "01895979e": 32, "sub": [32, 953, 955, 956, 992, 994, 995, 1030, 1032, 1033, 1068, 1070, 1071, 1106, 1108, 1109, 1147, 1149, 1150, 1186, 1188, 1189, 1224, 1226, 1227, 1262, 1264, 1265, 1721, 1725, 1726, 1916, 1917], "0x7f2d273ad6c0": 32, "0x7f2d273afc90": 32, "liquidmixtur": [32, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1630], "gasmixtur": [32, 1321, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1568], "remove_comp": 32, "liter": [32, 967, 1006, 1044, 1082, 1122, 1161, 1200, 1238, 1276], "add_comp": 32, "compnam": [32, 875, 1354, 1388, 1422, 1601, 1663], "09391681e": 32, "6985128e": 32, "propertei": 32, "failur": 32, "mole_fraction_too_low": 32, "mole_fraction_too_high": 32, "symbmol": 32, "instruct": [32, 659], "mole_fraction_weight": 32, "55121679e": 32, "suffix": [32, 1903, 1904], "crucial": 32, "viscsoiti": 32, "turn": [32, 495, 572, 636, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "0x7f3b028522f0": 33, "driven": 33, "0x7f3b0012d080": 33, "00089319": 33, "simplest": 33, "hagan": 33, "prefactor": [33, 939], "g_h": 33, "protip": 33, "55989938e": 33, "08063915e": 33, "29669383e": 33, "06168625e": 33, "11787982e": 33, "51794792e": 33, "63068734e": 33, "07447452e": 33, "19915615e": 33, "19508394e": 33, "42085525e": 33, "86693685e": 33, "96565334e": 33, "19485163e": 33, "23885064e": 33, "75523035e": 33, "20205811e": 33, "25035184e": 33, "34563270e": 33, "90652352e": 33, "99615034e": 33, "42236125e": 33, "24853266e": 33, "01476563e": 33, "52172712e": 33, "40332572e": 33, "14588689e": 33, "38526324e": 33, "10427546e": 33, "84068544e": 33, "74458633e": 33, "85851954e": 33, "50873827e": 33, "10395808e": 33, "78410092e": 33, "11579511e": 33, "68870775e": 33, "13196854e": 33, "54597730e": 33, "01745735e": 33, "auotmat": 33, "stokes_01": 33, "0x7f3b0012e750": 33, "set_rate_bc": 33, "preceed": [33, 1763], "sustain": [33, 923], "compon": [33, 854, 858, 864, 865, 876, 877, 878, 901, 933, 1321, 1322, 1331, 1345, 1354, 1355, 1356, 1365, 1379, 1388, 1389, 1390, 1399, 1413, 1422, 1451, 1452, 1461, 1475, 1568, 1569, 1578, 1592, 1601, 1630, 1631, 1640, 1654, 1663, 1749, 1903, 1904], "multiphys": [33, 525, 543], "quanti": 33, "245442": 33, "21666962": 33, "243019": 33, "76065208": 33, "239795": 33, "02594576": 33, "238440": 33, "7611962": 33, "238199": 33, "18378343": 33, "kpa": 33, "simplist": 33, "finish": 33, "intersect": [33, 45, 52, 53, 54, 57, 68, 77, 84, 85, 86, 89, 94, 104, 111, 112, 113, 117, 126, 137, 144, 145, 146, 149, 159, 170, 177, 178, 179, 182, 192, 202, 209, 210, 211, 215, 224, 235, 242, 243, 244, 247, 257, 268, 275, 276, 277, 280, 290, 301, 308, 309, 310, 313, 323, 334, 341, 342, 343, 346, 357, 368, 375, 376, 377, 380, 390, 401, 408, 409, 410, 413, 423, 434, 441, 442, 443, 446, 456, 467, 474, 475, 476, 479, 488, 500, 507, 508, 509, 512, 520, 529, 536, 537, 538, 541, 547, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 695, 697, 698, 699, 711, 712, 713, 726, 727, 728, 754, 772, 780, 781, 782, 809, 810, 811, 812, 814, 952, 953, 956, 957, 966, 967, 968, 969, 972, 978, 991, 992, 995, 996, 1005, 1006, 1007, 1008, 1011, 1017, 1029, 1030, 1033, 1034, 1043, 1044, 1045, 1046, 1049, 1055, 1067, 1068, 1071, 1072, 1081, 1082, 1083, 1084, 1087, 1093, 1105, 1106, 1109, 1110, 1121, 1122, 1123, 1124, 1127, 1133, 1146, 1147, 1150, 1151, 1160, 1161, 1162, 1163, 1166, 1172, 1185, 1186, 1189, 1190, 1199, 1200, 1201, 1202, 1205, 1211, 1223, 1224, 1227, 1228, 1237, 1238, 1239, 1240, 1243, 1249, 1261, 1262, 1265, 1266, 1275, 1276, 1277, 1278, 1281, 1287, 1298, 1305, 1306, 1307, 1310, 1316, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1396, 1405, 1406, 1407, 1410, 1417, 1428, 1435, 1436, 1437, 1440, 1446, 1458, 1467, 1468, 1469, 1472, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1545, 1552, 1553, 1554, 1557, 1563, 1575, 1584, 1585, 1586, 1589, 1596, 1607, 1614, 1615, 1616, 1619, 1625, 1637, 1646, 1647, 1648, 1651, 1658, 1669, 1676, 1677, 1678, 1681, 1687, 1721, 1725, 1726, 1869, 1870], "88434325e": 33, "28647895e": 33, "55641580e": 33, "93263574e": 33, "65217110e": 33, "91991401e": 33, "19221005e": 33, "15819519e": 33, "85457161e": 33, "48288551e": 33, "12057973e": 33, "27377390e": 33, "98480138e": 33, "86084960e": 33, "65319235e": 33, "03539018e": 33, "13285910e": 33, "13608801e": 33, "09549097e": 33, "80615525e": 33, "85290186e": 33, "86483172e": 33, "89601121e": 33, "07107542e": 33, "81885445e": 33, "80924074e": 33, "64020194e": 33, "16901195e": 33, "84185884e": 33, "55798100e": 33, "76563648e": 33, "66753109e": 33, "32515276e": 33, "97990004e": 33, "64889471e": 33, "96132170e": 33, "09797740e": 33, "63999444e": 33, "60984291e": 33, "86535421e": 33, "46567586e": 33, "39178056e": 33, "03371060e": 33, "53272959e": 33, "46832992e": 33, "53962216e": 33, "31037925e": 33, "58275768e": 33, "50430093e": 33, "91341614e": 33, "20190695e": 33, "21508938e": 33, "73821730e": 33, "70288955e": 33, "43897736e": 33, "78294341e": 33, "15041639e": 33, "19062203e": 33, "27044019e": 33, "12501788e": 33, "58113280e": 33, "95322389e": 33, "79957042e": 33, "49381742e": 33, "35919289e": 33, "39568690e": 33, "41607066e": 33, "50577446e": 33, "47869355e": 33, "02349580e": 33, "89657969e": 33, "91687743e": 33, "14567551e": 33, "87951979e": 33, "03060703e": 33, "34817016e": 33, "64408357e": 33, "73230816e": 33, "34463061e": 33, "32116447e": 33, "33958567e": 33, "92035515e": 33, "83440265e": 33, "77449655e": 33, "34519105e": 33, "59354279e": 33, "41819665e": 33, "78299999e": 33, "07681917e": 33, "18791131e": 33, "17025332e": 33, "27511510e": 33, "01106405e": 33, "63318956e": 33, "63701788e": 33, "81622221e": 33, "08783694e": 33, "02137111e": 33, "poisseiul": 33, "f_h": 33, "roll": [33, 37], "invert": [33, 131], "f_": 33, "42978981e": 33, "68996114e": 33, "18017219e": 33, "68823682e": 33, "07305117e": 33, "36884085e": 33, "48382469e": 33, "97438200e": 33, "09424850e": 33, "03867504e": 33, "25768601e": 33, "78076605e": 33, "79053661e": 33, "85009646e": 33, "69570778e": 33, "23913968e": 33, "74263406e": 33, "78888448e": 33, "22308227e": 33, "70931423e": 33, "89716522e": 33, "36296839e": 33, "04870493e": 33, "91682748e": 33, "36939864e": 33, "75725922e": 33, "10038569e": 33, "23035118e": 33, "00291175e": 33, "75560672e": 33, "52856559e": 33, "53063679e": 33, "34248999e": 33, "56953827e": 33, "70099933e": 33, "93743478e": 33, "36594065e": 33, "03161235e": 33, "88526269e": 33, "29188352e": 33, "253992": 33, "98768804": 33, "251479": 33, "16070639": 33, "248078": 33, "35461064": 33, "246596": 33, "72807572": 33, "246333": 33, "75167113": 33, "inclus": 33, "multiphas": [34, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 552], "motiv": 34, "ordinari": 34, "imbibit": 34, "imbibt": 34, "menisci": 34, "plan": 34, "degre": [34, 1748, 1749], "displac": [34, 908, 928, 1711], "increasingli": 34, "p_": [34, 928], "decreas": 34, "suction": 34, "stem": 34, "regardless": [34, 100, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "clear": [34, 41, 42, 43, 61, 62, 65, 75, 91, 92, 102, 121, 123, 133, 134, 135, 153, 154, 156, 166, 167, 168, 186, 187, 189, 200, 219, 221, 231, 232, 233, 251, 252, 254, 264, 265, 266, 284, 285, 287, 297, 298, 299, 317, 318, 320, 330, 331, 332, 350, 351, 354, 364, 365, 366, 384, 385, 387, 397, 398, 399, 417, 418, 420, 430, 431, 432, 450, 451, 453, 463, 464, 465, 483, 484, 517, 527, 544, 545, 592, 605, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685], "inject": 34, "withdraw": 34, "connected_compon": [34, 1712, 1750], "drop_zero": [34, 950, 951, 989, 990, 1027, 1028, 1065, 1066, 1103, 1104, 1144, 1145, 1183, 1184, 1221, 1222, 1259, 1260], "51": 34, "57": 34, "65": [34, 881], "66": 34, "70": 34, "72": 34, "74": [34, 36], "81": 34, "82": 34, "84": 34, "87": 34, "88": 34, "92": 34, "94": 34, "95": 34, "101": [34, 957, 996, 1034, 1072, 1110, 1151, 1190, 1228, 1266], "102": 34, "104": 34, "106": 34, "107": 34, "108": 34, "114": 34, "116": 34, "117": 34, "118": 34, "123": 34, "125": 34, "127": 34, "129": 34, "132": 34, "137": 34, "138": 34, "142": 34, "145": 34, "152": 34, "155": 34, "156": 34, "157": 34, "158": 34, "159": 34, "163": [34, 925], "164": 34, "165": 34, "166": 34, "167": 34, "168": [34, 908], "169": 34, "170": 34, "171": 34, "172": 34, "173": 34, "174": 34, "175": 34, "176": 34, "177": [34, 763], "178": 34, "179": 34, "181": 34, "182": 34, "183": 34, "184": 34, "185": 34, "186": 34, "187": 34, "188": 34, "189": 34, "191": 34, "192": 34, "193": 34, "194": 34, "195": 34, "196": 34, "197": 34, "198": 34, "199": 34, "201": [34, 957, 996, 1034, 1072, 1110, 1151, 1190, 1228, 1266], "202": 34, "203": 34, "204": 34, "205": 34, "207": 34, "208": 34, "209": 34, "210": 34, "212": 34, "213": 34, "214": 34, "215": 34, "217": 34, "218": 34, "219": 34, "220": 34, "221": 34, "223": 34, "224": 34, "226": 34, "228": 34, "229": 34, "230": 34, "231": 34, "232": 34, "233": 34, "234": 34, "235": 34, "236": [34, 921], "237": 34, "238": 34, "239": 34, "240": [34, 896], "241": 34, "242": 34, "243": 34, "244": 34, "245": 34, "248": 34, "249": 34, "250": 34, "251": 34, "252": 34, "253": 34, "254": 34, "255": 34, "256": 34, "257": 34, "258": 34, "259": 34, "260": 34, "261": 34, "262": [34, 764], "263": 34, "264": 34, "265": 34, "266": 34, "267": 34, "268": 34, "269": 34, "270": 34, "271": 34, "272": 34, "273": [34, 861, 885, 892, 896, 903], "274": [34, 764], "275": 34, "276": 34, "277": 34, "278": 34, "279": 34, "280": 34, "281": 34, "282": 34, "283": 34, "284": 34, "285": 34, "286": 34, "287": 34, "288": 34, "289": 34, "290": [34, 742], "291": 34, "292": 34, "293": 34, "294": 34, "295": [34, 921], "296": 34, "cmap": [34, 1916, 1917], "cm": 34, "nipy_spectr": 34, "black": 34, "thoughout": 34, "speak": 34, "uninvad": [34, 100, 1712, 1720], "yellow": 34, "invaded_por": 34, "isin": 34, "viridi": [34, 1919], "yeild": [34, 1022], "increaingli": 34, "beyond": [34, 854, 908, 924, 1737], "drainage_01": 34, "0x7f4b465642c0": 34, "trap": [34, 100, 124, 198, 222], "actaulli": 34, "histori": [34, 100], "inv_pattern": 34, "9000": 34, "grei": [34, 1921], "post": 34, "escap": [34, 100], "apply_trap": 34, "set_outlet_bc": [34, 198], "froma": 34, "namedtupl": 34, "evacu": 34, "data2": 34, "plateau": 34, "rigor": [34, 930, 931], "fictiti": 34, "invaded": 34, "percoalt": 34, "event": 34, "increment": 34, "mainli": 34, "binari": [34, 131, 197, 516, 552, 648, 864, 1321], "heap": [34, 197], "queue": 34, "accessb": 34, "newli": [34, 1711, 1751], "pinv": 34, "alloc": 34, "tinv": 34, "9260": 34, "551831957264": 34, "9493": 34, "684102948077": 34, "8650": 34, "998219036306": 34, "381": 34, "2nd": [34, 807], "heapq": 34, "hq": 34, "heapifi": 34, "easilii": 34, "sequenti": 34, "care": 34, "heappop": 34, "p_new": 34, "p_next": 34, "t_new": 34, "t_next": 34, "401": [34, 892], "maintain": [34, 1746, 1834, 1846, 1859, 1879], "heappush": 34, "confirm": [34, 858], "lowest": [34, 1919], "compil": 34, "numba": [34, 197], "acceler": 34, "abovec": 34, "reset": [34, 197, 818], "contigu": 34, "untrap": 34, "vari": 34, "overlai": 34, "data_ip": 34, "film": 34, "crack": 34, "jump": 34, "rise": 34, "fall": 34, "spike": 34, "vallei": 34, "never": [34, 747], "envelop": 34, "peak": 34, "current_directori": 35, "plotli": [35, 1919], "pip": [35, 37], "instal": [35, 660], "pane": 35, "consol": [35, 37, 661], "editor": 35, "wirefram": 35, "transpar": [35, 1916, 1917, 1918], "static": [35, 1766, 1768, 1779, 1781], "scatter": [35, 1917], "plot_notebook": 35, "rotat": [35, 1748, 1919], "zoom": [35, 1919], "hover": 35, "box": 35, "node_color": [35, 1919, 1920], "node_scal": [35, 1919], "sceenshot": 35, "compat": [35, 37, 1711, 1909, 1910], "export": [35, 653, 654, 660, 666, 1916], "vtp": [35, 666, 667], "paraveiw": 35, "project_to_vtk": 35, "file_nam": 35, "directori": [35, 37, 648, 1888, 1893], "path_to_fil": 35, "_vtk": 35, "filenam": [35, 646, 647, 648, 650, 651, 653, 654, 655, 658, 659, 660, 662, 664, 666, 667, 668, 1888, 1889, 1893, 1894], "paraview_net": 35, "parview": 35, "click": 35, "button": 35, "glyph": 35, "tool": [35, 742], "pipelin": [35, 824], "alphabet": 35, "shrink": 35, "celldatatopointdata": 35, "transpos": 35, "extractsurfac": 35, "proport": [35, 827, 1917], "icon": 35, "glyph1": 35, "solid": [35, 853, 923, 930, 931, 1752, 1753, 1915, 1916, 1917], "tube1": 35, "didn": 35, "public": 36, "gostick": [36, 742, 908, 924], "aghighi": 36, "hinebaugh": 36, "tranter": 36, "hoeh": 36, "ma": 36, "dai": 36, "spellaci": 36, "sharqawi": [36, 861, 885, 896, 903], "mh": 36, "bazylak": 36, "burn": 36, "lehnert": 36, "scienc": [36, 764], "engin": [36, 881], "2016": [36, 198, 925], "doi": [36, 198, 888, 890], "1109": 36, "mcse": 36, "heavili": 37, "stack": [37, 1749], "environ": 37, "anaconda": 37, "Be": 37, "frequent": [37, 930, 931], "publish": 37, "releas": 37, "month": 37, "latest": 37, "branch": 37, "git": 37, "com": 37, "pmeal": 37, "contributor": 37, "uninstal": 37, "command": 37, "clone": [37, 1710, 1713], "repo": 37, "local": 37, "sound": 37, "termin": 37, "cmd": 37, "cd": 37, "somewher": 37, "disk": [37, 655, 1729], "txt": 37, "resort": 37, "voila": 37, "date": [37, 1894], "gui": [37, 1879], "gitfork": 37, "gitkraken": 37, "program": 37, "menu": [37, 1879], "env": 37, "kwarg": [39, 73, 99, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 494, 495, 516, 525, 554, 571, 572, 620, 635, 636, 644, 823, 824, 854, 933, 944, 946, 983, 985, 1022, 1023, 1060, 1061, 1098, 1099, 1138, 1140, 1177, 1179, 1216, 1217, 1254, 1255, 1293, 1294, 1321, 1323, 1344, 1355, 1357, 1378, 1389, 1391, 1412, 1423, 1424, 1451, 1453, 1474, 1484, 1485, 1512, 1513, 1540, 1541, 1568, 1570, 1591, 1602, 1603, 1630, 1632, 1653, 1664, 1665, 1702, 1706, 1708, 1715, 1718, 1721, 1722, 1725, 1726, 1737, 1748, 1749, 1756, 1759, 1762, 1763, 1764, 1766, 1768, 1771, 1773, 1775, 1777, 1779, 1781, 1782, 1784, 1785, 1811, 1835, 1879, 1916, 1917], "reactivetransport": [39, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 428], "advect": [39, 328, 906], "iterative_prop": [39, 73, 99, 131, 164, 197, 229, 262, 295, 328, 362, 395, 428, 461, 525], "bctype": [41, 61, 63, 75, 91, 102, 121, 122, 124, 133, 153, 166, 186, 200, 219, 220, 222, 231, 251, 264, 284, 297, 317, 330, 350, 352, 364, 384, 397, 417, 430, 450, 463, 483, 527, 544], "shallow": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 466, 499, 528, 556, 575, 610, 622, 949, 988, 1026, 1064, 1102, 1143, 1182, 1220, 1258, 1297, 1327, 1361, 1395, 1427, 1457, 1488, 1516, 1544, 1574, 1606, 1636, 1668, 1787, 1799, 1813, 1826, 1851, 1864], "array_lik": [45, 59, 61, 62, 63, 64, 65, 66, 70, 77, 91, 92, 96, 104, 121, 123, 128, 137, 151, 153, 154, 155, 156, 157, 161, 170, 184, 186, 187, 188, 189, 190, 194, 202, 219, 221, 226, 235, 249, 251, 252, 253, 254, 255, 259, 268, 282, 284, 285, 286, 287, 288, 292, 301, 315, 317, 318, 319, 320, 321, 325, 334, 348, 349, 350, 351, 352, 353, 354, 355, 359, 368, 382, 383, 384, 385, 386, 387, 388, 392, 401, 415, 416, 417, 418, 419, 420, 421, 425, 434, 448, 449, 450, 451, 452, 453, 454, 458, 467, 481, 483, 484, 485, 486, 490, 500, 517, 522, 529, 543, 544, 545, 549, 568, 576, 592, 596, 600, 605, 644, 742, 827, 830, 908, 944, 945, 950, 951, 952, 953, 954, 955, 956, 957, 967, 976, 980, 983, 984, 989, 990, 991, 992, 993, 994, 995, 996, 1006, 1015, 1019, 1022, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1044, 1053, 1057, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1082, 1091, 1095, 1098, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1122, 1131, 1135, 1139, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1161, 1170, 1174, 1177, 1178, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1200, 1209, 1213, 1216, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1238, 1247, 1251, 1254, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1276, 1285, 1289, 1298, 1314, 1318, 1322, 1328, 1347, 1351, 1356, 1362, 1381, 1385, 1390, 1396, 1415, 1419, 1428, 1444, 1448, 1452, 1458, 1477, 1481, 1489, 1505, 1509, 1517, 1533, 1537, 1545, 1561, 1565, 1569, 1575, 1594, 1598, 1607, 1623, 1627, 1631, 1637, 1656, 1660, 1669, 1685, 1689, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1730, 1731, 1735, 1736, 1737, 1738, 1745, 1748, 1749, 1750, 1751, 1752, 1753, 1916, 1917, 1920], "union": [45, 52, 53, 54, 57, 68, 77, 84, 85, 86, 89, 94, 104, 111, 112, 113, 117, 126, 137, 144, 145, 146, 149, 159, 170, 177, 178, 179, 182, 192, 202, 209, 210, 211, 215, 224, 235, 242, 243, 244, 247, 257, 268, 275, 276, 277, 280, 290, 301, 308, 309, 310, 313, 323, 334, 341, 342, 343, 346, 357, 368, 375, 376, 377, 380, 390, 401, 408, 409, 410, 413, 423, 434, 441, 442, 443, 446, 456, 467, 474, 475, 476, 479, 488, 500, 507, 508, 509, 512, 520, 529, 536, 537, 538, 541, 547, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 952, 953, 956, 957, 966, 967, 968, 969, 972, 978, 991, 992, 995, 996, 1005, 1006, 1007, 1008, 1011, 1017, 1029, 1030, 1033, 1034, 1043, 1044, 1045, 1046, 1049, 1055, 1067, 1068, 1071, 1072, 1081, 1082, 1083, 1084, 1087, 1093, 1105, 1106, 1109, 1110, 1121, 1122, 1123, 1124, 1127, 1133, 1146, 1147, 1150, 1151, 1160, 1161, 1162, 1163, 1166, 1172, 1185, 1186, 1189, 1190, 1199, 1200, 1201, 1202, 1205, 1211, 1223, 1224, 1227, 1228, 1237, 1238, 1239, 1240, 1243, 1249, 1261, 1262, 1265, 1266, 1275, 1276, 1277, 1278, 1281, 1287, 1298, 1305, 1306, 1307, 1310, 1316, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1396, 1405, 1406, 1407, 1410, 1417, 1428, 1435, 1436, 1437, 1440, 1446, 1458, 1467, 1468, 1469, 1472, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1545, 1552, 1553, 1554, 1557, 1563, 1575, 1584, 1585, 1586, 1589, 1596, 1607, 1614, 1615, 1616, 1619, 1625, 1637, 1646, 1647, 1648, 1651, 1658, 1669, 1676, 1677, 1678, 1681, 1687, 1721, 1725, 1726, 1878], "exclusive_or": [45, 52, 53, 54, 57, 68, 77, 84, 85, 86, 89, 94, 104, 111, 112, 113, 117, 126, 137, 144, 145, 146, 149, 159, 170, 177, 178, 179, 182, 192, 202, 209, 210, 211, 215, 224, 235, 242, 243, 244, 247, 257, 268, 275, 276, 277, 280, 290, 301, 308, 309, 310, 313, 323, 334, 341, 342, 343, 346, 357, 368, 375, 376, 377, 380, 390, 401, 408, 409, 410, 413, 423, 434, 441, 442, 443, 446, 456, 467, 474, 475, 476, 479, 488, 500, 507, 508, 509, 512, 520, 529, 536, 537, 538, 541, 547, 576, 583, 584, 585, 588, 594, 600, 601, 602, 603, 604, 606, 952, 953, 956, 957, 966, 967, 968, 969, 972, 978, 991, 992, 995, 996, 1005, 1006, 1007, 1008, 1011, 1017, 1029, 1030, 1033, 1034, 1043, 1044, 1045, 1046, 1049, 1055, 1067, 1068, 1071, 1072, 1081, 1082, 1083, 1084, 1087, 1093, 1105, 1106, 1109, 1110, 1121, 1122, 1123, 1124, 1127, 1133, 1146, 1147, 1150, 1151, 1160, 1161, 1162, 1163, 1166, 1172, 1185, 1186, 1189, 1190, 1199, 1200, 1201, 1202, 1205, 1211, 1223, 1224, 1227, 1228, 1237, 1238, 1239, 1240, 1243, 1249, 1261, 1262, 1265, 1266, 1275, 1276, 1277, 1278, 1281, 1287, 1298, 1305, 1306, 1307, 1310, 1316, 1328, 1337, 1338, 1339, 1342, 1349, 1362, 1371, 1372, 1373, 1376, 1383, 1396, 1405, 1406, 1407, 1410, 1417, 1428, 1435, 1436, 1437, 1440, 1446, 1458, 1467, 1468, 1469, 1472, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1545, 1552, 1553, 1554, 1557, 1563, 1575, 1584, 1585, 1586, 1589, 1596, 1607, 1614, 1615, 1616, 1619, 1625, 1637, 1646, 1647, 1648, 1651, 1658, 1669, 1676, 1677, 1678, 1681, 1687, 1721, 1725, 1726], "criteria": [45, 77, 104, 137, 170, 202, 235, 268, 301, 334, 368, 401, 434, 467, 500, 529, 576, 600, 952, 955, 991, 994, 1029, 1032, 1067, 1070, 1105, 1108, 1146, 1149, 1185, 1188, 1223, 1226, 1261, 1264, 1298, 1328, 1362, 1396, 1428, 1458, 1489, 1517, 1545, 1575, 1607, 1637, 1669, 1719, 1915], "subset": [45, 77, 104, 137, 170, 202, 235, 268, 301, 334, 368, 401, 434, 467, 495, 500, 529, 572, 576, 600, 636, 946, 952, 985, 991, 1023, 1029, 1061, 1067, 1099, 1105, 1140, 1146, 1179, 1185, 1217, 1223, 1255, 1261, 1294, 1298, 1323, 1328, 1357, 1362, 1391, 1396, 1424, 1428, 1453, 1458, 1485, 1489, 1513, 1517, 1541, 1545, 1570, 1575, 1603, 1607, 1632, 1637, 1665, 1669, 1914], "requrest": [48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 961, 1000, 1038, 1076, 1116, 1155, 1194, 1232, 1270, 1301, 1332, 1366, 1400, 1431, 1462, 1492, 1520, 1548, 1579, 1610, 1641, 1672], "pore1": [48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 701, 716, 731, 961, 1000, 1038, 1076, 1116, 1155, 1194, 1232, 1270, 1301, 1332, 1366, 1400, 1431, 1462, 1492, 1520, 1548, 1579, 1610, 1641, 1672], "pore2": [48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 701, 716, 731, 961, 1000, 1038, 1076, 1116, 1155, 1194, 1232, 1270, 1301, 1332, 1366, 1400, 1431, 1462, 1492, 1520, 1548, 1579, 1610, 1641, 1672], "addition": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 474, 507, 536, 583, 601, 663, 966, 1005, 1043, 1081, 1121, 1160, 1199, 1237, 1275, 1305, 1337, 1371, 1405, 1435, 1467, 1496, 1524, 1552, 1584, 1614, 1646, 1676], "sought": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 474, 507, 536, 583, 601, 894, 954, 955, 956, 957, 966, 993, 994, 995, 996, 1005, 1031, 1032, 1033, 1034, 1043, 1069, 1070, 1071, 1072, 1081, 1107, 1108, 1109, 1110, 1111, 1112, 1121, 1148, 1149, 1150, 1151, 1160, 1187, 1188, 1189, 1190, 1199, 1225, 1226, 1227, 1228, 1237, 1263, 1264, 1265, 1266, 1275, 1305, 1337, 1371, 1405, 1435, 1467, 1496, 1524, 1552, 1584, 1614, 1646, 1676, 1721, 1725, 1726, 1727], "num_throat": [53, 85, 112, 145, 178, 210, 243, 276, 309, 342, 376, 409, 442, 475, 508, 537, 584, 602, 950, 951, 968, 989, 990, 1007, 1027, 1028, 1045, 1065, 1066, 1083, 1103, 1104, 1123, 1144, 1145, 1162, 1183, 1184, 1201, 1221, 1222, 1239, 1259, 1260, 1277, 1306, 1338, 1372, 1406, 1436, 1468, 1497, 1525, 1553, 1585, 1615, 1647, 1677], "num_por": [54, 86, 113, 146, 179, 211, 244, 277, 310, 343, 377, 410, 443, 476, 495, 509, 538, 572, 585, 603, 636, 946, 969, 985, 1008, 1023, 1046, 1061, 1084, 1099, 1124, 1140, 1163, 1179, 1202, 1217, 1240, 1255, 1278, 1294, 1307, 1323, 1339, 1357, 1373, 1391, 1407, 1424, 1437, 1453, 1469, 1485, 1498, 1513, 1526, 1541, 1554, 1570, 1586, 1603, 1616, 1632, 1648, 1665, 1678], "lifo": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 564, 587, 616, 631, 971, 1010, 1048, 1086, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1793, 1805, 1819, 1892], "keyerror": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 564, 587, 615, 616, 630, 631, 971, 1010, 1048, 1086, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1792, 1793, 1804, 1805, 1818, 1819, 1873, 1874, 1891, 1892], "indici": [57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 479, 512, 541, 588, 604, 972, 1011, 1049, 1087, 1112, 1127, 1166, 1205, 1243, 1281, 1310, 1342, 1376, 1410, 1440, 1472, 1501, 1529, 1557, 1589, 1619, 1651, 1681], "wildcard": [57, 68, 89, 94, 117, 126, 149, 159, 182, 192, 215, 224, 247, 257, 280, 290, 313, 323, 346, 357, 380, 390, 413, 423, 446, 456, 479, 488, 512, 520, 541, 547, 588, 594, 604, 606, 972, 978, 1011, 1017, 1049, 1055, 1087, 1093, 1127, 1133, 1166, 1172, 1205, 1211, 1243, 1249, 1281, 1287, 1310, 1316, 1342, 1349, 1376, 1383, 1410, 1417, 1440, 1446, 1472, 1479, 1501, 1507, 1529, 1535, 1557, 1563, 1589, 1596, 1619, 1625, 1651, 1658, 1681, 1687], "compound": [57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 479, 512, 541, 588, 604, 881, 972, 1011, 1049, 1087, 1127, 1166, 1205, 1243, 1281, 1310, 1342, 1376, 1410, 1440, 1472, 1501, 1529, 1557, 1589, 1619, 1651, 1681], "opt": [57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 479, 512, 541, 588, 604, 972, 1011, 1049, 1087, 1127, 1166, 1205, 1243, 1281, 1310, 1342, 1376, 1410, 1440, 1472, 1501, 1529, 1557, 1589, 1619, 1651, 1681], "verbos": [60, 152, 185, 250, 283, 316, 482, 643, 1909, 1910], "solutioncontain": [60, 152, 185, 250, 283, 316, 482], "bcvalu": [61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 544], "wrapper": [61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 544, 641, 854, 924, 925, 1355, 1389, 1692], "remvo": [61, 91, 121, 122, 124, 153, 186, 219, 220, 222, 251, 284, 317, 350, 384, 417, 450, 483, 544], "intact": [62, 92, 123, 154, 187, 221, 252, 285, 318, 351, 385, 418, 451, 484, 517, 545, 592, 605, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685], "outflow": [63, 352], "set_bc": [63, 64, 66, 155, 157, 188, 190, 253, 255, 286, 288, 319, 321, 352, 353, 355, 386, 388, 419, 421, 452, 454, 485, 486], "conditon": [64, 66, 155, 157, 188, 190, 253, 255, 286, 288, 319, 321, 353, 355, 386, 388, 419, 421, 452, 454, 485, 486], "dirichlet": [66, 157, 190, 255, 288, 321, 355, 388, 421, 454, 486], "omit": [68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 456, 488, 520, 547, 594, 606, 950, 951, 978, 989, 990, 1017, 1027, 1028, 1055, 1065, 1066, 1093, 1103, 1104, 1133, 1144, 1145, 1172, 1183, 1184, 1211, 1221, 1222, 1249, 1259, 1260, 1287, 1316, 1349, 1383, 1417, 1446, 1479, 1507, 1535, 1563, 1596, 1625, 1658, 1687], "inidic": [68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 456, 488, 520, 547, 594, 606, 978, 1017, 1055, 1093, 1133, 1172, 1211, 1249, 1287, 1316, 1349, 1383, 1417, 1446, 1479, 1507, 1535, 1563, 1596, 1625, 1658, 1687], "foundat": 73, "themselv": [100, 854, 956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265], "pressu": 120, "defend": [124, 222], "void": 131, "confin": 131, "simualt": 131, "oppos": 131, "n_": 131, "lineartransport": [164, 229, 295], "fourierconduct": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "speed": [197, 1060, 1098, 1254, 1729, 1747], "upon": [197, 495, 496, 572, 573, 636, 637, 746, 797, 823, 946, 947, 985, 986, 1023, 1024, 1061, 1062, 1099, 1100, 1140, 1141, 1179, 1180, 1217, 1218, 1255, 1256, 1294, 1295, 1323, 1324, 1357, 1358, 1391, 1392, 1424, 1425, 1453, 1454, 1485, 1486, 1513, 1514, 1541, 1542, 1570, 1571, 1603, 1604, 1632, 1633, 1665, 1666], "effici": 197, "masson": 198, "ninf": 198, "alg": [198, 1916, 1917], "1016": 198, "cageo": 198, "003": 198, "ionic": 229, "role": 229, "ohmicconduct": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "phenomena": 262, "signifi": [349, 383, 416, 449, 543, 1915], "instanti": [349, 383, 416, 449, 543, 1835, 1879], "intermedi": [349, 383, 416, 449, 543, 644], "transientsolut": [349, 383, 416, 449, 543, 644], "transientfickiandiffus": [363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394], "thermal": [395, 888, 889, 890, 891, 892, 941, 942], "transientfourierconduct": [396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "transientreactivetransport": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "obj": [495, 496, 572, 573, 636, 637, 946, 947, 985, 986, 1023, 1024, 1061, 1062, 1099, 1100, 1140, 1141, 1179, 1180, 1217, 1218, 1255, 1256, 1294, 1295, 1323, 1324, 1354, 1357, 1358, 1388, 1391, 1392, 1422, 1424, 1425, 1453, 1454, 1485, 1486, 1513, 1514, 1541, 1542, 1570, 1571, 1601, 1603, 1604, 1632, 1633, 1663, 1665, 1666, 1835, 1838, 1847, 1898, 1909, 1910], "immedi": [495, 572, 636, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "discard": [495, 572, 636, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "exclud": [514, 590, 638, 974, 1013, 1051, 1089, 1129, 1168, 1207, 1245, 1283, 1312, 1344, 1378, 1412, 1442, 1474, 1503, 1531, 1559, 1591, 1621, 1653, 1683, 1778], "constitu": 514, "domain1": [515, 591, 639, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684], "partit": [516, 552, 1699], "interfac": [516, 764, 908, 921, 928], "doesn": [518, 1915], "transientmultiphys": [526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551], "simultaneoulsi": 543, "pore_diffus": [552, 911, 912, 913, 914], "throat_diffus": [552, 911, 912, 913, 914], "size_factor": [552, 716, 731, 911, 912, 913, 914, 916, 917, 919, 920, 941, 942], "partition_coef_glob": 552, "partition_coef": 552, "global": [552, 956, 957, 995, 996, 1033, 1034, 1071, 1072, 1109, 1110, 1150, 1151, 1189, 1190, 1227, 1228, 1265, 1266, 1725, 1726], "dict_blurb": [552, 917, 923], "return_arr": [552, 917], "document": [552, 652, 1760, 1765, 1767, 1774, 1778, 1780, 1916, 1917], "mixin": [571, 599], "labelmixin": [600, 601, 602, 603, 604, 605, 606], "hold": [607, 652, 1847], "modelwrapp": [608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619], "unrepresent": [615, 630, 1792, 1804, 1818, 1891], "modelsmixin": 620, "dependency_list": [620, 623, 625], "modelsdict": [621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634], "intra": 623, "inter": 623, "unresolv": 624, "shell": [625, 1753], "map": [625, 649, 854, 1774, 1797], "drawn": [625, 847, 1916], "frame": 625, "modelsmixin2": [636, 637, 638, 639], "atol": [643, 1700], "linsolv": 643, "rk45": 643, "scipyrk45": 644, "od": 644, "dy": 644, "dt": [644, 763], "timespan": 644, "ex": 644, "t_i": 644, "jgf": [647, 655], "onto": 647, "3dma": 648, "np2th": 648, "th2np": 648, "eac": 648, "dimens": [648, 1060, 1098, 1254, 1711, 1716, 1729, 1737, 1748, 1915], "rocknam": 648, "th2pn": 648, "human": [648, 661], "brent": 648, "lindquist": 648, "medial": 648, "thin": [648, 1916], "skeleton": 648, "lee": [648, 895], "oh": 648, "venkatarangan": 648, "shin": 648, "prodanov": 648, "microtomographi": 648, "suni": 648, "stoni": 648, "brook": 648, "2005": [648, 896], "undirect": [649, 656, 1715, 1754, 1757], "gap": 649, "pore_": 649, "prepend": [649, 663], "central": [649, 750, 800, 835, 1737], "1x3": 649, "adj": 649, "throat_": 649, "embed": 649, "pergeo": 650, "avizo": 650, "pickl": [651, 1911], "dat": 652, "_node1": 652, "statoil": [652, 921, 1711], "maxim": 652, "ball": 652, "imperi": 652, "colleg": 652, "london": 652, "dataset": 652, "download": 652, "websit": 652, "header": 652, "theses": 652, "rectangular": [653, 770, 787, 790, 805, 814], "circular": [653, 752, 787, 789, 921, 1060, 1254, 1729, 1737, 1752], "comsol": 653, "mesh": [653, 660], "delim": [657, 663, 665], "explicit": 659, "salom": 659, "maxsiz": [660, 1829, 1841, 1854], "auto": [660, 1911], "fileformat": 660, "stl": 660, "logger_level": 660, "holder": [660, 667], "maximum": [660, 745, 747, 793, 796, 821, 822, 923, 955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264, 1715, 1743], "finner": 660, "slower": 660, "gmsh": 660, "fluent": 660, "ngsolv": 660, "logger": 660, "netgen": 660, "triangl": [660, 764, 950, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259], "tessel": [660, 908, 1060, 1098, 1254, 1729, 1747, 1757], "cad": 660, "slow": [660, 854, 956, 995, 1033, 1071, 1109, 1111, 1112, 1150, 1189, 1227, 1265, 1721, 1725, 1726], "hdf5": [661, 664], "flag": [661, 956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265, 1834, 1846, 1859], "categorize_bi": 663, "organ": 663, "net_01": 663, "hierarch": 663, "shorter": 665, "pvsm": 666, "fill_nan": 667, "fill_inf": 667, "vtk": 667, "rectangl": [672, 677, 678, 691, 696, 702, 703, 705, 710, 717, 718, 720, 725, 732, 733, 774, 779, 785, 786], "ideal_ga": 681, "0134": 681, "vdm": [681, 864], "gas_mixture_fesg": 681, "00422791": 681, "89606e": 681, "56383e": 681, "82082e": 681, "51815e": 681, "48553e": 681, "11409e": 681, "14280": 684, "47004": 684, "56254": 684, "00028": 684, "98691": 684, "0170967": 684, "3862e": 684, "00355837": 684, "00131e": 684, "23684e": 684, "1684e": 684, "generic_diffus": [687, 688], "generic_electr": 688, "generic_therm": 688, "symmetri": [691, 696, 699, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 717, 718, 725, 728, 732, 733, 735, 739, 930, 931], "cone": [692, 694, 697, 706, 708, 711, 721, 723, 726, 775, 777, 780], "throat_coord": [694, 695, 696, 697, 698, 699, 708, 709, 710, 711, 712, 713, 723, 724, 725, 726, 727, 728, 777, 778, 779, 780, 781, 782], "centroid": [694, 695, 696, 697, 698, 699, 708, 709, 710, 711, 712, 713, 723, 724, 725, 727, 728, 766, 772, 777, 779, 780, 781, 782, 1098, 1254, 1734, 1745], "pyramid": [695, 698, 700, 709, 712, 715, 724, 727, 730, 778, 781, 783], "trapezoid": [696, 699, 703, 710, 713, 718, 725, 728, 733, 779, 782, 786], "pore_coord": [697, 698, 699, 780, 781, 782], "pore_aspect": [707, 717, 722, 732], "throat_aspect": [707, 717, 722, 732], "aspect": [707, 717, 722, 732, 763, 1899], "divis": [714, 729, 923], "s_": [716, 731, 928, 930, 931, 932, 934, 935, 936, 937, 938, 939], "ndarri": [738, 742, 754, 1722], "spatailli": [740, 742], "sent": [741, 749, 799, 830, 832, 953, 957, 992, 996, 1030, 1034, 1068, 1072, 1106, 1110, 1147, 1151, 1186, 1190, 1224, 1228, 1262, 1266], "strel": 742, "strength": 742, "extent": 742, "achiev": 742, "geoemtri": 742, "appproach": 742, "anistrop": 742, "fuel": 742, "electrod": [742, 930, 931], "fibrou": [742, 908], "polym": 742, "electrolyt": [742, 930, 931], "membran": 742, "v173": 742, "pp277": 742, "pore_shap": [744, 1915], "adopt": [745, 793, 796, 821, 822], "eed": [746, 748, 750, 797, 798, 800, 823, 828, 835], "uninti": [746, 797, 823], "stats_obj": [746, 797, 823], "0001": [746, 748, 750, 797, 798, 800, 823, 828, 835, 933], "fixed_diamet": 747, "touch": [747, 923], "encompass": 747, "closer": 747, "zeno": 747, "cut": 747, "stddev": [748, 798, 828], "deviat": [748, 798, 828], "inner": [748, 750, 798, 800, 828, 835, 1752, 1753], "width": [750, 800, 835], "ndndarrai": [750, 800, 835], "throat_cross_sectional_area": [752, 753, 754, 755], "crude": 754, "curvatur": [754, 908], "neighbour": 759, "throat_perimet": [763, 764, 804], "throat_area": [763, 764, 795, 811, 914, 921], "indiamet": 763, "jenkin": 763, "rao": 763, "elipt": 763, "pt": 763, "ellipt": [763, 923], "powder": 763, "technologi": 763, "pp": [763, 764], "1984": 763, "mason": [764, 908, 924], "morrow": [764, 908, 924], "mortensen": 764, "liquid": [764, 853, 858, 859, 865, 884, 889, 890, 891, 894, 895, 902, 1389, 1602], "irregular": 764, "colloid": [764, 908, 921], "1991": 764, "throat_centroid": 772, "endpoint": 772, "neighrbor": [793, 796, 821], "ignore_nan": [793, 796, 821, 822], "throat_shap": [795, 1915], "cirlc": 795, "sqaur": 795, "unit_vec": 807, "impicit": 807, "1st": 807, "assu": [808, 809, 810, 814], "reprsent": [809, 810, 811, 814], "hemispher": 812, "cap": [812, 1321], "placehold": 816, "useless": 818, "denomin": 820, "keyward": 824, "thermofluid": [826, 830], "corel": 826, "bin_cent": 827, "bin_height": 827, "skip": 830, "nth": 830, "thresh": [841, 846], "coincid": [841, 846], "furthest": 842, "closest": 843, "occurr": [845, 1827, 1832, 1839, 1844, 1852, 1857], "gabriel": 847, "subgraph": 847, "fuction": 847, "letsou_stiel": 854, "default_argmap": 854, "cvm": 854, "mixtur": [854, 858, 864, 876, 883, 887, 889, 898, 901, 902, 1321, 1322, 1325, 1331, 1333, 1345, 1354, 1355, 1356, 1359, 1365, 1367, 1379, 1388, 1389, 1390, 1393, 1399, 1401, 1413, 1422, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1512, 1540, 1568, 1569, 1572, 1578, 1580, 1592, 1601, 1602, 1630, 1631, 1634, 1640, 1642, 1654, 1663, 1903, 1904], "3e": 854, "9e": 854, "trail": 854, "iterpret": 854, "mix": [854, 858, 876, 901, 921], "corrospod": [858, 859], "costald": [858, 859], "kg": [858, 860, 861, 879, 883, 885, 892, 896, 903], "m3": [858, 860, 865, 883], "mw_": 858, "mw_i": 858, "costald_mixtur": 858, "accentr": [859, 870, 888, 890, 895, 902], "dimensionless": [859, 870, 888, 890, 895, 902], "ndrrai": 860, "seawat": [861, 885, 892, 896, 903], "atmospher": [861, 885, 892, 903], "eq": [861, 885, 903, 930, 931], "boil": [861, 865, 884, 885, 888, 890, 891, 892, 903], "salt": [861, 879, 885, 892, 896, 903], "ppt": [861, 885, 892, 896, 903], "thousand": [861, 885, 892, 896, 903], "453": [861, 892, 903], "pct": 861, "lienhard": [861, 885, 896, 903], "zubair": [861, 885, 896, 903], "desalin": [861, 885, 892, 896, 903], "treatment": [861, 885, 896, 903], "2010": [861, 885, 896, 903], "chapman": 863, "enskog": 863, "molar_diffusion_volum": 864, "fuller": 864, "dij": 864, "gid": 864, "chromatogr": 864, "1965": 864, "schettler": 864, "ind": [864, 1717, 1719, 1721, 1722, 1725, 1726], "eng": 864, "chem": 864, "1966": 864, "enslei": 864, "3679": 864, "1969": 864, "vms_at_tb": 865, "sigmas_at_tb": 865, "tyn": 865, "calu": 865, "dilut": 865, "principl": 865, "kinemat": 865, "cp": [867, 869], "linearli": [867, 869], "trc_gas_data": 868, "capac": 870, "weighted_averag": 872, "logarithm": [876, 901, 1333, 1367, 1401, 1463, 1580, 1642], "rule": [876, 901, 1903, 1904], "ln": [876, 901, 937, 1333, 1367, 1401, 1463, 1580, 1642], "z_i": [876, 901, 1333, 1367, 1401, 1463, 1580, 1642], "expon": [876, 901, 928, 930, 931, 939, 1333, 1367, 1401, 1463, 1580, 1642], "guarante": 877, "conc": 879, "nacl": 879, "henri": 881, "gaseou": 881, "dissolv": 881, "kpx": 881, "atm": 881, "yaw": 881, "carl": 881, "solubl": 881, "sulfur": 881, "tradit": 881, "2003": 881, "liqiud": 883, "vapor": [883, 884, 894, 895, 896], "winterfeld": 883, "scriven": 883, "davi": 883, "brock": 884, "bird": 884, "313": 885, "percent": [885, 892, 896, 903], "wassiljew": 887, "hern": [887, 898], "zipper": [887, 898], "conductivti": 888, "gharagheizi": [888, 890, 899], "1002": [888, 890], "aic": [888, 890], "13938": [888, 890], "dippr9h": 889, "sato": 891, "jamieson": 892, "tudhop": 892, "393": 892, "1970": 892, "antoin": 894, "rpp": 894, "kesler": 895, "raoult": 896, "473": 896, "ashra": 896, "handbook": 896, "fundament": 896, "letsou": 902, "pore_pressur": [906, 914], "throat_hydraulic_conduct": [906, 914], "throat_diffusive_conduct": 906, "discret": [906, 1737], "diffuvs": 906, "impos": 906, "conduit_shape_factor": 906, "shape_factor": [906, 921], "r_toroid": [908, 924, 925], "toroid": [908, 923, 924, 925], "converg": [908, 924], "diverg": [908, 924], "meniscu": [908, 923, 924], "apex": [908, 924], "context": [908, 924], "sci": [908, 921], "1994": 908, "pemfc": 908, "voronoi": [908, 1098, 1111, 1112, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1757], "electrochem": [908, 930, 931], "soc": 908, "f731": 908, "2013": 908, "pore_temperatur": 912, "throat_temperatur": 912, "knudsen": 912, "molecular_weigth": 912, "pore_area": [914, 921], "taylor": 914, "ari": 914, "pore_conduct": [916, 917, 941, 942], "pore_viscos": [919, 920, 921], "throat_viscos": [919, 920, 921], "pore_shape_factor": 921, "throat_shape_factor": 921, "conduit_length": 921, "adapt": 921, "a_p": 921, "r_p": 921, "sf_p": 921, "theorat": 921, "p_p": 921, "4\u03c0": 921, "t_a": 921, "sf_t": 921, "t_p": 921, "valvatn": 921, "martin": 921, "blunt": 921, "2004": [921, 930, 931], "patzek": 921, "silin": 921, "2001": 921, "noncircular": 921, "creep": 921, "304": 921, "profile_equ": 923, "target_pc": [923, 924, 925], "num_point": [923, 924, 925, 1729], "throat_scale_a": 923, "scale_a": 923, "throat_scale_b": 923, "scale_b": 923, "touch_length": [923, 924, 925], "sinusoid": 923, "send": [923, 1728], "men": 923, "profil": [923, 924, 925], "assess": 923, "minima": 923, "maxima": 923, "perpendicular": 923, "protrud": 923, "therfor": 923, "po": 923, "xpo": 923, "rx": 923, "fa": 923, "fb": 923, "throatrad": 923, "fill_angl": 923, "alpha_min": 923, "alpha_max": 923, "c2x": 923, "gamma": [923, 930, 931], "cap_angl": 923, "rad_curv": 923, "men_data": 923, "men_max": 923, "toru": 924, "quarter": 925, "wavelength": 925, "amplitud": 925, "arctan": 925, "forner": 925, "cuenca": 925, "pefc": 925, "wettabl": 925, "ec": 925, "f1038": 925, "f1048": 925, "throat_occup": 927, "pore_occup": 927, "strict": 927, "agress": 927, "unoccupi": [927, 1750, 1756], "loos": 927, "pc_star": 928, "swp_star": 928, "eta": 928, "residu": 928, "i0_ref": [930, 931], "c_ref": [930, 931], "reaction_area": [930, 931], "solid_voltag": [930, 931], "electrolyte_voltag": [930, 931], "open_circuit_voltag": [930, 931], "butler": [930, 931], "volmer": [930, 931], "redox": [930, 931], "promot": [930, 931], "cathod": [930, 931], "theoret": [930, 931], "justif": [930, 931], "voltag": [930, 931], "equilibrium": [930, 931], "butler_volmer_voltag": 930, "former": [930, 931, 1835], "shouldn": [930, 931], "faradai": [930, 931], "book": [930, 931], "cite": [930, 931], "i_": [930, 931], "0ref": [930, 931], "rxn": [930, 931], "rt": [930, 931], "eta_": [930, 931], "phi_": [930, 931], "met": [930, 931], "u_": [930, 931], "electrostat": [930, 931], "consentr": [930, 931], "john": [930, 931], "newman": [930, 931], "karen": [930, 931], "thoma": [930, 931], "alyea": [930, 931], "wilei": [930, 931], "son": [930, 931], "chapter8": [930, 931], "electrolyte_concentr": 931, "rate_info": [931, 939], "butler_volmer_conc": 931, "a5": [932, 935, 936, 937], "a6": [932, 935], "eqn": 933, "sympi": 933, "evalu": [933, 1325, 1359, 1393, 1455, 1572, 1634], "sympifi": 933, "live": 933, "IF": 933, "referenc": 933, "st": 933, "arg_map": 933, "log_": 935, "pore_thermal_conduct": 942, "throat_thermal_conduct": 942, "overrid": [944, 983, 1060, 1098, 1138, 1177, 1216, 1254], "identif": [944, 983, 1060, 1098, 1138, 1177, 1216, 1254, 1751], "belon": [944, 1177], "corner_sit": [944, 1177], "body_sit": 944, "incid": [944, 951, 962, 983, 990, 1001, 1022, 1028, 1039, 1060, 1066, 1077, 1098, 1104, 1117, 1138, 1145, 1156, 1177, 1184, 1195, 1216, 1222, 1233, 1254, 1260, 1271], "mirror": [950, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259], "wise": [950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "slice": [950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "algebra": [950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "routin": [950, 951, 960, 962, 989, 990, 999, 1001, 1027, 1028, 1037, 1039, 1065, 1066, 1075, 1077, 1103, 1104, 1115, 1117, 1144, 1145, 1154, 1156, 1183, 1184, 1193, 1195, 1221, 1222, 1231, 1233, 1259, 1260, 1269, 1271], "sparse_arrai": [951, 990, 1028, 1066, 1104, 1145, 1184, 1222, 1260], "cousin": [951, 990, 1028, 1066, 1104, 1145, 1184, 1222, 1260], "1d": [953, 956, 957, 967, 992, 995, 996, 1006, 1030, 1033, 1034, 1044, 1068, 1071, 1072, 1082, 1106, 1109, 1110, 1122, 1147, 1150, 1151, 1161, 1186, 1189, 1190, 1200, 1224, 1227, 1228, 1238, 1262, 1265, 1266, 1276, 1716], "arra": [953, 992, 1030, 1068, 1106, 1147, 1186, 1224, 1262], "minu": [953, 956, 957, 967, 992, 995, 996, 1006, 1030, 1033, 1034, 1044, 1068, 1071, 1072, 1082, 1106, 1109, 1110, 1122, 1147, 1150, 1151, 1161, 1186, 1189, 1190, 1200, 1224, 1227, 1228, 1238, 1262, 1265, 1266, 1276, 1721, 1725, 1726], "isnan": [954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "include_input": [955, 956, 994, 995, 1032, 1033, 1070, 1071, 1108, 1109, 1149, 1150, 1188, 1189, 1226, 1227, 1264, 1265, 1726], "radial": [955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "toplog": [955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "whom": [955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "nearbi": [955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "compress": [956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265, 1721, 1725, 1726], "unflatten": [956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265, 1721, 1725, 1726], "bond": [957, 996, 1034, 1072, 1110, 1151, 1190, 1228, 1266, 1712, 1720, 1721, 1724, 1738, 1750, 1756], "sp": [960, 999, 1037, 1075, 1115, 1154, 1193, 1231, 1269], "uncertain": [967, 1006, 1044, 1082, 1122, 1161, 1200, 1238, 1276], "reduce_coordin": 983, "permit": 983, "kept": 1022, "cubictempl": [1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059], "across": [1060, 1098, 1254, 1747], "unreason": 1060, "risk": [1060, 1098, 1254, 1729, 1747], "smooth": [1060, 1098, 1254, 1729, 1747], "vertic": [1060, 1098, 1254], "outsid": [1060, 1098, 1254, 1728, 1737], "truli": [1060, 1254], "clean": [1060, 1254], "outer": [1060, 1254, 1747, 1752, 1753], "artifact": [1060, 1254], "geolog": [1060, 1254], "flexibl": [1060, 1254], "relax": [1098, 1254], "hull": [1098, 1111, 1254, 1734], "convex": [1111, 1734], "metod": 1111, "facet": 1112, "ridg": 1112, "face_sit": 1177, "head": [1216, 1903, 1904], "num_neighbor": 1216, "construct": 1216, "preset": [1293, 1423, 1664], "lennard": 1321, "jone": 1321, "binaryga": [1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354], "healthdict": [1325, 1359, 1393, 1455, 1572, 1634, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1898], "uniti": [1325, 1359, 1393, 1455, 1572, 1634], "healthi": [1325, 1359, 1393, 1455, 1572, 1634, 1785, 1898], "weigth": [1333, 1367, 1401, 1463, 1580, 1642], "getter": [1354, 1388, 1422, 1601, 1663], "multicompon": 1451, "genericnetwork": 1512, "tabul": 1512, "contant": 1512, "gas_mix": 1568, "liq_mix": 1630, "standardliquidmixtur": [1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663], "basesolv": 1694, "directsolv": 1696, "tol": [1697, 1699, 1703, 1705, 1743], "iterativesolv": 1698, "petsc": [1699, 1700], "mpirun": 1699, "num_cor": 1699, "petsclinearsolv": 1700, "solver_typ": 1700, "cg": [1700, 1705], "precondion": 1700, "jacobi": 1700, "vec": 1700, "destroi": 1700, "csr_matrix": 1700, "conjug": 1700, "precondition": 1700, "precondit": 1700, "factorization_typ": 1700, "lu": 1700, "pypardiso": 1701, "pardisospsolv": 1702, "pyamg": 1703, "ruge_stuben_solv": 1703, "pyamgrugestubensolv": 1704, "scipycg": 1706, "scipyspsolv": 1708, "move_to": 1710, "apply_label": 1710, "clone_por": 1710, "translat": [1710, 1751], "cl": 1711, "occupied_bond": [1712, 1756], "acccord": [1712, 1750], "parent": 1713, "sibl": 1713, "pores1": 1714, "pores2": 1714, "consecut": [1714, 1745], "member": [1714, 1867, 1874], "batch": 1714, "force_triu": 1715, "drop_diag": 1715, "drop_dup": 1715, "drop_neg": 1715, "dim": 1716, "headless": [1717, 1899], "dropped_edg": 1717, "render": 1717, "invalid": [1717, 1761, 1783], "p_label": 1720, "t_label": 1720, "inds_1": 1723, "inds_2": 1723, "somtim": [1725, 1726], "pore_pair": 1727, "shortest": 1727, "node_path": 1727, "edge_path": 1727, "dijkstra": 1727, "triangul": [1728, 1754], "top_surfac": 1728, "sufac": 1728, "fail": [1728, 1847], "domain_s": [1729, 1747], "rectilinear": 1729, "height": [1729, 1737, 1752], "excess": 1729, "cart2sph": 1729, "cart2cyl": 1729, "enclos": [1734, 1763], "xyz": 1734, "pores_bc": 1735, "coplanar": 1736, "permiss": 1737, "upward": 1737, "threshold": 1737, "find_surface_por": 1743, "donor": [1744, 1751], "include_neighbor": 1745, "preferr": 1745, "continu": 1745, "find_nearby_por": 1745, "relect": 1747, "relfect": 1747, "transform": [1748, 1749], "copi": [1748, 1749, 1881, 1883], "shear_coord": 1748, "shear": 1749, "ai": 1749, "az": 1749, "bx": 1749, "bz": 1749, "cx": 1749, "cy": 1749, "rotate_coord": 1749, "aj": 1749, "occupied_sit": [1750, 1756], "p_network": 1751, "p_donor": 1751, "len_max": 1751, "label_suffix": 1751, "label_stitch": 1751, "recipi": 1751, "defaul": 1751, "recipienet": 1751, "disc": 1752, "annulu": 1752, "demarc": [1752, 1753], "tri": 1754, "unweight": [1754, 1757], "b_label": 1756, "s_label": 1756, "bond_percol": 1756, "site_percol": 1756, "vor": 1757, "processor": 1759, "docor": [1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784], "shall": [1760, 1765, 1767, 1770, 1772, 1776, 1778, 1780], "dedent": [1760, 1778, 1780, 1783], "with_ind": 1760, "indent": [1760, 1783], "stacklevel": [1761, 1783], "safe_modul": [1761, 1783], "deprec": [1762, 1764, 1766, 1768, 1771, 1773, 1775, 1777, 1779, 1781, 1782, 1784], "base_kei": [1763, 1765, 1767, 1778, 1780], "no_arg": 1763, "no_kwarg": 1763, "no_args_kwarg": 1763, "similarili": 1763, "classmethod": 1764, "docrep": [1764, 1766, 1768, 1778, 1779, 1780, 1781], "delete_kwarg": [1764, 1774], "no_": 1765, "original_kei": [1765, 1778], "no_param1": 1765, "param2": [1765, 1778], "keep_param": [1765, 1774, 1779, 1780], "delete_typ": [1765, 1768, 1774, 1780], "delete_param": [1766, 1767, 1774, 1778], "out_kei": [1767, 1780], "keep_typ": [1767, 1774, 1778, 1781], "get_sect": [1769, 1775, 1778, 1780], "descriptor": 1769, "summary_ext": 1770, "get_extended_summari": [1771, 1772], "get_summari": [1772, 1777], "full_desc": 1772, "get_full_descript": 1773, "exctract": 1774, "guidelin": 1774, "param_like_sect": 1774, "text_sect": 1774, "split": 1774, "newlin": [1774, 1776], "napoleon": 1774, "save_docstr": 1774, "basicli": 1776, "param1": 1778, "reus": [1778, 1780], "docstringprocessor": [1778, 1780], "do_someth": [1778, 1780], "That": [1778, 1780], "doc_kei": [1778, 1780], "do_less": [1778, 1780], "my": [1778, 1780], "__doc__": [1778, 1780], "no_b": 1778, "int_onli": 1780, "no_float": 1780, "get_docstr": 1782, "unhealthi": 1785, "delimit": 1797, "brief": [1797, 1882], "to_dict": 1797, "unravel": 1797, "nesteddict": [1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810], "dct": 1807, "nicer": 1811, "item1": [1811, 1823], "item2": [1811, 1823], "item3": [1811, 1823], "item4": 1811, "printabledict": [1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822], "temp": 1823, "printablelist": [1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834], "sy": [1829, 1841, 1854], "valueerror": [1829, 1832, 1841, 1844, 1854, 1857], "indexerror": [1831, 1843, 1856], "IN": [1833, 1845, 1858], "ascend": [1834, 1846, 1859], "modifi": [1834, 1846, 1859], "stabl": [1834, 1846, 1859], "moreov": 1835, "original_uuid": 1838, "null": 1870, "highest": 1879, "adminstr": 1879, "singleton": 1879, "wherev": 1879, "record": 1879, "renam": 1888, "load_workspac": 1888, "saved_fil": [1888, 1893], "networkssaved_fil": [1888, 1893], "save_workspac": 1893, "zip": 1894, "archiv": 1894, "load_project": 1894, "deem": 1898, "bidirect": 1899, "offend": 1899, "restor": 1899, "largest": [1899, 1915], "struct": [1900, 1912], "wtih": 1900, "input_list": 1901, "hr": [1903, 1904], "__str__": [1903, 1904], "workaround": [1903, 1904], "enhanc": [1903, 1904], "horizont": [1903, 1904], "get_printable_prop": 1903, "get_printable_label": 1904, "decor": 1905, "inevit": 1905, "temporarili": 1905, "myfun": 1905, "33333333": 1905, "input_dict": 1911, "vivifi": 1911, "draw": 1914, "max_dim": 1915, "label_bi": [1916, 1917], "jet": [1916, 1917], "linestyl": 1916, "veiw": 1916, "overlaid": [1916, 1917], "colormap": [1916, 1917, 1919], "specfi": [1916, 1917], "invis": [1916, 1917], "dash": 1916, "dashdot": 1916, "dot": 1916, "thick": [1916, 1919, 1920], "font": [1916, 1917, 1920, 1922], "line3dcollect": 1916, "linecollect": 1916, "mpl": [1916, 1917], "agg": [1916, 1917], "add_boundary_por": [1916, 1917], "plot_throat": 1918, "opaqu": 1918, "edge_color": [1919, 1920], "node_s": [1919, 1920], "edge_scal": 1919, "emploi": 1919, "scaler": 1919, "resiz": 1919, "spyder": 1919, "jupyt": 1919, "pore_label": 1920, "throat_label": 1920, "line_width": 1920, "border": 1920, "pore_color": 1921, "throat_color": 1921, "bgcolor": 1921, "vispi": 1921, "prettifi": 1922}, "objects": {"": [[1923, 0, 0, "-", "openpnm"]], "openpnm": [[38, 0, 0, "-", "algorithms"], [493, 0, 0, "-", "contrib"], [553, 0, 0, "-", "core"], [641, 0, 0, "-", "integrators"], [645, 0, 0, "-", "io"], [669, 0, 0, "-", "models"], [943, 0, 0, "-", "network"], [1292, 0, 0, "-", "phase"], [1692, 0, 0, "-", "solvers"], [1709, 0, 0, "-", "topotools"], [1758, 0, 0, "-", "utils"], [1913, 0, 0, "-", "visualization"]], "openpnm.algorithms": [[39, 1, 1, "", "AdvectionDiffusion"], [73, 1, 1, "", "Algorithm"], [99, 1, 1, "", "Drainage"], [131, 1, 1, "", "FickianDiffusion"], [164, 1, 1, "", "FourierConduction"], [197, 1, 1, "", "InvasionPercolation"], [229, 1, 1, "", "OhmicConduction"], [262, 1, 1, "", "ReactiveTransport"], [295, 1, 1, "", "StokesFlow"], [328, 1, 1, "", "TransientAdvectionDiffusion"], [362, 1, 1, "", "TransientFickianDiffusion"], [395, 1, 1, "", "TransientFourierConduction"], [428, 1, 1, "", "TransientReactiveTransport"], [461, 1, 1, "", "Transport"]], "openpnm.algorithms.AdvectionDiffusion": [[40, 2, 1, "", "clear"], [41, 2, 1, "", "clear_BCs"], [42, 2, 1, "", "clear_rate_BCs"], [43, 2, 1, "", "clear_value_BCs"], [44, 2, 1, "", "copy"], [45, 2, 1, "", "filter_by_label"], [46, 2, 1, "", "fromkeys"], [47, 2, 1, "", "get"], [48, 2, 1, "", "get_conduit_data"], [49, 2, 1, "", "interpolate_data"], [50, 2, 1, "", "items"], [51, 2, 1, "", "keys"], [52, 2, 1, "", "labels"], [53, 2, 1, "", "num_pores"], [54, 2, 1, "", "num_throats"], [55, 2, 1, "", "pop"], [56, 2, 1, "", "popitem"], [57, 2, 1, "", "pores"], [58, 2, 1, "", "props"], [59, 2, 1, "", "rate"], [60, 2, 1, "", "run"], [61, 2, 1, "", "set_BC"], [62, 2, 1, "", "set_label"], [63, 2, 1, "", "set_outflow_BC"], [64, 2, 1, "", "set_rate_BC"], [65, 2, 1, "", "set_source"], [66, 2, 1, "", "set_value_BC"], [67, 2, 1, "", "setdefault"], [68, 2, 1, "", "throats"], [69, 2, 1, "", "to_indices"], [70, 2, 1, "", "to_mask"], [71, 2, 1, "", "update"], [72, 2, 1, "", "values"]], "openpnm.algorithms.Algorithm": [[74, 2, 1, "", "clear"], [75, 2, 1, "", "clear_BCs"], [76, 2, 1, "", "copy"], [77, 2, 1, "", "filter_by_label"], [78, 2, 1, "", "fromkeys"], [79, 2, 1, "", "get"], [80, 2, 1, "", "get_conduit_data"], [81, 2, 1, "", "interpolate_data"], [82, 2, 1, "", "items"], [83, 2, 1, "", "keys"], [84, 2, 1, "", "labels"], [85, 2, 1, "", "num_pores"], [86, 2, 1, "", "num_throats"], [87, 2, 1, "", "pop"], [88, 2, 1, "", "popitem"], [89, 2, 1, "", "pores"], [90, 2, 1, "", "props"], [91, 2, 1, "", "set_BC"], [92, 2, 1, "", "set_label"], [93, 2, 1, "", "setdefault"], [94, 2, 1, "", "throats"], [95, 2, 1, "", "to_indices"], [96, 2, 1, "", "to_mask"], [97, 2, 1, "", "update"], [98, 2, 1, "", "values"]], "openpnm.algorithms.Drainage": [[100, 2, 1, "", "apply_trapping"], [101, 2, 1, "", "clear"], [102, 2, 1, "", "clear_BCs"], [103, 2, 1, "", "copy"], [104, 2, 1, "", "filter_by_label"], [105, 2, 1, "", "fromkeys"], [106, 2, 1, "", "get"], [107, 2, 1, "", "get_conduit_data"], [108, 2, 1, "", "interpolate_data"], [109, 2, 1, "", "items"], [110, 2, 1, "", "keys"], [111, 2, 1, "", "labels"], [112, 2, 1, "", "num_pores"], [113, 2, 1, "", "num_throats"], [114, 2, 1, "", "pc_curve"], [115, 2, 1, "", "pop"], [116, 2, 1, "", "popitem"], [117, 2, 1, "", "pores"], [118, 2, 1, "", "props"], [119, 2, 1, "", "reset"], [120, 2, 1, "", "run"], [121, 2, 1, "", "set_BC"], [122, 2, 1, "", "set_inlet_BC"], [123, 2, 1, "", "set_label"], [124, 2, 1, "", "set_outlet_BC"], [125, 2, 1, "", "setdefault"], [126, 2, 1, "", "throats"], [127, 2, 1, "", "to_indices"], [128, 2, 1, "", "to_mask"], [129, 2, 1, "", "update"], [130, 2, 1, "", "values"]], "openpnm.algorithms.FickianDiffusion": [[132, 2, 1, "", "clear"], [133, 2, 1, "", "clear_BCs"], [134, 2, 1, "", "clear_rate_BCs"], [135, 2, 1, "", "clear_value_BCs"], [136, 2, 1, "", "copy"], [137, 2, 1, "", "filter_by_label"], [138, 2, 1, "", "fromkeys"], [139, 2, 1, "", "get"], [140, 2, 1, "", "get_conduit_data"], [141, 2, 1, "", "interpolate_data"], [142, 2, 1, "", "items"], [143, 2, 1, "", "keys"], [144, 2, 1, "", "labels"], [145, 2, 1, "", "num_pores"], [146, 2, 1, "", "num_throats"], [147, 2, 1, "", "pop"], [148, 2, 1, "", "popitem"], [149, 2, 1, "", "pores"], [150, 2, 1, "", "props"], [151, 2, 1, "", "rate"], [152, 2, 1, "", "run"], [153, 2, 1, "", "set_BC"], [154, 2, 1, "", "set_label"], [155, 2, 1, "", "set_rate_BC"], [156, 2, 1, "", "set_source"], [157, 2, 1, "", "set_value_BC"], [158, 2, 1, "", "setdefault"], [159, 2, 1, "", "throats"], [160, 2, 1, "", "to_indices"], [161, 2, 1, "", "to_mask"], [162, 2, 1, "", "update"], [163, 2, 1, "", "values"]], "openpnm.algorithms.FourierConduction": [[165, 2, 1, "", "clear"], [166, 2, 1, "", "clear_BCs"], [167, 2, 1, "", "clear_rate_BCs"], [168, 2, 1, "", "clear_value_BCs"], [169, 2, 1, "", "copy"], [170, 2, 1, "", "filter_by_label"], [171, 2, 1, "", "fromkeys"], [172, 2, 1, "", "get"], [173, 2, 1, "", "get_conduit_data"], [174, 2, 1, "", "interpolate_data"], [175, 2, 1, "", "items"], [176, 2, 1, "", "keys"], [177, 2, 1, "", "labels"], [178, 2, 1, "", "num_pores"], [179, 2, 1, "", "num_throats"], [180, 2, 1, "", "pop"], [181, 2, 1, "", "popitem"], [182, 2, 1, "", "pores"], [183, 2, 1, "", "props"], [184, 2, 1, "", "rate"], [185, 2, 1, "", "run"], [186, 2, 1, "", "set_BC"], [187, 2, 1, "", "set_label"], [188, 2, 1, "", "set_rate_BC"], [189, 2, 1, "", "set_source"], [190, 2, 1, "", "set_value_BC"], [191, 2, 1, "", "setdefault"], [192, 2, 1, "", "throats"], [193, 2, 1, "", "to_indices"], [194, 2, 1, "", "to_mask"], [195, 2, 1, "", "update"], [196, 2, 1, "", "values"]], "openpnm.algorithms.InvasionPercolation": [[198, 2, 1, "", "apply_trapping"], [199, 2, 1, "", "clear"], [200, 2, 1, "", "clear_BCs"], [201, 2, 1, "", "copy"], [202, 2, 1, "", "filter_by_label"], [203, 2, 1, "", "fromkeys"], [204, 2, 1, "", "get"], [205, 2, 1, "", "get_conduit_data"], [206, 2, 1, "", "interpolate_data"], [207, 2, 1, "", "items"], [208, 2, 1, "", "keys"], [209, 2, 1, "", "labels"], [210, 2, 1, "", "num_pores"], [211, 2, 1, "", "num_throats"], [212, 2, 1, "", "pc_curve"], [213, 2, 1, "", "pop"], [214, 2, 1, "", "popitem"], [215, 2, 1, "", "pores"], [216, 2, 1, "", "props"], [217, 2, 1, "", "reset"], [218, 2, 1, "", "run"], [219, 2, 1, "", "set_BC"], [220, 2, 1, "", "set_inlet_BC"], [221, 2, 1, "", "set_label"], [222, 2, 1, "", "set_outlet_BC"], [223, 2, 1, "", "setdefault"], [224, 2, 1, "", "throats"], [225, 2, 1, "", "to_indices"], [226, 2, 1, "", "to_mask"], [227, 2, 1, "", "update"], [228, 2, 1, "", "values"]], "openpnm.algorithms.OhmicConduction": [[230, 2, 1, "", "clear"], [231, 2, 1, "", "clear_BCs"], [232, 2, 1, "", "clear_rate_BCs"], [233, 2, 1, "", "clear_value_BCs"], [234, 2, 1, "", "copy"], [235, 2, 1, "", "filter_by_label"], [236, 2, 1, "", "fromkeys"], [237, 2, 1, "", "get"], [238, 2, 1, "", "get_conduit_data"], [239, 2, 1, "", "interpolate_data"], [240, 2, 1, "", "items"], [241, 2, 1, "", "keys"], [242, 2, 1, "", "labels"], [243, 2, 1, "", "num_pores"], [244, 2, 1, "", "num_throats"], [245, 2, 1, "", "pop"], [246, 2, 1, "", "popitem"], [247, 2, 1, "", "pores"], [248, 2, 1, "", "props"], [249, 2, 1, "", "rate"], [250, 2, 1, "", "run"], [251, 2, 1, "", "set_BC"], [252, 2, 1, "", "set_label"], [253, 2, 1, "", "set_rate_BC"], [254, 2, 1, "", "set_source"], [255, 2, 1, "", "set_value_BC"], [256, 2, 1, "", "setdefault"], [257, 2, 1, "", "throats"], [258, 2, 1, "", "to_indices"], [259, 2, 1, "", "to_mask"], [260, 2, 1, "", "update"], [261, 2, 1, "", "values"]], "openpnm.algorithms.ReactiveTransport": [[263, 2, 1, "", "clear"], [264, 2, 1, "", "clear_BCs"], [265, 2, 1, "", "clear_rate_BCs"], [266, 2, 1, "", "clear_value_BCs"], [267, 2, 1, "", "copy"], [268, 2, 1, "", "filter_by_label"], [269, 2, 1, "", "fromkeys"], [270, 2, 1, "", "get"], [271, 2, 1, "", "get_conduit_data"], [272, 2, 1, "", "interpolate_data"], [273, 2, 1, "", "items"], [274, 2, 1, "", "keys"], [275, 2, 1, "", "labels"], [276, 2, 1, "", "num_pores"], [277, 2, 1, "", "num_throats"], [278, 2, 1, "", "pop"], [279, 2, 1, "", "popitem"], [280, 2, 1, "", "pores"], [281, 2, 1, "", "props"], [282, 2, 1, "", "rate"], [283, 2, 1, "", "run"], [284, 2, 1, "", "set_BC"], [285, 2, 1, "", "set_label"], [286, 2, 1, "", "set_rate_BC"], [287, 2, 1, "", "set_source"], [288, 2, 1, "", "set_value_BC"], [289, 2, 1, "", "setdefault"], [290, 2, 1, "", "throats"], [291, 2, 1, "", "to_indices"], [292, 2, 1, "", "to_mask"], [293, 2, 1, "", "update"], [294, 2, 1, "", "values"]], "openpnm.algorithms.StokesFlow": [[296, 2, 1, "", "clear"], [297, 2, 1, "", "clear_BCs"], [298, 2, 1, "", "clear_rate_BCs"], [299, 2, 1, "", "clear_value_BCs"], [300, 2, 1, "", "copy"], [301, 2, 1, "", "filter_by_label"], [302, 2, 1, "", "fromkeys"], [303, 2, 1, "", "get"], [304, 2, 1, "", "get_conduit_data"], [305, 2, 1, "", "interpolate_data"], [306, 2, 1, "", "items"], [307, 2, 1, "", "keys"], [308, 2, 1, "", "labels"], [309, 2, 1, "", "num_pores"], [310, 2, 1, "", "num_throats"], [311, 2, 1, "", "pop"], [312, 2, 1, "", "popitem"], [313, 2, 1, "", "pores"], [314, 2, 1, "", "props"], [315, 2, 1, "", "rate"], [316, 2, 1, "", "run"], [317, 2, 1, "", "set_BC"], [318, 2, 1, "", "set_label"], [319, 2, 1, "", "set_rate_BC"], [320, 2, 1, "", "set_source"], [321, 2, 1, "", "set_value_BC"], [322, 2, 1, "", "setdefault"], [323, 2, 1, "", "throats"], [324, 2, 1, "", "to_indices"], [325, 2, 1, "", "to_mask"], [326, 2, 1, "", "update"], [327, 2, 1, "", "values"]], "openpnm.algorithms.TransientAdvectionDiffusion": [[329, 2, 1, "", "clear"], [330, 2, 1, "", "clear_BCs"], [331, 2, 1, "", "clear_rate_BCs"], [332, 2, 1, "", "clear_value_BCs"], [333, 2, 1, "", "copy"], [334, 2, 1, "", "filter_by_label"], [335, 2, 1, "", "fromkeys"], [336, 2, 1, "", "get"], [337, 2, 1, "", "get_conduit_data"], [338, 2, 1, "", "interpolate_data"], [339, 2, 1, "", "items"], [340, 2, 1, "", "keys"], [341, 2, 1, "", "labels"], [342, 2, 1, "", "num_pores"], [343, 2, 1, "", "num_throats"], [344, 2, 1, "", "pop"], [345, 2, 1, "", "popitem"], [346, 2, 1, "", "pores"], [347, 2, 1, "", "props"], [348, 2, 1, "", "rate"], [349, 2, 1, "", "run"], [350, 2, 1, "", "set_BC"], [351, 2, 1, "", "set_label"], [352, 2, 1, "", "set_outflow_BC"], [353, 2, 1, "", "set_rate_BC"], [354, 2, 1, "", "set_source"], [355, 2, 1, "", "set_value_BC"], [356, 2, 1, "", "setdefault"], [357, 2, 1, "", "throats"], [358, 2, 1, "", "to_indices"], [359, 2, 1, "", "to_mask"], [360, 2, 1, "", "update"], [361, 2, 1, "", "values"]], "openpnm.algorithms.TransientFickianDiffusion": [[363, 2, 1, "", "clear"], [364, 2, 1, "", "clear_BCs"], [365, 2, 1, "", "clear_rate_BCs"], [366, 2, 1, "", "clear_value_BCs"], [367, 2, 1, "", "copy"], [368, 2, 1, "", "filter_by_label"], [369, 2, 1, "", "fromkeys"], [370, 2, 1, "", "get"], [371, 2, 1, "", "get_conduit_data"], [372, 2, 1, "", "interpolate_data"], [373, 2, 1, "", "items"], [374, 2, 1, "", "keys"], [375, 2, 1, "", "labels"], [376, 2, 1, "", "num_pores"], [377, 2, 1, "", "num_throats"], [378, 2, 1, "", "pop"], [379, 2, 1, "", "popitem"], [380, 2, 1, "", "pores"], [381, 2, 1, "", "props"], [382, 2, 1, "", "rate"], [383, 2, 1, "", "run"], [384, 2, 1, "", "set_BC"], [385, 2, 1, "", "set_label"], [386, 2, 1, "", "set_rate_BC"], [387, 2, 1, "", "set_source"], [388, 2, 1, "", "set_value_BC"], [389, 2, 1, "", "setdefault"], [390, 2, 1, "", "throats"], [391, 2, 1, "", "to_indices"], [392, 2, 1, "", "to_mask"], [393, 2, 1, "", "update"], [394, 2, 1, "", "values"]], "openpnm.algorithms.TransientFourierConduction": [[396, 2, 1, "", "clear"], [397, 2, 1, "", "clear_BCs"], [398, 2, 1, "", "clear_rate_BCs"], [399, 2, 1, "", "clear_value_BCs"], [400, 2, 1, "", "copy"], [401, 2, 1, "", "filter_by_label"], [402, 2, 1, "", "fromkeys"], [403, 2, 1, "", "get"], [404, 2, 1, "", "get_conduit_data"], [405, 2, 1, "", "interpolate_data"], [406, 2, 1, "", "items"], [407, 2, 1, "", "keys"], [408, 2, 1, "", "labels"], [409, 2, 1, "", "num_pores"], [410, 2, 1, "", "num_throats"], [411, 2, 1, "", "pop"], [412, 2, 1, "", "popitem"], [413, 2, 1, "", "pores"], [414, 2, 1, "", "props"], [415, 2, 1, "", "rate"], [416, 2, 1, "", "run"], [417, 2, 1, "", "set_BC"], [418, 2, 1, "", "set_label"], [419, 2, 1, "", "set_rate_BC"], [420, 2, 1, "", "set_source"], [421, 2, 1, "", "set_value_BC"], [422, 2, 1, "", "setdefault"], [423, 2, 1, "", "throats"], [424, 2, 1, "", "to_indices"], [425, 2, 1, "", "to_mask"], [426, 2, 1, "", "update"], [427, 2, 1, "", "values"]], "openpnm.algorithms.TransientReactiveTransport": [[429, 2, 1, "", "clear"], [430, 2, 1, "", "clear_BCs"], [431, 2, 1, "", "clear_rate_BCs"], [432, 2, 1, "", "clear_value_BCs"], [433, 2, 1, "", "copy"], [434, 2, 1, "", "filter_by_label"], [435, 2, 1, "", "fromkeys"], [436, 2, 1, "", "get"], [437, 2, 1, "", "get_conduit_data"], [438, 2, 1, "", "interpolate_data"], [439, 2, 1, "", "items"], [440, 2, 1, "", "keys"], [441, 2, 1, "", "labels"], [442, 2, 1, "", "num_pores"], [443, 2, 1, "", "num_throats"], [444, 2, 1, "", "pop"], [445, 2, 1, "", "popitem"], [446, 2, 1, "", "pores"], [447, 2, 1, "", "props"], [448, 2, 1, "", "rate"], [449, 2, 1, "", "run"], [450, 2, 1, "", "set_BC"], [451, 2, 1, "", "set_label"], [452, 2, 1, "", "set_rate_BC"], [453, 2, 1, "", "set_source"], [454, 2, 1, "", "set_value_BC"], [455, 2, 1, "", "setdefault"], [456, 2, 1, "", "throats"], [457, 2, 1, "", "to_indices"], [458, 2, 1, "", "to_mask"], [459, 2, 1, "", "update"], [460, 2, 1, "", "values"]], "openpnm.algorithms.Transport": [[462, 2, 1, "", "clear"], [463, 2, 1, "", "clear_BCs"], [464, 2, 1, "", "clear_rate_BCs"], [465, 2, 1, "", "clear_value_BCs"], [466, 2, 1, "", "copy"], [467, 2, 1, "", "filter_by_label"], [468, 2, 1, "", "fromkeys"], [469, 2, 1, "", "get"], [470, 2, 1, "", "get_conduit_data"], [471, 2, 1, "", "interpolate_data"], [472, 2, 1, "", "items"], [473, 2, 1, "", "keys"], [474, 2, 1, "", "labels"], [475, 2, 1, "", "num_pores"], [476, 2, 1, "", "num_throats"], [477, 2, 1, "", "pop"], [478, 2, 1, "", "popitem"], [479, 2, 1, "", "pores"], [480, 2, 1, "", "props"], [481, 2, 1, "", "rate"], [482, 2, 1, "", "run"], [483, 2, 1, "", "set_BC"], [484, 2, 1, "", "set_label"], [485, 2, 1, "", "set_rate_BC"], [486, 2, 1, "", "set_value_BC"], [487, 2, 1, "", "setdefault"], [488, 2, 1, "", "throats"], [489, 2, 1, "", "to_indices"], [490, 2, 1, "", "to_mask"], [491, 2, 1, "", "update"], [492, 2, 1, "", "values"]], "openpnm.contrib": [[494, 1, 1, "", "MultiPhase"], [525, 1, 1, "", "TransientMultiPhysics"], [552, 3, 1, "", "multiphase_diffusion"]], "openpnm.contrib.MultiPhase": [[495, 2, 1, "", "add_model"], [496, 2, 1, "", "add_model_collection"], [497, 2, 1, "", "add_phases"], [498, 2, 1, "", "clear"], [499, 2, 1, "", "copy"], [500, 2, 1, "", "filter_by_label"], [501, 2, 1, "", "fromkeys"], [502, 2, 1, "", "get"], [503, 2, 1, "", "get_conduit_data"], [504, 2, 1, "", "interpolate_data"], [505, 2, 1, "", "items"], [506, 2, 1, "", "keys"], [507, 2, 1, "", "labels"], [508, 2, 1, "", "num_pores"], [509, 2, 1, "", "num_throats"], [510, 2, 1, "", "pop"], [511, 2, 1, "", "popitem"], [512, 2, 1, "", "pores"], [513, 2, 1, "", "props"], [514, 2, 1, "", "regenerate_models"], [515, 2, 1, "", "run_model"], [516, 2, 1, "", "set_binary_partition_coef"], [517, 2, 1, "", "set_label"], [518, 2, 1, "", "set_occupancy"], [519, 2, 1, "", "setdefault"], [520, 2, 1, "", "throats"], [521, 2, 1, "", "to_indices"], [522, 2, 1, "", "to_mask"], [523, 2, 1, "", "update"], [524, 2, 1, "", "values"]], "openpnm.contrib.TransientMultiPhysics": [[526, 2, 1, "", "clear"], [527, 2, 1, "", "clear_BCs"], [528, 2, 1, "", "copy"], [529, 2, 1, "", "filter_by_label"], [530, 2, 1, "", "fromkeys"], [531, 2, 1, "", "get"], [532, 2, 1, "", "get_conduit_data"], [533, 2, 1, "", "interpolate_data"], [534, 2, 1, "", "items"], [535, 2, 1, "", "keys"], [536, 2, 1, "", "labels"], [537, 2, 1, "", "num_pores"], [538, 2, 1, "", "num_throats"], [539, 2, 1, "", "pop"], [540, 2, 1, "", "popitem"], [541, 2, 1, "", "pores"], [542, 2, 1, "", "props"], [543, 2, 1, "", "run"], [544, 2, 1, "", "set_BC"], [545, 2, 1, "", "set_label"], [546, 2, 1, "", "setdefault"], [547, 2, 1, "", "throats"], [548, 2, 1, "", "to_indices"], [549, 2, 1, "", "to_mask"], [550, 2, 1, "", "update"], [551, 2, 1, "", "values"]], "openpnm.core": [[554, 1, 1, "", "Base2"], [571, 1, 1, "", "Domain"], [599, 1, 1, "", "LabelMixin"], [607, 1, 1, "", "ModelWrapper"], [620, 1, 1, "", "ModelsDict"], [635, 1, 1, "", "ModelsMixin2"], [640, 1, 1, "", "ParserMixin"]], "openpnm.core.Base2": [[555, 2, 1, "", "clear"], [556, 2, 1, "", "copy"], [557, 2, 1, "", "fromkeys"], [558, 2, 1, "", "get"], [559, 2, 1, "", "get_conduit_data"], [560, 2, 1, "", "interpolate_data"], [561, 2, 1, "", "items"], [562, 2, 1, "", "keys"], [563, 2, 1, "", "pop"], [564, 2, 1, "", "popitem"], [565, 2, 1, "", "props"], [566, 2, 1, "", "setdefault"], [567, 2, 1, "", "to_indices"], [568, 2, 1, "", "to_mask"], [569, 2, 1, "", "update"], [570, 2, 1, "", "values"]], "openpnm.core.Domain": [[572, 2, 1, "", "add_model"], [573, 2, 1, "", "add_model_collection"], [574, 2, 1, "", "clear"], [575, 2, 1, "", "copy"], [576, 2, 1, "", "filter_by_label"], [577, 2, 1, "", "fromkeys"], [578, 2, 1, "", "get"], [579, 2, 1, "", "get_conduit_data"], [580, 2, 1, "", "interpolate_data"], [581, 2, 1, "", "items"], [582, 2, 1, "", "keys"], [583, 2, 1, "", "labels"], [584, 2, 1, "", "num_pores"], [585, 2, 1, "", "num_throats"], [586, 2, 1, "", "pop"], [587, 2, 1, "", "popitem"], [588, 2, 1, "", "pores"], [589, 2, 1, "", "props"], [590, 2, 1, "", "regenerate_models"], [591, 2, 1, "", "run_model"], [592, 2, 1, "", "set_label"], [593, 2, 1, "", "setdefault"], [594, 2, 1, "", "throats"], [595, 2, 1, "", "to_indices"], [596, 2, 1, "", "to_mask"], [597, 2, 1, "", "update"], [598, 2, 1, "", "values"]], "openpnm.core.LabelMixin": [[600, 2, 1, "", "filter_by_label"], [601, 2, 1, "", "labels"], [602, 2, 1, "", "num_pores"], [603, 2, 1, "", "num_throats"], [604, 2, 1, "", "pores"], [605, 2, 1, "", "set_label"], [606, 2, 1, "", "throats"]], "openpnm.core.ModelWrapper": [[608, 2, 1, "", "__call__"], [609, 2, 1, "", "clear"], [610, 2, 1, "", "copy"], [611, 2, 1, "", "fromkeys"], [612, 2, 1, "", "get"], [613, 2, 1, "", "items"], [614, 2, 1, "", "keys"], [615, 2, 1, "", "pop"], [616, 2, 1, "", "popitem"], [617, 2, 1, "", "setdefault"], [618, 2, 1, "", "update"], [619, 2, 1, "", "values"]], "openpnm.core.ModelsDict": [[621, 2, 1, "", "clear"], [622, 2, 1, "", "copy"], [623, 2, 1, "", "dependency_graph"], [624, 2, 1, "", "dependency_list"], [625, 2, 1, "", "dependency_map"], [626, 2, 1, "", "fromkeys"], [627, 2, 1, "", "get"], [628, 2, 1, "", "items"], [629, 2, 1, "", "keys"], [630, 2, 1, "", "pop"], [631, 2, 1, "", "popitem"], [632, 2, 1, "", "setdefault"], [633, 2, 1, "", "update"], [634, 2, 1, "", "values"]], "openpnm.core.ModelsMixin2": [[636, 2, 1, "", "add_model"], [637, 2, 1, "", "add_model_collection"], [638, 2, 1, "", "regenerate_models"], [639, 2, 1, "", "run_model"]], "openpnm.integrators": [[642, 1, 1, "", "Integrator"], [643, 1, 1, "", "ScipyRK45"]], "openpnm.integrators.ScipyRK45": [[644, 2, 1, "", "solve"]], "openpnm.io": [[646, 3, 1, "", "network_from_csv"], [647, 3, 1, "", "network_from_jsongraph"], [648, 3, 1, "", "network_from_marock"], [649, 3, 1, "", "network_from_networkx"], [650, 3, 1, "", "network_from_pergeos"], [651, 3, 1, "", "network_from_porespy"], [652, 3, 1, "", "network_from_statoil"], [653, 3, 1, "", "network_to_comsol"], [654, 3, 1, "", "network_to_csv"], [655, 3, 1, "", "network_to_jsongraph"], [656, 3, 1, "", "network_to_networkx"], [657, 3, 1, "", "network_to_pandas"], [658, 3, 1, "", "network_to_pergeos"], [659, 3, 1, "", "network_to_salome"], [660, 3, 1, "", "network_to_stl"], [661, 3, 1, "", "print_hdf5"], [662, 3, 1, "", "project_to_csv"], [663, 3, 1, "", "project_to_dict"], [664, 3, 1, "", "project_to_hdf5"], [665, 3, 1, "", "project_to_pandas"], [666, 3, 1, "", "project_to_paraview"], [667, 3, 1, "", "project_to_vtk"], [668, 3, 1, "", "project_to_xdmf"]], "openpnm.models": [[670, 0, 0, "-", "collections"], [689, 0, 0, "-", "geometry"], [815, 0, 0, "-", "misc"], [836, 0, 0, "-", "network"], [853, 0, 0, "-", "phase"], [904, 0, 0, "-", "physics"]], "openpnm.models.collections": [[671, 0, 0, "-", "geometry"], [679, 0, 0, "-", "network"], [680, 0, 0, "-", "phase"], [686, 0, 0, "-", "physics"]], "openpnm.models.collections.geometry": [[672, 4, 1, "", "circles_and_rectangles"], [673, 4, 1, "", "cones_and_cylinders"], [674, 4, 1, "", "cubes_and_cuboids"], [675, 4, 1, "", "pyramids_and_cuboids"], [676, 4, 1, "", "spheres_and_cylinders"], [677, 4, 1, "", "squares_and_rectangles"], [678, 4, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.collections.phase": [[681, 4, 1, "", "air"], [682, 0, 0, "-", "gas"], [683, 0, 0, "-", "liquid"], [684, 4, 1, "", "mercury"], [685, 4, 1, "", "water"]], "openpnm.models.collections.physics": [[687, 4, 1, "", "basic"], [688, 4, 1, "", "standard"]], "openpnm.models.geometry": [[690, 0, 0, "-", "conduit_lengths"], [704, 0, 0, "-", "diffusive_size_factors"], [719, 0, 0, "-", "hydraulic_size_factors"], [734, 0, 0, "-", "pore_cross_sectional_area"], [740, 0, 0, "-", "pore_seed"], [743, 0, 0, "-", "pore_size"], [751, 0, 0, "-", "pore_surface_area"], [756, 0, 0, "-", "pore_volume"], [762, 0, 0, "-", "throat_capillary_shape_factor"], [765, 0, 0, "-", "throat_centroid"], [767, 0, 0, "-", "throat_cross_sectional_area"], [771, 0, 0, "-", "throat_endpoints"], [773, 0, 0, "-", "throat_length"], [787, 0, 0, "-", "throat_perimeter"], [791, 0, 0, "-", "throat_seed"], [794, 0, 0, "-", "throat_size"], [801, 0, 0, "-", "throat_surface_area"], [806, 0, 0, "-", "throat_vector"], [808, 0, 0, "-", "throat_volume"]], "openpnm.models.geometry.conduit_lengths": [[691, 3, 1, "", "circles_and_rectangles"], [692, 3, 1, "", "cones_and_cylinders"], [693, 3, 1, "", "cubes_and_cuboids"], [694, 3, 1, "", "hybrid_cones_and_cylinders"], [695, 3, 1, "", "hybrid_pyramids_and_cuboids"], [696, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [697, 3, 1, "", "intersecting_cones"], [698, 3, 1, "", "intersecting_pyramids"], [699, 3, 1, "", "intersecting_trapezoids"], [700, 3, 1, "", "pyramids_and_cuboids"], [701, 3, 1, "", "spheres_and_cylinders"], [702, 3, 1, "", "squares_and_rectangles"], [703, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[705, 3, 1, "", "circles_and_rectangles"], [706, 3, 1, "", "cones_and_cylinders"], [707, 3, 1, "", "cubes_and_cuboids"], [708, 3, 1, "", "hybrid_cones_and_cylinders"], [709, 3, 1, "", "hybrid_pyramids_and_cuboids"], [710, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [711, 3, 1, "", "intersecting_cones"], [712, 3, 1, "", "intersecting_pyramids"], [713, 3, 1, "", "intersecting_trapezoids"], [714, 3, 1, "", "ncylinders_in_series"], [715, 3, 1, "", "pyramids_and_cuboids"], [716, 3, 1, "", "spheres_and_cylinders"], [717, 3, 1, "", "squares_and_rectangles"], [718, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[720, 3, 1, "", "circles_and_rectangles"], [721, 3, 1, "", "cones_and_cylinders"], [722, 3, 1, "", "cubes_and_cuboids"], [723, 3, 1, "", "hybrid_cones_and_cylinders"], [724, 3, 1, "", "hybrid_pyramids_and_cuboids"], [725, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [726, 3, 1, "", "intersecting_cones"], [727, 3, 1, "", "intersecting_pyramids"], [728, 3, 1, "", "intersecting_trapezoids"], [729, 3, 1, "", "ncylinders_in_series"], [730, 3, 1, "", "pyramids_and_cuboids"], [731, 3, 1, "", "spheres_and_cylinders"], [732, 3, 1, "", "squares_and_rectangles"], [733, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[735, 3, 1, "", "circle"], [736, 3, 1, "", "cone"], [737, 3, 1, "", "cube"], [738, 3, 1, "", "sphere"], [739, 3, 1, "", "square"]], "openpnm.models.geometry.pore_seed": [[741, 3, 1, "", "random"], [742, 3, 1, "", "spatially_correlated"]], "openpnm.models.geometry.pore_size": [[744, 3, 1, "", "equivalent_diameter"], [745, 3, 1, "", "from_neighbor_throats"], [746, 3, 1, "", "generic_distribution"], [747, 3, 1, "", "largest_sphere"], [748, 3, 1, "", "normal"], [749, 3, 1, "", "random"], [750, 3, 1, "", "weibull"]], "openpnm.models.geometry.pore_surface_area": [[752, 3, 1, "", "circle"], [753, 3, 1, "", "cube"], [754, 3, 1, "", "sphere"], [755, 3, 1, "", "square"]], "openpnm.models.geometry.pore_volume": [[757, 3, 1, "", "circle"], [758, 3, 1, "", "cube"], [759, 3, 1, "", "effective"], [760, 3, 1, "", "sphere"], [761, 3, 1, "", "square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[763, 3, 1, "", "jenkins_rao"], [764, 3, 1, "", "mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[766, 3, 1, "", "pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[768, 3, 1, "", "cuboid"], [769, 3, 1, "", "cylinder"], [770, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_endpoints": [[772, 3, 1, "", "spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[774, 3, 1, "", "circles_and_rectangles"], [775, 3, 1, "", "cones_and_cylinders"], [776, 3, 1, "", "cubes_and_cuboids"], [777, 3, 1, "", "hybrid_cones_and_cylinders"], [778, 3, 1, "", "hybrid_pyramids_and_cuboids"], [779, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [780, 3, 1, "", "intersecting_cones"], [781, 3, 1, "", "intersecting_pyramids"], [782, 3, 1, "", "intersecting_trapezoids"], [783, 3, 1, "", "pyramids_and_cuboids"], [784, 3, 1, "", "spheres_and_cylinders"], [785, 3, 1, "", "squares_and_rectangles"], [786, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[788, 3, 1, "", "cuboid"], [789, 3, 1, "", "cylinder"], [790, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_seed": [[792, 3, 1, "", "from_neighbor_pores"], [793, 3, 1, "", "random"]], "openpnm.models.geometry.throat_size": [[795, 3, 1, "", "equivalent_diameter"], [796, 3, 1, "", "from_neighbor_pores"], [797, 3, 1, "", "generic_distribution"], [798, 3, 1, "", "normal"], [799, 3, 1, "", "random"], [800, 3, 1, "", "weibull"]], "openpnm.models.geometry.throat_surface_area": [[802, 3, 1, "", "cuboid"], [803, 3, 1, "", "cylinder"], [804, 3, 1, "", "extrusion"], [805, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_vector": [[807, 3, 1, "", "pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[809, 3, 1, "", "cuboid"], [810, 3, 1, "", "cylinder"], [811, 3, 1, "", "extrusion"], [812, 3, 1, "", "lens"], [813, 3, 1, "", "pendular_ring"], [814, 3, 1, "", "rectangle"]], "openpnm.models.misc": [[816, 3, 1, "", "blank"], [817, 3, 1, "", "clip"], [818, 3, 1, "", "constant"], [819, 3, 1, "", "difference"], [820, 3, 1, "", "fraction"], [821, 3, 1, "", "from_neighbor_pores"], [822, 3, 1, "", "from_neighbor_throats"], [823, 3, 1, "", "generic_distribution"], [824, 3, 1, "", "generic_function"], [825, 3, 1, "", "invert"], [826, 3, 1, "", "linear"], [827, 3, 1, "", "match_histogram"], [828, 3, 1, "", "normal"], [829, 3, 1, "", "normalize"], [830, 3, 1, "", "polynomial"], [831, 3, 1, "", "product"], [832, 3, 1, "", "random"], [833, 3, 1, "", "scaled"], [834, 3, 1, "", "summation"], [835, 3, 1, "", "weibull"]], "openpnm.models.network": [[837, 3, 1, "", "bidirectional_throats"], [838, 3, 1, "", "cluster_number"], [839, 3, 1, "", "cluster_size"], [840, 3, 1, "", "coordination_number"], [841, 3, 1, "", "count_coincident_pores"], [842, 3, 1, "", "distance_to_furthest_neighbor"], [843, 3, 1, "", "distance_to_nearest_neighbor"], [844, 3, 1, "", "distance_to_nearest_pore"], [845, 3, 1, "", "duplicate_throats"], [846, 3, 1, "", "find_coincident_pores"], [847, 3, 1, "", "gabriel_edges"], [848, 3, 1, "", "headless_throats"], [849, 3, 1, "", "isolated_pores"], [850, 3, 1, "", "looped_throats"], [851, 3, 1, "", "pore_to_pore_distance"], [852, 3, 1, "", "reversed_throats"]], "openpnm.models.phase": [[854, 3, 1, "", "chemicals_wrapper"], [855, 0, 0, "-", "critical_props"], [856, 0, 0, "-", "density"], [862, 0, 0, "-", "diffusivity"], [866, 0, 0, "-", "heat_capacity"], [871, 0, 0, "-", "misc"], [874, 0, 0, "-", "mixtures"], [880, 0, 0, "-", "partition_coefficient"], [882, 0, 0, "-", "surface_tension"], [886, 0, 0, "-", "thermal_conductivity"], [893, 0, 0, "-", "vapor_pressure"], [897, 0, 0, "-", "viscosity"]], "openpnm.models.phase.density": [[857, 3, 1, "", "ideal_gas"], [858, 3, 1, "", "liquid_mixture_COSTALD"], [859, 3, 1, "", "liquid_pure_COSTALD"], [860, 3, 1, "", "mass_to_molar"], [861, 3, 1, "", "water_correlation"]], "openpnm.models.phase.diffusivity": [[863, 3, 1, "", "gas_mixture_ce"], [864, 3, 1, "", "gas_mixture_fesg"], [865, 3, 1, "", "liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[867, 3, 1, "", "gas_mixture_yweighted"], [868, 3, 1, "", "gas_pure_TRC"], [869, 3, 1, "", "liquid_mixture_xweighted"], [870, 3, 1, "", "liquid_pure_rp"]], "openpnm.models.phase.misc": [[872, 3, 1, "", "mix_and_match"], [873, 3, 1, "", "mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[875, 3, 1, "", "from_component"], [876, 3, 1, "", "mixing_rule"], [877, 3, 1, "", "mole_summation"], [878, 3, 1, "", "mole_to_mass_fraction"], [879, 3, 1, "", "salinity"]], "openpnm.models.phase.partition_coefficient": [[881, 3, 1, "", "gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[883, 3, 1, "", "liquid_mixture_wsd"], [884, 3, 1, "", "liquid_pure_bb"], [885, 3, 1, "", "water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[887, 3, 1, "", "gas_mixture_whz"], [888, 3, 1, "", "gas_pure_gismr"], [889, 3, 1, "", "liquid_mixture_DIPPR9H"], [890, 3, 1, "", "liquid_pure_gismr"], [891, 3, 1, "", "liquid_pure_sr"], [892, 3, 1, "", "water_correlation"]], "openpnm.models.phase.vapor_pressure": [[894, 3, 1, "", "liquid_pure_antoine"], [895, 3, 1, "", "liquid_pure_lk"], [896, 3, 1, "", "water_correlation"]], "openpnm.models.phase.viscosity": [[898, 3, 1, "", "gas_mixture_hz"], [899, 3, 1, "", "gas_pure_gesmr"], [900, 3, 1, "", "gas_pure_st"], [901, 3, 1, "", "liquid_mixture_xweighted"], [902, 3, 1, "", "liquid_pure_ls"], [903, 3, 1, "", "water_correlation"]], "openpnm.models.physics": [[905, 0, 0, "-", "ad_dif_conductance"], [907, 0, 0, "-", "capillary_pressure"], [910, 0, 0, "-", "diffusive_conductance"], [915, 0, 0, "-", "electrical_conductance"], [918, 0, 0, "-", "hydraulic_conductance"], [922, 0, 0, "-", "meniscus"], [926, 0, 0, "-", "multiphase"], [929, 0, 0, "-", "source_terms"], [940, 0, 0, "-", "thermal_conductance"]], "openpnm.models.physics.ad_dif_conductance": [[906, 3, 1, "", "ad_dif"]], "openpnm.models.physics.capillary_pressure": [[908, 3, 1, "", "purcell"], [909, 3, 1, "", "washburn"]], "openpnm.models.physics.diffusive_conductance": [[911, 3, 1, "", "generic_diffusive"], [912, 3, 1, "", "mixed_diffusion"], [913, 3, 1, "", "ordinary_diffusion"], [914, 3, 1, "", "taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[916, 3, 1, "", "generic_electrical"], [917, 3, 1, "", "series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[919, 3, 1, "", "generic_hydraulic"], [920, 3, 1, "", "hagen_poiseuille"], [921, 3, 1, "", "valvatne_blunt"]], "openpnm.models.physics.meniscus": [[923, 3, 1, "", "general_toroidal"], [924, 3, 1, "", "purcell"], [925, 3, 1, "", "sinusoidal"]], "openpnm.models.physics.multiphase": [[927, 3, 1, "", "conduit_conductance"], [928, 3, 1, "", "late_filling"]], "openpnm.models.physics.source_terms": [[930, 3, 1, "", "butler_volmer_conc"], [931, 3, 1, "", "butler_volmer_voltage"], [932, 3, 1, "", "exponential"], [933, 3, 1, "", "general_symbolic"], [934, 3, 1, "", "linear"], [935, 3, 1, "", "logarithm"], [936, 3, 1, "", "natural_exponential"], [937, 3, 1, "", "natural_logarithm"], [938, 3, 1, "", "power_law"], [939, 3, 1, "", "standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[941, 3, 1, "", "generic_thermal"], [942, 3, 1, "", "series_resistors"]], "openpnm.network": [[944, 1, 1, "", "BodyCenteredCubic"], [983, 1, 1, "", "Cubic"], [1022, 1, 1, "", "CubicTemplate"], [1060, 1, 1, "", "Delaunay"], [1098, 1, 1, "", "DelaunayVoronoiDual"], [1138, 1, 1, "", "Demo"], [1177, 1, 1, "", "FaceCenteredCubic"], [1216, 1, 1, "", "Network"], [1254, 1, 1, "", "Voronoi"]], "openpnm.network.BodyCenteredCubic": [[945, 2, 1, "", "add_boundary_pores"], [946, 2, 1, "", "add_model"], [947, 2, 1, "", "add_model_collection"], [948, 2, 1, "", "clear"], [949, 2, 1, "", "copy"], [950, 2, 1, "", "create_adjacency_matrix"], [951, 2, 1, "", "create_incidence_matrix"], [952, 2, 1, "", "filter_by_label"], [953, 2, 1, "", "find_connected_pores"], [954, 2, 1, "", "find_connecting_throat"], [955, 2, 1, "", "find_nearby_pores"], [956, 2, 1, "", "find_neighbor_pores"], [957, 2, 1, "", "find_neighbor_throats"], [958, 2, 1, "", "fromkeys"], [959, 2, 1, "", "get"], [960, 2, 1, "", "get_adjacency_matrix"], [961, 2, 1, "", "get_conduit_data"], [962, 2, 1, "", "get_incidence_matrix"], [963, 2, 1, "", "interpolate_data"], [964, 2, 1, "", "items"], [965, 2, 1, "", "keys"], [966, 2, 1, "", "labels"], [967, 2, 1, "", "num_neighbors"], [968, 2, 1, "", "num_pores"], [969, 2, 1, "", "num_throats"], [970, 2, 1, "", "pop"], [971, 2, 1, "", "popitem"], [972, 2, 1, "", "pores"], [973, 2, 1, "", "props"], [974, 2, 1, "", "regenerate_models"], [975, 2, 1, "", "run_model"], [976, 2, 1, "", "set_label"], [977, 2, 1, "", "setdefault"], [978, 2, 1, "", "throats"], [979, 2, 1, "", "to_indices"], [980, 2, 1, "", "to_mask"], [981, 2, 1, "", "update"], [982, 2, 1, "", "values"]], "openpnm.network.Cubic": [[984, 2, 1, "", "add_boundary_pores"], [985, 2, 1, "", "add_model"], [986, 2, 1, "", "add_model_collection"], [987, 2, 1, "", "clear"], [988, 2, 1, "", "copy"], [989, 2, 1, "", "create_adjacency_matrix"], [990, 2, 1, "", "create_incidence_matrix"], [991, 2, 1, "", "filter_by_label"], [992, 2, 1, "", "find_connected_pores"], [993, 2, 1, "", "find_connecting_throat"], [994, 2, 1, "", "find_nearby_pores"], [995, 2, 1, "", "find_neighbor_pores"], [996, 2, 1, "", "find_neighbor_throats"], [997, 2, 1, "", "fromkeys"], [998, 2, 1, "", "get"], [999, 2, 1, "", "get_adjacency_matrix"], [1000, 2, 1, "", "get_conduit_data"], [1001, 2, 1, "", "get_incidence_matrix"], [1002, 2, 1, "", "interpolate_data"], [1003, 2, 1, "", "items"], [1004, 2, 1, "", "keys"], [1005, 2, 1, "", "labels"], [1006, 2, 1, "", "num_neighbors"], [1007, 2, 1, "", "num_pores"], [1008, 2, 1, "", "num_throats"], [1009, 2, 1, "", "pop"], [1010, 2, 1, "", "popitem"], [1011, 2, 1, "", "pores"], [1012, 2, 1, "", "props"], [1013, 2, 1, "", "regenerate_models"], [1014, 2, 1, "", "run_model"], [1015, 2, 1, "", "set_label"], [1016, 2, 1, "", "setdefault"], [1017, 2, 1, "", "throats"], [1018, 2, 1, "", "to_indices"], [1019, 2, 1, "", "to_mask"], [1020, 2, 1, "", "update"], [1021, 2, 1, "", "values"]], "openpnm.network.CubicTemplate": [[1023, 2, 1, "", "add_model"], [1024, 2, 1, "", "add_model_collection"], [1025, 2, 1, "", "clear"], [1026, 2, 1, "", "copy"], [1027, 2, 1, "", "create_adjacency_matrix"], [1028, 2, 1, "", "create_incidence_matrix"], [1029, 2, 1, "", "filter_by_label"], [1030, 2, 1, "", "find_connected_pores"], [1031, 2, 1, "", "find_connecting_throat"], [1032, 2, 1, "", "find_nearby_pores"], [1033, 2, 1, "", "find_neighbor_pores"], [1034, 2, 1, "", "find_neighbor_throats"], [1035, 2, 1, "", "fromkeys"], [1036, 2, 1, "", "get"], [1037, 2, 1, "", "get_adjacency_matrix"], [1038, 2, 1, "", "get_conduit_data"], [1039, 2, 1, "", "get_incidence_matrix"], [1040, 2, 1, "", "interpolate_data"], [1041, 2, 1, "", "items"], [1042, 2, 1, "", "keys"], [1043, 2, 1, "", "labels"], [1044, 2, 1, "", "num_neighbors"], [1045, 2, 1, "", "num_pores"], [1046, 2, 1, "", "num_throats"], [1047, 2, 1, "", "pop"], [1048, 2, 1, "", "popitem"], [1049, 2, 1, "", "pores"], [1050, 2, 1, "", "props"], [1051, 2, 1, "", "regenerate_models"], [1052, 2, 1, "", "run_model"], [1053, 2, 1, "", "set_label"], [1054, 2, 1, "", "setdefault"], [1055, 2, 1, "", "throats"], [1056, 2, 1, "", "to_indices"], [1057, 2, 1, "", "to_mask"], [1058, 2, 1, "", "update"], [1059, 2, 1, "", "values"]], "openpnm.network.Delaunay": [[1061, 2, 1, "", "add_model"], [1062, 2, 1, "", "add_model_collection"], [1063, 2, 1, "", "clear"], [1064, 2, 1, "", "copy"], [1065, 2, 1, "", "create_adjacency_matrix"], [1066, 2, 1, "", "create_incidence_matrix"], [1067, 2, 1, "", "filter_by_label"], [1068, 2, 1, "", "find_connected_pores"], [1069, 2, 1, "", "find_connecting_throat"], [1070, 2, 1, "", "find_nearby_pores"], [1071, 2, 1, "", "find_neighbor_pores"], [1072, 2, 1, "", "find_neighbor_throats"], [1073, 2, 1, "", "fromkeys"], [1074, 2, 1, "", "get"], [1075, 2, 1, "", "get_adjacency_matrix"], [1076, 2, 1, "", "get_conduit_data"], [1077, 2, 1, "", "get_incidence_matrix"], [1078, 2, 1, "", "interpolate_data"], [1079, 2, 1, "", "items"], [1080, 2, 1, "", "keys"], [1081, 2, 1, "", "labels"], [1082, 2, 1, "", "num_neighbors"], [1083, 2, 1, "", "num_pores"], [1084, 2, 1, "", "num_throats"], [1085, 2, 1, "", "pop"], [1086, 2, 1, "", "popitem"], [1087, 2, 1, "", "pores"], [1088, 2, 1, "", "props"], [1089, 2, 1, "", "regenerate_models"], [1090, 2, 1, "", "run_model"], [1091, 2, 1, "", "set_label"], [1092, 2, 1, "", "setdefault"], [1093, 2, 1, "", "throats"], [1094, 2, 1, "", "to_indices"], [1095, 2, 1, "", "to_mask"], [1096, 2, 1, "", "update"], [1097, 2, 1, "", "values"]], "openpnm.network.DelaunayVoronoiDual": [[1099, 2, 1, "", "add_model"], [1100, 2, 1, "", "add_model_collection"], [1101, 2, 1, "", "clear"], [1102, 2, 1, "", "copy"], [1103, 2, 1, "", "create_adjacency_matrix"], [1104, 2, 1, "", "create_incidence_matrix"], [1105, 2, 1, "", "filter_by_label"], [1106, 2, 1, "", "find_connected_pores"], [1107, 2, 1, "", "find_connecting_throat"], [1108, 2, 1, "", "find_nearby_pores"], [1109, 2, 1, "", "find_neighbor_pores"], [1110, 2, 1, "", "find_neighbor_throats"], [1111, 2, 1, "", "find_pore_hulls"], [1112, 2, 1, "", "find_throat_facets"], [1113, 2, 1, "", "fromkeys"], [1114, 2, 1, "", "get"], [1115, 2, 1, "", "get_adjacency_matrix"], [1116, 2, 1, "", "get_conduit_data"], [1117, 2, 1, "", "get_incidence_matrix"], [1118, 2, 1, "", "interpolate_data"], [1119, 2, 1, "", "items"], [1120, 2, 1, "", "keys"], [1121, 2, 1, "", "labels"], [1122, 2, 1, "", "num_neighbors"], [1123, 2, 1, "", "num_pores"], [1124, 2, 1, "", "num_throats"], [1125, 2, 1, "", "pop"], [1126, 2, 1, "", "popitem"], [1127, 2, 1, "", "pores"], [1128, 2, 1, "", "props"], [1129, 2, 1, "", "regenerate_models"], [1130, 2, 1, "", "run_model"], [1131, 2, 1, "", "set_label"], [1132, 2, 1, "", "setdefault"], [1133, 2, 1, "", "throats"], [1134, 2, 1, "", "to_indices"], [1135, 2, 1, "", "to_mask"], [1136, 2, 1, "", "update"], [1137, 2, 1, "", "values"]], "openpnm.network.Demo": [[1139, 2, 1, "", "add_boundary_pores"], [1140, 2, 1, "", "add_model"], [1141, 2, 1, "", "add_model_collection"], [1142, 2, 1, "", "clear"], [1143, 2, 1, "", "copy"], [1144, 2, 1, "", "create_adjacency_matrix"], [1145, 2, 1, "", "create_incidence_matrix"], [1146, 2, 1, "", "filter_by_label"], [1147, 2, 1, "", "find_connected_pores"], [1148, 2, 1, "", "find_connecting_throat"], [1149, 2, 1, "", "find_nearby_pores"], [1150, 2, 1, "", "find_neighbor_pores"], [1151, 2, 1, "", "find_neighbor_throats"], [1152, 2, 1, "", "fromkeys"], [1153, 2, 1, "", "get"], [1154, 2, 1, "", "get_adjacency_matrix"], [1155, 2, 1, "", "get_conduit_data"], [1156, 2, 1, "", "get_incidence_matrix"], [1157, 2, 1, "", "interpolate_data"], [1158, 2, 1, "", "items"], [1159, 2, 1, "", "keys"], [1160, 2, 1, "", "labels"], [1161, 2, 1, "", "num_neighbors"], [1162, 2, 1, "", "num_pores"], [1163, 2, 1, "", "num_throats"], [1164, 2, 1, "", "pop"], [1165, 2, 1, "", "popitem"], [1166, 2, 1, "", "pores"], [1167, 2, 1, "", "props"], [1168, 2, 1, "", "regenerate_models"], [1169, 2, 1, "", "run_model"], [1170, 2, 1, "", "set_label"], [1171, 2, 1, "", "setdefault"], [1172, 2, 1, "", "throats"], [1173, 2, 1, "", "to_indices"], [1174, 2, 1, "", "to_mask"], [1175, 2, 1, "", "update"], [1176, 2, 1, "", "values"]], "openpnm.network.FaceCenteredCubic": [[1178, 2, 1, "", "add_boundary_pores"], [1179, 2, 1, "", "add_model"], [1180, 2, 1, "", "add_model_collection"], [1181, 2, 1, "", "clear"], [1182, 2, 1, "", "copy"], [1183, 2, 1, "", "create_adjacency_matrix"], [1184, 2, 1, "", "create_incidence_matrix"], [1185, 2, 1, "", "filter_by_label"], [1186, 2, 1, "", "find_connected_pores"], [1187, 2, 1, "", "find_connecting_throat"], [1188, 2, 1, "", "find_nearby_pores"], [1189, 2, 1, "", "find_neighbor_pores"], [1190, 2, 1, "", "find_neighbor_throats"], [1191, 2, 1, "", "fromkeys"], [1192, 2, 1, "", "get"], [1193, 2, 1, "", "get_adjacency_matrix"], [1194, 2, 1, "", "get_conduit_data"], [1195, 2, 1, "", "get_incidence_matrix"], [1196, 2, 1, "", "interpolate_data"], [1197, 2, 1, "", "items"], [1198, 2, 1, "", "keys"], [1199, 2, 1, "", "labels"], [1200, 2, 1, "", "num_neighbors"], [1201, 2, 1, "", "num_pores"], [1202, 2, 1, "", "num_throats"], [1203, 2, 1, "", "pop"], [1204, 2, 1, "", "popitem"], [1205, 2, 1, "", "pores"], [1206, 2, 1, "", "props"], [1207, 2, 1, "", "regenerate_models"], [1208, 2, 1, "", "run_model"], [1209, 2, 1, "", "set_label"], [1210, 2, 1, "", "setdefault"], [1211, 2, 1, "", "throats"], [1212, 2, 1, "", "to_indices"], [1213, 2, 1, "", "to_mask"], [1214, 2, 1, "", "update"], [1215, 2, 1, "", "values"]], "openpnm.network.Network": [[1217, 2, 1, "", "add_model"], [1218, 2, 1, "", "add_model_collection"], [1219, 2, 1, "", "clear"], [1220, 2, 1, "", "copy"], [1221, 2, 1, "", "create_adjacency_matrix"], [1222, 2, 1, "", "create_incidence_matrix"], [1223, 2, 1, "", "filter_by_label"], [1224, 2, 1, "", "find_connected_pores"], [1225, 2, 1, "", "find_connecting_throat"], [1226, 2, 1, "", "find_nearby_pores"], [1227, 2, 1, "", "find_neighbor_pores"], [1228, 2, 1, "", "find_neighbor_throats"], [1229, 2, 1, "", "fromkeys"], [1230, 2, 1, "", "get"], [1231, 2, 1, "", "get_adjacency_matrix"], [1232, 2, 1, "", "get_conduit_data"], [1233, 2, 1, "", "get_incidence_matrix"], [1234, 2, 1, "", "interpolate_data"], [1235, 2, 1, "", "items"], [1236, 2, 1, "", "keys"], [1237, 2, 1, "", "labels"], [1238, 2, 1, "", "num_neighbors"], [1239, 2, 1, "", "num_pores"], [1240, 2, 1, "", "num_throats"], [1241, 2, 1, "", "pop"], [1242, 2, 1, "", "popitem"], [1243, 2, 1, "", "pores"], [1244, 2, 1, "", "props"], [1245, 2, 1, "", "regenerate_models"], [1246, 2, 1, "", "run_model"], [1247, 2, 1, "", "set_label"], [1248, 2, 1, "", "setdefault"], [1249, 2, 1, "", "throats"], [1250, 2, 1, "", "to_indices"], [1251, 2, 1, "", "to_mask"], [1252, 2, 1, "", "update"], [1253, 2, 1, "", "values"]], "openpnm.network.Voronoi": [[1255, 2, 1, "", "add_model"], [1256, 2, 1, "", "add_model_collection"], [1257, 2, 1, "", "clear"], [1258, 2, 1, "", "copy"], [1259, 2, 1, "", "create_adjacency_matrix"], [1260, 2, 1, "", "create_incidence_matrix"], [1261, 2, 1, "", "filter_by_label"], [1262, 2, 1, "", "find_connected_pores"], [1263, 2, 1, "", "find_connecting_throat"], [1264, 2, 1, "", "find_nearby_pores"], [1265, 2, 1, "", "find_neighbor_pores"], [1266, 2, 1, "", "find_neighbor_throats"], [1267, 2, 1, "", "fromkeys"], [1268, 2, 1, "", "get"], [1269, 2, 1, "", "get_adjacency_matrix"], [1270, 2, 1, "", "get_conduit_data"], [1271, 2, 1, "", "get_incidence_matrix"], [1272, 2, 1, "", "interpolate_data"], [1273, 2, 1, "", "items"], [1274, 2, 1, "", "keys"], [1275, 2, 1, "", "labels"], [1276, 2, 1, "", "num_neighbors"], [1277, 2, 1, "", "num_pores"], [1278, 2, 1, "", "num_throats"], [1279, 2, 1, "", "pop"], [1280, 2, 1, "", "popitem"], [1281, 2, 1, "", "pores"], [1282, 2, 1, "", "props"], [1283, 2, 1, "", "regenerate_models"], [1284, 2, 1, "", "run_model"], [1285, 2, 1, "", "set_label"], [1286, 2, 1, "", "setdefault"], [1287, 2, 1, "", "throats"], [1288, 2, 1, "", "to_indices"], [1289, 2, 1, "", "to_mask"], [1290, 2, 1, "", "update"], [1291, 2, 1, "", "values"]], "openpnm.phase": [[1293, 1, 1, "", "Air"], [1321, 1, 1, "", "BinaryGas"], [1355, 1, 1, "", "GasMixture"], [1389, 1, 1, "", "LiquidMixture"], [1423, 1, 1, "", "Mercury"], [1451, 1, 1, "", "Mixture"], [1484, 1, 1, "", "Phase"], [1512, 1, 1, "", "Species"], [1540, 1, 1, "", "StandardGas"], [1568, 1, 1, "", "StandardGasMixture"], [1602, 1, 1, "", "StandardLiquid"], [1630, 1, 1, "", "StandardLiquidMixture"], [1664, 1, 1, "", "Water"]], "openpnm.phase.Air": [[1294, 2, 1, "", "add_model"], [1295, 2, 1, "", "add_model_collection"], [1296, 2, 1, "", "clear"], [1297, 2, 1, "", "copy"], [1298, 2, 1, "", "filter_by_label"], [1299, 2, 1, "", "fromkeys"], [1300, 2, 1, "", "get"], [1301, 2, 1, "", "get_conduit_data"], [1302, 2, 1, "", "interpolate_data"], [1303, 2, 1, "", "items"], [1304, 2, 1, "", "keys"], [1305, 2, 1, "", "labels"], [1306, 2, 1, "", "num_pores"], [1307, 2, 1, "", "num_throats"], [1308, 2, 1, "", "pop"], [1309, 2, 1, "", "popitem"], [1310, 2, 1, "", "pores"], [1311, 2, 1, "", "props"], [1312, 2, 1, "", "regenerate_models"], [1313, 2, 1, "", "run_model"], [1314, 2, 1, "", "set_label"], [1315, 2, 1, "", "setdefault"], [1316, 2, 1, "", "throats"], [1317, 2, 1, "", "to_indices"], [1318, 2, 1, "", "to_mask"], [1319, 2, 1, "", "update"], [1320, 2, 1, "", "values"]], "openpnm.phase.BinaryGas": [[1322, 2, 1, "", "add_comp"], [1323, 2, 1, "", "add_model"], [1324, 2, 1, "", "add_model_collection"], [1325, 2, 1, "", "check_mixture_health"], [1326, 2, 1, "", "clear"], [1327, 2, 1, "", "copy"], [1328, 2, 1, "", "filter_by_label"], [1329, 2, 1, "", "fromkeys"], [1330, 2, 1, "", "get"], [1331, 2, 1, "", "get_comp_vals"], [1332, 2, 1, "", "get_conduit_data"], [1333, 2, 1, "", "get_mix_vals"], [1334, 2, 1, "", "interpolate_data"], [1335, 2, 1, "", "items"], [1336, 2, 1, "", "keys"], [1337, 2, 1, "", "labels"], [1338, 2, 1, "", "num_pores"], [1339, 2, 1, "", "num_throats"], [1340, 2, 1, "", "pop"], [1341, 2, 1, "", "popitem"], [1342, 2, 1, "", "pores"], [1343, 2, 1, "", "props"], [1344, 2, 1, "", "regenerate_models"], [1345, 2, 1, "", "remove_comp"], [1346, 2, 1, "", "run_model"], [1347, 2, 1, "", "set_label"], [1348, 2, 1, "", "setdefault"], [1349, 2, 1, "", "throats"], [1350, 2, 1, "", "to_indices"], [1351, 2, 1, "", "to_mask"], [1352, 2, 1, "", "update"], [1353, 2, 1, "", "values"], [1354, 2, 1, "", "y"]], "openpnm.phase.GasMixture": [[1356, 2, 1, "", "add_comp"], [1357, 2, 1, "", "add_model"], [1358, 2, 1, "", "add_model_collection"], [1359, 2, 1, "", "check_mixture_health"], [1360, 2, 1, "", "clear"], [1361, 2, 1, "", "copy"], [1362, 2, 1, "", "filter_by_label"], [1363, 2, 1, "", "fromkeys"], [1364, 2, 1, "", "get"], [1365, 2, 1, "", "get_comp_vals"], [1366, 2, 1, "", "get_conduit_data"], [1367, 2, 1, "", "get_mix_vals"], [1368, 2, 1, "", "interpolate_data"], [1369, 2, 1, "", "items"], [1370, 2, 1, "", "keys"], [1371, 2, 1, "", "labels"], [1372, 2, 1, "", "num_pores"], [1373, 2, 1, "", "num_throats"], [1374, 2, 1, "", "pop"], [1375, 2, 1, "", "popitem"], [1376, 2, 1, "", "pores"], [1377, 2, 1, "", "props"], [1378, 2, 1, "", "regenerate_models"], [1379, 2, 1, "", "remove_comp"], [1380, 2, 1, "", "run_model"], [1381, 2, 1, "", "set_label"], [1382, 2, 1, "", "setdefault"], [1383, 2, 1, "", "throats"], [1384, 2, 1, "", "to_indices"], [1385, 2, 1, "", "to_mask"], [1386, 2, 1, "", "update"], [1387, 2, 1, "", "values"], [1388, 2, 1, "", "y"]], "openpnm.phase.LiquidMixture": [[1390, 2, 1, "", "add_comp"], [1391, 2, 1, "", "add_model"], [1392, 2, 1, "", "add_model_collection"], [1393, 2, 1, "", "check_mixture_health"], [1394, 2, 1, "", "clear"], [1395, 2, 1, "", "copy"], [1396, 2, 1, "", "filter_by_label"], [1397, 2, 1, "", "fromkeys"], [1398, 2, 1, "", "get"], [1399, 2, 1, "", "get_comp_vals"], [1400, 2, 1, "", "get_conduit_data"], [1401, 2, 1, "", "get_mix_vals"], [1402, 2, 1, "", "interpolate_data"], [1403, 2, 1, "", "items"], [1404, 2, 1, "", "keys"], [1405, 2, 1, "", "labels"], [1406, 2, 1, "", "num_pores"], [1407, 2, 1, "", "num_throats"], [1408, 2, 1, "", "pop"], [1409, 2, 1, "", "popitem"], [1410, 2, 1, "", "pores"], [1411, 2, 1, "", "props"], [1412, 2, 1, "", "regenerate_models"], [1413, 2, 1, "", "remove_comp"], [1414, 2, 1, "", "run_model"], [1415, 2, 1, "", "set_label"], [1416, 2, 1, "", "setdefault"], [1417, 2, 1, "", "throats"], [1418, 2, 1, "", "to_indices"], [1419, 2, 1, "", "to_mask"], [1420, 2, 1, "", "update"], [1421, 2, 1, "", "values"], [1422, 2, 1, "", "x"]], "openpnm.phase.Mercury": [[1424, 2, 1, "", "add_model"], [1425, 2, 1, "", "add_model_collection"], [1426, 2, 1, "", "clear"], [1427, 2, 1, "", "copy"], [1428, 2, 1, "", "filter_by_label"], [1429, 2, 1, "", "fromkeys"], [1430, 2, 1, "", "get"], [1431, 2, 1, "", "get_conduit_data"], [1432, 2, 1, "", "interpolate_data"], [1433, 2, 1, "", "items"], [1434, 2, 1, "", "keys"], [1435, 2, 1, "", "labels"], [1436, 2, 1, "", "num_pores"], [1437, 2, 1, "", "num_throats"], [1438, 2, 1, "", "pop"], [1439, 2, 1, "", "popitem"], [1440, 2, 1, "", "pores"], [1441, 2, 1, "", "props"], [1442, 2, 1, "", "regenerate_models"], [1443, 2, 1, "", "run_model"], [1444, 2, 1, "", "set_label"], [1445, 2, 1, "", "setdefault"], [1446, 2, 1, "", "throats"], [1447, 2, 1, "", "to_indices"], [1448, 2, 1, "", "to_mask"], [1449, 2, 1, "", "update"], [1450, 2, 1, "", "values"]], "openpnm.phase.Mixture": [[1452, 2, 1, "", "add_comp"], [1453, 2, 1, "", "add_model"], [1454, 2, 1, "", "add_model_collection"], [1455, 2, 1, "", "check_mixture_health"], [1456, 2, 1, "", "clear"], [1457, 2, 1, "", "copy"], [1458, 2, 1, "", "filter_by_label"], [1459, 2, 1, "", "fromkeys"], [1460, 2, 1, "", "get"], [1461, 2, 1, "", "get_comp_vals"], [1462, 2, 1, "", "get_conduit_data"], [1463, 2, 1, "", "get_mix_vals"], [1464, 2, 1, "", "interpolate_data"], [1465, 2, 1, "", "items"], [1466, 2, 1, "", "keys"], [1467, 2, 1, "", "labels"], [1468, 2, 1, "", "num_pores"], [1469, 2, 1, "", "num_throats"], [1470, 2, 1, "", "pop"], [1471, 2, 1, "", "popitem"], [1472, 2, 1, "", "pores"], [1473, 2, 1, "", "props"], [1474, 2, 1, "", "regenerate_models"], [1475, 2, 1, "", "remove_comp"], [1476, 2, 1, "", "run_model"], [1477, 2, 1, "", "set_label"], [1478, 2, 1, "", "setdefault"], [1479, 2, 1, "", "throats"], [1480, 2, 1, "", "to_indices"], [1481, 2, 1, "", "to_mask"], [1482, 2, 1, "", "update"], [1483, 2, 1, "", "values"]], "openpnm.phase.Phase": [[1485, 2, 1, "", "add_model"], [1486, 2, 1, "", "add_model_collection"], [1487, 2, 1, "", "clear"], [1488, 2, 1, "", "copy"], [1489, 2, 1, "", "filter_by_label"], [1490, 2, 1, "", "fromkeys"], [1491, 2, 1, "", "get"], [1492, 2, 1, "", "get_conduit_data"], [1493, 2, 1, "", "interpolate_data"], [1494, 2, 1, "", "items"], [1495, 2, 1, "", "keys"], [1496, 2, 1, "", "labels"], [1497, 2, 1, "", "num_pores"], [1498, 2, 1, "", "num_throats"], [1499, 2, 1, "", "pop"], [1500, 2, 1, "", "popitem"], [1501, 2, 1, "", "pores"], [1502, 2, 1, "", "props"], [1503, 2, 1, "", "regenerate_models"], [1504, 2, 1, "", "run_model"], [1505, 2, 1, "", "set_label"], [1506, 2, 1, "", "setdefault"], [1507, 2, 1, "", "throats"], [1508, 2, 1, "", "to_indices"], [1509, 2, 1, "", "to_mask"], [1510, 2, 1, "", "update"], [1511, 2, 1, "", "values"]], "openpnm.phase.Species": [[1513, 2, 1, "", "add_model"], [1514, 2, 1, "", "add_model_collection"], [1515, 2, 1, "", "clear"], [1516, 2, 1, "", "copy"], [1517, 2, 1, "", "filter_by_label"], [1518, 2, 1, "", "fromkeys"], [1519, 2, 1, "", "get"], [1520, 2, 1, "", "get_conduit_data"], [1521, 2, 1, "", "interpolate_data"], [1522, 2, 1, "", "items"], [1523, 2, 1, "", "keys"], [1524, 2, 1, "", "labels"], [1525, 2, 1, "", "num_pores"], [1526, 2, 1, "", "num_throats"], [1527, 2, 1, "", "pop"], [1528, 2, 1, "", "popitem"], [1529, 2, 1, "", "pores"], [1530, 2, 1, "", "props"], [1531, 2, 1, "", "regenerate_models"], [1532, 2, 1, "", "run_model"], [1533, 2, 1, "", "set_label"], [1534, 2, 1, "", "setdefault"], [1535, 2, 1, "", "throats"], [1536, 2, 1, "", "to_indices"], [1537, 2, 1, "", "to_mask"], [1538, 2, 1, "", "update"], [1539, 2, 1, "", "values"]], "openpnm.phase.StandardGas": [[1541, 2, 1, "", "add_model"], [1542, 2, 1, "", "add_model_collection"], [1543, 2, 1, "", "clear"], [1544, 2, 1, "", "copy"], [1545, 2, 1, "", "filter_by_label"], [1546, 2, 1, "", "fromkeys"], [1547, 2, 1, "", "get"], [1548, 2, 1, "", "get_conduit_data"], [1549, 2, 1, "", "interpolate_data"], [1550, 2, 1, "", "items"], [1551, 2, 1, "", "keys"], [1552, 2, 1, "", "labels"], [1553, 2, 1, "", "num_pores"], [1554, 2, 1, "", "num_throats"], [1555, 2, 1, "", "pop"], [1556, 2, 1, "", "popitem"], [1557, 2, 1, "", "pores"], [1558, 2, 1, "", "props"], [1559, 2, 1, "", "regenerate_models"], [1560, 2, 1, "", "run_model"], [1561, 2, 1, "", "set_label"], [1562, 2, 1, "", "setdefault"], [1563, 2, 1, "", "throats"], [1564, 2, 1, "", "to_indices"], [1565, 2, 1, "", "to_mask"], [1566, 2, 1, "", "update"], [1567, 2, 1, "", "values"]], "openpnm.phase.StandardGasMixture": [[1569, 2, 1, "", "add_comp"], [1570, 2, 1, "", "add_model"], [1571, 2, 1, "", "add_model_collection"], [1572, 2, 1, "", "check_mixture_health"], [1573, 2, 1, "", "clear"], [1574, 2, 1, "", "copy"], [1575, 2, 1, "", "filter_by_label"], [1576, 2, 1, "", "fromkeys"], [1577, 2, 1, "", "get"], [1578, 2, 1, "", "get_comp_vals"], [1579, 2, 1, "", "get_conduit_data"], [1580, 2, 1, "", "get_mix_vals"], [1581, 2, 1, "", "interpolate_data"], [1582, 2, 1, "", "items"], [1583, 2, 1, "", "keys"], [1584, 2, 1, "", "labels"], [1585, 2, 1, "", "num_pores"], [1586, 2, 1, "", "num_throats"], [1587, 2, 1, "", "pop"], [1588, 2, 1, "", "popitem"], [1589, 2, 1, "", "pores"], [1590, 2, 1, "", "props"], [1591, 2, 1, "", "regenerate_models"], [1592, 2, 1, "", "remove_comp"], [1593, 2, 1, "", "run_model"], [1594, 2, 1, "", "set_label"], [1595, 2, 1, "", "setdefault"], [1596, 2, 1, "", "throats"], [1597, 2, 1, "", "to_indices"], [1598, 2, 1, "", "to_mask"], [1599, 2, 1, "", "update"], [1600, 2, 1, "", "values"], [1601, 2, 1, "", "y"]], "openpnm.phase.StandardLiquid": [[1603, 2, 1, "", "add_model"], [1604, 2, 1, "", "add_model_collection"], [1605, 2, 1, "", "clear"], [1606, 2, 1, "", "copy"], [1607, 2, 1, "", "filter_by_label"], [1608, 2, 1, "", "fromkeys"], [1609, 2, 1, "", "get"], [1610, 2, 1, "", "get_conduit_data"], [1611, 2, 1, "", "interpolate_data"], [1612, 2, 1, "", "items"], [1613, 2, 1, "", "keys"], [1614, 2, 1, "", "labels"], [1615, 2, 1, "", "num_pores"], [1616, 2, 1, "", "num_throats"], [1617, 2, 1, "", "pop"], [1618, 2, 1, "", "popitem"], [1619, 2, 1, "", "pores"], [1620, 2, 1, "", "props"], [1621, 2, 1, "", "regenerate_models"], [1622, 2, 1, "", "run_model"], [1623, 2, 1, "", "set_label"], [1624, 2, 1, "", "setdefault"], [1625, 2, 1, "", "throats"], [1626, 2, 1, "", "to_indices"], [1627, 2, 1, "", "to_mask"], [1628, 2, 1, "", "update"], [1629, 2, 1, "", "values"]], "openpnm.phase.StandardLiquidMixture": [[1631, 2, 1, "", "add_comp"], [1632, 2, 1, "", "add_model"], [1633, 2, 1, "", "add_model_collection"], [1634, 2, 1, "", "check_mixture_health"], [1635, 2, 1, "", "clear"], [1636, 2, 1, "", "copy"], [1637, 2, 1, "", "filter_by_label"], [1638, 2, 1, "", "fromkeys"], [1639, 2, 1, "", "get"], [1640, 2, 1, "", "get_comp_vals"], [1641, 2, 1, "", "get_conduit_data"], [1642, 2, 1, "", "get_mix_vals"], [1643, 2, 1, "", "interpolate_data"], [1644, 2, 1, "", "items"], [1645, 2, 1, "", "keys"], [1646, 2, 1, "", "labels"], [1647, 2, 1, "", "num_pores"], [1648, 2, 1, "", "num_throats"], [1649, 2, 1, "", "pop"], [1650, 2, 1, "", "popitem"], [1651, 2, 1, "", "pores"], [1652, 2, 1, "", "props"], [1653, 2, 1, "", "regenerate_models"], [1654, 2, 1, "", "remove_comp"], [1655, 2, 1, "", "run_model"], [1656, 2, 1, "", "set_label"], [1657, 2, 1, "", "setdefault"], [1658, 2, 1, "", "throats"], [1659, 2, 1, "", "to_indices"], [1660, 2, 1, "", "to_mask"], [1661, 2, 1, "", "update"], [1662, 2, 1, "", "values"], [1663, 2, 1, "", "x"]], "openpnm.phase.Water": [[1665, 2, 1, "", "add_model"], [1666, 2, 1, "", "add_model_collection"], [1667, 2, 1, "", "clear"], [1668, 2, 1, "", "copy"], [1669, 2, 1, "", "filter_by_label"], [1670, 2, 1, "", "fromkeys"], [1671, 2, 1, "", "get"], [1672, 2, 1, "", "get_conduit_data"], [1673, 2, 1, "", "interpolate_data"], [1674, 2, 1, "", "items"], [1675, 2, 1, "", "keys"], [1676, 2, 1, "", "labels"], [1677, 2, 1, "", "num_pores"], [1678, 2, 1, "", "num_throats"], [1679, 2, 1, "", "pop"], [1680, 2, 1, "", "popitem"], [1681, 2, 1, "", "pores"], [1682, 2, 1, "", "props"], [1683, 2, 1, "", "regenerate_models"], [1684, 2, 1, "", "run_model"], [1685, 2, 1, "", "set_label"], [1686, 2, 1, "", "setdefault"], [1687, 2, 1, "", "throats"], [1688, 2, 1, "", "to_indices"], [1689, 2, 1, "", "to_mask"], [1690, 2, 1, "", "update"], [1691, 2, 1, "", "values"]], "openpnm.solvers": [[1693, 1, 1, "", "BaseSolver"], [1695, 1, 1, "", "DirectSolver"], [1697, 1, 1, "", "IterativeSolver"], [1699, 1, 1, "", "PETScLinearSolver"], [1701, 1, 1, "", "PardisoSpsolve"], [1703, 1, 1, "", "PyamgRugeStubenSolver"], [1705, 1, 1, "", "ScipyCG"], [1707, 1, 1, "", "ScipySpsolve"]], "openpnm.solvers.BaseSolver": [[1694, 2, 1, "", "solve"]], "openpnm.solvers.DirectSolver": [[1696, 2, 1, "", "solve"]], "openpnm.solvers.IterativeSolver": [[1698, 2, 1, "", "solve"]], "openpnm.solvers.PETScLinearSolver": [[1700, 2, 1, "", "solve"]], "openpnm.solvers.PardisoSpsolve": [[1702, 2, 1, "", "solve"]], "openpnm.solvers.PyamgRugeStubenSolver": [[1704, 2, 1, "", "solve"]], "openpnm.solvers.ScipyCG": [[1706, 2, 1, "", "solve"]], "openpnm.solvers.ScipySpsolve": [[1708, 2, 1, "", "solve"]], "openpnm.topotools": [[1710, 3, 1, "", "add_boundary_pores"], [1711, 3, 1, "", "add_reservoir_pore"], [1712, 3, 1, "", "bond_percolation"], [1713, 3, 1, "", "clone_pores"], [1714, 3, 1, "", "connect_pores"], [1715, 3, 1, "", "conns_to_am"], [1716, 3, 1, "", "dimensionality"], [1717, 3, 1, "", "drop_sites"], [1718, 3, 1, "", "extend"], [1719, 3, 1, "", "filter_pores_by_z"], [1720, 3, 1, "", "find_clusters"], [1721, 3, 1, "", "find_connected_sites"], [1722, 3, 1, "", "find_connecting_bonds"], [1723, 3, 1, "", "find_interface_throats"], [1724, 3, 1, "", "find_isolated_clusters"], [1725, 3, 1, "", "find_neighbor_bonds"], [1726, 3, 1, "", "find_neighbor_sites"], [1727, 3, 1, "", "find_path"], [1728, 3, 1, "", "find_surface_pores"], [1729, 3, 1, "", "generate_base_points"], [1730, 3, 1, "", "get_domain_area"], [1731, 3, 1, "", "get_domain_length"], [1732, 3, 1, "", "get_shape"], [1733, 3, 1, "", "get_spacing"], [1734, 3, 1, "", "hull_centroid"], [1735, 3, 1, "", "is_fully_connected"], [1736, 3, 1, "", "iscoplanar"], [1737, 3, 1, "", "isoutside"], [1738, 3, 1, "", "ispercolating"], [1739, 3, 1, "", "issymmetric"], [1740, 3, 1, "", "istriangular"], [1741, 3, 1, "", "istril"], [1742, 3, 1, "", "istriu"], [1743, 3, 1, "", "label_faces"], [1744, 3, 1, "", "merge_networks"], [1745, 3, 1, "", "merge_pores"], [1746, 3, 1, "", "reduce_coordination"], [1747, 3, 1, "", "reflect_base_points"], [1748, 3, 1, "", "rotate_coords"], [1749, 3, 1, "", "shear_coords"], [1750, 3, 1, "", "site_percolation"], [1751, 3, 1, "", "stitch"], [1752, 3, 1, "", "template_cylinder_annulus"], [1753, 3, 1, "", "template_sphere_shell"], [1754, 3, 1, "", "tri_to_am"], [1755, 3, 1, "", "trim"], [1756, 3, 1, "", "trim_disconnected_clusters"], [1757, 3, 1, "", "vor_to_am"]], "openpnm.utils": [[1759, 1, 1, "", "Docorator"], [1785, 1, 1, "", "HealthDict"], [1797, 1, 1, "", "NestedDict"], [1811, 1, 1, "", "PrintableDict"], [1823, 1, 1, "", "PrintableList"], [1835, 1, 1, "", "Project"], [1847, 1, 1, "", "SettingsAttr"], [1848, 1, 1, "", "TypedList"], [1860, 1, 1, "", "TypedMixin"], [1861, 1, 1, "", "TypedSet"], [1879, 1, 1, "", "Workspace"], [1898, 3, 1, "", "check_data_health"], [1899, 3, 1, "", "check_network_health"], [1900, 3, 1, "", "dict_to_struct"], [1901, 3, 1, "", "flat_list"], [1902, 3, 1, "", "get_mixture_model_args"], [1903, 3, 1, "", "get_printable_labels"], [1904, 3, 1, "", "get_printable_props"], [1905, 3, 1, "", "ignore_warnings"], [1906, 3, 1, "", "is_symmetric"], [1907, 3, 1, "", "is_transient"], [1908, 3, 1, "", "is_valid_propname"], [1909, 3, 1, "", "methods_to_table"], [1910, 3, 1, "", "models_to_table"], [1911, 3, 1, "", "sanitize_dict"], [1912, 3, 1, "", "struct_to_dict"]], "openpnm.utils.Docorator": [[1760, 2, 1, "", "__call__"], [1761, 2, 1, "", "dedent"], [1762, 2, 1, "", "dedents"], [1763, 2, 1, "", "delete_kwargs"], [1764, 2, 1, "", "delete_kwargs_s"], [1765, 2, 1, "", "delete_params"], [1766, 2, 1, "", "delete_params_s"], [1767, 2, 1, "", "delete_types"], [1768, 2, 1, "", "delete_types_s"], [1769, 2, 1, "", "get_docstring"], [1770, 2, 1, "", "get_extended_summary"], [1771, 2, 1, "", "get_extended_summaryf"], [1772, 2, 1, "", "get_full_description"], [1773, 2, 1, "", "get_full_descriptionf"], [1774, 2, 1, "", "get_sections"], [1775, 2, 1, "", "get_sectionsf"], [1776, 2, 1, "", "get_summary"], [1777, 2, 1, "", "get_summaryf"], [1778, 2, 1, "", "keep_params"], [1779, 2, 1, "", "keep_params_s"], [1780, 2, 1, "", "keep_types"], [1781, 2, 1, "", "keep_types_s"], [1782, 2, 1, "", "save_docstring"], [1783, 2, 1, "", "with_indent"], [1784, 2, 1, "", "with_indents"]], "openpnm.utils.HealthDict": [[1786, 2, 1, "", "clear"], [1787, 2, 1, "", "copy"], [1788, 2, 1, "", "fromkeys"], [1789, 2, 1, "", "get"], [1790, 2, 1, "", "items"], [1791, 2, 1, "", "keys"], [1792, 2, 1, "", "pop"], [1793, 2, 1, "", "popitem"], [1794, 2, 1, "", "setdefault"], [1795, 2, 1, "", "update"], [1796, 2, 1, "", "values"]], "openpnm.utils.NestedDict": [[1798, 2, 1, "", "clear"], [1799, 2, 1, "", "copy"], [1800, 2, 1, "", "fromkeys"], [1801, 2, 1, "", "get"], [1802, 2, 1, "", "items"], [1803, 2, 1, "", "keys"], [1804, 2, 1, "", "pop"], [1805, 2, 1, "", "popitem"], [1806, 2, 1, "", "setdefault"], [1807, 2, 1, "", "to_dict"], [1808, 2, 1, "", "unravel"], [1809, 2, 1, "", "update"], [1810, 2, 1, "", "values"]], "openpnm.utils.PrintableDict": [[1812, 2, 1, "", "clear"], [1813, 2, 1, "", "copy"], [1814, 2, 1, "", "fromkeys"], [1815, 2, 1, "", "get"], [1816, 2, 1, "", "items"], [1817, 2, 1, "", "keys"], [1818, 2, 1, "", "pop"], [1819, 2, 1, "", "popitem"], [1820, 2, 1, "", "setdefault"], [1821, 2, 1, "", "update"], [1822, 2, 1, "", "values"]], "openpnm.utils.PrintableList": [[1824, 2, 1, "", "append"], [1825, 2, 1, "", "clear"], [1826, 2, 1, "", "copy"], [1827, 2, 1, "", "count"], [1828, 2, 1, "", "extend"], [1829, 2, 1, "", "index"], [1830, 2, 1, "", "insert"], [1831, 2, 1, "", "pop"], [1832, 2, 1, "", "remove"], [1833, 2, 1, "", "reverse"], [1834, 2, 1, "", "sort"]], "openpnm.utils.Project": [[1836, 2, 1, "", "append"], [1837, 2, 1, "", "clear"], [1838, 2, 1, "", "copy"], [1839, 2, 1, "", "count"], [1840, 2, 1, "", "extend"], [1841, 2, 1, "", "index"], [1842, 2, 1, "", "insert"], [1843, 2, 1, "", "pop"], [1844, 2, 1, "", "remove"], [1845, 2, 1, "", "reverse"], [1846, 2, 1, "", "sort"]], "openpnm.utils.TypedList": [[1849, 2, 1, "", "append"], [1850, 2, 1, "", "clear"], [1851, 2, 1, "", "copy"], [1852, 2, 1, "", "count"], [1853, 2, 1, "", "extend"], [1854, 2, 1, "", "index"], [1855, 2, 1, "", "insert"], [1856, 2, 1, "", "pop"], [1857, 2, 1, "", "remove"], [1858, 2, 1, "", "reverse"], [1859, 2, 1, "", "sort"]], "openpnm.utils.TypedSet": [[1862, 2, 1, "", "add"], [1863, 2, 1, "", "clear"], [1864, 2, 1, "", "copy"], [1865, 2, 1, "", "difference"], [1866, 2, 1, "", "difference_update"], [1867, 2, 1, "", "discard"], [1868, 2, 1, "", "intersection"], [1869, 2, 1, "", "intersection_update"], [1870, 2, 1, "", "isdisjoint"], [1871, 2, 1, "", "issubset"], [1872, 2, 1, "", "issuperset"], [1873, 2, 1, "", "pop"], [1874, 2, 1, "", "remove"], [1875, 2, 1, "", "symmetric_difference"], [1876, 2, 1, "", "symmetric_difference_update"], [1877, 2, 1, "", "union"], [1878, 2, 1, "", "update"]], "openpnm.utils.Workspace": [[1880, 2, 1, "", "clear"], [1881, 2, 1, "", "close_project"], [1882, 2, 1, "", "copy"], [1883, 2, 1, "", "copy_project"], [1884, 2, 1, "", "fromkeys"], [1885, 2, 1, "", "get"], [1886, 2, 1, "", "items"], [1887, 2, 1, "", "keys"], [1888, 2, 1, "", "load_project"], [1889, 2, 1, "", "load_workspace"], [1890, 2, 1, "", "new_project"], [1891, 2, 1, "", "pop"], [1892, 2, 1, "", "popitem"], [1893, 2, 1, "", "save_project"], [1894, 2, 1, "", "save_workspace"], [1895, 2, 1, "", "setdefault"], [1896, 2, 1, "", "update"], [1897, 2, 1, "", "values"]], "openpnm.visualization": [[1914, 3, 1, "", "draw_conduit"], [1915, 3, 1, "", "generate_voxel_image"], [1916, 3, 1, "", "plot_connections"], [1917, 3, 1, "", "plot_coordinates"], [1918, 3, 1, "", "plot_networkx"], [1919, 3, 1, "", "plot_notebook"], [1920, 3, 1, "", "plot_tutorial"], [1921, 3, 1, "", "plot_vispy"], [1922, 3, 1, "", "set_mpl_style"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"applic": 0, "exampl": [1, 14], "refer": [2, 1923], "10": 3, "step": [3, 9], "learn": 3, "openpnm": [3, 5, 23, 24, 29, 36, 553], "predict": [4, 6, 8, 10, 11, 13], "absolut": [4, 22], "permeabl": [4, 13, 15], "creat": [4, 8, 11, 12, 13, 15, 19, 21, 31, 32, 33], "random": [4, 9, 11, 27, 741, 749, 793, 799, 832], "cubic": [4, 11, 15, 27, 983], "network": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 24, 27, 28, 29, 36, 679, 836, 943, 1216, 1709], "phase": [4, 6, 7, 8, 9, 12, 13, 15, 32, 33, 680, 853, 1292, 1484], "object": [4, 32, 33], "appli": [4, 6, 8, 9, 12, 13, 21], "stoke": [4, 6], "flow": [4, 6], "calcul": [4, 7, 8, 11, 12, 13, 15, 30, 33], "adjust": [5, 15], "pore": [5, 6, 9, 11, 15, 16, 24, 28, 29, 30, 31, 33, 36, 57, 89, 117, 149, 182, 215, 247, 280, 313, 346, 380, 413, 446, 479, 512, 541, 588, 604, 669, 734, 740, 743, 751, 756, 972, 1011, 1049, 1087, 1127, 1166, 1205, 1243, 1281, 1310, 1342, 1376, 1410, 1440, 1472, 1501, 1529, 1557, 1589, 1619, 1651, 1681], "size": [5, 9, 15, 24, 30, 704, 719, 743, 794], "distribut": [5, 9, 15, 30], "geometri": [5, 7, 671, 689], "throat": [5, 9, 11, 24, 28, 29, 30, 31, 68, 94, 126, 159, 192, 224, 257, 290, 323, 357, 390, 423, 456, 488, 520, 547, 594, 606, 762, 765, 767, 773, 787, 791, 794, 801, 806, 808, 978, 1017, 1055, 1093, 1133, 1172, 1211, 1249, 1287, 1316, 1349, 1383, 1417, 1446, 1479, 1507, 1535, 1563, 1596, 1625, 1658, 1687], "us": [5, 9, 22, 23, 29, 30, 31, 32, 34], "scipi": [5, 30], "stat": [5, 30], "class": [5, 32, 553, 1758], "directli": 5, "pre": 5, "defin": [5, 6, 12, 13, 15, 31, 33], "model": [5, 16, 24, 30, 31, 32, 33, 36, 669, 679, 690, 704, 719, 734, 740, 743, 751, 756, 762, 765, 767, 773, 787, 791, 794, 801, 806, 808], "dispers": 6, "coeffici": [6, 15, 21], "gener": [6, 27], "effect": [6, 7, 759], "volum": [6, 11, 756, 808], "perform": [6, 7, 9, 15], "transient": [6, 25, 641], "advect": 6, "diffus": [6, 7, 8, 12, 24, 704, 862], "elut": 6, "curv": [6, 12], "solv": [6, 21, 644, 1694, 1696, 1698, 1700, 1702, 1704, 1706, 1708], "find": [7, 9, 29], "tortuos": 7, "physic": [7, 9, 686, 904], "fickian": [7, 8], "visual": [7, 8, 27, 35, 1913], "result": [7, 8], "format": [8, 29], "factor": [8, 24, 704, 719, 762], "calibr": 9, "mercuri": [9, 684, 1423], "intrus": 9, "data": [9, 28, 31, 645], "import": [9, 10, 27, 645], "packag": [9, 22], "sandston": 9, "add": [9, 1862], "geometr": [9, 30], "properti": [9, 10, 28, 30, 32], "given": 9, "seed": [9, 740, 791], "between": 9, "0": 9, "1": [9, 32], "check": [9, 32], "consist": [9, 32], "addit": 9, "an": 10, "extract": [10, 11], "transport": [10, 21, 23, 24, 25, 33, 461], "poros": 11, "void": 11, "bulk": 11, "discuss": 11, "issu": 11, "domain": [11, 31, 571], "overlap": 11, "obtain": 12, "rel": [12, 13], "ordinari": 12, "percol": [12, 13, 34], "satur": 12, "rate": [12, 21, 59, 151, 184, 249, 282, 315, 348, 382, 415, 448, 481], "function": [12, 13, 23, 26, 645, 1709, 1758], "multiphas": [12, 13, 494, 926], "conduct": [12, 13, 24, 33], "invas": [13, 34], "occup": 13, "contibut": 14, "get": [15, 32, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 370, 403, 436, 469, 502, 531, 558, 578, 612, 627, 959, 998, 1036, 1074, 1114, 1153, 1192, 1230, 1268, 1300, 1330, 1364, 1398, 1430, 1460, 1491, 1519, 1547, 1577, 1609, 1639, 1671, 1789, 1801, 1815, 1885], "start": [15, 28], "drainag": [15, 34, 99], "simul": [15, 33, 34, 641, 1692], "scale": [16, 30, 33, 669, 833], "set": [17, 32], "attribut": [17, 32], "machineri": 17, "datatyp": 17, "i": [17, 18, 36], "enforc": 17, "can": 17, "access": 17, "dict": [17, 26], "kei": [17, 28, 51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 374, 407, 440, 473, 506, 535, 562, 582, 614, 629, 965, 1004, 1042, 1080, 1120, 1159, 1198, 1236, 1274, 1304, 1336, 1370, 1404, 1434, 1466, 1495, 1523, 1551, 1583, 1613, 1645, 1675, 1791, 1803, 1817, 1887], "namespac": 17, "clean": 17, "collect": [17, 30, 641, 645, 669, 670, 679, 1692, 1709], "also": 17, "type": 17, "ar": [17, 28], "attach": 17, "befor": 17, "init": 17, "The": [18, 28, 29, 31, 32, 37, 553], "workspac": [18, 1879], "project": [18, 1835], "usag": 18, "singleton": 18, "One": 18, "per": 18, "manag": 19, "cluster": 19, "illustr": 19, "problem": 19, "fix": 19, "avail": 20, "matrix": [20, 21, 29, 1692], "solver": [20, 1692], "steadi": [21, 1692], "state": [21, 1692], "valu": [21, 28, 32, 72, 98, 130, 163, 196, 228, 261, 294, 327, 361, 394, 427, 460, 492, 524, 551, 570, 598, 619, 634, 982, 1021, 1059, 1097, 1137, 1176, 1215, 1253, 1291, 1320, 1353, 1387, 1421, 1450, 1483, 1511, 1539, 1567, 1600, 1629, 1662, 1691, 1796, 1810, 1822, 1897], "boundari": [21, 33], "condit": [21, 33], "system": 21, "equat": 21, "spars": [21, 28, 29], "matric": [21, 28], "explan": 22, "unit": 22, "pressur": 22, "v": [22, 24, 28], "gaug": 22, "convers": 22, "challeng": 22, "reactiv": 23, "sourc": 23, "term": 23, "how": [23, 36], "work": 23, "singl": [24, 33], "conduit": [24, 28, 690], "shape": [24, 31, 762], "built": [24, 32], "deriv": 24, "arbitrari": 24, "hydraul": [24, 719], "element": 24, "numer": [26, 28], "python": [26, 36], "primer": 26, "list": 26, "flexibl": 26, "slow": 26, "numpi": [26, 28], "ndarrai": 26, "optim": 26, "vector": [26, 28, 806], "method": [26, 29, 31, 33], "versu": 26, "dictionari": [26, 28], "hold": 26, "thing": 26, "togeth": 26, "subclass": 26, "quick": 27, "cubictempl": [27, 1022], "other": [27, 29], "lattic": 27, "delaunai": [27, 1060], "voronoi": [27, 1254], "tessel": 27, "storag": 28, "topologi": [28, 1709], "spreadsheet": 28, "analogi": 28, "rule": 28, "maintain": 28, "integr": [28, 641, 642], "all": 28, "convert": 28, "arrai": 28, "must": 28, "With": 28, "ani": 28, "scalar": 28, "expand": 28, "full": [28, 31], "length": [28, 30, 690, 773], "nest": 28, "name": 28, "allow": 28, "boolean": [28, 31], "treat": 28, "label": [28, 31, 52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 375, 408, 441, 474, 507, 536, 583, 601, 966, 1005, 1043, 1081, 1121, 1160, 1199, 1237, 1275, 1305, 1337, 1371, 1405, 1435, 1467, 1496, 1524, 1552, 1584, 1614, 1646, 1676], "lead": 28, "underscor": 28, "hidden": 28, "param": 28, "prefix": 28, "repres": 28, "adjac": [28, 29], "dens": 28, "represent": 29, "queri": 29, "manipul": [29, 1709], "coo": 29, "incid": 29, "neighor": 29, "neighbor": 29, "connect": 29, "remov": [29, 32, 1832, 1844, 1857, 1874], "ad": [29, 30, 32], "assign": [30, 32, 33], "manual": [30, 33, 34], "from": 30, "comput": 30, "surfac": [30, 751, 801], "area": [30, 734, 751, 767, 801], "librari": 30, "predefin": [30, 31], "custom": [30, 31, 32], "overwrit": 30, "them": 30, "Their": 30, "argument": [30, 31], "introduct": 30, "depend": 30, "handler": 30, "mode": 31, "mask": 31, "set_label": [31, 62, 92, 123, 154, 187, 221, 252, 285, 318, 351, 385, 418, 451, 484, 517, 545, 592, 605, 976, 1015, 1053, 1091, 1131, 1170, 1209, 1247, 1285, 1314, 1347, 1381, 1415, 1444, 1477, 1505, 1533, 1561, 1594, 1623, 1656, 1685], "sytax": 31, "read": 31, "write": [31, 32], "subdomain": 31, "chang": 31, "locat": 31, "mix": 31, "mani": 31, "differ": [31, 819, 1865], "part": 32, "direct": 32, "constant": [32, 818], "water": [32, 685, 1664], "specif": 32, "your": 32, "own": 32, "common": 32, "fluid": 32, "2": 32, "speci": [32, 1512], "mixtur": [32, 874, 1451], "pure": 32, "ga": [32, 682], "liquid": [32, 683], "composit": 32, "explor": 32, "featur": 32, "info": 32, "compon": 32, "mole": 32, "fraction": [32, 820], "get_comp_v": [32, 1331, 1365, 1399, 1461, 1578, 1640], "check_mixture_health": [32, 1325, 1359, 1393, 1455, 1572, 1634], "retriev": 32, "wildcard": 32, "syntax": 32, "viscos": [33, 897], "basic": [33, 687], "algorithm": [33, 34, 38, 73], "rigor": 33, "implement": 34, "draing": 34, "process": 34, "invasionpercol": [34, 197], "option": 35, "spyder": 35, "interact": 35, "plot": 35, "jupyt": 35, "notebook": 35, "paraview": 35, "framework": 36, "what": 36, "star": 36, "To": 36, "cite": 36, "citat": 36, "instal": 37, "dev": 37, "version": 37, "easi": 37, "wai": 37, "hard": 37, "correct": 37, "where": 37, "": 37, "my": 37, "conda": 37, "prompt": 37, "window": 37, "mac": 37, "linux": 37, "advectiondiffus": 39, "clear": [40, 74, 101, 132, 165, 199, 230, 263, 296, 329, 363, 396, 429, 462, 498, 526, 555, 574, 609, 621, 948, 987, 1025, 1063, 1101, 1142, 1181, 1219, 1257, 1296, 1326, 1360, 1394, 1426, 1456, 1487, 1515, 1543, 1573, 1605, 1635, 1667, 1786, 1798, 1812, 1825, 1837, 1850, 1863, 1880], "clear_bc": [41, 75, 102, 133, 166, 200, 231, 264, 297, 330, 364, 397, 430, 463, 527], "clear_rate_bc": [42, 134, 167, 232, 265, 298, 331, 365, 398, 431, 464], "clear_value_bc": [43, 135, 168, 233, 266, 299, 332, 366, 399, 432, 465], "copi": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 367, 400, 433, 466, 499, 528, 556, 575, 610, 622, 949, 988, 1026, 1064, 1102, 1143, 1182, 1220, 1258, 1297, 1327, 1361, 1395, 1427, 1457, 1488, 1516, 1544, 1574, 1606, 1636, 1668, 1787, 1799, 1813, 1826, 1838, 1851, 1864, 1882], "filter_by_label": [45, 77, 104, 137, 170, 202, 235, 268, 301, 334, 368, 401, 434, 467, 500, 529, 576, 600, 952, 991, 1029, 1067, 1105, 1146, 1185, 1223, 1261, 1298, 1328, 1362, 1396, 1428, 1458, 1489, 1517, 1545, 1575, 1607, 1637, 1669], "fromkei": [46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 369, 402, 435, 468, 501, 530, 557, 577, 611, 626, 958, 997, 1035, 1073, 1113, 1152, 1191, 1229, 1267, 1299, 1329, 1363, 1397, 1429, 1459, 1490, 1518, 1546, 1576, 1608, 1638, 1670, 1788, 1800, 1814, 1884], "get_conduit_data": [48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 371, 404, 437, 470, 503, 532, 559, 579, 961, 1000, 1038, 1076, 1116, 1155, 1194, 1232, 1270, 1301, 1332, 1366, 1400, 1431, 1462, 1492, 1520, 1548, 1579, 1610, 1641, 1672], "interpolate_data": [49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 372, 405, 438, 471, 504, 533, 560, 580, 963, 1002, 1040, 1078, 1118, 1157, 1196, 1234, 1272, 1302, 1334, 1368, 1402, 1432, 1464, 1493, 1521, 1549, 1581, 1611, 1643, 1673], "item": [50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 373, 406, 439, 472, 505, 534, 561, 581, 613, 628, 964, 1003, 1041, 1079, 1119, 1158, 1197, 1235, 1273, 1303, 1335, 1369, 1403, 1433, 1465, 1494, 1522, 1550, 1582, 1612, 1644, 1674, 1790, 1802, 1816, 1886], "num_por": [53, 85, 112, 145, 178, 210, 243, 276, 309, 342, 376, 409, 442, 475, 508, 537, 584, 602, 968, 1007, 1045, 1083, 1123, 1162, 1201, 1239, 1277, 1306, 1338, 1372, 1406, 1436, 1468, 1497, 1525, 1553, 1585, 1615, 1647, 1677], "num_throat": [54, 86, 113, 146, 179, 211, 244, 277, 310, 343, 377, 410, 443, 476, 509, 538, 585, 603, 969, 1008, 1046, 1084, 1124, 1163, 1202, 1240, 1278, 1307, 1339, 1373, 1407, 1437, 1469, 1498, 1526, 1554, 1586, 1616, 1648, 1678], "pop": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 378, 411, 444, 477, 510, 539, 563, 586, 615, 630, 970, 1009, 1047, 1085, 1125, 1164, 1203, 1241, 1279, 1308, 1340, 1374, 1408, 1438, 1470, 1499, 1527, 1555, 1587, 1617, 1649, 1679, 1792, 1804, 1818, 1831, 1843, 1856, 1873, 1891], "popitem": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 379, 412, 445, 478, 511, 540, 564, 587, 616, 631, 971, 1010, 1048, 1086, 1126, 1165, 1204, 1242, 1280, 1309, 1341, 1375, 1409, 1439, 1471, 1500, 1528, 1556, 1588, 1618, 1650, 1680, 1793, 1805, 1819, 1892], "prop": [58, 90, 118, 150, 183, 216, 248, 281, 314, 347, 381, 414, 447, 480, 513, 542, 565, 589, 973, 1012, 1050, 1088, 1128, 1167, 1206, 1244, 1282, 1311, 1343, 1377, 1411, 1441, 1473, 1502, 1530, 1558, 1590, 1620, 1652, 1682], "run": [60, 120, 152, 185, 218, 250, 283, 316, 349, 383, 416, 449, 482, 543], "set_bc": [61, 91, 121, 153, 186, 219, 251, 284, 317, 350, 384, 417, 450, 483, 544], "set_outflow_bc": [63, 352], "set_rate_bc": [64, 155, 188, 253, 286, 319, 353, 386, 419, 452, 485], "set_sourc": [65, 156, 189, 254, 287, 320, 354, 387, 420, 453], "set_value_bc": [66, 157, 190, 255, 288, 321, 355, 388, 421, 454, 486], "setdefault": [67, 93, 125, 158, 191, 223, 256, 289, 322, 356, 389, 422, 455, 487, 519, 546, 566, 593, 617, 632, 977, 1016, 1054, 1092, 1132, 1171, 1210, 1248, 1286, 1315, 1348, 1382, 1416, 1445, 1478, 1506, 1534, 1562, 1595, 1624, 1657, 1686, 1794, 1806, 1820, 1895], "to_indic": [69, 95, 127, 160, 193, 225, 258, 291, 324, 358, 391, 424, 457, 489, 521, 548, 567, 595, 979, 1018, 1056, 1094, 1134, 1173, 1212, 1250, 1288, 1317, 1350, 1384, 1418, 1447, 1480, 1508, 1536, 1564, 1597, 1626, 1659, 1688], "to_mask": [70, 96, 128, 161, 194, 226, 259, 292, 325, 359, 392, 425, 458, 490, 522, 549, 568, 596, 980, 1019, 1057, 1095, 1135, 1174, 1213, 1251, 1289, 1318, 1351, 1385, 1419, 1448, 1481, 1509, 1537, 1565, 1598, 1627, 1660, 1689], "updat": [71, 97, 129, 162, 195, 227, 260, 293, 326, 360, 393, 426, 459, 491, 523, 550, 569, 597, 618, 633, 981, 1020, 1058, 1096, 1136, 1175, 1214, 1252, 1290, 1319, 1352, 1386, 1420, 1449, 1482, 1510, 1538, 1566, 1599, 1628, 1661, 1690, 1795, 1809, 1821, 1878, 1896], "apply_trap": [100, 198], "pc_curv": [114, 212], "reset": [119, 217], "set_inlet_bc": [122, 220], "set_outlet_bc": [124, 222], "fickiandiffus": 131, "fourierconduct": 164, "ohmicconduct": 229, "reactivetransport": 262, "stokesflow": 295, "transientadvectiondiffus": 328, "transientfickiandiffus": 362, "transientfourierconduct": 395, "transientreactivetransport": 428, "contrib": 493, "add_model": [495, 572, 636, 946, 985, 1023, 1061, 1099, 1140, 1179, 1217, 1255, 1294, 1323, 1357, 1391, 1424, 1453, 1485, 1513, 1541, 1570, 1603, 1632, 1665], "add_model_collect": [496, 573, 637, 947, 986, 1024, 1062, 1100, 1141, 1180, 1218, 1256, 1295, 1324, 1358, 1392, 1425, 1454, 1486, 1514, 1542, 1571, 1604, 1633, 1666], "add_phas": 497, "regenerate_model": [514, 590, 638, 974, 1013, 1051, 1089, 1129, 1168, 1207, 1245, 1283, 1312, 1344, 1378, 1412, 1442, 1474, 1503, 1531, 1559, 1591, 1621, 1653, 1683], "run_model": [515, 591, 639, 975, 1014, 1052, 1090, 1130, 1169, 1208, 1246, 1284, 1313, 1346, 1380, 1414, 1443, 1476, 1504, 1532, 1560, 1593, 1622, 1655, 1684], "set_binary_partition_coef": 516, "set_occup": 518, "transientmultiphys": 525, "multiphase_diffus": 552, "core": 553, "main": 553, "base": 553, "base2": 554, "labelmixin": 599, "modelwrapp": 607, "__call__": [608, 1760], "modelsdict": 620, "dependency_graph": 623, "dependency_list": 624, "dependency_map": 625, "modelsmixin2": 635, "parsermixin": 640, "od": 641, "scipyrk45": 643, "io": 645, "export": 645, "network_from_csv": 646, "network_from_jsongraph": 647, "network_from_marock": 648, "network_from_networkx": 649, "network_from_pergeo": 650, "network_from_porespi": 651, "network_from_statoil": 652, "network_to_comsol": 653, "network_to_csv": 654, "network_to_jsongraph": 655, "network_to_networkx": 656, "network_to_panda": 657, "network_to_pergeo": 658, "network_to_salom": 659, "network_to_stl": 660, "print_hdf5": 661, "project_to_csv": 662, "project_to_dict": 663, "project_to_hdf5": 664, "project_to_panda": 665, "project_to_paraview": 666, "project_to_vtk": 667, "project_to_xdmf": 668, "circles_and_rectangl": [672, 691, 705, 720, 774], "cones_and_cylind": [673, 692, 706, 721, 775], "cubes_and_cuboid": [674, 693, 707, 722, 776], "pyramids_and_cuboid": [675, 700, 715, 730, 783], "spheres_and_cylind": [676, 701, 716, 731, 772, 784], "squares_and_rectangl": [677, 702, 717, 732, 785], "trapezoids_and_rectangl": [678, 703, 718, 733, 786], "air": [681, 1293], "standard": 688, "conduit_length": 690, "hybrid_cones_and_cylind": [694, 708, 723, 777], "hybrid_pyramids_and_cuboid": [695, 709, 724, 778], "hybrid_trapezoids_and_rectangl": [696, 710, 725, 779], "intersecting_con": [697, 711, 726, 780], "intersecting_pyramid": [698, 712, 727, 781], "intersecting_trapezoid": [699, 713, 728, 782], "diffusive_size_factor": 704, "ncylinders_in_seri": [714, 729], "hydraulic_size_factor": 719, "pore_cross_sectional_area": 734, "cross": [734, 767], "section": [734, 767], "circl": [735, 752, 757], "cone": 736, "cube": [737, 753, 758], "sphere": [738, 754, 760], "squar": [739, 755, 761], "pore_se": 740, "spatially_correl": 742, "pore_s": 743, "equivalent_diamet": [744, 795], "from_neighbor_throat": [745, 822], "generic_distribut": [746, 797, 823], "largest_spher": 747, "normal": [748, 798, 828, 829], "weibul": [750, 800, 835], "pore_surface_area": 751, "pore_volum": 756, "throat_capillary_shape_factor": 762, "capillari": 762, "jenkins_rao": 763, "mason_morrow": 764, "throat_centroid": 765, "centroid": 765, "pore_coord": 766, "throat_cross_sectional_area": 767, "cuboid": [768, 788, 802, 809], "cylind": [769, 789, 803, 810], "rectangl": [770, 790, 805, 814], "throat_endpoint": 771, "throat_length": 773, "throat_perimet": 787, "perimet": 787, "throat_se": 791, "from_neighbor_por": [792, 796, 821], "throat_siz": 794, "throat_surface_area": 801, "extrus": [804, 811], "throat_vector": 806, "pore_to_por": 807, "throat_volum": 808, "len": 812, "pendular_r": 813, "misc": [815, 871], "miscellan": 815, "blank": 816, "clip": 817, "generic_funct": 824, "invert": 825, "linear": [826, 934], "match_histogram": 827, "polynomi": 830, "product": 831, "summat": 834, "bidirectional_throat": 837, "cluster_numb": 838, "cluster_s": 839, "coordination_numb": 840, "count_coincident_por": 841, "distance_to_furthest_neighbor": 842, "distance_to_nearest_neighbor": 843, "distance_to_nearest_por": 844, "duplicate_throat": 845, "find_coincident_por": 846, "gabriel_edg": 847, "headless_throat": 848, "isolated_por": 849, "looped_throat": 850, "pore_to_pore_dist": 851, "reversed_throat": 852, "chemicals_wrapp": 854, "critical_prop": 855, "densiti": 856, "ideal_ga": 857, "liquid_mixture_costald": 858, "liquid_pure_costald": 859, "mass_to_molar": 860, "water_correl": [861, 885, 892, 896, 903], "gas_mixture_c": 863, "gas_mixture_fesg": 864, "liquid_mixture_tc": 865, "heat_capac": 866, "gas_mixture_yweight": 867, "gas_pure_trc": 868, "liquid_mixture_xweight": [869, 901], "liquid_pure_rp": 870, "mix_and_match": 872, "mole_to_mass_fract": [873, 878], "from_compon": 875, "mixing_rul": 876, "mole_summ": 877, "salin": 879, "partition_coeffici": 880, "gaseous_species_in_wat": 881, "surface_tens": 882, "liquid_mixture_wsd": 883, "liquid_pure_bb": 884, "thermal_conduct": [886, 940], "gas_mixture_whz": 887, "gas_pure_gismr": 888, "liquid_mixture_dippr9h": 889, "liquid_pure_gismr": 890, "liquid_pure_sr": 891, "vapor_pressur": 893, "liquid_pure_antoin": 894, "liquid_pure_lk": 895, "gas_mixture_hz": 898, "gas_pure_gesmr": 899, "gas_pure_st": 900, "liquid_pure_l": 902, "ad_dif_conduct": 905, "ad_dif": 906, "capillary_pressur": 907, "purcel": [908, 924], "washburn": 909, "diffusive_conduct": 910, "generic_diffus": 911, "mixed_diffus": 912, "ordinary_diffus": 913, "taylor_aris_diffus": 914, "electrical_conduct": 915, "generic_electr": 916, "series_resistor": [917, 942], "hydraulic_conduct": 918, "generic_hydraul": 919, "hagen_poiseuil": 920, "valvatne_blunt": 921, "meniscu": 922, "general_toroid": 923, "sinusoid": 925, "conduit_conduct": 927, "late_fil": 928, "source_term": 929, "butler_volmer_conc": 930, "butler_volmer_voltag": 931, "exponenti": 932, "general_symbol": 933, "logarithm": 935, "natural_exponenti": 936, "natural_logarithm": 937, "power_law": 938, "standard_kinet": 939, "generic_therm": 941, "bodycenteredcub": 944, "add_boundary_por": [945, 984, 1139, 1178, 1710], "create_adjacency_matrix": [950, 989, 1027, 1065, 1103, 1144, 1183, 1221, 1259], "create_incidence_matrix": [951, 990, 1028, 1066, 1104, 1145, 1184, 1222, 1260], "find_connected_por": [953, 992, 1030, 1068, 1106, 1147, 1186, 1224, 1262], "find_connecting_throat": [954, 993, 1031, 1069, 1107, 1148, 1187, 1225, 1263], "find_nearby_por": [955, 994, 1032, 1070, 1108, 1149, 1188, 1226, 1264], "find_neighbor_por": [956, 995, 1033, 1071, 1109, 1150, 1189, 1227, 1265], "find_neighbor_throat": [957, 996, 1034, 1072, 1110, 1151, 1190, 1228, 1266], "get_adjacency_matrix": [960, 999, 1037, 1075, 1115, 1154, 1193, 1231, 1269], "get_incidence_matrix": [962, 1001, 1039, 1077, 1117, 1156, 1195, 1233, 1271], "num_neighbor": [967, 1006, 1044, 1082, 1122, 1161, 1200, 1238, 1276], "delaunayvoronoidu": 1098, "find_pore_hul": 1111, "find_throat_facet": 1112, "demo": 1138, "facecenteredcub": 1177, "binaryga": 1321, "add_comp": [1322, 1356, 1390, 1452, 1569, 1631], "get_mix_v": [1333, 1367, 1401, 1463, 1580, 1642], "remove_comp": [1345, 1379, 1413, 1475, 1592, 1654], "y": [1354, 1388, 1601], "gasmixtur": 1355, "liquidmixtur": 1389, "x": [1422, 1663], "standardga": 1540, "standardgasmixtur": 1568, "standardliquid": 1602, "standardliquidmixtur": 1630, "basesolv": 1693, "directsolv": 1695, "iterativesolv": 1697, "petsclinearsolv": 1699, "pardisospsolv": 1701, "pyamgrugestubensolv": 1703, "scipycg": 1705, "scipyspsolv": 1707, "topotool": 1709, "add_reservoir_por": 1711, "bond_percol": 1712, "clone_por": 1713, "connect_por": 1714, "conns_to_am": 1715, "dimension": 1716, "drop_sit": 1717, "extend": [1718, 1828, 1840, 1853], "filter_pores_by_z": 1719, "find_clust": 1720, "find_connected_sit": 1721, "find_connecting_bond": 1722, "find_interface_throat": 1723, "find_isolated_clust": 1724, "find_neighbor_bond": 1725, "find_neighbor_sit": 1726, "find_path": 1727, "find_surface_por": 1728, "generate_base_point": 1729, "get_domain_area": 1730, "get_domain_length": 1731, "get_shap": 1732, "get_spac": 1733, "hull_centroid": 1734, "is_fully_connect": 1735, "iscoplanar": 1736, "isoutsid": 1737, "ispercol": 1738, "issymmetr": 1739, "istriangular": 1740, "istril": 1741, "istriu": 1742, "label_fac": 1743, "merge_network": 1744, "merge_por": 1745, "reduce_coordin": 1746, "reflect_base_point": 1747, "rotate_coord": 1748, "shear_coord": 1749, "site_percol": 1750, "stitch": 1751, "template_cylinder_annulu": 1752, "template_sphere_shel": 1753, "tri_to_am": 1754, "trim": 1755, "trim_disconnected_clust": 1756, "vor_to_am": 1757, "util": 1758, "helper": 1758, "docor": 1759, "dedent": [1761, 1762], "delete_kwarg": 1763, "delete_kwargs_": 1764, "delete_param": 1765, "delete_params_": 1766, "delete_typ": 1767, "delete_types_": 1768, "get_docstr": 1769, "get_extended_summari": 1770, "get_extended_summaryf": 1771, "get_full_descript": 1772, "get_full_descriptionf": 1773, "get_sect": 1774, "get_sectionsf": 1775, "get_summari": 1776, "get_summaryf": 1777, "keep_param": 1778, "keep_params_": 1779, "keep_typ": 1780, "keep_types_": 1781, "save_docstr": 1782, "with_ind": [1783, 1784], "healthdict": 1785, "nesteddict": 1797, "to_dict": 1807, "unravel": 1808, "printabledict": 1811, "printablelist": 1823, "append": [1824, 1836, 1849], "count": [1827, 1839, 1852], "index": [1829, 1841, 1854], "insert": [1830, 1842, 1855], "revers": [1833, 1845, 1858], "sort": [1834, 1846, 1859], "settingsattr": 1847, "typedlist": 1848, "typedmixin": 1860, "typedset": 1861, "difference_upd": 1866, "discard": 1867, "intersect": 1868, "intersection_upd": 1869, "isdisjoint": 1870, "issubset": 1871, "issuperset": 1872, "symmetric_differ": 1875, "symmetric_difference_upd": 1876, "union": 1877, "close_project": 1881, "copy_project": 1883, "load_project": 1888, "load_workspac": 1889, "new_project": 1890, "save_project": 1893, "save_workspac": 1894, "check_data_health": 1898, "check_network_health": 1899, "dict_to_struct": 1900, "flat_list": 1901, "get_mixture_model_arg": 1902, "get_printable_label": 1903, "get_printable_prop": 1904, "ignore_warn": 1905, "is_symmetr": 1906, "is_transi": 1907, "is_valid_propnam": 1908, "methods_to_t": 1909, "models_to_t": 1910, "sanitize_dict": 1911, "struct_to_dict": 1912, "draw_conduit": 1914, "generate_voxel_imag": 1915, "plot_connect": 1916, "plot_coordin": 1917, "plot_networkx": 1918, "plot_notebook": 1919, "plot_tutori": 1920, "plot_vispi": 1921, "set_mpl_styl": 1922, "modul": 1923}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"props": [[183, "props"], [150, "props"], [216, "props"], [248, "props"], [118, "props"], [90, "props"], [1652, "props"], [1620, "props"], [1590, "props"], [1682, "props"], [1558, "props"], [1530, "props"], [1473, "props"], [1502, "props"], [1411, "props"], [1441, "props"], [1311, "props"], [1343, "props"], [1377, "props"], [1244, "props"], [1282, "props"], [1206, "props"], [1167, "props"], [1128, "props"], [1050, "props"], [1088, "props"], [1012, "props"], [973, "props"], [565, "props"], [589, "props"], [513, "props"], [542, "props"], [447, "props"], [414, "props"], [480, "props"], [381, "props"], [347, "props"], [314, "props"], [281, "props"], [58, "props"]], "items": [[142, "items"], [175, "items"], [207, "items"], [240, "items"], [273, "items"], [109, "items"], [82, "items"], [1802, "items"], [1816, "items"], [1886, "items"], [1790, "items"], [1644, "items"], [1612, "items"], [1674, "items"], [1522, "items"], [1582, "items"], [1550, "items"], [1494, "items"], [1465, "items"], [1403, "items"], [1433, "items"], [1369, "items"], [1335, "items"], [1273, "items"], [1303, "items"], [1235, "items"], [1197, "items"], [1119, "items"], [1158, "items"], [1079, "items"], [1041, "items"], [1003, "items"], [964, "items"], [628, "items"], [613, "items"], [581, "items"], [561, "items"], [534, "items"], [505, "items"], [472, "items"], [439, "items"], [406, "items"], [373, "items"], [339, "items"], [306, "items"], [50, "items"]], "setdefault": [[191, "setdefault"], [158, "setdefault"], [256, "setdefault"], [223, "setdefault"], [93, "setdefault"], [125, "setdefault"], [1794, "setdefault"], [1806, "setdefault"], [1820, "setdefault"], [1895, "setdefault"], [1624, "setdefault"], [1595, "setdefault"], [1686, "setdefault"], [1657, "setdefault"], [1534, "setdefault"], [1562, "setdefault"], [1478, "setdefault"], [1506, "setdefault"], [1445, "setdefault"], [1416, "setdefault"], [1382, "setdefault"], [1348, "setdefault"], [1315, "setdefault"], [1286, "setdefault"], [1248, "setdefault"], [1210, "setdefault"], [1132, "setdefault"], [1171, "setdefault"], [1092, "setdefault"], [1054, "setdefault"], [977, "setdefault"], [1016, "setdefault"], [632, "setdefault"], [593, "setdefault"], [617, "setdefault"], [566, "setdefault"], [519, "setdefault"], [487, "setdefault"], [546, "setdefault"], [422, "setdefault"], [455, "setdefault"], [389, "setdefault"], [356, "setdefault"], [289, "setdefault"], [322, "setdefault"], [67, "setdefault"]], "values": [[196, "values"], [163, "values"], [228, "values"], [261, "values"], [72, "values"], [130, "values"], [98, "values"], [1796, "values"], [1822, "values"], [1810, "values"], [1897, "values"], [1600, "values"], [1629, "values"], [1691, "values"], [1662, "values"], [1539, "values"], [1567, "values"], [1450, "values"], [1483, "values"], [1511, "values"], [1421, "values"], [1387, "values"], [1353, "values"], [1320, "values"], [1291, "values"], [1253, "values"], [1176, "values"], [1215, "values"], [1137, "values"], [1059, "values"], [1097, "values"], [1021, "values"], [982, "values"], [634, "values"], [619, "values"], [570, "values"], [598, "values"], [492, "values"], [551, "values"], [524, "values"], [427, "values"], [460, "values"], [394, "values"], [361, "values"], [294, "values"], [327, "values"]], "set_source": [[189, "set-source"], [156, "set-source"], [254, "set-source"], [420, "set-source"], [453, "set-source"], [354, "set-source"], [387, "set-source"], [287, "set-source"], [320, "set-source"], [65, "set-source"]], "interpolate_data": [[206, "interpolate-data"], [141, "interpolate-data"], [174, "interpolate-data"], [239, "interpolate-data"], [272, "interpolate-data"], [108, "interpolate-data"], [81, "interpolate-data"], [1611, "interpolate-data"], [1643, "interpolate-data"], [1673, "interpolate-data"], [1521, "interpolate-data"], [1549, "interpolate-data"], [1581, "interpolate-data"], [1464, "interpolate-data"], [1493, "interpolate-data"], [1402, "interpolate-data"], [1432, "interpolate-data"], [1368, "interpolate-data"], [1334, "interpolate-data"], [1272, "interpolate-data"], [1302, "interpolate-data"], [1234, "interpolate-data"], [1196, "interpolate-data"], [1118, "interpolate-data"], [1157, "interpolate-data"], [1078, "interpolate-data"], [1040, "interpolate-data"], [1002, "interpolate-data"], [963, "interpolate-data"], [580, "interpolate-data"], [560, "interpolate-data"], [533, "interpolate-data"], [504, "interpolate-data"], [471, "interpolate-data"], [438, "interpolate-data"], [405, "interpolate-data"], [372, "interpolate-data"], [305, "interpolate-data"], [338, "interpolate-data"], [49, "interpolate-data"]], "set_label": [[154, "set-label"], [187, "set-label"], [252, "set-label"], [221, "set-label"], [123, "set-label"], [92, "set-label"], [1594, "set-label"], [1623, "set-label"], [1685, "set-label"], [1656, "set-label"], [1561, "set-label"], [1533, "set-label"], [1505, "set-label"], [1477, "set-label"], [1444, "set-label"], [1381, "set-label"], [1415, "set-label"], [1347, "set-label"], [1314, "set-label"], [1247, "set-label"], [1285, "set-label"], [1209, "set-label"], [1131, "set-label"], [1170, "set-label"], [1053, "set-label"], [1091, "set-label"], [1015, "set-label"], [976, "set-label"], [605, "set-label"], [592, "set-label"], [517, "set-label"], [484, "set-label"], [545, "set-label"], [418, "set-label"], [451, "set-label"], [351, "set-label"], [385, "set-label"], [285, "set-label"], [318, "set-label"], [62, "set-label"]], "num_throats": [[146, "num-throats"], [179, "num-throats"], [211, "num-throats"], [244, "num-throats"], [86, "num-throats"], [113, "num-throats"], [1616, "num-throats"], [1648, "num-throats"], [1678, "num-throats"], [1586, "num-throats"], [1526, "num-throats"], [1554, "num-throats"], [1469, "num-throats"], [1498, "num-throats"], [1407, "num-throats"], [1437, "num-throats"], [1373, "num-throats"], [1339, "num-throats"], [1307, "num-throats"], [1278, "num-throats"], [1202, "num-throats"], [1240, "num-throats"], [1124, "num-throats"], [1163, "num-throats"], [1046, "num-throats"], [1084, "num-throats"], [1008, "num-throats"], [969, "num-throats"], [603, "num-throats"], [585, "num-throats"], [538, "num-throats"], [509, "num-throats"], [443, "num-throats"], [476, "num-throats"], [410, "num-throats"], [377, "num-throats"], [343, "num-throats"], [310, "num-throats"], [277, "num-throats"], [54, "num-throats"]], "set_rate_BC": [[188, "set-rate-bc"], [155, "set-rate-bc"], [253, "set-rate-bc"], [485, "set-rate-bc"], [419, "set-rate-bc"], [452, "set-rate-bc"], [353, "set-rate-bc"], [386, "set-rate-bc"], [286, "set-rate-bc"], [319, "set-rate-bc"], [64, "set-rate-bc"]], "to_mask": [[194, "to-mask"], [161, "to-mask"], [259, "to-mask"], [226, "to-mask"], [96, "to-mask"], [128, "to-mask"], [70, "to-mask"], [1598, "to-mask"], [1627, "to-mask"], [1660, "to-mask"], [1689, "to-mask"], [1565, "to-mask"], [1537, "to-mask"], [1481, "to-mask"], [1509, "to-mask"], [1385, "to-mask"], [1448, "to-mask"], [1419, "to-mask"], [1351, "to-mask"], [1318, "to-mask"], [1251, "to-mask"], [1289, "to-mask"], [1174, "to-mask"], [1213, "to-mask"], [1135, "to-mask"], [1095, "to-mask"], [1057, "to-mask"], [1019, "to-mask"], [980, "to-mask"], [596, "to-mask"], [568, "to-mask"], [490, "to-mask"], [549, "to-mask"], [522, "to-mask"], [425, "to-mask"], [458, "to-mask"], [359, "to-mask"], [392, "to-mask"], [325, "to-mask"], [292, "to-mask"]], "pop": [[180, "pop"], [147, "pop"], [245, "pop"], [213, "pop"], [115, "pop"], [87, "pop"], [1804, "pop"], [1831, "pop"], [1818, "pop"], [1843, "pop"], [1856, "pop"], [1891, "pop"], [1873, "pop"], [1792, "pop"], [1617, "pop"], [1649, "pop"], [1587, "pop"], [1679, "pop"], [1555, "pop"], [1527, "pop"], [1470, "pop"], [1499, "pop"], [1408, "pop"], [1438, "pop"], [1374, "pop"], [1340, "pop"], [1279, "pop"], [1308, "pop"], [1241, "pop"], [1203, "pop"], [1125, "pop"], [1164, "pop"], [1047, "pop"], [1085, "pop"], [1009, "pop"], [970, "pop"], [630, "pop"], [586, "pop"], [563, "pop"], [615, "pop"], [539, "pop"], [510, "pop"], [444, "pop"], [477, "pop"], [411, "pop"], [378, "pop"], [311, "pop"], [344, "pop"], [278, "pop"], [55, "pop"]], "update": [[195, "update"], [162, "update"], [260, "update"], [227, "update"], [129, "update"], [97, "update"], [71, "update"], [1821, "update"], [1795, "update"], [1809, "update"], [1878, "update"], [1896, "update"], [1599, "update"], [1628, "update"], [1661, "update"], [1690, "update"], [1566, "update"], [1538, "update"], [1449, "update"], [1510, "update"], [1482, "update"], [1420, "update"], [1386, "update"], [1352, "update"], [1319, "update"], [1290, "update"], [1252, "update"], [1175, "update"], [1214, "update"], [1136, "update"], [1058, "update"], [1096, "update"], [981, "update"], [1020, "update"], [633, "update"], [597, "update"], [569, "update"], [618, "update"], [491, "update"], [523, "update"], [550, "update"], [459, "update"], [426, "update"], [360, "update"], [393, "update"], [293, "update"], [326, "update"]], "InvasionPercolation": [[197, "invasionpercolation"]], "FourierConduction": [[164, "fourierconduction"]], "clear_BCs": [[200, "clear-bcs"], [166, "clear-bcs"], [231, "clear-bcs"], [264, "clear-bcs"], [102, "clear-bcs"], [75, "clear-bcs"], [133, "clear-bcs"], [527, "clear-bcs"], [463, "clear-bcs"], [430, "clear-bcs"], [364, "clear-bcs"], [397, "clear-bcs"], [330, "clear-bcs"], [297, "clear-bcs"], [41, "clear-bcs"]], "run": [[185, "run"], [152, "run"], [250, "run"], [218, "run"], [120, "run"], [543, "run"], [416, "run"], [449, "run"], [482, "run"], [383, "run"], [349, "run"], [283, "run"], [316, "run"], [60, "run"]], "throats": [[159, "throats"], [192, "throats"], [257, "throats"], [224, "throats"], [126, "throats"], [94, "throats"], [1625, "throats"], [1596, "throats"], [1687, "throats"], [1658, "throats"], [1563, "throats"], [1535, "throats"], [1507, "throats"], [1479, "throats"], [1383, "throats"], [1446, "throats"], [1417, "throats"], [1349, "throats"], [1316, "throats"], [1249, "throats"], [1287, "throats"], [1211, "throats"], [1133, "throats"], [1172, "throats"], [1093, "throats"], [1055, "throats"], [1017, "throats"], [978, "throats"], [594, "throats"], [606, "throats"], [547, "throats"], [488, "throats"], [520, "throats"], [423, "throats"], [456, "throats"], [390, "throats"], [357, "throats"], [323, "throats"], [290, "throats"], [68, "throats"]], "get_conduit_data": [[205, "get-conduit-data"], [173, "get-conduit-data"], [140, "get-conduit-data"], [238, "get-conduit-data"], [271, "get-conduit-data"], [80, "get-conduit-data"], [107, "get-conduit-data"], [1641, "get-conduit-data"], [1610, "get-conduit-data"], [1672, "get-conduit-data"], [1520, "get-conduit-data"], [1548, "get-conduit-data"], [1579, "get-conduit-data"], [1462, "get-conduit-data"], [1492, "get-conduit-data"], [1400, "get-conduit-data"], [1431, "get-conduit-data"], [1366, "get-conduit-data"], [1332, "get-conduit-data"], [1301, "get-conduit-data"], [1270, "get-conduit-data"], [1194, "get-conduit-data"], [1232, "get-conduit-data"], [1116, "get-conduit-data"], [1155, "get-conduit-data"], [1076, "get-conduit-data"], [1038, "get-conduit-data"], [1000, "get-conduit-data"], [961, "get-conduit-data"], [579, "get-conduit-data"], [559, "get-conduit-data"], [532, "get-conduit-data"], [503, "get-conduit-data"], [470, "get-conduit-data"], [437, "get-conduit-data"], [404, "get-conduit-data"], [371, "get-conduit-data"], [337, "get-conduit-data"], [304, "get-conduit-data"], [48, "get-conduit-data"]], "num_pores": [[178, "num-pores"], [145, "num-pores"], [210, "num-pores"], [243, "num-pores"], [85, "num-pores"], [112, "num-pores"], [1615, "num-pores"], [1647, "num-pores"], [1677, "num-pores"], [1585, "num-pores"], [1553, "num-pores"], [1525, "num-pores"], [1468, "num-pores"], [1497, "num-pores"], [1406, "num-pores"], [1436, "num-pores"], [1338, "num-pores"], [1372, "num-pores"], [1277, "num-pores"], [1306, "num-pores"], [1201, "num-pores"], [1239, "num-pores"], [1162, "num-pores"], [1123, "num-pores"], [1045, "num-pores"], [1083, "num-pores"], [968, "num-pores"], [1007, "num-pores"], [584, "num-pores"], [602, "num-pores"], [537, "num-pores"], [508, "num-pores"], [442, "num-pores"], [475, "num-pores"], [376, "num-pores"], [409, "num-pores"], [342, "num-pores"], [276, "num-pores"], [309, "num-pores"], [53, "num-pores"]], "copy": [[169, "copy"], [201, "copy"], [267, "copy"], [234, "copy"], [103, "copy"], [76, "copy"], [136, "copy"], [1799, "copy"], [1826, "copy"], [1851, "copy"], [1813, "copy"], [1838, "copy"], [1864, "copy"], [1882, "copy"], [1787, "copy"], [1606, "copy"], [1636, "copy"], [1668, "copy"], [1544, "copy"], [1574, "copy"], [1488, "copy"], [1457, "copy"], [1516, "copy"], [1395, "copy"], [1427, "copy"], [1327, "copy"], [1361, "copy"], [1297, "copy"], [1258, "copy"], [1182, "copy"], [1220, "copy"], [1143, "copy"], [1102, "copy"], [1064, "copy"], [1026, "copy"], [988, "copy"], [949, "copy"], [622, "copy"], [610, "copy"], [556, "copy"], [575, "copy"], [499, "copy"], [528, "copy"], [466, "copy"], [433, "copy"], [367, "copy"], [400, "copy"], [333, "copy"], [300, "copy"], [44, "copy"]], "fromkeys": [[138, "fromkeys"], [203, "fromkeys"], [171, "fromkeys"], [236, "fromkeys"], [269, "fromkeys"], [105, "fromkeys"], [78, "fromkeys"], [1800, "fromkeys"], [1814, "fromkeys"], [1884, "fromkeys"], [1788, "fromkeys"], [1608, "fromkeys"], [1638, "fromkeys"], [1670, "fromkeys"], [1546, "fromkeys"], [1576, "fromkeys"], [1518, "fromkeys"], [1490, "fromkeys"], [1459, "fromkeys"], [1397, "fromkeys"], [1429, "fromkeys"], [1329, "fromkeys"], [1363, "fromkeys"], [1299, "fromkeys"], [1267, "fromkeys"], [1229, "fromkeys"], [1191, "fromkeys"], [1152, "fromkeys"], [1113, "fromkeys"], [1035, "fromkeys"], [1073, "fromkeys"], [997, "fromkeys"], [958, "fromkeys"], [626, "fromkeys"], [577, "fromkeys"], [557, "fromkeys"], [611, "fromkeys"], [501, "fromkeys"], [530, "fromkeys"], [435, "fromkeys"], [468, "fromkeys"], [369, "fromkeys"], [402, "fromkeys"], [335, "fromkeys"], [302, "fromkeys"], [46, "fromkeys"]], "get": [[139, "get"], [204, "get"], [172, "get"], [237, "get"], [270, "get"], [106, "get"], [79, "get"], [1815, "get"], [1801, "get"], [1885, "get"], [1789, "get"], [1609, "get"], [1639, "get"], [1671, "get"], [1547, "get"], [1519, "get"], [1577, "get"], [1460, "get"], [1491, "get"], [1430, "get"], [1398, "get"], [1330, "get"], [1364, "get"], [1268, "get"], [1300, "get"], [1192, "get"], [1230, "get"], [1114, "get"], [1153, "get"], [1074, "get"], [1036, "get"], [998, "get"], [959, "get"], [627, "get"], [578, "get"], [558, "get"], [612, "get"], [531, "get"], [502, "get"], [436, "get"], [469, "get"], [370, "get"], [403, "get"], [336, "get"], [303, "get"], [47, "get"]], "clear": [[165, "clear"], [199, "clear"], [263, "clear"], [230, "clear"], [101, "clear"], [132, "clear"], [74, "clear"], [1850, "clear"], [1812, "clear"], [1798, "clear"], [1837, "clear"], [1825, "clear"], [1863, "clear"], [1880, "clear"], [1786, "clear"], [1635, "clear"], [1605, "clear"], [1667, "clear"], [1573, "clear"], [1543, "clear"], [1456, "clear"], [1487, "clear"], [1515, "clear"], [1394, "clear"], [1426, "clear"], [1326, "clear"], [1360, "clear"], [1296, "clear"], [1257, "clear"], [1219, "clear"], [1181, "clear"], [1142, "clear"], [1063, "clear"], [1101, "clear"], [1025, "clear"], [987, "clear"], [948, "clear"], [621, "clear"], [609, "clear"], [555, "clear"], [574, "clear"], [526, "clear"], [498, "clear"], [462, "clear"], [429, "clear"], [363, "clear"], [396, "clear"], [296, "clear"], [329, "clear"], [40, "clear"]], "keys": [[143, "keys"], [176, "keys"], [241, "keys"], [274, "keys"], [208, "keys"], [110, "keys"], [83, "keys"], [1817, "keys"], [1803, "keys"], [1887, "keys"], [1791, "keys"], [1613, "keys"], [1645, "keys"], [1675, "keys"], [1551, "keys"], [1523, "keys"], [1583, "keys"], [1495, "keys"], [1466, "keys"], [1434, "keys"], [1404, "keys"], [1370, "keys"], [1336, "keys"], [1274, "keys"], [1304, "keys"], [1198, "keys"], [1236, "keys"], [1120, "keys"], [1159, "keys"], [1080, "keys"], [1042, "keys"], [1004, "keys"], [965, "keys"], [629, "keys"], [614, "keys"], [582, "keys"], [562, "keys"], [535, "keys"], [506, "keys"], [473, "keys"], [440, "keys"], [407, "keys"], [374, "keys"], [307, "keys"], [340, "keys"], [51, "keys"]], "popitem": [[148, "popitem"], [181, "popitem"], [246, "popitem"], [214, "popitem"], [116, "popitem"], [88, "popitem"], [1819, "popitem"], [1805, "popitem"], [1892, "popitem"], [1793, "popitem"], [1618, "popitem"], [1588, "popitem"], [1650, "popitem"], [1680, "popitem"], [1528, "popitem"], [1556, "popitem"], [1500, "popitem"], [1471, "popitem"], [1409, "popitem"], [1439, "popitem"], [1375, "popitem"], [1341, "popitem"], [1309, "popitem"], [1242, "popitem"], [1280, "popitem"], [1204, "popitem"], [1126, "popitem"], [1165, "popitem"], [1048, "popitem"], [1086, "popitem"], [1010, "popitem"], [971, "popitem"], [631, "popitem"], [616, "popitem"], [564, "popitem"], [587, "popitem"], [540, "popitem"], [511, "popitem"], [478, "popitem"], [445, "popitem"], [379, "popitem"], [412, "popitem"], [345, "popitem"], [279, "popitem"], [312, "popitem"], [56, "popitem"]], "labels": [[144, "labels"], [177, "labels"], [209, "labels"], [242, "labels"], [275, "labels"], [111, "labels"], [84, "labels"], [1646, "labels"], [1614, "labels"], [1676, "labels"], [1552, "labels"], [1524, "labels"], [1584, "labels"], [1496, "labels"], [1467, "labels"], [1435, "labels"], [1405, "labels"], [1371, "labels"], [1337, "labels"], [1275, "labels"], [1305, "labels"], [1237, "labels"], [1199, "labels"], [1121, "labels"], [1160, "labels"], [1081, "labels"], [1043, "labels"], [1005, "labels"], [966, "labels"], [583, "labels"], [601, "labels"], [507, "labels"], [536, "labels"], [474, "labels"], [441, "labels"], [408, "labels"], [375, "labels"], [308, "labels"], [341, "labels"], [52, "labels"]], "set_value_BC": [[190, "set-value-bc"], [157, "set-value-bc"], [255, "set-value-bc"], [486, "set-value-bc"], [421, "set-value-bc"], [454, "set-value-bc"], [355, "set-value-bc"], [388, "set-value-bc"], [288, "set-value-bc"], [321, "set-value-bc"], [66, "set-value-bc"]], "clear_value_BCs": [[168, "clear-value-bcs"], [266, "clear-value-bcs"], [233, "clear-value-bcs"], [135, "clear-value-bcs"], [432, "clear-value-bcs"], [465, "clear-value-bcs"], [366, "clear-value-bcs"], [399, "clear-value-bcs"], [332, "clear-value-bcs"], [299, "clear-value-bcs"], [43, "clear-value-bcs"]], "set_BC": [[186, "set-bc"], [153, "set-bc"], [219, "set-bc"], [251, "set-bc"], [91, "set-bc"], [121, "set-bc"], [483, "set-bc"], [544, "set-bc"], [417, "set-bc"], [450, "set-bc"], [384, "set-bc"], [350, "set-bc"], [284, "set-bc"], [317, "set-bc"], [61, "set-bc"]], "pores": [[182, "pores"], [149, "pores"], [215, "pores"], [247, "pores"], [117, "pores"], [89, "pores"], [1589, "pores"], [1651, "pores"], [1619, "pores"], [1681, "pores"], [1557, "pores"], [1529, "pores"], [1472, "pores"], [1501, "pores"], [1410, "pores"], [1440, "pores"], [1342, "pores"], [1376, "pores"], [1310, "pores"], [1281, "pores"], [1243, "pores"], [1205, "pores"], [1166, "pores"], [1127, "pores"], [1049, "pores"], [1087, "pores"], [972, "pores"], [1011, "pores"], [604, "pores"], [588, "pores"], [541, "pores"], [512, "pores"], [479, "pores"], [446, "pores"], [380, "pores"], [346, "pores"], [413, "pores"], [280, "pores"], [313, "pores"], [57, "pores"]], "apply_trapping": [[198, "apply-trapping"], [100, "apply-trapping"]], "to_indices": [[160, "to-indices"], [193, "to-indices"], [225, "to-indices"], [258, "to-indices"], [127, "to-indices"], [69, "to-indices"], [95, "to-indices"], [1597, "to-indices"], [1626, "to-indices"], [1659, "to-indices"], [1688, "to-indices"], [1564, "to-indices"], [1536, "to-indices"], [1508, "to-indices"], [1480, "to-indices"], [1418, "to-indices"], [1447, "to-indices"], [1384, "to-indices"], [1317, "to-indices"], [1350, "to-indices"], [1250, "to-indices"], [1288, "to-indices"], [1212, "to-indices"], [1173, "to-indices"], [1134, "to-indices"], [1056, "to-indices"], [1094, "to-indices"], [1018, "to-indices"], [979, "to-indices"], [567, "to-indices"], [595, "to-indices"], [548, "to-indices"], [489, "to-indices"], [521, "to-indices"], [424, "to-indices"], [457, "to-indices"], [358, "to-indices"], [391, "to-indices"], [324, "to-indices"], [291, "to-indices"]], "clear_rate_BCs": [[167, "clear-rate-bcs"], [265, "clear-rate-bcs"], [232, "clear-rate-bcs"], [134, "clear-rate-bcs"], [431, "clear-rate-bcs"], [464, "clear-rate-bcs"], [365, "clear-rate-bcs"], [398, "clear-rate-bcs"], [331, "clear-rate-bcs"], [298, "clear-rate-bcs"], [42, "clear-rate-bcs"]], "rate": [[184, "rate"], [151, "rate"], [249, "rate"], [481, "rate"], [448, "rate"], [415, "rate"], [382, "rate"], [348, "rate"], [315, "rate"], [282, "rate"], [59, "rate"]], "filter_by_label": [[170, "filter-by-label"], [202, "filter-by-label"], [268, "filter-by-label"], [235, "filter-by-label"], [77, "filter-by-label"], [137, "filter-by-label"], [104, "filter-by-label"], [1637, "filter-by-label"], [1607, "filter-by-label"], [1669, "filter-by-label"], [1545, "filter-by-label"], [1575, "filter-by-label"], [1458, "filter-by-label"], [1517, "filter-by-label"], [1489, "filter-by-label"], [1396, "filter-by-label"], [1428, "filter-by-label"], [1362, "filter-by-label"], [1328, "filter-by-label"], [1298, "filter-by-label"], [1261, "filter-by-label"], [1223, "filter-by-label"], [1185, "filter-by-label"], [1105, "filter-by-label"], [1146, "filter-by-label"], [1067, "filter-by-label"], [1029, "filter-by-label"], [991, "filter-by-label"], [952, "filter-by-label"], [576, "filter-by-label"], [600, "filter-by-label"], [500, "filter-by-label"], [529, "filter-by-label"], [434, "filter-by-label"], [467, "filter-by-label"], [368, "filter-by-label"], [401, "filter-by-label"], [301, "filter-by-label"], [334, "filter-by-label"], [45, "filter-by-label"]], "set_outlet_BC": [[222, "set-outlet-bc"], [124, "set-outlet-bc"]], "ReactiveTransport": [[262, "reactivetransport"]], "set_inlet_BC": [[220, "set-inlet-bc"], [122, "set-inlet-bc"]], "reset": [[217, "reset"], [119, "reset"]], "pc_curve": [[212, "pc-curve"], [114, "pc-curve"]], "OhmicConduction": [[229, "ohmicconduction"]], "Algorithm": [[73, "algorithm"]], "FickianDiffusion": [[131, "fickiandiffusion"]], "Drainage": [[99, "drainage"], [34, "drainage"]], "TypedList": [[1848, "typedlist"]], "remove": [[1832, "remove"], [1857, "remove"], [1844, "remove"], [1874, "remove"]], "Project": [[1835, "project"]], "add": [[1862, "add"]], "reverse": [[1845, "reverse"], [1833, "reverse"], [1858, "reverse"]], "sort": [[1846, "sort"], [1834, "sort"], [1859, "sort"]], "count": [[1827, "count"], [1839, "count"], [1852, "count"]], "append": [[1836, "append"], [1824, "append"], [1849, "append"]], "index": [[1829, "index"], [1841, "index"], [1854, "index"]], "NestedDict": [[1797, "nesteddict"]], "extend": [[1828, "extend"], [1840, "extend"], [1853, "extend"], [1718, "extend"]], "PrintableList": [[1823, "printablelist"]], "insert": [[1855, "insert"], [1830, "insert"], [1842, "insert"]], "PrintableDict": [[1811, "printabledict"]], "unravel": [[1808, "unravel"]], "TypedMixin": [[1860, "typedmixin"]], "TypedSet": [[1861, "typedset"]], "SettingsAttr": [[1847, "settingsattr"]], "to_dict": [[1807, "to-dict"]], "copy_project": [[1883, "copy-project"]], "issubset": [[1871, "issubset"]], "is_symmetric": [[1906, "is-symmetric"]], "is_transient": [[1907, "is-transient"]], "symmetric_difference_update": [[1876, "symmetric-difference-update"]], "plot_coordinates": [[1917, "plot-coordinates"]], "Module Reference": [[1923, "module-openpnm"]], "plot_connections": [[1916, "plot-connections"]], "discard": [[1867, "discard"]], "plot_notebook": [[1919, "plot-notebook"]], "visualization": [[1913, "module-openpnm.visualization"]], "get_printable_labels": [[1903, "get-printable-labels"]], "issuperset": [[1872, "issuperset"]], "get_printable_props": [[1904, "get-printable-props"]], "generate_voxel_image": [[1915, "generate-voxel-image"]], "check_network_health": [[1899, "check-network-health"]], "is_valid_propname": [[1908, "is-valid-propname"]], "plot_tutorial": [[1920, "plot-tutorial"]], "sanitize_dict": [[1911, "sanitize-dict"]], "difference": [[1865, "difference"], [819, "difference"]], "load_workspace": [[1889, "load-workspace"]], "load_project": [[1888, "load-project"]], "new_project": [[1890, "new-project"]], "difference_update": [[1866, "difference-update"]], "ignore_warnings": [[1905, "ignore-warnings"]], "plot_vispy": [[1921, "plot-vispy"]], "models_to_table": [[1910, "models-to-table"]], "draw_conduit": [[1914, "draw-conduit"]], "save_project": [[1893, "save-project"]], "Workspace": [[1879, "workspace"]], "flat_list": [[1901, "flat-list"]], "close_project": [[1881, "close-project"]], "symmetric_difference": [[1875, "symmetric-difference"]], "plot_networkx": [[1918, "plot-networkx"]], "save_workspace": [[1894, "save-workspace"]], "methods_to_table": [[1909, "methods-to-table"]], "union": [[1877, "union"]], "set_mpl_style": [[1922, "set-mpl-style"]], "isdisjoint": [[1870, "isdisjoint"]], "check_data_health": [[1898, "check-data-health"]], "get_mixture_model_args": [[1902, "get-mixture-model-args"]], "intersection_update": [[1869, "intersection-update"]], "struct_to_dict": [[1912, "struct-to-dict"]], "dict_to_struct": [[1900, "dict-to-struct"]], "intersection": [[1868, "intersection"]], "get_extended_summary": [[1770, "get-extended-summary"]], "find_neighbor_sites": [[1726, "find-neighbor-sites"]], "rotate_coords": [[1748, "rotate-coords"]], "__call__": [[1760, "call"], [608, "call"]], "issymmetric": [[1739, "issymmetric"]], "delete_kwargs_s": [[1764, "delete-kwargs-s"]], "Docorator": [[1759, "docorator"]], "save_docstring": [[1782, "save-docstring"]], "delete_kwargs": [[1763, "delete-kwargs"]], "reflect_base_points": [[1747, "reflect-base-points"]], "delete_types_s": [[1768, "delete-types-s"]], "get_shape": [[1732, "get-shape"]], "get_sectionsf": [[1775, "get-sectionsf"]], "hull_centroid": [[1734, "hull-centroid"]], "merge_pores": [[1745, "merge-pores"]], "dedents": [[1762, "dedents"]], "get_spacing": [[1733, "get-spacing"]], "template_sphere_shell": [[1753, "template-sphere-shell"]], "get_summaryf": [[1777, "get-summaryf"]], "dedent": [[1761, "dedent"]], "keep_params_s": [[1779, "keep-params-s"]], "get_full_description": [[1772, "get-full-description"]], "istril": [[1741, "istril"]], "delete_params_s": [[1766, "delete-params-s"]], "ispercolating": [[1738, "ispercolating"]], "tri_to_am": [[1754, "tri-to-am"]], "utils": [[1758, "module-openpnm.utils"]], "Utilities and helper classes/functions": [[1758, "utilities-and-helper-classes-functions"]], "HealthDict": [[1785, "healthdict"]], "generate_base_points": [[1729, "generate-base-points"]], "istriangular": [[1740, "istriangular"]], "trim": [[1755, "trim"]], "keep_params": [[1778, "keep-params"]], "find_path": [[1727, "find-path"]], "get_domain_area": [[1730, "get-domain-area"]], "istriu": [[1742, "istriu"]], "reduce_coordination": [[1746, "reduce-coordination"]], "shear_coords": [[1749, "shear-coords"]], "with_indent": [[1783, "with-indent"]], "delete_types": [[1767, "delete-types"]], "get_docstring": [[1769, "get-docstring"]], "get_summary": [[1776, "get-summary"]], "with_indents": [[1784, "with-indents"]], "find_neighbor_bonds": [[1725, "find-neighbor-bonds"]], "get_full_descriptionf": [[1773, "get-full-descriptionf"]], "trim_disconnected_clusters": [[1756, "trim-disconnected-clusters"]], "keep_types_s": [[1781, "keep-types-s"]], "get_domain_length": [[1731, "get-domain-length"]], "delete_params": [[1765, "delete-params"]], "template_cylinder_annulus": [[1752, "template-cylinder-annulus"]], "is_fully_connected": [[1735, "is-fully-connected"]], "site_percolation": [[1750, "site-percolation"]], "get_sections": [[1774, "get-sections"]], "vor_to_am": [[1757, "vor-to-am"]], "iscoplanar": [[1736, "iscoplanar"]], "get_extended_summaryf": [[1771, "get-extended-summaryf"]], "keep_types": [[1780, "keep-types"]], "merge_networks": [[1744, "merge-networks"]], "find_surface_pores": [[1728, "find-surface-pores"]], "isoutside": [[1737, "isoutside"]], "stitch": [[1751, "stitch"]], "label_faces": [[1743, "label-faces"]], "regenerate_models": [[1591, "regenerate-models"], [1653, "regenerate-models"], [1621, "regenerate-models"], [1683, "regenerate-models"], [1531, "regenerate-models"], [1559, "regenerate-models"], [1503, "regenerate-models"], [1474, "regenerate-models"], [1442, "regenerate-models"], [1412, "regenerate-models"], [1378, "regenerate-models"], [1312, "regenerate-models"], [1344, "regenerate-models"], [1283, "regenerate-models"], [1245, "regenerate-models"], [1207, "regenerate-models"], [1168, "regenerate-models"], [1129, "regenerate-models"], [1051, "regenerate-models"], [1089, "regenerate-models"], [1013, "regenerate-models"], [974, "regenerate-models"], [638, "regenerate-models"], [590, "regenerate-models"], [514, "regenerate-models"]], "add_model_collection": [[1604, "add-model-collection"], [1633, "add-model-collection"], [1666, "add-model-collection"], [1571, "add-model-collection"], [1542, "add-model-collection"], [1454, "add-model-collection"], [1514, "add-model-collection"], [1486, "add-model-collection"], [1425, "add-model-collection"], [1392, "add-model-collection"], [1324, "add-model-collection"], [1358, "add-model-collection"], [1256, "add-model-collection"], [1295, "add-model-collection"], [1218, "add-model-collection"], [1180, "add-model-collection"], [1141, "add-model-collection"], [1100, "add-model-collection"], [1062, "add-model-collection"], [1024, "add-model-collection"], [986, "add-model-collection"], [947, "add-model-collection"], [637, "add-model-collection"], [573, "add-model-collection"], [496, "add-model-collection"]], "run_model": [[1622, "run-model"], [1593, "run-model"], [1655, "run-model"], [1684, "run-model"], [1532, "run-model"], [1560, "run-model"], [1476, "run-model"], [1504, "run-model"], [1443, "run-model"], [1380, "run-model"], [1414, "run-model"], [1346, "run-model"], [1313, "run-model"], [1246, "run-model"], [1284, "run-model"], [1208, "run-model"], [1130, "run-model"], [1169, "run-model"], [1090, "run-model"], [1052, "run-model"], [975, "run-model"], [1014, "run-model"], [639, "run-model"], [591, "run-model"], [515, "run-model"]], "get_comp_vals": [[1640, "get-comp-vals"], [1578, "get-comp-vals"], [1461, "get-comp-vals"], [1399, "get-comp-vals"], [1365, "get-comp-vals"], [1331, "get-comp-vals"]], "get_mix_vals": [[1642, "get-mix-vals"], [1580, "get-mix-vals"], [1463, "get-mix-vals"], [1401, "get-mix-vals"], [1367, "get-mix-vals"], [1333, "get-mix-vals"]], "add_comp": [[1631, "add-comp"], [1569, "add-comp"], [1452, "add-comp"], [1390, "add-comp"], [1322, "add-comp"], [1356, "add-comp"]], "add_model": [[1603, "add-model"], [1632, "add-model"], [1665, "add-model"], [1570, "add-model"], [1541, "add-model"], [1485, "add-model"], [1513, "add-model"], [1453, "add-model"], [1391, "add-model"], [1424, "add-model"], [1357, "add-model"], [1323, "add-model"], [1255, "add-model"], [1294, "add-model"], [1217, "add-model"], [1179, "add-model"], [1140, "add-model"], [1061, "add-model"], [1099, "add-model"], [1023, "add-model"], [985, "add-model"], [946, "add-model"], [636, "add-model"], [572, "add-model"], [495, "add-model"]], "check_mixture_health": [[1634, "check-mixture-health"], [1572, "check-mixture-health"], [1455, "check-mixture-health"], [1393, "check-mixture-health"], [1359, "check-mixture-health"], [1325, "check-mixture-health"]], "remove_comp": [[1592, "remove-comp"], [1654, "remove-comp"], [1475, "remove-comp"], [1413, "remove-comp"], [1345, "remove-comp"], [1379, "remove-comp"]], "StandardLiquidMixture": [[1630, "standardliquidmixture"]], "y": [[1601, "y"], [1388, "y"], [1354, "y"]], "StandardLiquid": [[1602, "standardliquid"]], "solve": [[1706, "solve"], [1696, "solve"], [1694, "solve"], [1704, "solve"], [1702, "solve"], [1708, "solve"], [1698, "solve"], [1700, "solve"], [644, "solve"]], "PardisoSpsolve": [[1701, "pardisospsolve"]], "solvers": [[1692, "module-openpnm.solvers"]], "Collection of matrix solvers for steady state simulations": [[1692, "collection-of-matrix-solvers-for-steady-state-simulations"]], "ScipySpsolve": [[1707, "scipyspsolve"]], "connect_pores": [[1714, "connect-pores"]], "find_interface_throats": [[1723, "find-interface-throats"]], "add_reservoir_pore": [[1711, "add-reservoir-pore"]], "clone_pores": [[1713, "clone-pores"]], "DirectSolver": [[1695, "directsolver"]], "IterativeSolver": [[1697, "iterativesolver"]], "dimensionality": [[1716, "dimensionality"]], "PyamgRugeStubenSolver": [[1703, "pyamgrugestubensolver"]], "drop_sites": [[1717, "drop-sites"]], "add_boundary_pores": [[1710, "add-boundary-pores"], [1178, "add-boundary-pores"], [1139, "add-boundary-pores"], [984, "add-boundary-pores"], [945, "add-boundary-pores"]], "find_isolated_clusters": [[1724, "find-isolated-clusters"]], "find_connected_sites": [[1721, "find-connected-sites"]], "PETScLinearSolver": [[1699, "petsclinearsolver"]], "x": [[1663, "x"], [1422, "x"]], "ScipyCG": [[1705, "scipycg"]], "topotools": [[1709, "module-openpnm.topotools"]], "Collection of functions for manipulating network topology": [[1709, "collection-of-functions-for-manipulating-network-topology"]], "conns_to_am": [[1715, "conns-to-am"]], "filter_pores_by_z": [[1719, "filter-pores-by-z"]], "find_clusters": [[1720, "find-clusters"]], "find_connecting_bonds": [[1722, "find-connecting-bonds"]], "bond_percolation": [[1712, "bond-percolation"]], "Water": [[1664, "water"]], "BaseSolver": [[1693, "basesolver"]], "StandardGasMixture": [[1568, "standardgasmixture"]], "StandardGas": [[1540, "standardgas"]], "Phase": [[1484, "phase"], [1292, "id1"], [853, "id1"], [7, "phase"], [9, "phase"]], "Mixture": [[1451, "mixture"]], "Species": [[1512, "species"]], "Mercury": [[1423, "mercury"]], "LiquidMixture": [[1389, "liquidmixture"]], "BinaryGas": [[1321, "binarygas"]], "GasMixture": [[1355, "gasmixture"]], "Air": [[1293, "air"]], "phase": [[1292, "module-openpnm.phase"], [853, "module-openpnm.models.phase"], [680, "module-openpnm.models.collections.phase"]], "Voronoi": [[1254, "voronoi"]], "create_incidence_matrix": [[1260, "create-incidence-matrix"], [1184, "create-incidence-matrix"], [1222, "create-incidence-matrix"], [1145, "create-incidence-matrix"], [1104, "create-incidence-matrix"], [1066, "create-incidence-matrix"], [990, "create-incidence-matrix"], [1028, "create-incidence-matrix"], [951, "create-incidence-matrix"]], "find_nearby_pores": [[1264, "find-nearby-pores"], [1188, "find-nearby-pores"], [1226, "find-nearby-pores"], [1108, "find-nearby-pores"], [1149, "find-nearby-pores"], [1070, "find-nearby-pores"], [994, "find-nearby-pores"], [1032, "find-nearby-pores"], [955, "find-nearby-pores"]], "find_connecting_throat": [[1263, "find-connecting-throat"], [1187, "find-connecting-throat"], [1225, "find-connecting-throat"], [1107, "find-connecting-throat"], [1148, "find-connecting-throat"], [1069, "find-connecting-throat"], [993, "find-connecting-throat"], [1031, "find-connecting-throat"], [954, "find-connecting-throat"]], "create_adjacency_matrix": [[1259, "create-adjacency-matrix"], [1221, "create-adjacency-matrix"], [1183, "create-adjacency-matrix"], [1144, "create-adjacency-matrix"], [1103, "create-adjacency-matrix"], [1065, "create-adjacency-matrix"], [1027, "create-adjacency-matrix"], [989, "create-adjacency-matrix"], [950, "create-adjacency-matrix"]], "find_connected_pores": [[1262, "find-connected-pores"], [1224, "find-connected-pores"], [1186, "find-connected-pores"], [1147, "find-connected-pores"], [1106, "find-connected-pores"], [1068, "find-connected-pores"], [992, "find-connected-pores"], [1030, "find-connected-pores"], [953, "find-connected-pores"]], "get_incidence_matrix": [[1271, "get-incidence-matrix"], [1195, "get-incidence-matrix"], [1233, "get-incidence-matrix"], [1117, "get-incidence-matrix"], [1156, "get-incidence-matrix"], [1039, "get-incidence-matrix"], [1077, "get-incidence-matrix"], [1001, "get-incidence-matrix"], [962, "get-incidence-matrix"]], "get_adjacency_matrix": [[1269, "get-adjacency-matrix"], [1193, "get-adjacency-matrix"], [1231, "get-adjacency-matrix"], [1154, "get-adjacency-matrix"], [1115, "get-adjacency-matrix"], [1075, "get-adjacency-matrix"], [1037, "get-adjacency-matrix"], [999, "get-adjacency-matrix"], [960, "get-adjacency-matrix"]], "num_neighbors": [[1276, "num-neighbors"], [1238, "num-neighbors"], [1200, "num-neighbors"], [1161, "num-neighbors"], [1122, "num-neighbors"], [1044, "num-neighbors"], [1082, "num-neighbors"], [967, "num-neighbors"], [1006, "num-neighbors"]], "find_neighbor_pores": [[1265, "find-neighbor-pores"], [1227, "find-neighbor-pores"], [1189, "find-neighbor-pores"], [1150, "find-neighbor-pores"], [1109, "find-neighbor-pores"], [1071, "find-neighbor-pores"], [1033, "find-neighbor-pores"], [995, "find-neighbor-pores"], [956, "find-neighbor-pores"]], "find_neighbor_throats": [[1266, "find-neighbor-throats"], [1228, "find-neighbor-throats"], [1190, "find-neighbor-throats"], [1110, "find-neighbor-throats"], [1151, "find-neighbor-throats"], [1072, "find-neighbor-throats"], [996, "find-neighbor-throats"], [1034, "find-neighbor-throats"], [957, "find-neighbor-throats"]], "Network": [[1216, "network"], [943, "id1"], [836, "id1"], [7, "network"], [5, "network"], [9, "network"]], "FaceCenteredCubic": [[1177, "facecenteredcubic"]], "find_throat_facets": [[1112, "find-throat-facets"]], "Demo": [[1138, "demo"]], "find_pore_hulls": [[1111, "find-pore-hulls"]], "Delaunay": [[1060, "delaunay"]], "DelaunayVoronoiDual": [[1098, "delaunayvoronoidual"]], "CubicTemplate": [[1022, "cubictemplate"]], "Cubic": [[983, "cubic"], [27, "cubic"]], "linear": [[934, "linear"], [826, "linear"]], "valvatne_blunt": [[921, "valvatne-blunt"]], "butler_volmer_voltage": [[931, "butler-volmer-voltage"]], "hydraulic_conductance": [[918, "module-openpnm.models.physics.hydraulic_conductance"]], "gas_pure_st": [[900, "gas-pure-st"]], "natural_exponential": [[936, "natural-exponential"]], "generic_electrical": [[916, "generic-electrical"]], "series_resistors": [[942, "series-resistors"], [917, "series-resistors"]], "viscosity": [[897, "module-openpnm.models.phase.viscosity"]], "taylor_aris_diffusion": [[914, "taylor-aris-diffusion"]], "ad_dif_conductance": [[905, "module-openpnm.models.physics.ad_dif_conductance"]], "mixed_diffusion": [[912, "mixed-diffusion"]], "electrical_conductance": [[915, "module-openpnm.models.physics.electrical_conductance"]], "gas_mixture_hz": [[898, "gas-mixture-hz"]], "conduit_conductance": [[927, "conduit-conductance"]], "general_symbolic": [[933, "general-symbolic"]], "standard_kinetics": [[939, "standard-kinetics"]], "thermal_conductance": [[940, "module-openpnm.models.physics.thermal_conductance"]], "exponential": [[932, "exponential"]], "generic_diffusive": [[911, "generic-diffusive"]], "purcell": [[924, "purcell"], [908, "purcell"]], "liquid_pure_ls": [[902, "liquid-pure-ls"]], "generic_hydraulic": [[919, "generic-hydraulic"]], "late_filling": [[928, "late-filling"]], "power_law": [[938, "power-law"]], "source_terms": [[929, "module-openpnm.models.physics.source_terms"]], "logarithm": [[935, "logarithm"]], "liquid_mixture_xweighted": [[901, "liquid-mixture-xweighted"], [869, "liquid-mixture-xweighted"]], "water_correlation": [[903, "water-correlation"], [896, "water-correlation"], [861, "water-correlation"], [885, "water-correlation"], [892, "water-correlation"]], "multiphase": [[926, "module-openpnm.models.physics.multiphase"]], "washburn": [[909, "washburn"]], "natural_logarithm": [[937, "natural-logarithm"]], "meniscus": [[922, "module-openpnm.models.physics.meniscus"]], "network": [[943, "module-openpnm.network"], [836, "module-openpnm.models.network"], [679, "module-openpnm.models.collections.network"]], "butler_volmer_conc": [[930, "butler-volmer-conc"]], "BodyCenteredCubic": [[944, "bodycenteredcubic"]], "general_toroidal": [[923, "general-toroidal"]], "capillary_pressure": [[907, "module-openpnm.models.physics.capillary_pressure"]], "diffusive_conductance": [[910, "module-openpnm.models.physics.diffusive_conductance"]], "ordinary_diffusion": [[913, "ordinary-diffusion"]], "generic_thermal": [[941, "generic-thermal"]], "gas_pure_gesmr": [[899, "gas-pure-gesmr"]], "physics": [[904, "module-openpnm.models.physics"], [686, "module-openpnm.models.collections.physics"]], "Physics": [[904, "id1"], [7, "physics"]], "sinusoidal": [[925, "sinusoidal"]], "ad_dif": [[906, "ad-dif"]], "hagen_poiseuille": [[920, "hagen-poiseuille"]], "find_coincident_pores": [[846, "find-coincident-pores"]], "mixing_rule": [[876, "mixing-rule"]], "normalize": [[829, "normalize"]], "gas_mixture_whz": [[887, "gas-mixture-whz"]], "liquid_pure_lk": [[895, "liquid-pure-lk"]], "density": [[856, "module-openpnm.models.phase.density"]], "mole_summation": [[877, "mole-summation"]], "gas_pure_gismr": [[888, "gas-pure-gismr"]], "liquid_pure_COSTALD": [[859, "liquid-pure-costald"]], "critical_props": [[855, "module-openpnm.models.phase.critical_props"]], "gabriel_edges": [[847, "gabriel-edges"]], "bidirectional_throats": [[837, "bidirectional-throats"]], "liquid_mixture_tc": [[865, "liquid-mixture-tc"]], "scaled": [[833, "scaled"]], "random": [[832, "random"], [793, "random"], [799, "random"], [749, "random"], [741, "random"]], "mixtures": [[874, "module-openpnm.models.phase.mixtures"]], "liquid_mixture_wsd": [[883, "liquid-mixture-wsd"]], "thermal_conductivity": [[886, "module-openpnm.models.phase.thermal_conductivity"]], "cluster_size": [[839, "cluster-size"]], "isolated_pores": [[849, "isolated-pores"]], "ideal_gas": [[857, "ideal-gas"]], "mole_to_mass_fraction": [[878, "mole-to-mass-fraction"], [873, "mole-to-mass-fraction"]], "surface_tension": [[882, "module-openpnm.models.phase.surface_tension"]], "diffusivity": [[862, "module-openpnm.models.phase.diffusivity"]], "liquid_pure_rp": [[870, "liquid-pure-rp"]], "distance_to_nearest_neighbor": [[843, "distance-to-nearest-neighbor"]], "product": [[831, "product"]], "liquid_mixture_DIPPR9H": [[889, "liquid-mixture-dippr9h"]], "gas_mixture_fesg": [[864, "gas-mixture-fesg"]], "gaseous_species_in_water": [[881, "gaseous-species-in-water"]], "chemicals_wrapper": [[854, "chemicals-wrapper"]], "from_component": [[875, "from-component"]], "headless_throats": [[848, "headless-throats"]], "coordination_number": [[840, "coordination-number"]], "pore_to_pore_distance": [[851, "pore-to-pore-distance"]], "distance_to_nearest_pore": [[844, "distance-to-nearest-pore"]], "mix_and_match": [[872, "mix-and-match"]], "gas_pure_TRC": [[868, "gas-pure-trc"]], "count_coincident_pores": [[841, "count-coincident-pores"]], "distance_to_furthest_neighbor": [[842, "distance-to-furthest-neighbor"]], "misc": [[871, "module-openpnm.models.phase.misc"], [815, "module-openpnm.models.misc"]], "gas_mixture_ce": [[863, "gas-mixture-ce"]], "salinity": [[879, "salinity"]], "cluster_number": [[838, "cluster-number"]], "mass_to_molar": [[860, "mass-to-molar"]], "normal": [[828, "normal"], [798, "normal"], [748, "normal"]], "liquid_pure_bb": [[884, "liquid-pure-bb"]], "liquid_pure_gismr": [[890, "liquid-pure-gismr"]], "heat_capacity": [[866, "module-openpnm.models.phase.heat_capacity"]], "partition_coefficient": [[880, "module-openpnm.models.phase.partition_coefficient"]], "liquid_pure_sr": [[891, "liquid-pure-sr"]], "liquid_pure_antoine": [[894, "liquid-pure-antoine"]], "weibull": [[835, "weibull"], [800, "weibull"], [750, "weibull"]], "summation": [[834, "summation"]], "looped_throats": [[850, "looped-throats"]], "duplicate_throats": [[845, "duplicate-throats"]], "gas_mixture_yweighted": [[867, "gas-mixture-yweighted"]], "liquid_mixture_COSTALD": [[858, "liquid-mixture-costald"]], "reversed_throats": [[852, "reversed-throats"]], "vapor_pressure": [[893, "module-openpnm.models.phase.vapor_pressure"]], "polynomial": [[830, "polynomial"]], "cubes_and_cuboids": [[776, "cubes-and-cuboids"], [707, "cubes-and-cuboids"], [722, "cubes-and-cuboids"], [693, "cubes-and-cuboids"], [674, "cubes-and-cuboids"]], "circles_and_rectangles": [[774, "circles-and-rectangles"], [720, "circles-and-rectangles"], [705, "circles-and-rectangles"], [691, "circles-and-rectangles"], [672, "circles-and-rectangles"]], "cylinder": [[789, "cylinder"], [769, "cylinder"], [810, "cylinder"], [803, "cylinder"]], "from_neighbor_throats": [[822, "from-neighbor-throats"], [745, "from-neighbor-throats"]], "square": [[761, "square"], [739, "square"], [755, "square"]], "throat_endpoints": [[771, "module-openpnm.models.geometry.throat_endpoints"]], "pyramids_and_cuboids": [[783, "pyramids-and-cuboids"], [715, "pyramids-and-cuboids"], [700, "pyramids-and-cuboids"], [730, "pyramids-and-cuboids"], [675, "pyramids-and-cuboids"]], "cuboid": [[802, "cuboid"], [809, "cuboid"], [768, "cuboid"], [788, "cuboid"]], "throat_perimeter": [[787, "module-openpnm.models.geometry.throat_perimeter"]], "Throat Perimeter Models": [[787, "throat-perimeter-models"]], "throat_vector": [[806, "module-openpnm.models.geometry.throat_vector"]], "Throat Vector Model": [[806, "throat-vector-model"]], "rectangle": [[805, "rectangle"], [814, "rectangle"], [790, "rectangle"], [770, "rectangle"]], "cones_and_cylinders": [[775, "cones-and-cylinders"], [721, "cones-and-cylinders"], [706, "cones-and-cylinders"], [692, "cones-and-cylinders"], [673, "cones-and-cylinders"]], "mason_morrow": [[764, "mason-morrow"]], "throat_surface_area": [[801, "module-openpnm.models.geometry.throat_surface_area"]], "Throat Surface Area Models": [[801, "throat-surface-area-models"]], "constant": [[818, "constant"]], "generic_distribution": [[797, "generic-distribution"], [823, "generic-distribution"], [746, "generic-distribution"]], "effective": [[759, "effective"]], "hybrid_cones_and_cylinders": [[777, "hybrid-cones-and-cylinders"], [723, "hybrid-cones-and-cylinders"], [708, "hybrid-cones-and-cylinders"], [694, "hybrid-cones-and-cylinders"]], "from_neighbor_pores": [[792, "from-neighbor-pores"], [821, "from-neighbor-pores"], [796, "from-neighbor-pores"]], "Miscellaneous": [[815, "miscellaneous"]], "intersecting_cones": [[780, "intersecting-cones"], [726, "intersecting-cones"], [711, "intersecting-cones"], [697, "intersecting-cones"]], "hybrid_pyramids_and_cuboids": [[778, "hybrid-pyramids-and-cuboids"], [709, "hybrid-pyramids-and-cuboids"], [724, "hybrid-pyramids-and-cuboids"], [695, "hybrid-pyramids-and-cuboids"]], "trapezoids_and_rectangles": [[786, "trapezoids-and-rectangles"], [718, "trapezoids-and-rectangles"], [703, "trapezoids-and-rectangles"], [733, "trapezoids-and-rectangles"], [678, "trapezoids-and-rectangles"]], "hybrid_trapezoids_and_rectangles": [[779, "hybrid-trapezoids-and-rectangles"], [696, "hybrid-trapezoids-and-rectangles"], [725, "hybrid-trapezoids-and-rectangles"], [710, "hybrid-trapezoids-and-rectangles"]], "jenkins_rao": [[763, "jenkins-rao"]], "squares_and_rectangles": [[785, "squares-and-rectangles"], [732, "squares-and-rectangles"], [717, "squares-and-rectangles"], [702, "squares-and-rectangles"], [677, "squares-and-rectangles"]], "extrusion": [[804, "extrusion"], [811, "extrusion"]], "throat_centroid": [[765, "module-openpnm.models.geometry.throat_centroid"]], "Throat Centroid Model": [[765, "throat-centroid-model"]], "match_histogram": [[827, "match-histogram"]], "pore_coords": [[766, "pore-coords"]], "spheres_and_cylinders": [[784, "spheres-and-cylinders"], [772, "spheres-and-cylinders"], [701, "spheres-and-cylinders"], [716, "spheres-and-cylinders"], [731, "spheres-and-cylinders"], [676, "spheres-and-cylinders"]], "blank": [[816, "blank"]], "throat_capillary_shape_factor": [[762, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "Throat Capillary Shape Factor Models": [[762, "throat-capillary-shape-factor-models"]], "throat_length": [[773, "module-openpnm.models.geometry.throat_length"]], "Throat Length Models": [[773, "throat-length-models"]], "throat_volume": [[808, "module-openpnm.models.geometry.throat_volume"]], "Throat Volume Models": [[808, "throat-volume-models"]], "throat_cross_sectional_area": [[767, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "Throat Cross-sectional Area Models": [[767, "throat-cross-sectional-area-models"]], "lens": [[812, "lens"]], "fraction": [[820, "fraction"]], "sphere": [[760, "sphere"], [738, "sphere"], [754, "sphere"]], "intersecting_trapezoids": [[782, "intersecting-trapezoids"], [699, "intersecting-trapezoids"], [713, "intersecting-trapezoids"], [728, "intersecting-trapezoids"]], "throat_seed": [[791, "module-openpnm.models.geometry.throat_seed"]], "Throat Seed Models": [[791, "throat-seed-models"]], "pendular_ring": [[813, "pendular-ring"]], "clip": [[817, "clip"]], "generic_function": [[824, "generic-function"]], "intersecting_pyramids": [[781, "intersecting-pyramids"], [698, "intersecting-pyramids"], [727, "intersecting-pyramids"], [712, "intersecting-pyramids"]], "throat_size": [[794, "module-openpnm.models.geometry.throat_size"]], "Throat Size Models": [[794, "throat-size-models"]], "invert": [[825, "invert"]], "pore_to_pore": [[807, "pore-to-pore"]], "equivalent_diameter": [[795, "equivalent-diameter"], [744, "equivalent-diameter"]], "ncylinders_in_series": [[714, "ncylinders-in-series"], [729, "ncylinders-in-series"]], "pore_size": [[743, "module-openpnm.models.geometry.pore_size"]], "Pore Size Models": [[743, "pore-size-models"]], "hydraulic_size_factors": [[719, "module-openpnm.models.geometry.hydraulic_size_factors"]], "Hydraulic Size Factors Models": [[719, "hydraulic-size-factors-models"]], "circle": [[757, "circle"], [735, "circle"], [752, "circle"]], "pore_seed": [[740, "module-openpnm.models.geometry.pore_seed"]], "Pore Seed Models": [[740, "pore-seed-models"]], "cube": [[753, "cube"], [737, "cube"], [758, "cube"]], "largest_sphere": [[747, "largest-sphere"]], "conduit_lengths": [[690, "module-openpnm.models.geometry.conduit_lengths"]], "Conduit Lengths Models": [[690, "conduit-lengths-models"]], "pore_volume": [[756, "module-openpnm.models.geometry.pore_volume"]], "Pore Volume Models": [[756, "pore-volume-models"]], "pore_surface_area": [[751, "module-openpnm.models.geometry.pore_surface_area"]], "Pore Surface Area Models": [[751, "pore-surface-area-models"]], "pore_cross_sectional_area": [[734, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "Pore Cross-sectional Area Models": [[734, "pore-cross-sectional-area-models"]], "spatially_correlated": [[742, "spatially-correlated"]], "cone": [[736, "cone"]], "diffusive_size_factors": [[704, "module-openpnm.models.geometry.diffusive_size_factors"]], "Diffusive Size Factors Models": [[704, "diffusive-size-factors-models"]], "network_from_csv": [[646, "network-from-csv"]], "network_from_porespy": [[651, "network-from-porespy"]], "project_to_hdf5": [[664, "project-to-hdf5"]], "network_from_pergeos": [[650, "network-from-pergeos"]], "models": [[669, "module-openpnm.models"]], "Collection of pore-scale models": [[669, "collection-of-pore-scale-models"]], "geometry": [[671, "module-openpnm.models.collections.geometry"], [689, "module-openpnm.models.geometry"]], "project_to_vtk": [[667, "project-to-vtk"]], "network_to_jsongraph": [[655, "network-to-jsongraph"]], "gas": [[682, "module-openpnm.models.collections.phase.gas"]], "air": [[681, "air"]], "dependency_map": [[625, "dependency-map"]], "network_to_csv": [[654, "network-to-csv"]], "integrators": [[641, "module-openpnm.integrators"]], "Collection of ODE integrators for transient simulations": [[641, "collection-of-ode-integrators-for-transient-simulations"]], "project_to_csv": [[662, "project-to-csv"]], "network_to_salome": [[659, "network-to-salome"]], "ModelsMixin2": [[635, "modelsmixin2"]], "dependency_list": [[624, "dependency-list"]], "network_to_pandas": [[657, "network-to-pandas"]], "network_from_jsongraph": [[647, "network-from-jsongraph"]], "network_to_comsol": [[653, "network-to-comsol"]], "network_from_networkx": [[649, "network-from-networkx"]], "ScipyRK45": [[643, "scipyrk45"]], "dependency_graph": [[623, "dependency-graph"]], "Integrator": [[642, "integrator"]], "Network Models Collections": [[679, "network-models-collections"]], "project_to_pandas": [[665, "project-to-pandas"]], "mercury": [[684, "mercury"]], "collections": [[670, "module-openpnm.models.collections"]], "network_to_networkx": [[656, "network-to-networkx"]], "basic": [[687, "basic"]], "project_to_xdmf": [[668, "project-to-xdmf"]], "project_to_dict": [[663, "project-to-dict"]], "network_from_marock": [[648, "network-from-marock"]], "network_to_stl": [[660, "network-to-stl"]], "ParserMixin": [[640, "parsermixin"]], "print_hdf5": [[661, "print-hdf5"]], "project_to_paraview": [[666, "project-to-paraview"]], "Geometry": [[689, "id1"], [7, "geometry"], [5, "geometry"]], "water": [[685, "water"]], "io": [[645, "module-openpnm.io"]], "Collection of functions for import/export of  data": [[645, "collection-of-functions-for-import-export-of-data"]], "network_from_statoil": [[652, "network-from-statoil"]], "liquid": [[683, "module-openpnm.models.collections.phase.liquid"]], "standard": [[688, "standard"]], "network_to_pergeos": [[658, "network-to-pergeos"]], "ModelWrapper": [[607, "modelwrapper"]], "Base2": [[554, "base2"]], "Domain": [[571, "domain"]], "ModelsDict": [[620, "modelsdict"]], "LabelMixin": [[599, "labelmixin"]], "multiphase_diffusion": [[552, "multiphase-diffusion"]], "core": [[553, "module-openpnm.core"]], "Main classes of OpenPNM": [[553, "main-classes-of-openpnm"]], "The Base class": [[553, "the-base-class"]], "add_phases": [[497, "add-phases"]], "set_occupancy": [[518, "set-occupancy"]], "TransientMultiPhysics": [[525, "transientmultiphysics"]], "set_binary_partition_coef": [[516, "set-binary-partition-coef"]], "contrib": [[493, "module-openpnm.contrib"]], "Contrib": [[493, "id1"]], "MultiPhase": [[494, "multiphase"]], "Transport": [[461, "transport"]], "TransientReactiveTransport": [[428, "transientreactivetransport"]], "TransientFickianDiffusion": [[362, "transientfickiandiffusion"]], "set_outflow_BC": [[352, "set-outflow-bc"], [63, "set-outflow-bc"]], "TransientFourierConduction": [[395, "transientfourierconduction"]], "StokesFlow": [[295, "stokesflow"]], "TransientAdvectionDiffusion": [[328, "transientadvectiondiffusion"]], "Installation": [[37, "installation"]], "Installing the dev version": [[37, "installing-the-dev-version"]], "The easy way": [[37, "the-easy-way"]], "The hard (but correct) way": [[37, "the-hard-but-correct-way"]], "Where\u2019s my conda prompt?": [[37, "where-s-my-conda-prompt"]], "Windows": [[37, "windows"]], "Mac and Linux": [[37, "mac-and-linux"]], "Visualization options": [[35, "visualization-options"]], "Spyder": [[35, "spyder"]], "Interactive plots in Jupyter notebook": [[35, "interactive-plots-in-jupyter-notebook"]], "Paraview": [[35, "paraview"]], "AdvectionDiffusion": [[39, "advectiondiffusion"]], "Available Matrix Solvers": [[20, "available-matrix-solvers"]], "Finding Effective Diffusivity and Tortuosity of a Network": [[7, "finding-effective-diffusivity-and-tortuosity-of-a-network"]], "Performing Fickian Diffusion": [[7, "performing-fickian-diffusion"]], "Visualize the Results": [[7, "visualize-the-results"]], "Calculate the Effective Diffusivity": [[7, "calculate-the-effective-diffusivity"]], "Calculate the Tortuosity": [[7, "calculate-the-tortuosity"]], "Getting Started": [[15, "getting-started"]], "Creating a Cubic Network": [[15, "creating-a-cubic-network"]], "Defining a Phase": [[15, "defining-a-phase"]], "Performing a Drainage Simulation": [[15, "performing-a-drainage-simulation"]], "Calculating Permeability Coefficient": [[15, "calculating-permeability-coefficient"]], "Adjusting Pore Size Distribution": [[15, "adjusting-pore-size-distribution"]], "Generating Networks and Quick Visualization": [[27, "generating-networks-and-quick-visualization"]], "CubicTemplates": [[27, "cubictemplates"]], "Other Cubic Lattices": [[27, "other-cubic-lattices"]], "Random Network: Delaunay and Voronoi Tessellations": [[27, "random-network-delaunay-and-voronoi-tessellations"]], "Imported Networks": [[27, "imported-networks"]], "Network Representation, Queries, and Manipulation": [[29, "network-representation-queries-and-manipulation"]], "The Adjacency Matrix": [[29, "the-adjacency-matrix"]], "COO Sparse Format": [[29, "coo-sparse-format"]], "Other Sparse Formats": [[29, "other-sparse-formats"]], "The Incidence Matrix": [[29, "the-incidence-matrix"]], "Using OpenPNM Methods Query Methods": [[29, "using-openpnm-methods-query-methods"]], "Find Neighoring Pores": [[29, "find-neighoring-pores"]], "Find Neighboring Throats": [[29, "find-neighboring-throats"]], "Find Connecting Throats": [[29, "find-connecting-throats"]], "Find Connected Pores": [[29, "find-connected-pores"]], "Removing Throats": [[29, "removing-throats"]], "Removing Pores": [[29, "removing-pores"]], "Adding Pores and Throats": [[29, "adding-pores-and-throats"]], "Adjusting Pore Size Distributions": [[5, "adjusting-pore-size-distributions"]], "Adjusting Pore and Throat Sizes": [[5, "adjusting-pore-and-throat-sizes"]], "Using scipy.stats classes directly": [[5, "using-scipy-stats-classes-directly"]], "Using pre-defined models in OpenPNM": [[5, "using-pre-defined-models-in-openpnm"]], "Using Labels and Defining Domains": [[31, "using-labels-and-defining-domains"]], "Using Predefined Labels": [[31, "using-predefined-labels"]], "The pores and throats methods": [[31, "the-pores-and-throats-methods"]], "Using the mode argument in the pores and throats methods": [[31, "using-the-mode-argument-in-the-pores-and-throats-methods"]], "Defining Custom Labels": [[31, "defining-custom-labels"]], "Creating Boolean Masks": [[31, "creating-boolean-masks"]], "Using set_label": [[31, "using-set-label"]], "Using the @ sytax to read and write data": [[31, "using-the-sytax-to-read-and-write-data"]], "Defining Subdomains": [[31, "defining-subdomains"]], "Defining and Changing Subdomain Locations": [[31, "defining-and-changing-subdomain-locations"]], "Mixing Full Domain and Subdomain Models": [[31, "mixing-full-domain-and-subdomain-models"]], "Mixing Many Subdomains of Different Shape": [[31, "mixing-many-subdomains-of-different-shape"]], "Predicting absolute permeability": [[4, "predicting-absolute-permeability"]], "Create a random cubic network": [[4, "create-a-random-cubic-network"], [11, "create-a-random-cubic-network"]], "Create phase object": [[4, "create-phase-object"]], "Apply Stokes flow": [[4, "apply-stokes-flow"]], "Calculate permeability": [[4, "calculate-permeability"]], "Predicting Formation Factor": [[8, "predicting-formation-factor"]], "Create Network": [[8, "create-network"]], "Create Phase": [[8, "create-phase"]], "Apply Fickian Diffusion": [[8, "apply-fickian-diffusion"]], "Visualize Results": [[8, "visualize-results"]], "Calculate Formation Factor": [[8, "calculate-formation-factor"]], "Reference": [[2, "reference"]], "Predicting relative permeability": [[13, "predicting-relative-permeability"]], "Create network and phases": [[13, "create-network-and-phases"], [12, "create-network-and-phases"]], "Apply invasion percolation": [[13, "apply-invasion-percolation"]], "Occupancy and permeability functions": [[13, "occupancy-and-permeability-functions"]], "Define multiphase conductance": [[13, "define-multiphase-conductance"], [12, "define-multiphase-conductance"]], "Calculate relative permeabilities": [[13, "calculate-relative-permeabilities"]], "10 Steps to Learn OpenPNM": [[3, "steps-to-learn-openpnm"]], "Pore Network Modeling Framework in Python": [[36, "pore-network-modeling-framework-in-python"]], "What is OpenPNM? stars": [[36, "what-is-openpnm-stars"]], "How To Cite": [[36, "how-to-cite"]], "Citation": [[36, null]], "Settings Attribute Machinery": [[17, "settings-attribute-machinery"]], "Datatype is enforced": [[17, "datatype-is-enforced"]], "Settings can be access as attributes or dict keys": [[17, "settings-can-be-access-as-attributes-or-dict-keys"]], "Namespace is clean": [[17, "namespace-is-clean"]], "Collections also enforce types": [[17, "collections-also-enforce-types"]], "Settings are attached before init": [[17, "settings-are-attached-before-init"]], "Import an Extracted Network and Predict Transport Properties": [[10, "import-an-extracted-network-and-predict-transport-properties"]], "Simulating Single Phase Transport": [[33, "simulating-single-phase-transport"]], "Define Phase Viscosity": [[33, "define-phase-viscosity"]], "Basic Conductance Calculation": [[33, "basic-conductance-calculation"]], "Create Algorithm Object": [[33, "create-algorithm-object"]], "Assign Boundary Conditions": [[33, "assign-boundary-conditions"]], "Rigorous Conductance Calculation": [[33, "rigorous-conductance-calculation"]], "Manual Method": [[33, "manual-method"]], "Pore-Scale Model Method": [[33, "pore-scale-model-method"]], "Steady State Transport": [[21, "steady-state-transport"]], "Creating the Coefficient Matrix": [[21, "creating-the-coefficient-matrix"]], "Applying Value and Rate Boundary Conditions": [[21, "applying-value-and-rate-boundary-conditions"]], "Solving the System of Equations": [[21, "solving-the-system-of-equations"]], "Sparse Matrices": [[21, "sparse-matrices"]], "Calibrating a Network Using Mercury Intrusion Data": [[9, "calibrating-a-network-using-mercury-intrusion-data"]], "Import Packages": [[9, "import-packages"]], "Import Data for a Sandstone": [[9, "import-data-for-a-sandstone"]], "Add Geometrical Properties": [[9, "add-geometrical-properties"]], "Pore Sizes": [[9, "pore-sizes"]], "Finding Pore Sizes Given Random Seeds between 0 and 1": [[9, "finding-pore-sizes-given-random-seeds-between-0-and-1"]], "Apply Distribution to the Network": [[9, "apply-distribution-to-the-network"]], "Throat Sizes": [[9, "throat-sizes"]], "Add Physics": [[9, "add-physics"]], "Perform Mercury Intrusion": [[9, "perform-mercury-intrusion"]], "Check Geometric Consistency": [[9, "check-geometric-consistency"]], "Additional Calibration Steps": [[9, "additional-calibration-steps"]], "Explanation of Units": [[22, "explanation-of-units"]], "Use of absolute pressure vs gauge pressure": [[22, "use-of-absolute-pressure-vs-gauge-pressure"]], "Unit conversion packages and challenges": [[22, "unit-conversion-packages-and-challenges"]], "Examples": [[1, "examples"]], "Contibuted Examples": [[14, "contibuted-examples"]], "Predicting Porosity": [[11, "predicting-porosity"]], "Calculate void and bulk volume": [[11, "calculate-void-and-bulk-volume"]], "Discussions and Issues": [[11, "discussions-and-issues"]], "Domain volume": [[11, "domain-volume"]], "Overlapping pores and throats": [[11, "overlapping-pores-and-throats"]], "Extracted networks": [[11, "extracted-networks"]], "Void volume": [[11, "void-volume"]], "Simulating Invasion": [[34, "simulating-invasion"]], "Manual Implementation of the Drainge Process": [[34, "manual-implementation-of-the-drainge-process"]], "Using the Drainage Algorithm": [[34, "using-the-drainage-algorithm"]], "Invasion Percolation": [[34, "invasion-percolation"]], "Manual Implementation of the Invasion Percolation Process": [[34, "manual-implementation-of-the-invasion-percolation-process"]], "Using the InvasionPercolation Algorithm": [[34, "using-the-invasionpercolation-algorithm"]], "Creating Phases": [[32, "creating-phases"]], "Part 1: The Phase class": [[32, "part-1-the-phase-class"]], "Direct assignment of a constant value": [[32, "direct-assignment-of-a-constant-value"]], "Using a built-in model": [[32, "using-a-built-in-model"]], "Using a water-specific model": [[32, "using-a-water-specific-model"]], "Writing your own custom model": [[32, "writing-your-own-custom-model"]], "Specific Classes for Common Fluids": [[32, "specific-classes-for-common-fluids"]], "Part 2: Using Species and Mixtures": [[32, "part-2-using-species-and-mixtures"]], "Pure Species": [[32, "pure-species"]], "Gas and Liquid Species": [[32, "gas-and-liquid-species"]], "Gas and Liquid Mixtures": [[32, "gas-and-liquid-mixtures"]], "Getting and Setting Compositions": [[32, "getting-and-setting-compositions"]], "Exploring Features of the Mixture Objects": [[32, "exploring-features-of-the-mixture-objects"]], "Adding and Removing Species": [[32, "adding-and-removing-species"]], "The info Attribute": [[32, "the-info-attribute"]], "Get component mole fractions": [[32, "get-component-mole-fractions"]], "The components Attribute": [[32, "the-components-attribute"]], "Using get_comp_vals": [[32, "using-get-comp-vals"]], "Checking consistency with check_mixture_health": [[32, "checking-consistency-with-check-mixture-health"]], "Retrieving Species Properties": [[32, "retrieving-species-properties"]], "Using the wildcard (*) syntax": [[32, "using-the-wildcard-syntax"]], "algorithms": [[38, "module-openpnm.algorithms"]], "Algorithms": [[38, "id1"]], "Pore-Scale Models": [[16, "pore-scale-models"]], "Storage of Network Data and Topology": [[28, "storage-of-network-data-and-topology"]], "Spreadsheet Analogy": [[28, "spreadsheet-analogy"]], "Rules to Maintain Data Integrity": [[28, "rules-to-maintain-data-integrity"]], "All Values are Converted to Numpy Arrays": [[28, "all-values-are-converted-to-numpy-arrays"]], "Dictionary Keys Must Start With \u2018pore\u2019 or \u2018throat\u2019": [[28, "dictionary-keys-must-start-with-pore-or-throat"]], "Any Scalars are Expanded to a Full-Length Vector": [[28, "any-scalars-are-expanded-to-a-full-length-vector"]], "Nested Dictionary Names are Allowed": [[28, "nested-dictionary-names-are-allowed"]], "Boolean Arrays are Treated as Labels, Numerical Arrays are Treated as Properties": [[28, "boolean-arrays-are-treated-as-labels-numerical-arrays-are-treated-as-properties"]], "Dictionary Keys with a Leading Underscore are Hidden": [[28, "dictionary-keys-with-a-leading-underscore-are-hidden"]], "The param prefix": [[28, "the-param-prefix"]], "Representing Topology": [[28, "representing-topology"]], "Adjacency Matrices: Dense vs Sparse": [[28, "adjacency-matrices-dense-vs-sparse"]], "conduit data": [[28, "conduit-data"]], "Managing Clustered Networks": [[19, "managing-clustered-networks"]], "Creating a Clustered Network": [[19, "creating-a-clustered-network"]], "Illustrating the Problem": [[19, "illustrating-the-problem"]], "Fixing Clustered Networks": [[19, "fixing-clustered-networks"]], "Reactive Transport": [[23, "reactive-transport"]], "Using the source term functionality in OpenPNM": [[23, "using-the-source-term-functionality-in-openpnm"]], "How the source-term functionality works": [[23, "how-the-source-term-functionality-works"]], "The Workspace and Projects": [[18, "the-workspace-and-projects"]], "Usage of Projects and Workspace": [[18, "usage-of-projects-and-workspace"]], "Workspace is a Singleton": [[18, "workspace-is-a-singleton"]], "One Network per Project": [[18, "one-network-per-project"]], "Numerical Python Primer": [[26, "numerical-python-primer"]], "Python Lists: Flexible but Slow": [[26, "python-lists-flexible-but-slow"]], "Numpy ndarray: Optimized for Numerics": [[26, "numpy-ndarray-optimized-for-numerics"]], "Vectorization": [[26, "vectorization"]], "Methods versus Functions": [[26, "methods-versus-functions"]], "Dictionaries: Holding Things Together": [[26, "dictionaries-holding-things-together"]], "Subclassing dict": [[26, "subclassing-dict"]], "Applications": [[0, "applications"]], "Obtaining Relative Diffusivity Curves": [[12, "obtaining-relative-diffusivity-curves"]], "Apply ordinary percolation": [[12, "apply-ordinary-percolation"]], "Saturation and rate functions": [[12, "saturation-and-rate-functions"]], "Calculate relative diffusivities": [[12, "calculate-relative-diffusivities"]], "Size Factors and Transport Conductance": [[24, "size-factors-and-transport-conductance"]], "Conductance in pore network models": [[24, "conductance-in-pore-network-models"]], "Conductance of a single conduit": [[24, "conductance-of-a-single-conduit"]], "Size factors vs. shape factors": [[24, "size-factors-vs-shape-factors"]], "Built-in size factor models in OpenPNM": [[24, "built-in-size-factor-models-in-openpnm"]], "Deriving the size factor for arbitrary-shaped pores and throats": [[24, "deriving-the-size-factor-for-arbitrary-shaped-pores-and-throats"]], "Diffusive size factor": [[24, "diffusive-size-factor"]], "Hydraulic size factor": [[24, "hydraulic-size-factor"]], "Conduit vs. element size factor": [[24, "conduit-vs-element-size-factor"]], "Transient Transport": [[25, "transient-transport"]], "Assigning Geometric Properties": [[30, "assigning-geometric-properties"]], "Manually Calculating Properties": [[30, "manually-calculating-properties"]], "Adding pore and throat sizes from scipy.stats distributions": [[30, "adding-pore-and-throat-sizes-from-scipy-stats-distributions"]], "Computing throat length": [[30, "computing-throat-length"]], "Computing pore surface areas": [[30, "computing-pore-surface-areas"]], "Using Pore-scale Models from the Library": [[30, "using-pore-scale-models-from-the-library"]], "Using Predefined Collections of Models": [[30, "using-predefined-collections-of-models"]], "Customizing Models by Overwriting Them or Their Arguments": [[30, "customizing-models-by-overwriting-them-or-their-arguments"]], "Introduction to the Dependency Handler": [[30, "introduction-to-the-dependency-handler"]], "Predicting dispersion coefficient": [[6, "predicting-dispersion-coefficient"]], "Generating Network and phase": [[6, "generating-network-and-phase"]], "Defining Effective Pore Volume": [[6, "defining-effective-pore-volume"]], "Perform Stokes flow": [[6, "perform-stokes-flow"]], "Apply transient advection diffusion": [[6, "apply-transient-advection-diffusion"]], "Elution curve": [[6, "elution-curve"]], "Solving for the dispersion coefficient": [[6, "solving-for-the-dispersion-coefficient"]]}, "indexentries": {"module": [[38, "module-openpnm.algorithms"], [493, "module-openpnm.contrib"], [553, "module-openpnm.core"], [641, "module-openpnm.integrators"], [645, "module-openpnm.io"], [669, "module-openpnm.models"], [670, "module-openpnm.models.collections"], [671, "module-openpnm.models.collections.geometry"], [679, "module-openpnm.models.collections.network"], [680, "module-openpnm.models.collections.phase"], [682, "module-openpnm.models.collections.phase.gas"], [683, "module-openpnm.models.collections.phase.liquid"], [686, "module-openpnm.models.collections.physics"], [689, "module-openpnm.models.geometry"], [690, "module-openpnm.models.geometry.conduit_lengths"], [704, "module-openpnm.models.geometry.diffusive_size_factors"], [719, "module-openpnm.models.geometry.hydraulic_size_factors"], [734, "module-openpnm.models.geometry.pore_cross_sectional_area"], [740, "module-openpnm.models.geometry.pore_seed"], [743, "module-openpnm.models.geometry.pore_size"], [751, "module-openpnm.models.geometry.pore_surface_area"], [756, "module-openpnm.models.geometry.pore_volume"], [762, "module-openpnm.models.geometry.throat_capillary_shape_factor"], [765, "module-openpnm.models.geometry.throat_centroid"], [767, "module-openpnm.models.geometry.throat_cross_sectional_area"], [771, "module-openpnm.models.geometry.throat_endpoints"], [773, "module-openpnm.models.geometry.throat_length"], [787, "module-openpnm.models.geometry.throat_perimeter"], [791, "module-openpnm.models.geometry.throat_seed"], [794, "module-openpnm.models.geometry.throat_size"], [801, "module-openpnm.models.geometry.throat_surface_area"], [806, "module-openpnm.models.geometry.throat_vector"], [808, "module-openpnm.models.geometry.throat_volume"], [815, "module-openpnm.models.misc"], [836, "module-openpnm.models.network"], [853, "module-openpnm.models.phase"], [855, "module-openpnm.models.phase.critical_props"], [856, "module-openpnm.models.phase.density"], [862, "module-openpnm.models.phase.diffusivity"], [866, "module-openpnm.models.phase.heat_capacity"], [871, "module-openpnm.models.phase.misc"], [874, "module-openpnm.models.phase.mixtures"], [880, "module-openpnm.models.phase.partition_coefficient"], [882, "module-openpnm.models.phase.surface_tension"], [886, "module-openpnm.models.phase.thermal_conductivity"], [893, "module-openpnm.models.phase.vapor_pressure"], [897, "module-openpnm.models.phase.viscosity"], [904, "module-openpnm.models.physics"], [905, "module-openpnm.models.physics.ad_dif_conductance"], [907, "module-openpnm.models.physics.capillary_pressure"], [910, "module-openpnm.models.physics.diffusive_conductance"], [915, "module-openpnm.models.physics.electrical_conductance"], [918, "module-openpnm.models.physics.hydraulic_conductance"], [922, "module-openpnm.models.physics.meniscus"], [926, "module-openpnm.models.physics.multiphase"], [929, "module-openpnm.models.physics.source_terms"], [940, "module-openpnm.models.physics.thermal_conductance"], [943, "module-openpnm.network"], [1292, "module-openpnm.phase"], [1692, "module-openpnm.solvers"], [1709, "module-openpnm.topotools"], [1758, "module-openpnm.utils"], [1913, "module-openpnm.visualization"], [1923, "module-openpnm"]], "openpnm.algorithms": [[38, "module-openpnm.algorithms"]], "advectiondiffusion (class in openpnm.algorithms)": [[39, "openpnm.algorithms.AdvectionDiffusion"]], "clear() (advectiondiffusion method)": [[40, "openpnm.algorithms.AdvectionDiffusion.clear"]], "clear_bcs() (advectiondiffusion method)": [[41, "openpnm.algorithms.AdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (advectiondiffusion method)": [[42, "openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (advectiondiffusion method)": [[43, "openpnm.algorithms.AdvectionDiffusion.clear_value_BCs"]], "copy() (advectiondiffusion method)": [[44, "openpnm.algorithms.AdvectionDiffusion.copy"]], "filter_by_label() (advectiondiffusion method)": [[45, "openpnm.algorithms.AdvectionDiffusion.filter_by_label"]], "fromkeys() (advectiondiffusion method)": [[46, "openpnm.algorithms.AdvectionDiffusion.fromkeys"]], "get() (advectiondiffusion method)": [[47, "openpnm.algorithms.AdvectionDiffusion.get"]], "get_conduit_data() (advectiondiffusion method)": [[48, "openpnm.algorithms.AdvectionDiffusion.get_conduit_data"]], "interpolate_data() (advectiondiffusion method)": [[49, "openpnm.algorithms.AdvectionDiffusion.interpolate_data"]], "items() (advectiondiffusion method)": [[50, "openpnm.algorithms.AdvectionDiffusion.items"]], "keys() (advectiondiffusion method)": [[51, "openpnm.algorithms.AdvectionDiffusion.keys"]], "labels() (advectiondiffusion method)": [[52, "openpnm.algorithms.AdvectionDiffusion.labels"]], "num_pores() (advectiondiffusion method)": [[53, "openpnm.algorithms.AdvectionDiffusion.num_pores"]], "num_throats() (advectiondiffusion method)": [[54, "openpnm.algorithms.AdvectionDiffusion.num_throats"]], "pop() (advectiondiffusion method)": [[55, "openpnm.algorithms.AdvectionDiffusion.pop"]], "popitem() (advectiondiffusion method)": [[56, "openpnm.algorithms.AdvectionDiffusion.popitem"]], "pores() (advectiondiffusion method)": [[57, "openpnm.algorithms.AdvectionDiffusion.pores"]], "props() (advectiondiffusion method)": [[58, "openpnm.algorithms.AdvectionDiffusion.props"]], "rate() (advectiondiffusion method)": [[59, "openpnm.algorithms.AdvectionDiffusion.rate"]], "run() (advectiondiffusion method)": [[60, "openpnm.algorithms.AdvectionDiffusion.run"]], "set_bc() (advectiondiffusion method)": [[61, "openpnm.algorithms.AdvectionDiffusion.set_BC"]], "set_label() (advectiondiffusion method)": [[62, "openpnm.algorithms.AdvectionDiffusion.set_label"]], "set_outflow_bc() (advectiondiffusion method)": [[63, "openpnm.algorithms.AdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (advectiondiffusion method)": [[64, "openpnm.algorithms.AdvectionDiffusion.set_rate_BC"]], "set_source() (advectiondiffusion method)": [[65, "openpnm.algorithms.AdvectionDiffusion.set_source"]], "set_value_bc() (advectiondiffusion method)": [[66, "openpnm.algorithms.AdvectionDiffusion.set_value_BC"]], "setdefault() (advectiondiffusion method)": [[67, "openpnm.algorithms.AdvectionDiffusion.setdefault"]], "throats() (advectiondiffusion method)": [[68, "openpnm.algorithms.AdvectionDiffusion.throats"]], "to_indices() (advectiondiffusion method)": [[69, "openpnm.algorithms.AdvectionDiffusion.to_indices"]], "to_mask() (advectiondiffusion method)": [[70, "openpnm.algorithms.AdvectionDiffusion.to_mask"]], "update() (advectiondiffusion method)": [[71, "openpnm.algorithms.AdvectionDiffusion.update"]], "values() (advectiondiffusion method)": [[72, "openpnm.algorithms.AdvectionDiffusion.values"]], "algorithm (class in openpnm.algorithms)": [[73, "openpnm.algorithms.Algorithm"]], "clear() (algorithm method)": [[74, "openpnm.algorithms.Algorithm.clear"]], "clear_bcs() (algorithm method)": [[75, "openpnm.algorithms.Algorithm.clear_BCs"]], "copy() (algorithm method)": [[76, "openpnm.algorithms.Algorithm.copy"]], "filter_by_label() (algorithm method)": [[77, "openpnm.algorithms.Algorithm.filter_by_label"]], "fromkeys() (algorithm method)": [[78, "openpnm.algorithms.Algorithm.fromkeys"]], "get() (algorithm method)": [[79, "openpnm.algorithms.Algorithm.get"]], "get_conduit_data() (algorithm method)": [[80, "openpnm.algorithms.Algorithm.get_conduit_data"]], "interpolate_data() (algorithm method)": [[81, "openpnm.algorithms.Algorithm.interpolate_data"]], "items() (algorithm method)": [[82, "openpnm.algorithms.Algorithm.items"]], "keys() (algorithm method)": [[83, "openpnm.algorithms.Algorithm.keys"]], "labels() (algorithm method)": [[84, "openpnm.algorithms.Algorithm.labels"]], "num_pores() (algorithm method)": [[85, "openpnm.algorithms.Algorithm.num_pores"]], "num_throats() (algorithm method)": [[86, "openpnm.algorithms.Algorithm.num_throats"]], "pop() (algorithm method)": [[87, "openpnm.algorithms.Algorithm.pop"]], "popitem() (algorithm method)": [[88, "openpnm.algorithms.Algorithm.popitem"]], "pores() (algorithm method)": [[89, "openpnm.algorithms.Algorithm.pores"]], "props() (algorithm method)": [[90, "openpnm.algorithms.Algorithm.props"]], "set_bc() (algorithm method)": [[91, "openpnm.algorithms.Algorithm.set_BC"]], "set_label() (algorithm method)": [[92, "openpnm.algorithms.Algorithm.set_label"]], "setdefault() (algorithm method)": [[93, "openpnm.algorithms.Algorithm.setdefault"]], "throats() (algorithm method)": [[94, "openpnm.algorithms.Algorithm.throats"]], "to_indices() (algorithm method)": [[95, "openpnm.algorithms.Algorithm.to_indices"]], "to_mask() (algorithm method)": [[96, "openpnm.algorithms.Algorithm.to_mask"]], "update() (algorithm method)": [[97, "openpnm.algorithms.Algorithm.update"]], "values() (algorithm method)": [[98, "openpnm.algorithms.Algorithm.values"]], "drainage (class in openpnm.algorithms)": [[99, "openpnm.algorithms.Drainage"]], "apply_trapping() (drainage method)": [[100, "openpnm.algorithms.Drainage.apply_trapping"]], "clear() (drainage method)": [[101, "openpnm.algorithms.Drainage.clear"]], "clear_bcs() (drainage method)": [[102, "openpnm.algorithms.Drainage.clear_BCs"]], "copy() (drainage method)": [[103, "openpnm.algorithms.Drainage.copy"]], "filter_by_label() (drainage method)": [[104, "openpnm.algorithms.Drainage.filter_by_label"]], "fromkeys() (drainage method)": [[105, "openpnm.algorithms.Drainage.fromkeys"]], "get() (drainage method)": [[106, "openpnm.algorithms.Drainage.get"]], "get_conduit_data() (drainage method)": [[107, "openpnm.algorithms.Drainage.get_conduit_data"]], "interpolate_data() (drainage method)": [[108, "openpnm.algorithms.Drainage.interpolate_data"]], "items() (drainage method)": [[109, "openpnm.algorithms.Drainage.items"]], "keys() (drainage method)": [[110, "openpnm.algorithms.Drainage.keys"]], "labels() (drainage method)": [[111, "openpnm.algorithms.Drainage.labels"]], "num_pores() (drainage method)": [[112, "openpnm.algorithms.Drainage.num_pores"]], "num_throats() (drainage method)": [[113, "openpnm.algorithms.Drainage.num_throats"]], "pc_curve() (drainage method)": [[114, "openpnm.algorithms.Drainage.pc_curve"]], "pop() (drainage method)": [[115, "openpnm.algorithms.Drainage.pop"]], "popitem() (drainage method)": [[116, "openpnm.algorithms.Drainage.popitem"]], "pores() (drainage method)": [[117, "openpnm.algorithms.Drainage.pores"]], "props() (drainage method)": [[118, "openpnm.algorithms.Drainage.props"]], "reset() (drainage method)": [[119, "openpnm.algorithms.Drainage.reset"]], "run() (drainage method)": [[120, "openpnm.algorithms.Drainage.run"]], "set_bc() (drainage method)": [[121, "openpnm.algorithms.Drainage.set_BC"]], "set_inlet_bc() (drainage method)": [[122, "openpnm.algorithms.Drainage.set_inlet_BC"]], "set_label() (drainage method)": [[123, "openpnm.algorithms.Drainage.set_label"]], "set_outlet_bc() (drainage method)": [[124, "openpnm.algorithms.Drainage.set_outlet_BC"]], "setdefault() (drainage method)": [[125, "openpnm.algorithms.Drainage.setdefault"]], "throats() (drainage method)": [[126, "openpnm.algorithms.Drainage.throats"]], "to_indices() (drainage method)": [[127, "openpnm.algorithms.Drainage.to_indices"]], "to_mask() (drainage method)": [[128, "openpnm.algorithms.Drainage.to_mask"]], "update() (drainage method)": [[129, "openpnm.algorithms.Drainage.update"]], "values() (drainage method)": [[130, "openpnm.algorithms.Drainage.values"]], "fickiandiffusion (class in openpnm.algorithms)": [[131, "openpnm.algorithms.FickianDiffusion"]], "clear() (fickiandiffusion method)": [[132, "openpnm.algorithms.FickianDiffusion.clear"]], "clear_bcs() (fickiandiffusion method)": [[133, "openpnm.algorithms.FickianDiffusion.clear_BCs"]], "clear_rate_bcs() (fickiandiffusion method)": [[134, "openpnm.algorithms.FickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (fickiandiffusion method)": [[135, "openpnm.algorithms.FickianDiffusion.clear_value_BCs"]], "copy() (fickiandiffusion method)": [[136, "openpnm.algorithms.FickianDiffusion.copy"]], "filter_by_label() (fickiandiffusion method)": [[137, "openpnm.algorithms.FickianDiffusion.filter_by_label"]], "fromkeys() (fickiandiffusion method)": [[138, "openpnm.algorithms.FickianDiffusion.fromkeys"]], "get() (fickiandiffusion method)": [[139, "openpnm.algorithms.FickianDiffusion.get"]], "get_conduit_data() (fickiandiffusion method)": [[140, "openpnm.algorithms.FickianDiffusion.get_conduit_data"]], "interpolate_data() (fickiandiffusion method)": [[141, "openpnm.algorithms.FickianDiffusion.interpolate_data"]], "items() (fickiandiffusion method)": [[142, "openpnm.algorithms.FickianDiffusion.items"]], "keys() (fickiandiffusion method)": [[143, "openpnm.algorithms.FickianDiffusion.keys"]], "labels() (fickiandiffusion method)": [[144, "openpnm.algorithms.FickianDiffusion.labels"]], "num_pores() (fickiandiffusion method)": [[145, "openpnm.algorithms.FickianDiffusion.num_pores"]], "num_throats() (fickiandiffusion method)": [[146, "openpnm.algorithms.FickianDiffusion.num_throats"]], "pop() (fickiandiffusion method)": [[147, "openpnm.algorithms.FickianDiffusion.pop"]], "popitem() (fickiandiffusion method)": [[148, "openpnm.algorithms.FickianDiffusion.popitem"]], "pores() (fickiandiffusion method)": [[149, "openpnm.algorithms.FickianDiffusion.pores"]], "props() (fickiandiffusion method)": [[150, "openpnm.algorithms.FickianDiffusion.props"]], "rate() (fickiandiffusion method)": [[151, "openpnm.algorithms.FickianDiffusion.rate"]], "run() (fickiandiffusion method)": [[152, "openpnm.algorithms.FickianDiffusion.run"]], "set_bc() (fickiandiffusion method)": [[153, "openpnm.algorithms.FickianDiffusion.set_BC"]], "set_label() (fickiandiffusion method)": [[154, "openpnm.algorithms.FickianDiffusion.set_label"]], "set_rate_bc() (fickiandiffusion method)": [[155, "openpnm.algorithms.FickianDiffusion.set_rate_BC"]], "set_source() (fickiandiffusion method)": [[156, "openpnm.algorithms.FickianDiffusion.set_source"]], "set_value_bc() (fickiandiffusion method)": [[157, "openpnm.algorithms.FickianDiffusion.set_value_BC"]], "setdefault() (fickiandiffusion method)": [[158, "openpnm.algorithms.FickianDiffusion.setdefault"]], "throats() (fickiandiffusion method)": [[159, "openpnm.algorithms.FickianDiffusion.throats"]], "to_indices() (fickiandiffusion method)": [[160, "openpnm.algorithms.FickianDiffusion.to_indices"]], "to_mask() (fickiandiffusion method)": [[161, "openpnm.algorithms.FickianDiffusion.to_mask"]], "update() (fickiandiffusion method)": [[162, "openpnm.algorithms.FickianDiffusion.update"]], "values() (fickiandiffusion method)": [[163, "openpnm.algorithms.FickianDiffusion.values"]], "fourierconduction (class in openpnm.algorithms)": [[164, "openpnm.algorithms.FourierConduction"]], "clear() (fourierconduction method)": [[165, "openpnm.algorithms.FourierConduction.clear"]], "clear_bcs() (fourierconduction method)": [[166, "openpnm.algorithms.FourierConduction.clear_BCs"]], "clear_rate_bcs() (fourierconduction method)": [[167, "openpnm.algorithms.FourierConduction.clear_rate_BCs"]], "clear_value_bcs() (fourierconduction method)": [[168, "openpnm.algorithms.FourierConduction.clear_value_BCs"]], "copy() (fourierconduction method)": [[169, "openpnm.algorithms.FourierConduction.copy"]], "filter_by_label() (fourierconduction method)": [[170, "openpnm.algorithms.FourierConduction.filter_by_label"]], "fromkeys() (fourierconduction method)": [[171, "openpnm.algorithms.FourierConduction.fromkeys"]], "get() (fourierconduction method)": [[172, "openpnm.algorithms.FourierConduction.get"]], "get_conduit_data() (fourierconduction method)": [[173, "openpnm.algorithms.FourierConduction.get_conduit_data"]], "interpolate_data() (fourierconduction method)": [[174, "openpnm.algorithms.FourierConduction.interpolate_data"]], "items() (fourierconduction method)": [[175, "openpnm.algorithms.FourierConduction.items"]], "keys() (fourierconduction method)": [[176, "openpnm.algorithms.FourierConduction.keys"]], "labels() (fourierconduction method)": [[177, "openpnm.algorithms.FourierConduction.labels"]], "num_pores() (fourierconduction method)": [[178, "openpnm.algorithms.FourierConduction.num_pores"]], "num_throats() (fourierconduction method)": [[179, "openpnm.algorithms.FourierConduction.num_throats"]], "pop() (fourierconduction method)": [[180, "openpnm.algorithms.FourierConduction.pop"]], "popitem() (fourierconduction method)": [[181, "openpnm.algorithms.FourierConduction.popitem"]], "pores() (fourierconduction method)": [[182, "openpnm.algorithms.FourierConduction.pores"]], "props() (fourierconduction method)": [[183, "openpnm.algorithms.FourierConduction.props"]], "rate() (fourierconduction method)": [[184, "openpnm.algorithms.FourierConduction.rate"]], "run() (fourierconduction method)": [[185, "openpnm.algorithms.FourierConduction.run"]], "set_bc() (fourierconduction method)": [[186, "openpnm.algorithms.FourierConduction.set_BC"]], "set_label() (fourierconduction method)": [[187, "openpnm.algorithms.FourierConduction.set_label"]], "set_rate_bc() (fourierconduction method)": [[188, "openpnm.algorithms.FourierConduction.set_rate_BC"]], "set_source() (fourierconduction method)": [[189, "openpnm.algorithms.FourierConduction.set_source"]], "set_value_bc() (fourierconduction method)": [[190, "openpnm.algorithms.FourierConduction.set_value_BC"]], "setdefault() (fourierconduction method)": [[191, "openpnm.algorithms.FourierConduction.setdefault"]], "throats() (fourierconduction method)": [[192, "openpnm.algorithms.FourierConduction.throats"]], "to_indices() (fourierconduction method)": [[193, "openpnm.algorithms.FourierConduction.to_indices"]], "to_mask() (fourierconduction method)": [[194, "openpnm.algorithms.FourierConduction.to_mask"]], "update() (fourierconduction method)": [[195, "openpnm.algorithms.FourierConduction.update"]], "values() (fourierconduction method)": [[196, "openpnm.algorithms.FourierConduction.values"]], "invasionpercolation (class in openpnm.algorithms)": [[197, "openpnm.algorithms.InvasionPercolation"]], "apply_trapping() (invasionpercolation method)": [[198, "openpnm.algorithms.InvasionPercolation.apply_trapping"]], "clear() (invasionpercolation method)": [[199, "openpnm.algorithms.InvasionPercolation.clear"]], "clear_bcs() (invasionpercolation method)": [[200, "openpnm.algorithms.InvasionPercolation.clear_BCs"]], "copy() (invasionpercolation method)": [[201, "openpnm.algorithms.InvasionPercolation.copy"]], "filter_by_label() (invasionpercolation method)": [[202, "openpnm.algorithms.InvasionPercolation.filter_by_label"]], "fromkeys() (invasionpercolation method)": [[203, "openpnm.algorithms.InvasionPercolation.fromkeys"]], "get() (invasionpercolation method)": [[204, "openpnm.algorithms.InvasionPercolation.get"]], "get_conduit_data() (invasionpercolation method)": [[205, "openpnm.algorithms.InvasionPercolation.get_conduit_data"]], "interpolate_data() (invasionpercolation method)": [[206, "openpnm.algorithms.InvasionPercolation.interpolate_data"]], "items() (invasionpercolation method)": [[207, "openpnm.algorithms.InvasionPercolation.items"]], "keys() (invasionpercolation method)": [[208, "openpnm.algorithms.InvasionPercolation.keys"]], "labels() (invasionpercolation method)": [[209, "openpnm.algorithms.InvasionPercolation.labels"]], "num_pores() (invasionpercolation method)": [[210, "openpnm.algorithms.InvasionPercolation.num_pores"]], "num_throats() (invasionpercolation method)": [[211, "openpnm.algorithms.InvasionPercolation.num_throats"]], "pc_curve() (invasionpercolation method)": [[212, "openpnm.algorithms.InvasionPercolation.pc_curve"]], "pop() (invasionpercolation method)": [[213, "openpnm.algorithms.InvasionPercolation.pop"]], "popitem() (invasionpercolation method)": [[214, "openpnm.algorithms.InvasionPercolation.popitem"]], "pores() (invasionpercolation method)": [[215, "openpnm.algorithms.InvasionPercolation.pores"]], "props() (invasionpercolation method)": [[216, "openpnm.algorithms.InvasionPercolation.props"]], "reset() (invasionpercolation method)": [[217, "openpnm.algorithms.InvasionPercolation.reset"]], "run() (invasionpercolation method)": [[218, "openpnm.algorithms.InvasionPercolation.run"]], "set_bc() (invasionpercolation method)": [[219, "openpnm.algorithms.InvasionPercolation.set_BC"]], "set_inlet_bc() (invasionpercolation method)": [[220, "openpnm.algorithms.InvasionPercolation.set_inlet_BC"]], "set_label() (invasionpercolation method)": [[221, "openpnm.algorithms.InvasionPercolation.set_label"]], "set_outlet_bc() (invasionpercolation method)": [[222, "openpnm.algorithms.InvasionPercolation.set_outlet_BC"]], "setdefault() (invasionpercolation method)": [[223, "openpnm.algorithms.InvasionPercolation.setdefault"]], "throats() (invasionpercolation method)": [[224, "openpnm.algorithms.InvasionPercolation.throats"]], "to_indices() (invasionpercolation method)": [[225, "openpnm.algorithms.InvasionPercolation.to_indices"]], "to_mask() (invasionpercolation method)": [[226, "openpnm.algorithms.InvasionPercolation.to_mask"]], "update() (invasionpercolation method)": [[227, "openpnm.algorithms.InvasionPercolation.update"]], "values() (invasionpercolation method)": [[228, "openpnm.algorithms.InvasionPercolation.values"]], "ohmicconduction (class in openpnm.algorithms)": [[229, "openpnm.algorithms.OhmicConduction"]], "clear() (ohmicconduction method)": [[230, "openpnm.algorithms.OhmicConduction.clear"]], "clear_bcs() (ohmicconduction method)": [[231, "openpnm.algorithms.OhmicConduction.clear_BCs"]], "clear_rate_bcs() (ohmicconduction method)": [[232, "openpnm.algorithms.OhmicConduction.clear_rate_BCs"]], "clear_value_bcs() (ohmicconduction method)": [[233, "openpnm.algorithms.OhmicConduction.clear_value_BCs"]], "copy() (ohmicconduction method)": [[234, "openpnm.algorithms.OhmicConduction.copy"]], "filter_by_label() (ohmicconduction method)": [[235, "openpnm.algorithms.OhmicConduction.filter_by_label"]], "fromkeys() (ohmicconduction method)": [[236, "openpnm.algorithms.OhmicConduction.fromkeys"]], "get() (ohmicconduction method)": [[237, "openpnm.algorithms.OhmicConduction.get"]], "get_conduit_data() (ohmicconduction method)": [[238, "openpnm.algorithms.OhmicConduction.get_conduit_data"]], "interpolate_data() (ohmicconduction method)": [[239, "openpnm.algorithms.OhmicConduction.interpolate_data"]], "items() (ohmicconduction method)": [[240, "openpnm.algorithms.OhmicConduction.items"]], "keys() (ohmicconduction method)": [[241, "openpnm.algorithms.OhmicConduction.keys"]], "labels() (ohmicconduction method)": [[242, "openpnm.algorithms.OhmicConduction.labels"]], "num_pores() (ohmicconduction method)": [[243, "openpnm.algorithms.OhmicConduction.num_pores"]], "num_throats() (ohmicconduction method)": [[244, "openpnm.algorithms.OhmicConduction.num_throats"]], "pop() (ohmicconduction method)": [[245, "openpnm.algorithms.OhmicConduction.pop"]], "popitem() (ohmicconduction method)": [[246, "openpnm.algorithms.OhmicConduction.popitem"]], "pores() (ohmicconduction method)": [[247, "openpnm.algorithms.OhmicConduction.pores"]], "props() (ohmicconduction method)": [[248, "openpnm.algorithms.OhmicConduction.props"]], "rate() (ohmicconduction method)": [[249, "openpnm.algorithms.OhmicConduction.rate"]], "run() (ohmicconduction method)": [[250, "openpnm.algorithms.OhmicConduction.run"]], "set_bc() (ohmicconduction method)": [[251, "openpnm.algorithms.OhmicConduction.set_BC"]], "set_label() (ohmicconduction method)": [[252, "openpnm.algorithms.OhmicConduction.set_label"]], "set_rate_bc() (ohmicconduction method)": [[253, "openpnm.algorithms.OhmicConduction.set_rate_BC"]], "set_source() (ohmicconduction method)": [[254, "openpnm.algorithms.OhmicConduction.set_source"]], "set_value_bc() (ohmicconduction method)": [[255, "openpnm.algorithms.OhmicConduction.set_value_BC"]], "setdefault() (ohmicconduction method)": [[256, "openpnm.algorithms.OhmicConduction.setdefault"]], "throats() (ohmicconduction method)": [[257, "openpnm.algorithms.OhmicConduction.throats"]], "to_indices() (ohmicconduction method)": [[258, "openpnm.algorithms.OhmicConduction.to_indices"]], "to_mask() (ohmicconduction method)": [[259, "openpnm.algorithms.OhmicConduction.to_mask"]], "update() (ohmicconduction method)": [[260, "openpnm.algorithms.OhmicConduction.update"]], "values() (ohmicconduction method)": [[261, "openpnm.algorithms.OhmicConduction.values"]], "reactivetransport (class in openpnm.algorithms)": [[262, "openpnm.algorithms.ReactiveTransport"]], "clear() (reactivetransport method)": [[263, "openpnm.algorithms.ReactiveTransport.clear"]], "clear_bcs() (reactivetransport method)": [[264, "openpnm.algorithms.ReactiveTransport.clear_BCs"]], "clear_rate_bcs() (reactivetransport method)": [[265, "openpnm.algorithms.ReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (reactivetransport method)": [[266, "openpnm.algorithms.ReactiveTransport.clear_value_BCs"]], "copy() (reactivetransport method)": [[267, "openpnm.algorithms.ReactiveTransport.copy"]], "filter_by_label() (reactivetransport method)": [[268, "openpnm.algorithms.ReactiveTransport.filter_by_label"]], "fromkeys() (reactivetransport method)": [[269, "openpnm.algorithms.ReactiveTransport.fromkeys"]], "get() (reactivetransport method)": [[270, "openpnm.algorithms.ReactiveTransport.get"]], "get_conduit_data() (reactivetransport method)": [[271, "openpnm.algorithms.ReactiveTransport.get_conduit_data"]], "interpolate_data() (reactivetransport method)": [[272, "openpnm.algorithms.ReactiveTransport.interpolate_data"]], "items() (reactivetransport method)": [[273, "openpnm.algorithms.ReactiveTransport.items"]], "keys() (reactivetransport method)": [[274, "openpnm.algorithms.ReactiveTransport.keys"]], "labels() (reactivetransport method)": [[275, "openpnm.algorithms.ReactiveTransport.labels"]], "num_pores() (reactivetransport method)": [[276, "openpnm.algorithms.ReactiveTransport.num_pores"]], "num_throats() (reactivetransport method)": [[277, "openpnm.algorithms.ReactiveTransport.num_throats"]], "pop() (reactivetransport method)": [[278, "openpnm.algorithms.ReactiveTransport.pop"]], "popitem() (reactivetransport method)": [[279, "openpnm.algorithms.ReactiveTransport.popitem"]], "pores() (reactivetransport method)": [[280, "openpnm.algorithms.ReactiveTransport.pores"]], "props() (reactivetransport method)": [[281, "openpnm.algorithms.ReactiveTransport.props"]], "rate() (reactivetransport method)": [[282, "openpnm.algorithms.ReactiveTransport.rate"]], "run() (reactivetransport method)": [[283, "openpnm.algorithms.ReactiveTransport.run"]], "set_bc() (reactivetransport method)": [[284, "openpnm.algorithms.ReactiveTransport.set_BC"]], "set_label() (reactivetransport method)": [[285, "openpnm.algorithms.ReactiveTransport.set_label"]], "set_rate_bc() (reactivetransport method)": [[286, "openpnm.algorithms.ReactiveTransport.set_rate_BC"]], "set_source() (reactivetransport method)": [[287, "openpnm.algorithms.ReactiveTransport.set_source"]], "set_value_bc() (reactivetransport method)": [[288, "openpnm.algorithms.ReactiveTransport.set_value_BC"]], "setdefault() (reactivetransport method)": [[289, "openpnm.algorithms.ReactiveTransport.setdefault"]], "throats() (reactivetransport method)": [[290, "openpnm.algorithms.ReactiveTransport.throats"]], "to_indices() (reactivetransport method)": [[291, "openpnm.algorithms.ReactiveTransport.to_indices"]], "to_mask() (reactivetransport method)": [[292, "openpnm.algorithms.ReactiveTransport.to_mask"]], "update() (reactivetransport method)": [[293, "openpnm.algorithms.ReactiveTransport.update"]], "values() (reactivetransport method)": [[294, "openpnm.algorithms.ReactiveTransport.values"]], "stokesflow (class in openpnm.algorithms)": [[295, "openpnm.algorithms.StokesFlow"]], "clear() (stokesflow method)": [[296, "openpnm.algorithms.StokesFlow.clear"]], "clear_bcs() (stokesflow method)": [[297, "openpnm.algorithms.StokesFlow.clear_BCs"]], "clear_rate_bcs() (stokesflow method)": [[298, "openpnm.algorithms.StokesFlow.clear_rate_BCs"]], "clear_value_bcs() (stokesflow method)": [[299, "openpnm.algorithms.StokesFlow.clear_value_BCs"]], "copy() (stokesflow method)": [[300, "openpnm.algorithms.StokesFlow.copy"]], "filter_by_label() (stokesflow method)": [[301, "openpnm.algorithms.StokesFlow.filter_by_label"]], "fromkeys() (stokesflow method)": [[302, "openpnm.algorithms.StokesFlow.fromkeys"]], "get() (stokesflow method)": [[303, "openpnm.algorithms.StokesFlow.get"]], "get_conduit_data() (stokesflow method)": [[304, "openpnm.algorithms.StokesFlow.get_conduit_data"]], "interpolate_data() (stokesflow method)": [[305, "openpnm.algorithms.StokesFlow.interpolate_data"]], "items() (stokesflow method)": [[306, "openpnm.algorithms.StokesFlow.items"]], "keys() (stokesflow method)": [[307, "openpnm.algorithms.StokesFlow.keys"]], "labels() (stokesflow method)": [[308, "openpnm.algorithms.StokesFlow.labels"]], "num_pores() (stokesflow method)": [[309, "openpnm.algorithms.StokesFlow.num_pores"]], "num_throats() (stokesflow method)": [[310, "openpnm.algorithms.StokesFlow.num_throats"]], "pop() (stokesflow method)": [[311, "openpnm.algorithms.StokesFlow.pop"]], "popitem() (stokesflow method)": [[312, "openpnm.algorithms.StokesFlow.popitem"]], "pores() (stokesflow method)": [[313, "openpnm.algorithms.StokesFlow.pores"]], "props() (stokesflow method)": [[314, "openpnm.algorithms.StokesFlow.props"]], "rate() (stokesflow method)": [[315, "openpnm.algorithms.StokesFlow.rate"]], "run() (stokesflow method)": [[316, "openpnm.algorithms.StokesFlow.run"]], "set_bc() (stokesflow method)": [[317, "openpnm.algorithms.StokesFlow.set_BC"]], "set_label() (stokesflow method)": [[318, "openpnm.algorithms.StokesFlow.set_label"]], "set_rate_bc() (stokesflow method)": [[319, "openpnm.algorithms.StokesFlow.set_rate_BC"]], "set_source() (stokesflow method)": [[320, "openpnm.algorithms.StokesFlow.set_source"]], "set_value_bc() (stokesflow method)": [[321, "openpnm.algorithms.StokesFlow.set_value_BC"]], "setdefault() (stokesflow method)": [[322, "openpnm.algorithms.StokesFlow.setdefault"]], "throats() (stokesflow method)": [[323, "openpnm.algorithms.StokesFlow.throats"]], "to_indices() (stokesflow method)": [[324, "openpnm.algorithms.StokesFlow.to_indices"]], "to_mask() (stokesflow method)": [[325, "openpnm.algorithms.StokesFlow.to_mask"]], "update() (stokesflow method)": [[326, "openpnm.algorithms.StokesFlow.update"]], "values() (stokesflow method)": [[327, "openpnm.algorithms.StokesFlow.values"]], "transientadvectiondiffusion (class in openpnm.algorithms)": [[328, "openpnm.algorithms.TransientAdvectionDiffusion"]], "clear() (transientadvectiondiffusion method)": [[329, "openpnm.algorithms.TransientAdvectionDiffusion.clear"]], "clear_bcs() (transientadvectiondiffusion method)": [[330, "openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (transientadvectiondiffusion method)": [[331, "openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientadvectiondiffusion method)": [[332, "openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs"]], "copy() (transientadvectiondiffusion method)": [[333, "openpnm.algorithms.TransientAdvectionDiffusion.copy"]], "filter_by_label() (transientadvectiondiffusion method)": [[334, "openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label"]], "fromkeys() (transientadvectiondiffusion method)": [[335, "openpnm.algorithms.TransientAdvectionDiffusion.fromkeys"]], "get() (transientadvectiondiffusion method)": [[336, "openpnm.algorithms.TransientAdvectionDiffusion.get"]], "get_conduit_data() (transientadvectiondiffusion method)": [[337, "openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data"]], "interpolate_data() (transientadvectiondiffusion method)": [[338, "openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data"]], "items() (transientadvectiondiffusion method)": [[339, "openpnm.algorithms.TransientAdvectionDiffusion.items"]], "keys() (transientadvectiondiffusion method)": [[340, "openpnm.algorithms.TransientAdvectionDiffusion.keys"]], "labels() (transientadvectiondiffusion method)": [[341, "openpnm.algorithms.TransientAdvectionDiffusion.labels"]], "num_pores() (transientadvectiondiffusion method)": [[342, "openpnm.algorithms.TransientAdvectionDiffusion.num_pores"]], "num_throats() (transientadvectiondiffusion method)": [[343, "openpnm.algorithms.TransientAdvectionDiffusion.num_throats"]], "pop() (transientadvectiondiffusion method)": [[344, "openpnm.algorithms.TransientAdvectionDiffusion.pop"]], "popitem() (transientadvectiondiffusion method)": [[345, "openpnm.algorithms.TransientAdvectionDiffusion.popitem"]], "pores() (transientadvectiondiffusion method)": [[346, "openpnm.algorithms.TransientAdvectionDiffusion.pores"]], "props() (transientadvectiondiffusion method)": [[347, "openpnm.algorithms.TransientAdvectionDiffusion.props"]], "rate() (transientadvectiondiffusion method)": [[348, "openpnm.algorithms.TransientAdvectionDiffusion.rate"]], "run() (transientadvectiondiffusion method)": [[349, "openpnm.algorithms.TransientAdvectionDiffusion.run"]], "set_bc() (transientadvectiondiffusion method)": [[350, "openpnm.algorithms.TransientAdvectionDiffusion.set_BC"]], "set_label() (transientadvectiondiffusion method)": [[351, "openpnm.algorithms.TransientAdvectionDiffusion.set_label"]], "set_outflow_bc() (transientadvectiondiffusion method)": [[352, "openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (transientadvectiondiffusion method)": [[353, "openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC"]], "set_source() (transientadvectiondiffusion method)": [[354, "openpnm.algorithms.TransientAdvectionDiffusion.set_source"]], "set_value_bc() (transientadvectiondiffusion method)": [[355, "openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC"]], "setdefault() (transientadvectiondiffusion method)": [[356, "openpnm.algorithms.TransientAdvectionDiffusion.setdefault"]], "throats() (transientadvectiondiffusion method)": [[357, "openpnm.algorithms.TransientAdvectionDiffusion.throats"]], "to_indices() (transientadvectiondiffusion method)": [[358, "openpnm.algorithms.TransientAdvectionDiffusion.to_indices"]], "to_mask() (transientadvectiondiffusion method)": [[359, "openpnm.algorithms.TransientAdvectionDiffusion.to_mask"]], "update() (transientadvectiondiffusion method)": [[360, "openpnm.algorithms.TransientAdvectionDiffusion.update"]], "values() (transientadvectiondiffusion method)": [[361, "openpnm.algorithms.TransientAdvectionDiffusion.values"]], "transientfickiandiffusion (class in openpnm.algorithms)": [[362, "openpnm.algorithms.TransientFickianDiffusion"]], "clear() (transientfickiandiffusion method)": [[363, "openpnm.algorithms.TransientFickianDiffusion.clear"]], "clear_bcs() (transientfickiandiffusion method)": [[364, "openpnm.algorithms.TransientFickianDiffusion.clear_BCs"]], "clear_rate_bcs() (transientfickiandiffusion method)": [[365, "openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientfickiandiffusion method)": [[366, "openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs"]], "copy() (transientfickiandiffusion method)": [[367, "openpnm.algorithms.TransientFickianDiffusion.copy"]], "filter_by_label() (transientfickiandiffusion method)": [[368, "openpnm.algorithms.TransientFickianDiffusion.filter_by_label"]], "fromkeys() (transientfickiandiffusion method)": [[369, "openpnm.algorithms.TransientFickianDiffusion.fromkeys"]], "get() (transientfickiandiffusion method)": [[370, "openpnm.algorithms.TransientFickianDiffusion.get"]], "get_conduit_data() (transientfickiandiffusion method)": [[371, "openpnm.algorithms.TransientFickianDiffusion.get_conduit_data"]], "interpolate_data() (transientfickiandiffusion method)": [[372, "openpnm.algorithms.TransientFickianDiffusion.interpolate_data"]], "items() (transientfickiandiffusion method)": [[373, "openpnm.algorithms.TransientFickianDiffusion.items"]], "keys() (transientfickiandiffusion method)": [[374, "openpnm.algorithms.TransientFickianDiffusion.keys"]], "labels() (transientfickiandiffusion method)": [[375, "openpnm.algorithms.TransientFickianDiffusion.labels"]], "num_pores() (transientfickiandiffusion method)": [[376, "openpnm.algorithms.TransientFickianDiffusion.num_pores"]], "num_throats() (transientfickiandiffusion method)": [[377, "openpnm.algorithms.TransientFickianDiffusion.num_throats"]], "pop() (transientfickiandiffusion method)": [[378, "openpnm.algorithms.TransientFickianDiffusion.pop"]], "popitem() (transientfickiandiffusion method)": [[379, "openpnm.algorithms.TransientFickianDiffusion.popitem"]], "pores() (transientfickiandiffusion method)": [[380, "openpnm.algorithms.TransientFickianDiffusion.pores"]], "props() (transientfickiandiffusion method)": [[381, "openpnm.algorithms.TransientFickianDiffusion.props"]], "rate() (transientfickiandiffusion method)": [[382, "openpnm.algorithms.TransientFickianDiffusion.rate"]], "run() (transientfickiandiffusion method)": [[383, "openpnm.algorithms.TransientFickianDiffusion.run"]], "set_bc() (transientfickiandiffusion method)": [[384, "openpnm.algorithms.TransientFickianDiffusion.set_BC"]], "set_label() (transientfickiandiffusion method)": [[385, "openpnm.algorithms.TransientFickianDiffusion.set_label"]], "set_rate_bc() (transientfickiandiffusion method)": [[386, "openpnm.algorithms.TransientFickianDiffusion.set_rate_BC"]], "set_source() (transientfickiandiffusion method)": [[387, "openpnm.algorithms.TransientFickianDiffusion.set_source"]], "set_value_bc() (transientfickiandiffusion method)": [[388, "openpnm.algorithms.TransientFickianDiffusion.set_value_BC"]], "setdefault() (transientfickiandiffusion method)": [[389, "openpnm.algorithms.TransientFickianDiffusion.setdefault"]], "throats() (transientfickiandiffusion method)": [[390, "openpnm.algorithms.TransientFickianDiffusion.throats"]], "to_indices() (transientfickiandiffusion method)": [[391, "openpnm.algorithms.TransientFickianDiffusion.to_indices"]], "to_mask() (transientfickiandiffusion method)": [[392, "openpnm.algorithms.TransientFickianDiffusion.to_mask"]], "update() (transientfickiandiffusion method)": [[393, "openpnm.algorithms.TransientFickianDiffusion.update"]], "values() (transientfickiandiffusion method)": [[394, "openpnm.algorithms.TransientFickianDiffusion.values"]], "transientfourierconduction (class in openpnm.algorithms)": [[395, "openpnm.algorithms.TransientFourierConduction"]], "clear() (transientfourierconduction method)": [[396, "openpnm.algorithms.TransientFourierConduction.clear"]], "clear_bcs() (transientfourierconduction method)": [[397, "openpnm.algorithms.TransientFourierConduction.clear_BCs"]], "clear_rate_bcs() (transientfourierconduction method)": [[398, "openpnm.algorithms.TransientFourierConduction.clear_rate_BCs"]], "clear_value_bcs() (transientfourierconduction method)": [[399, "openpnm.algorithms.TransientFourierConduction.clear_value_BCs"]], "copy() (transientfourierconduction method)": [[400, "openpnm.algorithms.TransientFourierConduction.copy"]], "filter_by_label() (transientfourierconduction method)": [[401, "openpnm.algorithms.TransientFourierConduction.filter_by_label"]], "fromkeys() (transientfourierconduction method)": [[402, "openpnm.algorithms.TransientFourierConduction.fromkeys"]], "get() (transientfourierconduction method)": [[403, "openpnm.algorithms.TransientFourierConduction.get"]], "get_conduit_data() (transientfourierconduction method)": [[404, "openpnm.algorithms.TransientFourierConduction.get_conduit_data"]], "interpolate_data() (transientfourierconduction method)": [[405, "openpnm.algorithms.TransientFourierConduction.interpolate_data"]], "items() (transientfourierconduction method)": [[406, "openpnm.algorithms.TransientFourierConduction.items"]], "keys() (transientfourierconduction method)": [[407, "openpnm.algorithms.TransientFourierConduction.keys"]], "labels() (transientfourierconduction method)": [[408, "openpnm.algorithms.TransientFourierConduction.labels"]], "num_pores() (transientfourierconduction method)": [[409, "openpnm.algorithms.TransientFourierConduction.num_pores"]], "num_throats() (transientfourierconduction method)": [[410, "openpnm.algorithms.TransientFourierConduction.num_throats"]], "pop() (transientfourierconduction method)": [[411, "openpnm.algorithms.TransientFourierConduction.pop"]], "popitem() (transientfourierconduction method)": [[412, "openpnm.algorithms.TransientFourierConduction.popitem"]], "pores() (transientfourierconduction method)": [[413, "openpnm.algorithms.TransientFourierConduction.pores"]], "props() (transientfourierconduction method)": [[414, "openpnm.algorithms.TransientFourierConduction.props"]], "rate() (transientfourierconduction method)": [[415, "openpnm.algorithms.TransientFourierConduction.rate"]], "run() (transientfourierconduction method)": [[416, "openpnm.algorithms.TransientFourierConduction.run"]], "set_bc() (transientfourierconduction method)": [[417, "openpnm.algorithms.TransientFourierConduction.set_BC"]], "set_label() (transientfourierconduction method)": [[418, "openpnm.algorithms.TransientFourierConduction.set_label"]], "set_rate_bc() (transientfourierconduction method)": [[419, "openpnm.algorithms.TransientFourierConduction.set_rate_BC"]], "set_source() (transientfourierconduction method)": [[420, "openpnm.algorithms.TransientFourierConduction.set_source"]], "set_value_bc() (transientfourierconduction method)": [[421, "openpnm.algorithms.TransientFourierConduction.set_value_BC"]], "setdefault() (transientfourierconduction method)": [[422, "openpnm.algorithms.TransientFourierConduction.setdefault"]], "throats() (transientfourierconduction method)": [[423, "openpnm.algorithms.TransientFourierConduction.throats"]], "to_indices() (transientfourierconduction method)": [[424, "openpnm.algorithms.TransientFourierConduction.to_indices"]], "to_mask() (transientfourierconduction method)": [[425, "openpnm.algorithms.TransientFourierConduction.to_mask"]], "update() (transientfourierconduction method)": [[426, "openpnm.algorithms.TransientFourierConduction.update"]], "values() (transientfourierconduction method)": [[427, "openpnm.algorithms.TransientFourierConduction.values"]], "transientreactivetransport (class in openpnm.algorithms)": [[428, "openpnm.algorithms.TransientReactiveTransport"]], "clear() (transientreactivetransport method)": [[429, "openpnm.algorithms.TransientReactiveTransport.clear"]], "clear_bcs() (transientreactivetransport method)": [[430, "openpnm.algorithms.TransientReactiveTransport.clear_BCs"]], "clear_rate_bcs() (transientreactivetransport method)": [[431, "openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (transientreactivetransport method)": [[432, "openpnm.algorithms.TransientReactiveTransport.clear_value_BCs"]], "copy() (transientreactivetransport method)": [[433, "openpnm.algorithms.TransientReactiveTransport.copy"]], "filter_by_label() (transientreactivetransport method)": [[434, "openpnm.algorithms.TransientReactiveTransport.filter_by_label"]], "fromkeys() (transientreactivetransport method)": [[435, "openpnm.algorithms.TransientReactiveTransport.fromkeys"]], "get() (transientreactivetransport method)": [[436, "openpnm.algorithms.TransientReactiveTransport.get"]], "get_conduit_data() (transientreactivetransport method)": [[437, "openpnm.algorithms.TransientReactiveTransport.get_conduit_data"]], "interpolate_data() (transientreactivetransport method)": [[438, "openpnm.algorithms.TransientReactiveTransport.interpolate_data"]], "items() (transientreactivetransport method)": [[439, "openpnm.algorithms.TransientReactiveTransport.items"]], "keys() (transientreactivetransport method)": [[440, "openpnm.algorithms.TransientReactiveTransport.keys"]], "labels() (transientreactivetransport method)": [[441, "openpnm.algorithms.TransientReactiveTransport.labels"]], "num_pores() (transientreactivetransport method)": [[442, "openpnm.algorithms.TransientReactiveTransport.num_pores"]], "num_throats() (transientreactivetransport method)": [[443, "openpnm.algorithms.TransientReactiveTransport.num_throats"]], "pop() (transientreactivetransport method)": [[444, "openpnm.algorithms.TransientReactiveTransport.pop"]], "popitem() (transientreactivetransport method)": [[445, "openpnm.algorithms.TransientReactiveTransport.popitem"]], "pores() (transientreactivetransport method)": [[446, "openpnm.algorithms.TransientReactiveTransport.pores"]], "props() (transientreactivetransport method)": [[447, "openpnm.algorithms.TransientReactiveTransport.props"]], "rate() (transientreactivetransport method)": [[448, "openpnm.algorithms.TransientReactiveTransport.rate"]], "run() (transientreactivetransport method)": [[449, "openpnm.algorithms.TransientReactiveTransport.run"]], "set_bc() (transientreactivetransport method)": [[450, "openpnm.algorithms.TransientReactiveTransport.set_BC"]], "set_label() (transientreactivetransport method)": [[451, "openpnm.algorithms.TransientReactiveTransport.set_label"]], "set_rate_bc() (transientreactivetransport method)": [[452, "openpnm.algorithms.TransientReactiveTransport.set_rate_BC"]], "set_source() (transientreactivetransport method)": [[453, "openpnm.algorithms.TransientReactiveTransport.set_source"]], "set_value_bc() (transientreactivetransport method)": [[454, "openpnm.algorithms.TransientReactiveTransport.set_value_BC"]], "setdefault() (transientreactivetransport method)": [[455, "openpnm.algorithms.TransientReactiveTransport.setdefault"]], "throats() (transientreactivetransport method)": [[456, "openpnm.algorithms.TransientReactiveTransport.throats"]], "to_indices() (transientreactivetransport method)": [[457, "openpnm.algorithms.TransientReactiveTransport.to_indices"]], "to_mask() (transientreactivetransport method)": [[458, "openpnm.algorithms.TransientReactiveTransport.to_mask"]], "update() (transientreactivetransport method)": [[459, "openpnm.algorithms.TransientReactiveTransport.update"]], "values() (transientreactivetransport method)": [[460, "openpnm.algorithms.TransientReactiveTransport.values"]], "transport (class in openpnm.algorithms)": [[461, "openpnm.algorithms.Transport"]], "clear() (transport method)": [[462, "openpnm.algorithms.Transport.clear"]], "clear_bcs() (transport method)": [[463, "openpnm.algorithms.Transport.clear_BCs"]], "clear_rate_bcs() (transport method)": [[464, "openpnm.algorithms.Transport.clear_rate_BCs"]], "clear_value_bcs() (transport method)": [[465, "openpnm.algorithms.Transport.clear_value_BCs"]], "copy() (transport method)": [[466, "openpnm.algorithms.Transport.copy"]], "filter_by_label() (transport method)": [[467, "openpnm.algorithms.Transport.filter_by_label"]], "fromkeys() (transport method)": [[468, "openpnm.algorithms.Transport.fromkeys"]], "get() (transport method)": [[469, "openpnm.algorithms.Transport.get"]], "get_conduit_data() (transport method)": [[470, "openpnm.algorithms.Transport.get_conduit_data"]], "interpolate_data() (transport method)": [[471, "openpnm.algorithms.Transport.interpolate_data"]], "items() (transport method)": [[472, "openpnm.algorithms.Transport.items"]], "keys() (transport method)": [[473, "openpnm.algorithms.Transport.keys"]], "labels() (transport method)": [[474, "openpnm.algorithms.Transport.labels"]], "num_pores() (transport method)": [[475, "openpnm.algorithms.Transport.num_pores"]], "num_throats() (transport method)": [[476, "openpnm.algorithms.Transport.num_throats"]], "pop() (transport method)": [[477, "openpnm.algorithms.Transport.pop"]], "popitem() (transport method)": [[478, "openpnm.algorithms.Transport.popitem"]], "pores() (transport method)": [[479, "openpnm.algorithms.Transport.pores"]], "props() (transport method)": [[480, "openpnm.algorithms.Transport.props"]], "rate() (transport method)": [[481, "openpnm.algorithms.Transport.rate"]], "run() (transport method)": [[482, "openpnm.algorithms.Transport.run"]], "set_bc() (transport method)": [[483, "openpnm.algorithms.Transport.set_BC"]], "set_label() (transport method)": [[484, "openpnm.algorithms.Transport.set_label"]], "set_rate_bc() (transport method)": [[485, "openpnm.algorithms.Transport.set_rate_BC"]], "set_value_bc() (transport method)": [[486, "openpnm.algorithms.Transport.set_value_BC"]], "setdefault() (transport method)": [[487, "openpnm.algorithms.Transport.setdefault"]], "throats() (transport method)": [[488, "openpnm.algorithms.Transport.throats"]], "to_indices() (transport method)": [[489, "openpnm.algorithms.Transport.to_indices"]], "to_mask() (transport method)": [[490, "openpnm.algorithms.Transport.to_mask"]], "update() (transport method)": [[491, "openpnm.algorithms.Transport.update"]], "values() (transport method)": [[492, "openpnm.algorithms.Transport.values"]], "openpnm.contrib": [[493, "module-openpnm.contrib"]], "multiphase (class in openpnm.contrib)": [[494, "openpnm.contrib.MultiPhase"]], "add_model() (multiphase method)": [[495, "openpnm.contrib.MultiPhase.add_model"]], "add_model_collection() (multiphase method)": [[496, "openpnm.contrib.MultiPhase.add_model_collection"]], "add_phases() (multiphase method)": [[497, "openpnm.contrib.MultiPhase.add_phases"]], "clear() (multiphase method)": [[498, "openpnm.contrib.MultiPhase.clear"]], "copy() (multiphase method)": [[499, "openpnm.contrib.MultiPhase.copy"]], "filter_by_label() (multiphase method)": [[500, "openpnm.contrib.MultiPhase.filter_by_label"]], "fromkeys() (multiphase method)": [[501, "openpnm.contrib.MultiPhase.fromkeys"]], "get() (multiphase method)": [[502, "openpnm.contrib.MultiPhase.get"]], "get_conduit_data() (multiphase method)": [[503, "openpnm.contrib.MultiPhase.get_conduit_data"]], "interpolate_data() (multiphase method)": [[504, "openpnm.contrib.MultiPhase.interpolate_data"]], "items() (multiphase method)": [[505, "openpnm.contrib.MultiPhase.items"]], "keys() (multiphase method)": [[506, "openpnm.contrib.MultiPhase.keys"]], "labels() (multiphase method)": [[507, "openpnm.contrib.MultiPhase.labels"]], "num_pores() (multiphase method)": [[508, "openpnm.contrib.MultiPhase.num_pores"]], "num_throats() (multiphase method)": [[509, "openpnm.contrib.MultiPhase.num_throats"]], "pop() (multiphase method)": [[510, "openpnm.contrib.MultiPhase.pop"]], "popitem() (multiphase method)": [[511, "openpnm.contrib.MultiPhase.popitem"]], "pores() (multiphase method)": [[512, "openpnm.contrib.MultiPhase.pores"]], "props() (multiphase method)": [[513, "openpnm.contrib.MultiPhase.props"]], "regenerate_models() (multiphase method)": [[514, "openpnm.contrib.MultiPhase.regenerate_models"]], "run_model() (multiphase method)": [[515, "openpnm.contrib.MultiPhase.run_model"]], "set_binary_partition_coef() (multiphase method)": [[516, "openpnm.contrib.MultiPhase.set_binary_partition_coef"]], "set_label() (multiphase method)": [[517, "openpnm.contrib.MultiPhase.set_label"]], "set_occupancy() (multiphase method)": [[518, "openpnm.contrib.MultiPhase.set_occupancy"]], "setdefault() (multiphase method)": [[519, "openpnm.contrib.MultiPhase.setdefault"]], "throats() (multiphase method)": [[520, "openpnm.contrib.MultiPhase.throats"]], "to_indices() (multiphase method)": [[521, "openpnm.contrib.MultiPhase.to_indices"]], "to_mask() (multiphase method)": [[522, "openpnm.contrib.MultiPhase.to_mask"]], "update() (multiphase method)": [[523, "openpnm.contrib.MultiPhase.update"]], "values() (multiphase method)": [[524, "openpnm.contrib.MultiPhase.values"]], "transientmultiphysics (class in openpnm.contrib)": [[525, "openpnm.contrib.TransientMultiPhysics"]], "clear() (transientmultiphysics method)": [[526, "openpnm.contrib.TransientMultiPhysics.clear"]], "clear_bcs() (transientmultiphysics method)": [[527, "openpnm.contrib.TransientMultiPhysics.clear_BCs"]], "copy() (transientmultiphysics method)": [[528, "openpnm.contrib.TransientMultiPhysics.copy"]], "filter_by_label() (transientmultiphysics method)": [[529, "openpnm.contrib.TransientMultiPhysics.filter_by_label"]], "fromkeys() (transientmultiphysics method)": [[530, "openpnm.contrib.TransientMultiPhysics.fromkeys"]], "get() (transientmultiphysics method)": [[531, "openpnm.contrib.TransientMultiPhysics.get"]], "get_conduit_data() (transientmultiphysics method)": [[532, "openpnm.contrib.TransientMultiPhysics.get_conduit_data"]], "interpolate_data() (transientmultiphysics method)": [[533, "openpnm.contrib.TransientMultiPhysics.interpolate_data"]], "items() (transientmultiphysics method)": [[534, "openpnm.contrib.TransientMultiPhysics.items"]], "keys() (transientmultiphysics method)": [[535, "openpnm.contrib.TransientMultiPhysics.keys"]], "labels() (transientmultiphysics method)": [[536, "openpnm.contrib.TransientMultiPhysics.labels"]], "num_pores() (transientmultiphysics method)": [[537, "openpnm.contrib.TransientMultiPhysics.num_pores"]], "num_throats() (transientmultiphysics method)": [[538, "openpnm.contrib.TransientMultiPhysics.num_throats"]], "pop() (transientmultiphysics method)": [[539, "openpnm.contrib.TransientMultiPhysics.pop"]], "popitem() (transientmultiphysics method)": [[540, "openpnm.contrib.TransientMultiPhysics.popitem"]], "pores() (transientmultiphysics method)": [[541, "openpnm.contrib.TransientMultiPhysics.pores"]], "props() (transientmultiphysics method)": [[542, "openpnm.contrib.TransientMultiPhysics.props"]], "run() (transientmultiphysics method)": [[543, "openpnm.contrib.TransientMultiPhysics.run"]], "set_bc() (transientmultiphysics method)": [[544, "openpnm.contrib.TransientMultiPhysics.set_BC"]], "set_label() (transientmultiphysics method)": [[545, "openpnm.contrib.TransientMultiPhysics.set_label"]], "setdefault() (transientmultiphysics method)": [[546, "openpnm.contrib.TransientMultiPhysics.setdefault"]], "throats() (transientmultiphysics method)": [[547, "openpnm.contrib.TransientMultiPhysics.throats"]], "to_indices() (transientmultiphysics method)": [[548, "openpnm.contrib.TransientMultiPhysics.to_indices"]], "to_mask() (transientmultiphysics method)": [[549, "openpnm.contrib.TransientMultiPhysics.to_mask"]], "update() (transientmultiphysics method)": [[550, "openpnm.contrib.TransientMultiPhysics.update"]], "values() (transientmultiphysics method)": [[551, "openpnm.contrib.TransientMultiPhysics.values"]], "multiphase_diffusion() (in module openpnm.contrib)": [[552, "openpnm.contrib.multiphase_diffusion"]], "openpnm.core": [[553, "module-openpnm.core"]], "base2 (class in openpnm.core)": [[554, "openpnm.core.Base2"]], "clear() (base2 method)": [[555, "openpnm.core.Base2.clear"]], "copy() (base2 method)": [[556, "openpnm.core.Base2.copy"]], "fromkeys() (base2 method)": [[557, "openpnm.core.Base2.fromkeys"]], "get() (base2 method)": [[558, "openpnm.core.Base2.get"]], "get_conduit_data() (base2 method)": [[559, "openpnm.core.Base2.get_conduit_data"]], "interpolate_data() (base2 method)": [[560, "openpnm.core.Base2.interpolate_data"]], "items() (base2 method)": [[561, "openpnm.core.Base2.items"]], "keys() (base2 method)": [[562, "openpnm.core.Base2.keys"]], "pop() (base2 method)": [[563, "openpnm.core.Base2.pop"]], "popitem() (base2 method)": [[564, "openpnm.core.Base2.popitem"]], "props() (base2 method)": [[565, "openpnm.core.Base2.props"]], "setdefault() (base2 method)": [[566, "openpnm.core.Base2.setdefault"]], "to_indices() (base2 method)": [[567, "openpnm.core.Base2.to_indices"]], "to_mask() (base2 method)": [[568, "openpnm.core.Base2.to_mask"]], "update() (base2 method)": [[569, "openpnm.core.Base2.update"]], "values() (base2 method)": [[570, "openpnm.core.Base2.values"]], "domain (class in openpnm.core)": [[571, "openpnm.core.Domain"]], "add_model() (domain method)": [[572, "openpnm.core.Domain.add_model"]], "add_model_collection() (domain method)": [[573, "openpnm.core.Domain.add_model_collection"]], "clear() (domain method)": [[574, "openpnm.core.Domain.clear"]], "copy() (domain method)": [[575, "openpnm.core.Domain.copy"]], "filter_by_label() (domain method)": [[576, "openpnm.core.Domain.filter_by_label"]], "fromkeys() (domain method)": [[577, "openpnm.core.Domain.fromkeys"]], "get() (domain method)": [[578, "openpnm.core.Domain.get"]], "get_conduit_data() (domain method)": [[579, "openpnm.core.Domain.get_conduit_data"]], "interpolate_data() (domain method)": [[580, "openpnm.core.Domain.interpolate_data"]], "items() (domain method)": [[581, "openpnm.core.Domain.items"]], "keys() (domain method)": [[582, "openpnm.core.Domain.keys"]], "labels() (domain method)": [[583, "openpnm.core.Domain.labels"]], "num_pores() (domain method)": [[584, "openpnm.core.Domain.num_pores"]], "num_throats() (domain method)": [[585, "openpnm.core.Domain.num_throats"]], "pop() (domain method)": [[586, "openpnm.core.Domain.pop"]], "popitem() (domain method)": [[587, "openpnm.core.Domain.popitem"]], "pores() (domain method)": [[588, "openpnm.core.Domain.pores"]], "props() (domain method)": [[589, "openpnm.core.Domain.props"]], "regenerate_models() (domain method)": [[590, "openpnm.core.Domain.regenerate_models"]], "run_model() (domain method)": [[591, "openpnm.core.Domain.run_model"]], "set_label() (domain method)": [[592, "openpnm.core.Domain.set_label"]], "setdefault() (domain method)": [[593, "openpnm.core.Domain.setdefault"]], "throats() (domain method)": [[594, "openpnm.core.Domain.throats"]], "to_indices() (domain method)": [[595, "openpnm.core.Domain.to_indices"]], "to_mask() (domain method)": [[596, "openpnm.core.Domain.to_mask"]], "update() (domain method)": [[597, "openpnm.core.Domain.update"]], "values() (domain method)": [[598, "openpnm.core.Domain.values"]], "labelmixin (class in openpnm.core)": [[599, "openpnm.core.LabelMixin"]], "filter_by_label() (labelmixin method)": [[600, "openpnm.core.LabelMixin.filter_by_label"]], "labels() (labelmixin method)": [[601, "openpnm.core.LabelMixin.labels"]], "num_pores() (labelmixin method)": [[602, "openpnm.core.LabelMixin.num_pores"]], "num_throats() (labelmixin method)": [[603, "openpnm.core.LabelMixin.num_throats"]], "pores() (labelmixin method)": [[604, "openpnm.core.LabelMixin.pores"]], "set_label() (labelmixin method)": [[605, "openpnm.core.LabelMixin.set_label"]], "throats() (labelmixin method)": [[606, "openpnm.core.LabelMixin.throats"]], "modelwrapper (class in openpnm.core)": [[607, "openpnm.core.ModelWrapper"]], "__call__() (modelwrapper method)": [[608, "openpnm.core.ModelWrapper.__call__"]], "clear() (modelwrapper method)": [[609, "openpnm.core.ModelWrapper.clear"]], "copy() (modelwrapper method)": [[610, "openpnm.core.ModelWrapper.copy"]], "fromkeys() (modelwrapper method)": [[611, "openpnm.core.ModelWrapper.fromkeys"]], "get() (modelwrapper method)": [[612, "openpnm.core.ModelWrapper.get"]], "items() (modelwrapper method)": [[613, "openpnm.core.ModelWrapper.items"]], "keys() (modelwrapper method)": [[614, "openpnm.core.ModelWrapper.keys"]], "pop() (modelwrapper method)": [[615, "openpnm.core.ModelWrapper.pop"]], "popitem() (modelwrapper method)": [[616, "openpnm.core.ModelWrapper.popitem"]], "setdefault() (modelwrapper method)": [[617, "openpnm.core.ModelWrapper.setdefault"]], "update() (modelwrapper method)": [[618, "openpnm.core.ModelWrapper.update"]], "values() (modelwrapper method)": [[619, "openpnm.core.ModelWrapper.values"]], "modelsdict (class in openpnm.core)": [[620, "openpnm.core.ModelsDict"]], "clear() (modelsdict method)": [[621, "openpnm.core.ModelsDict.clear"]], "copy() (modelsdict method)": [[622, "openpnm.core.ModelsDict.copy"]], "dependency_graph() (modelsdict method)": [[623, "openpnm.core.ModelsDict.dependency_graph"]], "dependency_list() (modelsdict method)": [[624, "openpnm.core.ModelsDict.dependency_list"]], "dependency_map() (modelsdict method)": [[625, "openpnm.core.ModelsDict.dependency_map"]], "fromkeys() (modelsdict method)": [[626, "openpnm.core.ModelsDict.fromkeys"]], "get() (modelsdict method)": [[627, "openpnm.core.ModelsDict.get"]], "items() (modelsdict method)": [[628, "openpnm.core.ModelsDict.items"]], "keys() (modelsdict method)": [[629, "openpnm.core.ModelsDict.keys"]], "pop() (modelsdict method)": [[630, "openpnm.core.ModelsDict.pop"]], "popitem() (modelsdict method)": [[631, "openpnm.core.ModelsDict.popitem"]], "setdefault() (modelsdict method)": [[632, "openpnm.core.ModelsDict.setdefault"]], "update() (modelsdict method)": [[633, "openpnm.core.ModelsDict.update"]], "values() (modelsdict method)": [[634, "openpnm.core.ModelsDict.values"]], "modelsmixin2 (class in openpnm.core)": [[635, "openpnm.core.ModelsMixin2"]], "add_model() (modelsmixin2 method)": [[636, "openpnm.core.ModelsMixin2.add_model"]], "add_model_collection() (modelsmixin2 method)": [[637, "openpnm.core.ModelsMixin2.add_model_collection"]], "regenerate_models() (modelsmixin2 method)": [[638, "openpnm.core.ModelsMixin2.regenerate_models"]], "run_model() (modelsmixin2 method)": [[639, "openpnm.core.ModelsMixin2.run_model"]], "parsermixin (class in openpnm.core)": [[640, "openpnm.core.ParserMixin"]], "openpnm.integrators": [[641, "module-openpnm.integrators"]], "integrator (class in openpnm.integrators)": [[642, "openpnm.integrators.Integrator"]], "scipyrk45 (class in openpnm.integrators)": [[643, "openpnm.integrators.ScipyRK45"]], "solve() (scipyrk45 method)": [[644, "openpnm.integrators.ScipyRK45.solve"]], "openpnm.io": [[645, "module-openpnm.io"]], "network_from_csv() (in module openpnm.io)": [[646, "openpnm.io.network_from_csv"]], "network_from_jsongraph() (in module openpnm.io)": [[647, "openpnm.io.network_from_jsongraph"]], "network_from_marock() (in module openpnm.io)": [[648, "openpnm.io.network_from_marock"]], "network_from_networkx() (in module openpnm.io)": [[649, "openpnm.io.network_from_networkx"]], "network_from_pergeos() (in module openpnm.io)": [[650, "openpnm.io.network_from_pergeos"]], "network_from_porespy() (in module openpnm.io)": [[651, "openpnm.io.network_from_porespy"]], "network_from_statoil() (in module openpnm.io)": [[652, "openpnm.io.network_from_statoil"]], "network_to_comsol() (in module openpnm.io)": [[653, "openpnm.io.network_to_comsol"]], "network_to_csv() (in module openpnm.io)": [[654, "openpnm.io.network_to_csv"]], "network_to_jsongraph() (in module openpnm.io)": [[655, "openpnm.io.network_to_jsongraph"]], "network_to_networkx() (in module openpnm.io)": [[656, "openpnm.io.network_to_networkx"]], "network_to_pandas() (in module openpnm.io)": [[657, "openpnm.io.network_to_pandas"]], "network_to_pergeos() (in module openpnm.io)": [[658, "openpnm.io.network_to_pergeos"]], "network_to_salome() (in module openpnm.io)": [[659, "openpnm.io.network_to_salome"]], "network_to_stl() (in module openpnm.io)": [[660, "openpnm.io.network_to_stl"]], "print_hdf5() (in module openpnm.io)": [[661, "openpnm.io.print_hdf5"]], "project_to_csv() (in module openpnm.io)": [[662, "openpnm.io.project_to_csv"]], "project_to_dict() (in module openpnm.io)": [[663, "openpnm.io.project_to_dict"]], "project_to_hdf5() (in module openpnm.io)": [[664, "openpnm.io.project_to_hdf5"]], "project_to_pandas() (in module openpnm.io)": [[665, "openpnm.io.project_to_pandas"]], "project_to_paraview() (in module openpnm.io)": [[666, "openpnm.io.project_to_paraview"]], "project_to_vtk() (in module openpnm.io)": [[667, "openpnm.io.project_to_vtk"]], "project_to_xdmf() (in module openpnm.io)": [[668, "openpnm.io.project_to_xdmf"]], "openpnm.models": [[669, "module-openpnm.models"]], "openpnm.models.collections": [[670, "module-openpnm.models.collections"]], "openpnm.models.collections.geometry": [[671, "module-openpnm.models.collections.geometry"]], "circles_and_rectangles (in module openpnm.models.collections.geometry)": [[672, "openpnm.models.collections.geometry.circles_and_rectangles"]], "cones_and_cylinders (in module openpnm.models.collections.geometry)": [[673, "openpnm.models.collections.geometry.cones_and_cylinders"]], "cubes_and_cuboids (in module openpnm.models.collections.geometry)": [[674, "openpnm.models.collections.geometry.cubes_and_cuboids"]], "pyramids_and_cuboids (in module openpnm.models.collections.geometry)": [[675, "openpnm.models.collections.geometry.pyramids_and_cuboids"]], "spheres_and_cylinders (in module openpnm.models.collections.geometry)": [[676, "openpnm.models.collections.geometry.spheres_and_cylinders"]], "squares_and_rectangles (in module openpnm.models.collections.geometry)": [[677, "openpnm.models.collections.geometry.squares_and_rectangles"]], "trapezoids_and_rectangles (in module openpnm.models.collections.geometry)": [[678, "openpnm.models.collections.geometry.trapezoids_and_rectangles"]], "openpnm.models.collections.network": [[679, "module-openpnm.models.collections.network"]], "openpnm.models.collections.phase": [[680, "module-openpnm.models.collections.phase"]], "air (in module openpnm.models.collections.phase)": [[681, "openpnm.models.collections.phase.air"]], "openpnm.models.collections.phase.gas": [[682, "module-openpnm.models.collections.phase.gas"]], "openpnm.models.collections.phase.liquid": [[683, "module-openpnm.models.collections.phase.liquid"]], "mercury (in module openpnm.models.collections.phase)": [[684, "openpnm.models.collections.phase.mercury"]], "water (in module openpnm.models.collections.phase)": [[685, "openpnm.models.collections.phase.water"]], "openpnm.models.collections.physics": [[686, "module-openpnm.models.collections.physics"]], "basic (in module openpnm.models.collections.physics)": [[687, "openpnm.models.collections.physics.basic"]], "standard (in module openpnm.models.collections.physics)": [[688, "openpnm.models.collections.physics.standard"]], "openpnm.models.geometry": [[689, "module-openpnm.models.geometry"]], "openpnm.models.geometry.conduit_lengths": [[690, "module-openpnm.models.geometry.conduit_lengths"]], "circles_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[691, "openpnm.models.geometry.conduit_lengths.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[692, "openpnm.models.geometry.conduit_lengths.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[693, "openpnm.models.geometry.conduit_lengths.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[694, "openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[695, "openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[696, "openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.conduit_lengths)": [[697, "openpnm.models.geometry.conduit_lengths.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.conduit_lengths)": [[698, "openpnm.models.geometry.conduit_lengths.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.conduit_lengths)": [[699, "openpnm.models.geometry.conduit_lengths.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[700, "openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[701, "openpnm.models.geometry.conduit_lengths.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[702, "openpnm.models.geometry.conduit_lengths.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[703, "openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[704, "module-openpnm.models.geometry.diffusive_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[705, "openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[706, "openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[707, "openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[708, "openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[709, "openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[710, "openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.diffusive_size_factors)": [[711, "openpnm.models.geometry.diffusive_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.diffusive_size_factors)": [[712, "openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.diffusive_size_factors)": [[713, "openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.diffusive_size_factors)": [[714, "openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[715, "openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[716, "openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[717, "openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[718, "openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[719, "module-openpnm.models.geometry.hydraulic_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[720, "openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[721, "openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[722, "openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[723, "openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[724, "openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[725, "openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.hydraulic_size_factors)": [[726, "openpnm.models.geometry.hydraulic_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[727, "openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[728, "openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.hydraulic_size_factors)": [[729, "openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[730, "openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[731, "openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[732, "openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[733, "openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[734, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "circle() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[735, "openpnm.models.geometry.pore_cross_sectional_area.circle"]], "cone() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[736, "openpnm.models.geometry.pore_cross_sectional_area.cone"]], "cube() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[737, "openpnm.models.geometry.pore_cross_sectional_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[738, "openpnm.models.geometry.pore_cross_sectional_area.sphere"]], "square() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[739, "openpnm.models.geometry.pore_cross_sectional_area.square"]], "openpnm.models.geometry.pore_seed": [[740, "module-openpnm.models.geometry.pore_seed"]], "random() (in module openpnm.models.geometry.pore_seed)": [[741, "openpnm.models.geometry.pore_seed.random"]], "spatially_correlated() (in module openpnm.models.geometry.pore_seed)": [[742, "openpnm.models.geometry.pore_seed.spatially_correlated"]], "openpnm.models.geometry.pore_size": [[743, "module-openpnm.models.geometry.pore_size"]], "equivalent_diameter() (in module openpnm.models.geometry.pore_size)": [[744, "openpnm.models.geometry.pore_size.equivalent_diameter"]], "from_neighbor_throats() (in module openpnm.models.geometry.pore_size)": [[745, "openpnm.models.geometry.pore_size.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.geometry.pore_size)": [[746, "openpnm.models.geometry.pore_size.generic_distribution"]], "largest_sphere() (in module openpnm.models.geometry.pore_size)": [[747, "openpnm.models.geometry.pore_size.largest_sphere"]], "normal() (in module openpnm.models.geometry.pore_size)": [[748, "openpnm.models.geometry.pore_size.normal"]], "random() (in module openpnm.models.geometry.pore_size)": [[749, "openpnm.models.geometry.pore_size.random"]], "weibull() (in module openpnm.models.geometry.pore_size)": [[750, "openpnm.models.geometry.pore_size.weibull"]], "openpnm.models.geometry.pore_surface_area": [[751, "module-openpnm.models.geometry.pore_surface_area"]], "circle() (in module openpnm.models.geometry.pore_surface_area)": [[752, "openpnm.models.geometry.pore_surface_area.circle"]], "cube() (in module openpnm.models.geometry.pore_surface_area)": [[753, "openpnm.models.geometry.pore_surface_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_surface_area)": [[754, "openpnm.models.geometry.pore_surface_area.sphere"]], "square() (in module openpnm.models.geometry.pore_surface_area)": [[755, "openpnm.models.geometry.pore_surface_area.square"]], "openpnm.models.geometry.pore_volume": [[756, "module-openpnm.models.geometry.pore_volume"]], "circle() (in module openpnm.models.geometry.pore_volume)": [[757, "openpnm.models.geometry.pore_volume.circle"]], "cube() (in module openpnm.models.geometry.pore_volume)": [[758, "openpnm.models.geometry.pore_volume.cube"]], "effective() (in module openpnm.models.geometry.pore_volume)": [[759, "openpnm.models.geometry.pore_volume.effective"]], "sphere() (in module openpnm.models.geometry.pore_volume)": [[760, "openpnm.models.geometry.pore_volume.sphere"]], "square() (in module openpnm.models.geometry.pore_volume)": [[761, "openpnm.models.geometry.pore_volume.square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[762, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "jenkins_rao() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[763, "openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao"]], "mason_morrow() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[764, "openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[765, "module-openpnm.models.geometry.throat_centroid"]], "pore_coords() (in module openpnm.models.geometry.throat_centroid)": [[766, "openpnm.models.geometry.throat_centroid.pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[767, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "cuboid() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[768, "openpnm.models.geometry.throat_cross_sectional_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[769, "openpnm.models.geometry.throat_cross_sectional_area.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[770, "openpnm.models.geometry.throat_cross_sectional_area.rectangle"]], "openpnm.models.geometry.throat_endpoints": [[771, "module-openpnm.models.geometry.throat_endpoints"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_endpoints)": [[772, "openpnm.models.geometry.throat_endpoints.spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[773, "module-openpnm.models.geometry.throat_length"]], "circles_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[774, "openpnm.models.geometry.throat_length.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[775, "openpnm.models.geometry.throat_length.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[776, "openpnm.models.geometry.throat_length.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[777, "openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[778, "openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[779, "openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.throat_length)": [[780, "openpnm.models.geometry.throat_length.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.throat_length)": [[781, "openpnm.models.geometry.throat_length.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.throat_length)": [[782, "openpnm.models.geometry.throat_length.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[783, "openpnm.models.geometry.throat_length.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[784, "openpnm.models.geometry.throat_length.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[785, "openpnm.models.geometry.throat_length.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[786, "openpnm.models.geometry.throat_length.trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[787, "module-openpnm.models.geometry.throat_perimeter"]], "cuboid() (in module openpnm.models.geometry.throat_perimeter)": [[788, "openpnm.models.geometry.throat_perimeter.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_perimeter)": [[789, "openpnm.models.geometry.throat_perimeter.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_perimeter)": [[790, "openpnm.models.geometry.throat_perimeter.rectangle"]], "openpnm.models.geometry.throat_seed": [[791, "module-openpnm.models.geometry.throat_seed"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_seed)": [[792, "openpnm.models.geometry.throat_seed.from_neighbor_pores"]], "random() (in module openpnm.models.geometry.throat_seed)": [[793, "openpnm.models.geometry.throat_seed.random"]], "openpnm.models.geometry.throat_size": [[794, "module-openpnm.models.geometry.throat_size"]], "equivalent_diameter() (in module openpnm.models.geometry.throat_size)": [[795, "openpnm.models.geometry.throat_size.equivalent_diameter"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_size)": [[796, "openpnm.models.geometry.throat_size.from_neighbor_pores"]], "generic_distribution() (in module openpnm.models.geometry.throat_size)": [[797, "openpnm.models.geometry.throat_size.generic_distribution"]], "normal() (in module openpnm.models.geometry.throat_size)": [[798, "openpnm.models.geometry.throat_size.normal"]], "random() (in module openpnm.models.geometry.throat_size)": [[799, "openpnm.models.geometry.throat_size.random"]], "weibull() (in module openpnm.models.geometry.throat_size)": [[800, "openpnm.models.geometry.throat_size.weibull"]], "openpnm.models.geometry.throat_surface_area": [[801, "module-openpnm.models.geometry.throat_surface_area"]], "cuboid() (in module openpnm.models.geometry.throat_surface_area)": [[802, "openpnm.models.geometry.throat_surface_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_surface_area)": [[803, "openpnm.models.geometry.throat_surface_area.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_surface_area)": [[804, "openpnm.models.geometry.throat_surface_area.extrusion"]], "rectangle() (in module openpnm.models.geometry.throat_surface_area)": [[805, "openpnm.models.geometry.throat_surface_area.rectangle"]], "openpnm.models.geometry.throat_vector": [[806, "module-openpnm.models.geometry.throat_vector"]], "pore_to_pore() (in module openpnm.models.geometry.throat_vector)": [[807, "openpnm.models.geometry.throat_vector.pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[808, "module-openpnm.models.geometry.throat_volume"]], "cuboid() (in module openpnm.models.geometry.throat_volume)": [[809, "openpnm.models.geometry.throat_volume.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_volume)": [[810, "openpnm.models.geometry.throat_volume.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_volume)": [[811, "openpnm.models.geometry.throat_volume.extrusion"]], "lens() (in module openpnm.models.geometry.throat_volume)": [[812, "openpnm.models.geometry.throat_volume.lens"]], "pendular_ring() (in module openpnm.models.geometry.throat_volume)": [[813, "openpnm.models.geometry.throat_volume.pendular_ring"]], "rectangle() (in module openpnm.models.geometry.throat_volume)": [[814, "openpnm.models.geometry.throat_volume.rectangle"]], "openpnm.models.misc": [[815, "module-openpnm.models.misc"]], "blank() (in module openpnm.models.misc)": [[816, "openpnm.models.misc.blank"]], "clip() (in module openpnm.models.misc)": [[817, "openpnm.models.misc.clip"]], "constant() (in module openpnm.models.misc)": [[818, "openpnm.models.misc.constant"]], "difference() (in module openpnm.models.misc)": [[819, "openpnm.models.misc.difference"]], "fraction() (in module openpnm.models.misc)": [[820, "openpnm.models.misc.fraction"]], "from_neighbor_pores() (in module openpnm.models.misc)": [[821, "openpnm.models.misc.from_neighbor_pores"]], "from_neighbor_throats() (in module openpnm.models.misc)": [[822, "openpnm.models.misc.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.misc)": [[823, "openpnm.models.misc.generic_distribution"]], "generic_function() (in module openpnm.models.misc)": [[824, "openpnm.models.misc.generic_function"]], "invert() (in module openpnm.models.misc)": [[825, "openpnm.models.misc.invert"]], "linear() (in module openpnm.models.misc)": [[826, "openpnm.models.misc.linear"]], "match_histogram() (in module openpnm.models.misc)": [[827, "openpnm.models.misc.match_histogram"]], "normal() (in module openpnm.models.misc)": [[828, "openpnm.models.misc.normal"]], "normalize() (in module openpnm.models.misc)": [[829, "openpnm.models.misc.normalize"]], "polynomial() (in module openpnm.models.misc)": [[830, "openpnm.models.misc.polynomial"]], "product() (in module openpnm.models.misc)": [[831, "openpnm.models.misc.product"]], "random() (in module openpnm.models.misc)": [[832, "openpnm.models.misc.random"]], "scaled() (in module openpnm.models.misc)": [[833, "openpnm.models.misc.scaled"]], "summation() (in module openpnm.models.misc)": [[834, "openpnm.models.misc.summation"]], "weibull() (in module openpnm.models.misc)": [[835, "openpnm.models.misc.weibull"]], "openpnm.models.network": [[836, "module-openpnm.models.network"]], "bidirectional_throats() (in module openpnm.models.network)": [[837, "openpnm.models.network.bidirectional_throats"]], "cluster_number() (in module openpnm.models.network)": [[838, "openpnm.models.network.cluster_number"]], "cluster_size() (in module openpnm.models.network)": [[839, "openpnm.models.network.cluster_size"]], "coordination_number() (in module openpnm.models.network)": [[840, "openpnm.models.network.coordination_number"]], "count_coincident_pores() (in module openpnm.models.network)": [[841, "openpnm.models.network.count_coincident_pores"]], "distance_to_furthest_neighbor() (in module openpnm.models.network)": [[842, "openpnm.models.network.distance_to_furthest_neighbor"]], "distance_to_nearest_neighbor() (in module openpnm.models.network)": [[843, "openpnm.models.network.distance_to_nearest_neighbor"]], "distance_to_nearest_pore() (in module openpnm.models.network)": [[844, "openpnm.models.network.distance_to_nearest_pore"]], "duplicate_throats() (in module openpnm.models.network)": [[845, "openpnm.models.network.duplicate_throats"]], "find_coincident_pores() (in module openpnm.models.network)": [[846, "openpnm.models.network.find_coincident_pores"]], "gabriel_edges() (in module openpnm.models.network)": [[847, "openpnm.models.network.gabriel_edges"]], "headless_throats() (in module openpnm.models.network)": [[848, "openpnm.models.network.headless_throats"]], "isolated_pores() (in module openpnm.models.network)": [[849, "openpnm.models.network.isolated_pores"]], "looped_throats() (in module openpnm.models.network)": [[850, "openpnm.models.network.looped_throats"]], "pore_to_pore_distance() (in module openpnm.models.network)": [[851, "openpnm.models.network.pore_to_pore_distance"]], "reversed_throats() (in module openpnm.models.network)": [[852, "openpnm.models.network.reversed_throats"]], "openpnm.models.phase": [[853, "module-openpnm.models.phase"]], "chemicals_wrapper() (in module openpnm.models.phase)": [[854, "openpnm.models.phase.chemicals_wrapper"]], "openpnm.models.phase.critical_props": [[855, "module-openpnm.models.phase.critical_props"]], "openpnm.models.phase.density": [[856, "module-openpnm.models.phase.density"]], "ideal_gas() (in module openpnm.models.phase.density)": [[857, "openpnm.models.phase.density.ideal_gas"]], "liquid_mixture_costald() (in module openpnm.models.phase.density)": [[858, "openpnm.models.phase.density.liquid_mixture_COSTALD"]], "liquid_pure_costald() (in module openpnm.models.phase.density)": [[859, "openpnm.models.phase.density.liquid_pure_COSTALD"]], "mass_to_molar() (in module openpnm.models.phase.density)": [[860, "openpnm.models.phase.density.mass_to_molar"]], "water_correlation() (in module openpnm.models.phase.density)": [[861, "openpnm.models.phase.density.water_correlation"]], "openpnm.models.phase.diffusivity": [[862, "module-openpnm.models.phase.diffusivity"]], "gas_mixture_ce() (in module openpnm.models.phase.diffusivity)": [[863, "openpnm.models.phase.diffusivity.gas_mixture_ce"]], "gas_mixture_fesg() (in module openpnm.models.phase.diffusivity)": [[864, "openpnm.models.phase.diffusivity.gas_mixture_fesg"]], "liquid_mixture_tc() (in module openpnm.models.phase.diffusivity)": [[865, "openpnm.models.phase.diffusivity.liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[866, "module-openpnm.models.phase.heat_capacity"]], "gas_mixture_yweighted() (in module openpnm.models.phase.heat_capacity)": [[867, "openpnm.models.phase.heat_capacity.gas_mixture_yweighted"]], "gas_pure_trc() (in module openpnm.models.phase.heat_capacity)": [[868, "openpnm.models.phase.heat_capacity.gas_pure_TRC"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.heat_capacity)": [[869, "openpnm.models.phase.heat_capacity.liquid_mixture_xweighted"]], "liquid_pure_rp() (in module openpnm.models.phase.heat_capacity)": [[870, "openpnm.models.phase.heat_capacity.liquid_pure_rp"]], "openpnm.models.phase.misc": [[871, "module-openpnm.models.phase.misc"]], "mix_and_match() (in module openpnm.models.phase.misc)": [[872, "openpnm.models.phase.misc.mix_and_match"]], "mole_to_mass_fraction() (in module openpnm.models.phase.misc)": [[873, "openpnm.models.phase.misc.mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[874, "module-openpnm.models.phase.mixtures"]], "from_component() (in module openpnm.models.phase.mixtures)": [[875, "openpnm.models.phase.mixtures.from_component"]], "mixing_rule() (in module openpnm.models.phase.mixtures)": [[876, "openpnm.models.phase.mixtures.mixing_rule"]], "mole_summation() (in module openpnm.models.phase.mixtures)": [[877, "openpnm.models.phase.mixtures.mole_summation"]], "mole_to_mass_fraction() (in module openpnm.models.phase.mixtures)": [[878, "openpnm.models.phase.mixtures.mole_to_mass_fraction"]], "salinity() (in module openpnm.models.phase.mixtures)": [[879, "openpnm.models.phase.mixtures.salinity"]], "openpnm.models.phase.partition_coefficient": [[880, "module-openpnm.models.phase.partition_coefficient"]], "gaseous_species_in_water() (in module openpnm.models.phase.partition_coefficient)": [[881, "openpnm.models.phase.partition_coefficient.gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[882, "module-openpnm.models.phase.surface_tension"]], "liquid_mixture_wsd() (in module openpnm.models.phase.surface_tension)": [[883, "openpnm.models.phase.surface_tension.liquid_mixture_wsd"]], "liquid_pure_bb() (in module openpnm.models.phase.surface_tension)": [[884, "openpnm.models.phase.surface_tension.liquid_pure_bb"]], "water_correlation() (in module openpnm.models.phase.surface_tension)": [[885, "openpnm.models.phase.surface_tension.water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[886, "module-openpnm.models.phase.thermal_conductivity"]], "gas_mixture_whz() (in module openpnm.models.phase.thermal_conductivity)": [[887, "openpnm.models.phase.thermal_conductivity.gas_mixture_whz"]], "gas_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[888, "openpnm.models.phase.thermal_conductivity.gas_pure_gismr"]], "liquid_mixture_dippr9h() (in module openpnm.models.phase.thermal_conductivity)": [[889, "openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H"]], "liquid_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[890, "openpnm.models.phase.thermal_conductivity.liquid_pure_gismr"]], "liquid_pure_sr() (in module openpnm.models.phase.thermal_conductivity)": [[891, "openpnm.models.phase.thermal_conductivity.liquid_pure_sr"]], "water_correlation() (in module openpnm.models.phase.thermal_conductivity)": [[892, "openpnm.models.phase.thermal_conductivity.water_correlation"]], "openpnm.models.phase.vapor_pressure": [[893, "module-openpnm.models.phase.vapor_pressure"]], "liquid_pure_antoine() (in module openpnm.models.phase.vapor_pressure)": [[894, "openpnm.models.phase.vapor_pressure.liquid_pure_antoine"]], "liquid_pure_lk() (in module openpnm.models.phase.vapor_pressure)": [[895, "openpnm.models.phase.vapor_pressure.liquid_pure_lk"]], "water_correlation() (in module openpnm.models.phase.vapor_pressure)": [[896, "openpnm.models.phase.vapor_pressure.water_correlation"]], "openpnm.models.phase.viscosity": [[897, "module-openpnm.models.phase.viscosity"]], "gas_mixture_hz() (in module openpnm.models.phase.viscosity)": [[898, "openpnm.models.phase.viscosity.gas_mixture_hz"]], "gas_pure_gesmr() (in module openpnm.models.phase.viscosity)": [[899, "openpnm.models.phase.viscosity.gas_pure_gesmr"]], "gas_pure_st() (in module openpnm.models.phase.viscosity)": [[900, "openpnm.models.phase.viscosity.gas_pure_st"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.viscosity)": [[901, "openpnm.models.phase.viscosity.liquid_mixture_xweighted"]], "liquid_pure_ls() (in module openpnm.models.phase.viscosity)": [[902, "openpnm.models.phase.viscosity.liquid_pure_ls"]], "water_correlation() (in module openpnm.models.phase.viscosity)": [[903, "openpnm.models.phase.viscosity.water_correlation"]], "openpnm.models.physics": [[904, "module-openpnm.models.physics"]], "openpnm.models.physics.ad_dif_conductance": [[905, "module-openpnm.models.physics.ad_dif_conductance"]], "ad_dif() (in module openpnm.models.physics.ad_dif_conductance)": [[906, "openpnm.models.physics.ad_dif_conductance.ad_dif"]], "openpnm.models.physics.capillary_pressure": [[907, "module-openpnm.models.physics.capillary_pressure"]], "purcell() (in module openpnm.models.physics.capillary_pressure)": [[908, "openpnm.models.physics.capillary_pressure.purcell"]], "washburn() (in module openpnm.models.physics.capillary_pressure)": [[909, "openpnm.models.physics.capillary_pressure.washburn"]], "openpnm.models.physics.diffusive_conductance": [[910, "module-openpnm.models.physics.diffusive_conductance"]], "generic_diffusive() (in module openpnm.models.physics.diffusive_conductance)": [[911, "openpnm.models.physics.diffusive_conductance.generic_diffusive"]], "mixed_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[912, "openpnm.models.physics.diffusive_conductance.mixed_diffusion"]], "ordinary_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[913, "openpnm.models.physics.diffusive_conductance.ordinary_diffusion"]], "taylor_aris_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[914, "openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[915, "module-openpnm.models.physics.electrical_conductance"]], "generic_electrical() (in module openpnm.models.physics.electrical_conductance)": [[916, "openpnm.models.physics.electrical_conductance.generic_electrical"]], "series_resistors() (in module openpnm.models.physics.electrical_conductance)": [[917, "openpnm.models.physics.electrical_conductance.series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[918, "module-openpnm.models.physics.hydraulic_conductance"]], "generic_hydraulic() (in module openpnm.models.physics.hydraulic_conductance)": [[919, "openpnm.models.physics.hydraulic_conductance.generic_hydraulic"]], "hagen_poiseuille() (in module openpnm.models.physics.hydraulic_conductance)": [[920, "openpnm.models.physics.hydraulic_conductance.hagen_poiseuille"]], "valvatne_blunt() (in module openpnm.models.physics.hydraulic_conductance)": [[921, "openpnm.models.physics.hydraulic_conductance.valvatne_blunt"]], "openpnm.models.physics.meniscus": [[922, "module-openpnm.models.physics.meniscus"]], "general_toroidal() (in module openpnm.models.physics.meniscus)": [[923, "openpnm.models.physics.meniscus.general_toroidal"]], "purcell() (in module openpnm.models.physics.meniscus)": [[924, "openpnm.models.physics.meniscus.purcell"]], "sinusoidal() (in module openpnm.models.physics.meniscus)": [[925, "openpnm.models.physics.meniscus.sinusoidal"]], "openpnm.models.physics.multiphase": [[926, "module-openpnm.models.physics.multiphase"]], "conduit_conductance() (in module openpnm.models.physics.multiphase)": [[927, "openpnm.models.physics.multiphase.conduit_conductance"]], "late_filling() (in module openpnm.models.physics.multiphase)": [[928, "openpnm.models.physics.multiphase.late_filling"]], "openpnm.models.physics.source_terms": [[929, "module-openpnm.models.physics.source_terms"]], "butler_volmer_conc() (in module openpnm.models.physics.source_terms)": [[930, "openpnm.models.physics.source_terms.butler_volmer_conc"]], "butler_volmer_voltage() (in module openpnm.models.physics.source_terms)": [[931, "openpnm.models.physics.source_terms.butler_volmer_voltage"]], "exponential() (in module openpnm.models.physics.source_terms)": [[932, "openpnm.models.physics.source_terms.exponential"]], "general_symbolic() (in module openpnm.models.physics.source_terms)": [[933, "openpnm.models.physics.source_terms.general_symbolic"]], "linear() (in module openpnm.models.physics.source_terms)": [[934, "openpnm.models.physics.source_terms.linear"]], "logarithm() (in module openpnm.models.physics.source_terms)": [[935, "openpnm.models.physics.source_terms.logarithm"]], "natural_exponential() (in module openpnm.models.physics.source_terms)": [[936, "openpnm.models.physics.source_terms.natural_exponential"]], "natural_logarithm() (in module openpnm.models.physics.source_terms)": [[937, "openpnm.models.physics.source_terms.natural_logarithm"]], "power_law() (in module openpnm.models.physics.source_terms)": [[938, "openpnm.models.physics.source_terms.power_law"]], "standard_kinetics() (in module openpnm.models.physics.source_terms)": [[939, "openpnm.models.physics.source_terms.standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[940, "module-openpnm.models.physics.thermal_conductance"]], "generic_thermal() (in module openpnm.models.physics.thermal_conductance)": [[941, "openpnm.models.physics.thermal_conductance.generic_thermal"]], "series_resistors() (in module openpnm.models.physics.thermal_conductance)": [[942, "openpnm.models.physics.thermal_conductance.series_resistors"]], "openpnm.network": [[943, "module-openpnm.network"]], "bodycenteredcubic (class in openpnm.network)": [[944, "openpnm.network.BodyCenteredCubic"]], "add_boundary_pores() (bodycenteredcubic method)": [[945, "openpnm.network.BodyCenteredCubic.add_boundary_pores"]], "add_model() (bodycenteredcubic method)": [[946, "openpnm.network.BodyCenteredCubic.add_model"]], "add_model_collection() (bodycenteredcubic method)": [[947, "openpnm.network.BodyCenteredCubic.add_model_collection"]], "clear() (bodycenteredcubic method)": [[948, "openpnm.network.BodyCenteredCubic.clear"]], "copy() (bodycenteredcubic method)": [[949, "openpnm.network.BodyCenteredCubic.copy"]], "create_adjacency_matrix() (bodycenteredcubic method)": [[950, "openpnm.network.BodyCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (bodycenteredcubic method)": [[951, "openpnm.network.BodyCenteredCubic.create_incidence_matrix"]], "filter_by_label() (bodycenteredcubic method)": [[952, "openpnm.network.BodyCenteredCubic.filter_by_label"]], "find_connected_pores() (bodycenteredcubic method)": [[953, "openpnm.network.BodyCenteredCubic.find_connected_pores"]], "find_connecting_throat() (bodycenteredcubic method)": [[954, "openpnm.network.BodyCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (bodycenteredcubic method)": [[955, "openpnm.network.BodyCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (bodycenteredcubic method)": [[956, "openpnm.network.BodyCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (bodycenteredcubic method)": [[957, "openpnm.network.BodyCenteredCubic.find_neighbor_throats"]], "fromkeys() (bodycenteredcubic method)": [[958, "openpnm.network.BodyCenteredCubic.fromkeys"]], "get() (bodycenteredcubic method)": [[959, "openpnm.network.BodyCenteredCubic.get"]], "get_adjacency_matrix() (bodycenteredcubic method)": [[960, "openpnm.network.BodyCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (bodycenteredcubic method)": [[961, "openpnm.network.BodyCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (bodycenteredcubic method)": [[962, "openpnm.network.BodyCenteredCubic.get_incidence_matrix"]], "interpolate_data() (bodycenteredcubic method)": [[963, "openpnm.network.BodyCenteredCubic.interpolate_data"]], "items() (bodycenteredcubic method)": [[964, "openpnm.network.BodyCenteredCubic.items"]], "keys() (bodycenteredcubic method)": [[965, "openpnm.network.BodyCenteredCubic.keys"]], "labels() (bodycenteredcubic method)": [[966, "openpnm.network.BodyCenteredCubic.labels"]], "num_neighbors() (bodycenteredcubic method)": [[967, "openpnm.network.BodyCenteredCubic.num_neighbors"]], "num_pores() (bodycenteredcubic method)": [[968, "openpnm.network.BodyCenteredCubic.num_pores"]], "num_throats() (bodycenteredcubic method)": [[969, "openpnm.network.BodyCenteredCubic.num_throats"]], "pop() (bodycenteredcubic method)": [[970, "openpnm.network.BodyCenteredCubic.pop"]], "popitem() (bodycenteredcubic method)": [[971, "openpnm.network.BodyCenteredCubic.popitem"]], "pores() (bodycenteredcubic method)": [[972, "openpnm.network.BodyCenteredCubic.pores"]], "props() (bodycenteredcubic method)": [[973, "openpnm.network.BodyCenteredCubic.props"]], "regenerate_models() (bodycenteredcubic method)": [[974, "openpnm.network.BodyCenteredCubic.regenerate_models"]], "run_model() (bodycenteredcubic method)": [[975, "openpnm.network.BodyCenteredCubic.run_model"]], "set_label() (bodycenteredcubic method)": [[976, "openpnm.network.BodyCenteredCubic.set_label"]], "setdefault() (bodycenteredcubic method)": [[977, "openpnm.network.BodyCenteredCubic.setdefault"]], "throats() (bodycenteredcubic method)": [[978, "openpnm.network.BodyCenteredCubic.throats"]], "to_indices() (bodycenteredcubic method)": [[979, "openpnm.network.BodyCenteredCubic.to_indices"]], "to_mask() (bodycenteredcubic method)": [[980, "openpnm.network.BodyCenteredCubic.to_mask"]], "update() (bodycenteredcubic method)": [[981, "openpnm.network.BodyCenteredCubic.update"]], "values() (bodycenteredcubic method)": [[982, "openpnm.network.BodyCenteredCubic.values"]], "cubic (class in openpnm.network)": [[983, "openpnm.network.Cubic"]], "add_boundary_pores() (cubic method)": [[984, "openpnm.network.Cubic.add_boundary_pores"]], "add_model() (cubic method)": [[985, "openpnm.network.Cubic.add_model"]], "add_model_collection() (cubic method)": [[986, "openpnm.network.Cubic.add_model_collection"]], "clear() (cubic method)": [[987, "openpnm.network.Cubic.clear"]], "copy() (cubic method)": [[988, "openpnm.network.Cubic.copy"]], "create_adjacency_matrix() (cubic method)": [[989, "openpnm.network.Cubic.create_adjacency_matrix"]], "create_incidence_matrix() (cubic method)": [[990, "openpnm.network.Cubic.create_incidence_matrix"]], "filter_by_label() (cubic method)": [[991, "openpnm.network.Cubic.filter_by_label"]], "find_connected_pores() (cubic method)": [[992, "openpnm.network.Cubic.find_connected_pores"]], "find_connecting_throat() (cubic method)": [[993, "openpnm.network.Cubic.find_connecting_throat"]], "find_nearby_pores() (cubic method)": [[994, "openpnm.network.Cubic.find_nearby_pores"]], "find_neighbor_pores() (cubic method)": [[995, "openpnm.network.Cubic.find_neighbor_pores"]], "find_neighbor_throats() (cubic method)": [[996, "openpnm.network.Cubic.find_neighbor_throats"]], "fromkeys() (cubic method)": [[997, "openpnm.network.Cubic.fromkeys"]], "get() (cubic method)": [[998, "openpnm.network.Cubic.get"]], "get_adjacency_matrix() (cubic method)": [[999, "openpnm.network.Cubic.get_adjacency_matrix"]], "get_conduit_data() (cubic method)": [[1000, "openpnm.network.Cubic.get_conduit_data"]], "get_incidence_matrix() (cubic method)": [[1001, "openpnm.network.Cubic.get_incidence_matrix"]], "interpolate_data() (cubic method)": [[1002, "openpnm.network.Cubic.interpolate_data"]], "items() (cubic method)": [[1003, "openpnm.network.Cubic.items"]], "keys() (cubic method)": [[1004, "openpnm.network.Cubic.keys"]], "labels() (cubic method)": [[1005, "openpnm.network.Cubic.labels"]], "num_neighbors() (cubic method)": [[1006, "openpnm.network.Cubic.num_neighbors"]], "num_pores() (cubic method)": [[1007, "openpnm.network.Cubic.num_pores"]], "num_throats() (cubic method)": [[1008, "openpnm.network.Cubic.num_throats"]], "pop() (cubic method)": [[1009, "openpnm.network.Cubic.pop"]], "popitem() (cubic method)": [[1010, "openpnm.network.Cubic.popitem"]], "pores() (cubic method)": [[1011, "openpnm.network.Cubic.pores"]], "props() (cubic method)": [[1012, "openpnm.network.Cubic.props"]], "regenerate_models() (cubic method)": [[1013, "openpnm.network.Cubic.regenerate_models"]], "run_model() (cubic method)": [[1014, "openpnm.network.Cubic.run_model"]], "set_label() (cubic method)": [[1015, "openpnm.network.Cubic.set_label"]], "setdefault() (cubic method)": [[1016, "openpnm.network.Cubic.setdefault"]], "throats() (cubic method)": [[1017, "openpnm.network.Cubic.throats"]], "to_indices() (cubic method)": [[1018, "openpnm.network.Cubic.to_indices"]], "to_mask() (cubic method)": [[1019, "openpnm.network.Cubic.to_mask"]], "update() (cubic method)": [[1020, "openpnm.network.Cubic.update"]], "values() (cubic method)": [[1021, "openpnm.network.Cubic.values"]], "cubictemplate (class in openpnm.network)": [[1022, "openpnm.network.CubicTemplate"]], "add_model() (cubictemplate method)": [[1023, "openpnm.network.CubicTemplate.add_model"]], "add_model_collection() (cubictemplate method)": [[1024, "openpnm.network.CubicTemplate.add_model_collection"]], "clear() (cubictemplate method)": [[1025, "openpnm.network.CubicTemplate.clear"]], "copy() (cubictemplate method)": [[1026, "openpnm.network.CubicTemplate.copy"]], "create_adjacency_matrix() (cubictemplate method)": [[1027, "openpnm.network.CubicTemplate.create_adjacency_matrix"]], "create_incidence_matrix() (cubictemplate method)": [[1028, "openpnm.network.CubicTemplate.create_incidence_matrix"]], "filter_by_label() (cubictemplate method)": [[1029, "openpnm.network.CubicTemplate.filter_by_label"]], "find_connected_pores() (cubictemplate method)": [[1030, "openpnm.network.CubicTemplate.find_connected_pores"]], "find_connecting_throat() (cubictemplate method)": [[1031, "openpnm.network.CubicTemplate.find_connecting_throat"]], "find_nearby_pores() (cubictemplate method)": [[1032, "openpnm.network.CubicTemplate.find_nearby_pores"]], "find_neighbor_pores() (cubictemplate method)": [[1033, "openpnm.network.CubicTemplate.find_neighbor_pores"]], "find_neighbor_throats() (cubictemplate method)": [[1034, "openpnm.network.CubicTemplate.find_neighbor_throats"]], "fromkeys() (cubictemplate method)": [[1035, "openpnm.network.CubicTemplate.fromkeys"]], "get() (cubictemplate method)": [[1036, "openpnm.network.CubicTemplate.get"]], "get_adjacency_matrix() (cubictemplate method)": [[1037, "openpnm.network.CubicTemplate.get_adjacency_matrix"]], "get_conduit_data() (cubictemplate method)": [[1038, "openpnm.network.CubicTemplate.get_conduit_data"]], "get_incidence_matrix() (cubictemplate method)": [[1039, "openpnm.network.CubicTemplate.get_incidence_matrix"]], "interpolate_data() (cubictemplate method)": [[1040, "openpnm.network.CubicTemplate.interpolate_data"]], "items() (cubictemplate method)": [[1041, "openpnm.network.CubicTemplate.items"]], "keys() (cubictemplate method)": [[1042, "openpnm.network.CubicTemplate.keys"]], "labels() (cubictemplate method)": [[1043, "openpnm.network.CubicTemplate.labels"]], "num_neighbors() (cubictemplate method)": [[1044, "openpnm.network.CubicTemplate.num_neighbors"]], "num_pores() (cubictemplate method)": [[1045, "openpnm.network.CubicTemplate.num_pores"]], "num_throats() (cubictemplate method)": [[1046, "openpnm.network.CubicTemplate.num_throats"]], "pop() (cubictemplate method)": [[1047, "openpnm.network.CubicTemplate.pop"]], "popitem() (cubictemplate method)": [[1048, "openpnm.network.CubicTemplate.popitem"]], "pores() (cubictemplate method)": [[1049, "openpnm.network.CubicTemplate.pores"]], "props() (cubictemplate method)": [[1050, "openpnm.network.CubicTemplate.props"]], "regenerate_models() (cubictemplate method)": [[1051, "openpnm.network.CubicTemplate.regenerate_models"]], "run_model() (cubictemplate method)": [[1052, "openpnm.network.CubicTemplate.run_model"]], "set_label() (cubictemplate method)": [[1053, "openpnm.network.CubicTemplate.set_label"]], "setdefault() (cubictemplate method)": [[1054, "openpnm.network.CubicTemplate.setdefault"]], "throats() (cubictemplate method)": [[1055, "openpnm.network.CubicTemplate.throats"]], "to_indices() (cubictemplate method)": [[1056, "openpnm.network.CubicTemplate.to_indices"]], "to_mask() (cubictemplate method)": [[1057, "openpnm.network.CubicTemplate.to_mask"]], "update() (cubictemplate method)": [[1058, "openpnm.network.CubicTemplate.update"]], "values() (cubictemplate method)": [[1059, "openpnm.network.CubicTemplate.values"]], "delaunay (class in openpnm.network)": [[1060, "openpnm.network.Delaunay"]], "add_model() (delaunay method)": [[1061, "openpnm.network.Delaunay.add_model"]], "add_model_collection() (delaunay method)": [[1062, "openpnm.network.Delaunay.add_model_collection"]], "clear() (delaunay method)": [[1063, "openpnm.network.Delaunay.clear"]], "copy() (delaunay method)": [[1064, "openpnm.network.Delaunay.copy"]], "create_adjacency_matrix() (delaunay method)": [[1065, "openpnm.network.Delaunay.create_adjacency_matrix"]], "create_incidence_matrix() (delaunay method)": [[1066, "openpnm.network.Delaunay.create_incidence_matrix"]], "filter_by_label() (delaunay method)": [[1067, "openpnm.network.Delaunay.filter_by_label"]], "find_connected_pores() (delaunay method)": [[1068, "openpnm.network.Delaunay.find_connected_pores"]], "find_connecting_throat() (delaunay method)": [[1069, "openpnm.network.Delaunay.find_connecting_throat"]], "find_nearby_pores() (delaunay method)": [[1070, "openpnm.network.Delaunay.find_nearby_pores"]], "find_neighbor_pores() (delaunay method)": [[1071, "openpnm.network.Delaunay.find_neighbor_pores"]], "find_neighbor_throats() (delaunay method)": [[1072, "openpnm.network.Delaunay.find_neighbor_throats"]], "fromkeys() (delaunay method)": [[1073, "openpnm.network.Delaunay.fromkeys"]], "get() (delaunay method)": [[1074, "openpnm.network.Delaunay.get"]], "get_adjacency_matrix() (delaunay method)": [[1075, "openpnm.network.Delaunay.get_adjacency_matrix"]], "get_conduit_data() (delaunay method)": [[1076, "openpnm.network.Delaunay.get_conduit_data"]], "get_incidence_matrix() (delaunay method)": [[1077, "openpnm.network.Delaunay.get_incidence_matrix"]], "interpolate_data() (delaunay method)": [[1078, "openpnm.network.Delaunay.interpolate_data"]], "items() (delaunay method)": [[1079, "openpnm.network.Delaunay.items"]], "keys() (delaunay method)": [[1080, "openpnm.network.Delaunay.keys"]], "labels() (delaunay method)": [[1081, "openpnm.network.Delaunay.labels"]], "num_neighbors() (delaunay method)": [[1082, "openpnm.network.Delaunay.num_neighbors"]], "num_pores() (delaunay method)": [[1083, "openpnm.network.Delaunay.num_pores"]], "num_throats() (delaunay method)": [[1084, "openpnm.network.Delaunay.num_throats"]], "pop() (delaunay method)": [[1085, "openpnm.network.Delaunay.pop"]], "popitem() (delaunay method)": [[1086, "openpnm.network.Delaunay.popitem"]], "pores() (delaunay method)": [[1087, "openpnm.network.Delaunay.pores"]], "props() (delaunay method)": [[1088, "openpnm.network.Delaunay.props"]], "regenerate_models() (delaunay method)": [[1089, "openpnm.network.Delaunay.regenerate_models"]], "run_model() (delaunay method)": [[1090, "openpnm.network.Delaunay.run_model"]], "set_label() (delaunay method)": [[1091, "openpnm.network.Delaunay.set_label"]], "setdefault() (delaunay method)": [[1092, "openpnm.network.Delaunay.setdefault"]], "throats() (delaunay method)": [[1093, "openpnm.network.Delaunay.throats"]], "to_indices() (delaunay method)": [[1094, "openpnm.network.Delaunay.to_indices"]], "to_mask() (delaunay method)": [[1095, "openpnm.network.Delaunay.to_mask"]], "update() (delaunay method)": [[1096, "openpnm.network.Delaunay.update"]], "values() (delaunay method)": [[1097, "openpnm.network.Delaunay.values"]], "delaunayvoronoidual (class in openpnm.network)": [[1098, "openpnm.network.DelaunayVoronoiDual"]], "add_model() (delaunayvoronoidual method)": [[1099, "openpnm.network.DelaunayVoronoiDual.add_model"]], "add_model_collection() (delaunayvoronoidual method)": [[1100, "openpnm.network.DelaunayVoronoiDual.add_model_collection"]], "clear() (delaunayvoronoidual method)": [[1101, "openpnm.network.DelaunayVoronoiDual.clear"]], "copy() (delaunayvoronoidual method)": [[1102, "openpnm.network.DelaunayVoronoiDual.copy"]], "create_adjacency_matrix() (delaunayvoronoidual method)": [[1103, "openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix"]], "create_incidence_matrix() (delaunayvoronoidual method)": [[1104, "openpnm.network.DelaunayVoronoiDual.create_incidence_matrix"]], "filter_by_label() (delaunayvoronoidual method)": [[1105, "openpnm.network.DelaunayVoronoiDual.filter_by_label"]], "find_connected_pores() (delaunayvoronoidual method)": [[1106, "openpnm.network.DelaunayVoronoiDual.find_connected_pores"]], "find_connecting_throat() (delaunayvoronoidual method)": [[1107, "openpnm.network.DelaunayVoronoiDual.find_connecting_throat"]], "find_nearby_pores() (delaunayvoronoidual method)": [[1108, "openpnm.network.DelaunayVoronoiDual.find_nearby_pores"]], "find_neighbor_pores() (delaunayvoronoidual method)": [[1109, "openpnm.network.DelaunayVoronoiDual.find_neighbor_pores"]], "find_neighbor_throats() (delaunayvoronoidual method)": [[1110, "openpnm.network.DelaunayVoronoiDual.find_neighbor_throats"]], "find_pore_hulls() (delaunayvoronoidual method)": [[1111, "openpnm.network.DelaunayVoronoiDual.find_pore_hulls"]], "find_throat_facets() (delaunayvoronoidual method)": [[1112, "openpnm.network.DelaunayVoronoiDual.find_throat_facets"]], "fromkeys() (delaunayvoronoidual method)": [[1113, "openpnm.network.DelaunayVoronoiDual.fromkeys"]], "get() (delaunayvoronoidual method)": [[1114, "openpnm.network.DelaunayVoronoiDual.get"]], "get_adjacency_matrix() (delaunayvoronoidual method)": [[1115, "openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix"]], "get_conduit_data() (delaunayvoronoidual method)": [[1116, "openpnm.network.DelaunayVoronoiDual.get_conduit_data"]], "get_incidence_matrix() (delaunayvoronoidual method)": [[1117, "openpnm.network.DelaunayVoronoiDual.get_incidence_matrix"]], "interpolate_data() (delaunayvoronoidual method)": [[1118, "openpnm.network.DelaunayVoronoiDual.interpolate_data"]], "items() (delaunayvoronoidual method)": [[1119, "openpnm.network.DelaunayVoronoiDual.items"]], "keys() (delaunayvoronoidual method)": [[1120, "openpnm.network.DelaunayVoronoiDual.keys"]], "labels() (delaunayvoronoidual method)": [[1121, "openpnm.network.DelaunayVoronoiDual.labels"]], "num_neighbors() (delaunayvoronoidual method)": [[1122, "openpnm.network.DelaunayVoronoiDual.num_neighbors"]], "num_pores() (delaunayvoronoidual method)": [[1123, "openpnm.network.DelaunayVoronoiDual.num_pores"]], "num_throats() (delaunayvoronoidual method)": [[1124, "openpnm.network.DelaunayVoronoiDual.num_throats"]], "pop() (delaunayvoronoidual method)": [[1125, "openpnm.network.DelaunayVoronoiDual.pop"]], "popitem() (delaunayvoronoidual method)": [[1126, "openpnm.network.DelaunayVoronoiDual.popitem"]], "pores() (delaunayvoronoidual method)": [[1127, "openpnm.network.DelaunayVoronoiDual.pores"]], "props() (delaunayvoronoidual method)": [[1128, "openpnm.network.DelaunayVoronoiDual.props"]], "regenerate_models() (delaunayvoronoidual method)": [[1129, "openpnm.network.DelaunayVoronoiDual.regenerate_models"]], "run_model() (delaunayvoronoidual method)": [[1130, "openpnm.network.DelaunayVoronoiDual.run_model"]], "set_label() (delaunayvoronoidual method)": [[1131, "openpnm.network.DelaunayVoronoiDual.set_label"]], "setdefault() (delaunayvoronoidual method)": [[1132, "openpnm.network.DelaunayVoronoiDual.setdefault"]], "throats() (delaunayvoronoidual method)": [[1133, "openpnm.network.DelaunayVoronoiDual.throats"]], "to_indices() (delaunayvoronoidual method)": [[1134, "openpnm.network.DelaunayVoronoiDual.to_indices"]], "to_mask() (delaunayvoronoidual method)": [[1135, "openpnm.network.DelaunayVoronoiDual.to_mask"]], "update() (delaunayvoronoidual method)": [[1136, "openpnm.network.DelaunayVoronoiDual.update"]], "values() (delaunayvoronoidual method)": [[1137, "openpnm.network.DelaunayVoronoiDual.values"]], "demo (class in openpnm.network)": [[1138, "openpnm.network.Demo"]], "add_boundary_pores() (demo method)": [[1139, "openpnm.network.Demo.add_boundary_pores"]], "add_model() (demo method)": [[1140, "openpnm.network.Demo.add_model"]], "add_model_collection() (demo method)": [[1141, "openpnm.network.Demo.add_model_collection"]], "clear() (demo method)": [[1142, "openpnm.network.Demo.clear"]], "copy() (demo method)": [[1143, "openpnm.network.Demo.copy"]], "create_adjacency_matrix() (demo method)": [[1144, "openpnm.network.Demo.create_adjacency_matrix"]], "create_incidence_matrix() (demo method)": [[1145, "openpnm.network.Demo.create_incidence_matrix"]], "filter_by_label() (demo method)": [[1146, "openpnm.network.Demo.filter_by_label"]], "find_connected_pores() (demo method)": [[1147, "openpnm.network.Demo.find_connected_pores"]], "find_connecting_throat() (demo method)": [[1148, "openpnm.network.Demo.find_connecting_throat"]], "find_nearby_pores() (demo method)": [[1149, "openpnm.network.Demo.find_nearby_pores"]], "find_neighbor_pores() (demo method)": [[1150, "openpnm.network.Demo.find_neighbor_pores"]], "find_neighbor_throats() (demo method)": [[1151, "openpnm.network.Demo.find_neighbor_throats"]], "fromkeys() (demo method)": [[1152, "openpnm.network.Demo.fromkeys"]], "get() (demo method)": [[1153, "openpnm.network.Demo.get"]], "get_adjacency_matrix() (demo method)": [[1154, "openpnm.network.Demo.get_adjacency_matrix"]], "get_conduit_data() (demo method)": [[1155, "openpnm.network.Demo.get_conduit_data"]], "get_incidence_matrix() (demo method)": [[1156, "openpnm.network.Demo.get_incidence_matrix"]], "interpolate_data() (demo method)": [[1157, "openpnm.network.Demo.interpolate_data"]], "items() (demo method)": [[1158, "openpnm.network.Demo.items"]], "keys() (demo method)": [[1159, "openpnm.network.Demo.keys"]], "labels() (demo method)": [[1160, "openpnm.network.Demo.labels"]], "num_neighbors() (demo method)": [[1161, "openpnm.network.Demo.num_neighbors"]], "num_pores() (demo method)": [[1162, "openpnm.network.Demo.num_pores"]], "num_throats() (demo method)": [[1163, "openpnm.network.Demo.num_throats"]], "pop() (demo method)": [[1164, "openpnm.network.Demo.pop"]], "popitem() (demo method)": [[1165, "openpnm.network.Demo.popitem"]], "pores() (demo method)": [[1166, "openpnm.network.Demo.pores"]], "props() (demo method)": [[1167, "openpnm.network.Demo.props"]], "regenerate_models() (demo method)": [[1168, "openpnm.network.Demo.regenerate_models"]], "run_model() (demo method)": [[1169, "openpnm.network.Demo.run_model"]], "set_label() (demo method)": [[1170, "openpnm.network.Demo.set_label"]], "setdefault() (demo method)": [[1171, "openpnm.network.Demo.setdefault"]], "throats() (demo method)": [[1172, "openpnm.network.Demo.throats"]], "to_indices() (demo method)": [[1173, "openpnm.network.Demo.to_indices"]], "to_mask() (demo method)": [[1174, "openpnm.network.Demo.to_mask"]], "update() (demo method)": [[1175, "openpnm.network.Demo.update"]], "values() (demo method)": [[1176, "openpnm.network.Demo.values"]], "facecenteredcubic (class in openpnm.network)": [[1177, "openpnm.network.FaceCenteredCubic"]], "add_boundary_pores() (facecenteredcubic method)": [[1178, "openpnm.network.FaceCenteredCubic.add_boundary_pores"]], "add_model() (facecenteredcubic method)": [[1179, "openpnm.network.FaceCenteredCubic.add_model"]], "add_model_collection() (facecenteredcubic method)": [[1180, "openpnm.network.FaceCenteredCubic.add_model_collection"]], "clear() (facecenteredcubic method)": [[1181, "openpnm.network.FaceCenteredCubic.clear"]], "copy() (facecenteredcubic method)": [[1182, "openpnm.network.FaceCenteredCubic.copy"]], "create_adjacency_matrix() (facecenteredcubic method)": [[1183, "openpnm.network.FaceCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (facecenteredcubic method)": [[1184, "openpnm.network.FaceCenteredCubic.create_incidence_matrix"]], "filter_by_label() (facecenteredcubic method)": [[1185, "openpnm.network.FaceCenteredCubic.filter_by_label"]], "find_connected_pores() (facecenteredcubic method)": [[1186, "openpnm.network.FaceCenteredCubic.find_connected_pores"]], "find_connecting_throat() (facecenteredcubic method)": [[1187, "openpnm.network.FaceCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (facecenteredcubic method)": [[1188, "openpnm.network.FaceCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (facecenteredcubic method)": [[1189, "openpnm.network.FaceCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (facecenteredcubic method)": [[1190, "openpnm.network.FaceCenteredCubic.find_neighbor_throats"]], "fromkeys() (facecenteredcubic method)": [[1191, "openpnm.network.FaceCenteredCubic.fromkeys"]], "get() (facecenteredcubic method)": [[1192, "openpnm.network.FaceCenteredCubic.get"]], "get_adjacency_matrix() (facecenteredcubic method)": [[1193, "openpnm.network.FaceCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (facecenteredcubic method)": [[1194, "openpnm.network.FaceCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (facecenteredcubic method)": [[1195, "openpnm.network.FaceCenteredCubic.get_incidence_matrix"]], "interpolate_data() (facecenteredcubic method)": [[1196, "openpnm.network.FaceCenteredCubic.interpolate_data"]], "items() (facecenteredcubic method)": [[1197, "openpnm.network.FaceCenteredCubic.items"]], "keys() (facecenteredcubic method)": [[1198, "openpnm.network.FaceCenteredCubic.keys"]], "labels() (facecenteredcubic method)": [[1199, "openpnm.network.FaceCenteredCubic.labels"]], "num_neighbors() (facecenteredcubic method)": [[1200, "openpnm.network.FaceCenteredCubic.num_neighbors"]], "num_pores() (facecenteredcubic method)": [[1201, "openpnm.network.FaceCenteredCubic.num_pores"]], "num_throats() (facecenteredcubic method)": [[1202, "openpnm.network.FaceCenteredCubic.num_throats"]], "pop() (facecenteredcubic method)": [[1203, "openpnm.network.FaceCenteredCubic.pop"]], "popitem() (facecenteredcubic method)": [[1204, "openpnm.network.FaceCenteredCubic.popitem"]], "pores() (facecenteredcubic method)": [[1205, "openpnm.network.FaceCenteredCubic.pores"]], "props() (facecenteredcubic method)": [[1206, "openpnm.network.FaceCenteredCubic.props"]], "regenerate_models() (facecenteredcubic method)": [[1207, "openpnm.network.FaceCenteredCubic.regenerate_models"]], "run_model() (facecenteredcubic method)": [[1208, "openpnm.network.FaceCenteredCubic.run_model"]], "set_label() (facecenteredcubic method)": [[1209, "openpnm.network.FaceCenteredCubic.set_label"]], "setdefault() (facecenteredcubic method)": [[1210, "openpnm.network.FaceCenteredCubic.setdefault"]], "throats() (facecenteredcubic method)": [[1211, "openpnm.network.FaceCenteredCubic.throats"]], "to_indices() (facecenteredcubic method)": [[1212, "openpnm.network.FaceCenteredCubic.to_indices"]], "to_mask() (facecenteredcubic method)": [[1213, "openpnm.network.FaceCenteredCubic.to_mask"]], "update() (facecenteredcubic method)": [[1214, "openpnm.network.FaceCenteredCubic.update"]], "values() (facecenteredcubic method)": [[1215, "openpnm.network.FaceCenteredCubic.values"]], "network (class in openpnm.network)": [[1216, "openpnm.network.Network"]], "add_model() (network method)": [[1217, "openpnm.network.Network.add_model"]], "add_model_collection() (network method)": [[1218, "openpnm.network.Network.add_model_collection"]], "clear() (network method)": [[1219, "openpnm.network.Network.clear"]], "copy() (network method)": [[1220, "openpnm.network.Network.copy"]], "create_adjacency_matrix() (network method)": [[1221, "openpnm.network.Network.create_adjacency_matrix"]], "create_incidence_matrix() (network method)": [[1222, "openpnm.network.Network.create_incidence_matrix"]], "filter_by_label() (network method)": [[1223, "openpnm.network.Network.filter_by_label"]], "find_connected_pores() (network method)": [[1224, "openpnm.network.Network.find_connected_pores"]], "find_connecting_throat() (network method)": [[1225, "openpnm.network.Network.find_connecting_throat"]], "find_nearby_pores() (network method)": [[1226, "openpnm.network.Network.find_nearby_pores"]], "find_neighbor_pores() (network method)": [[1227, "openpnm.network.Network.find_neighbor_pores"]], "find_neighbor_throats() (network method)": [[1228, "openpnm.network.Network.find_neighbor_throats"]], "fromkeys() (network method)": [[1229, "openpnm.network.Network.fromkeys"]], "get() (network method)": [[1230, "openpnm.network.Network.get"]], "get_adjacency_matrix() (network method)": [[1231, "openpnm.network.Network.get_adjacency_matrix"]], "get_conduit_data() (network method)": [[1232, "openpnm.network.Network.get_conduit_data"]], "get_incidence_matrix() (network method)": [[1233, "openpnm.network.Network.get_incidence_matrix"]], "interpolate_data() (network method)": [[1234, "openpnm.network.Network.interpolate_data"]], "items() (network method)": [[1235, "openpnm.network.Network.items"]], "keys() (network method)": [[1236, "openpnm.network.Network.keys"]], "labels() (network method)": [[1237, "openpnm.network.Network.labels"]], "num_neighbors() (network method)": [[1238, "openpnm.network.Network.num_neighbors"]], "num_pores() (network method)": [[1239, "openpnm.network.Network.num_pores"]], "num_throats() (network method)": [[1240, "openpnm.network.Network.num_throats"]], "pop() (network method)": [[1241, "openpnm.network.Network.pop"]], "popitem() (network method)": [[1242, "openpnm.network.Network.popitem"]], "pores() (network method)": [[1243, "openpnm.network.Network.pores"]], "props() (network method)": [[1244, "openpnm.network.Network.props"]], "regenerate_models() (network method)": [[1245, "openpnm.network.Network.regenerate_models"]], "run_model() (network method)": [[1246, "openpnm.network.Network.run_model"]], "set_label() (network method)": [[1247, "openpnm.network.Network.set_label"]], "setdefault() (network method)": [[1248, "openpnm.network.Network.setdefault"]], "throats() (network method)": [[1249, "openpnm.network.Network.throats"]], "to_indices() (network method)": [[1250, "openpnm.network.Network.to_indices"]], "to_mask() (network method)": [[1251, "openpnm.network.Network.to_mask"]], "update() (network method)": [[1252, "openpnm.network.Network.update"]], "values() (network method)": [[1253, "openpnm.network.Network.values"]], "voronoi (class in openpnm.network)": [[1254, "openpnm.network.Voronoi"]], "add_model() (voronoi method)": [[1255, "openpnm.network.Voronoi.add_model"]], "add_model_collection() (voronoi method)": [[1256, "openpnm.network.Voronoi.add_model_collection"]], "clear() (voronoi method)": [[1257, "openpnm.network.Voronoi.clear"]], "copy() (voronoi method)": [[1258, "openpnm.network.Voronoi.copy"]], "create_adjacency_matrix() (voronoi method)": [[1259, "openpnm.network.Voronoi.create_adjacency_matrix"]], "create_incidence_matrix() (voronoi method)": [[1260, "openpnm.network.Voronoi.create_incidence_matrix"]], "filter_by_label() (voronoi method)": [[1261, "openpnm.network.Voronoi.filter_by_label"]], "find_connected_pores() (voronoi method)": [[1262, "openpnm.network.Voronoi.find_connected_pores"]], "find_connecting_throat() (voronoi method)": [[1263, "openpnm.network.Voronoi.find_connecting_throat"]], "find_nearby_pores() (voronoi method)": [[1264, "openpnm.network.Voronoi.find_nearby_pores"]], "find_neighbor_pores() (voronoi method)": [[1265, "openpnm.network.Voronoi.find_neighbor_pores"]], "find_neighbor_throats() (voronoi method)": [[1266, "openpnm.network.Voronoi.find_neighbor_throats"]], "fromkeys() (voronoi method)": [[1267, "openpnm.network.Voronoi.fromkeys"]], "get() (voronoi method)": [[1268, "openpnm.network.Voronoi.get"]], "get_adjacency_matrix() (voronoi method)": [[1269, "openpnm.network.Voronoi.get_adjacency_matrix"]], "get_conduit_data() (voronoi method)": [[1270, "openpnm.network.Voronoi.get_conduit_data"]], "get_incidence_matrix() (voronoi method)": [[1271, "openpnm.network.Voronoi.get_incidence_matrix"]], "interpolate_data() (voronoi method)": [[1272, "openpnm.network.Voronoi.interpolate_data"]], "items() (voronoi method)": [[1273, "openpnm.network.Voronoi.items"]], "keys() (voronoi method)": [[1274, "openpnm.network.Voronoi.keys"]], "labels() (voronoi method)": [[1275, "openpnm.network.Voronoi.labels"]], "num_neighbors() (voronoi method)": [[1276, "openpnm.network.Voronoi.num_neighbors"]], "num_pores() (voronoi method)": [[1277, "openpnm.network.Voronoi.num_pores"]], "num_throats() (voronoi method)": [[1278, "openpnm.network.Voronoi.num_throats"]], "pop() (voronoi method)": [[1279, "openpnm.network.Voronoi.pop"]], "popitem() (voronoi method)": [[1280, "openpnm.network.Voronoi.popitem"]], "pores() (voronoi method)": [[1281, "openpnm.network.Voronoi.pores"]], "props() (voronoi method)": [[1282, "openpnm.network.Voronoi.props"]], "regenerate_models() (voronoi method)": [[1283, "openpnm.network.Voronoi.regenerate_models"]], "run_model() (voronoi method)": [[1284, "openpnm.network.Voronoi.run_model"]], "set_label() (voronoi method)": [[1285, "openpnm.network.Voronoi.set_label"]], "setdefault() (voronoi method)": [[1286, "openpnm.network.Voronoi.setdefault"]], "throats() (voronoi method)": [[1287, "openpnm.network.Voronoi.throats"]], "to_indices() (voronoi method)": [[1288, "openpnm.network.Voronoi.to_indices"]], "to_mask() (voronoi method)": [[1289, "openpnm.network.Voronoi.to_mask"]], "update() (voronoi method)": [[1290, "openpnm.network.Voronoi.update"]], "values() (voronoi method)": [[1291, "openpnm.network.Voronoi.values"]], "openpnm.phase": [[1292, "module-openpnm.phase"]], "air (class in openpnm.phase)": [[1293, "openpnm.phase.Air"]], "add_model() (air method)": [[1294, "openpnm.phase.Air.add_model"]], "add_model_collection() (air method)": [[1295, "openpnm.phase.Air.add_model_collection"]], "clear() (air method)": [[1296, "openpnm.phase.Air.clear"]], "copy() (air method)": [[1297, "openpnm.phase.Air.copy"]], "filter_by_label() (air method)": [[1298, "openpnm.phase.Air.filter_by_label"]], "fromkeys() (air method)": [[1299, "openpnm.phase.Air.fromkeys"]], "get() (air method)": [[1300, "openpnm.phase.Air.get"]], "get_conduit_data() (air method)": [[1301, "openpnm.phase.Air.get_conduit_data"]], "interpolate_data() (air method)": [[1302, "openpnm.phase.Air.interpolate_data"]], "items() (air method)": [[1303, "openpnm.phase.Air.items"]], "keys() (air method)": [[1304, "openpnm.phase.Air.keys"]], "labels() (air method)": [[1305, "openpnm.phase.Air.labels"]], "num_pores() (air method)": [[1306, "openpnm.phase.Air.num_pores"]], "num_throats() (air method)": [[1307, "openpnm.phase.Air.num_throats"]], "pop() (air method)": [[1308, "openpnm.phase.Air.pop"]], "popitem() (air method)": [[1309, "openpnm.phase.Air.popitem"]], "pores() (air method)": [[1310, "openpnm.phase.Air.pores"]], "props() (air method)": [[1311, "openpnm.phase.Air.props"]], "regenerate_models() (air method)": [[1312, "openpnm.phase.Air.regenerate_models"]], "run_model() (air method)": [[1313, "openpnm.phase.Air.run_model"]], "set_label() (air method)": [[1314, "openpnm.phase.Air.set_label"]], "setdefault() (air method)": [[1315, "openpnm.phase.Air.setdefault"]], "throats() (air method)": [[1316, "openpnm.phase.Air.throats"]], "to_indices() (air method)": [[1317, "openpnm.phase.Air.to_indices"]], "to_mask() (air method)": [[1318, "openpnm.phase.Air.to_mask"]], "update() (air method)": [[1319, "openpnm.phase.Air.update"]], "values() (air method)": [[1320, "openpnm.phase.Air.values"]], "binarygas (class in openpnm.phase)": [[1321, "openpnm.phase.BinaryGas"]], "add_comp() (binarygas method)": [[1322, "openpnm.phase.BinaryGas.add_comp"]], "add_model() (binarygas method)": [[1323, "openpnm.phase.BinaryGas.add_model"]], "add_model_collection() (binarygas method)": [[1324, "openpnm.phase.BinaryGas.add_model_collection"]], "check_mixture_health() (binarygas method)": [[1325, "openpnm.phase.BinaryGas.check_mixture_health"]], "clear() (binarygas method)": [[1326, "openpnm.phase.BinaryGas.clear"]], "copy() (binarygas method)": [[1327, "openpnm.phase.BinaryGas.copy"]], "filter_by_label() (binarygas method)": [[1328, "openpnm.phase.BinaryGas.filter_by_label"]], "fromkeys() (binarygas method)": [[1329, "openpnm.phase.BinaryGas.fromkeys"]], "get() (binarygas method)": [[1330, "openpnm.phase.BinaryGas.get"]], "get_comp_vals() (binarygas method)": [[1331, "openpnm.phase.BinaryGas.get_comp_vals"]], "get_conduit_data() (binarygas method)": [[1332, "openpnm.phase.BinaryGas.get_conduit_data"]], "get_mix_vals() (binarygas method)": [[1333, "openpnm.phase.BinaryGas.get_mix_vals"]], "interpolate_data() (binarygas method)": [[1334, "openpnm.phase.BinaryGas.interpolate_data"]], "items() (binarygas method)": [[1335, "openpnm.phase.BinaryGas.items"]], "keys() (binarygas method)": [[1336, "openpnm.phase.BinaryGas.keys"]], "labels() (binarygas method)": [[1337, "openpnm.phase.BinaryGas.labels"]], "num_pores() (binarygas method)": [[1338, "openpnm.phase.BinaryGas.num_pores"]], "num_throats() (binarygas method)": [[1339, "openpnm.phase.BinaryGas.num_throats"]], "pop() (binarygas method)": [[1340, "openpnm.phase.BinaryGas.pop"]], "popitem() (binarygas method)": [[1341, "openpnm.phase.BinaryGas.popitem"]], "pores() (binarygas method)": [[1342, "openpnm.phase.BinaryGas.pores"]], "props() (binarygas method)": [[1343, "openpnm.phase.BinaryGas.props"]], "regenerate_models() (binarygas method)": [[1344, "openpnm.phase.BinaryGas.regenerate_models"]], "remove_comp() (binarygas method)": [[1345, "openpnm.phase.BinaryGas.remove_comp"]], "run_model() (binarygas method)": [[1346, "openpnm.phase.BinaryGas.run_model"]], "set_label() (binarygas method)": [[1347, "openpnm.phase.BinaryGas.set_label"]], "setdefault() (binarygas method)": [[1348, "openpnm.phase.BinaryGas.setdefault"]], "throats() (binarygas method)": [[1349, "openpnm.phase.BinaryGas.throats"]], "to_indices() (binarygas method)": [[1350, "openpnm.phase.BinaryGas.to_indices"]], "to_mask() (binarygas method)": [[1351, "openpnm.phase.BinaryGas.to_mask"]], "update() (binarygas method)": [[1352, "openpnm.phase.BinaryGas.update"]], "values() (binarygas method)": [[1353, "openpnm.phase.BinaryGas.values"]], "y() (binarygas method)": [[1354, "openpnm.phase.BinaryGas.y"]], "gasmixture (class in openpnm.phase)": [[1355, "openpnm.phase.GasMixture"]], "add_comp() (gasmixture method)": [[1356, "openpnm.phase.GasMixture.add_comp"]], "add_model() (gasmixture method)": [[1357, "openpnm.phase.GasMixture.add_model"]], "add_model_collection() (gasmixture method)": [[1358, "openpnm.phase.GasMixture.add_model_collection"]], "check_mixture_health() (gasmixture method)": [[1359, "openpnm.phase.GasMixture.check_mixture_health"]], "clear() (gasmixture method)": [[1360, "openpnm.phase.GasMixture.clear"]], "copy() (gasmixture method)": [[1361, "openpnm.phase.GasMixture.copy"]], "filter_by_label() (gasmixture method)": [[1362, "openpnm.phase.GasMixture.filter_by_label"]], "fromkeys() (gasmixture method)": [[1363, "openpnm.phase.GasMixture.fromkeys"]], "get() (gasmixture method)": [[1364, "openpnm.phase.GasMixture.get"]], "get_comp_vals() (gasmixture method)": [[1365, "openpnm.phase.GasMixture.get_comp_vals"]], "get_conduit_data() (gasmixture method)": [[1366, "openpnm.phase.GasMixture.get_conduit_data"]], "get_mix_vals() (gasmixture method)": [[1367, "openpnm.phase.GasMixture.get_mix_vals"]], "interpolate_data() (gasmixture method)": [[1368, "openpnm.phase.GasMixture.interpolate_data"]], "items() (gasmixture method)": [[1369, "openpnm.phase.GasMixture.items"]], "keys() (gasmixture method)": [[1370, "openpnm.phase.GasMixture.keys"]], "labels() (gasmixture method)": [[1371, "openpnm.phase.GasMixture.labels"]], "num_pores() (gasmixture method)": [[1372, "openpnm.phase.GasMixture.num_pores"]], "num_throats() (gasmixture method)": [[1373, "openpnm.phase.GasMixture.num_throats"]], "pop() (gasmixture method)": [[1374, "openpnm.phase.GasMixture.pop"]], "popitem() (gasmixture method)": [[1375, "openpnm.phase.GasMixture.popitem"]], "pores() (gasmixture method)": [[1376, "openpnm.phase.GasMixture.pores"]], "props() (gasmixture method)": [[1377, "openpnm.phase.GasMixture.props"]], "regenerate_models() (gasmixture method)": [[1378, "openpnm.phase.GasMixture.regenerate_models"]], "remove_comp() (gasmixture method)": [[1379, "openpnm.phase.GasMixture.remove_comp"]], "run_model() (gasmixture method)": [[1380, "openpnm.phase.GasMixture.run_model"]], "set_label() (gasmixture method)": [[1381, "openpnm.phase.GasMixture.set_label"]], "setdefault() (gasmixture method)": [[1382, "openpnm.phase.GasMixture.setdefault"]], "throats() (gasmixture method)": [[1383, "openpnm.phase.GasMixture.throats"]], "to_indices() (gasmixture method)": [[1384, "openpnm.phase.GasMixture.to_indices"]], "to_mask() (gasmixture method)": [[1385, "openpnm.phase.GasMixture.to_mask"]], "update() (gasmixture method)": [[1386, "openpnm.phase.GasMixture.update"]], "values() (gasmixture method)": [[1387, "openpnm.phase.GasMixture.values"]], "y() (gasmixture method)": [[1388, "openpnm.phase.GasMixture.y"]], "liquidmixture (class in openpnm.phase)": [[1389, "openpnm.phase.LiquidMixture"]], "add_comp() (liquidmixture method)": [[1390, "openpnm.phase.LiquidMixture.add_comp"]], "add_model() (liquidmixture method)": [[1391, "openpnm.phase.LiquidMixture.add_model"]], "add_model_collection() (liquidmixture method)": [[1392, "openpnm.phase.LiquidMixture.add_model_collection"]], "check_mixture_health() (liquidmixture method)": [[1393, "openpnm.phase.LiquidMixture.check_mixture_health"]], "clear() (liquidmixture method)": [[1394, "openpnm.phase.LiquidMixture.clear"]], "copy() (liquidmixture method)": [[1395, "openpnm.phase.LiquidMixture.copy"]], "filter_by_label() (liquidmixture method)": [[1396, "openpnm.phase.LiquidMixture.filter_by_label"]], "fromkeys() (liquidmixture method)": [[1397, "openpnm.phase.LiquidMixture.fromkeys"]], "get() (liquidmixture method)": [[1398, "openpnm.phase.LiquidMixture.get"]], "get_comp_vals() (liquidmixture method)": [[1399, "openpnm.phase.LiquidMixture.get_comp_vals"]], "get_conduit_data() (liquidmixture method)": [[1400, "openpnm.phase.LiquidMixture.get_conduit_data"]], "get_mix_vals() (liquidmixture method)": [[1401, "openpnm.phase.LiquidMixture.get_mix_vals"]], "interpolate_data() (liquidmixture method)": [[1402, "openpnm.phase.LiquidMixture.interpolate_data"]], "items() (liquidmixture method)": [[1403, "openpnm.phase.LiquidMixture.items"]], "keys() (liquidmixture method)": [[1404, "openpnm.phase.LiquidMixture.keys"]], "labels() (liquidmixture method)": [[1405, "openpnm.phase.LiquidMixture.labels"]], "num_pores() (liquidmixture method)": [[1406, "openpnm.phase.LiquidMixture.num_pores"]], "num_throats() (liquidmixture method)": [[1407, "openpnm.phase.LiquidMixture.num_throats"]], "pop() (liquidmixture method)": [[1408, "openpnm.phase.LiquidMixture.pop"]], "popitem() (liquidmixture method)": [[1409, "openpnm.phase.LiquidMixture.popitem"]], "pores() (liquidmixture method)": [[1410, "openpnm.phase.LiquidMixture.pores"]], "props() (liquidmixture method)": [[1411, "openpnm.phase.LiquidMixture.props"]], "regenerate_models() (liquidmixture method)": [[1412, "openpnm.phase.LiquidMixture.regenerate_models"]], "remove_comp() (liquidmixture method)": [[1413, "openpnm.phase.LiquidMixture.remove_comp"]], "run_model() (liquidmixture method)": [[1414, "openpnm.phase.LiquidMixture.run_model"]], "set_label() (liquidmixture method)": [[1415, "openpnm.phase.LiquidMixture.set_label"]], "setdefault() (liquidmixture method)": [[1416, "openpnm.phase.LiquidMixture.setdefault"]], "throats() (liquidmixture method)": [[1417, "openpnm.phase.LiquidMixture.throats"]], "to_indices() (liquidmixture method)": [[1418, "openpnm.phase.LiquidMixture.to_indices"]], "to_mask() (liquidmixture method)": [[1419, "openpnm.phase.LiquidMixture.to_mask"]], "update() (liquidmixture method)": [[1420, "openpnm.phase.LiquidMixture.update"]], "values() (liquidmixture method)": [[1421, "openpnm.phase.LiquidMixture.values"]], "x() (liquidmixture method)": [[1422, "openpnm.phase.LiquidMixture.x"]], "mercury (class in openpnm.phase)": [[1423, "openpnm.phase.Mercury"]], "add_model() (mercury method)": [[1424, "openpnm.phase.Mercury.add_model"]], "add_model_collection() (mercury method)": [[1425, "openpnm.phase.Mercury.add_model_collection"]], "clear() (mercury method)": [[1426, "openpnm.phase.Mercury.clear"]], "copy() (mercury method)": [[1427, "openpnm.phase.Mercury.copy"]], "filter_by_label() (mercury method)": [[1428, "openpnm.phase.Mercury.filter_by_label"]], "fromkeys() (mercury method)": [[1429, "openpnm.phase.Mercury.fromkeys"]], "get() (mercury method)": [[1430, "openpnm.phase.Mercury.get"]], "get_conduit_data() (mercury method)": [[1431, "openpnm.phase.Mercury.get_conduit_data"]], "interpolate_data() (mercury method)": [[1432, "openpnm.phase.Mercury.interpolate_data"]], "items() (mercury method)": [[1433, "openpnm.phase.Mercury.items"]], "keys() (mercury method)": [[1434, "openpnm.phase.Mercury.keys"]], "labels() (mercury method)": [[1435, "openpnm.phase.Mercury.labels"]], "num_pores() (mercury method)": [[1436, "openpnm.phase.Mercury.num_pores"]], "num_throats() (mercury method)": [[1437, "openpnm.phase.Mercury.num_throats"]], "pop() (mercury method)": [[1438, "openpnm.phase.Mercury.pop"]], "popitem() (mercury method)": [[1439, "openpnm.phase.Mercury.popitem"]], "pores() (mercury method)": [[1440, "openpnm.phase.Mercury.pores"]], "props() (mercury method)": [[1441, "openpnm.phase.Mercury.props"]], "regenerate_models() (mercury method)": [[1442, "openpnm.phase.Mercury.regenerate_models"]], "run_model() (mercury method)": [[1443, "openpnm.phase.Mercury.run_model"]], "set_label() (mercury method)": [[1444, "openpnm.phase.Mercury.set_label"]], "setdefault() (mercury method)": [[1445, "openpnm.phase.Mercury.setdefault"]], "throats() (mercury method)": [[1446, "openpnm.phase.Mercury.throats"]], "to_indices() (mercury method)": [[1447, "openpnm.phase.Mercury.to_indices"]], "to_mask() (mercury method)": [[1448, "openpnm.phase.Mercury.to_mask"]], "update() (mercury method)": [[1449, "openpnm.phase.Mercury.update"]], "values() (mercury method)": [[1450, "openpnm.phase.Mercury.values"]], "mixture (class in openpnm.phase)": [[1451, "openpnm.phase.Mixture"]], "add_comp() (mixture method)": [[1452, "openpnm.phase.Mixture.add_comp"]], "add_model() (mixture method)": [[1453, "openpnm.phase.Mixture.add_model"]], "add_model_collection() (mixture method)": [[1454, "openpnm.phase.Mixture.add_model_collection"]], "check_mixture_health() (mixture method)": [[1455, "openpnm.phase.Mixture.check_mixture_health"]], "clear() (mixture method)": [[1456, "openpnm.phase.Mixture.clear"]], "copy() (mixture method)": [[1457, "openpnm.phase.Mixture.copy"]], "filter_by_label() (mixture method)": [[1458, "openpnm.phase.Mixture.filter_by_label"]], "fromkeys() (mixture method)": [[1459, "openpnm.phase.Mixture.fromkeys"]], "get() (mixture method)": [[1460, "openpnm.phase.Mixture.get"]], "get_comp_vals() (mixture method)": [[1461, "openpnm.phase.Mixture.get_comp_vals"]], "get_conduit_data() (mixture method)": [[1462, "openpnm.phase.Mixture.get_conduit_data"]], "get_mix_vals() (mixture method)": [[1463, "openpnm.phase.Mixture.get_mix_vals"]], "interpolate_data() (mixture method)": [[1464, "openpnm.phase.Mixture.interpolate_data"]], "items() (mixture method)": [[1465, "openpnm.phase.Mixture.items"]], "keys() (mixture method)": [[1466, "openpnm.phase.Mixture.keys"]], "labels() (mixture method)": [[1467, "openpnm.phase.Mixture.labels"]], "num_pores() (mixture method)": [[1468, "openpnm.phase.Mixture.num_pores"]], "num_throats() (mixture method)": [[1469, "openpnm.phase.Mixture.num_throats"]], "pop() (mixture method)": [[1470, "openpnm.phase.Mixture.pop"]], "popitem() (mixture method)": [[1471, "openpnm.phase.Mixture.popitem"]], "pores() (mixture method)": [[1472, "openpnm.phase.Mixture.pores"]], "props() (mixture method)": [[1473, "openpnm.phase.Mixture.props"]], "regenerate_models() (mixture method)": [[1474, "openpnm.phase.Mixture.regenerate_models"]], "remove_comp() (mixture method)": [[1475, "openpnm.phase.Mixture.remove_comp"]], "run_model() (mixture method)": [[1476, "openpnm.phase.Mixture.run_model"]], "set_label() (mixture method)": [[1477, "openpnm.phase.Mixture.set_label"]], "setdefault() (mixture method)": [[1478, "openpnm.phase.Mixture.setdefault"]], "throats() (mixture method)": [[1479, "openpnm.phase.Mixture.throats"]], "to_indices() (mixture method)": [[1480, "openpnm.phase.Mixture.to_indices"]], "to_mask() (mixture method)": [[1481, "openpnm.phase.Mixture.to_mask"]], "update() (mixture method)": [[1482, "openpnm.phase.Mixture.update"]], "values() (mixture method)": [[1483, "openpnm.phase.Mixture.values"]], "phase (class in openpnm.phase)": [[1484, "openpnm.phase.Phase"]], "add_model() (phase method)": [[1485, "openpnm.phase.Phase.add_model"]], "add_model_collection() (phase method)": [[1486, "openpnm.phase.Phase.add_model_collection"]], "clear() (phase method)": [[1487, "openpnm.phase.Phase.clear"]], "copy() (phase method)": [[1488, "openpnm.phase.Phase.copy"]], "filter_by_label() (phase method)": [[1489, "openpnm.phase.Phase.filter_by_label"]], "fromkeys() (phase method)": [[1490, "openpnm.phase.Phase.fromkeys"]], "get() (phase method)": [[1491, "openpnm.phase.Phase.get"]], "get_conduit_data() (phase method)": [[1492, "openpnm.phase.Phase.get_conduit_data"]], "interpolate_data() (phase method)": [[1493, "openpnm.phase.Phase.interpolate_data"]], "items() (phase method)": [[1494, "openpnm.phase.Phase.items"]], "keys() (phase method)": [[1495, "openpnm.phase.Phase.keys"]], "labels() (phase method)": [[1496, "openpnm.phase.Phase.labels"]], "num_pores() (phase method)": [[1497, "openpnm.phase.Phase.num_pores"]], "num_throats() (phase method)": [[1498, "openpnm.phase.Phase.num_throats"]], "pop() (phase method)": [[1499, "openpnm.phase.Phase.pop"]], "popitem() (phase method)": [[1500, "openpnm.phase.Phase.popitem"]], "pores() (phase method)": [[1501, "openpnm.phase.Phase.pores"]], "props() (phase method)": [[1502, "openpnm.phase.Phase.props"]], "regenerate_models() (phase method)": [[1503, "openpnm.phase.Phase.regenerate_models"]], "run_model() (phase method)": [[1504, "openpnm.phase.Phase.run_model"]], "set_label() (phase method)": [[1505, "openpnm.phase.Phase.set_label"]], "setdefault() (phase method)": [[1506, "openpnm.phase.Phase.setdefault"]], "throats() (phase method)": [[1507, "openpnm.phase.Phase.throats"]], "to_indices() (phase method)": [[1508, "openpnm.phase.Phase.to_indices"]], "to_mask() (phase method)": [[1509, "openpnm.phase.Phase.to_mask"]], "update() (phase method)": [[1510, "openpnm.phase.Phase.update"]], "values() (phase method)": [[1511, "openpnm.phase.Phase.values"]], "species (class in openpnm.phase)": [[1512, "openpnm.phase.Species"]], "add_model() (species method)": [[1513, "openpnm.phase.Species.add_model"]], "add_model_collection() (species method)": [[1514, "openpnm.phase.Species.add_model_collection"]], "clear() (species method)": [[1515, "openpnm.phase.Species.clear"]], "copy() (species method)": [[1516, "openpnm.phase.Species.copy"]], "filter_by_label() (species method)": [[1517, "openpnm.phase.Species.filter_by_label"]], "fromkeys() (species method)": [[1518, "openpnm.phase.Species.fromkeys"]], "get() (species method)": [[1519, "openpnm.phase.Species.get"]], "get_conduit_data() (species method)": [[1520, "openpnm.phase.Species.get_conduit_data"]], "interpolate_data() (species method)": [[1521, "openpnm.phase.Species.interpolate_data"]], "items() (species method)": [[1522, "openpnm.phase.Species.items"]], "keys() (species method)": [[1523, "openpnm.phase.Species.keys"]], "labels() (species method)": [[1524, "openpnm.phase.Species.labels"]], "num_pores() (species method)": [[1525, "openpnm.phase.Species.num_pores"]], "num_throats() (species method)": [[1526, "openpnm.phase.Species.num_throats"]], "pop() (species method)": [[1527, "openpnm.phase.Species.pop"]], "popitem() (species method)": [[1528, "openpnm.phase.Species.popitem"]], "pores() (species method)": [[1529, "openpnm.phase.Species.pores"]], "props() (species method)": [[1530, "openpnm.phase.Species.props"]], "regenerate_models() (species method)": [[1531, "openpnm.phase.Species.regenerate_models"]], "run_model() (species method)": [[1532, "openpnm.phase.Species.run_model"]], "set_label() (species method)": [[1533, "openpnm.phase.Species.set_label"]], "setdefault() (species method)": [[1534, "openpnm.phase.Species.setdefault"]], "throats() (species method)": [[1535, "openpnm.phase.Species.throats"]], "to_indices() (species method)": [[1536, "openpnm.phase.Species.to_indices"]], "to_mask() (species method)": [[1537, "openpnm.phase.Species.to_mask"]], "update() (species method)": [[1538, "openpnm.phase.Species.update"]], "values() (species method)": [[1539, "openpnm.phase.Species.values"]], "standardgas (class in openpnm.phase)": [[1540, "openpnm.phase.StandardGas"]], "add_model() (standardgas method)": [[1541, "openpnm.phase.StandardGas.add_model"]], "add_model_collection() (standardgas method)": [[1542, "openpnm.phase.StandardGas.add_model_collection"]], "clear() (standardgas method)": [[1543, "openpnm.phase.StandardGas.clear"]], "copy() (standardgas method)": [[1544, "openpnm.phase.StandardGas.copy"]], "filter_by_label() (standardgas method)": [[1545, "openpnm.phase.StandardGas.filter_by_label"]], "fromkeys() (standardgas method)": [[1546, "openpnm.phase.StandardGas.fromkeys"]], "get() (standardgas method)": [[1547, "openpnm.phase.StandardGas.get"]], "get_conduit_data() (standardgas method)": [[1548, "openpnm.phase.StandardGas.get_conduit_data"]], "interpolate_data() (standardgas method)": [[1549, "openpnm.phase.StandardGas.interpolate_data"]], "items() (standardgas method)": [[1550, "openpnm.phase.StandardGas.items"]], "keys() (standardgas method)": [[1551, "openpnm.phase.StandardGas.keys"]], "labels() (standardgas method)": [[1552, "openpnm.phase.StandardGas.labels"]], "num_pores() (standardgas method)": [[1553, "openpnm.phase.StandardGas.num_pores"]], "num_throats() (standardgas method)": [[1554, "openpnm.phase.StandardGas.num_throats"]], "pop() (standardgas method)": [[1555, "openpnm.phase.StandardGas.pop"]], "popitem() (standardgas method)": [[1556, "openpnm.phase.StandardGas.popitem"]], "pores() (standardgas method)": [[1557, "openpnm.phase.StandardGas.pores"]], "props() (standardgas method)": [[1558, "openpnm.phase.StandardGas.props"]], "regenerate_models() (standardgas method)": [[1559, "openpnm.phase.StandardGas.regenerate_models"]], "run_model() (standardgas method)": [[1560, "openpnm.phase.StandardGas.run_model"]], "set_label() (standardgas method)": [[1561, "openpnm.phase.StandardGas.set_label"]], "setdefault() (standardgas method)": [[1562, "openpnm.phase.StandardGas.setdefault"]], "throats() (standardgas method)": [[1563, "openpnm.phase.StandardGas.throats"]], "to_indices() (standardgas method)": [[1564, "openpnm.phase.StandardGas.to_indices"]], "to_mask() (standardgas method)": [[1565, "openpnm.phase.StandardGas.to_mask"]], "update() (standardgas method)": [[1566, "openpnm.phase.StandardGas.update"]], "values() (standardgas method)": [[1567, "openpnm.phase.StandardGas.values"]], "standardgasmixture (class in openpnm.phase)": [[1568, "openpnm.phase.StandardGasMixture"]], "add_comp() (standardgasmixture method)": [[1569, "openpnm.phase.StandardGasMixture.add_comp"]], "add_model() (standardgasmixture method)": [[1570, "openpnm.phase.StandardGasMixture.add_model"]], "add_model_collection() (standardgasmixture method)": [[1571, "openpnm.phase.StandardGasMixture.add_model_collection"]], "check_mixture_health() (standardgasmixture method)": [[1572, "openpnm.phase.StandardGasMixture.check_mixture_health"]], "clear() (standardgasmixture method)": [[1573, "openpnm.phase.StandardGasMixture.clear"]], "copy() (standardgasmixture method)": [[1574, "openpnm.phase.StandardGasMixture.copy"]], "filter_by_label() (standardgasmixture method)": [[1575, "openpnm.phase.StandardGasMixture.filter_by_label"]], "fromkeys() (standardgasmixture method)": [[1576, "openpnm.phase.StandardGasMixture.fromkeys"]], "get() (standardgasmixture method)": [[1577, "openpnm.phase.StandardGasMixture.get"]], "get_comp_vals() (standardgasmixture method)": [[1578, "openpnm.phase.StandardGasMixture.get_comp_vals"]], "get_conduit_data() (standardgasmixture method)": [[1579, "openpnm.phase.StandardGasMixture.get_conduit_data"]], "get_mix_vals() (standardgasmixture method)": [[1580, "openpnm.phase.StandardGasMixture.get_mix_vals"]], "interpolate_data() (standardgasmixture method)": [[1581, "openpnm.phase.StandardGasMixture.interpolate_data"]], "items() (standardgasmixture method)": [[1582, "openpnm.phase.StandardGasMixture.items"]], "keys() (standardgasmixture method)": [[1583, "openpnm.phase.StandardGasMixture.keys"]], "labels() (standardgasmixture method)": [[1584, "openpnm.phase.StandardGasMixture.labels"]], "num_pores() (standardgasmixture method)": [[1585, "openpnm.phase.StandardGasMixture.num_pores"]], "num_throats() (standardgasmixture method)": [[1586, "openpnm.phase.StandardGasMixture.num_throats"]], "pop() (standardgasmixture method)": [[1587, "openpnm.phase.StandardGasMixture.pop"]], "popitem() (standardgasmixture method)": [[1588, "openpnm.phase.StandardGasMixture.popitem"]], "pores() (standardgasmixture method)": [[1589, "openpnm.phase.StandardGasMixture.pores"]], "props() (standardgasmixture method)": [[1590, "openpnm.phase.StandardGasMixture.props"]], "regenerate_models() (standardgasmixture method)": [[1591, "openpnm.phase.StandardGasMixture.regenerate_models"]], "remove_comp() (standardgasmixture method)": [[1592, "openpnm.phase.StandardGasMixture.remove_comp"]], "run_model() (standardgasmixture method)": [[1593, "openpnm.phase.StandardGasMixture.run_model"]], "set_label() (standardgasmixture method)": [[1594, "openpnm.phase.StandardGasMixture.set_label"]], "setdefault() (standardgasmixture method)": [[1595, "openpnm.phase.StandardGasMixture.setdefault"]], "throats() (standardgasmixture method)": [[1596, "openpnm.phase.StandardGasMixture.throats"]], "to_indices() (standardgasmixture method)": [[1597, "openpnm.phase.StandardGasMixture.to_indices"]], "to_mask() (standardgasmixture method)": [[1598, "openpnm.phase.StandardGasMixture.to_mask"]], "update() (standardgasmixture method)": [[1599, "openpnm.phase.StandardGasMixture.update"]], "values() (standardgasmixture method)": [[1600, "openpnm.phase.StandardGasMixture.values"]], "y() (standardgasmixture method)": [[1601, "openpnm.phase.StandardGasMixture.y"]], "standardliquid (class in openpnm.phase)": [[1602, "openpnm.phase.StandardLiquid"]], "add_model() (standardliquid method)": [[1603, "openpnm.phase.StandardLiquid.add_model"]], "add_model_collection() (standardliquid method)": [[1604, "openpnm.phase.StandardLiquid.add_model_collection"]], "clear() (standardliquid method)": [[1605, "openpnm.phase.StandardLiquid.clear"]], "copy() (standardliquid method)": [[1606, "openpnm.phase.StandardLiquid.copy"]], "filter_by_label() (standardliquid method)": [[1607, "openpnm.phase.StandardLiquid.filter_by_label"]], "fromkeys() (standardliquid method)": [[1608, "openpnm.phase.StandardLiquid.fromkeys"]], "get() (standardliquid method)": [[1609, "openpnm.phase.StandardLiquid.get"]], "get_conduit_data() (standardliquid method)": [[1610, "openpnm.phase.StandardLiquid.get_conduit_data"]], "interpolate_data() (standardliquid method)": [[1611, "openpnm.phase.StandardLiquid.interpolate_data"]], "items() (standardliquid method)": [[1612, "openpnm.phase.StandardLiquid.items"]], "keys() (standardliquid method)": [[1613, "openpnm.phase.StandardLiquid.keys"]], "labels() (standardliquid method)": [[1614, "openpnm.phase.StandardLiquid.labels"]], "num_pores() (standardliquid method)": [[1615, "openpnm.phase.StandardLiquid.num_pores"]], "num_throats() (standardliquid method)": [[1616, "openpnm.phase.StandardLiquid.num_throats"]], "pop() (standardliquid method)": [[1617, "openpnm.phase.StandardLiquid.pop"]], "popitem() (standardliquid method)": [[1618, "openpnm.phase.StandardLiquid.popitem"]], "pores() (standardliquid method)": [[1619, "openpnm.phase.StandardLiquid.pores"]], "props() (standardliquid method)": [[1620, "openpnm.phase.StandardLiquid.props"]], "regenerate_models() (standardliquid method)": [[1621, "openpnm.phase.StandardLiquid.regenerate_models"]], "run_model() (standardliquid method)": [[1622, "openpnm.phase.StandardLiquid.run_model"]], "set_label() (standardliquid method)": [[1623, "openpnm.phase.StandardLiquid.set_label"]], "setdefault() (standardliquid method)": [[1624, "openpnm.phase.StandardLiquid.setdefault"]], "throats() (standardliquid method)": [[1625, "openpnm.phase.StandardLiquid.throats"]], "to_indices() (standardliquid method)": [[1626, "openpnm.phase.StandardLiquid.to_indices"]], "to_mask() (standardliquid method)": [[1627, "openpnm.phase.StandardLiquid.to_mask"]], "update() (standardliquid method)": [[1628, "openpnm.phase.StandardLiquid.update"]], "values() (standardliquid method)": [[1629, "openpnm.phase.StandardLiquid.values"]], "standardliquidmixture (class in openpnm.phase)": [[1630, "openpnm.phase.StandardLiquidMixture"]], "add_comp() (standardliquidmixture method)": [[1631, "openpnm.phase.StandardLiquidMixture.add_comp"]], "add_model() (standardliquidmixture method)": [[1632, "openpnm.phase.StandardLiquidMixture.add_model"]], "add_model_collection() (standardliquidmixture method)": [[1633, "openpnm.phase.StandardLiquidMixture.add_model_collection"]], "check_mixture_health() (standardliquidmixture method)": [[1634, "openpnm.phase.StandardLiquidMixture.check_mixture_health"]], "clear() (standardliquidmixture method)": [[1635, "openpnm.phase.StandardLiquidMixture.clear"]], "copy() (standardliquidmixture method)": [[1636, "openpnm.phase.StandardLiquidMixture.copy"]], "filter_by_label() (standardliquidmixture method)": [[1637, "openpnm.phase.StandardLiquidMixture.filter_by_label"]], "fromkeys() (standardliquidmixture method)": [[1638, "openpnm.phase.StandardLiquidMixture.fromkeys"]], "get() (standardliquidmixture method)": [[1639, "openpnm.phase.StandardLiquidMixture.get"]], "get_comp_vals() (standardliquidmixture method)": [[1640, "openpnm.phase.StandardLiquidMixture.get_comp_vals"]], "get_conduit_data() (standardliquidmixture method)": [[1641, "openpnm.phase.StandardLiquidMixture.get_conduit_data"]], "get_mix_vals() (standardliquidmixture method)": [[1642, "openpnm.phase.StandardLiquidMixture.get_mix_vals"]], "interpolate_data() (standardliquidmixture method)": [[1643, "openpnm.phase.StandardLiquidMixture.interpolate_data"]], "items() (standardliquidmixture method)": [[1644, "openpnm.phase.StandardLiquidMixture.items"]], "keys() (standardliquidmixture method)": [[1645, "openpnm.phase.StandardLiquidMixture.keys"]], "labels() (standardliquidmixture method)": [[1646, "openpnm.phase.StandardLiquidMixture.labels"]], "num_pores() (standardliquidmixture method)": [[1647, "openpnm.phase.StandardLiquidMixture.num_pores"]], "num_throats() (standardliquidmixture method)": [[1648, "openpnm.phase.StandardLiquidMixture.num_throats"]], "pop() (standardliquidmixture method)": [[1649, "openpnm.phase.StandardLiquidMixture.pop"]], "popitem() (standardliquidmixture method)": [[1650, "openpnm.phase.StandardLiquidMixture.popitem"]], "pores() (standardliquidmixture method)": [[1651, "openpnm.phase.StandardLiquidMixture.pores"]], "props() (standardliquidmixture method)": [[1652, "openpnm.phase.StandardLiquidMixture.props"]], "regenerate_models() (standardliquidmixture method)": [[1653, "openpnm.phase.StandardLiquidMixture.regenerate_models"]], "remove_comp() (standardliquidmixture method)": [[1654, "openpnm.phase.StandardLiquidMixture.remove_comp"]], "run_model() (standardliquidmixture method)": [[1655, "openpnm.phase.StandardLiquidMixture.run_model"]], "set_label() (standardliquidmixture method)": [[1656, "openpnm.phase.StandardLiquidMixture.set_label"]], "setdefault() (standardliquidmixture method)": [[1657, "openpnm.phase.StandardLiquidMixture.setdefault"]], "throats() (standardliquidmixture method)": [[1658, "openpnm.phase.StandardLiquidMixture.throats"]], "to_indices() (standardliquidmixture method)": [[1659, "openpnm.phase.StandardLiquidMixture.to_indices"]], "to_mask() (standardliquidmixture method)": [[1660, "openpnm.phase.StandardLiquidMixture.to_mask"]], "update() (standardliquidmixture method)": [[1661, "openpnm.phase.StandardLiquidMixture.update"]], "values() (standardliquidmixture method)": [[1662, "openpnm.phase.StandardLiquidMixture.values"]], "x() (standardliquidmixture method)": [[1663, "openpnm.phase.StandardLiquidMixture.x"]], "water (class in openpnm.phase)": [[1664, "openpnm.phase.Water"]], "add_model() (water method)": [[1665, "openpnm.phase.Water.add_model"]], "add_model_collection() (water method)": [[1666, "openpnm.phase.Water.add_model_collection"]], "clear() (water method)": [[1667, "openpnm.phase.Water.clear"]], "copy() (water method)": [[1668, "openpnm.phase.Water.copy"]], "filter_by_label() (water method)": [[1669, "openpnm.phase.Water.filter_by_label"]], "fromkeys() (water method)": [[1670, "openpnm.phase.Water.fromkeys"]], "get() (water method)": [[1671, "openpnm.phase.Water.get"]], "get_conduit_data() (water method)": [[1672, "openpnm.phase.Water.get_conduit_data"]], "interpolate_data() (water method)": [[1673, "openpnm.phase.Water.interpolate_data"]], "items() (water method)": [[1674, "openpnm.phase.Water.items"]], "keys() (water method)": [[1675, "openpnm.phase.Water.keys"]], "labels() (water method)": [[1676, "openpnm.phase.Water.labels"]], "num_pores() (water method)": [[1677, "openpnm.phase.Water.num_pores"]], "num_throats() (water method)": [[1678, "openpnm.phase.Water.num_throats"]], "pop() (water method)": [[1679, "openpnm.phase.Water.pop"]], "popitem() (water method)": [[1680, "openpnm.phase.Water.popitem"]], "pores() (water method)": [[1681, "openpnm.phase.Water.pores"]], "props() (water method)": [[1682, "openpnm.phase.Water.props"]], "regenerate_models() (water method)": [[1683, "openpnm.phase.Water.regenerate_models"]], "run_model() (water method)": [[1684, "openpnm.phase.Water.run_model"]], "set_label() (water method)": [[1685, "openpnm.phase.Water.set_label"]], "setdefault() (water method)": [[1686, "openpnm.phase.Water.setdefault"]], "throats() (water method)": [[1687, "openpnm.phase.Water.throats"]], "to_indices() (water method)": [[1688, "openpnm.phase.Water.to_indices"]], "to_mask() (water method)": [[1689, "openpnm.phase.Water.to_mask"]], "update() (water method)": [[1690, "openpnm.phase.Water.update"]], "values() (water method)": [[1691, "openpnm.phase.Water.values"]], "openpnm.solvers": [[1692, "module-openpnm.solvers"]], "basesolver (class in openpnm.solvers)": [[1693, "openpnm.solvers.BaseSolver"]], "solve() (basesolver method)": [[1694, "openpnm.solvers.BaseSolver.solve"]], "directsolver (class in openpnm.solvers)": [[1695, "openpnm.solvers.DirectSolver"]], "solve() (directsolver method)": [[1696, "openpnm.solvers.DirectSolver.solve"]], "iterativesolver (class in openpnm.solvers)": [[1697, "openpnm.solvers.IterativeSolver"]], "solve() (iterativesolver method)": [[1698, "openpnm.solvers.IterativeSolver.solve"]], "petsclinearsolver (class in openpnm.solvers)": [[1699, "openpnm.solvers.PETScLinearSolver"]], "solve() (petsclinearsolver method)": [[1700, "openpnm.solvers.PETScLinearSolver.solve"]], "pardisospsolve (class in openpnm.solvers)": [[1701, "openpnm.solvers.PardisoSpsolve"]], "solve() (pardisospsolve method)": [[1702, "openpnm.solvers.PardisoSpsolve.solve"]], "pyamgrugestubensolver (class in openpnm.solvers)": [[1703, "openpnm.solvers.PyamgRugeStubenSolver"]], "solve() (pyamgrugestubensolver method)": [[1704, "openpnm.solvers.PyamgRugeStubenSolver.solve"]], "scipycg (class in openpnm.solvers)": [[1705, "openpnm.solvers.ScipyCG"]], "solve() (scipycg method)": [[1706, "openpnm.solvers.ScipyCG.solve"]], "scipyspsolve (class in openpnm.solvers)": [[1707, "openpnm.solvers.ScipySpsolve"]], "solve() (scipyspsolve method)": [[1708, "openpnm.solvers.ScipySpsolve.solve"]], "openpnm.topotools": [[1709, "module-openpnm.topotools"]], "add_boundary_pores() (in module openpnm.topotools)": [[1710, "openpnm.topotools.add_boundary_pores"]], "add_reservoir_pore() (in module openpnm.topotools)": [[1711, "openpnm.topotools.add_reservoir_pore"]], "bond_percolation() (in module openpnm.topotools)": [[1712, "openpnm.topotools.bond_percolation"]], "clone_pores() (in module openpnm.topotools)": [[1713, "openpnm.topotools.clone_pores"]], "connect_pores() (in module openpnm.topotools)": [[1714, "openpnm.topotools.connect_pores"]], "conns_to_am() (in module openpnm.topotools)": [[1715, "openpnm.topotools.conns_to_am"]], "dimensionality() (in module openpnm.topotools)": [[1716, "openpnm.topotools.dimensionality"]], "drop_sites() (in module openpnm.topotools)": [[1717, "openpnm.topotools.drop_sites"]], "extend() (in module openpnm.topotools)": [[1718, "openpnm.topotools.extend"]], "filter_pores_by_z() (in module openpnm.topotools)": [[1719, "openpnm.topotools.filter_pores_by_z"]], "find_clusters() (in module openpnm.topotools)": [[1720, "openpnm.topotools.find_clusters"]], "find_connected_sites() (in module openpnm.topotools)": [[1721, "openpnm.topotools.find_connected_sites"]], "find_connecting_bonds() (in module openpnm.topotools)": [[1722, "openpnm.topotools.find_connecting_bonds"]], "find_interface_throats() (in module openpnm.topotools)": [[1723, "openpnm.topotools.find_interface_throats"]], "find_isolated_clusters() (in module openpnm.topotools)": [[1724, "openpnm.topotools.find_isolated_clusters"]], "find_neighbor_bonds() (in module openpnm.topotools)": [[1725, "openpnm.topotools.find_neighbor_bonds"]], "find_neighbor_sites() (in module openpnm.topotools)": [[1726, "openpnm.topotools.find_neighbor_sites"]], "find_path() (in module openpnm.topotools)": [[1727, "openpnm.topotools.find_path"]], "find_surface_pores() (in module openpnm.topotools)": [[1728, "openpnm.topotools.find_surface_pores"]], "generate_base_points() (in module openpnm.topotools)": [[1729, "openpnm.topotools.generate_base_points"]], "get_domain_area() (in module openpnm.topotools)": [[1730, "openpnm.topotools.get_domain_area"]], "get_domain_length() (in module openpnm.topotools)": [[1731, "openpnm.topotools.get_domain_length"]], "get_shape() (in module openpnm.topotools)": [[1732, "openpnm.topotools.get_shape"]], "get_spacing() (in module openpnm.topotools)": [[1733, "openpnm.topotools.get_spacing"]], "hull_centroid() (in module openpnm.topotools)": [[1734, "openpnm.topotools.hull_centroid"]], "is_fully_connected() (in module openpnm.topotools)": [[1735, "openpnm.topotools.is_fully_connected"]], "iscoplanar() (in module openpnm.topotools)": [[1736, "openpnm.topotools.iscoplanar"]], "isoutside() (in module openpnm.topotools)": [[1737, "openpnm.topotools.isoutside"]], "ispercolating() (in module openpnm.topotools)": [[1738, "openpnm.topotools.ispercolating"]], "issymmetric() (in module openpnm.topotools)": [[1739, "openpnm.topotools.issymmetric"]], "istriangular() (in module openpnm.topotools)": [[1740, "openpnm.topotools.istriangular"]], "istril() (in module openpnm.topotools)": [[1741, "openpnm.topotools.istril"]], "istriu() (in module openpnm.topotools)": [[1742, "openpnm.topotools.istriu"]], "label_faces() (in module openpnm.topotools)": [[1743, "openpnm.topotools.label_faces"]], "merge_networks() (in module openpnm.topotools)": [[1744, "openpnm.topotools.merge_networks"]], "merge_pores() (in module openpnm.topotools)": [[1745, "openpnm.topotools.merge_pores"]], "reduce_coordination() (in module openpnm.topotools)": [[1746, "openpnm.topotools.reduce_coordination"]], "reflect_base_points() (in module openpnm.topotools)": [[1747, "openpnm.topotools.reflect_base_points"]], "rotate_coords() (in module openpnm.topotools)": [[1748, "openpnm.topotools.rotate_coords"]], "shear_coords() (in module openpnm.topotools)": [[1749, "openpnm.topotools.shear_coords"]], "site_percolation() (in module openpnm.topotools)": [[1750, "openpnm.topotools.site_percolation"]], "stitch() (in module openpnm.topotools)": [[1751, "openpnm.topotools.stitch"]], "template_cylinder_annulus() (in module openpnm.topotools)": [[1752, "openpnm.topotools.template_cylinder_annulus"]], "template_sphere_shell() (in module openpnm.topotools)": [[1753, "openpnm.topotools.template_sphere_shell"]], "tri_to_am() (in module openpnm.topotools)": [[1754, "openpnm.topotools.tri_to_am"]], "trim() (in module openpnm.topotools)": [[1755, "openpnm.topotools.trim"]], "trim_disconnected_clusters() (in module openpnm.topotools)": [[1756, "openpnm.topotools.trim_disconnected_clusters"]], "vor_to_am() (in module openpnm.topotools)": [[1757, "openpnm.topotools.vor_to_am"]], "openpnm.utils": [[1758, "module-openpnm.utils"]], "docorator (class in openpnm.utils)": [[1759, "openpnm.utils.Docorator"]], "__call__() (docorator method)": [[1760, "openpnm.utils.Docorator.__call__"]], "dedent() (docorator method)": [[1761, "openpnm.utils.Docorator.dedent"]], "dedents() (docorator method)": [[1762, "openpnm.utils.Docorator.dedents"]], "delete_kwargs() (docorator method)": [[1763, "openpnm.utils.Docorator.delete_kwargs"]], "delete_kwargs_s() (docorator class method)": [[1764, "openpnm.utils.Docorator.delete_kwargs_s"]], "delete_params() (docorator method)": [[1765, "openpnm.utils.Docorator.delete_params"]], "delete_params_s() (docorator static method)": [[1766, "openpnm.utils.Docorator.delete_params_s"]], "delete_types() (docorator method)": [[1767, "openpnm.utils.Docorator.delete_types"]], "delete_types_s() (docorator static method)": [[1768, "openpnm.utils.Docorator.delete_types_s"]], "get_docstring() (docorator method)": [[1769, "openpnm.utils.Docorator.get_docstring"]], "get_extended_summary() (docorator method)": [[1770, "openpnm.utils.Docorator.get_extended_summary"]], "get_extended_summaryf() (docorator method)": [[1771, "openpnm.utils.Docorator.get_extended_summaryf"]], "get_full_description() (docorator method)": [[1772, "openpnm.utils.Docorator.get_full_description"]], "get_full_descriptionf() (docorator method)": [[1773, "openpnm.utils.Docorator.get_full_descriptionf"]], "get_sections() (docorator method)": [[1774, "openpnm.utils.Docorator.get_sections"]], "get_sectionsf() (docorator method)": [[1775, "openpnm.utils.Docorator.get_sectionsf"]], "get_summary() (docorator method)": [[1776, "openpnm.utils.Docorator.get_summary"]], "get_summaryf() (docorator method)": [[1777, "openpnm.utils.Docorator.get_summaryf"]], "keep_params() (docorator method)": [[1778, "openpnm.utils.Docorator.keep_params"]], "keep_params_s() (docorator static method)": [[1779, "openpnm.utils.Docorator.keep_params_s"]], "keep_types() (docorator method)": [[1780, "openpnm.utils.Docorator.keep_types"]], "keep_types_s() (docorator static method)": [[1781, "openpnm.utils.Docorator.keep_types_s"]], "save_docstring() (docorator method)": [[1782, "openpnm.utils.Docorator.save_docstring"]], "with_indent() (docorator method)": [[1783, "openpnm.utils.Docorator.with_indent"]], "with_indents() (docorator method)": [[1784, "openpnm.utils.Docorator.with_indents"]], "healthdict (class in openpnm.utils)": [[1785, "openpnm.utils.HealthDict"]], "clear() (healthdict method)": [[1786, "openpnm.utils.HealthDict.clear"]], "copy() (healthdict method)": [[1787, "openpnm.utils.HealthDict.copy"]], "fromkeys() (healthdict method)": [[1788, "openpnm.utils.HealthDict.fromkeys"]], "get() (healthdict method)": [[1789, "openpnm.utils.HealthDict.get"]], "items() (healthdict method)": [[1790, "openpnm.utils.HealthDict.items"]], "keys() (healthdict method)": [[1791, "openpnm.utils.HealthDict.keys"]], "pop() (healthdict method)": [[1792, "openpnm.utils.HealthDict.pop"]], "popitem() (healthdict method)": [[1793, "openpnm.utils.HealthDict.popitem"]], "setdefault() (healthdict method)": [[1794, "openpnm.utils.HealthDict.setdefault"]], "update() (healthdict method)": [[1795, "openpnm.utils.HealthDict.update"]], "values() (healthdict method)": [[1796, "openpnm.utils.HealthDict.values"]], "nesteddict (class in openpnm.utils)": [[1797, "openpnm.utils.NestedDict"]], "clear() (nesteddict method)": [[1798, "openpnm.utils.NestedDict.clear"]], "copy() (nesteddict method)": [[1799, "openpnm.utils.NestedDict.copy"]], "fromkeys() (nesteddict method)": [[1800, "openpnm.utils.NestedDict.fromkeys"]], "get() (nesteddict method)": [[1801, "openpnm.utils.NestedDict.get"]], "items() (nesteddict method)": [[1802, "openpnm.utils.NestedDict.items"]], "keys() (nesteddict method)": [[1803, "openpnm.utils.NestedDict.keys"]], "pop() (nesteddict method)": [[1804, "openpnm.utils.NestedDict.pop"]], "popitem() (nesteddict method)": [[1805, "openpnm.utils.NestedDict.popitem"]], "setdefault() (nesteddict method)": [[1806, "openpnm.utils.NestedDict.setdefault"]], "to_dict() (nesteddict method)": [[1807, "openpnm.utils.NestedDict.to_dict"]], "unravel() (nesteddict method)": [[1808, "openpnm.utils.NestedDict.unravel"]], "update() (nesteddict method)": [[1809, "openpnm.utils.NestedDict.update"]], "values() (nesteddict method)": [[1810, "openpnm.utils.NestedDict.values"]], "printabledict (class in openpnm.utils)": [[1811, "openpnm.utils.PrintableDict"]], "clear() (printabledict method)": [[1812, "openpnm.utils.PrintableDict.clear"]], "copy() (printabledict method)": [[1813, "openpnm.utils.PrintableDict.copy"]], "fromkeys() (printabledict method)": [[1814, "openpnm.utils.PrintableDict.fromkeys"]], "get() (printabledict method)": [[1815, "openpnm.utils.PrintableDict.get"]], "items() (printabledict method)": [[1816, "openpnm.utils.PrintableDict.items"]], "keys() (printabledict method)": [[1817, "openpnm.utils.PrintableDict.keys"]], "pop() (printabledict method)": [[1818, "openpnm.utils.PrintableDict.pop"]], "popitem() (printabledict method)": [[1819, "openpnm.utils.PrintableDict.popitem"]], "setdefault() (printabledict method)": [[1820, "openpnm.utils.PrintableDict.setdefault"]], "update() (printabledict method)": [[1821, "openpnm.utils.PrintableDict.update"]], "values() (printabledict method)": [[1822, "openpnm.utils.PrintableDict.values"]], "printablelist (class in openpnm.utils)": [[1823, "openpnm.utils.PrintableList"]], "append() (printablelist method)": [[1824, "openpnm.utils.PrintableList.append"]], "clear() (printablelist method)": [[1825, "openpnm.utils.PrintableList.clear"]], "copy() (printablelist method)": [[1826, "openpnm.utils.PrintableList.copy"]], "count() (printablelist method)": [[1827, "openpnm.utils.PrintableList.count"]], "extend() (printablelist method)": [[1828, "openpnm.utils.PrintableList.extend"]], "index() (printablelist method)": [[1829, "openpnm.utils.PrintableList.index"]], "insert() (printablelist method)": [[1830, "openpnm.utils.PrintableList.insert"]], "pop() (printablelist method)": [[1831, "openpnm.utils.PrintableList.pop"]], "remove() (printablelist method)": [[1832, "openpnm.utils.PrintableList.remove"]], "reverse() (printablelist method)": [[1833, "openpnm.utils.PrintableList.reverse"]], "sort() (printablelist method)": [[1834, "openpnm.utils.PrintableList.sort"]], "project (class in openpnm.utils)": [[1835, "openpnm.utils.Project"]], "append() (project method)": [[1836, "openpnm.utils.Project.append"]], "clear() (project method)": [[1837, "openpnm.utils.Project.clear"]], "copy() (project method)": [[1838, "openpnm.utils.Project.copy"]], "count() (project method)": [[1839, "openpnm.utils.Project.count"]], "extend() (project method)": [[1840, "openpnm.utils.Project.extend"]], "index() (project method)": [[1841, "openpnm.utils.Project.index"]], "insert() (project method)": [[1842, "openpnm.utils.Project.insert"]], "pop() (project method)": [[1843, "openpnm.utils.Project.pop"]], "remove() (project method)": [[1844, "openpnm.utils.Project.remove"]], "reverse() (project method)": [[1845, "openpnm.utils.Project.reverse"]], "sort() (project method)": [[1846, "openpnm.utils.Project.sort"]], "settingsattr (class in openpnm.utils)": [[1847, "openpnm.utils.SettingsAttr"]], "typedlist (class in openpnm.utils)": [[1848, "openpnm.utils.TypedList"]], "append() (typedlist method)": [[1849, "openpnm.utils.TypedList.append"]], "clear() (typedlist method)": [[1850, "openpnm.utils.TypedList.clear"]], "copy() (typedlist method)": [[1851, "openpnm.utils.TypedList.copy"]], "count() (typedlist method)": [[1852, "openpnm.utils.TypedList.count"]], "extend() (typedlist method)": [[1853, "openpnm.utils.TypedList.extend"]], "index() (typedlist method)": [[1854, "openpnm.utils.TypedList.index"]], "insert() (typedlist method)": [[1855, "openpnm.utils.TypedList.insert"]], "pop() (typedlist method)": [[1856, "openpnm.utils.TypedList.pop"]], "remove() (typedlist method)": [[1857, "openpnm.utils.TypedList.remove"]], "reverse() (typedlist method)": [[1858, "openpnm.utils.TypedList.reverse"]], "sort() (typedlist method)": [[1859, "openpnm.utils.TypedList.sort"]], "typedmixin (class in openpnm.utils)": [[1860, "openpnm.utils.TypedMixin"]], "typedset (class in openpnm.utils)": [[1861, "openpnm.utils.TypedSet"]], "add() (typedset method)": [[1862, "openpnm.utils.TypedSet.add"]], "clear() (typedset method)": [[1863, "openpnm.utils.TypedSet.clear"]], "copy() (typedset method)": [[1864, "openpnm.utils.TypedSet.copy"]], "difference() (typedset method)": [[1865, "openpnm.utils.TypedSet.difference"]], "difference_update() (typedset method)": [[1866, "openpnm.utils.TypedSet.difference_update"]], "discard() (typedset method)": [[1867, "openpnm.utils.TypedSet.discard"]], "intersection() (typedset method)": [[1868, "openpnm.utils.TypedSet.intersection"]], "intersection_update() (typedset method)": [[1869, "openpnm.utils.TypedSet.intersection_update"]], "isdisjoint() (typedset method)": [[1870, "openpnm.utils.TypedSet.isdisjoint"]], "issubset() (typedset method)": [[1871, "openpnm.utils.TypedSet.issubset"]], "issuperset() (typedset method)": [[1872, "openpnm.utils.TypedSet.issuperset"]], "pop() (typedset method)": [[1873, "openpnm.utils.TypedSet.pop"]], "remove() (typedset method)": [[1874, "openpnm.utils.TypedSet.remove"]], "symmetric_difference() (typedset method)": [[1875, "openpnm.utils.TypedSet.symmetric_difference"]], "symmetric_difference_update() (typedset method)": [[1876, "openpnm.utils.TypedSet.symmetric_difference_update"]], "union() (typedset method)": [[1877, "openpnm.utils.TypedSet.union"]], "update() (typedset method)": [[1878, "openpnm.utils.TypedSet.update"]], "workspace (class in openpnm.utils)": [[1879, "openpnm.utils.Workspace"]], "clear() (workspace method)": [[1880, "openpnm.utils.Workspace.clear"]], "close_project() (workspace method)": [[1881, "openpnm.utils.Workspace.close_project"]], "copy() (workspace method)": [[1882, "openpnm.utils.Workspace.copy"]], "copy_project() (workspace method)": [[1883, "openpnm.utils.Workspace.copy_project"]], "fromkeys() (workspace method)": [[1884, "openpnm.utils.Workspace.fromkeys"]], "get() (workspace method)": [[1885, "openpnm.utils.Workspace.get"]], "items() (workspace method)": [[1886, "openpnm.utils.Workspace.items"]], "keys() (workspace method)": [[1887, "openpnm.utils.Workspace.keys"]], "load_project() (workspace method)": [[1888, "openpnm.utils.Workspace.load_project"]], "load_workspace() (workspace method)": [[1889, "openpnm.utils.Workspace.load_workspace"]], "new_project() (workspace method)": [[1890, "openpnm.utils.Workspace.new_project"]], "pop() (workspace method)": [[1891, "openpnm.utils.Workspace.pop"]], "popitem() (workspace method)": [[1892, "openpnm.utils.Workspace.popitem"]], "save_project() (workspace method)": [[1893, "openpnm.utils.Workspace.save_project"]], "save_workspace() (workspace method)": [[1894, "openpnm.utils.Workspace.save_workspace"]], "setdefault() (workspace method)": [[1895, "openpnm.utils.Workspace.setdefault"]], "update() (workspace method)": [[1896, "openpnm.utils.Workspace.update"]], "values() (workspace method)": [[1897, "openpnm.utils.Workspace.values"]], "check_data_health() (in module openpnm.utils)": [[1898, "openpnm.utils.check_data_health"]], "check_network_health() (in module openpnm.utils)": [[1899, "openpnm.utils.check_network_health"]], "dict_to_struct() (in module openpnm.utils)": [[1900, "openpnm.utils.dict_to_struct"]], "flat_list() (in module openpnm.utils)": [[1901, "openpnm.utils.flat_list"]], "get_mixture_model_args() (in module openpnm.utils)": [[1902, "openpnm.utils.get_mixture_model_args"]], "get_printable_labels() (in module openpnm.utils)": [[1903, "openpnm.utils.get_printable_labels"]], "get_printable_props() (in module openpnm.utils)": [[1904, "openpnm.utils.get_printable_props"]], "ignore_warnings() (in module openpnm.utils)": [[1905, "openpnm.utils.ignore_warnings"]], "is_symmetric() (in module openpnm.utils)": [[1906, "openpnm.utils.is_symmetric"]], "is_transient() (in module openpnm.utils)": [[1907, "openpnm.utils.is_transient"]], "is_valid_propname() (in module openpnm.utils)": [[1908, "openpnm.utils.is_valid_propname"]], "methods_to_table() (in module openpnm.utils)": [[1909, "openpnm.utils.methods_to_table"]], "models_to_table() (in module openpnm.utils)": [[1910, "openpnm.utils.models_to_table"]], "sanitize_dict() (in module openpnm.utils)": [[1911, "openpnm.utils.sanitize_dict"]], "struct_to_dict() (in module openpnm.utils)": [[1912, "openpnm.utils.struct_to_dict"]], "openpnm.visualization": [[1913, "module-openpnm.visualization"]], "draw_conduit() (in module openpnm.visualization)": [[1914, "openpnm.visualization.draw_conduit"]], "generate_voxel_image() (in module openpnm.visualization)": [[1915, "openpnm.visualization.generate_voxel_image"]], "plot_connections() (in module openpnm.visualization)": [[1916, "openpnm.visualization.plot_connections"]], "plot_coordinates() (in module openpnm.visualization)": [[1917, "openpnm.visualization.plot_coordinates"]], "plot_networkx() (in module openpnm.visualization)": [[1918, "openpnm.visualization.plot_networkx"]], "plot_notebook() (in module openpnm.visualization)": [[1919, "openpnm.visualization.plot_notebook"]], "plot_tutorial() (in module openpnm.visualization)": [[1920, "openpnm.visualization.plot_tutorial"]], "plot_vispy() (in module openpnm.visualization)": [[1921, "openpnm.visualization.plot_vispy"]], "set_mpl_style() (in module openpnm.visualization)": [[1922, "openpnm.visualization.set_mpl_style"]], "openpnm": [[1923, "module-openpnm"]]}})