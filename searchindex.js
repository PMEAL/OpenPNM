Search.setIndex({"docnames": ["_examples/applications", "_examples/index", "_examples/reference", "_examples/tutorials", "basic_usage", "examples/applications/absolute_permeability", "examples/applications/adjusting_pore_size_distributions", "examples/applications/dispersion_coefficient", "examples/applications/effective_diffusivity_and_tortuosity", "examples/applications/formation_factor", "examples/applications/mercury_intrusion", "examples/applications/porosity", "examples/applications/relative_diffusivity", "examples/applications/relative_permeability", "examples/contrib/README", "examples/reference/architecture/pore_scale_models", "examples/reference/architecture/settings_attribute_machinery", "examples/reference/architecture/workspace_and_projects", "examples/reference/simulations/available_matrix_solvers", "examples/reference/simulations/basic_transport", "examples/reference/simulations/explanation_of_units", "examples/reference/simulations/reactive_transport", "examples/reference/simulations/size_factors_and_transport_conductance", "examples/reference/simulations/transient_transport", "examples/tutorials/01_numerical_python_primer", "examples/tutorials/02_network_generation_and_visualization", "examples/tutorials/03_data_and_topology_storage", "examples/tutorials/04_graph_queries_and_manipulation", "examples/tutorials/05_defining_geometry", "examples/tutorials/06_labels_and_domains", "examples/tutorials/07_phases_and_mixtures", "examples/tutorials/08_simulating_transport", "examples/tutorials/09_simulating_invasion", "examples/tutorials/10_visualization_options", "index", "installation", "modules/generated/openpnm.algorithms", "modules/generated/openpnm.algorithms.AdvectionDiffusion", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values", "modules/generated/openpnm.algorithms.Algorithm", "modules/generated/openpnm.algorithms.Algorithm.clear", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs", "modules/generated/openpnm.algorithms.Algorithm.copy", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label", "modules/generated/openpnm.algorithms.Algorithm.fromkeys", "modules/generated/openpnm.algorithms.Algorithm.get", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data", "modules/generated/openpnm.algorithms.Algorithm.items", "modules/generated/openpnm.algorithms.Algorithm.keys", "modules/generated/openpnm.algorithms.Algorithm.labels", "modules/generated/openpnm.algorithms.Algorithm.num_pores", "modules/generated/openpnm.algorithms.Algorithm.num_throats", "modules/generated/openpnm.algorithms.Algorithm.pop", "modules/generated/openpnm.algorithms.Algorithm.popitem", "modules/generated/openpnm.algorithms.Algorithm.pores", "modules/generated/openpnm.algorithms.Algorithm.props", "modules/generated/openpnm.algorithms.Algorithm.set_BC", "modules/generated/openpnm.algorithms.Algorithm.set_label", "modules/generated/openpnm.algorithms.Algorithm.setdefault", "modules/generated/openpnm.algorithms.Algorithm.throats", "modules/generated/openpnm.algorithms.Algorithm.to_indices", "modules/generated/openpnm.algorithms.Algorithm.to_mask", "modules/generated/openpnm.algorithms.Algorithm.update", "modules/generated/openpnm.algorithms.Algorithm.values", "modules/generated/openpnm.algorithms.Drainage", "modules/generated/openpnm.algorithms.Drainage.apply_trapping", "modules/generated/openpnm.algorithms.Drainage.clear", "modules/generated/openpnm.algorithms.Drainage.clear_BCs", "modules/generated/openpnm.algorithms.Drainage.copy", "modules/generated/openpnm.algorithms.Drainage.filter_by_label", "modules/generated/openpnm.algorithms.Drainage.fromkeys", "modules/generated/openpnm.algorithms.Drainage.get", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data", "modules/generated/openpnm.algorithms.Drainage.interpolate_data", "modules/generated/openpnm.algorithms.Drainage.items", "modules/generated/openpnm.algorithms.Drainage.keys", "modules/generated/openpnm.algorithms.Drainage.labels", "modules/generated/openpnm.algorithms.Drainage.num_pores", "modules/generated/openpnm.algorithms.Drainage.num_throats", "modules/generated/openpnm.algorithms.Drainage.pc_curve", "modules/generated/openpnm.algorithms.Drainage.pop", "modules/generated/openpnm.algorithms.Drainage.popitem", "modules/generated/openpnm.algorithms.Drainage.pores", "modules/generated/openpnm.algorithms.Drainage.props", "modules/generated/openpnm.algorithms.Drainage.reset", "modules/generated/openpnm.algorithms.Drainage.run", "modules/generated/openpnm.algorithms.Drainage.set_BC", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC", "modules/generated/openpnm.algorithms.Drainage.set_label", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC", "modules/generated/openpnm.algorithms.Drainage.setdefault", "modules/generated/openpnm.algorithms.Drainage.throats", "modules/generated/openpnm.algorithms.Drainage.to_indices", "modules/generated/openpnm.algorithms.Drainage.to_mask", "modules/generated/openpnm.algorithms.Drainage.update", "modules/generated/openpnm.algorithms.Drainage.values", "modules/generated/openpnm.algorithms.FickianDiffusion", "modules/generated/openpnm.algorithms.FickianDiffusion.clear", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.FickianDiffusion.copy", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.FickianDiffusion.get", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.FickianDiffusion.items", "modules/generated/openpnm.algorithms.FickianDiffusion.keys", "modules/generated/openpnm.algorithms.FickianDiffusion.labels", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.FickianDiffusion.pop", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem", "modules/generated/openpnm.algorithms.FickianDiffusion.pores", "modules/generated/openpnm.algorithms.FickianDiffusion.props", "modules/generated/openpnm.algorithms.FickianDiffusion.rate", "modules/generated/openpnm.algorithms.FickianDiffusion.run", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.FickianDiffusion.throats", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.FickianDiffusion.update", "modules/generated/openpnm.algorithms.FickianDiffusion.values", "modules/generated/openpnm.algorithms.FourierConduction", "modules/generated/openpnm.algorithms.FourierConduction.clear", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.FourierConduction.copy", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys", "modules/generated/openpnm.algorithms.FourierConduction.get", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data", "modules/generated/openpnm.algorithms.FourierConduction.items", "modules/generated/openpnm.algorithms.FourierConduction.keys", "modules/generated/openpnm.algorithms.FourierConduction.labels", "modules/generated/openpnm.algorithms.FourierConduction.num_pores", "modules/generated/openpnm.algorithms.FourierConduction.num_throats", "modules/generated/openpnm.algorithms.FourierConduction.pop", "modules/generated/openpnm.algorithms.FourierConduction.popitem", "modules/generated/openpnm.algorithms.FourierConduction.pores", "modules/generated/openpnm.algorithms.FourierConduction.props", "modules/generated/openpnm.algorithms.FourierConduction.rate", "modules/generated/openpnm.algorithms.FourierConduction.run", "modules/generated/openpnm.algorithms.FourierConduction.set_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_label", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC", "modules/generated/openpnm.algorithms.FourierConduction.set_source", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC", "modules/generated/openpnm.algorithms.FourierConduction.setdefault", "modules/generated/openpnm.algorithms.FourierConduction.throats", "modules/generated/openpnm.algorithms.FourierConduction.to_indices", "modules/generated/openpnm.algorithms.FourierConduction.to_mask", "modules/generated/openpnm.algorithms.FourierConduction.update", "modules/generated/openpnm.algorithms.FourierConduction.values", "modules/generated/openpnm.algorithms.InvasionPercolation", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping", "modules/generated/openpnm.algorithms.InvasionPercolation.clear", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs", "modules/generated/openpnm.algorithms.InvasionPercolation.copy", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys", "modules/generated/openpnm.algorithms.InvasionPercolation.get", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data", "modules/generated/openpnm.algorithms.InvasionPercolation.items", "modules/generated/openpnm.algorithms.InvasionPercolation.keys", "modules/generated/openpnm.algorithms.InvasionPercolation.labels", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve", "modules/generated/openpnm.algorithms.InvasionPercolation.pop", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem", "modules/generated/openpnm.algorithms.InvasionPercolation.pores", "modules/generated/openpnm.algorithms.InvasionPercolation.props", "modules/generated/openpnm.algorithms.InvasionPercolation.reset", "modules/generated/openpnm.algorithms.InvasionPercolation.run", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault", "modules/generated/openpnm.algorithms.InvasionPercolation.throats", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask", "modules/generated/openpnm.algorithms.InvasionPercolation.update", "modules/generated/openpnm.algorithms.InvasionPercolation.values", "modules/generated/openpnm.algorithms.IonicConduction", "modules/generated/openpnm.algorithms.IonicConduction.clear", "modules/generated/openpnm.algorithms.IonicConduction.clear_BCs", "modules/generated/openpnm.algorithms.IonicConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.IonicConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.IonicConduction.copy", "modules/generated/openpnm.algorithms.IonicConduction.filter_by_label", "modules/generated/openpnm.algorithms.IonicConduction.fromkeys", "modules/generated/openpnm.algorithms.IonicConduction.get", "modules/generated/openpnm.algorithms.IonicConduction.get_conduit_data", "modules/generated/openpnm.algorithms.IonicConduction.interpolate_data", "modules/generated/openpnm.algorithms.IonicConduction.items", "modules/generated/openpnm.algorithms.IonicConduction.keys", "modules/generated/openpnm.algorithms.IonicConduction.labels", "modules/generated/openpnm.algorithms.IonicConduction.num_pores", "modules/generated/openpnm.algorithms.IonicConduction.num_throats", "modules/generated/openpnm.algorithms.IonicConduction.pop", "modules/generated/openpnm.algorithms.IonicConduction.popitem", "modules/generated/openpnm.algorithms.IonicConduction.pores", "modules/generated/openpnm.algorithms.IonicConduction.props", "modules/generated/openpnm.algorithms.IonicConduction.rate", "modules/generated/openpnm.algorithms.IonicConduction.run", "modules/generated/openpnm.algorithms.IonicConduction.set_BC", "modules/generated/openpnm.algorithms.IonicConduction.set_label", "modules/generated/openpnm.algorithms.IonicConduction.set_rate_BC", "modules/generated/openpnm.algorithms.IonicConduction.set_source", "modules/generated/openpnm.algorithms.IonicConduction.set_value_BC", "modules/generated/openpnm.algorithms.IonicConduction.setdefault", "modules/generated/openpnm.algorithms.IonicConduction.throats", "modules/generated/openpnm.algorithms.IonicConduction.to_indices", "modules/generated/openpnm.algorithms.IonicConduction.to_mask", "modules/generated/openpnm.algorithms.IonicConduction.update", "modules/generated/openpnm.algorithms.IonicConduction.values", "modules/generated/openpnm.algorithms.OhmicConduction", "modules/generated/openpnm.algorithms.OhmicConduction.clear", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.OhmicConduction.copy", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys", "modules/generated/openpnm.algorithms.OhmicConduction.get", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data", "modules/generated/openpnm.algorithms.OhmicConduction.items", "modules/generated/openpnm.algorithms.OhmicConduction.keys", "modules/generated/openpnm.algorithms.OhmicConduction.labels", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats", "modules/generated/openpnm.algorithms.OhmicConduction.pop", "modules/generated/openpnm.algorithms.OhmicConduction.popitem", "modules/generated/openpnm.algorithms.OhmicConduction.pores", "modules/generated/openpnm.algorithms.OhmicConduction.props", "modules/generated/openpnm.algorithms.OhmicConduction.rate", "modules/generated/openpnm.algorithms.OhmicConduction.run", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_label", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC", "modules/generated/openpnm.algorithms.OhmicConduction.set_source", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault", "modules/generated/openpnm.algorithms.OhmicConduction.throats", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask", "modules/generated/openpnm.algorithms.OhmicConduction.update", "modules/generated/openpnm.algorithms.OhmicConduction.values", "modules/generated/openpnm.algorithms.ReactiveTransport", "modules/generated/openpnm.algorithms.ReactiveTransport.clear", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.ReactiveTransport.copy", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.ReactiveTransport.get", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.ReactiveTransport.items", "modules/generated/openpnm.algorithms.ReactiveTransport.keys", "modules/generated/openpnm.algorithms.ReactiveTransport.labels", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.ReactiveTransport.pop", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem", "modules/generated/openpnm.algorithms.ReactiveTransport.pores", "modules/generated/openpnm.algorithms.ReactiveTransport.props", "modules/generated/openpnm.algorithms.ReactiveTransport.rate", "modules/generated/openpnm.algorithms.ReactiveTransport.run", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.ReactiveTransport.throats", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.ReactiveTransport.update", "modules/generated/openpnm.algorithms.ReactiveTransport.values", "modules/generated/openpnm.algorithms.StokesFlow", "modules/generated/openpnm.algorithms.StokesFlow.clear", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs", "modules/generated/openpnm.algorithms.StokesFlow.copy", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys", "modules/generated/openpnm.algorithms.StokesFlow.get", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data", "modules/generated/openpnm.algorithms.StokesFlow.items", "modules/generated/openpnm.algorithms.StokesFlow.keys", "modules/generated/openpnm.algorithms.StokesFlow.labels", "modules/generated/openpnm.algorithms.StokesFlow.num_pores", "modules/generated/openpnm.algorithms.StokesFlow.num_throats", "modules/generated/openpnm.algorithms.StokesFlow.pop", "modules/generated/openpnm.algorithms.StokesFlow.popitem", "modules/generated/openpnm.algorithms.StokesFlow.pores", "modules/generated/openpnm.algorithms.StokesFlow.props", "modules/generated/openpnm.algorithms.StokesFlow.rate", "modules/generated/openpnm.algorithms.StokesFlow.run", "modules/generated/openpnm.algorithms.StokesFlow.set_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_label", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC", "modules/generated/openpnm.algorithms.StokesFlow.set_source", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC", "modules/generated/openpnm.algorithms.StokesFlow.setdefault", "modules/generated/openpnm.algorithms.StokesFlow.throats", "modules/generated/openpnm.algorithms.StokesFlow.to_indices", "modules/generated/openpnm.algorithms.StokesFlow.to_mask", "modules/generated/openpnm.algorithms.StokesFlow.update", "modules/generated/openpnm.algorithms.StokesFlow.values", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values", "modules/generated/openpnm.algorithms.TransientFickianDiffusion", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values", "modules/generated/openpnm.algorithms.TransientIonicConduction", "modules/generated/openpnm.algorithms.TransientIonicConduction.clear", "modules/generated/openpnm.algorithms.TransientIonicConduction.clear_BCs", "modules/generated/openpnm.algorithms.TransientIonicConduction.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientIonicConduction.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientIonicConduction.copy", "modules/generated/openpnm.algorithms.TransientIonicConduction.filter_by_label", "modules/generated/openpnm.algorithms.TransientIonicConduction.fromkeys", "modules/generated/openpnm.algorithms.TransientIonicConduction.get", "modules/generated/openpnm.algorithms.TransientIonicConduction.get_conduit_data", "modules/generated/openpnm.algorithms.TransientIonicConduction.interpolate_data", "modules/generated/openpnm.algorithms.TransientIonicConduction.items", "modules/generated/openpnm.algorithms.TransientIonicConduction.keys", "modules/generated/openpnm.algorithms.TransientIonicConduction.labels", "modules/generated/openpnm.algorithms.TransientIonicConduction.num_pores", "modules/generated/openpnm.algorithms.TransientIonicConduction.num_throats", "modules/generated/openpnm.algorithms.TransientIonicConduction.pop", "modules/generated/openpnm.algorithms.TransientIonicConduction.popitem", "modules/generated/openpnm.algorithms.TransientIonicConduction.pores", "modules/generated/openpnm.algorithms.TransientIonicConduction.props", "modules/generated/openpnm.algorithms.TransientIonicConduction.rate", "modules/generated/openpnm.algorithms.TransientIonicConduction.run", "modules/generated/openpnm.algorithms.TransientIonicConduction.set_BC", "modules/generated/openpnm.algorithms.TransientIonicConduction.set_label", "modules/generated/openpnm.algorithms.TransientIonicConduction.set_rate_BC", "modules/generated/openpnm.algorithms.TransientIonicConduction.set_source", "modules/generated/openpnm.algorithms.TransientIonicConduction.set_value_BC", "modules/generated/openpnm.algorithms.TransientIonicConduction.setdefault", "modules/generated/openpnm.algorithms.TransientIonicConduction.throats", "modules/generated/openpnm.algorithms.TransientIonicConduction.to_indices", "modules/generated/openpnm.algorithms.TransientIonicConduction.to_mask", "modules/generated/openpnm.algorithms.TransientIonicConduction.update", "modules/generated/openpnm.algorithms.TransientIonicConduction.values", "modules/generated/openpnm.algorithms.TransientReactiveTransport", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values", "modules/generated/openpnm.algorithms.Transport", "modules/generated/openpnm.algorithms.Transport.clear", "modules/generated/openpnm.algorithms.Transport.clear_BCs", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs", "modules/generated/openpnm.algorithms.Transport.copy", "modules/generated/openpnm.algorithms.Transport.filter_by_label", "modules/generated/openpnm.algorithms.Transport.fromkeys", "modules/generated/openpnm.algorithms.Transport.get", "modules/generated/openpnm.algorithms.Transport.get_conduit_data", "modules/generated/openpnm.algorithms.Transport.interpolate_data", "modules/generated/openpnm.algorithms.Transport.items", "modules/generated/openpnm.algorithms.Transport.keys", "modules/generated/openpnm.algorithms.Transport.labels", "modules/generated/openpnm.algorithms.Transport.num_pores", "modules/generated/openpnm.algorithms.Transport.num_throats", "modules/generated/openpnm.algorithms.Transport.pop", "modules/generated/openpnm.algorithms.Transport.popitem", "modules/generated/openpnm.algorithms.Transport.pores", "modules/generated/openpnm.algorithms.Transport.props", "modules/generated/openpnm.algorithms.Transport.rate", "modules/generated/openpnm.algorithms.Transport.run", "modules/generated/openpnm.algorithms.Transport.set_BC", "modules/generated/openpnm.algorithms.Transport.set_label", "modules/generated/openpnm.algorithms.Transport.set_rate_BC", "modules/generated/openpnm.algorithms.Transport.set_value_BC", "modules/generated/openpnm.algorithms.Transport.setdefault", "modules/generated/openpnm.algorithms.Transport.throats", "modules/generated/openpnm.algorithms.Transport.to_indices", "modules/generated/openpnm.algorithms.Transport.to_mask", "modules/generated/openpnm.algorithms.Transport.update", "modules/generated/openpnm.algorithms.Transport.values", "modules/generated/openpnm.core", "modules/generated/openpnm.core.Base2", "modules/generated/openpnm.core.Base2.clear", "modules/generated/openpnm.core.Base2.copy", "modules/generated/openpnm.core.Base2.fromkeys", "modules/generated/openpnm.core.Base2.get", "modules/generated/openpnm.core.Base2.get_conduit_data", "modules/generated/openpnm.core.Base2.interpolate_data", "modules/generated/openpnm.core.Base2.items", "modules/generated/openpnm.core.Base2.keys", "modules/generated/openpnm.core.Base2.pop", "modules/generated/openpnm.core.Base2.popitem", "modules/generated/openpnm.core.Base2.props", "modules/generated/openpnm.core.Base2.setdefault", "modules/generated/openpnm.core.Base2.to_indices", "modules/generated/openpnm.core.Base2.to_mask", "modules/generated/openpnm.core.Base2.update", "modules/generated/openpnm.core.Base2.values", "modules/generated/openpnm.core.Domain", "modules/generated/openpnm.core.Domain.add_model", "modules/generated/openpnm.core.Domain.add_model_collection", "modules/generated/openpnm.core.Domain.clear", "modules/generated/openpnm.core.Domain.copy", "modules/generated/openpnm.core.Domain.filter_by_label", "modules/generated/openpnm.core.Domain.fromkeys", "modules/generated/openpnm.core.Domain.get", "modules/generated/openpnm.core.Domain.get_conduit_data", "modules/generated/openpnm.core.Domain.interpolate_data", "modules/generated/openpnm.core.Domain.items", "modules/generated/openpnm.core.Domain.keys", "modules/generated/openpnm.core.Domain.labels", "modules/generated/openpnm.core.Domain.num_pores", "modules/generated/openpnm.core.Domain.num_throats", "modules/generated/openpnm.core.Domain.pop", "modules/generated/openpnm.core.Domain.popitem", "modules/generated/openpnm.core.Domain.pores", "modules/generated/openpnm.core.Domain.props", "modules/generated/openpnm.core.Domain.regenerate_models", "modules/generated/openpnm.core.Domain.run_model", "modules/generated/openpnm.core.Domain.set_label", "modules/generated/openpnm.core.Domain.setdefault", "modules/generated/openpnm.core.Domain.throats", "modules/generated/openpnm.core.Domain.to_indices", "modules/generated/openpnm.core.Domain.to_mask", "modules/generated/openpnm.core.Domain.update", "modules/generated/openpnm.core.Domain.values", "modules/generated/openpnm.core.LabelMixin", "modules/generated/openpnm.core.LabelMixin.filter_by_label", "modules/generated/openpnm.core.LabelMixin.labels", "modules/generated/openpnm.core.LabelMixin.num_pores", "modules/generated/openpnm.core.LabelMixin.num_throats", "modules/generated/openpnm.core.LabelMixin.pores", "modules/generated/openpnm.core.LabelMixin.set_label", "modules/generated/openpnm.core.LabelMixin.throats", "modules/generated/openpnm.core.ModelWrapper", "modules/generated/openpnm.core.ModelWrapper.__call__", "modules/generated/openpnm.core.ModelWrapper.clear", "modules/generated/openpnm.core.ModelWrapper.copy", "modules/generated/openpnm.core.ModelWrapper.fromkeys", "modules/generated/openpnm.core.ModelWrapper.get", "modules/generated/openpnm.core.ModelWrapper.items", "modules/generated/openpnm.core.ModelWrapper.keys", "modules/generated/openpnm.core.ModelWrapper.pop", "modules/generated/openpnm.core.ModelWrapper.popitem", "modules/generated/openpnm.core.ModelWrapper.setdefault", "modules/generated/openpnm.core.ModelWrapper.update", "modules/generated/openpnm.core.ModelWrapper.values", "modules/generated/openpnm.core.ModelsDict", "modules/generated/openpnm.core.ModelsDict.clear", "modules/generated/openpnm.core.ModelsDict.copy", "modules/generated/openpnm.core.ModelsDict.dependency_graph", "modules/generated/openpnm.core.ModelsDict.dependency_list", "modules/generated/openpnm.core.ModelsDict.dependency_map", "modules/generated/openpnm.core.ModelsDict.fromkeys", "modules/generated/openpnm.core.ModelsDict.get", "modules/generated/openpnm.core.ModelsDict.items", "modules/generated/openpnm.core.ModelsDict.keys", "modules/generated/openpnm.core.ModelsDict.pop", "modules/generated/openpnm.core.ModelsDict.popitem", "modules/generated/openpnm.core.ModelsDict.setdefault", "modules/generated/openpnm.core.ModelsDict.update", "modules/generated/openpnm.core.ModelsDict.values", "modules/generated/openpnm.core.ModelsMixin2", "modules/generated/openpnm.core.ModelsMixin2.add_model", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models", "modules/generated/openpnm.core.ModelsMixin2.run_model", "modules/generated/openpnm.core.ParserMixin", "modules/generated/openpnm.integrators", "modules/generated/openpnm.integrators.Integrator", "modules/generated/openpnm.integrators.ScipyRK45", "modules/generated/openpnm.integrators.ScipyRK45.solve", "modules/generated/openpnm.io", "modules/generated/openpnm.io.network_from_csv", "modules/generated/openpnm.io.network_from_jsongraph", "modules/generated/openpnm.io.network_from_marock", "modules/generated/openpnm.io.network_from_networkx", "modules/generated/openpnm.io.network_from_pergeos", "modules/generated/openpnm.io.network_from_porespy", "modules/generated/openpnm.io.network_from_statoil", "modules/generated/openpnm.io.network_to_comsol", "modules/generated/openpnm.io.network_to_csv", "modules/generated/openpnm.io.network_to_jsongraph", "modules/generated/openpnm.io.network_to_networkx", "modules/generated/openpnm.io.network_to_pandas", "modules/generated/openpnm.io.network_to_pergeos", "modules/generated/openpnm.io.network_to_salome", "modules/generated/openpnm.io.network_to_stl", "modules/generated/openpnm.io.print_hdf5", "modules/generated/openpnm.io.project_to_csv", "modules/generated/openpnm.io.project_to_dict", "modules/generated/openpnm.io.project_to_hdf5", "modules/generated/openpnm.io.project_to_pandas", "modules/generated/openpnm.io.project_to_paraview", "modules/generated/openpnm.io.project_to_vtk", "modules/generated/openpnm.io.project_to_xdmf", "modules/generated/openpnm.models", "modules/generated/openpnm.models.collections", "modules/generated/openpnm.models.collections.geometry", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles", "modules/generated/openpnm.models.collections.network", "modules/generated/openpnm.models.collections.phase", "modules/generated/openpnm.models.collections.phase.air", "modules/generated/openpnm.models.collections.phase.gas", "modules/generated/openpnm.models.collections.phase.liquid", "modules/generated/openpnm.models.collections.phase.mercury", "modules/generated/openpnm.models.collections.phase.water", "modules/generated/openpnm.models.collections.physics", "modules/generated/openpnm.models.collections.physics.basic", "modules/generated/openpnm.models.collections.physics.standard", "modules/generated/openpnm.models.geometry", "modules/generated/openpnm.models.geometry.conduit_lengths", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square", "modules/generated/openpnm.models.geometry.pore_seed", "modules/generated/openpnm.models.geometry.pore_seed.random", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated", "modules/generated/openpnm.models.geometry.pore_size", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere", "modules/generated/openpnm.models.geometry.pore_size.normal", "modules/generated/openpnm.models.geometry.pore_size.random", "modules/generated/openpnm.models.geometry.pore_size.weibull", "modules/generated/openpnm.models.geometry.pore_surface_area", "modules/generated/openpnm.models.geometry.pore_surface_area.circle", "modules/generated/openpnm.models.geometry.pore_surface_area.cube", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere", "modules/generated/openpnm.models.geometry.pore_surface_area.square", "modules/generated/openpnm.models.geometry.pore_volume", "modules/generated/openpnm.models.geometry.pore_volume.circle", "modules/generated/openpnm.models.geometry.pore_volume.cube", "modules/generated/openpnm.models.geometry.pore_volume.effective", "modules/generated/openpnm.models.geometry.pore_volume.sphere", "modules/generated/openpnm.models.geometry.pore_volume.square", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.compactness", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow", "modules/generated/openpnm.models.geometry.throat_centroid", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle", "modules/generated/openpnm.models.geometry.throat_endpoints", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles", "modules/generated/openpnm.models.geometry.throat_perimeter", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle", "modules/generated/openpnm.models.geometry.throat_seed", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_seed.random", "modules/generated/openpnm.models.geometry.throat_size", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution", "modules/generated/openpnm.models.geometry.throat_size.normal", "modules/generated/openpnm.models.geometry.throat_size.random", "modules/generated/openpnm.models.geometry.throat_size.weibull", "modules/generated/openpnm.models.geometry.throat_surface_area", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle", "modules/generated/openpnm.models.geometry.throat_vector", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore", "modules/generated/openpnm.models.geometry.throat_volume", "modules/generated/openpnm.models.geometry.throat_volume.cuboid", "modules/generated/openpnm.models.geometry.throat_volume.cylinder", "modules/generated/openpnm.models.geometry.throat_volume.extrusion", "modules/generated/openpnm.models.geometry.throat_volume.lens", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring", "modules/generated/openpnm.models.geometry.throat_volume.rectangle", "modules/generated/openpnm.models.misc", "modules/generated/openpnm.models.misc.blank", "modules/generated/openpnm.models.misc.clip", "modules/generated/openpnm.models.misc.constant", "modules/generated/openpnm.models.misc.difference", "modules/generated/openpnm.models.misc.fraction", "modules/generated/openpnm.models.misc.from_neighbor_pores", "modules/generated/openpnm.models.misc.from_neighbor_throats", "modules/generated/openpnm.models.misc.generic_distribution", "modules/generated/openpnm.models.misc.generic_function", "modules/generated/openpnm.models.misc.invert", "modules/generated/openpnm.models.misc.linear", "modules/generated/openpnm.models.misc.match_histogram", "modules/generated/openpnm.models.misc.normal", "modules/generated/openpnm.models.misc.normalize", "modules/generated/openpnm.models.misc.polynomial", "modules/generated/openpnm.models.misc.product", "modules/generated/openpnm.models.misc.random", "modules/generated/openpnm.models.misc.scaled", "modules/generated/openpnm.models.misc.summation", "modules/generated/openpnm.models.misc.weibull", "modules/generated/openpnm.models.network", "modules/generated/openpnm.models.network.bidirectional_throats", "modules/generated/openpnm.models.network.cluster_number", "modules/generated/openpnm.models.network.cluster_size", "modules/generated/openpnm.models.network.coordination_number", "modules/generated/openpnm.models.network.count_coincident_pores", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor", "modules/generated/openpnm.models.network.distance_to_nearest_pore", "modules/generated/openpnm.models.network.duplicate_throats", "modules/generated/openpnm.models.network.find_coincident_pores", "modules/generated/openpnm.models.network.headless_throats", "modules/generated/openpnm.models.network.isolated_pores", "modules/generated/openpnm.models.network.looped_throats", "modules/generated/openpnm.models.network.pore_to_pore_distance", "modules/generated/openpnm.models.network.reversed_throats", "modules/generated/openpnm.models.phase", "modules/generated/openpnm.models.phase.chemicals_wrapper", "modules/generated/openpnm.models.phase.critical_props", "modules/generated/openpnm.models.phase.density", "modules/generated/openpnm.models.phase.density.ideal_gas", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD", "modules/generated/openpnm.models.phase.density.mass_to_molar", "modules/generated/openpnm.models.phase.density.water_correlation", "modules/generated/openpnm.models.phase.diffusivity", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc", "modules/generated/openpnm.models.phase.heat_capacity", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp", "modules/generated/openpnm.models.phase.misc", "modules/generated/openpnm.models.phase.misc.mix_and_match", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures", "modules/generated/openpnm.models.phase.mixtures.from_component", "modules/generated/openpnm.models.phase.mixtures.mixing_rule", "modules/generated/openpnm.models.phase.mixtures.mole_summation", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction", "modules/generated/openpnm.models.phase.mixtures.salinity", "modules/generated/openpnm.models.phase.partition_coefficient", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water", "modules/generated/openpnm.models.phase.surface_tension", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb", "modules/generated/openpnm.models.phase.surface_tension.water_correlation", "modules/generated/openpnm.models.phase.thermal_conductivity", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation", "modules/generated/openpnm.models.phase.vapor_pressure", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation", "modules/generated/openpnm.models.phase.viscosity", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls", "modules/generated/openpnm.models.phase.viscosity.water_correlation", "modules/generated/openpnm.models.physics", "modules/generated/openpnm.models.physics.ad_dif_conductance", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif", "modules/generated/openpnm.models.physics.capillary_pressure", "modules/generated/openpnm.models.physics.capillary_pressure.purcell", "modules/generated/openpnm.models.physics.capillary_pressure.washburn", "modules/generated/openpnm.models.physics.diffusive_conductance", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion", "modules/generated/openpnm.models.physics.electrical_conductance", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors", "modules/generated/openpnm.models.physics.hydraulic_conductance", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt", "modules/generated/openpnm.models.physics.meniscus", "modules/generated/openpnm.models.physics.meniscus.general_toroidal", "modules/generated/openpnm.models.physics.meniscus.purcell", "modules/generated/openpnm.models.physics.meniscus.sinusoidal", "modules/generated/openpnm.models.physics.multiphase", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance", "modules/generated/openpnm.models.physics.multiphase.late_filling", "modules/generated/openpnm.models.physics.source_terms", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage", "modules/generated/openpnm.models.physics.source_terms.exponential", "modules/generated/openpnm.models.physics.source_terms.general_symbolic", "modules/generated/openpnm.models.physics.source_terms.linear", "modules/generated/openpnm.models.physics.source_terms.logarithm", "modules/generated/openpnm.models.physics.source_terms.natural_exponential", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm", "modules/generated/openpnm.models.physics.source_terms.power_law", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics", "modules/generated/openpnm.models.physics.thermal_conductance", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors", "modules/generated/openpnm.network", "modules/generated/openpnm.network.BodyCenteredCubic", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.BodyCenteredCubic.add_model", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection", "modules/generated/openpnm.network.BodyCenteredCubic.clear", "modules/generated/openpnm.network.BodyCenteredCubic.copy", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys", "modules/generated/openpnm.network.BodyCenteredCubic.get", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data", "modules/generated/openpnm.network.BodyCenteredCubic.items", "modules/generated/openpnm.network.BodyCenteredCubic.keys", "modules/generated/openpnm.network.BodyCenteredCubic.labels", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats", "modules/generated/openpnm.network.BodyCenteredCubic.pop", "modules/generated/openpnm.network.BodyCenteredCubic.popitem", "modules/generated/openpnm.network.BodyCenteredCubic.pores", "modules/generated/openpnm.network.BodyCenteredCubic.props", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models", "modules/generated/openpnm.network.BodyCenteredCubic.run_model", "modules/generated/openpnm.network.BodyCenteredCubic.set_label", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault", "modules/generated/openpnm.network.BodyCenteredCubic.throats", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask", "modules/generated/openpnm.network.BodyCenteredCubic.update", "modules/generated/openpnm.network.BodyCenteredCubic.values", "modules/generated/openpnm.network.Cubic", "modules/generated/openpnm.network.Cubic.add_boundary_pores", "modules/generated/openpnm.network.Cubic.add_model", "modules/generated/openpnm.network.Cubic.add_model_collection", "modules/generated/openpnm.network.Cubic.clear", "modules/generated/openpnm.network.Cubic.copy", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix", "modules/generated/openpnm.network.Cubic.create_incidence_matrix", "modules/generated/openpnm.network.Cubic.filter_by_label", "modules/generated/openpnm.network.Cubic.find_connected_pores", "modules/generated/openpnm.network.Cubic.find_connecting_throat", "modules/generated/openpnm.network.Cubic.find_nearby_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_pores", "modules/generated/openpnm.network.Cubic.find_neighbor_throats", "modules/generated/openpnm.network.Cubic.fromkeys", "modules/generated/openpnm.network.Cubic.get", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix", "modules/generated/openpnm.network.Cubic.get_conduit_data", "modules/generated/openpnm.network.Cubic.get_incidence_matrix", "modules/generated/openpnm.network.Cubic.interpolate_data", "modules/generated/openpnm.network.Cubic.items", "modules/generated/openpnm.network.Cubic.keys", "modules/generated/openpnm.network.Cubic.labels", "modules/generated/openpnm.network.Cubic.num_neighbors", "modules/generated/openpnm.network.Cubic.num_pores", "modules/generated/openpnm.network.Cubic.num_throats", "modules/generated/openpnm.network.Cubic.pop", "modules/generated/openpnm.network.Cubic.popitem", "modules/generated/openpnm.network.Cubic.pores", "modules/generated/openpnm.network.Cubic.props", "modules/generated/openpnm.network.Cubic.regenerate_models", "modules/generated/openpnm.network.Cubic.run_model", "modules/generated/openpnm.network.Cubic.set_label", "modules/generated/openpnm.network.Cubic.setdefault", "modules/generated/openpnm.network.Cubic.throats", "modules/generated/openpnm.network.Cubic.to_indices", "modules/generated/openpnm.network.Cubic.to_mask", "modules/generated/openpnm.network.Cubic.update", "modules/generated/openpnm.network.Cubic.values", "modules/generated/openpnm.network.CubicTemplate", "modules/generated/openpnm.network.CubicTemplate.add_model", "modules/generated/openpnm.network.CubicTemplate.add_model_collection", "modules/generated/openpnm.network.CubicTemplate.clear", "modules/generated/openpnm.network.CubicTemplate.copy", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.filter_by_label", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats", "modules/generated/openpnm.network.CubicTemplate.fromkeys", "modules/generated/openpnm.network.CubicTemplate.get", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix", "modules/generated/openpnm.network.CubicTemplate.interpolate_data", "modules/generated/openpnm.network.CubicTemplate.items", "modules/generated/openpnm.network.CubicTemplate.keys", "modules/generated/openpnm.network.CubicTemplate.labels", "modules/generated/openpnm.network.CubicTemplate.num_neighbors", "modules/generated/openpnm.network.CubicTemplate.num_pores", "modules/generated/openpnm.network.CubicTemplate.num_throats", "modules/generated/openpnm.network.CubicTemplate.pop", "modules/generated/openpnm.network.CubicTemplate.popitem", "modules/generated/openpnm.network.CubicTemplate.pores", "modules/generated/openpnm.network.CubicTemplate.props", "modules/generated/openpnm.network.CubicTemplate.regenerate_models", "modules/generated/openpnm.network.CubicTemplate.run_model", "modules/generated/openpnm.network.CubicTemplate.set_label", "modules/generated/openpnm.network.CubicTemplate.setdefault", "modules/generated/openpnm.network.CubicTemplate.throats", "modules/generated/openpnm.network.CubicTemplate.to_indices", "modules/generated/openpnm.network.CubicTemplate.to_mask", "modules/generated/openpnm.network.CubicTemplate.update", "modules/generated/openpnm.network.CubicTemplate.values", "modules/generated/openpnm.network.Delaunay", "modules/generated/openpnm.network.Delaunay.add_model", "modules/generated/openpnm.network.Delaunay.add_model_collection", "modules/generated/openpnm.network.Delaunay.clear", "modules/generated/openpnm.network.Delaunay.copy", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix", "modules/generated/openpnm.network.Delaunay.filter_by_label", "modules/generated/openpnm.network.Delaunay.find_connected_pores", "modules/generated/openpnm.network.Delaunay.find_connecting_throat", "modules/generated/openpnm.network.Delaunay.find_nearby_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats", "modules/generated/openpnm.network.Delaunay.fromkeys", "modules/generated/openpnm.network.Delaunay.get", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix", "modules/generated/openpnm.network.Delaunay.get_conduit_data", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix", "modules/generated/openpnm.network.Delaunay.interpolate_data", "modules/generated/openpnm.network.Delaunay.items", "modules/generated/openpnm.network.Delaunay.keys", "modules/generated/openpnm.network.Delaunay.labels", "modules/generated/openpnm.network.Delaunay.num_neighbors", "modules/generated/openpnm.network.Delaunay.num_pores", "modules/generated/openpnm.network.Delaunay.num_throats", "modules/generated/openpnm.network.Delaunay.pop", "modules/generated/openpnm.network.Delaunay.popitem", "modules/generated/openpnm.network.Delaunay.pores", "modules/generated/openpnm.network.Delaunay.props", "modules/generated/openpnm.network.Delaunay.regenerate_models", "modules/generated/openpnm.network.Delaunay.run_model", "modules/generated/openpnm.network.Delaunay.set_label", "modules/generated/openpnm.network.Delaunay.setdefault", "modules/generated/openpnm.network.Delaunay.throats", "modules/generated/openpnm.network.Delaunay.to_indices", "modules/generated/openpnm.network.Delaunay.to_mask", "modules/generated/openpnm.network.Delaunay.update", "modules/generated/openpnm.network.Delaunay.values", "modules/generated/openpnm.network.DelaunayVoronoiDual", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_boundary_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys", "modules/generated/openpnm.network.DelaunayVoronoiDual.get", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data", "modules/generated/openpnm.network.DelaunayVoronoiDual.items", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores", "modules/generated/openpnm.network.DelaunayVoronoiDual.props", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask", "modules/generated/openpnm.network.DelaunayVoronoiDual.update", "modules/generated/openpnm.network.DelaunayVoronoiDual.values", "modules/generated/openpnm.network.Demo", "modules/generated/openpnm.network.Demo.add_boundary_pores", "modules/generated/openpnm.network.Demo.add_model", "modules/generated/openpnm.network.Demo.add_model_collection", "modules/generated/openpnm.network.Demo.clear", "modules/generated/openpnm.network.Demo.copy", "modules/generated/openpnm.network.Demo.create_adjacency_matrix", "modules/generated/openpnm.network.Demo.create_incidence_matrix", "modules/generated/openpnm.network.Demo.filter_by_label", "modules/generated/openpnm.network.Demo.find_connected_pores", "modules/generated/openpnm.network.Demo.find_connecting_throat", "modules/generated/openpnm.network.Demo.find_nearby_pores", "modules/generated/openpnm.network.Demo.find_neighbor_pores", "modules/generated/openpnm.network.Demo.find_neighbor_throats", "modules/generated/openpnm.network.Demo.fromkeys", "modules/generated/openpnm.network.Demo.get", "modules/generated/openpnm.network.Demo.get_adjacency_matrix", "modules/generated/openpnm.network.Demo.get_conduit_data", "modules/generated/openpnm.network.Demo.get_incidence_matrix", "modules/generated/openpnm.network.Demo.interpolate_data", "modules/generated/openpnm.network.Demo.items", "modules/generated/openpnm.network.Demo.keys", "modules/generated/openpnm.network.Demo.labels", "modules/generated/openpnm.network.Demo.num_neighbors", "modules/generated/openpnm.network.Demo.num_pores", "modules/generated/openpnm.network.Demo.num_throats", "modules/generated/openpnm.network.Demo.pop", "modules/generated/openpnm.network.Demo.popitem", "modules/generated/openpnm.network.Demo.pores", "modules/generated/openpnm.network.Demo.props", "modules/generated/openpnm.network.Demo.regenerate_models", "modules/generated/openpnm.network.Demo.run_model", "modules/generated/openpnm.network.Demo.set_label", "modules/generated/openpnm.network.Demo.setdefault", "modules/generated/openpnm.network.Demo.throats", "modules/generated/openpnm.network.Demo.to_indices", "modules/generated/openpnm.network.Demo.to_mask", "modules/generated/openpnm.network.Demo.update", "modules/generated/openpnm.network.Demo.values", "modules/generated/openpnm.network.FaceCenteredCubic", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores", "modules/generated/openpnm.network.FaceCenteredCubic.add_model", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection", "modules/generated/openpnm.network.FaceCenteredCubic.clear", "modules/generated/openpnm.network.FaceCenteredCubic.copy", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys", "modules/generated/openpnm.network.FaceCenteredCubic.get", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data", "modules/generated/openpnm.network.FaceCenteredCubic.items", "modules/generated/openpnm.network.FaceCenteredCubic.keys", "modules/generated/openpnm.network.FaceCenteredCubic.labels", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats", "modules/generated/openpnm.network.FaceCenteredCubic.pop", "modules/generated/openpnm.network.FaceCenteredCubic.popitem", "modules/generated/openpnm.network.FaceCenteredCubic.pores", "modules/generated/openpnm.network.FaceCenteredCubic.props", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models", "modules/generated/openpnm.network.FaceCenteredCubic.run_model", "modules/generated/openpnm.network.FaceCenteredCubic.set_label", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault", "modules/generated/openpnm.network.FaceCenteredCubic.throats", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask", "modules/generated/openpnm.network.FaceCenteredCubic.update", "modules/generated/openpnm.network.FaceCenteredCubic.values", "modules/generated/openpnm.network.Network", "modules/generated/openpnm.network.Network.add_model", "modules/generated/openpnm.network.Network.add_model_collection", "modules/generated/openpnm.network.Network.clear", "modules/generated/openpnm.network.Network.copy", "modules/generated/openpnm.network.Network.create_adjacency_matrix", "modules/generated/openpnm.network.Network.create_incidence_matrix", "modules/generated/openpnm.network.Network.filter_by_label", "modules/generated/openpnm.network.Network.find_connected_pores", "modules/generated/openpnm.network.Network.find_connecting_throat", "modules/generated/openpnm.network.Network.find_nearby_pores", "modules/generated/openpnm.network.Network.find_neighbor_pores", "modules/generated/openpnm.network.Network.find_neighbor_throats", "modules/generated/openpnm.network.Network.fromkeys", "modules/generated/openpnm.network.Network.get", "modules/generated/openpnm.network.Network.get_adjacency_matrix", "modules/generated/openpnm.network.Network.get_conduit_data", "modules/generated/openpnm.network.Network.get_incidence_matrix", "modules/generated/openpnm.network.Network.interpolate_data", "modules/generated/openpnm.network.Network.items", "modules/generated/openpnm.network.Network.keys", "modules/generated/openpnm.network.Network.labels", "modules/generated/openpnm.network.Network.num_neighbors", "modules/generated/openpnm.network.Network.num_pores", "modules/generated/openpnm.network.Network.num_throats", "modules/generated/openpnm.network.Network.pop", "modules/generated/openpnm.network.Network.popitem", "modules/generated/openpnm.network.Network.pores", "modules/generated/openpnm.network.Network.props", "modules/generated/openpnm.network.Network.regenerate_models", "modules/generated/openpnm.network.Network.run_model", "modules/generated/openpnm.network.Network.set_label", "modules/generated/openpnm.network.Network.setdefault", "modules/generated/openpnm.network.Network.throats", "modules/generated/openpnm.network.Network.to_indices", "modules/generated/openpnm.network.Network.to_mask", "modules/generated/openpnm.network.Network.update", "modules/generated/openpnm.network.Network.values", "modules/generated/openpnm.network.Voronoi", "modules/generated/openpnm.network.Voronoi.add_model", "modules/generated/openpnm.network.Voronoi.add_model_collection", "modules/generated/openpnm.network.Voronoi.clear", "modules/generated/openpnm.network.Voronoi.copy", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix", "modules/generated/openpnm.network.Voronoi.filter_by_label", "modules/generated/openpnm.network.Voronoi.find_connected_pores", "modules/generated/openpnm.network.Voronoi.find_connecting_throat", "modules/generated/openpnm.network.Voronoi.find_nearby_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats", "modules/generated/openpnm.network.Voronoi.fromkeys", "modules/generated/openpnm.network.Voronoi.get", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix", "modules/generated/openpnm.network.Voronoi.get_conduit_data", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix", "modules/generated/openpnm.network.Voronoi.interpolate_data", "modules/generated/openpnm.network.Voronoi.items", "modules/generated/openpnm.network.Voronoi.keys", "modules/generated/openpnm.network.Voronoi.labels", "modules/generated/openpnm.network.Voronoi.num_neighbors", "modules/generated/openpnm.network.Voronoi.num_pores", "modules/generated/openpnm.network.Voronoi.num_throats", "modules/generated/openpnm.network.Voronoi.pop", "modules/generated/openpnm.network.Voronoi.popitem", "modules/generated/openpnm.network.Voronoi.pores", "modules/generated/openpnm.network.Voronoi.props", "modules/generated/openpnm.network.Voronoi.regenerate_models", "modules/generated/openpnm.network.Voronoi.run_model", "modules/generated/openpnm.network.Voronoi.set_label", "modules/generated/openpnm.network.Voronoi.setdefault", "modules/generated/openpnm.network.Voronoi.throats", "modules/generated/openpnm.network.Voronoi.to_indices", "modules/generated/openpnm.network.Voronoi.to_mask", "modules/generated/openpnm.network.Voronoi.update", "modules/generated/openpnm.network.Voronoi.values", "modules/generated/openpnm.phase", "modules/generated/openpnm.phase.Air", "modules/generated/openpnm.phase.Air.add_model", "modules/generated/openpnm.phase.Air.add_model_collection", "modules/generated/openpnm.phase.Air.clear", "modules/generated/openpnm.phase.Air.copy", "modules/generated/openpnm.phase.Air.filter_by_label", "modules/generated/openpnm.phase.Air.fromkeys", "modules/generated/openpnm.phase.Air.get", "modules/generated/openpnm.phase.Air.get_conduit_data", "modules/generated/openpnm.phase.Air.interpolate_data", "modules/generated/openpnm.phase.Air.items", "modules/generated/openpnm.phase.Air.keys", "modules/generated/openpnm.phase.Air.labels", "modules/generated/openpnm.phase.Air.num_pores", "modules/generated/openpnm.phase.Air.num_throats", "modules/generated/openpnm.phase.Air.pop", "modules/generated/openpnm.phase.Air.popitem", "modules/generated/openpnm.phase.Air.pores", "modules/generated/openpnm.phase.Air.props", "modules/generated/openpnm.phase.Air.regenerate_models", "modules/generated/openpnm.phase.Air.run_model", "modules/generated/openpnm.phase.Air.set_label", "modules/generated/openpnm.phase.Air.setdefault", "modules/generated/openpnm.phase.Air.throats", "modules/generated/openpnm.phase.Air.to_indices", "modules/generated/openpnm.phase.Air.to_mask", "modules/generated/openpnm.phase.Air.update", "modules/generated/openpnm.phase.Air.values", "modules/generated/openpnm.phase.BinaryGas", "modules/generated/openpnm.phase.BinaryGas.add_comp", "modules/generated/openpnm.phase.BinaryGas.add_model", "modules/generated/openpnm.phase.BinaryGas.add_model_collection", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health", "modules/generated/openpnm.phase.BinaryGas.clear", "modules/generated/openpnm.phase.BinaryGas.copy", "modules/generated/openpnm.phase.BinaryGas.filter_by_label", "modules/generated/openpnm.phase.BinaryGas.fromkeys", "modules/generated/openpnm.phase.BinaryGas.get", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals", "modules/generated/openpnm.phase.BinaryGas.interpolate_data", "modules/generated/openpnm.phase.BinaryGas.items", "modules/generated/openpnm.phase.BinaryGas.keys", "modules/generated/openpnm.phase.BinaryGas.labels", "modules/generated/openpnm.phase.BinaryGas.num_pores", "modules/generated/openpnm.phase.BinaryGas.num_throats", "modules/generated/openpnm.phase.BinaryGas.pop", "modules/generated/openpnm.phase.BinaryGas.popitem", "modules/generated/openpnm.phase.BinaryGas.pores", "modules/generated/openpnm.phase.BinaryGas.props", "modules/generated/openpnm.phase.BinaryGas.regenerate_models", "modules/generated/openpnm.phase.BinaryGas.remove_comp", "modules/generated/openpnm.phase.BinaryGas.run_model", "modules/generated/openpnm.phase.BinaryGas.set_label", "modules/generated/openpnm.phase.BinaryGas.setdefault", "modules/generated/openpnm.phase.BinaryGas.throats", "modules/generated/openpnm.phase.BinaryGas.to_indices", "modules/generated/openpnm.phase.BinaryGas.to_mask", "modules/generated/openpnm.phase.BinaryGas.update", "modules/generated/openpnm.phase.BinaryGas.values", "modules/generated/openpnm.phase.BinaryGas.y", "modules/generated/openpnm.phase.GasMixture", "modules/generated/openpnm.phase.GasMixture.add_comp", "modules/generated/openpnm.phase.GasMixture.add_model", "modules/generated/openpnm.phase.GasMixture.add_model_collection", "modules/generated/openpnm.phase.GasMixture.check_mixture_health", "modules/generated/openpnm.phase.GasMixture.clear", "modules/generated/openpnm.phase.GasMixture.copy", "modules/generated/openpnm.phase.GasMixture.filter_by_label", "modules/generated/openpnm.phase.GasMixture.fromkeys", "modules/generated/openpnm.phase.GasMixture.get", "modules/generated/openpnm.phase.GasMixture.get_comp_vals", "modules/generated/openpnm.phase.GasMixture.get_conduit_data", "modules/generated/openpnm.phase.GasMixture.get_mix_vals", "modules/generated/openpnm.phase.GasMixture.interpolate_data", "modules/generated/openpnm.phase.GasMixture.items", "modules/generated/openpnm.phase.GasMixture.keys", "modules/generated/openpnm.phase.GasMixture.labels", "modules/generated/openpnm.phase.GasMixture.num_pores", "modules/generated/openpnm.phase.GasMixture.num_throats", "modules/generated/openpnm.phase.GasMixture.pop", "modules/generated/openpnm.phase.GasMixture.popitem", "modules/generated/openpnm.phase.GasMixture.pores", "modules/generated/openpnm.phase.GasMixture.props", "modules/generated/openpnm.phase.GasMixture.regenerate_models", "modules/generated/openpnm.phase.GasMixture.remove_comp", "modules/generated/openpnm.phase.GasMixture.run_model", "modules/generated/openpnm.phase.GasMixture.set_label", "modules/generated/openpnm.phase.GasMixture.setdefault", "modules/generated/openpnm.phase.GasMixture.throats", "modules/generated/openpnm.phase.GasMixture.to_indices", "modules/generated/openpnm.phase.GasMixture.to_mask", "modules/generated/openpnm.phase.GasMixture.update", "modules/generated/openpnm.phase.GasMixture.values", "modules/generated/openpnm.phase.GasMixture.y", "modules/generated/openpnm.phase.LiquidMixture", "modules/generated/openpnm.phase.LiquidMixture.add_comp", "modules/generated/openpnm.phase.LiquidMixture.add_model", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.LiquidMixture.clear", "modules/generated/openpnm.phase.LiquidMixture.copy", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label", "modules/generated/openpnm.phase.LiquidMixture.fromkeys", "modules/generated/openpnm.phase.LiquidMixture.get", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data", "modules/generated/openpnm.phase.LiquidMixture.items", "modules/generated/openpnm.phase.LiquidMixture.keys", "modules/generated/openpnm.phase.LiquidMixture.labels", "modules/generated/openpnm.phase.LiquidMixture.num_pores", "modules/generated/openpnm.phase.LiquidMixture.num_throats", "modules/generated/openpnm.phase.LiquidMixture.pop", "modules/generated/openpnm.phase.LiquidMixture.popitem", "modules/generated/openpnm.phase.LiquidMixture.pores", "modules/generated/openpnm.phase.LiquidMixture.props", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models", "modules/generated/openpnm.phase.LiquidMixture.remove_comp", "modules/generated/openpnm.phase.LiquidMixture.run_model", "modules/generated/openpnm.phase.LiquidMixture.set_label", "modules/generated/openpnm.phase.LiquidMixture.setdefault", "modules/generated/openpnm.phase.LiquidMixture.throats", "modules/generated/openpnm.phase.LiquidMixture.to_indices", "modules/generated/openpnm.phase.LiquidMixture.to_mask", "modules/generated/openpnm.phase.LiquidMixture.update", "modules/generated/openpnm.phase.LiquidMixture.values", "modules/generated/openpnm.phase.LiquidMixture.x", "modules/generated/openpnm.phase.Mercury", "modules/generated/openpnm.phase.Mercury.add_model", "modules/generated/openpnm.phase.Mercury.add_model_collection", "modules/generated/openpnm.phase.Mercury.clear", "modules/generated/openpnm.phase.Mercury.copy", "modules/generated/openpnm.phase.Mercury.filter_by_label", "modules/generated/openpnm.phase.Mercury.fromkeys", "modules/generated/openpnm.phase.Mercury.get", "modules/generated/openpnm.phase.Mercury.get_conduit_data", "modules/generated/openpnm.phase.Mercury.interpolate_data", "modules/generated/openpnm.phase.Mercury.items", "modules/generated/openpnm.phase.Mercury.keys", "modules/generated/openpnm.phase.Mercury.labels", "modules/generated/openpnm.phase.Mercury.num_pores", "modules/generated/openpnm.phase.Mercury.num_throats", "modules/generated/openpnm.phase.Mercury.pop", "modules/generated/openpnm.phase.Mercury.popitem", "modules/generated/openpnm.phase.Mercury.pores", "modules/generated/openpnm.phase.Mercury.props", "modules/generated/openpnm.phase.Mercury.regenerate_models", "modules/generated/openpnm.phase.Mercury.run_model", "modules/generated/openpnm.phase.Mercury.set_label", "modules/generated/openpnm.phase.Mercury.setdefault", "modules/generated/openpnm.phase.Mercury.throats", "modules/generated/openpnm.phase.Mercury.to_indices", "modules/generated/openpnm.phase.Mercury.to_mask", "modules/generated/openpnm.phase.Mercury.update", "modules/generated/openpnm.phase.Mercury.values", "modules/generated/openpnm.phase.Mixture", "modules/generated/openpnm.phase.Mixture.add_comp", "modules/generated/openpnm.phase.Mixture.add_model", "modules/generated/openpnm.phase.Mixture.add_model_collection", "modules/generated/openpnm.phase.Mixture.check_mixture_health", "modules/generated/openpnm.phase.Mixture.clear", "modules/generated/openpnm.phase.Mixture.copy", "modules/generated/openpnm.phase.Mixture.filter_by_label", "modules/generated/openpnm.phase.Mixture.fromkeys", "modules/generated/openpnm.phase.Mixture.get", "modules/generated/openpnm.phase.Mixture.get_comp_vals", "modules/generated/openpnm.phase.Mixture.get_conduit_data", "modules/generated/openpnm.phase.Mixture.get_mix_vals", "modules/generated/openpnm.phase.Mixture.interpolate_data", "modules/generated/openpnm.phase.Mixture.items", "modules/generated/openpnm.phase.Mixture.keys", "modules/generated/openpnm.phase.Mixture.labels", "modules/generated/openpnm.phase.Mixture.num_pores", "modules/generated/openpnm.phase.Mixture.num_throats", "modules/generated/openpnm.phase.Mixture.pop", "modules/generated/openpnm.phase.Mixture.popitem", "modules/generated/openpnm.phase.Mixture.pores", "modules/generated/openpnm.phase.Mixture.props", "modules/generated/openpnm.phase.Mixture.regenerate_models", "modules/generated/openpnm.phase.Mixture.remove_comp", "modules/generated/openpnm.phase.Mixture.run_model", "modules/generated/openpnm.phase.Mixture.set_label", "modules/generated/openpnm.phase.Mixture.setdefault", "modules/generated/openpnm.phase.Mixture.throats", "modules/generated/openpnm.phase.Mixture.to_indices", "modules/generated/openpnm.phase.Mixture.to_mask", "modules/generated/openpnm.phase.Mixture.update", "modules/generated/openpnm.phase.Mixture.values", "modules/generated/openpnm.phase.Phase", "modules/generated/openpnm.phase.Phase.add_model", "modules/generated/openpnm.phase.Phase.add_model_collection", "modules/generated/openpnm.phase.Phase.clear", "modules/generated/openpnm.phase.Phase.copy", "modules/generated/openpnm.phase.Phase.filter_by_label", "modules/generated/openpnm.phase.Phase.fromkeys", "modules/generated/openpnm.phase.Phase.get", "modules/generated/openpnm.phase.Phase.get_conduit_data", "modules/generated/openpnm.phase.Phase.interpolate_data", "modules/generated/openpnm.phase.Phase.items", "modules/generated/openpnm.phase.Phase.keys", "modules/generated/openpnm.phase.Phase.labels", "modules/generated/openpnm.phase.Phase.num_pores", "modules/generated/openpnm.phase.Phase.num_throats", "modules/generated/openpnm.phase.Phase.pop", "modules/generated/openpnm.phase.Phase.popitem", "modules/generated/openpnm.phase.Phase.pores", "modules/generated/openpnm.phase.Phase.props", "modules/generated/openpnm.phase.Phase.regenerate_models", "modules/generated/openpnm.phase.Phase.run_model", "modules/generated/openpnm.phase.Phase.set_label", "modules/generated/openpnm.phase.Phase.setdefault", "modules/generated/openpnm.phase.Phase.throats", "modules/generated/openpnm.phase.Phase.to_indices", "modules/generated/openpnm.phase.Phase.to_mask", "modules/generated/openpnm.phase.Phase.update", "modules/generated/openpnm.phase.Phase.values", "modules/generated/openpnm.phase.Species", "modules/generated/openpnm.phase.Species.add_model", "modules/generated/openpnm.phase.Species.add_model_collection", "modules/generated/openpnm.phase.Species.clear", "modules/generated/openpnm.phase.Species.copy", "modules/generated/openpnm.phase.Species.filter_by_label", "modules/generated/openpnm.phase.Species.fromkeys", "modules/generated/openpnm.phase.Species.get", "modules/generated/openpnm.phase.Species.get_conduit_data", "modules/generated/openpnm.phase.Species.interpolate_data", "modules/generated/openpnm.phase.Species.items", "modules/generated/openpnm.phase.Species.keys", "modules/generated/openpnm.phase.Species.labels", "modules/generated/openpnm.phase.Species.num_pores", "modules/generated/openpnm.phase.Species.num_throats", "modules/generated/openpnm.phase.Species.pop", "modules/generated/openpnm.phase.Species.popitem", "modules/generated/openpnm.phase.Species.pores", "modules/generated/openpnm.phase.Species.props", "modules/generated/openpnm.phase.Species.regenerate_models", "modules/generated/openpnm.phase.Species.run_model", "modules/generated/openpnm.phase.Species.set_label", "modules/generated/openpnm.phase.Species.setdefault", "modules/generated/openpnm.phase.Species.throats", "modules/generated/openpnm.phase.Species.to_indices", "modules/generated/openpnm.phase.Species.to_mask", "modules/generated/openpnm.phase.Species.update", "modules/generated/openpnm.phase.Species.values", "modules/generated/openpnm.phase.StandardGas", "modules/generated/openpnm.phase.StandardGas.add_model", "modules/generated/openpnm.phase.StandardGas.add_model_collection", "modules/generated/openpnm.phase.StandardGas.clear", "modules/generated/openpnm.phase.StandardGas.copy", "modules/generated/openpnm.phase.StandardGas.filter_by_label", "modules/generated/openpnm.phase.StandardGas.fromkeys", "modules/generated/openpnm.phase.StandardGas.get", "modules/generated/openpnm.phase.StandardGas.get_conduit_data", "modules/generated/openpnm.phase.StandardGas.interpolate_data", "modules/generated/openpnm.phase.StandardGas.items", "modules/generated/openpnm.phase.StandardGas.keys", "modules/generated/openpnm.phase.StandardGas.labels", "modules/generated/openpnm.phase.StandardGas.num_pores", "modules/generated/openpnm.phase.StandardGas.num_throats", "modules/generated/openpnm.phase.StandardGas.pop", "modules/generated/openpnm.phase.StandardGas.popitem", "modules/generated/openpnm.phase.StandardGas.pores", "modules/generated/openpnm.phase.StandardGas.props", "modules/generated/openpnm.phase.StandardGas.regenerate_models", "modules/generated/openpnm.phase.StandardGas.run_model", "modules/generated/openpnm.phase.StandardGas.set_label", "modules/generated/openpnm.phase.StandardGas.setdefault", "modules/generated/openpnm.phase.StandardGas.throats", "modules/generated/openpnm.phase.StandardGas.to_indices", "modules/generated/openpnm.phase.StandardGas.to_mask", "modules/generated/openpnm.phase.StandardGas.update", "modules/generated/openpnm.phase.StandardGas.values", "modules/generated/openpnm.phase.StandardGasMixture", "modules/generated/openpnm.phase.StandardGasMixture.add_comp", "modules/generated/openpnm.phase.StandardGasMixture.add_model", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardGasMixture.clear", "modules/generated/openpnm.phase.StandardGasMixture.copy", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys", "modules/generated/openpnm.phase.StandardGasMixture.get", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data", "modules/generated/openpnm.phase.StandardGasMixture.items", "modules/generated/openpnm.phase.StandardGasMixture.keys", "modules/generated/openpnm.phase.StandardGasMixture.labels", "modules/generated/openpnm.phase.StandardGasMixture.num_pores", "modules/generated/openpnm.phase.StandardGasMixture.num_throats", "modules/generated/openpnm.phase.StandardGasMixture.pop", "modules/generated/openpnm.phase.StandardGasMixture.popitem", "modules/generated/openpnm.phase.StandardGasMixture.pores", "modules/generated/openpnm.phase.StandardGasMixture.props", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp", "modules/generated/openpnm.phase.StandardGasMixture.run_model", "modules/generated/openpnm.phase.StandardGasMixture.set_label", "modules/generated/openpnm.phase.StandardGasMixture.setdefault", "modules/generated/openpnm.phase.StandardGasMixture.throats", "modules/generated/openpnm.phase.StandardGasMixture.to_indices", "modules/generated/openpnm.phase.StandardGasMixture.to_mask", "modules/generated/openpnm.phase.StandardGasMixture.update", "modules/generated/openpnm.phase.StandardGasMixture.values", "modules/generated/openpnm.phase.StandardGasMixture.y", "modules/generated/openpnm.phase.StandardLiquid", "modules/generated/openpnm.phase.StandardLiquid.add_model", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection", "modules/generated/openpnm.phase.StandardLiquid.clear", "modules/generated/openpnm.phase.StandardLiquid.copy", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label", "modules/generated/openpnm.phase.StandardLiquid.fromkeys", "modules/generated/openpnm.phase.StandardLiquid.get", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data", "modules/generated/openpnm.phase.StandardLiquid.items", "modules/generated/openpnm.phase.StandardLiquid.keys", "modules/generated/openpnm.phase.StandardLiquid.labels", "modules/generated/openpnm.phase.StandardLiquid.num_pores", "modules/generated/openpnm.phase.StandardLiquid.num_throats", "modules/generated/openpnm.phase.StandardLiquid.pop", "modules/generated/openpnm.phase.StandardLiquid.popitem", "modules/generated/openpnm.phase.StandardLiquid.pores", "modules/generated/openpnm.phase.StandardLiquid.props", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models", "modules/generated/openpnm.phase.StandardLiquid.run_model", "modules/generated/openpnm.phase.StandardLiquid.set_label", "modules/generated/openpnm.phase.StandardLiquid.setdefault", "modules/generated/openpnm.phase.StandardLiquid.throats", "modules/generated/openpnm.phase.StandardLiquid.to_indices", "modules/generated/openpnm.phase.StandardLiquid.to_mask", "modules/generated/openpnm.phase.StandardLiquid.update", "modules/generated/openpnm.phase.StandardLiquid.values", "modules/generated/openpnm.phase.StandardLiquidMixture", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health", "modules/generated/openpnm.phase.StandardLiquidMixture.clear", "modules/generated/openpnm.phase.StandardLiquidMixture.copy", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys", "modules/generated/openpnm.phase.StandardLiquidMixture.get", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data", "modules/generated/openpnm.phase.StandardLiquidMixture.items", "modules/generated/openpnm.phase.StandardLiquidMixture.keys", "modules/generated/openpnm.phase.StandardLiquidMixture.labels", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats", "modules/generated/openpnm.phase.StandardLiquidMixture.pop", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem", "modules/generated/openpnm.phase.StandardLiquidMixture.pores", "modules/generated/openpnm.phase.StandardLiquidMixture.props", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault", "modules/generated/openpnm.phase.StandardLiquidMixture.throats", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask", "modules/generated/openpnm.phase.StandardLiquidMixture.update", "modules/generated/openpnm.phase.StandardLiquidMixture.values", "modules/generated/openpnm.phase.StandardLiquidMixture.x", "modules/generated/openpnm.phase.Water", "modules/generated/openpnm.phase.Water.add_model", "modules/generated/openpnm.phase.Water.add_model_collection", "modules/generated/openpnm.phase.Water.clear", "modules/generated/openpnm.phase.Water.copy", "modules/generated/openpnm.phase.Water.filter_by_label", "modules/generated/openpnm.phase.Water.fromkeys", "modules/generated/openpnm.phase.Water.get", "modules/generated/openpnm.phase.Water.get_conduit_data", "modules/generated/openpnm.phase.Water.interpolate_data", "modules/generated/openpnm.phase.Water.items", "modules/generated/openpnm.phase.Water.keys", "modules/generated/openpnm.phase.Water.labels", "modules/generated/openpnm.phase.Water.num_pores", "modules/generated/openpnm.phase.Water.num_throats", "modules/generated/openpnm.phase.Water.pop", "modules/generated/openpnm.phase.Water.popitem", "modules/generated/openpnm.phase.Water.pores", "modules/generated/openpnm.phase.Water.props", "modules/generated/openpnm.phase.Water.regenerate_models", "modules/generated/openpnm.phase.Water.run_model", "modules/generated/openpnm.phase.Water.set_label", "modules/generated/openpnm.phase.Water.setdefault", "modules/generated/openpnm.phase.Water.throats", "modules/generated/openpnm.phase.Water.to_indices", "modules/generated/openpnm.phase.Water.to_mask", "modules/generated/openpnm.phase.Water.update", "modules/generated/openpnm.phase.Water.values", "modules/generated/openpnm.solvers", "modules/generated/openpnm.solvers.BaseSolver", "modules/generated/openpnm.solvers.BaseSolver.solve", "modules/generated/openpnm.solvers.DirectSolver", "modules/generated/openpnm.solvers.DirectSolver.solve", "modules/generated/openpnm.solvers.IterativeSolver", "modules/generated/openpnm.solvers.IterativeSolver.solve", "modules/generated/openpnm.solvers.PETScLinearSolver", "modules/generated/openpnm.solvers.PETScLinearSolver.solve", "modules/generated/openpnm.solvers.PardisoSpsolve", "modules/generated/openpnm.solvers.PardisoSpsolve.solve", "modules/generated/openpnm.solvers.ScipyCG", "modules/generated/openpnm.solvers.ScipyCG.solve", "modules/generated/openpnm.solvers.ScipySpsolve", "modules/generated/openpnm.solvers.ScipySpsolve.solve", "modules/generated/openpnm.topotools", "modules/generated/openpnm.topotools.add_boundary_pores", "modules/generated/openpnm.topotools.add_reservoir_pore", "modules/generated/openpnm.topotools.bond_percolation", "modules/generated/openpnm.topotools.clone_pores", "modules/generated/openpnm.topotools.connect_pores", "modules/generated/openpnm.topotools.conns_to_am", "modules/generated/openpnm.topotools.dimensionality", "modules/generated/openpnm.topotools.drop_sites", "modules/generated/openpnm.topotools.extend", "modules/generated/openpnm.topotools.filter_pores_by_z", "modules/generated/openpnm.topotools.find_clusters", "modules/generated/openpnm.topotools.find_connected_sites", "modules/generated/openpnm.topotools.find_connecting_bonds", "modules/generated/openpnm.topotools.find_interface_throats", "modules/generated/openpnm.topotools.find_neighbor_bonds", "modules/generated/openpnm.topotools.find_neighbor_sites", "modules/generated/openpnm.topotools.find_path", "modules/generated/openpnm.topotools.find_pore_to_pore_distance", "modules/generated/openpnm.topotools.find_surface_pores", "modules/generated/openpnm.topotools.generate_base_points", "modules/generated/openpnm.topotools.get_domain_area", "modules/generated/openpnm.topotools.get_domain_length", "modules/generated/openpnm.topotools.get_shape", "modules/generated/openpnm.topotools.get_spacing", "modules/generated/openpnm.topotools.hull_centroid", "modules/generated/openpnm.topotools.is_fully_connected", "modules/generated/openpnm.topotools.iscoplanar", "modules/generated/openpnm.topotools.isoutside", "modules/generated/openpnm.topotools.ispercolating", "modules/generated/openpnm.topotools.issymmetric", "modules/generated/openpnm.topotools.istriangular", "modules/generated/openpnm.topotools.istril", "modules/generated/openpnm.topotools.istriu", "modules/generated/openpnm.topotools.label_faces", "modules/generated/openpnm.topotools.merge_networks", "modules/generated/openpnm.topotools.merge_pores", "modules/generated/openpnm.topotools.reduce_coordination", "modules/generated/openpnm.topotools.reflect_base_points", "modules/generated/openpnm.topotools.remove_isolated_clusters", "modules/generated/openpnm.topotools.rotate_coords", "modules/generated/openpnm.topotools.shear_coords", "modules/generated/openpnm.topotools.site_percolation", "modules/generated/openpnm.topotools.stitch", "modules/generated/openpnm.topotools.stitch_pores", "modules/generated/openpnm.topotools.template_cylinder_annulus", "modules/generated/openpnm.topotools.template_sphere_shell", "modules/generated/openpnm.topotools.tri_to_am", "modules/generated/openpnm.topotools.trim", "modules/generated/openpnm.topotools.vor_to_am", "modules/generated/openpnm.utils", "modules/generated/openpnm.utils.Docorator", "modules/generated/openpnm.utils.Docorator.__call__", "modules/generated/openpnm.utils.Docorator.dedent", "modules/generated/openpnm.utils.Docorator.dedents", "modules/generated/openpnm.utils.Docorator.delete_kwargs", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s", "modules/generated/openpnm.utils.Docorator.delete_params", "modules/generated/openpnm.utils.Docorator.delete_params_s", "modules/generated/openpnm.utils.Docorator.delete_types", "modules/generated/openpnm.utils.Docorator.delete_types_s", "modules/generated/openpnm.utils.Docorator.get_docstring", "modules/generated/openpnm.utils.Docorator.get_extended_summary", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf", "modules/generated/openpnm.utils.Docorator.get_full_description", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf", "modules/generated/openpnm.utils.Docorator.get_sections", "modules/generated/openpnm.utils.Docorator.get_sectionsf", "modules/generated/openpnm.utils.Docorator.get_summary", "modules/generated/openpnm.utils.Docorator.get_summaryf", "modules/generated/openpnm.utils.Docorator.keep_params", "modules/generated/openpnm.utils.Docorator.keep_params_s", "modules/generated/openpnm.utils.Docorator.keep_types", "modules/generated/openpnm.utils.Docorator.keep_types_s", "modules/generated/openpnm.utils.Docorator.save_docstring", "modules/generated/openpnm.utils.Docorator.with_indent", "modules/generated/openpnm.utils.Docorator.with_indents", "modules/generated/openpnm.utils.HealthDict", "modules/generated/openpnm.utils.HealthDict.clear", "modules/generated/openpnm.utils.HealthDict.copy", "modules/generated/openpnm.utils.HealthDict.fromkeys", "modules/generated/openpnm.utils.HealthDict.get", "modules/generated/openpnm.utils.HealthDict.items", "modules/generated/openpnm.utils.HealthDict.keys", "modules/generated/openpnm.utils.HealthDict.pop", "modules/generated/openpnm.utils.HealthDict.popitem", "modules/generated/openpnm.utils.HealthDict.setdefault", "modules/generated/openpnm.utils.HealthDict.update", "modules/generated/openpnm.utils.HealthDict.values", "modules/generated/openpnm.utils.NestedDict", "modules/generated/openpnm.utils.NestedDict.clear", "modules/generated/openpnm.utils.NestedDict.copy", "modules/generated/openpnm.utils.NestedDict.fromkeys", "modules/generated/openpnm.utils.NestedDict.get", "modules/generated/openpnm.utils.NestedDict.items", "modules/generated/openpnm.utils.NestedDict.keys", "modules/generated/openpnm.utils.NestedDict.pop", "modules/generated/openpnm.utils.NestedDict.popitem", "modules/generated/openpnm.utils.NestedDict.setdefault", "modules/generated/openpnm.utils.NestedDict.to_dict", "modules/generated/openpnm.utils.NestedDict.unravel", "modules/generated/openpnm.utils.NestedDict.update", "modules/generated/openpnm.utils.NestedDict.values", "modules/generated/openpnm.utils.PrintableDict", "modules/generated/openpnm.utils.PrintableDict.clear", "modules/generated/openpnm.utils.PrintableDict.copy", "modules/generated/openpnm.utils.PrintableDict.fromkeys", "modules/generated/openpnm.utils.PrintableDict.get", "modules/generated/openpnm.utils.PrintableDict.items", "modules/generated/openpnm.utils.PrintableDict.keys", "modules/generated/openpnm.utils.PrintableDict.pop", "modules/generated/openpnm.utils.PrintableDict.popitem", "modules/generated/openpnm.utils.PrintableDict.setdefault", "modules/generated/openpnm.utils.PrintableDict.update", "modules/generated/openpnm.utils.PrintableDict.values", "modules/generated/openpnm.utils.PrintableList", "modules/generated/openpnm.utils.PrintableList.append", "modules/generated/openpnm.utils.PrintableList.clear", "modules/generated/openpnm.utils.PrintableList.copy", "modules/generated/openpnm.utils.PrintableList.count", "modules/generated/openpnm.utils.PrintableList.extend", "modules/generated/openpnm.utils.PrintableList.index", "modules/generated/openpnm.utils.PrintableList.insert", "modules/generated/openpnm.utils.PrintableList.pop", "modules/generated/openpnm.utils.PrintableList.remove", "modules/generated/openpnm.utils.PrintableList.reverse", "modules/generated/openpnm.utils.PrintableList.sort", "modules/generated/openpnm.utils.Project", "modules/generated/openpnm.utils.Project.append", "modules/generated/openpnm.utils.Project.copy", "modules/generated/openpnm.utils.SettingsAttr", "modules/generated/openpnm.utils.SimpleList", "modules/generated/openpnm.utils.SimpleList.append", "modules/generated/openpnm.utils.TypedList", "modules/generated/openpnm.utils.TypedList.append", "modules/generated/openpnm.utils.TypedList.clear", "modules/generated/openpnm.utils.TypedList.copy", "modules/generated/openpnm.utils.TypedList.count", "modules/generated/openpnm.utils.TypedList.extend", "modules/generated/openpnm.utils.TypedList.index", "modules/generated/openpnm.utils.TypedList.insert", "modules/generated/openpnm.utils.TypedList.pop", "modules/generated/openpnm.utils.TypedList.remove", "modules/generated/openpnm.utils.TypedList.reverse", "modules/generated/openpnm.utils.TypedList.sort", "modules/generated/openpnm.utils.TypedMixin", "modules/generated/openpnm.utils.TypedSet", "modules/generated/openpnm.utils.TypedSet.add", "modules/generated/openpnm.utils.TypedSet.clear", "modules/generated/openpnm.utils.TypedSet.copy", "modules/generated/openpnm.utils.TypedSet.difference", "modules/generated/openpnm.utils.TypedSet.difference_update", "modules/generated/openpnm.utils.TypedSet.discard", "modules/generated/openpnm.utils.TypedSet.intersection", "modules/generated/openpnm.utils.TypedSet.intersection_update", "modules/generated/openpnm.utils.TypedSet.isdisjoint", "modules/generated/openpnm.utils.TypedSet.issubset", "modules/generated/openpnm.utils.TypedSet.issuperset", "modules/generated/openpnm.utils.TypedSet.pop", "modules/generated/openpnm.utils.TypedSet.remove", "modules/generated/openpnm.utils.TypedSet.symmetric_difference", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update", "modules/generated/openpnm.utils.TypedSet.union", "modules/generated/openpnm.utils.TypedSet.update", "modules/generated/openpnm.utils.Workspace", "modules/generated/openpnm.utils.Workspace.clear", "modules/generated/openpnm.utils.Workspace.close_project", "modules/generated/openpnm.utils.Workspace.copy", "modules/generated/openpnm.utils.Workspace.copy_project", "modules/generated/openpnm.utils.Workspace.fromkeys", "modules/generated/openpnm.utils.Workspace.get", "modules/generated/openpnm.utils.Workspace.items", "modules/generated/openpnm.utils.Workspace.keys", "modules/generated/openpnm.utils.Workspace.load_project", "modules/generated/openpnm.utils.Workspace.load_workspace", "modules/generated/openpnm.utils.Workspace.new_project", "modules/generated/openpnm.utils.Workspace.pop", "modules/generated/openpnm.utils.Workspace.popitem", "modules/generated/openpnm.utils.Workspace.save_project", "modules/generated/openpnm.utils.Workspace.save_workspace", "modules/generated/openpnm.utils.Workspace.setdefault", "modules/generated/openpnm.utils.Workspace.update", "modules/generated/openpnm.utils.Workspace.values", "modules/generated/openpnm.utils.check_data_health", "modules/generated/openpnm.utils.check_network_health", "modules/generated/openpnm.utils.dict_to_struct", "modules/generated/openpnm.utils.flat_list", "modules/generated/openpnm.utils.get_mixture_model_args", "modules/generated/openpnm.utils.get_printable_labels", "modules/generated/openpnm.utils.get_printable_props", "modules/generated/openpnm.utils.ignore_warnings", "modules/generated/openpnm.utils.is_symmetric", "modules/generated/openpnm.utils.is_transient", "modules/generated/openpnm.utils.is_valid_propname", "modules/generated/openpnm.utils.methods_to_table", "modules/generated/openpnm.utils.models_to_table", "modules/generated/openpnm.utils.sanitize_dict", "modules/generated/openpnm.utils.struct_to_dict", "modules/index"], "filenames": ["_examples/applications.rst", "_examples/index.rst", "_examples/reference.rst", "_examples/tutorials.rst", "basic_usage.rst", "examples/applications/absolute_permeability.ipynb", "examples/applications/adjusting_pore_size_distributions.ipynb", "examples/applications/dispersion_coefficient.ipynb", "examples/applications/effective_diffusivity_and_tortuosity.ipynb", "examples/applications/formation_factor.ipynb", "examples/applications/mercury_intrusion.ipynb", "examples/applications/porosity.ipynb", "examples/applications/relative_diffusivity.ipynb", "examples/applications/relative_permeability.ipynb", "examples/contrib/README.md", "examples/reference/architecture/pore_scale_models.ipynb", "examples/reference/architecture/settings_attribute_machinery.ipynb", "examples/reference/architecture/workspace_and_projects.ipynb", "examples/reference/simulations/available_matrix_solvers.ipynb", "examples/reference/simulations/basic_transport.ipynb", "examples/reference/simulations/explanation_of_units.ipynb", "examples/reference/simulations/reactive_transport.ipynb", "examples/reference/simulations/size_factors_and_transport_conductance.ipynb", "examples/reference/simulations/transient_transport.ipynb", "examples/tutorials/01_numerical_python_primer.ipynb", "examples/tutorials/02_network_generation_and_visualization.ipynb", "examples/tutorials/03_data_and_topology_storage.ipynb", "examples/tutorials/04_graph_queries_and_manipulation.ipynb", "examples/tutorials/05_defining_geometry.ipynb", "examples/tutorials/06_labels_and_domains.ipynb", "examples/tutorials/07_phases_and_mixtures.ipynb", "examples/tutorials/08_simulating_transport.ipynb", "examples/tutorials/09_simulating_invasion.ipynb", "examples/tutorials/10_visualization_options.ipynb", "index.rst", "installation.rst", "modules/generated/openpnm.algorithms.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.AdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.Algorithm.rst", "modules/generated/openpnm.algorithms.Algorithm.clear.rst", "modules/generated/openpnm.algorithms.Algorithm.clear_BCs.rst", "modules/generated/openpnm.algorithms.Algorithm.copy.rst", "modules/generated/openpnm.algorithms.Algorithm.filter_by_label.rst", "modules/generated/openpnm.algorithms.Algorithm.fromkeys.rst", "modules/generated/openpnm.algorithms.Algorithm.get.rst", "modules/generated/openpnm.algorithms.Algorithm.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Algorithm.interpolate_data.rst", "modules/generated/openpnm.algorithms.Algorithm.items.rst", "modules/generated/openpnm.algorithms.Algorithm.keys.rst", "modules/generated/openpnm.algorithms.Algorithm.labels.rst", "modules/generated/openpnm.algorithms.Algorithm.num_pores.rst", "modules/generated/openpnm.algorithms.Algorithm.num_throats.rst", "modules/generated/openpnm.algorithms.Algorithm.pop.rst", "modules/generated/openpnm.algorithms.Algorithm.popitem.rst", "modules/generated/openpnm.algorithms.Algorithm.pores.rst", "modules/generated/openpnm.algorithms.Algorithm.props.rst", "modules/generated/openpnm.algorithms.Algorithm.set_BC.rst", "modules/generated/openpnm.algorithms.Algorithm.set_label.rst", "modules/generated/openpnm.algorithms.Algorithm.setdefault.rst", "modules/generated/openpnm.algorithms.Algorithm.throats.rst", "modules/generated/openpnm.algorithms.Algorithm.to_indices.rst", "modules/generated/openpnm.algorithms.Algorithm.to_mask.rst", "modules/generated/openpnm.algorithms.Algorithm.update.rst", "modules/generated/openpnm.algorithms.Algorithm.values.rst", "modules/generated/openpnm.algorithms.Drainage.rst", "modules/generated/openpnm.algorithms.Drainage.apply_trapping.rst", "modules/generated/openpnm.algorithms.Drainage.clear.rst", "modules/generated/openpnm.algorithms.Drainage.clear_BCs.rst", "modules/generated/openpnm.algorithms.Drainage.copy.rst", "modules/generated/openpnm.algorithms.Drainage.filter_by_label.rst", "modules/generated/openpnm.algorithms.Drainage.fromkeys.rst", "modules/generated/openpnm.algorithms.Drainage.get.rst", "modules/generated/openpnm.algorithms.Drainage.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Drainage.interpolate_data.rst", "modules/generated/openpnm.algorithms.Drainage.items.rst", "modules/generated/openpnm.algorithms.Drainage.keys.rst", "modules/generated/openpnm.algorithms.Drainage.labels.rst", "modules/generated/openpnm.algorithms.Drainage.num_pores.rst", "modules/generated/openpnm.algorithms.Drainage.num_throats.rst", "modules/generated/openpnm.algorithms.Drainage.pc_curve.rst", "modules/generated/openpnm.algorithms.Drainage.pop.rst", "modules/generated/openpnm.algorithms.Drainage.popitem.rst", "modules/generated/openpnm.algorithms.Drainage.pores.rst", "modules/generated/openpnm.algorithms.Drainage.props.rst", "modules/generated/openpnm.algorithms.Drainage.reset.rst", "modules/generated/openpnm.algorithms.Drainage.run.rst", "modules/generated/openpnm.algorithms.Drainage.set_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.set_label.rst", "modules/generated/openpnm.algorithms.Drainage.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.Drainage.setdefault.rst", "modules/generated/openpnm.algorithms.Drainage.throats.rst", "modules/generated/openpnm.algorithms.Drainage.to_indices.rst", "modules/generated/openpnm.algorithms.Drainage.to_mask.rst", "modules/generated/openpnm.algorithms.Drainage.update.rst", "modules/generated/openpnm.algorithms.Drainage.values.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.FickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.FourierConduction.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.FourierConduction.copy.rst", "modules/generated/openpnm.algorithms.FourierConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.FourierConduction.get.rst", "modules/generated/openpnm.algorithms.FourierConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.FourierConduction.items.rst", "modules/generated/openpnm.algorithms.FourierConduction.keys.rst", "modules/generated/openpnm.algorithms.FourierConduction.labels.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.num_throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.pop.rst", "modules/generated/openpnm.algorithms.FourierConduction.popitem.rst", "modules/generated/openpnm.algorithms.FourierConduction.pores.rst", "modules/generated/openpnm.algorithms.FourierConduction.props.rst", "modules/generated/openpnm.algorithms.FourierConduction.rate.rst", "modules/generated/openpnm.algorithms.FourierConduction.run.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_label.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_source.rst", "modules/generated/openpnm.algorithms.FourierConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.FourierConduction.setdefault.rst", "modules/generated/openpnm.algorithms.FourierConduction.throats.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_indices.rst", "modules/generated/openpnm.algorithms.FourierConduction.to_mask.rst", "modules/generated/openpnm.algorithms.FourierConduction.update.rst", "modules/generated/openpnm.algorithms.FourierConduction.values.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.apply_trapping.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.clear_BCs.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.copy.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.filter_by_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.fromkeys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.get_conduit_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.interpolate_data.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.items.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.keys.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.labels.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.num_throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pc_curve.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pop.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.popitem.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.pores.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.props.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.reset.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.run.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_inlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_label.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.set_outlet_BC.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.setdefault.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.throats.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_indices.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.to_mask.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.update.rst", "modules/generated/openpnm.algorithms.InvasionPercolation.values.rst", "modules/generated/openpnm.algorithms.IonicConduction.rst", "modules/generated/openpnm.algorithms.IonicConduction.clear.rst", "modules/generated/openpnm.algorithms.IonicConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.IonicConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.IonicConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.IonicConduction.copy.rst", "modules/generated/openpnm.algorithms.IonicConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.IonicConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.IonicConduction.get.rst", "modules/generated/openpnm.algorithms.IonicConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.IonicConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.IonicConduction.items.rst", "modules/generated/openpnm.algorithms.IonicConduction.keys.rst", "modules/generated/openpnm.algorithms.IonicConduction.labels.rst", "modules/generated/openpnm.algorithms.IonicConduction.num_pores.rst", "modules/generated/openpnm.algorithms.IonicConduction.num_throats.rst", "modules/generated/openpnm.algorithms.IonicConduction.pop.rst", "modules/generated/openpnm.algorithms.IonicConduction.popitem.rst", "modules/generated/openpnm.algorithms.IonicConduction.pores.rst", "modules/generated/openpnm.algorithms.IonicConduction.props.rst", "modules/generated/openpnm.algorithms.IonicConduction.rate.rst", "modules/generated/openpnm.algorithms.IonicConduction.run.rst", "modules/generated/openpnm.algorithms.IonicConduction.set_BC.rst", "modules/generated/openpnm.algorithms.IonicConduction.set_label.rst", "modules/generated/openpnm.algorithms.IonicConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.IonicConduction.set_source.rst", "modules/generated/openpnm.algorithms.IonicConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.IonicConduction.setdefault.rst", "modules/generated/openpnm.algorithms.IonicConduction.throats.rst", "modules/generated/openpnm.algorithms.IonicConduction.to_indices.rst", "modules/generated/openpnm.algorithms.IonicConduction.to_mask.rst", "modules/generated/openpnm.algorithms.IonicConduction.update.rst", "modules/generated/openpnm.algorithms.IonicConduction.values.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.OhmicConduction.copy.rst", "modules/generated/openpnm.algorithms.OhmicConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get.rst", "modules/generated/openpnm.algorithms.OhmicConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.OhmicConduction.items.rst", "modules/generated/openpnm.algorithms.OhmicConduction.keys.rst", "modules/generated/openpnm.algorithms.OhmicConduction.labels.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.num_throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pop.rst", "modules/generated/openpnm.algorithms.OhmicConduction.popitem.rst", "modules/generated/openpnm.algorithms.OhmicConduction.pores.rst", "modules/generated/openpnm.algorithms.OhmicConduction.props.rst", "modules/generated/openpnm.algorithms.OhmicConduction.rate.rst", "modules/generated/openpnm.algorithms.OhmicConduction.run.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_label.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_source.rst", "modules/generated/openpnm.algorithms.OhmicConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.OhmicConduction.setdefault.rst", "modules/generated/openpnm.algorithms.OhmicConduction.throats.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_indices.rst", "modules/generated/openpnm.algorithms.OhmicConduction.to_mask.rst", "modules/generated/openpnm.algorithms.OhmicConduction.update.rst", "modules/generated/openpnm.algorithms.OhmicConduction.values.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.ReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.StokesFlow.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.StokesFlow.copy.rst", "modules/generated/openpnm.algorithms.StokesFlow.filter_by_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.fromkeys.rst", "modules/generated/openpnm.algorithms.StokesFlow.get.rst", "modules/generated/openpnm.algorithms.StokesFlow.get_conduit_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.interpolate_data.rst", "modules/generated/openpnm.algorithms.StokesFlow.items.rst", "modules/generated/openpnm.algorithms.StokesFlow.keys.rst", "modules/generated/openpnm.algorithms.StokesFlow.labels.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.num_throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.pop.rst", "modules/generated/openpnm.algorithms.StokesFlow.popitem.rst", "modules/generated/openpnm.algorithms.StokesFlow.pores.rst", "modules/generated/openpnm.algorithms.StokesFlow.props.rst", "modules/generated/openpnm.algorithms.StokesFlow.rate.rst", "modules/generated/openpnm.algorithms.StokesFlow.run.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_label.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_rate_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_source.rst", "modules/generated/openpnm.algorithms.StokesFlow.set_value_BC.rst", "modules/generated/openpnm.algorithms.StokesFlow.setdefault.rst", "modules/generated/openpnm.algorithms.StokesFlow.throats.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_indices.rst", "modules/generated/openpnm.algorithms.StokesFlow.to_mask.rst", "modules/generated/openpnm.algorithms.StokesFlow.update.rst", "modules/generated/openpnm.algorithms.StokesFlow.values.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientAdvectionDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.copy.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.items.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.keys.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.labels.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.num_throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pop.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.popitem.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.pores.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.props.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.rate.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.run.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_label.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_source.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.setdefault.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.throats.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_indices.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.to_mask.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.update.rst", "modules/generated/openpnm.algorithms.TransientFickianDiffusion.values.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.clear.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.copy.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.get.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.items.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.keys.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.labels.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.num_pores.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.num_throats.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.pop.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.popitem.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.pores.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.props.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.rate.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.run.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.set_BC.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.set_label.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.set_source.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.setdefault.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.throats.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.to_indices.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.to_mask.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.update.rst", "modules/generated/openpnm.algorithms.TransientIonicConduction.values.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.copy.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.filter_by_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.fromkeys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.interpolate_data.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.items.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.keys.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.labels.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.num_throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pop.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.popitem.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.pores.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.props.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.rate.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.run.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_label.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_source.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.set_value_BC.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.setdefault.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.throats.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_indices.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.to_mask.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.update.rst", "modules/generated/openpnm.algorithms.TransientReactiveTransport.values.rst", "modules/generated/openpnm.algorithms.Transport.rst", "modules/generated/openpnm.algorithms.Transport.clear.rst", "modules/generated/openpnm.algorithms.Transport.clear_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_rate_BCs.rst", "modules/generated/openpnm.algorithms.Transport.clear_value_BCs.rst", "modules/generated/openpnm.algorithms.Transport.copy.rst", "modules/generated/openpnm.algorithms.Transport.filter_by_label.rst", "modules/generated/openpnm.algorithms.Transport.fromkeys.rst", "modules/generated/openpnm.algorithms.Transport.get.rst", "modules/generated/openpnm.algorithms.Transport.get_conduit_data.rst", "modules/generated/openpnm.algorithms.Transport.interpolate_data.rst", "modules/generated/openpnm.algorithms.Transport.items.rst", "modules/generated/openpnm.algorithms.Transport.keys.rst", "modules/generated/openpnm.algorithms.Transport.labels.rst", "modules/generated/openpnm.algorithms.Transport.num_pores.rst", "modules/generated/openpnm.algorithms.Transport.num_throats.rst", "modules/generated/openpnm.algorithms.Transport.pop.rst", "modules/generated/openpnm.algorithms.Transport.popitem.rst", "modules/generated/openpnm.algorithms.Transport.pores.rst", "modules/generated/openpnm.algorithms.Transport.props.rst", "modules/generated/openpnm.algorithms.Transport.rate.rst", "modules/generated/openpnm.algorithms.Transport.run.rst", "modules/generated/openpnm.algorithms.Transport.set_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_label.rst", "modules/generated/openpnm.algorithms.Transport.set_rate_BC.rst", "modules/generated/openpnm.algorithms.Transport.set_value_BC.rst", "modules/generated/openpnm.algorithms.Transport.setdefault.rst", "modules/generated/openpnm.algorithms.Transport.throats.rst", "modules/generated/openpnm.algorithms.Transport.to_indices.rst", "modules/generated/openpnm.algorithms.Transport.to_mask.rst", "modules/generated/openpnm.algorithms.Transport.update.rst", "modules/generated/openpnm.algorithms.Transport.values.rst", "modules/generated/openpnm.core.rst", "modules/generated/openpnm.core.Base2.rst", "modules/generated/openpnm.core.Base2.clear.rst", "modules/generated/openpnm.core.Base2.copy.rst", "modules/generated/openpnm.core.Base2.fromkeys.rst", "modules/generated/openpnm.core.Base2.get.rst", "modules/generated/openpnm.core.Base2.get_conduit_data.rst", "modules/generated/openpnm.core.Base2.interpolate_data.rst", "modules/generated/openpnm.core.Base2.items.rst", "modules/generated/openpnm.core.Base2.keys.rst", "modules/generated/openpnm.core.Base2.pop.rst", "modules/generated/openpnm.core.Base2.popitem.rst", "modules/generated/openpnm.core.Base2.props.rst", "modules/generated/openpnm.core.Base2.setdefault.rst", "modules/generated/openpnm.core.Base2.to_indices.rst", "modules/generated/openpnm.core.Base2.to_mask.rst", "modules/generated/openpnm.core.Base2.update.rst", "modules/generated/openpnm.core.Base2.values.rst", "modules/generated/openpnm.core.Domain.rst", "modules/generated/openpnm.core.Domain.add_model.rst", "modules/generated/openpnm.core.Domain.add_model_collection.rst", "modules/generated/openpnm.core.Domain.clear.rst", "modules/generated/openpnm.core.Domain.copy.rst", "modules/generated/openpnm.core.Domain.filter_by_label.rst", "modules/generated/openpnm.core.Domain.fromkeys.rst", "modules/generated/openpnm.core.Domain.get.rst", "modules/generated/openpnm.core.Domain.get_conduit_data.rst", "modules/generated/openpnm.core.Domain.interpolate_data.rst", "modules/generated/openpnm.core.Domain.items.rst", "modules/generated/openpnm.core.Domain.keys.rst", "modules/generated/openpnm.core.Domain.labels.rst", "modules/generated/openpnm.core.Domain.num_pores.rst", "modules/generated/openpnm.core.Domain.num_throats.rst", "modules/generated/openpnm.core.Domain.pop.rst", "modules/generated/openpnm.core.Domain.popitem.rst", "modules/generated/openpnm.core.Domain.pores.rst", "modules/generated/openpnm.core.Domain.props.rst", "modules/generated/openpnm.core.Domain.regenerate_models.rst", "modules/generated/openpnm.core.Domain.run_model.rst", "modules/generated/openpnm.core.Domain.set_label.rst", "modules/generated/openpnm.core.Domain.setdefault.rst", "modules/generated/openpnm.core.Domain.throats.rst", "modules/generated/openpnm.core.Domain.to_indices.rst", "modules/generated/openpnm.core.Domain.to_mask.rst", "modules/generated/openpnm.core.Domain.update.rst", "modules/generated/openpnm.core.Domain.values.rst", "modules/generated/openpnm.core.LabelMixin.rst", "modules/generated/openpnm.core.LabelMixin.filter_by_label.rst", "modules/generated/openpnm.core.LabelMixin.labels.rst", "modules/generated/openpnm.core.LabelMixin.num_pores.rst", "modules/generated/openpnm.core.LabelMixin.num_throats.rst", "modules/generated/openpnm.core.LabelMixin.pores.rst", "modules/generated/openpnm.core.LabelMixin.set_label.rst", "modules/generated/openpnm.core.LabelMixin.throats.rst", "modules/generated/openpnm.core.ModelWrapper.rst", "modules/generated/openpnm.core.ModelWrapper.__call__.rst", "modules/generated/openpnm.core.ModelWrapper.clear.rst", "modules/generated/openpnm.core.ModelWrapper.copy.rst", "modules/generated/openpnm.core.ModelWrapper.fromkeys.rst", "modules/generated/openpnm.core.ModelWrapper.get.rst", "modules/generated/openpnm.core.ModelWrapper.items.rst", "modules/generated/openpnm.core.ModelWrapper.keys.rst", "modules/generated/openpnm.core.ModelWrapper.pop.rst", "modules/generated/openpnm.core.ModelWrapper.popitem.rst", "modules/generated/openpnm.core.ModelWrapper.setdefault.rst", "modules/generated/openpnm.core.ModelWrapper.update.rst", "modules/generated/openpnm.core.ModelWrapper.values.rst", "modules/generated/openpnm.core.ModelsDict.rst", "modules/generated/openpnm.core.ModelsDict.clear.rst", "modules/generated/openpnm.core.ModelsDict.copy.rst", "modules/generated/openpnm.core.ModelsDict.dependency_graph.rst", "modules/generated/openpnm.core.ModelsDict.dependency_list.rst", "modules/generated/openpnm.core.ModelsDict.dependency_map.rst", "modules/generated/openpnm.core.ModelsDict.fromkeys.rst", "modules/generated/openpnm.core.ModelsDict.get.rst", "modules/generated/openpnm.core.ModelsDict.items.rst", "modules/generated/openpnm.core.ModelsDict.keys.rst", "modules/generated/openpnm.core.ModelsDict.pop.rst", "modules/generated/openpnm.core.ModelsDict.popitem.rst", "modules/generated/openpnm.core.ModelsDict.setdefault.rst", "modules/generated/openpnm.core.ModelsDict.update.rst", "modules/generated/openpnm.core.ModelsDict.values.rst", "modules/generated/openpnm.core.ModelsMixin2.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model.rst", "modules/generated/openpnm.core.ModelsMixin2.add_model_collection.rst", "modules/generated/openpnm.core.ModelsMixin2.regenerate_models.rst", "modules/generated/openpnm.core.ModelsMixin2.run_model.rst", "modules/generated/openpnm.core.ParserMixin.rst", "modules/generated/openpnm.integrators.rst", "modules/generated/openpnm.integrators.Integrator.rst", "modules/generated/openpnm.integrators.ScipyRK45.rst", "modules/generated/openpnm.integrators.ScipyRK45.solve.rst", "modules/generated/openpnm.io.rst", "modules/generated/openpnm.io.network_from_csv.rst", "modules/generated/openpnm.io.network_from_jsongraph.rst", "modules/generated/openpnm.io.network_from_marock.rst", "modules/generated/openpnm.io.network_from_networkx.rst", "modules/generated/openpnm.io.network_from_pergeos.rst", "modules/generated/openpnm.io.network_from_porespy.rst", "modules/generated/openpnm.io.network_from_statoil.rst", "modules/generated/openpnm.io.network_to_comsol.rst", "modules/generated/openpnm.io.network_to_csv.rst", "modules/generated/openpnm.io.network_to_jsongraph.rst", "modules/generated/openpnm.io.network_to_networkx.rst", "modules/generated/openpnm.io.network_to_pandas.rst", "modules/generated/openpnm.io.network_to_pergeos.rst", "modules/generated/openpnm.io.network_to_salome.rst", "modules/generated/openpnm.io.network_to_stl.rst", "modules/generated/openpnm.io.print_hdf5.rst", "modules/generated/openpnm.io.project_to_csv.rst", "modules/generated/openpnm.io.project_to_dict.rst", "modules/generated/openpnm.io.project_to_hdf5.rst", "modules/generated/openpnm.io.project_to_pandas.rst", "modules/generated/openpnm.io.project_to_paraview.rst", "modules/generated/openpnm.io.project_to_vtk.rst", "modules/generated/openpnm.io.project_to_xdmf.rst", "modules/generated/openpnm.models.rst", "modules/generated/openpnm.models.collections.rst", "modules/generated/openpnm.models.collections.geometry.rst", "modules/generated/openpnm.models.collections.geometry.circles_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.cones_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.cubes_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.collections.geometry.spheres_and_cylinders.rst", "modules/generated/openpnm.models.collections.geometry.squares_and_rectangles.rst", "modules/generated/openpnm.models.collections.geometry.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.collections.network.rst", "modules/generated/openpnm.models.collections.phase.rst", "modules/generated/openpnm.models.collections.phase.air.rst", "modules/generated/openpnm.models.collections.phase.gas.rst", "modules/generated/openpnm.models.collections.phase.liquid.rst", "modules/generated/openpnm.models.collections.phase.mercury.rst", "modules/generated/openpnm.models.collections.phase.water.rst", "modules/generated/openpnm.models.collections.physics.rst", "modules/generated/openpnm.models.collections.physics.basic.rst", "modules/generated/openpnm.models.collections.physics.standard.rst", "modules/generated/openpnm.models.geometry.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cone.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_cross_sectional_area.square.rst", "modules/generated/openpnm.models.geometry.pore_seed.rst", "modules/generated/openpnm.models.geometry.pore_seed.random.rst", "modules/generated/openpnm.models.geometry.pore_seed.spatially_correlated.rst", "modules/generated/openpnm.models.geometry.pore_size.rst", "modules/generated/openpnm.models.geometry.pore_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.pore_size.from_neighbor_throats.rst", "modules/generated/openpnm.models.geometry.pore_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.pore_size.largest_sphere.rst", "modules/generated/openpnm.models.geometry.pore_size.normal.rst", "modules/generated/openpnm.models.geometry.pore_size.random.rst", "modules/generated/openpnm.models.geometry.pore_size.weibull.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.circle.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.cube.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.sphere.rst", "modules/generated/openpnm.models.geometry.pore_surface_area.square.rst", "modules/generated/openpnm.models.geometry.pore_volume.rst", "modules/generated/openpnm.models.geometry.pore_volume.circle.rst", "modules/generated/openpnm.models.geometry.pore_volume.cube.rst", "modules/generated/openpnm.models.geometry.pore_volume.effective.rst", "modules/generated/openpnm.models.geometry.pore_volume.sphere.rst", "modules/generated/openpnm.models.geometry.pore_volume.square.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.compactness.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao.rst", "modules/generated/openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow.rst", "modules/generated/openpnm.models.geometry.throat_centroid.rst", "modules/generated/openpnm.models.geometry.throat_centroid.pore_coords.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_cross_sectional_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.rst", "modules/generated/openpnm.models.geometry.throat_endpoints.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.rst", "modules/generated/openpnm.models.geometry.throat_length.circles_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.cubes_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_cones.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_pyramids.rst", "modules/generated/openpnm.models.geometry.throat_length.intersecting_trapezoids.rst", "modules/generated/openpnm.models.geometry.throat_length.pyramids_and_cuboids.rst", "modules/generated/openpnm.models.geometry.throat_length.spheres_and_cylinders.rst", "modules/generated/openpnm.models.geometry.throat_length.squares_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_length.trapezoids_and_rectangles.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_perimeter.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_seed.rst", "modules/generated/openpnm.models.geometry.throat_seed.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_seed.random.rst", "modules/generated/openpnm.models.geometry.throat_size.rst", "modules/generated/openpnm.models.geometry.throat_size.equivalent_diameter.rst", "modules/generated/openpnm.models.geometry.throat_size.from_neighbor_pores.rst", "modules/generated/openpnm.models.geometry.throat_size.generic_distribution.rst", "modules/generated/openpnm.models.geometry.throat_size.normal.rst", "modules/generated/openpnm.models.geometry.throat_size.random.rst", "modules/generated/openpnm.models.geometry.throat_size.weibull.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_surface_area.rectangle.rst", "modules/generated/openpnm.models.geometry.throat_vector.rst", "modules/generated/openpnm.models.geometry.throat_vector.pore_to_pore.rst", "modules/generated/openpnm.models.geometry.throat_volume.rst", "modules/generated/openpnm.models.geometry.throat_volume.cuboid.rst", "modules/generated/openpnm.models.geometry.throat_volume.cylinder.rst", "modules/generated/openpnm.models.geometry.throat_volume.extrusion.rst", "modules/generated/openpnm.models.geometry.throat_volume.lens.rst", "modules/generated/openpnm.models.geometry.throat_volume.pendular_ring.rst", "modules/generated/openpnm.models.geometry.throat_volume.rectangle.rst", "modules/generated/openpnm.models.misc.rst", "modules/generated/openpnm.models.misc.blank.rst", "modules/generated/openpnm.models.misc.clip.rst", "modules/generated/openpnm.models.misc.constant.rst", "modules/generated/openpnm.models.misc.difference.rst", "modules/generated/openpnm.models.misc.fraction.rst", "modules/generated/openpnm.models.misc.from_neighbor_pores.rst", "modules/generated/openpnm.models.misc.from_neighbor_throats.rst", "modules/generated/openpnm.models.misc.generic_distribution.rst", "modules/generated/openpnm.models.misc.generic_function.rst", "modules/generated/openpnm.models.misc.invert.rst", "modules/generated/openpnm.models.misc.linear.rst", "modules/generated/openpnm.models.misc.match_histogram.rst", "modules/generated/openpnm.models.misc.normal.rst", "modules/generated/openpnm.models.misc.normalize.rst", "modules/generated/openpnm.models.misc.polynomial.rst", "modules/generated/openpnm.models.misc.product.rst", "modules/generated/openpnm.models.misc.random.rst", "modules/generated/openpnm.models.misc.scaled.rst", "modules/generated/openpnm.models.misc.summation.rst", "modules/generated/openpnm.models.misc.weibull.rst", "modules/generated/openpnm.models.network.rst", "modules/generated/openpnm.models.network.bidirectional_throats.rst", "modules/generated/openpnm.models.network.cluster_number.rst", "modules/generated/openpnm.models.network.cluster_size.rst", "modules/generated/openpnm.models.network.coordination_number.rst", "modules/generated/openpnm.models.network.count_coincident_pores.rst", "modules/generated/openpnm.models.network.distance_to_furthest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_neighbor.rst", "modules/generated/openpnm.models.network.distance_to_nearest_pore.rst", "modules/generated/openpnm.models.network.duplicate_throats.rst", "modules/generated/openpnm.models.network.find_coincident_pores.rst", "modules/generated/openpnm.models.network.headless_throats.rst", "modules/generated/openpnm.models.network.isolated_pores.rst", "modules/generated/openpnm.models.network.looped_throats.rst", "modules/generated/openpnm.models.network.pore_to_pore_distance.rst", "modules/generated/openpnm.models.network.reversed_throats.rst", "modules/generated/openpnm.models.phase.rst", "modules/generated/openpnm.models.phase.chemicals_wrapper.rst", "modules/generated/openpnm.models.phase.critical_props.rst", "modules/generated/openpnm.models.phase.density.rst", "modules/generated/openpnm.models.phase.density.ideal_gas.rst", "modules/generated/openpnm.models.phase.density.liquid_mixture_COSTALD.rst", "modules/generated/openpnm.models.phase.density.liquid_pure_COSTALD.rst", "modules/generated/openpnm.models.phase.density.mass_to_molar.rst", "modules/generated/openpnm.models.phase.density.water_correlation.rst", "modules/generated/openpnm.models.phase.diffusivity.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_ce.rst", "modules/generated/openpnm.models.phase.diffusivity.gas_mixture_fesg.rst", "modules/generated/openpnm.models.phase.diffusivity.liquid_mixture_tc.rst", "modules/generated/openpnm.models.phase.heat_capacity.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_mixture_yweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.gas_pure_TRC.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.heat_capacity.liquid_pure_rp.rst", "modules/generated/openpnm.models.phase.misc.rst", "modules/generated/openpnm.models.phase.misc.mix_and_match.rst", "modules/generated/openpnm.models.phase.misc.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.rst", "modules/generated/openpnm.models.phase.mixtures.from_component.rst", "modules/generated/openpnm.models.phase.mixtures.mixing_rule.rst", "modules/generated/openpnm.models.phase.mixtures.mole_summation.rst", "modules/generated/openpnm.models.phase.mixtures.mole_to_mass_fraction.rst", "modules/generated/openpnm.models.phase.mixtures.salinity.rst", "modules/generated/openpnm.models.phase.partition_coefficient.rst", "modules/generated/openpnm.models.phase.partition_coefficient.gaseous_species_in_water.rst", "modules/generated/openpnm.models.phase.surface_tension.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_mixture_wsd.rst", "modules/generated/openpnm.models.phase.surface_tension.liquid_pure_bb.rst", "modules/generated/openpnm.models.phase.surface_tension.water_correlation.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_mixture_whz.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.gas_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_gismr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.liquid_pure_sr.rst", "modules/generated/openpnm.models.phase.thermal_conductivity.water_correlation.rst", "modules/generated/openpnm.models.phase.vapor_pressure.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_antoine.rst", "modules/generated/openpnm.models.phase.vapor_pressure.liquid_pure_lk.rst", "modules/generated/openpnm.models.phase.vapor_pressure.water_correlation.rst", "modules/generated/openpnm.models.phase.viscosity.rst", "modules/generated/openpnm.models.phase.viscosity.gas_mixture_hz.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_gesmr.rst", "modules/generated/openpnm.models.phase.viscosity.gas_pure_st.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_mixture_xweighted.rst", "modules/generated/openpnm.models.phase.viscosity.liquid_pure_ls.rst", "modules/generated/openpnm.models.phase.viscosity.water_correlation.rst", "modules/generated/openpnm.models.physics.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.rst", "modules/generated/openpnm.models.physics.ad_dif_conductance.ad_dif.rst", "modules/generated/openpnm.models.physics.capillary_pressure.rst", "modules/generated/openpnm.models.physics.capillary_pressure.purcell.rst", "modules/generated/openpnm.models.physics.capillary_pressure.washburn.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.generic_diffusive.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.mixed_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.ordinary_diffusion.rst", "modules/generated/openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion.rst", "modules/generated/openpnm.models.physics.electrical_conductance.rst", "modules/generated/openpnm.models.physics.electrical_conductance.generic_electrical.rst", "modules/generated/openpnm.models.physics.electrical_conductance.series_resistors.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.generic_hydraulic.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.hagen_poiseuille.rst", "modules/generated/openpnm.models.physics.hydraulic_conductance.valvatne_blunt.rst", "modules/generated/openpnm.models.physics.meniscus.rst", "modules/generated/openpnm.models.physics.meniscus.general_toroidal.rst", "modules/generated/openpnm.models.physics.meniscus.purcell.rst", "modules/generated/openpnm.models.physics.meniscus.sinusoidal.rst", "modules/generated/openpnm.models.physics.multiphase.rst", "modules/generated/openpnm.models.physics.multiphase.conduit_conductance.rst", "modules/generated/openpnm.models.physics.multiphase.late_filling.rst", "modules/generated/openpnm.models.physics.source_terms.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_conc.rst", "modules/generated/openpnm.models.physics.source_terms.butler_volmer_voltage.rst", "modules/generated/openpnm.models.physics.source_terms.exponential.rst", "modules/generated/openpnm.models.physics.source_terms.general_symbolic.rst", "modules/generated/openpnm.models.physics.source_terms.linear.rst", "modules/generated/openpnm.models.physics.source_terms.logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.natural_exponential.rst", "modules/generated/openpnm.models.physics.source_terms.natural_logarithm.rst", "modules/generated/openpnm.models.physics.source_terms.power_law.rst", "modules/generated/openpnm.models.physics.source_terms.standard_kinetics.rst", "modules/generated/openpnm.models.physics.thermal_conductance.rst", "modules/generated/openpnm.models.physics.thermal_conductance.generic_thermal.rst", "modules/generated/openpnm.models.physics.thermal_conductance.series_resistors.rst", "modules/generated/openpnm.network.rst", "modules/generated/openpnm.network.BodyCenteredCubic.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.BodyCenteredCubic.clear.rst", "modules/generated/openpnm.network.BodyCenteredCubic.copy.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.BodyCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.BodyCenteredCubic.items.rst", "modules/generated/openpnm.network.BodyCenteredCubic.keys.rst", "modules/generated/openpnm.network.BodyCenteredCubic.labels.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pop.rst", "modules/generated/openpnm.network.BodyCenteredCubic.popitem.rst", "modules/generated/openpnm.network.BodyCenteredCubic.pores.rst", "modules/generated/openpnm.network.BodyCenteredCubic.props.rst", "modules/generated/openpnm.network.BodyCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.BodyCenteredCubic.run_model.rst", "modules/generated/openpnm.network.BodyCenteredCubic.set_label.rst", "modules/generated/openpnm.network.BodyCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.BodyCenteredCubic.throats.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.BodyCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.BodyCenteredCubic.update.rst", "modules/generated/openpnm.network.BodyCenteredCubic.values.rst", "modules/generated/openpnm.network.Cubic.rst", "modules/generated/openpnm.network.Cubic.add_boundary_pores.rst", "modules/generated/openpnm.network.Cubic.add_model.rst", "modules/generated/openpnm.network.Cubic.add_model_collection.rst", "modules/generated/openpnm.network.Cubic.clear.rst", "modules/generated/openpnm.network.Cubic.copy.rst", "modules/generated/openpnm.network.Cubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.filter_by_label.rst", "modules/generated/openpnm.network.Cubic.find_connected_pores.rst", "modules/generated/openpnm.network.Cubic.find_connecting_throat.rst", "modules/generated/openpnm.network.Cubic.find_nearby_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.Cubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.Cubic.fromkeys.rst", "modules/generated/openpnm.network.Cubic.get.rst", "modules/generated/openpnm.network.Cubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Cubic.get_conduit_data.rst", "modules/generated/openpnm.network.Cubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.Cubic.interpolate_data.rst", "modules/generated/openpnm.network.Cubic.items.rst", "modules/generated/openpnm.network.Cubic.keys.rst", "modules/generated/openpnm.network.Cubic.labels.rst", "modules/generated/openpnm.network.Cubic.num_neighbors.rst", "modules/generated/openpnm.network.Cubic.num_pores.rst", "modules/generated/openpnm.network.Cubic.num_throats.rst", "modules/generated/openpnm.network.Cubic.pop.rst", "modules/generated/openpnm.network.Cubic.popitem.rst", "modules/generated/openpnm.network.Cubic.pores.rst", "modules/generated/openpnm.network.Cubic.props.rst", "modules/generated/openpnm.network.Cubic.regenerate_models.rst", "modules/generated/openpnm.network.Cubic.run_model.rst", "modules/generated/openpnm.network.Cubic.set_label.rst", "modules/generated/openpnm.network.Cubic.setdefault.rst", "modules/generated/openpnm.network.Cubic.throats.rst", "modules/generated/openpnm.network.Cubic.to_indices.rst", "modules/generated/openpnm.network.Cubic.to_mask.rst", "modules/generated/openpnm.network.Cubic.update.rst", "modules/generated/openpnm.network.Cubic.values.rst", "modules/generated/openpnm.network.CubicTemplate.rst", "modules/generated/openpnm.network.CubicTemplate.add_model.rst", "modules/generated/openpnm.network.CubicTemplate.add_model_collection.rst", "modules/generated/openpnm.network.CubicTemplate.clear.rst", "modules/generated/openpnm.network.CubicTemplate.copy.rst", "modules/generated/openpnm.network.CubicTemplate.create_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.create_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.filter_by_label.rst", "modules/generated/openpnm.network.CubicTemplate.find_connected_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_connecting_throat.rst", "modules/generated/openpnm.network.CubicTemplate.find_nearby_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_pores.rst", "modules/generated/openpnm.network.CubicTemplate.find_neighbor_throats.rst", "modules/generated/openpnm.network.CubicTemplate.fromkeys.rst", "modules/generated/openpnm.network.CubicTemplate.get.rst", "modules/generated/openpnm.network.CubicTemplate.get_adjacency_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.get_conduit_data.rst", "modules/generated/openpnm.network.CubicTemplate.get_incidence_matrix.rst", "modules/generated/openpnm.network.CubicTemplate.interpolate_data.rst", "modules/generated/openpnm.network.CubicTemplate.items.rst", "modules/generated/openpnm.network.CubicTemplate.keys.rst", "modules/generated/openpnm.network.CubicTemplate.labels.rst", "modules/generated/openpnm.network.CubicTemplate.num_neighbors.rst", "modules/generated/openpnm.network.CubicTemplate.num_pores.rst", "modules/generated/openpnm.network.CubicTemplate.num_throats.rst", "modules/generated/openpnm.network.CubicTemplate.pop.rst", "modules/generated/openpnm.network.CubicTemplate.popitem.rst", "modules/generated/openpnm.network.CubicTemplate.pores.rst", "modules/generated/openpnm.network.CubicTemplate.props.rst", "modules/generated/openpnm.network.CubicTemplate.regenerate_models.rst", "modules/generated/openpnm.network.CubicTemplate.run_model.rst", "modules/generated/openpnm.network.CubicTemplate.set_label.rst", "modules/generated/openpnm.network.CubicTemplate.setdefault.rst", "modules/generated/openpnm.network.CubicTemplate.throats.rst", "modules/generated/openpnm.network.CubicTemplate.to_indices.rst", "modules/generated/openpnm.network.CubicTemplate.to_mask.rst", "modules/generated/openpnm.network.CubicTemplate.update.rst", "modules/generated/openpnm.network.CubicTemplate.values.rst", "modules/generated/openpnm.network.Delaunay.rst", "modules/generated/openpnm.network.Delaunay.add_model.rst", "modules/generated/openpnm.network.Delaunay.add_model_collection.rst", "modules/generated/openpnm.network.Delaunay.clear.rst", "modules/generated/openpnm.network.Delaunay.copy.rst", "modules/generated/openpnm.network.Delaunay.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.create_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.filter_by_label.rst", "modules/generated/openpnm.network.Delaunay.find_connected_pores.rst", "modules/generated/openpnm.network.Delaunay.find_connecting_throat.rst", "modules/generated/openpnm.network.Delaunay.find_nearby_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_pores.rst", "modules/generated/openpnm.network.Delaunay.find_neighbor_throats.rst", "modules/generated/openpnm.network.Delaunay.fromkeys.rst", "modules/generated/openpnm.network.Delaunay.get.rst", "modules/generated/openpnm.network.Delaunay.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Delaunay.get_conduit_data.rst", "modules/generated/openpnm.network.Delaunay.get_incidence_matrix.rst", "modules/generated/openpnm.network.Delaunay.interpolate_data.rst", "modules/generated/openpnm.network.Delaunay.items.rst", "modules/generated/openpnm.network.Delaunay.keys.rst", "modules/generated/openpnm.network.Delaunay.labels.rst", "modules/generated/openpnm.network.Delaunay.num_neighbors.rst", "modules/generated/openpnm.network.Delaunay.num_pores.rst", "modules/generated/openpnm.network.Delaunay.num_throats.rst", "modules/generated/openpnm.network.Delaunay.pop.rst", "modules/generated/openpnm.network.Delaunay.popitem.rst", "modules/generated/openpnm.network.Delaunay.pores.rst", "modules/generated/openpnm.network.Delaunay.props.rst", "modules/generated/openpnm.network.Delaunay.regenerate_models.rst", "modules/generated/openpnm.network.Delaunay.run_model.rst", "modules/generated/openpnm.network.Delaunay.set_label.rst", "modules/generated/openpnm.network.Delaunay.setdefault.rst", "modules/generated/openpnm.network.Delaunay.throats.rst", "modules/generated/openpnm.network.Delaunay.to_indices.rst", "modules/generated/openpnm.network.Delaunay.to_mask.rst", "modules/generated/openpnm.network.Delaunay.update.rst", "modules/generated/openpnm.network.Delaunay.values.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_boundary_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.add_model_collection.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.clear.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.copy.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.create_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.filter_by_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connected_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_connecting_throat.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_nearby_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_neighbor_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_pore_hulls.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.find_throat_facets.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.fromkeys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_conduit_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.get_incidence_matrix.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.interpolate_data.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.items.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.keys.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.labels.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_neighbors.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.num_throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pop.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.popitem.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.pores.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.props.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.regenerate_models.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.run_model.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.set_label.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.setdefault.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.throats.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_indices.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.to_mask.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.update.rst", "modules/generated/openpnm.network.DelaunayVoronoiDual.values.rst", "modules/generated/openpnm.network.Demo.rst", "modules/generated/openpnm.network.Demo.add_boundary_pores.rst", "modules/generated/openpnm.network.Demo.add_model.rst", "modules/generated/openpnm.network.Demo.add_model_collection.rst", "modules/generated/openpnm.network.Demo.clear.rst", "modules/generated/openpnm.network.Demo.copy.rst", "modules/generated/openpnm.network.Demo.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.create_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.filter_by_label.rst", "modules/generated/openpnm.network.Demo.find_connected_pores.rst", "modules/generated/openpnm.network.Demo.find_connecting_throat.rst", "modules/generated/openpnm.network.Demo.find_nearby_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_pores.rst", "modules/generated/openpnm.network.Demo.find_neighbor_throats.rst", "modules/generated/openpnm.network.Demo.fromkeys.rst", "modules/generated/openpnm.network.Demo.get.rst", "modules/generated/openpnm.network.Demo.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Demo.get_conduit_data.rst", "modules/generated/openpnm.network.Demo.get_incidence_matrix.rst", "modules/generated/openpnm.network.Demo.interpolate_data.rst", "modules/generated/openpnm.network.Demo.items.rst", "modules/generated/openpnm.network.Demo.keys.rst", "modules/generated/openpnm.network.Demo.labels.rst", "modules/generated/openpnm.network.Demo.num_neighbors.rst", "modules/generated/openpnm.network.Demo.num_pores.rst", "modules/generated/openpnm.network.Demo.num_throats.rst", "modules/generated/openpnm.network.Demo.pop.rst", "modules/generated/openpnm.network.Demo.popitem.rst", "modules/generated/openpnm.network.Demo.pores.rst", "modules/generated/openpnm.network.Demo.props.rst", "modules/generated/openpnm.network.Demo.regenerate_models.rst", "modules/generated/openpnm.network.Demo.run_model.rst", "modules/generated/openpnm.network.Demo.set_label.rst", "modules/generated/openpnm.network.Demo.setdefault.rst", "modules/generated/openpnm.network.Demo.throats.rst", "modules/generated/openpnm.network.Demo.to_indices.rst", "modules/generated/openpnm.network.Demo.to_mask.rst", "modules/generated/openpnm.network.Demo.update.rst", "modules/generated/openpnm.network.Demo.values.rst", "modules/generated/openpnm.network.FaceCenteredCubic.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_boundary_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.add_model_collection.rst", "modules/generated/openpnm.network.FaceCenteredCubic.clear.rst", "modules/generated/openpnm.network.FaceCenteredCubic.copy.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.create_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.filter_by_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connected_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_connecting_throat.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_nearby_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.find_neighbor_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.fromkeys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_adjacency_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_conduit_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.get_incidence_matrix.rst", "modules/generated/openpnm.network.FaceCenteredCubic.interpolate_data.rst", "modules/generated/openpnm.network.FaceCenteredCubic.items.rst", "modules/generated/openpnm.network.FaceCenteredCubic.keys.rst", "modules/generated/openpnm.network.FaceCenteredCubic.labels.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_neighbors.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.num_throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pop.rst", "modules/generated/openpnm.network.FaceCenteredCubic.popitem.rst", "modules/generated/openpnm.network.FaceCenteredCubic.pores.rst", "modules/generated/openpnm.network.FaceCenteredCubic.props.rst", "modules/generated/openpnm.network.FaceCenteredCubic.regenerate_models.rst", "modules/generated/openpnm.network.FaceCenteredCubic.run_model.rst", "modules/generated/openpnm.network.FaceCenteredCubic.set_label.rst", "modules/generated/openpnm.network.FaceCenteredCubic.setdefault.rst", "modules/generated/openpnm.network.FaceCenteredCubic.throats.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_indices.rst", "modules/generated/openpnm.network.FaceCenteredCubic.to_mask.rst", "modules/generated/openpnm.network.FaceCenteredCubic.update.rst", "modules/generated/openpnm.network.FaceCenteredCubic.values.rst", "modules/generated/openpnm.network.Network.rst", "modules/generated/openpnm.network.Network.add_model.rst", "modules/generated/openpnm.network.Network.add_model_collection.rst", "modules/generated/openpnm.network.Network.clear.rst", "modules/generated/openpnm.network.Network.copy.rst", "modules/generated/openpnm.network.Network.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.create_incidence_matrix.rst", "modules/generated/openpnm.network.Network.filter_by_label.rst", "modules/generated/openpnm.network.Network.find_connected_pores.rst", "modules/generated/openpnm.network.Network.find_connecting_throat.rst", "modules/generated/openpnm.network.Network.find_nearby_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_pores.rst", "modules/generated/openpnm.network.Network.find_neighbor_throats.rst", "modules/generated/openpnm.network.Network.fromkeys.rst", "modules/generated/openpnm.network.Network.get.rst", "modules/generated/openpnm.network.Network.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Network.get_conduit_data.rst", "modules/generated/openpnm.network.Network.get_incidence_matrix.rst", "modules/generated/openpnm.network.Network.interpolate_data.rst", "modules/generated/openpnm.network.Network.items.rst", "modules/generated/openpnm.network.Network.keys.rst", "modules/generated/openpnm.network.Network.labels.rst", "modules/generated/openpnm.network.Network.num_neighbors.rst", "modules/generated/openpnm.network.Network.num_pores.rst", "modules/generated/openpnm.network.Network.num_throats.rst", "modules/generated/openpnm.network.Network.pop.rst", "modules/generated/openpnm.network.Network.popitem.rst", "modules/generated/openpnm.network.Network.pores.rst", "modules/generated/openpnm.network.Network.props.rst", "modules/generated/openpnm.network.Network.regenerate_models.rst", "modules/generated/openpnm.network.Network.run_model.rst", "modules/generated/openpnm.network.Network.set_label.rst", "modules/generated/openpnm.network.Network.setdefault.rst", "modules/generated/openpnm.network.Network.throats.rst", "modules/generated/openpnm.network.Network.to_indices.rst", "modules/generated/openpnm.network.Network.to_mask.rst", "modules/generated/openpnm.network.Network.update.rst", "modules/generated/openpnm.network.Network.values.rst", "modules/generated/openpnm.network.Voronoi.rst", "modules/generated/openpnm.network.Voronoi.add_model.rst", "modules/generated/openpnm.network.Voronoi.add_model_collection.rst", "modules/generated/openpnm.network.Voronoi.clear.rst", "modules/generated/openpnm.network.Voronoi.copy.rst", "modules/generated/openpnm.network.Voronoi.create_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.create_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.filter_by_label.rst", "modules/generated/openpnm.network.Voronoi.find_connected_pores.rst", "modules/generated/openpnm.network.Voronoi.find_connecting_throat.rst", "modules/generated/openpnm.network.Voronoi.find_nearby_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_pores.rst", "modules/generated/openpnm.network.Voronoi.find_neighbor_throats.rst", "modules/generated/openpnm.network.Voronoi.fromkeys.rst", "modules/generated/openpnm.network.Voronoi.get.rst", "modules/generated/openpnm.network.Voronoi.get_adjacency_matrix.rst", "modules/generated/openpnm.network.Voronoi.get_conduit_data.rst", "modules/generated/openpnm.network.Voronoi.get_incidence_matrix.rst", "modules/generated/openpnm.network.Voronoi.interpolate_data.rst", "modules/generated/openpnm.network.Voronoi.items.rst", "modules/generated/openpnm.network.Voronoi.keys.rst", "modules/generated/openpnm.network.Voronoi.labels.rst", "modules/generated/openpnm.network.Voronoi.num_neighbors.rst", "modules/generated/openpnm.network.Voronoi.num_pores.rst", "modules/generated/openpnm.network.Voronoi.num_throats.rst", "modules/generated/openpnm.network.Voronoi.pop.rst", "modules/generated/openpnm.network.Voronoi.popitem.rst", "modules/generated/openpnm.network.Voronoi.pores.rst", "modules/generated/openpnm.network.Voronoi.props.rst", "modules/generated/openpnm.network.Voronoi.regenerate_models.rst", "modules/generated/openpnm.network.Voronoi.run_model.rst", "modules/generated/openpnm.network.Voronoi.set_label.rst", "modules/generated/openpnm.network.Voronoi.setdefault.rst", "modules/generated/openpnm.network.Voronoi.throats.rst", "modules/generated/openpnm.network.Voronoi.to_indices.rst", "modules/generated/openpnm.network.Voronoi.to_mask.rst", "modules/generated/openpnm.network.Voronoi.update.rst", "modules/generated/openpnm.network.Voronoi.values.rst", "modules/generated/openpnm.phase.rst", "modules/generated/openpnm.phase.Air.rst", "modules/generated/openpnm.phase.Air.add_model.rst", "modules/generated/openpnm.phase.Air.add_model_collection.rst", "modules/generated/openpnm.phase.Air.clear.rst", "modules/generated/openpnm.phase.Air.copy.rst", "modules/generated/openpnm.phase.Air.filter_by_label.rst", "modules/generated/openpnm.phase.Air.fromkeys.rst", "modules/generated/openpnm.phase.Air.get.rst", "modules/generated/openpnm.phase.Air.get_conduit_data.rst", "modules/generated/openpnm.phase.Air.interpolate_data.rst", "modules/generated/openpnm.phase.Air.items.rst", "modules/generated/openpnm.phase.Air.keys.rst", "modules/generated/openpnm.phase.Air.labels.rst", "modules/generated/openpnm.phase.Air.num_pores.rst", "modules/generated/openpnm.phase.Air.num_throats.rst", "modules/generated/openpnm.phase.Air.pop.rst", "modules/generated/openpnm.phase.Air.popitem.rst", "modules/generated/openpnm.phase.Air.pores.rst", "modules/generated/openpnm.phase.Air.props.rst", "modules/generated/openpnm.phase.Air.regenerate_models.rst", "modules/generated/openpnm.phase.Air.run_model.rst", "modules/generated/openpnm.phase.Air.set_label.rst", "modules/generated/openpnm.phase.Air.setdefault.rst", "modules/generated/openpnm.phase.Air.throats.rst", "modules/generated/openpnm.phase.Air.to_indices.rst", "modules/generated/openpnm.phase.Air.to_mask.rst", "modules/generated/openpnm.phase.Air.update.rst", "modules/generated/openpnm.phase.Air.values.rst", "modules/generated/openpnm.phase.BinaryGas.rst", "modules/generated/openpnm.phase.BinaryGas.add_comp.rst", "modules/generated/openpnm.phase.BinaryGas.add_model.rst", "modules/generated/openpnm.phase.BinaryGas.add_model_collection.rst", "modules/generated/openpnm.phase.BinaryGas.check_mixture_health.rst", "modules/generated/openpnm.phase.BinaryGas.clear.rst", "modules/generated/openpnm.phase.BinaryGas.copy.rst", "modules/generated/openpnm.phase.BinaryGas.filter_by_label.rst", "modules/generated/openpnm.phase.BinaryGas.fromkeys.rst", "modules/generated/openpnm.phase.BinaryGas.get.rst", "modules/generated/openpnm.phase.BinaryGas.get_comp_vals.rst", "modules/generated/openpnm.phase.BinaryGas.get_conduit_data.rst", "modules/generated/openpnm.phase.BinaryGas.get_mix_vals.rst", "modules/generated/openpnm.phase.BinaryGas.interpolate_data.rst", "modules/generated/openpnm.phase.BinaryGas.items.rst", "modules/generated/openpnm.phase.BinaryGas.keys.rst", "modules/generated/openpnm.phase.BinaryGas.labels.rst", "modules/generated/openpnm.phase.BinaryGas.num_pores.rst", "modules/generated/openpnm.phase.BinaryGas.num_throats.rst", "modules/generated/openpnm.phase.BinaryGas.pop.rst", "modules/generated/openpnm.phase.BinaryGas.popitem.rst", "modules/generated/openpnm.phase.BinaryGas.pores.rst", "modules/generated/openpnm.phase.BinaryGas.props.rst", "modules/generated/openpnm.phase.BinaryGas.regenerate_models.rst", "modules/generated/openpnm.phase.BinaryGas.remove_comp.rst", "modules/generated/openpnm.phase.BinaryGas.run_model.rst", "modules/generated/openpnm.phase.BinaryGas.set_label.rst", "modules/generated/openpnm.phase.BinaryGas.setdefault.rst", "modules/generated/openpnm.phase.BinaryGas.throats.rst", "modules/generated/openpnm.phase.BinaryGas.to_indices.rst", "modules/generated/openpnm.phase.BinaryGas.to_mask.rst", "modules/generated/openpnm.phase.BinaryGas.update.rst", "modules/generated/openpnm.phase.BinaryGas.values.rst", "modules/generated/openpnm.phase.BinaryGas.y.rst", "modules/generated/openpnm.phase.GasMixture.rst", "modules/generated/openpnm.phase.GasMixture.add_comp.rst", "modules/generated/openpnm.phase.GasMixture.add_model.rst", "modules/generated/openpnm.phase.GasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.GasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.GasMixture.clear.rst", "modules/generated/openpnm.phase.GasMixture.copy.rst", "modules/generated/openpnm.phase.GasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.GasMixture.fromkeys.rst", "modules/generated/openpnm.phase.GasMixture.get.rst", "modules/generated/openpnm.phase.GasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.GasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.GasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.GasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.GasMixture.items.rst", "modules/generated/openpnm.phase.GasMixture.keys.rst", "modules/generated/openpnm.phase.GasMixture.labels.rst", "modules/generated/openpnm.phase.GasMixture.num_pores.rst", "modules/generated/openpnm.phase.GasMixture.num_throats.rst", "modules/generated/openpnm.phase.GasMixture.pop.rst", "modules/generated/openpnm.phase.GasMixture.popitem.rst", "modules/generated/openpnm.phase.GasMixture.pores.rst", "modules/generated/openpnm.phase.GasMixture.props.rst", "modules/generated/openpnm.phase.GasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.GasMixture.remove_comp.rst", "modules/generated/openpnm.phase.GasMixture.run_model.rst", "modules/generated/openpnm.phase.GasMixture.set_label.rst", "modules/generated/openpnm.phase.GasMixture.setdefault.rst", "modules/generated/openpnm.phase.GasMixture.throats.rst", "modules/generated/openpnm.phase.GasMixture.to_indices.rst", "modules/generated/openpnm.phase.GasMixture.to_mask.rst", "modules/generated/openpnm.phase.GasMixture.update.rst", "modules/generated/openpnm.phase.GasMixture.values.rst", "modules/generated/openpnm.phase.GasMixture.y.rst", "modules/generated/openpnm.phase.LiquidMixture.rst", "modules/generated/openpnm.phase.LiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model.rst", "modules/generated/openpnm.phase.LiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.LiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.LiquidMixture.clear.rst", "modules/generated/openpnm.phase.LiquidMixture.copy.rst", "modules/generated/openpnm.phase.LiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.LiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.LiquidMixture.get.rst", "modules/generated/openpnm.phase.LiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.LiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.LiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.LiquidMixture.items.rst", "modules/generated/openpnm.phase.LiquidMixture.keys.rst", "modules/generated/openpnm.phase.LiquidMixture.labels.rst", "modules/generated/openpnm.phase.LiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.LiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.LiquidMixture.pop.rst", "modules/generated/openpnm.phase.LiquidMixture.popitem.rst", "modules/generated/openpnm.phase.LiquidMixture.pores.rst", "modules/generated/openpnm.phase.LiquidMixture.props.rst", "modules/generated/openpnm.phase.LiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.LiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.LiquidMixture.run_model.rst", "modules/generated/openpnm.phase.LiquidMixture.set_label.rst", "modules/generated/openpnm.phase.LiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.LiquidMixture.throats.rst", "modules/generated/openpnm.phase.LiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.LiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.LiquidMixture.update.rst", "modules/generated/openpnm.phase.LiquidMixture.values.rst", "modules/generated/openpnm.phase.LiquidMixture.x.rst", "modules/generated/openpnm.phase.Mercury.rst", "modules/generated/openpnm.phase.Mercury.add_model.rst", "modules/generated/openpnm.phase.Mercury.add_model_collection.rst", "modules/generated/openpnm.phase.Mercury.clear.rst", "modules/generated/openpnm.phase.Mercury.copy.rst", "modules/generated/openpnm.phase.Mercury.filter_by_label.rst", "modules/generated/openpnm.phase.Mercury.fromkeys.rst", "modules/generated/openpnm.phase.Mercury.get.rst", "modules/generated/openpnm.phase.Mercury.get_conduit_data.rst", "modules/generated/openpnm.phase.Mercury.interpolate_data.rst", "modules/generated/openpnm.phase.Mercury.items.rst", "modules/generated/openpnm.phase.Mercury.keys.rst", "modules/generated/openpnm.phase.Mercury.labels.rst", "modules/generated/openpnm.phase.Mercury.num_pores.rst", "modules/generated/openpnm.phase.Mercury.num_throats.rst", "modules/generated/openpnm.phase.Mercury.pop.rst", "modules/generated/openpnm.phase.Mercury.popitem.rst", "modules/generated/openpnm.phase.Mercury.pores.rst", "modules/generated/openpnm.phase.Mercury.props.rst", "modules/generated/openpnm.phase.Mercury.regenerate_models.rst", "modules/generated/openpnm.phase.Mercury.run_model.rst", "modules/generated/openpnm.phase.Mercury.set_label.rst", "modules/generated/openpnm.phase.Mercury.setdefault.rst", "modules/generated/openpnm.phase.Mercury.throats.rst", "modules/generated/openpnm.phase.Mercury.to_indices.rst", "modules/generated/openpnm.phase.Mercury.to_mask.rst", "modules/generated/openpnm.phase.Mercury.update.rst", "modules/generated/openpnm.phase.Mercury.values.rst", "modules/generated/openpnm.phase.Mixture.rst", "modules/generated/openpnm.phase.Mixture.add_comp.rst", "modules/generated/openpnm.phase.Mixture.add_model.rst", "modules/generated/openpnm.phase.Mixture.add_model_collection.rst", "modules/generated/openpnm.phase.Mixture.check_mixture_health.rst", "modules/generated/openpnm.phase.Mixture.clear.rst", "modules/generated/openpnm.phase.Mixture.copy.rst", "modules/generated/openpnm.phase.Mixture.filter_by_label.rst", "modules/generated/openpnm.phase.Mixture.fromkeys.rst", "modules/generated/openpnm.phase.Mixture.get.rst", "modules/generated/openpnm.phase.Mixture.get_comp_vals.rst", "modules/generated/openpnm.phase.Mixture.get_conduit_data.rst", "modules/generated/openpnm.phase.Mixture.get_mix_vals.rst", "modules/generated/openpnm.phase.Mixture.interpolate_data.rst", "modules/generated/openpnm.phase.Mixture.items.rst", "modules/generated/openpnm.phase.Mixture.keys.rst", "modules/generated/openpnm.phase.Mixture.labels.rst", "modules/generated/openpnm.phase.Mixture.num_pores.rst", "modules/generated/openpnm.phase.Mixture.num_throats.rst", "modules/generated/openpnm.phase.Mixture.pop.rst", "modules/generated/openpnm.phase.Mixture.popitem.rst", "modules/generated/openpnm.phase.Mixture.pores.rst", "modules/generated/openpnm.phase.Mixture.props.rst", "modules/generated/openpnm.phase.Mixture.regenerate_models.rst", "modules/generated/openpnm.phase.Mixture.remove_comp.rst", "modules/generated/openpnm.phase.Mixture.run_model.rst", "modules/generated/openpnm.phase.Mixture.set_label.rst", "modules/generated/openpnm.phase.Mixture.setdefault.rst", "modules/generated/openpnm.phase.Mixture.throats.rst", "modules/generated/openpnm.phase.Mixture.to_indices.rst", "modules/generated/openpnm.phase.Mixture.to_mask.rst", "modules/generated/openpnm.phase.Mixture.update.rst", "modules/generated/openpnm.phase.Mixture.values.rst", "modules/generated/openpnm.phase.Phase.rst", "modules/generated/openpnm.phase.Phase.add_model.rst", "modules/generated/openpnm.phase.Phase.add_model_collection.rst", "modules/generated/openpnm.phase.Phase.clear.rst", "modules/generated/openpnm.phase.Phase.copy.rst", "modules/generated/openpnm.phase.Phase.filter_by_label.rst", "modules/generated/openpnm.phase.Phase.fromkeys.rst", "modules/generated/openpnm.phase.Phase.get.rst", "modules/generated/openpnm.phase.Phase.get_conduit_data.rst", "modules/generated/openpnm.phase.Phase.interpolate_data.rst", "modules/generated/openpnm.phase.Phase.items.rst", "modules/generated/openpnm.phase.Phase.keys.rst", "modules/generated/openpnm.phase.Phase.labels.rst", "modules/generated/openpnm.phase.Phase.num_pores.rst", "modules/generated/openpnm.phase.Phase.num_throats.rst", "modules/generated/openpnm.phase.Phase.pop.rst", "modules/generated/openpnm.phase.Phase.popitem.rst", "modules/generated/openpnm.phase.Phase.pores.rst", "modules/generated/openpnm.phase.Phase.props.rst", "modules/generated/openpnm.phase.Phase.regenerate_models.rst", "modules/generated/openpnm.phase.Phase.run_model.rst", "modules/generated/openpnm.phase.Phase.set_label.rst", "modules/generated/openpnm.phase.Phase.setdefault.rst", "modules/generated/openpnm.phase.Phase.throats.rst", "modules/generated/openpnm.phase.Phase.to_indices.rst", "modules/generated/openpnm.phase.Phase.to_mask.rst", "modules/generated/openpnm.phase.Phase.update.rst", "modules/generated/openpnm.phase.Phase.values.rst", "modules/generated/openpnm.phase.Species.rst", "modules/generated/openpnm.phase.Species.add_model.rst", "modules/generated/openpnm.phase.Species.add_model_collection.rst", "modules/generated/openpnm.phase.Species.clear.rst", "modules/generated/openpnm.phase.Species.copy.rst", "modules/generated/openpnm.phase.Species.filter_by_label.rst", "modules/generated/openpnm.phase.Species.fromkeys.rst", "modules/generated/openpnm.phase.Species.get.rst", "modules/generated/openpnm.phase.Species.get_conduit_data.rst", "modules/generated/openpnm.phase.Species.interpolate_data.rst", "modules/generated/openpnm.phase.Species.items.rst", "modules/generated/openpnm.phase.Species.keys.rst", "modules/generated/openpnm.phase.Species.labels.rst", "modules/generated/openpnm.phase.Species.num_pores.rst", "modules/generated/openpnm.phase.Species.num_throats.rst", "modules/generated/openpnm.phase.Species.pop.rst", "modules/generated/openpnm.phase.Species.popitem.rst", "modules/generated/openpnm.phase.Species.pores.rst", "modules/generated/openpnm.phase.Species.props.rst", "modules/generated/openpnm.phase.Species.regenerate_models.rst", "modules/generated/openpnm.phase.Species.run_model.rst", "modules/generated/openpnm.phase.Species.set_label.rst", "modules/generated/openpnm.phase.Species.setdefault.rst", "modules/generated/openpnm.phase.Species.throats.rst", "modules/generated/openpnm.phase.Species.to_indices.rst", "modules/generated/openpnm.phase.Species.to_mask.rst", "modules/generated/openpnm.phase.Species.update.rst", "modules/generated/openpnm.phase.Species.values.rst", "modules/generated/openpnm.phase.StandardGas.rst", "modules/generated/openpnm.phase.StandardGas.add_model.rst", "modules/generated/openpnm.phase.StandardGas.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGas.clear.rst", "modules/generated/openpnm.phase.StandardGas.copy.rst", "modules/generated/openpnm.phase.StandardGas.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGas.fromkeys.rst", "modules/generated/openpnm.phase.StandardGas.get.rst", "modules/generated/openpnm.phase.StandardGas.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGas.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGas.items.rst", "modules/generated/openpnm.phase.StandardGas.keys.rst", "modules/generated/openpnm.phase.StandardGas.labels.rst", "modules/generated/openpnm.phase.StandardGas.num_pores.rst", "modules/generated/openpnm.phase.StandardGas.num_throats.rst", "modules/generated/openpnm.phase.StandardGas.pop.rst", "modules/generated/openpnm.phase.StandardGas.popitem.rst", "modules/generated/openpnm.phase.StandardGas.pores.rst", "modules/generated/openpnm.phase.StandardGas.props.rst", "modules/generated/openpnm.phase.StandardGas.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGas.run_model.rst", "modules/generated/openpnm.phase.StandardGas.set_label.rst", "modules/generated/openpnm.phase.StandardGas.setdefault.rst", "modules/generated/openpnm.phase.StandardGas.throats.rst", "modules/generated/openpnm.phase.StandardGas.to_indices.rst", "modules/generated/openpnm.phase.StandardGas.to_mask.rst", "modules/generated/openpnm.phase.StandardGas.update.rst", "modules/generated/openpnm.phase.StandardGas.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardGasMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardGasMixture.clear.rst", "modules/generated/openpnm.phase.StandardGasMixture.copy.rst", "modules/generated/openpnm.phase.StandardGasMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardGasMixture.get.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardGasMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardGasMixture.items.rst", "modules/generated/openpnm.phase.StandardGasMixture.keys.rst", "modules/generated/openpnm.phase.StandardGasMixture.labels.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.pop.rst", "modules/generated/openpnm.phase.StandardGasMixture.popitem.rst", "modules/generated/openpnm.phase.StandardGasMixture.pores.rst", "modules/generated/openpnm.phase.StandardGasMixture.props.rst", "modules/generated/openpnm.phase.StandardGasMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardGasMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardGasMixture.run_model.rst", "modules/generated/openpnm.phase.StandardGasMixture.set_label.rst", "modules/generated/openpnm.phase.StandardGasMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardGasMixture.throats.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardGasMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardGasMixture.update.rst", "modules/generated/openpnm.phase.StandardGasMixture.values.rst", "modules/generated/openpnm.phase.StandardGasMixture.y.rst", "modules/generated/openpnm.phase.StandardLiquid.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model.rst", "modules/generated/openpnm.phase.StandardLiquid.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquid.clear.rst", "modules/generated/openpnm.phase.StandardLiquid.copy.rst", "modules/generated/openpnm.phase.StandardLiquid.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquid.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquid.get.rst", "modules/generated/openpnm.phase.StandardLiquid.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquid.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquid.items.rst", "modules/generated/openpnm.phase.StandardLiquid.keys.rst", "modules/generated/openpnm.phase.StandardLiquid.labels.rst", "modules/generated/openpnm.phase.StandardLiquid.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquid.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquid.pop.rst", "modules/generated/openpnm.phase.StandardLiquid.popitem.rst", "modules/generated/openpnm.phase.StandardLiquid.pores.rst", "modules/generated/openpnm.phase.StandardLiquid.props.rst", "modules/generated/openpnm.phase.StandardLiquid.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquid.run_model.rst", "modules/generated/openpnm.phase.StandardLiquid.set_label.rst", "modules/generated/openpnm.phase.StandardLiquid.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquid.throats.rst", "modules/generated/openpnm.phase.StandardLiquid.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquid.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquid.update.rst", "modules/generated/openpnm.phase.StandardLiquid.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.add_model_collection.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.check_mixture_health.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.clear.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.copy.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.filter_by_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.fromkeys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_comp_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_conduit_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.get_mix_vals.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.interpolate_data.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.items.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.keys.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.labels.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.num_throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pop.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.popitem.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.pores.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.props.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.regenerate_models.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.remove_comp.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.run_model.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.set_label.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.setdefault.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.throats.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_indices.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.to_mask.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.update.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.values.rst", "modules/generated/openpnm.phase.StandardLiquidMixture.x.rst", "modules/generated/openpnm.phase.Water.rst", "modules/generated/openpnm.phase.Water.add_model.rst", "modules/generated/openpnm.phase.Water.add_model_collection.rst", "modules/generated/openpnm.phase.Water.clear.rst", "modules/generated/openpnm.phase.Water.copy.rst", "modules/generated/openpnm.phase.Water.filter_by_label.rst", "modules/generated/openpnm.phase.Water.fromkeys.rst", "modules/generated/openpnm.phase.Water.get.rst", "modules/generated/openpnm.phase.Water.get_conduit_data.rst", "modules/generated/openpnm.phase.Water.interpolate_data.rst", "modules/generated/openpnm.phase.Water.items.rst", "modules/generated/openpnm.phase.Water.keys.rst", "modules/generated/openpnm.phase.Water.labels.rst", "modules/generated/openpnm.phase.Water.num_pores.rst", "modules/generated/openpnm.phase.Water.num_throats.rst", "modules/generated/openpnm.phase.Water.pop.rst", "modules/generated/openpnm.phase.Water.popitem.rst", "modules/generated/openpnm.phase.Water.pores.rst", "modules/generated/openpnm.phase.Water.props.rst", "modules/generated/openpnm.phase.Water.regenerate_models.rst", "modules/generated/openpnm.phase.Water.run_model.rst", "modules/generated/openpnm.phase.Water.set_label.rst", "modules/generated/openpnm.phase.Water.setdefault.rst", "modules/generated/openpnm.phase.Water.throats.rst", "modules/generated/openpnm.phase.Water.to_indices.rst", "modules/generated/openpnm.phase.Water.to_mask.rst", "modules/generated/openpnm.phase.Water.update.rst", "modules/generated/openpnm.phase.Water.values.rst", "modules/generated/openpnm.solvers.rst", "modules/generated/openpnm.solvers.BaseSolver.rst", "modules/generated/openpnm.solvers.BaseSolver.solve.rst", "modules/generated/openpnm.solvers.DirectSolver.rst", "modules/generated/openpnm.solvers.DirectSolver.solve.rst", "modules/generated/openpnm.solvers.IterativeSolver.rst", "modules/generated/openpnm.solvers.IterativeSolver.solve.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.rst", "modules/generated/openpnm.solvers.PETScLinearSolver.solve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.rst", "modules/generated/openpnm.solvers.PardisoSpsolve.solve.rst", "modules/generated/openpnm.solvers.ScipyCG.rst", "modules/generated/openpnm.solvers.ScipyCG.solve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.rst", "modules/generated/openpnm.solvers.ScipySpsolve.solve.rst", "modules/generated/openpnm.topotools.rst", "modules/generated/openpnm.topotools.add_boundary_pores.rst", "modules/generated/openpnm.topotools.add_reservoir_pore.rst", "modules/generated/openpnm.topotools.bond_percolation.rst", "modules/generated/openpnm.topotools.clone_pores.rst", "modules/generated/openpnm.topotools.connect_pores.rst", "modules/generated/openpnm.topotools.conns_to_am.rst", "modules/generated/openpnm.topotools.dimensionality.rst", "modules/generated/openpnm.topotools.drop_sites.rst", "modules/generated/openpnm.topotools.extend.rst", "modules/generated/openpnm.topotools.filter_pores_by_z.rst", "modules/generated/openpnm.topotools.find_clusters.rst", "modules/generated/openpnm.topotools.find_connected_sites.rst", "modules/generated/openpnm.topotools.find_connecting_bonds.rst", "modules/generated/openpnm.topotools.find_interface_throats.rst", "modules/generated/openpnm.topotools.find_neighbor_bonds.rst", "modules/generated/openpnm.topotools.find_neighbor_sites.rst", "modules/generated/openpnm.topotools.find_path.rst", "modules/generated/openpnm.topotools.find_pore_to_pore_distance.rst", "modules/generated/openpnm.topotools.find_surface_pores.rst", "modules/generated/openpnm.topotools.generate_base_points.rst", "modules/generated/openpnm.topotools.get_domain_area.rst", "modules/generated/openpnm.topotools.get_domain_length.rst", "modules/generated/openpnm.topotools.get_shape.rst", "modules/generated/openpnm.topotools.get_spacing.rst", "modules/generated/openpnm.topotools.hull_centroid.rst", "modules/generated/openpnm.topotools.is_fully_connected.rst", "modules/generated/openpnm.topotools.iscoplanar.rst", "modules/generated/openpnm.topotools.isoutside.rst", "modules/generated/openpnm.topotools.ispercolating.rst", "modules/generated/openpnm.topotools.issymmetric.rst", "modules/generated/openpnm.topotools.istriangular.rst", "modules/generated/openpnm.topotools.istril.rst", "modules/generated/openpnm.topotools.istriu.rst", "modules/generated/openpnm.topotools.label_faces.rst", "modules/generated/openpnm.topotools.merge_networks.rst", "modules/generated/openpnm.topotools.merge_pores.rst", "modules/generated/openpnm.topotools.reduce_coordination.rst", "modules/generated/openpnm.topotools.reflect_base_points.rst", "modules/generated/openpnm.topotools.remove_isolated_clusters.rst", "modules/generated/openpnm.topotools.rotate_coords.rst", "modules/generated/openpnm.topotools.shear_coords.rst", "modules/generated/openpnm.topotools.site_percolation.rst", "modules/generated/openpnm.topotools.stitch.rst", "modules/generated/openpnm.topotools.stitch_pores.rst", "modules/generated/openpnm.topotools.template_cylinder_annulus.rst", "modules/generated/openpnm.topotools.template_sphere_shell.rst", "modules/generated/openpnm.topotools.tri_to_am.rst", "modules/generated/openpnm.topotools.trim.rst", "modules/generated/openpnm.topotools.vor_to_am.rst", "modules/generated/openpnm.utils.rst", "modules/generated/openpnm.utils.Docorator.rst", "modules/generated/openpnm.utils.Docorator.__call__.rst", "modules/generated/openpnm.utils.Docorator.dedent.rst", "modules/generated/openpnm.utils.Docorator.dedents.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs.rst", "modules/generated/openpnm.utils.Docorator.delete_kwargs_s.rst", "modules/generated/openpnm.utils.Docorator.delete_params.rst", "modules/generated/openpnm.utils.Docorator.delete_params_s.rst", "modules/generated/openpnm.utils.Docorator.delete_types.rst", "modules/generated/openpnm.utils.Docorator.delete_types_s.rst", "modules/generated/openpnm.utils.Docorator.get_docstring.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summary.rst", "modules/generated/openpnm.utils.Docorator.get_extended_summaryf.rst", "modules/generated/openpnm.utils.Docorator.get_full_description.rst", "modules/generated/openpnm.utils.Docorator.get_full_descriptionf.rst", "modules/generated/openpnm.utils.Docorator.get_sections.rst", "modules/generated/openpnm.utils.Docorator.get_sectionsf.rst", "modules/generated/openpnm.utils.Docorator.get_summary.rst", "modules/generated/openpnm.utils.Docorator.get_summaryf.rst", "modules/generated/openpnm.utils.Docorator.keep_params.rst", "modules/generated/openpnm.utils.Docorator.keep_params_s.rst", "modules/generated/openpnm.utils.Docorator.keep_types.rst", "modules/generated/openpnm.utils.Docorator.keep_types_s.rst", "modules/generated/openpnm.utils.Docorator.save_docstring.rst", "modules/generated/openpnm.utils.Docorator.with_indent.rst", "modules/generated/openpnm.utils.Docorator.with_indents.rst", "modules/generated/openpnm.utils.HealthDict.rst", "modules/generated/openpnm.utils.HealthDict.clear.rst", "modules/generated/openpnm.utils.HealthDict.copy.rst", "modules/generated/openpnm.utils.HealthDict.fromkeys.rst", "modules/generated/openpnm.utils.HealthDict.get.rst", "modules/generated/openpnm.utils.HealthDict.items.rst", "modules/generated/openpnm.utils.HealthDict.keys.rst", "modules/generated/openpnm.utils.HealthDict.pop.rst", "modules/generated/openpnm.utils.HealthDict.popitem.rst", "modules/generated/openpnm.utils.HealthDict.setdefault.rst", "modules/generated/openpnm.utils.HealthDict.update.rst", "modules/generated/openpnm.utils.HealthDict.values.rst", "modules/generated/openpnm.utils.NestedDict.rst", "modules/generated/openpnm.utils.NestedDict.clear.rst", "modules/generated/openpnm.utils.NestedDict.copy.rst", "modules/generated/openpnm.utils.NestedDict.fromkeys.rst", "modules/generated/openpnm.utils.NestedDict.get.rst", "modules/generated/openpnm.utils.NestedDict.items.rst", "modules/generated/openpnm.utils.NestedDict.keys.rst", "modules/generated/openpnm.utils.NestedDict.pop.rst", "modules/generated/openpnm.utils.NestedDict.popitem.rst", "modules/generated/openpnm.utils.NestedDict.setdefault.rst", "modules/generated/openpnm.utils.NestedDict.to_dict.rst", "modules/generated/openpnm.utils.NestedDict.unravel.rst", "modules/generated/openpnm.utils.NestedDict.update.rst", "modules/generated/openpnm.utils.NestedDict.values.rst", "modules/generated/openpnm.utils.PrintableDict.rst", "modules/generated/openpnm.utils.PrintableDict.clear.rst", "modules/generated/openpnm.utils.PrintableDict.copy.rst", "modules/generated/openpnm.utils.PrintableDict.fromkeys.rst", "modules/generated/openpnm.utils.PrintableDict.get.rst", "modules/generated/openpnm.utils.PrintableDict.items.rst", "modules/generated/openpnm.utils.PrintableDict.keys.rst", "modules/generated/openpnm.utils.PrintableDict.pop.rst", "modules/generated/openpnm.utils.PrintableDict.popitem.rst", "modules/generated/openpnm.utils.PrintableDict.setdefault.rst", "modules/generated/openpnm.utils.PrintableDict.update.rst", "modules/generated/openpnm.utils.PrintableDict.values.rst", "modules/generated/openpnm.utils.PrintableList.rst", "modules/generated/openpnm.utils.PrintableList.append.rst", "modules/generated/openpnm.utils.PrintableList.clear.rst", "modules/generated/openpnm.utils.PrintableList.copy.rst", "modules/generated/openpnm.utils.PrintableList.count.rst", "modules/generated/openpnm.utils.PrintableList.extend.rst", "modules/generated/openpnm.utils.PrintableList.index.rst", "modules/generated/openpnm.utils.PrintableList.insert.rst", "modules/generated/openpnm.utils.PrintableList.pop.rst", "modules/generated/openpnm.utils.PrintableList.remove.rst", "modules/generated/openpnm.utils.PrintableList.reverse.rst", "modules/generated/openpnm.utils.PrintableList.sort.rst", "modules/generated/openpnm.utils.Project.rst", "modules/generated/openpnm.utils.Project.append.rst", "modules/generated/openpnm.utils.Project.copy.rst", "modules/generated/openpnm.utils.SettingsAttr.rst", "modules/generated/openpnm.utils.SimpleList.rst", "modules/generated/openpnm.utils.SimpleList.append.rst", "modules/generated/openpnm.utils.TypedList.rst", "modules/generated/openpnm.utils.TypedList.append.rst", "modules/generated/openpnm.utils.TypedList.clear.rst", "modules/generated/openpnm.utils.TypedList.copy.rst", "modules/generated/openpnm.utils.TypedList.count.rst", "modules/generated/openpnm.utils.TypedList.extend.rst", "modules/generated/openpnm.utils.TypedList.index.rst", "modules/generated/openpnm.utils.TypedList.insert.rst", "modules/generated/openpnm.utils.TypedList.pop.rst", "modules/generated/openpnm.utils.TypedList.remove.rst", "modules/generated/openpnm.utils.TypedList.reverse.rst", "modules/generated/openpnm.utils.TypedList.sort.rst", "modules/generated/openpnm.utils.TypedMixin.rst", "modules/generated/openpnm.utils.TypedSet.rst", "modules/generated/openpnm.utils.TypedSet.add.rst", "modules/generated/openpnm.utils.TypedSet.clear.rst", "modules/generated/openpnm.utils.TypedSet.copy.rst", "modules/generated/openpnm.utils.TypedSet.difference.rst", "modules/generated/openpnm.utils.TypedSet.difference_update.rst", "modules/generated/openpnm.utils.TypedSet.discard.rst", "modules/generated/openpnm.utils.TypedSet.intersection.rst", "modules/generated/openpnm.utils.TypedSet.intersection_update.rst", "modules/generated/openpnm.utils.TypedSet.isdisjoint.rst", "modules/generated/openpnm.utils.TypedSet.issubset.rst", "modules/generated/openpnm.utils.TypedSet.issuperset.rst", "modules/generated/openpnm.utils.TypedSet.pop.rst", "modules/generated/openpnm.utils.TypedSet.remove.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference.rst", "modules/generated/openpnm.utils.TypedSet.symmetric_difference_update.rst", "modules/generated/openpnm.utils.TypedSet.union.rst", "modules/generated/openpnm.utils.TypedSet.update.rst", "modules/generated/openpnm.utils.Workspace.rst", "modules/generated/openpnm.utils.Workspace.clear.rst", "modules/generated/openpnm.utils.Workspace.close_project.rst", "modules/generated/openpnm.utils.Workspace.copy.rst", "modules/generated/openpnm.utils.Workspace.copy_project.rst", "modules/generated/openpnm.utils.Workspace.fromkeys.rst", "modules/generated/openpnm.utils.Workspace.get.rst", "modules/generated/openpnm.utils.Workspace.items.rst", "modules/generated/openpnm.utils.Workspace.keys.rst", "modules/generated/openpnm.utils.Workspace.load_project.rst", "modules/generated/openpnm.utils.Workspace.load_workspace.rst", "modules/generated/openpnm.utils.Workspace.new_project.rst", "modules/generated/openpnm.utils.Workspace.pop.rst", "modules/generated/openpnm.utils.Workspace.popitem.rst", "modules/generated/openpnm.utils.Workspace.save_project.rst", "modules/generated/openpnm.utils.Workspace.save_workspace.rst", "modules/generated/openpnm.utils.Workspace.setdefault.rst", "modules/generated/openpnm.utils.Workspace.update.rst", "modules/generated/openpnm.utils.Workspace.values.rst", "modules/generated/openpnm.utils.check_data_health.rst", "modules/generated/openpnm.utils.check_network_health.rst", "modules/generated/openpnm.utils.dict_to_struct.rst", "modules/generated/openpnm.utils.flat_list.rst", "modules/generated/openpnm.utils.get_mixture_model_args.rst", "modules/generated/openpnm.utils.get_printable_labels.rst", "modules/generated/openpnm.utils.get_printable_props.rst", "modules/generated/openpnm.utils.ignore_warnings.rst", "modules/generated/openpnm.utils.is_symmetric.rst", "modules/generated/openpnm.utils.is_transient.rst", "modules/generated/openpnm.utils.is_valid_propname.rst", "modules/generated/openpnm.utils.methods_to_table.rst", "modules/generated/openpnm.utils.models_to_table.rst", "modules/generated/openpnm.utils.sanitize_dict.rst", "modules/generated/openpnm.utils.struct_to_dict.rst", "modules/index.rst"], "titles": ["Applications", "Examples", "Reference", "10 Steps to Learn OpenPNM", "Basic Usage", "Predicting absolute permeability", "Adjusting Pore Size Distributions", "Predicting dispersion coefficient", "Finding Effective Diffusivity and Tortuosity of a Network", "Predicting Formation Factor", "Simulating Mercury Intrusion Porosimetry Curves", "Predicting Porosity", "Obtaining Relative Diffusivity Curves", "Predicting relative permeability", "Contibuted Examples", "Pore-Scale Models", "Settings Attribute Machinery", "The Workspace and Projects", "Available Matrix Solvers", "Steady State Transport", "Explanation of Units", "Reactive Transport", "Size Factors and Transport Conductance", "Transient Transport", "Numerical Python Primer", "Generating Networks and Quick Visualization", "Storage of Network Data and Topology", "Network Representation, Queries, and Manipulation", "Assigning Geometric Properties", "Using Labels and Defining Domains", "Creating Phases", "Simulating Single Phase Transport", "Simulating Invasion", "Visualization options", "Pore Network Modeling Framework in Python", "Installation", "algorithms", "AdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Algorithm", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "set_BC", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Drainage", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FourierConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "InvasionPercolation", "apply_trapping", "clear", "clear_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pc_curve", "pop", "popitem", "pores", "props", "reset", "run", "set_BC", "set_inlet_BC", "set_label", "set_outlet_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "IonicConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "OhmicConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "ReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StokesFlow", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientAdvectionDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_outflow_BC", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientFickianDiffusion", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientIonicConduction", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "TransientReactiveTransport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_source", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Transport", "clear", "clear_BCs", "clear_rate_BCs", "clear_value_BCs", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "rate", "run", "set_BC", "set_label", "set_rate_BC", "set_value_BC", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "core", "Base2", "clear", "copy", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "pop", "popitem", "props", "setdefault", "to_indices", "to_mask", "update", "values", "Domain", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "LabelMixin", "filter_by_label", "labels", "num_pores", "num_throats", "pores", "set_label", "throats", "ModelWrapper", "__call__", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsDict", "clear", "copy", "dependency_graph", "dependency_list", "dependency_map", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "ModelsMixin2", "add_model", "add_model_collection", "regenerate_models", "run_model", "ParserMixin", "integrators", "Integrator", "ScipyRK45", "solve", "io", "network_from_csv", "network_from_jsongraph", "network_from_marock", "network_from_networkx", "network_from_pergeos", "network_from_porespy", "network_from_statoil", "network_to_comsol", "network_to_csv", "network_to_jsongraph", "network_to_networkx", "network_to_pandas", "network_to_pergeos", "network_to_salome", "network_to_stl", "print_hdf5", "project_to_csv", "project_to_dict", "project_to_hdf5", "project_to_pandas", "project_to_paraview", "project_to_vtk", "project_to_xdmf", "models", "collections", "geometry", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "network", "phase", "air", "gas", "liquid", "mercury", "water", "physics", "basic", "standard", "geometry", "conduit_lengths", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "diffusive_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "hydraulic_size_factors", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "ncylinders_in_series", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "pore_cross_sectional_area", "circle", "cone", "cube", "sphere", "square", "pore_seed", "random", "spatially_correlated", "pore_size", "equivalent_diameter", "from_neighbor_throats", "generic_distribution", "largest_sphere", "normal", "random", "weibull", "pore_surface_area", "circle", "cube", "sphere", "square", "pore_volume", "circle", "cube", "effective", "sphere", "square", "throat_capillary_shape_factor", "compactness", "jenkins_rao", "mason_morrow", "throat_centroid", "pore_coords", "throat_cross_sectional_area", "cuboid", "cylinder", "rectangle", "throat_endpoints", "spheres_and_cylinders", "throat_length", "circles_and_rectangles", "cones_and_cylinders", "cubes_and_cuboids", "hybrid_cones_and_cylinders", "hybrid_pyramids_and_cuboids", "hybrid_trapezoids_and_rectangles", "intersecting_cones", "intersecting_pyramids", "intersecting_trapezoids", "pyramids_and_cuboids", "spheres_and_cylinders", "squares_and_rectangles", "trapezoids_and_rectangles", "throat_perimeter", "cuboid", "cylinder", "rectangle", "throat_seed", "from_neighbor_pores", "random", "throat_size", "equivalent_diameter", "from_neighbor_pores", "generic_distribution", "normal", "random", "weibull", "throat_surface_area", "cuboid", "cylinder", "extrusion", "rectangle", "throat_vector", "pore_to_pore", "throat_volume", "cuboid", "cylinder", "extrusion", "lens", "pendular_ring", "rectangle", "misc", "blank", "clip", "constant", "difference", "fraction", "from_neighbor_pores", "from_neighbor_throats", "generic_distribution", "generic_function", "invert", "linear", "match_histogram", "normal", "normalize", "polynomial", "product", "random", "scaled", "summation", "weibull", "network", "bidirectional_throats", "cluster_number", "cluster_size", "coordination_number", "count_coincident_pores", "distance_to_furthest_neighbor", "distance_to_nearest_neighbor", "distance_to_nearest_pore", "duplicate_throats", "find_coincident_pores", "headless_throats", "isolated_pores", "looped_throats", "pore_to_pore_distance", "reversed_throats", "phase", "chemicals_wrapper", "critical_props", "density", "ideal_gas", "liquid_mixture_COSTALD", "liquid_pure_COSTALD", "mass_to_molar", "water_correlation", "diffusivity", "gas_mixture_ce", "gas_mixture_fesg", "liquid_mixture_tc", "heat_capacity", "gas_mixture_yweighted", "gas_pure_TRC", "liquid_mixture_xweighted", "liquid_pure_rp", "misc", "mix_and_match", "mole_to_mass_fraction", "mixtures", "from_component", "mixing_rule", "mole_summation", "mole_to_mass_fraction", "salinity", "partition_coefficient", "gaseous_species_in_water", "surface_tension", "liquid_mixture_wsd", "liquid_pure_bb", "water_correlation", "thermal_conductivity", "gas_mixture_whz", "gas_pure_gismr", "liquid_mixture_DIPPR9H", "liquid_pure_gismr", "liquid_pure_sr", "water_correlation", "vapor_pressure", "liquid_pure_antoine", "liquid_pure_lk", "water_correlation", "viscosity", "gas_mixture_hz", "gas_pure_gesmr", "gas_pure_st", "liquid_mixture_xweighted", "liquid_pure_ls", "water_correlation", "physics", "ad_dif_conductance", "ad_dif", "capillary_pressure", "purcell", "washburn", "diffusive_conductance", "generic_diffusive", "mixed_diffusion", "ordinary_diffusion", "taylor_aris_diffusion", "electrical_conductance", "generic_electrical", "series_resistors", "hydraulic_conductance", "generic_hydraulic", "hagen_poiseuille", "valvatne_blunt", "meniscus", "general_toroidal", "purcell", "sinusoidal", "multiphase", "conduit_conductance", "late_filling", "source_terms", "butler_volmer_conc", "butler_volmer_voltage", "exponential", "general_symbolic", "linear", "logarithm", "natural_exponential", "natural_logarithm", "power_law", "standard_kinetics", "thermal_conductance", "generic_thermal", "series_resistors", "network", "BodyCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Cubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "CubicTemplate", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Delaunay", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "DelaunayVoronoiDual", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "find_pore_hulls", "find_throat_facets", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Demo", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "FaceCenteredCubic", "add_boundary_pores", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Network", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Voronoi", "add_model", "add_model_collection", "clear", "copy", "create_adjacency_matrix", "create_incidence_matrix", "filter_by_label", "find_connected_pores", "find_connecting_throat", "find_nearby_pores", "find_neighbor_pores", "find_neighbor_throats", "fromkeys", "get", "get_adjacency_matrix", "get_conduit_data", "get_incidence_matrix", "interpolate_data", "items", "keys", "labels", "num_neighbors", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "phase", "Air", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "BinaryGas", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "GasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "LiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Mercury", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Mixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Phase", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "Species", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGas", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardGasMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "y", "StandardLiquid", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "StandardLiquidMixture", "add_comp", "add_model", "add_model_collection", "check_mixture_health", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_comp_vals", "get_conduit_data", "get_mix_vals", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "remove_comp", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "x", "Water", "add_model", "add_model_collection", "clear", "copy", "filter_by_label", "fromkeys", "get", "get_conduit_data", "interpolate_data", "items", "keys", "labels", "num_pores", "num_throats", "pop", "popitem", "pores", "props", "regenerate_models", "run_model", "set_label", "setdefault", "throats", "to_indices", "to_mask", "update", "values", "solvers", "BaseSolver", "solve", "DirectSolver", "solve", "IterativeSolver", "solve", "PETScLinearSolver", "solve", "PardisoSpsolve", "solve", "ScipyCG", "solve", "ScipySpsolve", "solve", "topotools", "add_boundary_pores", "add_reservoir_pore", "bond_percolation", "clone_pores", "connect_pores", "conns_to_am", "dimensionality", "drop_sites", "extend", "filter_pores_by_z", "find_clusters", "find_connected_sites", "find_connecting_bonds", "find_interface_throats", "find_neighbor_bonds", "find_neighbor_sites", "find_path", "find_pore_to_pore_distance", "find_surface_pores", "generate_base_points", "get_domain_area", "get_domain_length", "get_shape", "get_spacing", "hull_centroid", "is_fully_connected", "iscoplanar", "isoutside", "ispercolating", "issymmetric", "istriangular", "istril", "istriu", "label_faces", "merge_networks", "merge_pores", "reduce_coordination", "reflect_base_points", "remove_isolated_clusters", "rotate_coords", "shear_coords", "site_percolation", "stitch", "stitch_pores", "template_cylinder_annulus", "template_sphere_shell", "tri_to_am", "trim", "vor_to_am", "utils", "Docorator", "__call__", "dedent", "dedents", "delete_kwargs", "delete_kwargs_s", "delete_params", "delete_params_s", "delete_types", "delete_types_s", "get_docstring", "get_extended_summary", "get_extended_summaryf", "get_full_description", "get_full_descriptionf", "get_sections", "get_sectionsf", "get_summary", "get_summaryf", "keep_params", "keep_params_s", "keep_types", "keep_types_s", "save_docstring", "with_indent", "with_indents", "HealthDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "NestedDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "to_dict", "unravel", "update", "values", "PrintableDict", "clear", "copy", "fromkeys", "get", "items", "keys", "pop", "popitem", "setdefault", "update", "values", "PrintableList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "Project", "append", "copy", "SettingsAttr", "SimpleList", "append", "TypedList", "append", "clear", "copy", "count", "extend", "index", "insert", "pop", "remove", "reverse", "sort", "TypedMixin", "TypedSet", "add", "clear", "copy", "difference", "difference_update", "discard", "intersection", "intersection_update", "isdisjoint", "issubset", "issuperset", "pop", "remove", "symmetric_difference", "symmetric_difference_update", "union", "update", "Workspace", "clear", "close_project", "copy", "copy_project", "fromkeys", "get", "items", "keys", "load_project", "load_workspace", "new_project", "pop", "popitem", "save_project", "save_workspace", "setdefault", "update", "values", "check_data_health", "check_network_health", "dict_to_struct", "flat_list", "get_mixture_model_args", "get_printable_labels", "get_printable_props", "ignore_warnings", "is_symmetric", "is_transient", "is_valid_propname", "methods_to_table", "models_to_table", "sanitize_dict", "struct_to_dict", "Module Reference"], "terms": {"predict": [0, 1, 22, 30, 892], "absolut": [0, 1, 13, 28, 619, 1852, 1857], "permeabl": [0, 1, 12, 30], "adjust": [0, 1, 27, 28, 33, 59, 89, 98, 119, 151, 184, 196, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 894, 898, 1682, 1721], "pore": [0, 1, 2, 5, 8, 9, 10, 12, 13, 19, 20, 21, 24, 25, 30, 32, 33, 43, 47, 49, 50, 51, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 75, 79, 81, 82, 83, 88, 89, 90, 92, 93, 94, 98, 102, 106, 108, 109, 110, 116, 119, 120, 121, 122, 124, 125, 126, 129, 135, 139, 141, 142, 143, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 168, 172, 174, 175, 176, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 196, 200, 204, 206, 207, 208, 214, 217, 218, 219, 220, 222, 223, 224, 233, 237, 239, 240, 241, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 266, 270, 272, 273, 274, 279, 280, 282, 283, 284, 285, 286, 288, 289, 290, 299, 303, 305, 306, 307, 312, 313, 315, 316, 317, 318, 319, 321, 322, 323, 332, 336, 338, 339, 340, 345, 346, 348, 349, 350, 351, 352, 354, 355, 356, 365, 369, 371, 372, 373, 378, 379, 381, 382, 383, 384, 385, 386, 388, 389, 390, 399, 403, 405, 406, 407, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 432, 436, 438, 439, 440, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 465, 469, 471, 472, 473, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 498, 502, 504, 505, 506, 511, 512, 514, 515, 516, 517, 519, 520, 521, 524, 531, 533, 536, 538, 539, 543, 547, 551, 553, 554, 555, 560, 561, 562, 563, 565, 566, 567, 571, 572, 573, 576, 577, 606, 607, 609, 610, 619, 620, 624, 627, 630, 631, 633, 634, 636, 639, 643, 644, 645, 646, 647, 648, 649, 652, 655, 656, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 713, 715, 716, 717, 718, 719, 721, 723, 724, 725, 726, 728, 729, 730, 731, 732, 735, 737, 738, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 764, 765, 768, 769, 778, 779, 781, 782, 783, 784, 785, 786, 787, 793, 794, 795, 796, 799, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 848, 849, 850, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 898, 899, 901, 902, 904, 912, 913, 915, 916, 917, 921, 922, 923, 924, 925, 926, 927, 928, 933, 934, 936, 937, 938, 939, 944, 945, 946, 947, 949, 950, 951, 954, 955, 956, 960, 961, 962, 963, 964, 965, 966, 967, 972, 973, 975, 976, 977, 978, 983, 984, 985, 986, 988, 989, 990, 993, 994, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1031, 1032, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1048, 1049, 1051, 1052, 1053, 1054, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1069, 1070, 1071, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1092, 1093, 1094, 1095, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1129, 1131, 1132, 1133, 1134, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1149, 1150, 1151, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1167, 1168, 1170, 1171, 1172, 1173, 1178, 1179, 1180, 1181, 1183, 1184, 1185, 1188, 1189, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1205, 1206, 1208, 1209, 1210, 1211, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1243, 1244, 1246, 1247, 1248, 1249, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1266, 1270, 1274, 1276, 1277, 1278, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1294, 1295, 1297, 1300, 1303, 1305, 1306, 1308, 1309, 1310, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1326, 1328, 1329, 1331, 1334, 1337, 1339, 1340, 1342, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1362, 1363, 1365, 1368, 1371, 1373, 1374, 1376, 1377, 1378, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1394, 1395, 1396, 1400, 1404, 1406, 1407, 1408, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1424, 1425, 1427, 1430, 1433, 1435, 1436, 1438, 1439, 1440, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1456, 1457, 1461, 1465, 1467, 1468, 1469, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1485, 1489, 1493, 1495, 1496, 1497, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1513, 1517, 1521, 1523, 1524, 1525, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1541, 1542, 1544, 1547, 1550, 1552, 1553, 1555, 1556, 1557, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1573, 1575, 1579, 1583, 1585, 1586, 1587, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1603, 1604, 1606, 1609, 1612, 1614, 1615, 1617, 1618, 1619, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1635, 1637, 1641, 1645, 1647, 1648, 1649, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1680, 1681, 1683, 1684, 1686, 1688, 1689, 1690, 1698, 1700, 1701, 1705, 1706, 1713, 1714, 1715, 1716, 1720, 1722, 1723, 1727, 1862, 1863, 1866, 1867, 1868, 1869, 1872, 1877], "size": [0, 1, 2, 5, 9, 10, 11, 15, 25, 29, 31, 32, 33, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 352, 384, 386, 417, 419, 450, 452, 483, 485, 516, 517, 596, 631, 680, 683, 685, 686, 687, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 712, 717, 720, 769, 771, 795, 799, 804, 811, 882, 883, 884, 885, 887, 888, 890, 891, 912, 913, 954, 1031, 1069, 1226, 1680, 1699, 1707, 1717, 1864], "distribut": [0, 1, 7, 10, 15, 29, 33, 35, 712, 713, 717, 719, 720, 721, 769, 770, 771, 772, 795, 800, 804, 807, 954, 1686, 1699, 1716], "dispers": [0, 1], "coeffici": [0, 1, 4, 8, 9, 21, 30, 37, 129, 162, 227, 260, 293, 326, 359, 393, 426, 459, 492, 675, 676, 677, 678, 679, 681, 682, 684, 687, 689, 802, 834, 835, 836, 839, 865, 903, 905, 906, 907, 908, 909, 1293, 1672], "find": [0, 1, 5, 7, 9, 11, 12, 13, 15, 17, 19, 21, 24, 28, 29, 30, 32, 33, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 543, 607, 619, 714, 718, 719, 721, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 770, 772, 800, 807, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 850, 894, 917, 921, 922, 924, 926, 927, 928, 938, 956, 960, 961, 963, 965, 966, 967, 977, 994, 998, 999, 1001, 1003, 1004, 1005, 1015, 1032, 1036, 1037, 1039, 1041, 1042, 1043, 1053, 1071, 1075, 1076, 1078, 1080, 1081, 1082, 1083, 1084, 1094, 1112, 1116, 1117, 1119, 1121, 1122, 1123, 1133, 1151, 1155, 1156, 1158, 1160, 1161, 1162, 1172, 1189, 1193, 1194, 1196, 1198, 1199, 1200, 1210, 1227, 1231, 1232, 1234, 1236, 1237, 1238, 1248, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1484, 1485, 1513, 1542, 1575, 1604, 1637, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1713, 1715, 1716, 1718, 1863], "effect": [0, 1, 9, 13, 26, 27, 28, 29, 129, 260, 543, 607, 687, 702, 721, 735, 772, 807, 875, 879, 885, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1826], "diffus": [0, 1, 5, 10, 13, 19, 20, 21, 26, 33, 37, 129, 359, 393, 426, 652, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 713, 834, 835, 836, 877, 879, 882, 883, 884, 885, 887, 888, 896, 912, 913, 1293], "tortuos": [0, 1, 129], "network": [0, 1, 3, 4, 15, 19, 20, 21, 24, 28, 29, 30, 31, 32, 33, 37, 71, 97, 122, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 524, 525, 542, 606, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 732, 734, 735, 736, 738, 740, 741, 742, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 764, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 795, 796, 799, 800, 804, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 877, 879, 882, 883, 884, 885, 887, 888, 890, 891, 892, 895, 904, 912, 913, 915, 916, 921, 922, 924, 925, 926, 927, 928, 938, 954, 955, 960, 961, 963, 964, 965, 966, 967, 977, 993, 998, 999, 1001, 1002, 1003, 1004, 1005, 1015, 1031, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1053, 1069, 1070, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1094, 1110, 1111, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1133, 1149, 1150, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1172, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1248, 1265, 1293, 1327, 1361, 1395, 1423, 1456, 1484, 1512, 1540, 1574, 1602, 1636, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1708, 1713, 1714, 1715, 1716, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1806, 1854, 1863, 1877], "format": [0, 1, 7, 8, 19, 25, 26, 29, 31, 33, 544, 596, 608, 616, 618, 619, 621, 623, 631, 634, 638, 672, 687, 702, 788, 915, 918, 921, 922, 931, 933, 954, 957, 960, 961, 970, 972, 993, 995, 998, 999, 1008, 1010, 1031, 1033, 1036, 1037, 1046, 1048, 1069, 1072, 1075, 1076, 1087, 1089, 1110, 1113, 1116, 1117, 1126, 1128, 1149, 1152, 1155, 1156, 1165, 1167, 1188, 1190, 1193, 1194, 1203, 1205, 1226, 1228, 1231, 1232, 1241, 1243, 1267, 1296, 1330, 1364, 1397, 1426, 1458, 1486, 1514, 1543, 1576, 1605, 1638, 1681, 1684, 1685, 1687, 1692, 1726, 1728, 1867, 1868], "factor": [0, 1, 2, 5, 8, 28, 31, 33, 643, 644, 645, 646, 647, 648, 649, 680, 683, 685, 686, 687, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 736, 805, 830, 841, 859, 861, 866, 873, 877, 882, 883, 884, 885, 887, 888, 890, 891, 892, 894, 898, 901, 902, 912, 913, 1672, 1720], "simul": [0, 1, 3, 4, 5, 7, 8, 9, 12, 13, 17, 19, 21, 22, 25, 30, 33, 34, 37, 118, 129, 162, 227, 260, 293, 326, 359, 393, 426, 459, 730, 777, 829, 1484, 1806, 1877], "mercuri": [0, 1, 4, 30, 32, 735, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422], "intrus": [0, 1, 4, 32], "porosimetri": [0, 1, 4, 32, 735], "curv": [0, 1, 4, 6, 13, 32, 1699], "poros": [0, 1, 8, 25, 129], "obtain": [0, 1, 13, 19, 22, 25, 26, 32, 717, 769, 795, 927, 928, 931, 933, 966, 967, 970, 972, 1004, 1005, 1008, 1010, 1042, 1043, 1046, 1048, 1081, 1082, 1087, 1089, 1122, 1123, 1126, 1128, 1161, 1162, 1165, 1167, 1199, 1200, 1203, 1205, 1237, 1238, 1241, 1243, 1305, 1339, 1373, 1435, 1552, 1614, 1694, 1695, 1716, 1843], "rel": [0, 1, 4, 619, 1700, 1701, 1722, 1852, 1857, 1870], "The": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 37, 39, 43, 46, 47, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 73, 75, 78, 79, 82, 83, 84, 87, 88, 89, 90, 92, 94, 100, 102, 105, 106, 109, 110, 111, 115, 116, 118, 119, 121, 122, 124, 126, 129, 131, 135, 138, 139, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 162, 164, 168, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 195, 198, 200, 203, 204, 207, 208, 209, 213, 214, 217, 219, 222, 224, 227, 229, 233, 236, 237, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 260, 262, 266, 269, 270, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 293, 295, 299, 302, 303, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 323, 326, 328, 332, 335, 336, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 359, 361, 365, 368, 369, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 393, 395, 399, 402, 403, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 426, 428, 432, 435, 436, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 459, 461, 465, 468, 469, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 492, 494, 498, 501, 502, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 519, 521, 530, 531, 536, 539, 542, 543, 544, 547, 550, 551, 554, 555, 556, 559, 560, 562, 563, 565, 567, 571, 572, 573, 574, 575, 576, 577, 591, 607, 608, 610, 612, 618, 619, 620, 622, 623, 624, 627, 630, 631, 632, 633, 634, 635, 637, 638, 639, 672, 687, 702, 712, 713, 715, 716, 717, 718, 719, 720, 721, 730, 734, 735, 744, 765, 767, 768, 769, 770, 771, 772, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 811, 813, 818, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 894, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 916, 917, 918, 921, 922, 923, 925, 926, 927, 928, 931, 932, 933, 934, 937, 938, 939, 940, 943, 944, 946, 947, 949, 951, 954, 955, 956, 957, 960, 961, 962, 964, 965, 966, 967, 970, 971, 972, 973, 976, 977, 978, 979, 982, 983, 985, 986, 988, 990, 993, 994, 995, 998, 999, 1000, 1002, 1003, 1004, 1005, 1008, 1009, 1010, 1011, 1014, 1015, 1016, 1017, 1020, 1021, 1023, 1024, 1026, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1058, 1059, 1061, 1062, 1064, 1066, 1069, 1070, 1071, 1072, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1099, 1100, 1102, 1103, 1105, 1107, 1111, 1112, 1113, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1138, 1139, 1141, 1142, 1144, 1146, 1149, 1150, 1151, 1152, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1168, 1171, 1172, 1173, 1174, 1177, 1178, 1180, 1181, 1183, 1185, 1188, 1189, 1190, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1203, 1204, 1205, 1206, 1209, 1210, 1211, 1212, 1215, 1216, 1218, 1219, 1221, 1223, 1226, 1227, 1228, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1247, 1248, 1249, 1250, 1253, 1254, 1256, 1257, 1259, 1261, 1266, 1267, 1270, 1273, 1274, 1277, 1278, 1279, 1282, 1283, 1285, 1286, 1288, 1290, 1293, 1294, 1295, 1296, 1300, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1314, 1315, 1317, 1318, 1319, 1321, 1323, 1326, 1328, 1329, 1330, 1334, 1337, 1338, 1339, 1340, 1343, 1344, 1345, 1348, 1349, 1351, 1352, 1353, 1355, 1357, 1360, 1362, 1363, 1364, 1368, 1371, 1372, 1373, 1374, 1377, 1378, 1379, 1382, 1383, 1385, 1386, 1387, 1389, 1391, 1394, 1396, 1397, 1400, 1403, 1404, 1407, 1408, 1409, 1412, 1413, 1415, 1416, 1418, 1420, 1424, 1425, 1426, 1430, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1444, 1445, 1447, 1448, 1449, 1451, 1453, 1457, 1458, 1461, 1464, 1465, 1468, 1469, 1470, 1473, 1474, 1476, 1477, 1479, 1481, 1484, 1485, 1486, 1489, 1492, 1493, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1507, 1509, 1513, 1514, 1517, 1520, 1521, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1537, 1540, 1541, 1542, 1543, 1547, 1550, 1551, 1552, 1553, 1556, 1557, 1558, 1561, 1562, 1564, 1565, 1566, 1568, 1570, 1573, 1575, 1576, 1579, 1582, 1583, 1586, 1587, 1588, 1591, 1592, 1594, 1595, 1597, 1599, 1602, 1603, 1604, 1605, 1609, 1612, 1613, 1614, 1615, 1618, 1619, 1620, 1623, 1624, 1626, 1627, 1628, 1630, 1632, 1635, 1637, 1638, 1641, 1644, 1645, 1648, 1649, 1650, 1653, 1654, 1656, 1657, 1659, 1661, 1664, 1672, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1707, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1732, 1734, 1736, 1738, 1741, 1743, 1747, 1749, 1751, 1754, 1805, 1806, 1808, 1809, 1812, 1823, 1843, 1845, 1847, 1852, 1853, 1854, 1857, 1858, 1863, 1864, 1867, 1868, 1876], "best": [1, 24, 25, 26, 28, 32, 35], "wai": [1, 7, 12, 13, 24, 25, 27, 28, 29, 30, 31, 32, 718, 725, 736, 825], "learn": [1, 22, 24, 28], "openpnm": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 71, 129, 293, 380, 414, 447, 480, 492, 525, 544, 608, 616, 618, 619, 620, 622, 623, 627, 630, 633, 634, 636, 637, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 712, 713, 715, 717, 718, 719, 720, 721, 723, 725, 728, 729, 730, 731, 732, 734, 736, 738, 740, 741, 742, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 791, 795, 796, 799, 800, 804, 807, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 918, 921, 922, 924, 925, 926, 927, 928, 931, 933, 938, 954, 957, 960, 961, 963, 964, 965, 966, 967, 970, 972, 977, 995, 998, 999, 1001, 1002, 1003, 1004, 1005, 1008, 1010, 1015, 1033, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1046, 1048, 1053, 1072, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1087, 1089, 1094, 1113, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1126, 1128, 1133, 1152, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1165, 1167, 1172, 1188, 1190, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1203, 1205, 1210, 1228, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1241, 1243, 1248, 1265, 1267, 1296, 1330, 1364, 1397, 1423, 1426, 1456, 1458, 1486, 1514, 1543, 1576, 1605, 1636, 1638, 1680, 1681, 1684, 1698, 1715, 1722, 1723, 1727, 1782, 1794, 1806, 1843, 1858, 1867, 1868, 1869, 1872, 1877], "like": [1, 4, 6, 15, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 48, 59, 80, 89, 107, 119, 140, 151, 173, 184, 205, 217, 238, 249, 271, 282, 304, 315, 337, 348, 370, 381, 404, 415, 437, 448, 470, 481, 503, 514, 532, 552, 584, 585, 599, 600, 620, 825, 877, 915, 935, 954, 974, 1012, 1031, 1050, 1091, 1110, 1130, 1149, 1169, 1188, 1207, 1226, 1245, 1275, 1307, 1341, 1375, 1405, 1437, 1466, 1484, 1494, 1522, 1554, 1584, 1616, 1646, 1734, 1738, 1740, 1749, 1751, 1761, 1762, 1773, 1774, 1787, 1788, 1850, 1851], "anyth": [1, 24, 28, 30, 32, 59, 89, 119, 151, 184, 196, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514], "i": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 43, 45, 47, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 71, 75, 77, 79, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 102, 104, 106, 109, 113, 114, 115, 116, 119, 120, 122, 123, 124, 125, 126, 127, 129, 135, 137, 139, 142, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 168, 170, 172, 175, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 195, 196, 200, 202, 204, 207, 211, 212, 213, 214, 217, 221, 222, 223, 224, 225, 227, 233, 235, 237, 240, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 266, 268, 270, 273, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 293, 299, 301, 303, 306, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 332, 334, 336, 339, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 365, 367, 369, 372, 375, 376, 377, 378, 379, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 399, 401, 403, 406, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 432, 434, 436, 439, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 456, 457, 459, 465, 467, 469, 472, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 492, 498, 500, 502, 505, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 529, 531, 534, 535, 536, 537, 538, 539, 540, 543, 547, 549, 551, 554, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 571, 572, 575, 577, 578, 583, 586, 587, 588, 589, 591, 594, 595, 596, 598, 601, 602, 603, 604, 606, 607, 609, 610, 612, 615, 616, 618, 619, 620, 621, 623, 631, 632, 634, 635, 638, 639, 640, 641, 642, 650, 651, 653, 654, 657, 660, 661, 662, 663, 665, 666, 667, 668, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 696, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 727, 730, 733, 734, 737, 739, 743, 745, 759, 763, 765, 766, 768, 769, 770, 771, 772, 773, 778, 779, 780, 783, 784, 785, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 921, 922, 923, 924, 926, 927, 928, 930, 931, 933, 934, 937, 938, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 954, 956, 960, 961, 962, 963, 965, 966, 967, 969, 970, 972, 973, 976, 977, 980, 981, 982, 983, 984, 985, 987, 988, 989, 990, 991, 993, 994, 998, 999, 1000, 1001, 1003, 1004, 1005, 1007, 1008, 1010, 1011, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1032, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1045, 1046, 1048, 1049, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1069, 1071, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1089, 1090, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1112, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1125, 1126, 1128, 1129, 1132, 1133, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1149, 1151, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1164, 1165, 1167, 1168, 1171, 1172, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1189, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1202, 1203, 1205, 1206, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1224, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1240, 1241, 1243, 1244, 1247, 1248, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1270, 1272, 1274, 1277, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1300, 1302, 1305, 1306, 1309, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1321, 1322, 1323, 1324, 1326, 1328, 1329, 1334, 1336, 1339, 1340, 1343, 1346, 1347, 1348, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1358, 1360, 1362, 1363, 1368, 1370, 1373, 1374, 1377, 1380, 1381, 1382, 1383, 1384, 1386, 1388, 1389, 1390, 1391, 1392, 1394, 1396, 1400, 1402, 1404, 1407, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1430, 1432, 1435, 1436, 1439, 1442, 1443, 1444, 1445, 1446, 1448, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1461, 1463, 1465, 1468, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1481, 1482, 1484, 1485, 1489, 1491, 1493, 1496, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1513, 1517, 1519, 1521, 1524, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1540, 1541, 1542, 1547, 1549, 1552, 1553, 1556, 1559, 1560, 1561, 1562, 1563, 1565, 1567, 1568, 1569, 1570, 1571, 1573, 1575, 1579, 1581, 1583, 1586, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1599, 1600, 1602, 1603, 1604, 1609, 1611, 1614, 1615, 1618, 1621, 1622, 1623, 1624, 1625, 1627, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1641, 1643, 1645, 1648, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1664, 1671, 1672, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1734, 1741, 1743, 1747, 1756, 1760, 1763, 1764, 1765, 1766, 1772, 1775, 1776, 1777, 1780, 1782, 1786, 1789, 1790, 1791, 1792, 1800, 1802, 1803, 1805, 1806, 1808, 1809, 1818, 1820, 1821, 1823, 1826, 1829, 1831, 1832, 1837, 1838, 1839, 1841, 1843, 1849, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1863, 1866, 1867, 1868, 1870, 1872, 1875, 1877], "experi": [1, 10, 32], "In": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 69, 95, 127, 160, 193, 195, 225, 258, 291, 324, 357, 391, 424, 457, 490, 522, 524, 540, 568, 589, 595, 604, 952, 991, 1029, 1067, 1108, 1147, 1186, 1224, 1262, 1291, 1324, 1358, 1392, 1421, 1454, 1482, 1510, 1538, 1571, 1600, 1633, 1662, 1691, 1766, 1780, 1792, 1806, 1860], "thi": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 50, 55, 58, 59, 60, 66, 67, 69, 82, 87, 89, 90, 92, 93, 95, 98, 109, 115, 119, 121, 122, 124, 125, 127, 129, 142, 147, 150, 151, 152, 157, 158, 160, 175, 180, 183, 184, 185, 190, 191, 193, 195, 196, 207, 213, 217, 219, 222, 223, 225, 227, 240, 245, 248, 249, 250, 255, 256, 258, 260, 273, 278, 281, 282, 283, 288, 289, 291, 293, 306, 311, 314, 315, 316, 321, 322, 324, 339, 344, 347, 348, 349, 354, 355, 357, 372, 377, 381, 382, 388, 389, 391, 406, 411, 415, 416, 421, 422, 424, 439, 444, 448, 449, 454, 455, 457, 459, 472, 477, 481, 482, 487, 488, 490, 492, 505, 510, 513, 514, 515, 519, 520, 522, 524, 538, 540, 542, 543, 554, 559, 561, 563, 565, 566, 568, 570, 572, 575, 576, 577, 578, 589, 591, 595, 604, 606, 607, 609, 612, 616, 618, 619, 620, 623, 624, 630, 631, 634, 635, 636, 639, 640, 641, 642, 650, 651, 653, 654, 657, 660, 661, 662, 667, 670, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 690, 696, 699, 703, 704, 705, 706, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 725, 727, 733, 737, 739, 743, 745, 759, 763, 765, 766, 768, 769, 770, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 921, 922, 924, 926, 927, 928, 931, 933, 937, 938, 943, 945, 947, 949, 950, 952, 955, 956, 960, 961, 963, 965, 966, 967, 970, 972, 976, 977, 982, 984, 986, 988, 989, 991, 994, 998, 999, 1001, 1003, 1004, 1005, 1008, 1010, 1014, 1015, 1020, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1036, 1037, 1039, 1041, 1042, 1043, 1046, 1048, 1052, 1053, 1058, 1060, 1062, 1064, 1065, 1067, 1069, 1070, 1071, 1075, 1076, 1078, 1080, 1081, 1082, 1083, 1087, 1089, 1093, 1094, 1099, 1101, 1103, 1105, 1106, 1108, 1111, 1112, 1116, 1117, 1119, 1121, 1122, 1123, 1126, 1128, 1132, 1133, 1138, 1140, 1142, 1144, 1145, 1147, 1150, 1151, 1155, 1156, 1158, 1160, 1161, 1162, 1165, 1167, 1171, 1172, 1177, 1179, 1181, 1183, 1184, 1186, 1188, 1189, 1193, 1194, 1196, 1198, 1199, 1200, 1203, 1205, 1209, 1210, 1215, 1217, 1219, 1221, 1222, 1224, 1227, 1231, 1232, 1234, 1236, 1237, 1238, 1241, 1243, 1247, 1248, 1253, 1255, 1257, 1259, 1260, 1262, 1264, 1266, 1277, 1282, 1284, 1286, 1288, 1289, 1291, 1294, 1295, 1297, 1305, 1309, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1327, 1328, 1329, 1331, 1339, 1343, 1348, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1362, 1363, 1365, 1373, 1377, 1382, 1384, 1385, 1387, 1389, 1390, 1392, 1394, 1396, 1407, 1412, 1414, 1416, 1418, 1419, 1421, 1424, 1425, 1427, 1435, 1439, 1444, 1446, 1447, 1449, 1451, 1452, 1454, 1456, 1457, 1468, 1473, 1475, 1477, 1479, 1480, 1482, 1484, 1485, 1496, 1501, 1503, 1505, 1507, 1508, 1510, 1513, 1524, 1529, 1531, 1533, 1535, 1536, 1538, 1540, 1541, 1542, 1544, 1552, 1556, 1561, 1563, 1564, 1566, 1568, 1569, 1571, 1573, 1575, 1586, 1591, 1593, 1595, 1597, 1598, 1600, 1602, 1603, 1604, 1606, 1614, 1618, 1623, 1625, 1626, 1628, 1630, 1631, 1633, 1635, 1637, 1648, 1653, 1655, 1657, 1659, 1660, 1662, 1664, 1672, 1679, 1680, 1681, 1682, 1684, 1687, 1691, 1692, 1694, 1695, 1697, 1698, 1699, 1708, 1713, 1714, 1716, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1728, 1729, 1736, 1738, 1740, 1741, 1743, 1745, 1747, 1749, 1751, 1756, 1766, 1780, 1792, 1806, 1809, 1826, 1827, 1829, 1830, 1835, 1836, 1843, 1845, 1852, 1857, 1858, 1860, 1863, 1866, 1867, 1868, 1875], "page": [1, 4, 35], "you": [1, 4, 6, 8, 15, 17, 22, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 377, 411, 444, 477, 510, 559, 575, 615, 943, 954, 982, 1020, 1058, 1099, 1138, 1177, 1215, 1253, 1282, 1314, 1348, 1382, 1412, 1444, 1473, 1501, 1529, 1561, 1591, 1623, 1653, 1684, 1749, 1751, 1869], "can": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 50, 55, 59, 82, 87, 89, 109, 115, 117, 119, 129, 142, 147, 151, 175, 180, 184, 207, 213, 217, 240, 245, 249, 273, 278, 282, 306, 311, 315, 339, 344, 348, 372, 377, 380, 381, 406, 411, 414, 415, 439, 444, 447, 448, 472, 477, 480, 481, 505, 510, 514, 554, 559, 572, 575, 595, 615, 619, 620, 622, 623, 634, 636, 637, 718, 719, 721, 770, 772, 796, 799, 800, 802, 807, 825, 836, 850, 877, 894, 901, 902, 915, 916, 925, 937, 943, 954, 955, 964, 976, 982, 1002, 1014, 1020, 1031, 1040, 1052, 1058, 1069, 1070, 1079, 1093, 1099, 1110, 1111, 1120, 1132, 1138, 1149, 1150, 1159, 1171, 1177, 1188, 1197, 1209, 1215, 1226, 1235, 1247, 1253, 1277, 1282, 1294, 1309, 1314, 1317, 1328, 1343, 1348, 1351, 1362, 1377, 1382, 1385, 1407, 1412, 1424, 1439, 1444, 1447, 1468, 1473, 1484, 1496, 1501, 1524, 1529, 1540, 1541, 1556, 1561, 1564, 1586, 1591, 1602, 1603, 1618, 1623, 1626, 1648, 1653, 1672, 1684, 1687, 1690, 1697, 1699, 1707, 1713, 1715, 1718, 1719, 1720, 1749, 1751, 1805, 1806, 1823, 1852, 1857, 1858], "lot": [1, 22, 28, 29, 32, 1869], "help": [1, 17, 24, 25, 27, 28, 29, 591, 993, 1722], "get": [1, 4, 6, 14, 15, 17, 21, 22, 24, 26, 27, 28, 29, 31, 35, 210, 615, 718, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 850, 852, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 870, 871, 873, 874, 1069, 1303, 1305, 1326, 1327, 1337, 1339, 1360, 1361, 1371, 1373, 1394, 1433, 1435, 1550, 1552, 1573, 1612, 1614, 1635, 1697, 1740, 1741, 1743, 1747, 1867, 1868, 1869], "start": [1, 6, 13, 15, 21, 22, 24, 25, 27, 28, 30, 31, 32, 35, 562, 610, 712, 718, 720, 771, 804, 946, 985, 1023, 1061, 1102, 1141, 1180, 1218, 1256, 1285, 1318, 1352, 1386, 1415, 1448, 1476, 1504, 1532, 1565, 1594, 1627, 1656, 1707, 1800, 1818, 1872], "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 43, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 75, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 98, 102, 106, 108, 109, 110, 111, 114, 115, 116, 119, 120, 121, 122, 124, 135, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 168, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 196, 200, 204, 206, 207, 208, 209, 212, 213, 214, 217, 219, 222, 233, 237, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 260, 266, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 293, 299, 303, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 332, 336, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 365, 369, 371, 372, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 399, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 432, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 465, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 498, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 524, 531, 533, 535, 536, 543, 544, 547, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 565, 570, 571, 572, 573, 574, 575, 576, 577, 587, 591, 595, 602, 607, 608, 609, 619, 620, 623, 631, 634, 635, 636, 638, 639, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 687, 688, 689, 691, 692, 693, 694, 695, 696, 701, 702, 703, 704, 711, 712, 713, 715, 716, 718, 720, 723, 724, 725, 726, 734, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 765, 767, 768, 771, 784, 785, 787, 791, 793, 794, 798, 802, 804, 813, 818, 820, 821, 823, 825, 832, 836, 847, 850, 852, 856, 863, 865, 872, 874, 879, 894, 895, 898, 904, 915, 916, 917, 918, 921, 922, 923, 924, 925, 926, 927, 928, 931, 933, 934, 936, 937, 938, 939, 940, 942, 943, 944, 945, 947, 949, 954, 955, 956, 957, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 975, 976, 977, 978, 979, 981, 982, 983, 984, 986, 988, 993, 994, 995, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1008, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1026, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1059, 1060, 1062, 1064, 1069, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1105, 1110, 1111, 1112, 1113, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1126, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1142, 1144, 1149, 1150, 1151, 1152, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1181, 1183, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1219, 1221, 1226, 1227, 1228, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1241, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1259, 1266, 1267, 1270, 1274, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1286, 1288, 1295, 1296, 1297, 1300, 1305, 1306, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1319, 1321, 1329, 1330, 1331, 1334, 1339, 1340, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1353, 1355, 1363, 1364, 1365, 1368, 1373, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1387, 1389, 1396, 1397, 1400, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1418, 1425, 1426, 1427, 1430, 1435, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1449, 1451, 1457, 1458, 1461, 1465, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1477, 1479, 1484, 1485, 1486, 1489, 1493, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1505, 1507, 1513, 1514, 1517, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1535, 1540, 1542, 1543, 1544, 1547, 1552, 1553, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1566, 1568, 1575, 1576, 1579, 1583, 1585, 1586, 1587, 1588, 1590, 1591, 1592, 1593, 1595, 1597, 1602, 1604, 1605, 1606, 1609, 1614, 1615, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1628, 1630, 1637, 1638, 1641, 1645, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1657, 1659, 1672, 1680, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1692, 1694, 1695, 1697, 1698, 1699, 1705, 1706, 1707, 1708, 1713, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1726, 1728, 1764, 1776, 1790, 1806, 1808, 1809, 1812, 1829, 1832, 1839, 1841, 1856, 1858, 1862, 1863, 1867, 1868, 1869, 1875], "categor": [1, 634], "follow": [1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 69, 95, 98, 127, 129, 160, 193, 225, 258, 291, 324, 357, 391, 424, 457, 490, 522, 540, 543, 568, 589, 604, 607, 634, 713, 717, 719, 721, 769, 770, 772, 795, 796, 800, 807, 892, 894, 901, 902, 903, 905, 906, 907, 908, 909, 910, 917, 952, 956, 991, 994, 1029, 1031, 1032, 1067, 1071, 1108, 1112, 1147, 1151, 1186, 1189, 1224, 1226, 1227, 1262, 1266, 1291, 1295, 1324, 1329, 1358, 1363, 1392, 1396, 1421, 1425, 1454, 1457, 1482, 1485, 1510, 1513, 1538, 1542, 1571, 1575, 1600, 1604, 1633, 1637, 1662, 1684, 1699, 1707, 1717, 1745, 1766, 1780, 1792, 1860, 1863], "categori": 1, "10": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 196, 643, 644, 645, 646, 647, 648, 649, 718, 859, 861, 901, 902, 906, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236, 1870], "step": [1, 5, 7, 9, 12, 13, 19, 26, 27, 28, 30, 32, 35, 98, 118, 216, 380, 414, 447, 480, 543, 607, 622, 718, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1698, 1722], "numer": [1, 3, 19, 21, 27, 28, 29, 30, 49, 56, 67, 81, 88, 93, 108, 116, 125, 141, 148, 158, 174, 181, 191, 206, 214, 223, 239, 246, 256, 272, 279, 289, 305, 312, 322, 338, 345, 355, 371, 378, 389, 405, 412, 422, 438, 445, 455, 471, 478, 488, 504, 511, 520, 533, 536, 538, 553, 560, 566, 620, 623, 634, 790, 792, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 844, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 873, 874, 904, 936, 944, 950, 975, 983, 989, 1013, 1021, 1027, 1051, 1059, 1065, 1092, 1100, 1106, 1131, 1139, 1145, 1170, 1178, 1184, 1208, 1216, 1222, 1246, 1254, 1260, 1276, 1283, 1289, 1308, 1315, 1322, 1342, 1349, 1356, 1376, 1383, 1390, 1406, 1413, 1419, 1438, 1445, 1452, 1467, 1474, 1480, 1495, 1502, 1508, 1523, 1530, 1536, 1555, 1562, 1569, 1585, 1592, 1598, 1617, 1624, 1631, 1647, 1654, 1660, 1867, 1868], "python": [1, 3, 6, 17, 26, 27, 28, 30, 32, 33, 35, 524, 825, 915, 927, 954, 966, 1004, 1031, 1042, 1081, 1110, 1122, 1149, 1161, 1188, 1199, 1226, 1237, 1484, 1671, 1691, 1694, 1695, 1852, 1857, 1869, 1875], "primer": [1, 3, 25], "gener": [1, 3, 4, 5, 6, 8, 11, 14, 15, 20, 21, 26, 27, 28, 29, 30, 33, 47, 49, 68, 71, 79, 81, 94, 106, 108, 126, 139, 141, 159, 172, 174, 192, 204, 206, 224, 227, 237, 239, 257, 270, 272, 290, 303, 305, 323, 336, 338, 356, 369, 371, 390, 403, 405, 423, 436, 438, 456, 469, 471, 489, 502, 504, 521, 531, 533, 539, 543, 551, 553, 567, 591, 607, 634, 711, 712, 713, 720, 771, 787, 799, 804, 894, 895, 901, 902, 904, 915, 917, 921, 927, 934, 936, 951, 954, 956, 960, 966, 973, 975, 990, 993, 994, 998, 1004, 1011, 1013, 1028, 1031, 1032, 1036, 1042, 1049, 1051, 1066, 1069, 1071, 1075, 1081, 1090, 1092, 1107, 1110, 1112, 1116, 1122, 1129, 1131, 1146, 1149, 1151, 1155, 1161, 1168, 1170, 1185, 1188, 1189, 1193, 1199, 1206, 1208, 1223, 1226, 1227, 1231, 1237, 1244, 1246, 1261, 1266, 1274, 1276, 1290, 1295, 1306, 1308, 1323, 1329, 1340, 1342, 1357, 1363, 1374, 1376, 1391, 1396, 1404, 1406, 1420, 1425, 1436, 1438, 1453, 1457, 1465, 1467, 1481, 1484, 1485, 1493, 1495, 1509, 1513, 1521, 1523, 1537, 1542, 1553, 1555, 1570, 1575, 1583, 1585, 1599, 1604, 1615, 1617, 1632, 1637, 1645, 1647, 1661, 1691, 1694, 1695, 1698, 1699, 1716, 1724, 1725, 1808, 1847, 1854, 1866], "quick": [1, 3, 4, 6, 10, 24], "visual": [1, 3, 5, 6, 7, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 595, 638, 954], "storag": [1, 3, 27, 29, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "data": [1, 3, 7, 8, 15, 19, 24, 27, 30, 31, 32, 33, 46, 47, 56, 78, 79, 88, 98, 105, 106, 116, 138, 139, 148, 171, 172, 181, 195, 203, 204, 210, 214, 236, 237, 246, 269, 270, 279, 302, 303, 312, 335, 336, 345, 368, 369, 378, 402, 403, 412, 435, 436, 445, 468, 469, 478, 501, 502, 511, 524, 525, 530, 531, 536, 543, 550, 551, 560, 595, 607, 618, 619, 620, 623, 624, 630, 631, 633, 634, 635, 636, 637, 638, 639, 796, 801, 846, 852, 894, 901, 902, 917, 921, 922, 931, 932, 933, 934, 944, 956, 960, 961, 970, 971, 972, 973, 983, 994, 998, 999, 1008, 1009, 1010, 1011, 1021, 1032, 1036, 1037, 1046, 1047, 1048, 1049, 1059, 1071, 1075, 1076, 1087, 1088, 1089, 1090, 1100, 1112, 1116, 1117, 1126, 1127, 1128, 1129, 1139, 1151, 1155, 1156, 1165, 1166, 1167, 1168, 1178, 1189, 1193, 1194, 1203, 1204, 1205, 1206, 1216, 1227, 1231, 1232, 1241, 1242, 1243, 1244, 1254, 1266, 1273, 1274, 1283, 1295, 1304, 1306, 1315, 1329, 1338, 1340, 1349, 1363, 1372, 1374, 1383, 1396, 1403, 1404, 1413, 1425, 1434, 1436, 1445, 1457, 1464, 1465, 1474, 1485, 1492, 1493, 1502, 1513, 1520, 1521, 1530, 1542, 1551, 1553, 1562, 1575, 1582, 1583, 1592, 1604, 1613, 1615, 1624, 1637, 1644, 1645, 1654, 1808, 1809, 1810, 1862], "topologi": [1, 3, 6, 25, 27, 954, 1188], "represent": [1, 3, 19, 620, 904, 1726, 1728], "queri": [1, 3, 29, 30, 32, 50, 55, 66, 82, 87, 92, 109, 115, 124, 142, 147, 157, 175, 180, 190, 207, 213, 222, 240, 245, 255, 273, 278, 288, 306, 311, 321, 339, 344, 354, 372, 377, 388, 406, 411, 421, 439, 444, 454, 472, 477, 487, 505, 510, 519, 554, 559, 565, 572, 575, 577, 937, 943, 949, 976, 982, 988, 1014, 1020, 1026, 1052, 1058, 1064, 1093, 1099, 1105, 1132, 1138, 1144, 1171, 1177, 1183, 1188, 1209, 1215, 1221, 1247, 1253, 1259, 1277, 1282, 1288, 1309, 1314, 1321, 1343, 1348, 1355, 1377, 1382, 1389, 1407, 1412, 1418, 1439, 1444, 1451, 1468, 1473, 1479, 1496, 1501, 1507, 1524, 1529, 1535, 1556, 1561, 1568, 1586, 1591, 1597, 1618, 1623, 1630, 1648, 1653, 1659], "manipul": [1, 3, 25, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 377, 411, 444, 477, 510, 559, 575, 943, 982, 1020, 1058, 1099, 1138, 1177, 1215, 1253, 1282, 1314, 1348, 1382, 1412, 1444, 1473, 1501, 1529, 1561, 1591, 1623, 1653, 1714], "assign": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 25, 26, 27, 29, 32, 33, 43, 50, 51, 52, 55, 62, 64, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 153, 155, 157, 168, 175, 176, 177, 180, 186, 188, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 251, 253, 255, 266, 273, 274, 275, 278, 284, 286, 288, 299, 306, 307, 308, 311, 317, 319, 321, 332, 339, 340, 341, 344, 350, 352, 354, 365, 372, 373, 374, 377, 384, 386, 388, 399, 406, 407, 408, 411, 417, 419, 421, 432, 439, 440, 441, 444, 450, 452, 454, 465, 472, 473, 474, 477, 483, 485, 487, 498, 505, 506, 507, 510, 516, 517, 519, 524, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 591, 620, 718, 810, 901, 902, 915, 923, 937, 939, 940, 943, 949, 954, 962, 976, 978, 979, 982, 988, 1000, 1014, 1016, 1017, 1020, 1026, 1031, 1038, 1052, 1054, 1055, 1058, 1064, 1069, 1077, 1093, 1095, 1096, 1099, 1105, 1110, 1118, 1132, 1134, 1135, 1138, 1144, 1149, 1157, 1171, 1173, 1174, 1177, 1183, 1188, 1195, 1209, 1211, 1212, 1215, 1221, 1226, 1233, 1247, 1249, 1250, 1253, 1259, 1270, 1277, 1278, 1279, 1282, 1288, 1294, 1300, 1309, 1310, 1311, 1314, 1321, 1328, 1334, 1343, 1344, 1345, 1348, 1355, 1362, 1368, 1377, 1378, 1379, 1382, 1389, 1400, 1407, 1408, 1409, 1412, 1418, 1424, 1430, 1439, 1440, 1441, 1444, 1451, 1461, 1468, 1469, 1470, 1473, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1541, 1547, 1556, 1557, 1558, 1561, 1568, 1579, 1586, 1587, 1588, 1591, 1597, 1603, 1609, 1618, 1619, 1620, 1623, 1630, 1641, 1648, 1649, 1650, 1653, 1659, 1682, 1721, 1809], "geometr": [1, 3, 4, 5, 6, 10, 11, 12, 13, 15, 22, 26, 30, 31, 32, 619, 660, 687, 702, 892, 1110], "properti": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 19, 20, 21, 22, 24, 25, 27, 29, 31, 32, 33, 37, 46, 56, 63, 71, 78, 88, 97, 105, 116, 129, 138, 148, 154, 162, 171, 181, 187, 195, 203, 214, 227, 236, 246, 252, 260, 269, 279, 285, 293, 302, 312, 318, 326, 335, 345, 351, 359, 368, 378, 385, 393, 402, 412, 418, 426, 435, 445, 451, 459, 468, 478, 484, 492, 501, 511, 530, 536, 543, 550, 560, 607, 620, 623, 627, 634, 636, 638, 660, 712, 716, 717, 719, 720, 721, 765, 768, 769, 770, 771, 772, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 824, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 894, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 917, 932, 944, 956, 971, 983, 994, 1009, 1021, 1032, 1047, 1059, 1071, 1088, 1100, 1110, 1112, 1127, 1139, 1151, 1166, 1178, 1188, 1189, 1204, 1216, 1227, 1242, 1254, 1266, 1273, 1283, 1293, 1295, 1303, 1304, 1305, 1315, 1329, 1337, 1338, 1339, 1349, 1363, 1371, 1372, 1373, 1383, 1396, 1403, 1413, 1425, 1433, 1434, 1435, 1445, 1456, 1457, 1464, 1474, 1485, 1492, 1502, 1513, 1520, 1530, 1540, 1542, 1550, 1551, 1552, 1562, 1575, 1582, 1592, 1602, 1604, 1612, 1613, 1614, 1624, 1637, 1644, 1654, 1808, 1868, 1872], "us": [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 22, 24, 25, 26, 31, 33, 34, 35, 50, 51, 52, 55, 59, 82, 83, 84, 87, 89, 109, 110, 111, 115, 119, 129, 142, 143, 144, 147, 151, 175, 176, 177, 180, 184, 195, 196, 207, 208, 209, 213, 217, 240, 241, 242, 245, 249, 273, 274, 275, 278, 282, 306, 307, 308, 311, 315, 339, 340, 341, 344, 348, 372, 373, 374, 377, 380, 381, 406, 407, 408, 411, 414, 415, 439, 440, 441, 444, 447, 448, 472, 473, 474, 477, 480, 481, 505, 506, 507, 510, 514, 524, 525, 542, 543, 554, 555, 556, 559, 572, 573, 574, 575, 578, 595, 607, 615, 619, 620, 621, 622, 623, 630, 631, 638, 662, 667, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 696, 699, 703, 704, 706, 710, 712, 713, 716, 717, 719, 720, 721, 730, 765, 768, 769, 770, 771, 772, 782, 783, 784, 787, 788, 790, 793, 794, 795, 796, 798, 800, 802, 803, 804, 805, 807, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 847, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 892, 894, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 917, 921, 922, 924, 925, 927, 928, 931, 933, 937, 938, 939, 940, 943, 954, 955, 956, 960, 961, 963, 964, 966, 967, 970, 972, 976, 977, 978, 979, 982, 994, 998, 999, 1001, 1002, 1004, 1005, 1008, 1010, 1014, 1015, 1016, 1017, 1020, 1031, 1032, 1036, 1037, 1039, 1040, 1042, 1043, 1046, 1048, 1052, 1053, 1054, 1055, 1058, 1069, 1071, 1075, 1076, 1078, 1079, 1081, 1082, 1087, 1089, 1093, 1094, 1095, 1096, 1099, 1111, 1112, 1116, 1117, 1119, 1120, 1122, 1123, 1126, 1128, 1132, 1133, 1134, 1135, 1138, 1151, 1155, 1156, 1158, 1159, 1161, 1162, 1165, 1167, 1171, 1172, 1173, 1174, 1177, 1188, 1189, 1193, 1194, 1196, 1197, 1199, 1200, 1203, 1205, 1209, 1210, 1211, 1212, 1215, 1226, 1227, 1231, 1232, 1234, 1235, 1237, 1238, 1241, 1243, 1247, 1248, 1249, 1250, 1253, 1266, 1277, 1278, 1279, 1282, 1293, 1295, 1305, 1309, 1310, 1311, 1314, 1329, 1339, 1343, 1344, 1345, 1348, 1363, 1373, 1377, 1378, 1379, 1382, 1396, 1407, 1408, 1409, 1412, 1425, 1435, 1439, 1440, 1441, 1444, 1457, 1468, 1469, 1470, 1473, 1484, 1485, 1496, 1497, 1498, 1501, 1513, 1524, 1525, 1526, 1529, 1542, 1552, 1556, 1557, 1558, 1561, 1575, 1586, 1587, 1588, 1591, 1604, 1614, 1618, 1619, 1620, 1623, 1637, 1648, 1649, 1650, 1653, 1671, 1672, 1673, 1675, 1677, 1680, 1684, 1687, 1691, 1694, 1695, 1696, 1698, 1699, 1713, 1715, 1716, 1722, 1723, 1724, 1725, 1733, 1734, 1735, 1737, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1806, 1857, 1858, 1866, 1867, 1868, 1869, 1870, 1876], "label": [1, 3, 6, 7, 8, 12, 13, 21, 25, 27, 28, 30, 31, 32, 43, 49, 51, 52, 55, 60, 66, 75, 81, 83, 84, 87, 90, 92, 102, 108, 110, 111, 115, 121, 124, 135, 141, 143, 144, 147, 152, 157, 168, 174, 176, 177, 180, 185, 190, 200, 206, 208, 209, 213, 219, 222, 233, 239, 241, 242, 245, 250, 255, 266, 272, 274, 275, 278, 283, 288, 299, 305, 307, 308, 311, 316, 321, 332, 338, 340, 341, 344, 349, 354, 365, 371, 373, 374, 377, 382, 388, 399, 405, 407, 408, 411, 416, 421, 432, 438, 440, 441, 444, 449, 454, 465, 471, 473, 474, 477, 482, 487, 498, 504, 506, 507, 510, 515, 519, 524, 533, 543, 544, 547, 553, 555, 556, 559, 562, 563, 565, 570, 571, 573, 574, 575, 576, 577, 607, 608, 610, 634, 636, 915, 916, 917, 918, 923, 927, 928, 936, 939, 940, 943, 946, 947, 949, 955, 956, 957, 962, 966, 967, 975, 978, 979, 982, 985, 986, 988, 994, 995, 1000, 1004, 1005, 1013, 1016, 1017, 1020, 1023, 1024, 1026, 1032, 1033, 1038, 1042, 1043, 1051, 1054, 1055, 1058, 1061, 1062, 1064, 1069, 1070, 1071, 1072, 1077, 1081, 1082, 1092, 1095, 1096, 1099, 1102, 1103, 1105, 1111, 1112, 1113, 1118, 1122, 1123, 1131, 1134, 1135, 1138, 1141, 1142, 1144, 1149, 1150, 1151, 1152, 1157, 1161, 1162, 1170, 1173, 1174, 1177, 1180, 1181, 1183, 1189, 1190, 1195, 1199, 1200, 1208, 1211, 1212, 1215, 1218, 1219, 1221, 1227, 1228, 1233, 1237, 1238, 1246, 1249, 1250, 1253, 1256, 1257, 1259, 1266, 1267, 1270, 1276, 1278, 1279, 1282, 1285, 1286, 1288, 1295, 1296, 1300, 1308, 1310, 1311, 1314, 1318, 1319, 1321, 1329, 1330, 1334, 1342, 1344, 1345, 1348, 1352, 1353, 1355, 1363, 1364, 1368, 1376, 1378, 1379, 1382, 1386, 1387, 1389, 1396, 1397, 1400, 1406, 1408, 1409, 1412, 1415, 1416, 1418, 1425, 1426, 1430, 1438, 1440, 1441, 1444, 1448, 1449, 1451, 1457, 1458, 1461, 1467, 1469, 1470, 1473, 1476, 1477, 1479, 1485, 1486, 1489, 1495, 1497, 1498, 1501, 1504, 1505, 1507, 1513, 1514, 1517, 1523, 1525, 1526, 1529, 1532, 1533, 1535, 1542, 1543, 1547, 1555, 1557, 1558, 1561, 1565, 1566, 1568, 1575, 1576, 1579, 1585, 1587, 1588, 1591, 1594, 1595, 1597, 1604, 1605, 1609, 1617, 1619, 1620, 1623, 1627, 1628, 1630, 1637, 1638, 1641, 1647, 1649, 1650, 1653, 1656, 1657, 1659, 1680, 1682, 1683, 1684, 1688, 1690, 1698, 1713, 1715, 1718, 1721, 1722, 1867, 1876], "defin": [1, 3, 4, 5, 8, 20, 21, 22, 24, 27, 28, 30, 33, 71, 594, 615, 662, 663, 665, 668, 672, 718, 734, 744, 901, 902, 915, 916, 954, 955, 1031, 1070, 1083, 1084, 1110, 1111, 1149, 1150, 1188, 1226, 1693, 1713, 1806], "domain": [1, 3, 4, 5, 8, 9, 22, 28, 30, 32, 120, 129, 524, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 578, 607, 608, 610, 917, 918, 946, 954, 956, 957, 985, 993, 994, 995, 1023, 1031, 1032, 1033, 1061, 1069, 1070, 1071, 1072, 1102, 1112, 1113, 1141, 1151, 1152, 1180, 1189, 1190, 1218, 1226, 1227, 1228, 1256, 1266, 1267, 1285, 1295, 1296, 1318, 1329, 1330, 1352, 1363, 1364, 1386, 1396, 1397, 1415, 1425, 1426, 1448, 1457, 1458, 1476, 1485, 1486, 1504, 1513, 1514, 1532, 1542, 1543, 1565, 1575, 1576, 1594, 1604, 1605, 1627, 1637, 1638, 1656, 1698, 1699, 1701, 1707, 1717], "creat": [1, 3, 4, 6, 7, 10, 15, 17, 20, 21, 24, 25, 26, 27, 28, 32, 33, 44, 60, 76, 90, 103, 121, 136, 152, 169, 185, 201, 219, 234, 250, 267, 283, 300, 316, 333, 349, 366, 382, 400, 416, 433, 449, 466, 482, 499, 515, 528, 548, 563, 576, 582, 596, 597, 623, 635, 712, 713, 720, 771, 804, 899, 921, 922, 929, 931, 933, 947, 954, 960, 961, 968, 970, 972, 986, 993, 998, 999, 1006, 1008, 1010, 1024, 1031, 1036, 1037, 1044, 1046, 1048, 1062, 1069, 1075, 1076, 1085, 1087, 1089, 1103, 1116, 1117, 1124, 1126, 1128, 1142, 1155, 1156, 1163, 1165, 1167, 1181, 1188, 1193, 1194, 1201, 1203, 1205, 1219, 1226, 1231, 1232, 1239, 1241, 1243, 1257, 1265, 1271, 1286, 1301, 1319, 1327, 1335, 1353, 1361, 1369, 1387, 1395, 1401, 1416, 1423, 1431, 1449, 1462, 1477, 1490, 1505, 1518, 1533, 1548, 1566, 1580, 1595, 1610, 1628, 1636, 1642, 1657, 1684, 1698, 1699, 1722, 1736, 1738, 1749, 1751, 1759, 1771, 1785, 1806, 1808, 1848, 1854], "phase": [1, 3, 4, 17, 19, 20, 21, 27, 28, 29, 32, 33, 524, 542, 606, 631, 633, 635, 636, 638, 639, 798, 802, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 1265, 1395, 1423, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1636, 1806, 1866], "singl": [1, 3, 7, 12, 13, 17, 24, 26, 27, 29, 30, 32, 33, 57, 59, 89, 119, 149, 151, 182, 184, 217, 247, 249, 280, 282, 313, 315, 346, 348, 379, 381, 413, 415, 446, 448, 479, 481, 512, 514, 623, 634, 636, 638, 892, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236, 1484, 1681, 1685, 1698, 1715, 1858, 1865], "transport": [1, 2, 3, 5, 7, 8, 9, 12, 15, 25, 26, 28, 32, 227, 293, 359, 426, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 850, 875, 898, 954, 1069, 1877], "invas": [1, 3, 12, 98, 195, 196], "option": [1, 3, 19, 24, 25, 26, 28, 30, 32, 35, 43, 47, 49, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 66, 75, 79, 81, 82, 83, 84, 87, 89, 90, 92, 102, 106, 108, 109, 110, 111, 115, 119, 120, 121, 122, 124, 135, 139, 141, 142, 143, 144, 147, 149, 151, 152, 153, 154, 155, 157, 168, 172, 174, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 200, 204, 206, 207, 208, 209, 213, 217, 219, 222, 227, 233, 237, 239, 240, 241, 242, 245, 247, 249, 250, 251, 252, 253, 255, 266, 270, 272, 273, 274, 275, 278, 280, 282, 283, 284, 285, 286, 288, 293, 299, 303, 305, 306, 307, 308, 311, 313, 315, 316, 317, 318, 319, 321, 332, 336, 338, 339, 340, 341, 344, 346, 348, 349, 350, 351, 352, 354, 365, 369, 371, 372, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 399, 403, 405, 406, 407, 408, 411, 413, 414, 415, 416, 417, 418, 419, 421, 432, 436, 438, 439, 440, 441, 444, 446, 447, 448, 449, 450, 451, 452, 454, 465, 469, 471, 472, 473, 474, 477, 479, 480, 481, 482, 483, 484, 485, 487, 498, 502, 504, 505, 506, 507, 510, 512, 514, 515, 516, 517, 519, 531, 533, 543, 547, 551, 553, 554, 555, 556, 559, 563, 565, 571, 572, 573, 574, 575, 576, 577, 594, 596, 607, 622, 631, 634, 635, 638, 639, 713, 715, 716, 730, 765, 767, 768, 793, 794, 811, 825, 847, 872, 894, 898, 915, 917, 921, 922, 923, 924, 927, 928, 931, 933, 934, 936, 937, 938, 939, 940, 943, 947, 949, 954, 956, 960, 961, 962, 963, 966, 967, 970, 972, 973, 975, 976, 977, 978, 979, 982, 986, 988, 993, 994, 998, 999, 1000, 1001, 1004, 1005, 1008, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1020, 1024, 1026, 1031, 1032, 1036, 1037, 1038, 1039, 1042, 1043, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1058, 1062, 1064, 1071, 1075, 1076, 1077, 1078, 1081, 1082, 1087, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1099, 1103, 1105, 1110, 1112, 1116, 1117, 1118, 1119, 1122, 1123, 1126, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1138, 1142, 1144, 1149, 1151, 1155, 1156, 1157, 1158, 1161, 1162, 1165, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1177, 1181, 1183, 1188, 1189, 1193, 1194, 1195, 1196, 1199, 1200, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1215, 1219, 1221, 1226, 1227, 1231, 1232, 1233, 1234, 1237, 1238, 1241, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1253, 1257, 1259, 1266, 1270, 1274, 1276, 1277, 1278, 1279, 1282, 1286, 1288, 1295, 1300, 1305, 1306, 1308, 1309, 1310, 1311, 1314, 1319, 1321, 1326, 1329, 1334, 1339, 1340, 1342, 1343, 1344, 1345, 1348, 1353, 1355, 1360, 1363, 1368, 1373, 1374, 1376, 1377, 1378, 1379, 1382, 1387, 1389, 1394, 1396, 1400, 1404, 1406, 1407, 1408, 1409, 1412, 1416, 1418, 1425, 1430, 1435, 1436, 1438, 1439, 1440, 1441, 1444, 1449, 1451, 1457, 1461, 1465, 1467, 1468, 1469, 1470, 1473, 1477, 1479, 1484, 1485, 1489, 1493, 1495, 1496, 1497, 1498, 1501, 1505, 1507, 1513, 1517, 1521, 1523, 1524, 1525, 1526, 1529, 1533, 1535, 1542, 1547, 1552, 1553, 1555, 1556, 1557, 1558, 1561, 1566, 1568, 1573, 1575, 1579, 1583, 1585, 1586, 1587, 1588, 1591, 1595, 1597, 1604, 1609, 1614, 1615, 1617, 1618, 1619, 1620, 1623, 1628, 1630, 1635, 1637, 1641, 1645, 1647, 1648, 1649, 1650, 1653, 1657, 1659, 1672, 1683, 1684, 1685, 1686, 1688, 1691, 1692, 1694, 1695, 1696, 1705, 1707, 1719, 1722, 1723, 1724, 1725, 1749, 1847, 1854, 1857, 1867, 1868], "applic": [1, 19, 20, 22, 24, 28, 32, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 372, 406, 439, 472, 505, 554, 572, 937, 976, 1014, 1052, 1093, 1132, 1171, 1209, 1247, 1277, 1309, 1343, 1377, 1407, 1439, 1468, 1496, 1524, 1556, 1586, 1618, 1648], "refer": [1, 8, 17, 24, 25, 26, 28, 30, 31, 32, 64, 155, 188, 196, 253, 286, 319, 352, 380, 386, 414, 419, 447, 452, 480, 485, 517, 524, 619, 623, 713, 719, 721, 734, 735, 736, 770, 772, 800, 807, 825, 832, 835, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 873, 874, 879, 892, 895, 896, 901, 902, 1745, 1808], "scale": [1, 2, 4, 5, 6, 7, 11, 12, 13, 20, 26, 29, 30, 33, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 371, 405, 438, 471, 504, 524, 533, 543, 553, 606, 607, 619, 630, 639, 643, 644, 645, 646, 647, 648, 649, 660, 717, 719, 721, 769, 770, 772, 787, 795, 800, 801, 807, 855, 892, 894, 917, 936, 956, 975, 994, 1013, 1032, 1051, 1071, 1092, 1112, 1131, 1151, 1170, 1189, 1208, 1227, 1246, 1266, 1276, 1295, 1308, 1329, 1342, 1363, 1376, 1395, 1396, 1406, 1425, 1438, 1456, 1457, 1467, 1485, 1495, 1513, 1523, 1542, 1555, 1575, 1585, 1604, 1617, 1637, 1647, 1672, 1869], "model": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 20, 21, 25, 26, 32, 33, 49, 63, 81, 108, 141, 154, 174, 187, 206, 239, 252, 272, 285, 305, 318, 338, 351, 371, 385, 405, 418, 438, 451, 471, 484, 504, 524, 533, 543, 544, 553, 561, 562, 578, 591, 595, 606, 607, 608, 609, 610, 630, 639, 643, 644, 645, 646, 647, 648, 649, 652, 655, 656, 658, 659, 660, 662, 667, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 696, 699, 703, 704, 706, 710, 712, 713, 716, 717, 718, 719, 720, 721, 765, 768, 769, 770, 771, 772, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 824, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 894, 895, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 917, 918, 936, 945, 946, 956, 957, 975, 984, 985, 994, 995, 1013, 1022, 1023, 1032, 1033, 1051, 1060, 1061, 1069, 1071, 1072, 1092, 1101, 1102, 1112, 1113, 1131, 1140, 1141, 1151, 1152, 1170, 1179, 1180, 1189, 1190, 1208, 1217, 1218, 1227, 1228, 1246, 1255, 1256, 1265, 1266, 1267, 1276, 1284, 1285, 1293, 1295, 1296, 1308, 1316, 1318, 1329, 1330, 1342, 1350, 1352, 1363, 1364, 1376, 1384, 1386, 1395, 1396, 1397, 1406, 1414, 1415, 1425, 1426, 1438, 1446, 1448, 1456, 1457, 1458, 1467, 1475, 1476, 1485, 1486, 1495, 1503, 1504, 1513, 1514, 1523, 1531, 1532, 1540, 1542, 1543, 1555, 1563, 1565, 1575, 1576, 1585, 1593, 1594, 1602, 1604, 1605, 1617, 1625, 1627, 1637, 1638, 1647, 1655, 1656, 1866, 1869, 1873, 1874], "set": [1, 2, 4, 7, 8, 10, 12, 13, 15, 19, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 37, 44, 48, 50, 57, 58, 59, 60, 63, 71, 76, 80, 82, 89, 90, 97, 98, 103, 107, 109, 119, 121, 129, 136, 140, 142, 149, 150, 151, 152, 154, 162, 169, 173, 175, 182, 183, 184, 185, 187, 195, 196, 201, 205, 207, 217, 219, 227, 234, 238, 240, 247, 248, 249, 250, 252, 260, 267, 271, 273, 280, 281, 282, 283, 285, 293, 300, 304, 306, 313, 314, 315, 316, 318, 326, 333, 337, 339, 346, 347, 348, 349, 351, 359, 366, 370, 372, 379, 381, 382, 385, 393, 400, 404, 406, 413, 415, 416, 418, 426, 433, 437, 439, 446, 448, 449, 451, 459, 466, 470, 472, 479, 481, 482, 484, 492, 499, 503, 505, 512, 513, 514, 515, 525, 528, 532, 542, 548, 552, 554, 563, 572, 576, 582, 584, 585, 597, 599, 600, 623, 631, 719, 721, 770, 772, 800, 807, 898, 915, 921, 922, 927, 928, 929, 935, 937, 947, 954, 960, 961, 966, 967, 968, 974, 976, 986, 993, 998, 999, 1004, 1005, 1006, 1012, 1014, 1024, 1031, 1036, 1037, 1042, 1043, 1044, 1050, 1052, 1062, 1069, 1075, 1076, 1081, 1082, 1085, 1091, 1093, 1103, 1110, 1116, 1117, 1122, 1123, 1124, 1130, 1132, 1142, 1149, 1155, 1156, 1161, 1162, 1163, 1169, 1171, 1181, 1188, 1193, 1194, 1199, 1200, 1201, 1207, 1209, 1219, 1226, 1231, 1232, 1237, 1238, 1239, 1245, 1247, 1257, 1265, 1271, 1275, 1277, 1286, 1293, 1301, 1307, 1309, 1319, 1326, 1327, 1335, 1341, 1343, 1353, 1360, 1361, 1369, 1375, 1377, 1387, 1394, 1395, 1401, 1405, 1407, 1416, 1423, 1431, 1437, 1439, 1449, 1456, 1462, 1466, 1468, 1477, 1484, 1490, 1494, 1496, 1505, 1512, 1518, 1522, 1524, 1533, 1540, 1548, 1554, 1556, 1566, 1573, 1574, 1580, 1584, 1586, 1595, 1602, 1610, 1616, 1618, 1628, 1635, 1636, 1642, 1646, 1648, 1657, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1699, 1707, 1717, 1718, 1722, 1726, 1728, 1759, 1761, 1762, 1771, 1773, 1774, 1785, 1787, 1788, 1805, 1808, 1809, 1812, 1823, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1848, 1850, 1851, 1873, 1874], "attribut": [1, 2, 5, 15, 17, 19, 24, 26, 28, 29, 32, 37, 58, 71, 97, 129, 150, 162, 183, 195, 227, 248, 260, 281, 293, 314, 326, 347, 359, 393, 426, 459, 492, 513, 524, 525, 542, 561, 578, 591, 606, 609, 630, 639, 825, 915, 945, 954, 984, 993, 1022, 1031, 1060, 1069, 1101, 1110, 1140, 1149, 1179, 1188, 1217, 1226, 1255, 1265, 1284, 1293, 1316, 1327, 1350, 1361, 1384, 1395, 1414, 1423, 1446, 1456, 1475, 1484, 1503, 1512, 1531, 1540, 1563, 1574, 1593, 1602, 1625, 1636, 1655, 1731, 1732, 1734, 1741, 1743, 1745, 1747, 1756, 1806, 1812, 1824, 1825, 1862, 1874], "machineri": [1, 2], "workspac": [1, 2, 10, 22, 630, 1729, 1806, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861], "project": [1, 2, 6, 33, 34, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 525, 542, 618, 623, 630, 633, 634, 635, 636, 637, 638, 639, 915, 954, 993, 1031, 1069, 1110, 1149, 1188, 1226, 1265, 1293, 1327, 1361, 1395, 1423, 1456, 1484, 1512, 1540, 1574, 1602, 1636, 1681, 1729, 1807, 1808, 1843, 1845, 1847, 1852, 1853, 1854, 1857, 1858], "avail": [1, 2, 8, 11, 20, 22, 24, 30, 31, 32, 33, 35, 544, 608, 623, 850, 918, 957, 995, 1033, 1072, 1113, 1152, 1190, 1228, 1267, 1296, 1330, 1364, 1397, 1426, 1458, 1486, 1514, 1543, 1576, 1605, 1638, 1671, 1692, 1697], "matrix": [1, 2, 21, 24, 26, 28, 37, 129, 162, 227, 260, 293, 326, 359, 393, 426, 459, 492, 915, 921, 922, 931, 933, 954, 960, 961, 970, 972, 993, 998, 999, 1008, 1010, 1031, 1036, 1037, 1046, 1048, 1069, 1075, 1076, 1087, 1089, 1110, 1116, 1117, 1126, 1128, 1149, 1155, 1156, 1165, 1167, 1188, 1193, 1194, 1203, 1205, 1226, 1231, 1232, 1241, 1243, 1671, 1672, 1685, 1687, 1692, 1697, 1709, 1710, 1711, 1712, 1719, 1720, 1726, 1728, 1870], "solver": [1, 2, 19, 21, 22, 58, 150, 183, 248, 281, 314, 347, 513, 612, 1665, 1667, 1669, 1671, 1672], "steadi": [1, 2, 22, 33, 293, 359, 426, 492, 631, 639], "state": [1, 2, 22, 26, 31, 33, 293, 492, 631, 637, 639, 829, 830, 898, 1297, 1331, 1365, 1427, 1544, 1606], "explan": [1, 2, 1768, 1824, 1825, 1846], "unit": [1, 2, 8, 619, 779, 825, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 850, 852, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 870, 871, 873, 874, 901, 902, 915, 1149], "reactiv": [1, 2], "conduct": [1, 2, 5, 7, 9, 19, 21, 26, 162, 260, 860, 861, 862, 863, 875, 877, 882, 883, 884, 885, 887, 888, 890, 891, 892, 898, 902, 912, 913], "transient": [1, 2, 359, 380, 393, 414, 426, 447, 459, 480, 631, 639, 730], "tutori": [3, 24, 25, 26, 28, 29, 30], "It": [4, 5, 6, 8, 10, 12, 14, 15, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 59, 89, 119, 151, 184, 196, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 606, 619, 713, 825, 1031, 1226, 1684, 1697, 1707, 1716, 1724, 1725, 1733, 1735, 1737, 1739, 1742, 1744, 1746, 1748, 1750, 1752, 1753, 1755, 1843, 1863], "easi": [4, 8, 15, 21, 24, 27, 954], "go": [4, 8, 14, 22, 24, 28, 29], "fact": [4, 26, 27, 28, 30, 31, 32], "code": [4, 6, 13, 14, 17, 21, 24, 26, 28, 33, 623, 717, 719, 721, 769, 770, 772, 795, 800, 807, 825], "block": [4, 21, 24, 25, 28, 32], "produc": [4, 28, 31, 543, 607, 719, 721, 770, 772, 800, 807, 901, 902, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1226, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1456, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1726, 1728, 1852, 1857], "just": [4, 6, 7, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 67, 93, 125, 158, 191, 223, 256, 289, 322, 355, 389, 422, 455, 488, 520, 538, 566, 938, 950, 977, 989, 1015, 1027, 1053, 1065, 1094, 1106, 1133, 1145, 1172, 1184, 1210, 1222, 1248, 1260, 1289, 1294, 1317, 1322, 1328, 1351, 1356, 1362, 1385, 1390, 1419, 1424, 1447, 1452, 1480, 1508, 1536, 1541, 1564, 1569, 1598, 1603, 1626, 1631, 1660, 1749, 1751, 1863, 1873, 1874, 1875], "few": [4, 15, 24, 25, 27, 28, 29, 32, 524, 829], "line": [4, 5, 11, 15, 27, 28, 29, 30, 1743, 1794], "import": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 618, 717, 719, 721, 769, 770, 772, 779, 795, 796, 800, 807, 892, 904, 921, 922, 924, 925, 926, 927, 928, 938, 960, 961, 963, 964, 965, 966, 967, 977, 998, 999, 1001, 1002, 1003, 1004, 1005, 1015, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1053, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1094, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1133, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1172, 1188, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1210, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1248, 1680, 1684, 1698, 1715, 1722, 1727, 1729, 1749, 1751, 1782, 1794, 1869], "op": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 717, 769, 795, 796, 904, 921, 922, 924, 925, 926, 927, 928, 938, 960, 961, 963, 964, 965, 966, 967, 977, 998, 999, 1001, 1002, 1003, 1004, 1005, 1015, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1053, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1094, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1133, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1172, 1188, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1210, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1248, 1680, 1684, 1698, 1715, 1716, 1722, 1727], "paramet": [4, 6, 8, 12, 13, 15, 20, 22, 26, 28, 29, 30, 33, 39, 43, 46, 47, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 75, 78, 79, 81, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 100, 102, 105, 106, 108, 109, 110, 111, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 129, 131, 135, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 164, 168, 171, 172, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 198, 200, 203, 204, 206, 207, 208, 209, 213, 214, 217, 219, 222, 223, 224, 227, 229, 233, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 262, 266, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 293, 295, 299, 302, 303, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 328, 332, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 361, 365, 368, 369, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 395, 399, 402, 403, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 428, 432, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 459, 461, 465, 468, 469, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 492, 494, 498, 501, 502, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 530, 531, 533, 536, 538, 539, 543, 544, 547, 550, 551, 553, 554, 555, 556, 559, 560, 561, 562, 563, 565, 566, 567, 571, 572, 573, 574, 575, 576, 577, 591, 594, 596, 607, 608, 609, 610, 615, 618, 619, 620, 622, 623, 624, 626, 627, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 732, 734, 735, 736, 738, 740, 741, 742, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 811, 813, 818, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 894, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 916, 917, 918, 921, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 936, 937, 938, 939, 940, 943, 944, 945, 946, 947, 949, 950, 951, 954, 955, 956, 957, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 972, 973, 975, 976, 977, 978, 979, 982, 983, 984, 985, 986, 988, 989, 990, 993, 994, 995, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1069, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1149, 1150, 1151, 1152, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1177, 1178, 1179, 1180, 1181, 1183, 1184, 1185, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1226, 1227, 1228, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1265, 1266, 1267, 1270, 1273, 1274, 1276, 1277, 1278, 1279, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1294, 1295, 1296, 1300, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1326, 1328, 1329, 1330, 1334, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1362, 1363, 1364, 1368, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1394, 1395, 1396, 1397, 1400, 1403, 1404, 1406, 1407, 1408, 1409, 1412, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1423, 1424, 1425, 1426, 1430, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1456, 1457, 1458, 1461, 1464, 1465, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1484, 1485, 1486, 1489, 1492, 1493, 1495, 1496, 1497, 1498, 1501, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1513, 1514, 1517, 1520, 1521, 1523, 1524, 1525, 1526, 1529, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1541, 1542, 1543, 1547, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1561, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1573, 1575, 1576, 1579, 1582, 1583, 1585, 1586, 1587, 1588, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1603, 1604, 1605, 1609, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1635, 1636, 1637, 1638, 1641, 1644, 1645, 1647, 1648, 1649, 1650, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1672, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1731, 1732, 1734, 1736, 1738, 1741, 1743, 1745, 1747, 1749, 1751, 1754, 1808, 1845, 1847, 1852, 1853, 1854, 1857, 1858, 1862, 1864, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1876], "lc": 4, "1e": [4, 5, 7, 8, 9, 11, 12, 13, 20, 21, 25, 28, 31, 32, 33, 614, 813, 818, 898, 1669, 1671, 1675, 1870], "4": [4, 6, 7, 8, 11, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 620, 623, 892, 903, 906, 907, 908, 926, 938, 965, 977, 1003, 1015, 1041, 1053, 1080, 1094, 1121, 1133, 1160, 1172, 1188, 1198, 1210, 1236, 1248, 1733, 1735, 1737, 1739, 1742, 1744, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1755], "nx": [4, 11, 28, 713, 954], "ny": [4, 713, 954], "nz": [4, 713, 954], "geometri": [4, 5, 7, 9, 11, 12, 13, 19, 20, 22, 28, 29, 33, 524, 624, 717, 718, 769, 795, 1069, 1681], "physic": [4, 5, 7, 9, 12, 13, 19, 21, 22, 28, 29, 30, 31, 32, 33, 524, 734, 850, 877, 904], "pn": [4, 5, 6, 7, 9, 11, 12, 13, 15, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 717, 769, 795, 796, 802, 904, 921, 922, 924, 925, 926, 927, 928, 938, 960, 961, 963, 964, 965, 966, 967, 977, 998, 999, 1001, 1002, 1003, 1004, 1005, 1015, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1053, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1094, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1133, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1172, 1188, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1210, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1248, 1680, 1684, 1715, 1722, 1727], "cubic": [4, 6, 7, 8, 9, 10, 12, 13, 15, 17, 19, 20, 21, 27, 28, 29, 30, 33, 713, 717, 729, 732, 769, 795, 796, 904, 915, 921, 922, 924, 925, 926, 927, 928, 938, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 998, 999, 1001, 1002, 1003, 1004, 1005, 1015, 1031, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1053, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1094, 1110, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1133, 1149, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1172, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1210, 1226, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1248, 1680, 1684, 1698, 1699, 1702, 1703, 1707, 1713, 1715, 1722, 1724, 1725, 1727], "shape": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 25, 26, 27, 28, 30, 31, 32, 33, 624, 661, 675, 676, 677, 678, 679, 681, 682, 684, 687, 689, 690, 705, 715, 717, 721, 727, 734, 736, 745, 767, 769, 772, 776, 780, 782, 783, 786, 795, 796, 807, 877, 892, 904, 915, 921, 922, 924, 925, 926, 927, 928, 938, 954, 960, 961, 963, 964, 965, 966, 967, 977, 993, 998, 999, 1001, 1002, 1003, 1004, 1005, 1015, 1031, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1053, 1069, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1094, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1133, 1149, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1172, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1210, 1226, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1248, 1680, 1684, 1685, 1688, 1698, 1699, 1702, 1707, 1708, 1713, 1715, 1717, 1722, 1724, 1725, 1727, 1782], "space": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 25, 26, 28, 29, 31, 32, 33, 129, 619, 877, 904, 915, 916, 954, 955, 993, 1069, 1070, 1111, 1149, 1150, 1703, 1754], "geo": [4, 6, 8, 10, 717, 769, 795], "spheresandcylind": 4, "p": [4, 5, 11, 22, 25, 27, 29, 31, 32, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 525, 542, 543, 607, 702, 828, 834, 835, 899, 915, 917, 924, 926, 927, 954, 956, 963, 965, 966, 993, 994, 1001, 1003, 1004, 1031, 1032, 1039, 1041, 1042, 1069, 1071, 1078, 1080, 1081, 1110, 1112, 1119, 1121, 1122, 1149, 1151, 1158, 1160, 1161, 1188, 1189, 1196, 1198, 1199, 1226, 1227, 1234, 1236, 1237, 1265, 1266, 1293, 1295, 1327, 1329, 1361, 1363, 1395, 1396, 1423, 1425, 1456, 1457, 1484, 1485, 1512, 1513, 1540, 1542, 1574, 1575, 1602, 1604, 1636, 1637, 1680, 1715], "throat": [4, 5, 7, 8, 10, 12, 13, 15, 19, 21, 24, 25, 30, 31, 32, 33, 43, 46, 47, 50, 52, 55, 56, 57, 60, 67, 68, 75, 78, 79, 82, 84, 87, 88, 90, 93, 94, 98, 102, 105, 106, 109, 111, 115, 116, 121, 125, 126, 135, 138, 139, 142, 144, 147, 148, 149, 152, 158, 159, 168, 171, 172, 175, 177, 180, 181, 182, 185, 191, 192, 195, 196, 200, 203, 204, 207, 209, 213, 214, 219, 223, 224, 233, 236, 237, 240, 242, 245, 246, 247, 250, 256, 257, 266, 269, 270, 273, 275, 278, 279, 280, 283, 289, 290, 299, 302, 303, 306, 308, 311, 312, 313, 316, 322, 323, 332, 335, 336, 339, 341, 344, 345, 346, 349, 355, 356, 365, 368, 369, 372, 374, 377, 378, 379, 382, 389, 390, 399, 402, 403, 406, 408, 411, 412, 413, 416, 422, 423, 432, 435, 436, 439, 441, 444, 445, 446, 449, 455, 456, 465, 468, 469, 472, 474, 477, 478, 479, 482, 488, 489, 498, 501, 502, 505, 507, 510, 511, 512, 515, 520, 521, 524, 530, 531, 536, 538, 539, 547, 550, 551, 554, 556, 559, 560, 563, 566, 567, 571, 572, 574, 575, 576, 619, 620, 624, 627, 631, 633, 634, 636, 643, 644, 645, 646, 647, 648, 649, 655, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 716, 723, 724, 725, 726, 730, 734, 735, 736, 738, 740, 741, 742, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 767, 769, 770, 772, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 794, 799, 805, 817, 819, 820, 821, 823, 843, 852, 877, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 898, 899, 912, 913, 915, 921, 922, 923, 924, 925, 928, 931, 932, 934, 937, 940, 943, 944, 947, 950, 951, 954, 960, 961, 962, 963, 964, 967, 970, 971, 973, 976, 979, 982, 983, 986, 989, 990, 993, 998, 999, 1000, 1001, 1002, 1005, 1008, 1009, 1011, 1014, 1017, 1020, 1021, 1024, 1027, 1028, 1031, 1036, 1037, 1038, 1039, 1040, 1043, 1046, 1047, 1049, 1052, 1055, 1058, 1059, 1062, 1065, 1066, 1069, 1075, 1076, 1077, 1078, 1079, 1082, 1084, 1087, 1088, 1090, 1093, 1096, 1099, 1100, 1103, 1106, 1107, 1110, 1116, 1117, 1118, 1119, 1120, 1123, 1126, 1127, 1129, 1132, 1135, 1138, 1139, 1142, 1145, 1146, 1149, 1155, 1156, 1157, 1158, 1159, 1162, 1165, 1166, 1168, 1171, 1174, 1177, 1178, 1181, 1184, 1185, 1188, 1193, 1194, 1195, 1196, 1197, 1200, 1203, 1204, 1206, 1209, 1212, 1215, 1216, 1219, 1222, 1223, 1226, 1231, 1232, 1233, 1234, 1235, 1238, 1241, 1242, 1244, 1247, 1250, 1253, 1254, 1257, 1260, 1261, 1270, 1273, 1274, 1277, 1279, 1282, 1283, 1286, 1289, 1290, 1300, 1304, 1306, 1309, 1311, 1314, 1315, 1319, 1322, 1323, 1334, 1338, 1340, 1343, 1345, 1348, 1349, 1353, 1356, 1357, 1368, 1372, 1374, 1377, 1379, 1382, 1383, 1387, 1390, 1391, 1400, 1403, 1404, 1407, 1409, 1412, 1413, 1416, 1419, 1420, 1430, 1434, 1436, 1439, 1441, 1444, 1445, 1449, 1452, 1453, 1461, 1464, 1465, 1468, 1470, 1473, 1474, 1477, 1480, 1481, 1489, 1492, 1493, 1496, 1498, 1501, 1502, 1505, 1508, 1509, 1517, 1520, 1521, 1524, 1526, 1529, 1530, 1533, 1536, 1537, 1547, 1551, 1553, 1556, 1558, 1561, 1562, 1566, 1569, 1570, 1579, 1582, 1583, 1586, 1588, 1591, 1592, 1595, 1598, 1599, 1609, 1613, 1615, 1618, 1620, 1623, 1624, 1628, 1631, 1632, 1641, 1644, 1645, 1648, 1650, 1653, 1654, 1657, 1660, 1661, 1681, 1684, 1688, 1690, 1715, 1716, 1722, 1727, 1862, 1863, 1872], "t": [4, 6, 7, 8, 10, 11, 15, 17, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 525, 542, 615, 825, 828, 829, 830, 832, 834, 835, 836, 839, 841, 850, 852, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 870, 871, 873, 874, 892, 901, 902, 915, 925, 928, 954, 964, 967, 993, 1002, 1005, 1031, 1040, 1043, 1069, 1079, 1082, 1110, 1120, 1123, 1149, 1159, 1162, 1188, 1197, 1200, 1226, 1235, 1238, 1265, 1293, 1327, 1361, 1395, 1423, 1456, 1484, 1512, 1540, 1574, 1602, 1636], "hg": [4, 10, 32], "phy": [4, 8, 10, 835], "standard": [4, 6, 7, 21, 25, 27, 29, 30, 32, 631, 719, 770, 800, 921, 922, 960, 961, 993, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1756, 1852, 1857], "algorithm": [4, 5, 7, 8, 9, 10, 12, 13, 17, 21, 22, 33, 37, 58, 59, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 117, 119, 129, 150, 151, 162, 183, 184, 195, 216, 217, 227, 248, 249, 260, 281, 282, 293, 314, 315, 326, 347, 348, 359, 380, 381, 393, 414, 415, 426, 447, 448, 459, 480, 481, 492, 513, 514, 524, 542, 619, 850, 899, 901, 902, 1696, 1806, 1857, 1871], "run": [4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 21, 28, 30, 31, 32, 33, 37, 71, 97, 117, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 524, 543, 561, 562, 578, 606, 607, 609, 610, 619, 712, 718, 720, 771, 796, 804, 917, 945, 946, 956, 984, 985, 994, 1022, 1023, 1032, 1060, 1061, 1071, 1101, 1102, 1112, 1140, 1141, 1151, 1179, 1180, 1189, 1217, 1218, 1227, 1255, 1256, 1266, 1284, 1285, 1295, 1316, 1318, 1329, 1350, 1352, 1363, 1384, 1386, 1396, 1414, 1415, 1425, 1446, 1448, 1457, 1475, 1476, 1485, 1503, 1504, 1513, 1531, 1532, 1542, 1563, 1565, 1575, 1593, 1594, 1604, 1625, 1627, 1637, 1655, 1656, 1671, 1866], "mip": [4, 10, 32], "set_inlet": 4, "left": [4, 5, 6, 8, 9, 11, 12, 13, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 372, 406, 439, 472, 505, 543, 554, 572, 607, 916, 917, 937, 955, 956, 976, 994, 1014, 1032, 1052, 1070, 1071, 1093, 1111, 1112, 1132, 1150, 1151, 1171, 1189, 1209, 1227, 1247, 1266, 1277, 1295, 1309, 1329, 1343, 1363, 1377, 1396, 1407, 1425, 1439, 1457, 1468, 1485, 1496, 1513, 1524, 1542, 1556, 1575, 1586, 1604, 1618, 1637, 1648, 1698], "right": [4, 5, 6, 8, 9, 11, 12, 13, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 129, 162, 227, 260, 293, 326, 359, 393, 426, 459, 492, 734, 916, 955, 1070, 1111, 1150, 1672, 1698], "top": [4, 17, 24, 25, 26, 28, 955, 1070, 1111, 1680, 1698, 1713, 1720, 1722], "bottom": [4, 17, 25, 27, 28, 955, 1070, 1111, 1698, 1713, 1722], "result": [4, 5, 6, 7, 10, 11, 12, 13, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 50, 55, 59, 63, 82, 87, 89, 109, 115, 117, 119, 142, 147, 151, 154, 175, 180, 184, 187, 207, 213, 217, 240, 245, 249, 252, 273, 278, 282, 285, 306, 311, 315, 318, 339, 344, 348, 351, 372, 377, 381, 385, 406, 411, 415, 418, 439, 444, 448, 451, 472, 477, 481, 484, 505, 510, 514, 543, 554, 559, 562, 572, 575, 607, 610, 631, 632, 735, 765, 768, 791, 793, 796, 917, 924, 927, 928, 937, 943, 946, 954, 956, 963, 966, 967, 976, 982, 985, 994, 1001, 1004, 1005, 1014, 1020, 1023, 1031, 1032, 1039, 1042, 1043, 1052, 1058, 1061, 1071, 1078, 1081, 1082, 1093, 1099, 1102, 1112, 1119, 1122, 1123, 1132, 1138, 1141, 1151, 1158, 1161, 1162, 1171, 1177, 1180, 1189, 1196, 1199, 1200, 1209, 1215, 1218, 1227, 1234, 1237, 1238, 1247, 1253, 1256, 1266, 1277, 1282, 1285, 1295, 1309, 1314, 1318, 1329, 1343, 1348, 1352, 1363, 1377, 1382, 1386, 1396, 1407, 1412, 1415, 1425, 1439, 1444, 1448, 1457, 1468, 1473, 1476, 1485, 1496, 1501, 1504, 1513, 1524, 1529, 1532, 1542, 1556, 1561, 1565, 1575, 1586, 1591, 1594, 1604, 1618, 1623, 1627, 1637, 1648, 1653, 1656, 1691, 1694, 1695, 1699, 1706, 1717, 1724, 1725, 1734, 1738, 1751, 1782, 1794, 1806], "plot_intrusion_curv": 4, "give": [4, 8, 22, 24, 26, 27, 31, 59, 89, 119, 151, 184, 217, 227, 249, 282, 315, 348, 381, 415, 448, 481, 514, 776, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1682, 1721, 1808, 1854], "someth": [4, 17, 24, 28, 1875], "As": [4, 5, 12, 13, 15, 20, 21, 22, 26, 28, 29, 30, 31, 33, 825], "anoth": [4, 9, 11, 12, 19, 24, 25, 26, 27, 29, 30, 32, 595, 825, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1297, 1331, 1365, 1427, 1544, 1606, 1830, 1833, 1835, 1836, 1840], "exampl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 22, 24, 25, 28, 30, 33, 717, 719, 721, 769, 770, 772, 795, 796, 800, 807, 904, 921, 922, 924, 925, 926, 927, 928, 938, 960, 961, 963, 964, 965, 966, 967, 977, 998, 999, 1001, 1002, 1003, 1004, 1005, 1015, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1053, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1094, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1133, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1172, 1188, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1210, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1248, 1680, 1684, 1698, 1715, 1722, 1727, 1736, 1738, 1749, 1751, 1782, 1794, 1869], "found": [4, 5, 6, 7, 11, 12, 13, 17, 22, 24, 25, 26, 27, 28, 29, 31, 32, 53, 85, 113, 145, 178, 211, 243, 276, 309, 342, 375, 409, 442, 475, 508, 534, 557, 586, 601, 716, 784, 785, 794, 818, 865, 924, 925, 926, 927, 928, 938, 941, 963, 964, 965, 966, 967, 977, 980, 1001, 1002, 1003, 1004, 1005, 1015, 1018, 1039, 1040, 1041, 1042, 1043, 1053, 1056, 1078, 1079, 1080, 1081, 1082, 1083, 1094, 1097, 1119, 1120, 1121, 1122, 1123, 1133, 1136, 1158, 1159, 1160, 1161, 1162, 1172, 1175, 1196, 1197, 1198, 1199, 1200, 1210, 1213, 1234, 1235, 1236, 1237, 1238, 1248, 1251, 1280, 1312, 1346, 1380, 1410, 1442, 1471, 1499, 1527, 1559, 1589, 1621, 1651, 1672, 1681, 1691, 1694, 1695, 1696, 1698, 1713, 1763, 1775, 1789, 1855], "water": [4, 7, 9, 12, 13, 20, 31, 32, 832, 850, 852, 856, 863, 867, 874, 892, 896, 904, 1484, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663], "boundari": [4, 5, 8, 9, 11, 13, 22, 29, 32, 39, 59, 61, 62, 63, 64, 73, 89, 100, 119, 120, 122, 129, 131, 151, 153, 154, 155, 164, 184, 186, 187, 188, 198, 217, 229, 249, 251, 252, 253, 262, 282, 284, 285, 286, 295, 315, 317, 318, 319, 328, 348, 350, 351, 352, 361, 381, 383, 384, 385, 386, 395, 415, 417, 418, 419, 428, 448, 450, 451, 452, 461, 481, 483, 484, 485, 494, 514, 516, 517, 916, 955, 1070, 1111, 1150, 1680, 1699, 1705, 1707], "condit": [4, 5, 9, 13, 21, 22, 29, 32, 39, 59, 61, 62, 63, 64, 73, 89, 100, 119, 120, 122, 129, 131, 151, 153, 154, 155, 164, 184, 186, 187, 188, 198, 217, 229, 249, 251, 252, 253, 262, 282, 284, 285, 286, 295, 315, 317, 318, 319, 328, 348, 350, 351, 352, 361, 380, 381, 383, 384, 385, 386, 395, 414, 415, 417, 418, 419, 428, 447, 448, 450, 451, 452, 461, 480, 481, 483, 484, 485, 494, 514, 516, 517, 825, 829, 836, 1705], "sf": [4, 7, 22, 31], "stokesflow": [4, 5, 7, 13, 22, 31, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "pin": 4, "pout": 4, "200_000": 4, "101_325": 4, "set_value_bc": [4, 5, 7, 8, 9, 12, 13, 21, 31, 33, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514], "valu": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 41, 43, 44, 45, 47, 53, 54, 55, 57, 59, 61, 62, 64, 65, 66, 67, 68, 75, 76, 77, 79, 85, 86, 87, 89, 91, 92, 93, 94, 102, 103, 104, 106, 113, 114, 115, 119, 120, 122, 123, 124, 125, 126, 133, 135, 136, 137, 139, 145, 146, 147, 149, 151, 153, 155, 156, 157, 158, 159, 166, 168, 169, 170, 172, 178, 179, 180, 182, 184, 186, 188, 189, 190, 191, 192, 196, 200, 201, 202, 204, 211, 212, 213, 217, 221, 222, 223, 224, 231, 233, 234, 235, 237, 243, 244, 245, 247, 249, 251, 253, 254, 255, 256, 257, 264, 266, 267, 268, 270, 276, 277, 278, 280, 282, 284, 286, 287, 288, 289, 290, 297, 299, 300, 301, 303, 309, 310, 311, 313, 315, 317, 319, 320, 321, 322, 323, 330, 332, 333, 334, 336, 342, 343, 344, 346, 348, 350, 352, 353, 354, 355, 356, 363, 365, 366, 367, 369, 375, 376, 377, 379, 380, 381, 383, 384, 386, 387, 388, 389, 390, 397, 399, 400, 401, 403, 409, 410, 411, 413, 414, 415, 417, 419, 420, 421, 422, 423, 430, 432, 433, 434, 436, 442, 443, 444, 446, 447, 448, 450, 452, 453, 454, 455, 456, 463, 465, 466, 467, 469, 475, 476, 477, 479, 480, 481, 483, 485, 486, 487, 488, 489, 496, 498, 499, 500, 502, 508, 509, 510, 512, 514, 516, 517, 518, 519, 520, 521, 524, 528, 529, 531, 534, 535, 537, 538, 539, 543, 547, 548, 549, 551, 557, 558, 559, 564, 565, 566, 567, 571, 575, 577, 582, 583, 586, 587, 588, 591, 597, 598, 601, 602, 603, 607, 615, 619, 631, 638, 655, 656, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 720, 721, 723, 725, 728, 729, 730, 731, 732, 734, 736, 737, 738, 740, 741, 742, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 802, 803, 804, 805, 806, 807, 825, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 894, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 917, 921, 922, 923, 925, 929, 930, 931, 933, 934, 938, 941, 942, 943, 948, 949, 950, 951, 954, 956, 960, 961, 962, 964, 968, 969, 970, 972, 973, 977, 980, 981, 982, 987, 988, 989, 990, 993, 994, 998, 999, 1000, 1002, 1006, 1007, 1008, 1010, 1011, 1015, 1018, 1019, 1020, 1025, 1026, 1027, 1028, 1031, 1032, 1036, 1037, 1038, 1040, 1044, 1045, 1046, 1048, 1049, 1053, 1056, 1057, 1058, 1063, 1064, 1065, 1066, 1069, 1071, 1075, 1076, 1077, 1079, 1085, 1086, 1087, 1089, 1090, 1094, 1097, 1098, 1099, 1104, 1105, 1106, 1107, 1110, 1112, 1116, 1117, 1118, 1120, 1124, 1125, 1126, 1128, 1129, 1133, 1136, 1137, 1138, 1143, 1144, 1145, 1146, 1149, 1151, 1155, 1156, 1157, 1159, 1163, 1164, 1165, 1167, 1168, 1172, 1175, 1176, 1177, 1182, 1183, 1184, 1185, 1188, 1189, 1193, 1194, 1195, 1197, 1201, 1202, 1203, 1205, 1206, 1210, 1213, 1214, 1215, 1220, 1221, 1222, 1223, 1226, 1227, 1231, 1232, 1233, 1235, 1239, 1240, 1241, 1243, 1244, 1248, 1251, 1252, 1253, 1258, 1259, 1260, 1261, 1265, 1266, 1270, 1271, 1272, 1274, 1280, 1281, 1282, 1287, 1288, 1289, 1290, 1294, 1295, 1297, 1300, 1301, 1302, 1303, 1305, 1306, 1312, 1313, 1314, 1320, 1321, 1322, 1323, 1328, 1329, 1331, 1334, 1335, 1336, 1337, 1339, 1340, 1346, 1347, 1348, 1354, 1355, 1356, 1357, 1362, 1363, 1365, 1368, 1369, 1370, 1371, 1373, 1374, 1380, 1381, 1382, 1388, 1389, 1390, 1391, 1395, 1396, 1400, 1401, 1402, 1404, 1410, 1411, 1412, 1417, 1418, 1419, 1420, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1435, 1436, 1442, 1443, 1444, 1450, 1451, 1452, 1453, 1457, 1461, 1462, 1463, 1465, 1471, 1472, 1473, 1478, 1479, 1480, 1481, 1485, 1489, 1490, 1491, 1493, 1499, 1500, 1501, 1506, 1507, 1508, 1509, 1513, 1517, 1518, 1519, 1521, 1527, 1528, 1529, 1534, 1535, 1536, 1537, 1541, 1542, 1544, 1547, 1548, 1549, 1550, 1552, 1553, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1575, 1579, 1580, 1581, 1583, 1589, 1590, 1591, 1596, 1597, 1598, 1599, 1603, 1604, 1606, 1609, 1610, 1611, 1612, 1614, 1615, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1636, 1637, 1641, 1642, 1643, 1645, 1651, 1652, 1653, 1658, 1659, 1660, 1661, 1680, 1682, 1685, 1686, 1687, 1692, 1706, 1707, 1708, 1716, 1720, 1721, 1724, 1725, 1756, 1759, 1760, 1763, 1764, 1765, 1771, 1772, 1775, 1776, 1777, 1782, 1785, 1786, 1789, 1790, 1791, 1798, 1800, 1803, 1805, 1809, 1813, 1816, 1818, 1819, 1821, 1823, 1848, 1849, 1855, 1856, 1859, 1873, 1874], "total": [4, 7, 11, 22, 25, 28, 31, 129, 848, 938, 977, 1015, 1053, 1094, 1133, 1172, 1210, 1248, 1681], "flow": [4, 8, 12, 13, 19, 22, 26, 27, 31, 326, 702, 734, 877, 885, 892], "rate": [4, 5, 7, 8, 9, 13, 21, 22, 31, 40, 59, 62, 89, 119, 129, 132, 151, 153, 165, 184, 186, 217, 230, 249, 251, 263, 282, 284, 296, 315, 317, 329, 348, 350, 362, 381, 384, 396, 415, 417, 429, 448, 450, 462, 481, 483, 495, 514, 516, 875, 899, 901, 902, 903, 905, 906, 907, 908, 909, 910], "through": [4, 7, 8, 9, 13, 17, 19, 28, 31, 32, 57, 129, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 1083, 1084], "insert": [4, 29, 32, 65, 91, 123, 156, 189, 221, 254, 287, 320, 353, 387, 420, 453, 486, 518, 537, 564, 588, 603, 948, 987, 1025, 1063, 1104, 1143, 1182, 1220, 1258, 1287, 1320, 1354, 1388, 1417, 1450, 1478, 1506, 1534, 1567, 1596, 1629, 1658, 1722, 1731, 1732, 1765, 1777, 1791, 1859], "known": [4, 7, 8, 9, 11, 21, 26, 28, 30, 850, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1691, 1694, 1695], "darci": [4, 5], "": [4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 43, 48, 55, 58, 59, 66, 70, 73, 75, 80, 87, 89, 92, 96, 100, 102, 107, 115, 117, 119, 124, 128, 129, 131, 135, 140, 147, 150, 151, 157, 161, 164, 168, 173, 180, 183, 184, 190, 194, 198, 200, 205, 213, 217, 222, 226, 229, 233, 238, 245, 248, 249, 255, 259, 262, 266, 271, 278, 281, 282, 288, 292, 295, 299, 304, 311, 314, 315, 321, 325, 328, 332, 337, 344, 347, 348, 354, 358, 361, 365, 370, 377, 381, 388, 392, 395, 399, 404, 411, 415, 421, 425, 428, 432, 437, 444, 448, 454, 458, 461, 465, 470, 477, 481, 487, 491, 494, 498, 503, 510, 513, 514, 519, 523, 524, 532, 541, 547, 552, 559, 561, 565, 569, 571, 575, 577, 584, 585, 590, 591, 595, 599, 600, 605, 609, 615, 619, 620, 623, 635, 636, 638, 687, 702, 712, 717, 718, 719, 720, 721, 724, 726, 735, 769, 770, 771, 772, 795, 799, 800, 804, 807, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 894, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 921, 922, 923, 926, 927, 928, 931, 933, 935, 943, 945, 949, 953, 960, 961, 962, 965, 966, 967, 970, 972, 974, 982, 984, 988, 992, 998, 999, 1000, 1003, 1004, 1005, 1008, 1010, 1012, 1020, 1022, 1026, 1030, 1031, 1036, 1037, 1038, 1041, 1042, 1043, 1046, 1048, 1050, 1058, 1060, 1064, 1068, 1069, 1075, 1076, 1077, 1080, 1081, 1082, 1087, 1089, 1091, 1099, 1101, 1105, 1109, 1116, 1117, 1118, 1121, 1122, 1123, 1126, 1128, 1130, 1138, 1140, 1144, 1148, 1155, 1156, 1157, 1160, 1161, 1162, 1165, 1167, 1169, 1177, 1179, 1183, 1187, 1193, 1194, 1195, 1198, 1199, 1200, 1203, 1205, 1207, 1215, 1217, 1221, 1225, 1226, 1231, 1232, 1233, 1236, 1237, 1238, 1241, 1243, 1245, 1253, 1255, 1259, 1263, 1270, 1275, 1282, 1284, 1288, 1292, 1300, 1307, 1314, 1316, 1317, 1321, 1325, 1334, 1341, 1348, 1350, 1351, 1355, 1359, 1368, 1375, 1382, 1384, 1385, 1389, 1393, 1395, 1400, 1405, 1412, 1414, 1418, 1422, 1430, 1437, 1444, 1446, 1447, 1451, 1455, 1461, 1466, 1473, 1475, 1479, 1483, 1489, 1494, 1501, 1503, 1507, 1511, 1517, 1522, 1529, 1531, 1535, 1539, 1547, 1554, 1561, 1563, 1564, 1568, 1572, 1579, 1584, 1591, 1593, 1597, 1601, 1609, 1616, 1623, 1625, 1626, 1630, 1634, 1641, 1646, 1653, 1655, 1659, 1663, 1696, 1697, 1714, 1719, 1720, 1722, 1724, 1725, 1726, 1728, 1731, 1732, 1734, 1738, 1740, 1741, 1743, 1745, 1747, 1749, 1751, 1754, 1761, 1762, 1767, 1773, 1774, 1781, 1787, 1788, 1793, 1806, 1850, 1851, 1853, 1861, 1864, 1872, 1876], "law": [4, 5, 8, 19, 21, 22, 129, 687, 828, 852, 867], "q": [4, 5, 22, 28, 31, 32, 702, 717, 719, 721, 769, 770, 772, 795, 800, 807], "A": [4, 5, 7, 8, 9, 11, 12, 13, 17, 19, 21, 22, 26, 27, 28, 29, 30, 33, 34, 37, 43, 50, 55, 58, 60, 66, 67, 68, 75, 82, 87, 90, 92, 93, 94, 98, 102, 109, 115, 121, 124, 125, 126, 129, 135, 142, 147, 150, 152, 157, 158, 159, 162, 168, 175, 180, 183, 185, 190, 191, 192, 195, 200, 207, 213, 219, 222, 223, 224, 227, 233, 240, 245, 248, 250, 255, 256, 257, 260, 266, 273, 278, 281, 283, 288, 289, 290, 293, 299, 306, 311, 314, 316, 321, 322, 323, 326, 332, 339, 344, 347, 349, 354, 355, 356, 359, 365, 372, 377, 382, 388, 389, 390, 393, 399, 406, 411, 416, 421, 422, 423, 426, 432, 439, 444, 449, 454, 455, 456, 459, 465, 472, 477, 482, 487, 488, 489, 492, 498, 505, 510, 513, 515, 519, 520, 521, 525, 538, 539, 547, 554, 559, 563, 565, 566, 567, 571, 572, 575, 576, 577, 619, 627, 634, 635, 638, 639, 662, 663, 665, 668, 672, 687, 702, 709, 712, 713, 715, 717, 718, 720, 721, 734, 738, 756, 761, 767, 769, 771, 772, 775, 779, 782, 791, 795, 796, 802, 804, 807, 813, 831, 836, 852, 855, 856, 862, 863, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 894, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 923, 926, 937, 943, 947, 949, 950, 951, 954, 962, 965, 976, 982, 986, 988, 989, 990, 1000, 1003, 1014, 1020, 1024, 1026, 1027, 1028, 1031, 1038, 1041, 1052, 1058, 1062, 1064, 1065, 1066, 1069, 1077, 1080, 1093, 1099, 1103, 1105, 1106, 1107, 1110, 1118, 1121, 1132, 1138, 1142, 1144, 1145, 1146, 1149, 1157, 1160, 1171, 1177, 1181, 1183, 1184, 1185, 1188, 1195, 1198, 1209, 1215, 1219, 1221, 1222, 1223, 1226, 1233, 1236, 1247, 1253, 1257, 1259, 1260, 1261, 1270, 1277, 1282, 1286, 1288, 1289, 1290, 1293, 1297, 1300, 1303, 1309, 1314, 1319, 1321, 1322, 1323, 1331, 1334, 1337, 1343, 1348, 1353, 1355, 1356, 1357, 1365, 1368, 1371, 1377, 1382, 1387, 1389, 1390, 1391, 1400, 1407, 1412, 1416, 1418, 1419, 1420, 1423, 1427, 1430, 1433, 1439, 1444, 1449, 1451, 1452, 1453, 1461, 1468, 1473, 1477, 1479, 1480, 1481, 1484, 1489, 1496, 1501, 1505, 1507, 1508, 1509, 1517, 1524, 1529, 1533, 1535, 1536, 1537, 1540, 1544, 1547, 1550, 1556, 1561, 1566, 1568, 1569, 1570, 1579, 1586, 1591, 1595, 1597, 1598, 1599, 1602, 1606, 1609, 1612, 1618, 1623, 1628, 1630, 1631, 1632, 1641, 1648, 1653, 1657, 1659, 1660, 1661, 1672, 1674, 1676, 1678, 1680, 1682, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1704, 1706, 1707, 1708, 1709, 1716, 1718, 1719, 1720, 1721, 1724, 1725, 1726, 1728, 1741, 1743, 1745, 1747, 1749, 1751, 1806, 1808, 1809, 1812, 1847, 1862, 1863, 1864, 1867, 1868, 1876], "2": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 54, 86, 98, 114, 146, 179, 212, 244, 260, 277, 310, 343, 376, 410, 443, 476, 509, 535, 558, 587, 602, 615, 620, 643, 644, 645, 646, 647, 648, 649, 655, 662, 663, 665, 668, 672, 687, 702, 717, 734, 735, 744, 769, 795, 835, 856, 867, 879, 880, 887, 888, 892, 895, 896, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 916, 921, 924, 925, 926, 927, 938, 942, 955, 960, 963, 964, 965, 966, 977, 981, 998, 1001, 1002, 1003, 1004, 1015, 1019, 1036, 1039, 1040, 1041, 1042, 1053, 1057, 1075, 1078, 1079, 1080, 1081, 1094, 1098, 1111, 1116, 1119, 1120, 1121, 1122, 1133, 1137, 1150, 1155, 1158, 1159, 1160, 1161, 1172, 1176, 1188, 1193, 1196, 1197, 1198, 1199, 1210, 1214, 1231, 1234, 1235, 1236, 1237, 1248, 1252, 1281, 1293, 1313, 1347, 1381, 1411, 1443, 1472, 1500, 1528, 1560, 1590, 1622, 1652, 1682, 1684, 1685, 1688, 1692, 1696, 1697, 1708, 1715, 1721, 1722, 1749, 1764, 1776, 1782, 1790, 1794, 1852, 1856, 1857], "l": [4, 5, 7, 8, 9, 11, 19, 22, 24, 31, 129, 687, 702, 850, 852], "mu": [4, 5, 22, 30, 31, 702, 825, 836, 869, 873, 874, 1866], "viscos": [4, 5, 7, 13, 20, 22, 30, 652, 655, 656, 825, 836, 858, 869, 870, 871, 872, 873, 874, 890, 891, 892, 1303, 1305, 1337, 1339, 1371, 1373, 1433, 1435, 1550, 1552, 1612, 1614, 1866, 1867, 1868], "mean": [4, 6, 8, 10, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 47, 50, 51, 52, 55, 57, 59, 61, 63, 66, 75, 79, 82, 83, 84, 87, 89, 92, 102, 106, 109, 110, 111, 115, 119, 120, 122, 124, 135, 139, 142, 143, 144, 147, 149, 151, 154, 157, 168, 172, 175, 176, 177, 180, 182, 184, 187, 190, 195, 200, 204, 207, 208, 209, 213, 217, 222, 233, 237, 240, 241, 242, 245, 247, 249, 252, 255, 266, 270, 273, 274, 275, 278, 280, 282, 285, 288, 299, 303, 306, 307, 308, 311, 313, 315, 318, 321, 332, 336, 339, 340, 341, 344, 346, 348, 351, 354, 365, 369, 372, 373, 374, 377, 379, 381, 383, 385, 388, 399, 403, 406, 407, 408, 411, 413, 415, 418, 421, 432, 436, 439, 440, 441, 444, 446, 448, 451, 454, 465, 469, 472, 473, 474, 477, 479, 481, 484, 487, 498, 502, 505, 506, 507, 510, 512, 514, 519, 531, 547, 551, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 595, 623, 634, 638, 712, 716, 718, 719, 720, 765, 768, 770, 771, 793, 794, 800, 804, 818, 825, 898, 923, 924, 927, 928, 934, 937, 938, 939, 940, 943, 949, 962, 963, 966, 967, 973, 976, 977, 978, 979, 982, 988, 1000, 1001, 1004, 1005, 1011, 1014, 1015, 1016, 1017, 1020, 1026, 1038, 1039, 1042, 1043, 1049, 1052, 1053, 1054, 1055, 1058, 1064, 1077, 1078, 1081, 1082, 1090, 1093, 1094, 1095, 1096, 1099, 1105, 1118, 1119, 1122, 1123, 1129, 1132, 1133, 1134, 1135, 1138, 1144, 1157, 1158, 1161, 1162, 1168, 1171, 1172, 1173, 1174, 1177, 1183, 1195, 1196, 1199, 1200, 1206, 1209, 1210, 1211, 1212, 1215, 1221, 1233, 1234, 1237, 1238, 1244, 1247, 1248, 1249, 1250, 1253, 1259, 1270, 1274, 1277, 1278, 1279, 1282, 1288, 1300, 1306, 1309, 1310, 1311, 1314, 1321, 1334, 1340, 1343, 1344, 1345, 1348, 1355, 1368, 1374, 1377, 1378, 1379, 1382, 1389, 1400, 1404, 1407, 1408, 1409, 1412, 1418, 1430, 1436, 1439, 1440, 1441, 1444, 1451, 1461, 1465, 1468, 1469, 1470, 1473, 1479, 1489, 1493, 1496, 1497, 1498, 1501, 1507, 1517, 1521, 1524, 1525, 1526, 1529, 1535, 1547, 1553, 1556, 1557, 1558, 1561, 1568, 1579, 1583, 1586, 1587, 1588, 1591, 1597, 1609, 1615, 1618, 1619, 1620, 1623, 1630, 1641, 1645, 1648, 1649, 1650, 1653, 1659, 1716, 1720, 1723, 1808], "k": [4, 5, 6, 20, 21, 22, 26, 27, 28, 30, 31, 53, 69, 85, 95, 113, 127, 145, 160, 178, 193, 211, 225, 243, 258, 276, 291, 309, 324, 342, 357, 375, 391, 409, 424, 442, 457, 475, 490, 508, 522, 534, 540, 557, 568, 586, 589, 601, 604, 828, 829, 830, 832, 834, 835, 836, 839, 841, 850, 852, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 870, 871, 873, 874, 901, 902, 931, 941, 952, 970, 980, 991, 1008, 1018, 1029, 1046, 1056, 1067, 1087, 1097, 1108, 1126, 1136, 1147, 1165, 1175, 1186, 1203, 1213, 1224, 1241, 1251, 1262, 1280, 1291, 1312, 1324, 1346, 1358, 1380, 1392, 1410, 1421, 1442, 1454, 1471, 1482, 1499, 1510, 1527, 1538, 1559, 1571, 1589, 1600, 1621, 1633, 1651, 1662, 1763, 1766, 1775, 1780, 1789, 1792, 1855, 1860], "also": [4, 6, 7, 11, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 196, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 354, 365, 372, 373, 374, 377, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 454, 465, 472, 473, 474, 477, 487, 498, 505, 506, 507, 510, 519, 524, 542, 543, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 607, 712, 716, 717, 718, 719, 720, 721, 765, 768, 769, 770, 771, 772, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 917, 923, 924, 927, 928, 937, 938, 939, 940, 943, 949, 954, 956, 962, 963, 966, 967, 976, 977, 978, 979, 982, 988, 994, 1000, 1001, 1004, 1005, 1014, 1015, 1016, 1017, 1020, 1026, 1032, 1038, 1039, 1042, 1043, 1052, 1053, 1054, 1055, 1058, 1064, 1071, 1077, 1078, 1081, 1082, 1093, 1094, 1095, 1096, 1099, 1105, 1112, 1118, 1119, 1122, 1123, 1132, 1133, 1134, 1135, 1138, 1144, 1151, 1157, 1158, 1161, 1162, 1171, 1172, 1173, 1174, 1177, 1183, 1189, 1195, 1196, 1199, 1200, 1209, 1210, 1211, 1212, 1215, 1221, 1227, 1233, 1234, 1237, 1238, 1247, 1248, 1249, 1250, 1253, 1259, 1266, 1270, 1277, 1278, 1279, 1282, 1288, 1295, 1300, 1309, 1310, 1311, 1314, 1321, 1326, 1329, 1334, 1343, 1344, 1345, 1348, 1355, 1360, 1363, 1368, 1377, 1378, 1379, 1382, 1389, 1396, 1400, 1407, 1408, 1409, 1412, 1418, 1425, 1430, 1439, 1440, 1441, 1444, 1451, 1457, 1461, 1468, 1469, 1470, 1473, 1479, 1484, 1485, 1489, 1496, 1497, 1498, 1501, 1507, 1513, 1517, 1524, 1525, 1526, 1529, 1535, 1540, 1542, 1547, 1556, 1557, 1558, 1561, 1568, 1573, 1575, 1579, 1586, 1587, 1588, 1591, 1597, 1602, 1604, 1609, 1618, 1619, 1620, 1623, 1630, 1637, 1641, 1648, 1649, 1650, 1653, 1659, 1682, 1684, 1691, 1694, 1695, 1715, 1731, 1808, 1852, 1857, 1863], "worth": [4, 14, 19, 25, 28, 29], "explain": [4, 5, 11, 19, 21, 26, 28, 30], "how": [4, 6, 7, 8, 9, 10, 11, 12, 15, 22, 24, 25, 26, 27, 28, 29, 30, 31, 43, 47, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 66, 75, 79, 82, 83, 84, 87, 89, 90, 92, 102, 106, 109, 110, 111, 115, 119, 120, 121, 122, 124, 135, 139, 142, 143, 144, 147, 149, 151, 152, 153, 154, 155, 157, 168, 172, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 200, 204, 207, 208, 209, 213, 217, 219, 222, 233, 237, 240, 241, 242, 245, 247, 249, 250, 251, 252, 253, 255, 266, 270, 273, 274, 275, 278, 280, 282, 283, 284, 285, 286, 288, 299, 303, 306, 307, 308, 311, 313, 315, 316, 317, 318, 319, 321, 332, 336, 339, 340, 341, 344, 346, 348, 349, 350, 351, 352, 354, 365, 369, 372, 373, 374, 377, 379, 381, 382, 383, 384, 385, 386, 388, 399, 403, 406, 407, 408, 411, 413, 415, 416, 417, 418, 419, 421, 432, 436, 439, 440, 441, 444, 446, 448, 449, 450, 451, 452, 454, 465, 469, 472, 473, 474, 477, 479, 481, 482, 483, 484, 485, 487, 498, 502, 505, 506, 507, 510, 512, 514, 515, 516, 517, 519, 531, 543, 547, 551, 554, 555, 556, 559, 563, 565, 571, 572, 573, 574, 575, 576, 577, 607, 634, 716, 765, 768, 793, 794, 796, 799, 898, 917, 923, 934, 937, 939, 940, 943, 947, 949, 956, 962, 973, 976, 978, 979, 982, 986, 988, 994, 1000, 1011, 1014, 1016, 1017, 1020, 1024, 1026, 1032, 1038, 1049, 1052, 1054, 1055, 1058, 1062, 1064, 1071, 1077, 1090, 1093, 1095, 1096, 1099, 1103, 1105, 1112, 1118, 1129, 1132, 1134, 1135, 1138, 1142, 1144, 1151, 1157, 1168, 1171, 1173, 1174, 1177, 1181, 1183, 1189, 1195, 1206, 1209, 1211, 1212, 1215, 1219, 1221, 1227, 1233, 1244, 1247, 1249, 1250, 1253, 1257, 1259, 1266, 1270, 1274, 1277, 1278, 1279, 1282, 1286, 1288, 1295, 1300, 1306, 1309, 1310, 1311, 1314, 1319, 1321, 1329, 1334, 1340, 1343, 1344, 1345, 1348, 1353, 1355, 1363, 1368, 1374, 1377, 1378, 1379, 1382, 1387, 1389, 1396, 1400, 1404, 1407, 1408, 1409, 1412, 1416, 1418, 1425, 1430, 1436, 1439, 1440, 1441, 1444, 1449, 1451, 1457, 1461, 1465, 1468, 1469, 1470, 1473, 1477, 1479, 1485, 1489, 1493, 1496, 1497, 1498, 1501, 1505, 1507, 1513, 1517, 1521, 1524, 1525, 1526, 1529, 1533, 1535, 1542, 1547, 1553, 1556, 1557, 1558, 1561, 1566, 1568, 1575, 1579, 1583, 1586, 1587, 1588, 1591, 1595, 1597, 1604, 1609, 1615, 1618, 1619, 1620, 1623, 1628, 1630, 1637, 1641, 1645, 1648, 1649, 1650, 1653, 1657, 1659, 1707], "so": [4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 56, 59, 63, 88, 89, 116, 117, 119, 148, 151, 154, 181, 184, 187, 195, 214, 217, 246, 249, 252, 279, 282, 285, 312, 315, 318, 345, 348, 351, 378, 381, 385, 412, 415, 418, 445, 448, 451, 478, 481, 484, 511, 514, 524, 536, 560, 570, 620, 623, 638, 718, 802, 825, 829, 921, 926, 944, 960, 965, 983, 998, 1003, 1021, 1036, 1041, 1059, 1069, 1075, 1080, 1083, 1084, 1100, 1116, 1121, 1139, 1155, 1160, 1178, 1193, 1198, 1216, 1226, 1231, 1236, 1254, 1283, 1315, 1349, 1383, 1413, 1445, 1474, 1502, 1530, 1562, 1592, 1624, 1654, 1682, 1688, 1692, 1697, 1698, 1715, 1720, 1721, 1722, 1723, 1726, 1728, 1843, 1845, 1867, 1868], "capillari": [4, 10, 12, 32, 210, 735, 736, 875, 879, 880, 892, 894, 895, 896, 899], "chang": [4, 6, 22, 24, 26, 28, 30, 31, 33, 35, 61, 383, 1031, 1226, 1845], "match": [4, 20, 22, 26, 32, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236, 1484, 1716], "object": [4, 6, 8, 10, 15, 17, 21, 24, 25, 26, 28, 29, 32, 33, 48, 50, 56, 58, 60, 70, 71, 80, 82, 88, 90, 96, 98, 107, 109, 116, 121, 128, 129, 140, 142, 148, 150, 152, 161, 173, 175, 181, 183, 185, 194, 196, 205, 207, 214, 219, 226, 227, 238, 240, 246, 248, 250, 259, 271, 273, 279, 281, 283, 292, 293, 304, 306, 312, 314, 316, 325, 337, 339, 345, 347, 349, 358, 370, 372, 378, 380, 382, 392, 404, 406, 412, 414, 416, 425, 437, 439, 445, 447, 449, 458, 470, 472, 478, 480, 482, 491, 492, 503, 505, 511, 513, 515, 523, 524, 525, 532, 536, 541, 542, 543, 552, 554, 560, 561, 563, 569, 572, 576, 584, 585, 590, 591, 594, 596, 599, 600, 605, 606, 607, 609, 620, 624, 627, 630, 631, 633, 634, 635, 636, 639, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 720, 721, 723, 725, 728, 729, 730, 731, 732, 734, 736, 738, 740, 741, 742, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 917, 931, 933, 935, 937, 944, 945, 947, 953, 954, 956, 970, 972, 974, 976, 983, 984, 986, 992, 993, 994, 1008, 1010, 1012, 1014, 1021, 1022, 1024, 1030, 1031, 1032, 1046, 1048, 1050, 1052, 1059, 1060, 1062, 1068, 1071, 1087, 1089, 1091, 1093, 1100, 1101, 1103, 1109, 1110, 1112, 1126, 1128, 1130, 1132, 1139, 1140, 1142, 1148, 1149, 1151, 1165, 1167, 1169, 1171, 1178, 1179, 1181, 1187, 1188, 1189, 1203, 1205, 1207, 1209, 1216, 1217, 1219, 1225, 1226, 1227, 1241, 1243, 1245, 1247, 1254, 1255, 1257, 1263, 1265, 1266, 1275, 1277, 1283, 1284, 1286, 1292, 1294, 1295, 1297, 1307, 1309, 1315, 1316, 1317, 1319, 1325, 1328, 1329, 1331, 1341, 1343, 1349, 1350, 1351, 1353, 1359, 1362, 1363, 1365, 1375, 1377, 1383, 1384, 1385, 1387, 1393, 1395, 1396, 1405, 1407, 1413, 1414, 1416, 1422, 1423, 1424, 1425, 1427, 1437, 1439, 1445, 1446, 1447, 1449, 1455, 1456, 1457, 1466, 1468, 1474, 1475, 1477, 1483, 1484, 1485, 1494, 1496, 1502, 1503, 1505, 1511, 1513, 1522, 1524, 1530, 1531, 1533, 1539, 1541, 1542, 1544, 1554, 1556, 1562, 1563, 1564, 1566, 1572, 1575, 1584, 1586, 1592, 1593, 1595, 1601, 1603, 1604, 1606, 1616, 1618, 1624, 1625, 1626, 1628, 1634, 1636, 1637, 1646, 1648, 1654, 1655, 1657, 1663, 1672, 1681, 1683, 1700, 1701, 1714, 1726, 1728, 1761, 1762, 1767, 1773, 1774, 1781, 1787, 1788, 1793, 1795, 1801, 1806, 1808, 1809, 1813, 1819, 1843, 1845, 1847, 1850, 1851, 1852, 1854, 1857, 1861, 1862, 1867, 1868, 1870, 1873, 1874], "control": [4, 26, 28, 32, 43, 49, 50, 57, 59, 60, 61, 62, 63, 64, 75, 81, 82, 89, 90, 102, 108, 109, 119, 121, 129, 135, 141, 142, 149, 151, 152, 153, 154, 155, 168, 174, 175, 182, 184, 185, 186, 187, 188, 200, 206, 207, 217, 219, 233, 239, 240, 247, 249, 250, 251, 252, 253, 266, 272, 273, 280, 282, 283, 284, 285, 286, 299, 305, 306, 313, 315, 316, 317, 318, 319, 332, 338, 339, 346, 348, 349, 350, 351, 352, 365, 371, 372, 379, 381, 382, 383, 384, 385, 386, 399, 405, 406, 413, 415, 416, 417, 418, 419, 432, 438, 439, 446, 448, 449, 450, 451, 452, 465, 471, 472, 479, 481, 482, 483, 484, 485, 498, 504, 505, 512, 514, 515, 516, 517, 533, 547, 553, 554, 563, 571, 572, 576, 712, 713, 716, 717, 719, 720, 721, 765, 768, 769, 770, 771, 772, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 923, 926, 936, 937, 947, 962, 965, 975, 976, 986, 1000, 1003, 1013, 1014, 1024, 1038, 1041, 1051, 1052, 1062, 1077, 1080, 1092, 1093, 1103, 1118, 1121, 1131, 1132, 1142, 1157, 1160, 1170, 1171, 1181, 1195, 1198, 1208, 1209, 1219, 1233, 1236, 1246, 1247, 1257, 1270, 1276, 1277, 1286, 1300, 1308, 1309, 1319, 1334, 1342, 1343, 1353, 1368, 1376, 1377, 1387, 1400, 1406, 1407, 1416, 1430, 1438, 1439, 1449, 1461, 1467, 1468, 1477, 1489, 1495, 1496, 1505, 1517, 1523, 1524, 1533, 1547, 1555, 1556, 1566, 1579, 1585, 1586, 1595, 1609, 1617, 1618, 1628, 1641, 1647, 1648, 1657, 1681, 1683, 1699, 1707, 1717, 1843], "possess": [4, 29, 524, 846], "demand": [4, 1188], "let": [4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 622], "weibul": [4, 6, 719, 770, 800], "first": [4, 6, 7, 8, 10, 12, 13, 17, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 35, 54, 86, 114, 129, 146, 179, 212, 244, 277, 310, 343, 376, 410, 443, 476, 509, 535, 558, 587, 602, 791, 836, 921, 942, 960, 981, 998, 1019, 1036, 1057, 1075, 1098, 1116, 1137, 1155, 1176, 1193, 1214, 1231, 1252, 1281, 1313, 1347, 1381, 1411, 1443, 1472, 1500, 1528, 1560, 1590, 1622, 1652, 1684, 1693, 1697, 1716, 1764, 1776, 1790, 1800, 1803, 1818, 1821, 1856], "store": [4, 6, 15, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 37, 58, 129, 150, 162, 183, 195, 227, 248, 260, 281, 293, 314, 326, 347, 359, 380, 393, 414, 426, 447, 459, 480, 492, 513, 524, 525, 543, 561, 606, 607, 609, 615, 619, 623, 633, 634, 718, 779, 802, 852, 904, 915, 917, 931, 933, 945, 954, 956, 970, 972, 984, 994, 1008, 1010, 1022, 1031, 1032, 1046, 1048, 1060, 1071, 1087, 1089, 1101, 1110, 1112, 1126, 1128, 1140, 1149, 1151, 1165, 1167, 1179, 1188, 1189, 1203, 1205, 1217, 1226, 1227, 1241, 1243, 1255, 1266, 1284, 1295, 1316, 1329, 1350, 1363, 1384, 1396, 1414, 1425, 1446, 1457, 1475, 1484, 1485, 1503, 1513, 1531, 1542, 1563, 1575, 1593, 1604, 1625, 1637, 1655, 1686, 1734, 1741, 1743, 1747, 1806, 1808, 1843], "exist": [4, 6, 11, 12, 13, 21, 27, 28, 29, 30, 31, 33, 55, 59, 60, 63, 66, 87, 89, 90, 92, 115, 119, 120, 121, 122, 124, 147, 151, 152, 154, 157, 180, 184, 185, 187, 190, 213, 217, 219, 222, 245, 249, 250, 252, 255, 278, 282, 283, 285, 288, 311, 315, 316, 318, 321, 344, 348, 349, 351, 354, 377, 381, 382, 385, 388, 411, 415, 416, 418, 421, 444, 448, 449, 451, 454, 477, 481, 482, 484, 487, 510, 514, 515, 519, 543, 559, 563, 565, 575, 576, 577, 607, 805, 819, 825, 917, 943, 947, 949, 956, 982, 986, 988, 994, 1020, 1024, 1026, 1032, 1058, 1062, 1064, 1071, 1099, 1103, 1105, 1112, 1138, 1142, 1144, 1151, 1177, 1181, 1183, 1189, 1215, 1219, 1221, 1227, 1253, 1257, 1259, 1266, 1282, 1286, 1288, 1295, 1314, 1319, 1321, 1329, 1348, 1353, 1355, 1363, 1382, 1387, 1389, 1396, 1412, 1416, 1418, 1425, 1444, 1449, 1451, 1457, 1473, 1477, 1479, 1485, 1501, 1505, 1507, 1513, 1529, 1533, 1535, 1542, 1561, 1566, 1568, 1575, 1591, 1595, 1597, 1604, 1623, 1628, 1630, 1637, 1653, 1657, 1659, 1688, 1708, 1847, 1852], "dummi": [4, 1749], "variabl": [4, 17, 20, 22, 29, 58, 150, 183, 248, 281, 314, 347, 513, 798, 802, 877, 901, 902, 904], "we": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 825, 901, 902], "compar": [4, 7, 22, 31], "later": [4, 15, 22, 25, 26, 28, 29, 1722], "gmod": 4, "old_diamet": 4, "pop": [4, 24, 32], "diamet": [4, 6, 8, 9, 10, 11, 15, 19, 20, 22, 25, 26, 28, 29, 31, 32, 33, 543, 561, 562, 607, 609, 610, 620, 643, 644, 645, 646, 647, 648, 649, 662, 663, 664, 665, 666, 667, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 715, 718, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742, 744, 746, 747, 748, 749, 750, 751, 755, 756, 757, 758, 760, 761, 762, 767, 768, 774, 775, 781, 782, 784, 785, 786, 879, 880, 883, 894, 895, 896, 917, 945, 946, 956, 984, 985, 994, 1022, 1023, 1032, 1060, 1061, 1071, 1101, 1102, 1112, 1140, 1141, 1151, 1179, 1180, 1189, 1217, 1218, 1227, 1255, 1256, 1266, 1284, 1285, 1295, 1316, 1318, 1329, 1350, 1352, 1363, 1384, 1386, 1396, 1414, 1415, 1425, 1446, 1448, 1457, 1475, 1476, 1485, 1503, 1504, 1513, 1531, 1532, 1542, 1563, 1565, 1575, 1593, 1594, 1604, 1625, 1627, 1637, 1655, 1656], "add_model": [4, 5, 6, 7, 11, 12, 13, 20, 21, 28, 29, 30, 31, 32, 544, 608, 717, 769, 795, 796, 904, 918, 957, 995, 1033, 1072, 1113, 1152, 1190, 1228, 1267, 1296, 1330, 1364, 1397, 1426, 1458, 1486, 1514, 1543, 1576, 1605, 1638], "propnam": [4, 6, 7, 8, 11, 12, 13, 20, 21, 26, 28, 29, 30, 31, 32, 46, 47, 63, 78, 79, 105, 106, 138, 139, 154, 171, 172, 187, 203, 204, 236, 237, 252, 269, 270, 285, 302, 303, 318, 335, 336, 351, 368, 369, 385, 402, 403, 418, 435, 436, 451, 468, 469, 484, 501, 502, 530, 531, 543, 550, 551, 561, 562, 578, 607, 609, 610, 634, 717, 769, 795, 796, 904, 917, 932, 934, 945, 946, 956, 971, 973, 984, 985, 994, 1009, 1011, 1022, 1023, 1032, 1047, 1049, 1060, 1061, 1071, 1088, 1090, 1101, 1102, 1112, 1127, 1129, 1140, 1141, 1151, 1166, 1168, 1179, 1180, 1189, 1204, 1206, 1217, 1218, 1227, 1242, 1244, 1255, 1256, 1266, 1273, 1274, 1284, 1285, 1295, 1303, 1304, 1305, 1306, 1316, 1318, 1329, 1337, 1338, 1339, 1340, 1350, 1352, 1363, 1371, 1372, 1373, 1374, 1384, 1386, 1396, 1403, 1404, 1414, 1415, 1425, 1433, 1434, 1435, 1436, 1446, 1448, 1457, 1464, 1465, 1475, 1476, 1485, 1492, 1493, 1503, 1504, 1513, 1520, 1521, 1531, 1532, 1542, 1550, 1551, 1552, 1553, 1563, 1565, 1575, 1582, 1583, 1593, 1594, 1604, 1612, 1613, 1614, 1615, 1625, 1627, 1637, 1644, 1645, 1655, 1656, 1872], "pore_s": [4, 6, 28, 29, 717, 769, 795], "0": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 61, 67, 93, 98, 125, 158, 191, 195, 223, 256, 289, 322, 355, 383, 389, 422, 455, 488, 520, 538, 566, 620, 631, 638, 643, 644, 645, 646, 647, 648, 649, 652, 655, 656, 712, 713, 717, 718, 719, 720, 721, 765, 769, 770, 771, 772, 789, 791, 795, 800, 801, 802, 803, 804, 807, 832, 848, 850, 856, 863, 867, 874, 895, 896, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 921, 922, 924, 925, 926, 927, 928, 938, 950, 960, 961, 963, 964, 965, 966, 967, 977, 989, 998, 999, 1001, 1002, 1003, 1004, 1005, 1015, 1027, 1031, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1053, 1065, 1069, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1094, 1106, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1133, 1145, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1172, 1184, 1188, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1210, 1222, 1226, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1248, 1260, 1289, 1322, 1356, 1390, 1419, 1452, 1480, 1508, 1536, 1569, 1598, 1631, 1660, 1680, 1681, 1684, 1699, 1707, 1708, 1713, 1717, 1719, 1720, 1722, 1724, 1725, 1733, 1735, 1737, 1739, 1742, 1744, 1746, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1800, 1818, 1869], "5": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 620, 643, 644, 645, 646, 647, 648, 649, 655, 685, 700, 718, 721, 772, 796, 807, 825, 835, 867, 874, 901, 902, 903, 904, 906, 907, 908, 921, 922, 924, 925, 926, 927, 928, 938, 960, 961, 963, 964, 965, 966, 967, 977, 998, 999, 1001, 1002, 1003, 1004, 1005, 1015, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1053, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1094, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1133, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1172, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1210, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1248, 1680, 1684, 1698, 1715, 1722, 1727, 1869], "loc": [4, 6, 28, 29, 717, 719, 721, 769, 770, 772, 795, 800, 807], "now": [4, 6, 7, 8, 10, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 717, 769, 795], "show_hist": 4, "glanc": 4, "histogram": [4, 6, 33, 799], "two": [4, 6, 11, 12, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 35, 59, 89, 98, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 619, 620, 636, 666, 668, 712, 720, 771, 792, 804, 813, 818, 892, 901, 902, 924, 927, 928, 938, 963, 966, 967, 977, 1001, 1004, 1005, 1015, 1039, 1042, 1043, 1053, 1069, 1078, 1081, 1082, 1094, 1119, 1122, 1123, 1133, 1158, 1161, 1162, 1172, 1188, 1196, 1199, 1200, 1210, 1234, 1237, 1238, 1248, 1684, 1691, 1693, 1694, 1695, 1708, 1721, 1729, 1747, 1749, 1751, 1805, 1823, 1829, 1832, 1834, 1839], "more": [4, 5, 8, 13, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 50, 51, 52, 55, 59, 66, 75, 82, 83, 84, 87, 89, 92, 102, 109, 110, 111, 115, 119, 124, 135, 142, 143, 144, 147, 151, 157, 168, 175, 176, 177, 180, 184, 190, 195, 200, 207, 208, 209, 213, 217, 222, 233, 240, 241, 242, 245, 249, 255, 266, 273, 274, 275, 278, 282, 288, 299, 306, 307, 308, 311, 315, 321, 332, 339, 340, 341, 344, 348, 354, 365, 372, 373, 374, 377, 381, 388, 399, 406, 407, 408, 411, 415, 421, 432, 439, 440, 441, 444, 448, 454, 465, 472, 473, 474, 477, 481, 487, 498, 505, 506, 507, 510, 514, 519, 543, 544, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 607, 608, 621, 721, 734, 772, 807, 901, 902, 917, 918, 923, 924, 927, 928, 937, 938, 939, 940, 943, 949, 954, 956, 957, 962, 963, 966, 967, 976, 977, 978, 979, 982, 988, 994, 995, 1000, 1001, 1004, 1005, 1014, 1015, 1016, 1017, 1020, 1026, 1032, 1033, 1038, 1039, 1042, 1043, 1052, 1053, 1054, 1055, 1058, 1064, 1071, 1072, 1077, 1078, 1081, 1082, 1093, 1094, 1095, 1096, 1099, 1105, 1112, 1113, 1118, 1119, 1122, 1123, 1132, 1133, 1134, 1135, 1138, 1144, 1151, 1152, 1157, 1158, 1161, 1162, 1171, 1172, 1173, 1174, 1177, 1183, 1189, 1190, 1195, 1196, 1199, 1200, 1209, 1210, 1211, 1212, 1215, 1221, 1227, 1228, 1233, 1234, 1237, 1238, 1247, 1248, 1249, 1250, 1253, 1259, 1266, 1267, 1270, 1277, 1278, 1279, 1282, 1288, 1295, 1296, 1300, 1309, 1310, 1311, 1314, 1321, 1329, 1330, 1334, 1343, 1344, 1345, 1348, 1355, 1363, 1364, 1368, 1377, 1378, 1379, 1382, 1389, 1396, 1397, 1400, 1407, 1408, 1409, 1412, 1418, 1425, 1426, 1430, 1439, 1440, 1441, 1444, 1451, 1457, 1458, 1461, 1468, 1469, 1470, 1473, 1479, 1485, 1486, 1489, 1496, 1497, 1498, 1501, 1507, 1513, 1514, 1517, 1524, 1525, 1526, 1529, 1535, 1542, 1543, 1547, 1556, 1557, 1558, 1561, 1568, 1575, 1576, 1579, 1586, 1587, 1588, 1591, 1597, 1604, 1605, 1609, 1618, 1619, 1620, 1623, 1630, 1637, 1638, 1641, 1648, 1649, 1650, 1653, 1659, 1691, 1694, 1695, 1698, 1756, 1829, 1852, 1857, 1873, 1874], "complex": [4, 25, 28, 29, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 377, 411, 444, 477, 510, 559, 575, 943, 982, 1020, 1058, 1099, 1138, 1177, 1215, 1253, 1282, 1314, 1348, 1382, 1412, 1444, 1473, 1501, 1529, 1561, 1591, 1623, 1653], "task": [4, 26], "permeabilti": 5, "note": [5, 6, 7, 8, 9, 11, 12, 13, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 50, 51, 52, 55, 59, 61, 63, 67, 82, 83, 84, 87, 89, 93, 98, 109, 110, 111, 115, 119, 125, 129, 142, 143, 144, 147, 151, 154, 158, 175, 176, 177, 180, 184, 187, 191, 195, 196, 207, 208, 209, 213, 217, 223, 240, 241, 242, 245, 249, 252, 256, 273, 274, 275, 278, 282, 285, 289, 293, 306, 307, 308, 311, 315, 318, 322, 339, 340, 341, 344, 348, 351, 355, 372, 373, 374, 377, 381, 383, 385, 389, 406, 407, 408, 411, 415, 418, 422, 439, 440, 441, 444, 448, 451, 455, 459, 472, 473, 474, 477, 481, 484, 488, 505, 506, 507, 510, 514, 520, 538, 543, 544, 554, 555, 556, 559, 561, 566, 572, 573, 574, 575, 595, 607, 608, 609, 619, 620, 621, 623, 624, 630, 631, 637, 639, 662, 667, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 710, 713, 718, 721, 723, 725, 772, 779, 781, 782, 783, 784, 785, 786, 790, 802, 807, 825, 829, 832, 839, 848, 850, 852, 856, 863, 865, 867, 874, 877, 879, 880, 887, 888, 895, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 915, 917, 918, 921, 922, 925, 927, 928, 931, 933, 937, 938, 939, 940, 943, 945, 950, 954, 956, 957, 960, 961, 964, 966, 967, 970, 972, 976, 977, 978, 979, 982, 984, 989, 993, 994, 995, 998, 999, 1002, 1004, 1005, 1008, 1010, 1014, 1015, 1016, 1017, 1020, 1022, 1027, 1031, 1032, 1033, 1036, 1037, 1040, 1042, 1043, 1046, 1048, 1052, 1053, 1054, 1055, 1058, 1060, 1065, 1069, 1071, 1072, 1075, 1076, 1079, 1081, 1082, 1083, 1084, 1087, 1089, 1093, 1094, 1095, 1096, 1099, 1101, 1106, 1112, 1113, 1116, 1117, 1120, 1122, 1123, 1126, 1128, 1132, 1133, 1134, 1135, 1138, 1140, 1145, 1149, 1151, 1152, 1155, 1156, 1159, 1161, 1162, 1165, 1167, 1171, 1172, 1173, 1174, 1177, 1179, 1184, 1189, 1190, 1193, 1194, 1197, 1199, 1200, 1203, 1205, 1209, 1210, 1211, 1212, 1215, 1217, 1222, 1226, 1227, 1228, 1231, 1232, 1235, 1237, 1238, 1241, 1243, 1247, 1248, 1249, 1250, 1253, 1255, 1260, 1266, 1267, 1277, 1278, 1279, 1282, 1284, 1289, 1294, 1295, 1296, 1309, 1310, 1311, 1314, 1316, 1317, 1322, 1326, 1328, 1329, 1330, 1343, 1344, 1345, 1348, 1350, 1351, 1356, 1360, 1362, 1363, 1364, 1377, 1378, 1379, 1382, 1384, 1385, 1390, 1394, 1396, 1397, 1407, 1408, 1409, 1412, 1414, 1419, 1424, 1425, 1426, 1439, 1440, 1441, 1444, 1446, 1447, 1452, 1457, 1458, 1468, 1469, 1470, 1473, 1475, 1480, 1485, 1486, 1496, 1497, 1498, 1501, 1503, 1508, 1513, 1514, 1524, 1525, 1526, 1529, 1531, 1536, 1541, 1542, 1543, 1556, 1557, 1558, 1561, 1563, 1564, 1569, 1573, 1575, 1576, 1586, 1587, 1588, 1591, 1593, 1598, 1603, 1604, 1605, 1618, 1619, 1620, 1623, 1625, 1626, 1631, 1635, 1637, 1638, 1648, 1649, 1650, 1653, 1655, 1660, 1671, 1672, 1682, 1684, 1688, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1707, 1715, 1716, 1720, 1721, 1722, 1734, 1745, 1808, 1843, 1852, 1857, 1858, 1863, 1867, 1868], "calcualt": [5, 825], "an": [5, 7, 8, 9, 12, 13, 15, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 47, 49, 59, 63, 67, 70, 71, 78, 79, 81, 89, 93, 96, 105, 106, 108, 118, 119, 120, 122, 125, 128, 129, 138, 139, 141, 151, 154, 158, 161, 171, 172, 174, 184, 187, 191, 194, 196, 203, 204, 206, 217, 223, 226, 236, 237, 239, 249, 252, 256, 259, 269, 270, 272, 282, 285, 289, 292, 293, 302, 303, 305, 315, 318, 322, 325, 335, 336, 338, 348, 351, 355, 358, 368, 369, 371, 380, 381, 385, 389, 392, 402, 403, 405, 414, 415, 418, 422, 425, 435, 436, 438, 447, 448, 451, 455, 458, 468, 469, 471, 480, 481, 484, 488, 491, 492, 501, 502, 504, 514, 520, 523, 524, 525, 530, 531, 533, 538, 541, 550, 551, 553, 566, 569, 590, 591, 595, 605, 618, 619, 620, 622, 623, 630, 631, 632, 633, 634, 635, 636, 637, 712, 713, 717, 720, 735, 744, 769, 771, 776, 779, 787, 790, 795, 796, 804, 805, 811, 818, 825, 828, 829, 846, 847, 848, 849, 869, 872, 873, 879, 895, 898, 899, 921, 922, 925, 926, 927, 932, 934, 936, 938, 950, 953, 960, 961, 964, 965, 966, 971, 973, 975, 977, 989, 992, 993, 998, 999, 1002, 1003, 1004, 1009, 1011, 1013, 1015, 1027, 1030, 1031, 1036, 1037, 1040, 1041, 1042, 1047, 1049, 1051, 1053, 1065, 1068, 1069, 1075, 1076, 1079, 1080, 1081, 1088, 1090, 1092, 1094, 1106, 1109, 1116, 1117, 1120, 1121, 1122, 1127, 1129, 1131, 1133, 1145, 1148, 1155, 1156, 1159, 1160, 1161, 1166, 1168, 1170, 1172, 1184, 1187, 1188, 1193, 1194, 1197, 1198, 1199, 1204, 1206, 1208, 1210, 1222, 1225, 1226, 1231, 1232, 1235, 1236, 1237, 1242, 1244, 1246, 1248, 1260, 1263, 1265, 1273, 1274, 1276, 1289, 1292, 1294, 1297, 1304, 1305, 1306, 1308, 1322, 1325, 1328, 1331, 1338, 1339, 1340, 1342, 1356, 1359, 1362, 1365, 1372, 1373, 1374, 1376, 1390, 1393, 1403, 1404, 1406, 1419, 1422, 1423, 1424, 1427, 1434, 1435, 1436, 1438, 1452, 1455, 1456, 1464, 1465, 1467, 1480, 1483, 1492, 1493, 1495, 1508, 1511, 1520, 1521, 1523, 1536, 1539, 1540, 1541, 1544, 1551, 1552, 1553, 1555, 1569, 1572, 1582, 1583, 1585, 1598, 1601, 1602, 1603, 1606, 1613, 1614, 1615, 1617, 1631, 1634, 1636, 1644, 1645, 1647, 1660, 1663, 1672, 1681, 1682, 1684, 1687, 1690, 1691, 1692, 1694, 1695, 1696, 1698, 1702, 1703, 1708, 1713, 1718, 1721, 1724, 1725, 1732, 1736, 1738, 1745, 1751, 1754, 1767, 1781, 1793, 1806, 1826, 1831, 1837, 1838, 1847, 1854, 1861, 1862, 1873, 1874, 1875], "extract": [5, 8, 9, 12, 22, 25, 26, 28, 29, 33, 543, 607, 619, 620, 622, 623, 877, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1741, 1743, 1745, 1747, 1749, 1751, 1858], "from": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 21, 22, 25, 26, 27, 29, 30, 32, 33, 38, 44, 59, 60, 63, 69, 72, 76, 89, 90, 95, 99, 103, 119, 120, 121, 122, 127, 130, 136, 151, 152, 154, 160, 163, 169, 184, 185, 187, 193, 197, 201, 217, 219, 225, 228, 234, 249, 250, 252, 258, 261, 267, 282, 283, 285, 291, 294, 300, 315, 316, 318, 324, 327, 333, 348, 349, 351, 357, 360, 366, 381, 382, 385, 391, 394, 400, 415, 416, 418, 424, 427, 433, 448, 449, 451, 457, 460, 466, 481, 482, 484, 490, 493, 499, 514, 515, 522, 524, 526, 528, 540, 542, 545, 548, 563, 568, 576, 580, 582, 589, 591, 592, 597, 604, 619, 620, 623, 624, 631, 634, 635, 639, 715, 716, 717, 719, 721, 727, 728, 729, 731, 732, 767, 769, 770, 772, 779, 783, 784, 791, 794, 795, 800, 807, 823, 831, 836, 839, 843, 846, 849, 850, 865, 896, 899, 904, 916, 919, 929, 947, 952, 954, 955, 958, 968, 986, 991, 993, 996, 1006, 1024, 1029, 1034, 1044, 1062, 1067, 1070, 1073, 1083, 1084, 1085, 1103, 1108, 1111, 1114, 1124, 1142, 1147, 1150, 1153, 1163, 1181, 1186, 1191, 1201, 1219, 1224, 1226, 1229, 1239, 1257, 1262, 1268, 1271, 1286, 1291, 1298, 1301, 1303, 1317, 1319, 1324, 1332, 1335, 1337, 1351, 1353, 1358, 1366, 1369, 1371, 1385, 1387, 1392, 1398, 1401, 1416, 1421, 1428, 1431, 1433, 1447, 1449, 1454, 1459, 1462, 1477, 1482, 1484, 1487, 1490, 1505, 1510, 1515, 1518, 1533, 1538, 1540, 1545, 1548, 1550, 1564, 1566, 1571, 1577, 1580, 1595, 1600, 1602, 1607, 1610, 1612, 1626, 1628, 1633, 1639, 1642, 1657, 1662, 1672, 1681, 1685, 1687, 1688, 1695, 1707, 1716, 1726, 1727, 1728, 1731, 1734, 1736, 1738, 1741, 1743, 1745, 1747, 1749, 1751, 1757, 1759, 1766, 1769, 1771, 1780, 1782, 1783, 1785, 1792, 1794, 1796, 1799, 1814, 1817, 1827, 1830, 1831, 1838, 1843, 1844, 1845, 1848, 1852, 1853, 1860, 1863, 1864, 1869], "porespi": [5, 8, 9, 11, 622], "similar": [5, 7, 8, 9, 11, 12, 13, 22, 28, 30, 32, 736], "numpi": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 25, 27, 28, 29, 30, 31, 32, 33, 55, 58, 66, 87, 92, 115, 124, 147, 150, 157, 180, 183, 190, 213, 222, 245, 248, 255, 278, 281, 288, 311, 314, 321, 344, 347, 354, 377, 380, 388, 411, 414, 421, 444, 447, 454, 477, 480, 487, 510, 513, 519, 559, 565, 575, 577, 615, 709, 712, 713, 717, 718, 719, 720, 721, 725, 731, 734, 738, 756, 761, 767, 769, 770, 771, 772, 775, 779, 782, 795, 796, 800, 804, 807, 813, 831, 852, 855, 856, 862, 863, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 899, 904, 912, 913, 925, 927, 943, 949, 964, 966, 982, 988, 1002, 1004, 1020, 1026, 1040, 1042, 1058, 1064, 1079, 1081, 1099, 1105, 1120, 1122, 1138, 1144, 1159, 1161, 1177, 1183, 1188, 1197, 1199, 1215, 1221, 1235, 1237, 1253, 1259, 1282, 1288, 1314, 1321, 1348, 1355, 1382, 1389, 1412, 1418, 1444, 1451, 1473, 1479, 1501, 1507, 1529, 1535, 1561, 1568, 1591, 1597, 1623, 1630, 1653, 1659, 1672, 1691, 1694, 1695, 1704, 1724, 1725, 1745, 1782, 1864, 1867, 1868, 1869, 1876], "np": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 51, 55, 59, 67, 68, 71, 83, 87, 89, 93, 94, 97, 98, 110, 115, 119, 125, 126, 129, 143, 147, 151, 158, 159, 162, 176, 180, 184, 191, 192, 195, 208, 213, 217, 223, 224, 227, 241, 245, 249, 256, 257, 260, 274, 278, 282, 289, 290, 293, 307, 311, 315, 322, 323, 326, 340, 344, 348, 355, 356, 359, 373, 377, 381, 389, 390, 393, 407, 411, 415, 422, 423, 426, 440, 444, 448, 455, 456, 459, 473, 477, 481, 488, 489, 492, 506, 510, 514, 520, 521, 525, 538, 539, 542, 543, 555, 559, 566, 567, 573, 575, 607, 713, 796, 811, 813, 869, 873, 904, 915, 917, 921, 922, 938, 939, 943, 950, 951, 954, 956, 960, 961, 977, 978, 982, 989, 990, 993, 994, 998, 999, 1015, 1016, 1020, 1027, 1028, 1031, 1032, 1036, 1037, 1053, 1054, 1058, 1065, 1066, 1069, 1071, 1075, 1076, 1094, 1095, 1099, 1106, 1107, 1110, 1112, 1116, 1117, 1133, 1134, 1138, 1145, 1146, 1149, 1151, 1155, 1156, 1172, 1173, 1177, 1184, 1185, 1188, 1189, 1193, 1194, 1210, 1211, 1215, 1222, 1223, 1226, 1227, 1231, 1232, 1248, 1249, 1253, 1260, 1261, 1265, 1266, 1278, 1282, 1289, 1290, 1293, 1294, 1295, 1310, 1314, 1322, 1323, 1327, 1328, 1329, 1344, 1348, 1356, 1357, 1361, 1362, 1363, 1378, 1382, 1390, 1391, 1395, 1396, 1408, 1412, 1419, 1420, 1423, 1424, 1425, 1440, 1444, 1452, 1453, 1456, 1457, 1469, 1473, 1480, 1481, 1484, 1485, 1497, 1501, 1508, 1509, 1512, 1513, 1525, 1529, 1536, 1537, 1540, 1541, 1542, 1557, 1561, 1569, 1570, 1574, 1575, 1587, 1591, 1598, 1599, 1602, 1603, 1604, 1619, 1623, 1631, 1632, 1636, 1637, 1649, 1653, 1660, 1661, 1671, 1680, 1690, 1704, 1715, 1722, 1727, 1869], "set_mpl_styl": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33], "seed": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 25, 26, 28, 29, 31, 32, 33, 643, 644, 645, 646, 647, 648, 649, 712, 713, 717, 719, 720, 721, 764, 765, 769, 770, 771, 772, 795, 800, 804, 807], "matplotlib": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 25, 27, 28, 29, 32, 33, 596, 717, 719, 721, 769, 770, 772, 795, 800, 807], "inlin": [5, 7, 8, 9, 11, 12, 13, 20, 33], "set_printopt": [5, 7, 8, 9, 10, 11, 12, 13, 20], "precis": [5, 7, 8, 9, 10, 11, 12, 13, 20], "15": [5, 6, 8, 9, 11, 12, 13, 20, 24, 25, 26, 27, 28, 29, 31, 32, 33], "6": [5, 6, 8, 9, 11, 12, 13, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 652, 655, 898, 901, 902, 903, 906, 927, 938, 954, 966, 977, 1004, 1015, 1042, 1053, 1081, 1094, 1122, 1133, 1161, 1172, 1199, 1210, 1237, 1248, 1698, 1717], "add_model_collect": [5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 28, 33], "collect": [5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 33, 544, 608, 918, 957, 995, 1033, 1072, 1113, 1152, 1190, 1228, 1267, 1296, 1330, 1364, 1397, 1426, 1458, 1486, 1514, 1543, 1576, 1605, 1638], "spheres_and_cylind": [5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 22, 28, 33], "regenerate_model": [5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 28, 30, 33, 524, 543, 607, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637], "assum": [5, 7, 8, 10, 11, 12, 13, 22, 24, 25, 27, 28, 29, 31, 32, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 718, 723, 724, 725, 726, 727, 728, 729, 731, 732, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 767, 825, 850, 877, 879, 880, 901, 902, 904, 921, 954, 960, 993, 998, 1036, 1075, 1084, 1116, 1155, 1193, 1231, 1680, 1685, 1708, 1713], "flowsthrough": 5, "porou": [5, 7, 8, 9, 10, 12, 13, 22, 25, 32, 34, 129, 1877], "medium": [5, 7, 9, 12, 13, 22, 898], "fluid": [5, 7, 8, 10, 12, 13, 19, 22, 31, 32, 98, 120, 122, 195, 877, 899], "ani": [5, 6, 8, 9, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 33, 35, 43, 50, 51, 52, 55, 59, 66, 75, 82, 83, 84, 87, 89, 92, 102, 109, 110, 111, 115, 119, 120, 122, 124, 135, 142, 143, 144, 147, 151, 157, 168, 175, 176, 177, 180, 184, 190, 200, 207, 208, 209, 213, 217, 222, 233, 240, 241, 242, 245, 249, 255, 266, 273, 274, 275, 278, 282, 288, 299, 306, 307, 308, 311, 315, 321, 332, 339, 340, 341, 344, 348, 354, 365, 372, 373, 374, 377, 381, 388, 399, 406, 407, 408, 411, 415, 421, 432, 439, 440, 441, 444, 448, 454, 465, 472, 473, 474, 477, 481, 487, 498, 505, 506, 507, 510, 514, 519, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 620, 630, 631, 634, 639, 718, 796, 818, 819, 820, 821, 823, 825, 898, 923, 924, 927, 928, 937, 938, 939, 940, 943, 949, 954, 962, 963, 966, 967, 976, 977, 978, 979, 982, 988, 1000, 1001, 1004, 1005, 1014, 1015, 1016, 1017, 1020, 1026, 1031, 1038, 1039, 1042, 1043, 1052, 1053, 1054, 1055, 1058, 1064, 1077, 1078, 1081, 1082, 1093, 1094, 1095, 1096, 1099, 1105, 1118, 1119, 1122, 1123, 1132, 1133, 1134, 1135, 1138, 1144, 1157, 1158, 1161, 1162, 1171, 1172, 1173, 1174, 1177, 1183, 1195, 1196, 1199, 1200, 1209, 1210, 1211, 1212, 1215, 1221, 1233, 1234, 1237, 1238, 1247, 1248, 1249, 1250, 1253, 1259, 1270, 1277, 1278, 1279, 1282, 1288, 1300, 1309, 1310, 1311, 1314, 1321, 1334, 1343, 1344, 1345, 1348, 1355, 1368, 1377, 1378, 1379, 1382, 1389, 1400, 1407, 1408, 1409, 1412, 1418, 1430, 1439, 1440, 1441, 1444, 1451, 1456, 1461, 1468, 1469, 1470, 1473, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1547, 1556, 1557, 1558, 1561, 1568, 1579, 1586, 1587, 1588, 1591, 1597, 1609, 1618, 1619, 1620, 1623, 1630, 1641, 1648, 1649, 1650, 1653, 1659, 1682, 1691, 1694, 1695, 1698, 1714, 1715, 1720, 1806, 1845, 1852, 1867, 1868, 1873, 1874], "other": [5, 6, 7, 8, 11, 12, 13, 17, 22, 24, 26, 28, 30, 31, 32, 33, 59, 61, 89, 119, 120, 122, 151, 184, 217, 249, 282, 315, 348, 381, 383, 415, 448, 481, 514, 524, 543, 607, 615, 616, 630, 631, 636, 638, 639, 712, 716, 717, 719, 720, 721, 765, 768, 769, 770, 771, 772, 787, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 813, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 916, 917, 926, 931, 933, 955, 956, 965, 970, 972, 993, 994, 1003, 1008, 1010, 1032, 1041, 1046, 1048, 1069, 1070, 1071, 1080, 1087, 1089, 1111, 1112, 1121, 1126, 1128, 1149, 1150, 1151, 1160, 1165, 1167, 1189, 1198, 1203, 1205, 1227, 1236, 1241, 1243, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1683, 1687, 1706, 1714, 1720, 1722, 1745, 1806, 1829, 1842, 1863], "To": [5, 6, 7, 8, 9, 10, 12, 13, 20, 22, 24, 27, 28, 30, 31, 32, 33, 35, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 377, 411, 444, 477, 510, 559, 575, 630, 931, 933, 943, 970, 972, 982, 1008, 1010, 1020, 1046, 1048, 1058, 1069, 1087, 1089, 1099, 1126, 1128, 1138, 1165, 1167, 1177, 1203, 1205, 1215, 1241, 1243, 1253, 1282, 1314, 1348, 1382, 1412, 1444, 1473, 1501, 1529, 1561, 1591, 1623, 1653, 1699, 1722, 1749, 1751], "hydraul": [5, 13, 31, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 734, 877, 885, 890, 891, 892], "conduit": [5, 7, 12, 13, 19, 31, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 699, 700, 701, 702, 703, 704, 877, 882, 883, 884, 885, 887, 888, 890, 891, 892, 898, 912, 913], "must": [5, 7, 8, 12, 13, 19, 22, 24, 27, 28, 29, 30, 32, 62, 64, 67, 93, 125, 153, 155, 158, 186, 188, 191, 196, 223, 251, 253, 256, 284, 286, 289, 317, 319, 322, 350, 352, 355, 384, 386, 389, 417, 419, 422, 450, 452, 455, 459, 483, 485, 488, 516, 517, 520, 538, 566, 623, 635, 638, 802, 825, 832, 856, 863, 867, 874, 901, 902, 904, 916, 925, 950, 964, 989, 1002, 1027, 1040, 1065, 1070, 1079, 1106, 1120, 1145, 1150, 1159, 1184, 1197, 1222, 1235, 1260, 1289, 1322, 1356, 1390, 1419, 1452, 1456, 1480, 1484, 1508, 1536, 1569, 1598, 1631, 1660, 1671, 1680, 1688, 1692, 1707, 1719, 1720, 1734, 1745, 1838, 1864], "here": [5, 6, 7, 8, 12, 13, 17, 24, 25, 26, 28, 29, 30, 33, 621, 779, 852, 901, 902, 938, 977, 1015, 1053, 1094, 1133, 1172, 1210, 1248, 1672, 1741, 1743], "basic": [5, 8, 9, 10, 12, 13, 17, 24, 25, 26, 27, 30, 33, 380, 414, 447, 480, 713, 847, 872, 880, 1305, 1339, 1373, 1435, 1552, 1614, 1862], "includ": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 50, 51, 52, 55, 59, 75, 82, 83, 84, 87, 89, 102, 109, 110, 111, 115, 119, 120, 122, 135, 142, 143, 144, 147, 151, 168, 175, 176, 177, 180, 184, 200, 207, 208, 209, 213, 217, 233, 240, 241, 242, 245, 249, 266, 273, 274, 275, 278, 282, 299, 306, 307, 308, 311, 315, 332, 339, 340, 341, 344, 348, 365, 372, 373, 374, 377, 381, 399, 406, 407, 408, 411, 415, 432, 439, 440, 441, 444, 448, 465, 472, 473, 474, 477, 481, 498, 505, 506, 507, 510, 514, 547, 554, 555, 556, 559, 571, 572, 573, 574, 575, 635, 639, 825, 875, 923, 926, 927, 937, 939, 940, 943, 962, 965, 966, 976, 978, 979, 982, 1000, 1003, 1004, 1014, 1016, 1017, 1020, 1038, 1041, 1042, 1052, 1054, 1055, 1058, 1077, 1080, 1081, 1093, 1095, 1096, 1099, 1118, 1121, 1122, 1132, 1134, 1135, 1138, 1157, 1160, 1161, 1171, 1173, 1174, 1177, 1195, 1198, 1199, 1209, 1211, 1212, 1215, 1233, 1236, 1237, 1247, 1249, 1250, 1253, 1270, 1277, 1278, 1279, 1282, 1300, 1309, 1310, 1311, 1314, 1334, 1343, 1344, 1345, 1348, 1368, 1377, 1378, 1379, 1382, 1400, 1407, 1408, 1409, 1412, 1430, 1439, 1440, 1441, 1444, 1461, 1468, 1469, 1470, 1473, 1489, 1496, 1497, 1498, 1501, 1517, 1524, 1525, 1526, 1529, 1547, 1556, 1557, 1558, 1561, 1579, 1586, 1587, 1588, 1591, 1609, 1618, 1619, 1620, 1623, 1641, 1648, 1649, 1650, 1653, 1696, 1852, 1857, 1873, 1874], "generic_hydraul": [5, 31, 658, 659], "1": [5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 98, 196, 619, 620, 638, 652, 655, 662, 663, 665, 668, 672, 678, 687, 688, 693, 702, 703, 712, 713, 720, 721, 736, 765, 771, 772, 791, 801, 803, 804, 807, 825, 832, 835, 847, 848, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 879, 887, 888, 892, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 916, 921, 922, 924, 925, 926, 927, 928, 931, 938, 954, 955, 960, 961, 963, 964, 965, 966, 967, 970, 977, 993, 998, 999, 1001, 1002, 1003, 1004, 1005, 1008, 1015, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1046, 1053, 1069, 1070, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1087, 1094, 1111, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1126, 1133, 1150, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1165, 1172, 1188, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1203, 1210, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1241, 1248, 1305, 1339, 1373, 1435, 1552, 1614, 1680, 1681, 1682, 1684, 1685, 1686, 1690, 1696, 1697, 1704, 1707, 1715, 1718, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1745, 1749, 1751, 1782, 1794, 1802, 1820, 1869], "14": [5, 6, 7, 8, 9, 10, 13, 22, 25, 26, 27, 28, 29, 31, 32, 33, 652, 954], "37": [5, 25, 28, 32], "53": [5, 25, 32], "warn": [5, 6, 7, 9, 10, 11, 13, 33, 638, 1732, 1754, 1869], "entry_pressur": [5, 8, 32, 33, 658, 659], "wa": [5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 67, 68, 93, 94, 125, 126, 158, 159, 191, 192, 223, 224, 256, 257, 289, 290, 322, 323, 355, 356, 389, 390, 422, 423, 455, 456, 488, 489, 520, 521, 524, 538, 539, 543, 566, 567, 607, 619, 636, 785, 917, 950, 951, 956, 989, 990, 994, 1027, 1028, 1032, 1065, 1066, 1071, 1106, 1107, 1112, 1145, 1146, 1151, 1184, 1185, 1189, 1222, 1223, 1227, 1260, 1261, 1266, 1289, 1290, 1295, 1322, 1323, 1329, 1356, 1357, 1363, 1390, 1391, 1396, 1419, 1420, 1425, 1452, 1453, 1457, 1480, 1481, 1485, 1508, 1509, 1513, 1536, 1537, 1542, 1569, 1570, 1575, 1598, 1599, 1604, 1631, 1632, 1637, 1660, 1661, 1696], "sinc": [5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 98, 561, 609, 620, 631, 829, 916, 927, 945, 954, 955, 966, 984, 1004, 1022, 1042, 1060, 1070, 1081, 1101, 1111, 1122, 1140, 1150, 1161, 1179, 1199, 1217, 1237, 1255, 1284, 1293, 1316, 1350, 1384, 1414, 1446, 1475, 1503, 1531, 1563, 1593, 1625, 1655, 1691, 1694, 1695, 1719, 1720, 1733, 1735, 1737, 1739, 1742, 1744, 1746, 1748, 1750, 1752, 1753, 1755, 1806], "miss": [5, 7, 10, 13, 27, 33, 895, 1719], "_model": [5, 7, 10, 13, 33], "py": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 630, 1671], "499": [5, 7, 10, 11, 13, 33], "surface_tens": [5, 12, 13, 30, 32, 33, 655, 656, 854, 879, 880, 894, 895, 896], "diffusive_conduct": [5, 8, 10, 12, 13, 19, 21, 658, 659, 877], "x": [5, 6, 7, 9, 11, 12, 13, 19, 21, 22, 25, 26, 30, 37, 58, 129, 150, 162, 183, 227, 248, 260, 281, 293, 314, 326, 347, 359, 393, 426, 459, 492, 513, 620, 713, 799, 894, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 1031, 1069, 1188, 1226, 1361, 1680, 1682, 1684, 1685, 1696, 1698, 1699, 1707, 1708, 1717, 1719, 1720, 1721, 1866, 1869], "direct": [5, 8, 9, 11, 12, 13, 15, 19, 26, 29, 32, 57, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 524, 713, 779, 915, 927, 931, 954, 966, 970, 993, 1004, 1008, 1042, 1046, 1081, 1087, 1122, 1126, 1149, 1161, 1165, 1199, 1203, 1237, 1241, 1667, 1672, 1680, 1702, 1703, 1720], "constant": [5, 9, 21, 26, 49, 62, 64, 81, 108, 141, 153, 155, 174, 186, 188, 206, 239, 251, 253, 272, 284, 286, 305, 317, 319, 338, 350, 352, 371, 384, 386, 405, 417, 419, 438, 450, 452, 471, 483, 485, 504, 516, 517, 533, 543, 553, 607, 655, 656, 825, 852, 877, 901, 902, 917, 936, 956, 975, 994, 1013, 1032, 1051, 1071, 1092, 1112, 1131, 1151, 1170, 1189, 1208, 1227, 1246, 1266, 1276, 1295, 1308, 1329, 1342, 1363, 1376, 1396, 1406, 1425, 1438, 1457, 1467, 1484, 1485, 1495, 1513, 1523, 1542, 1555, 1575, 1585, 1604, 1617, 1637, 1647], "pressur": [5, 7, 10, 12, 13, 19, 21, 22, 30, 31, 32, 98, 112, 118, 195, 210, 735, 736, 825, 828, 832, 834, 835, 855, 856, 859, 861, 863, 865, 866, 867, 870, 871, 873, 874, 877, 879, 880, 885, 894, 895, 896, 899], "side": [5, 9, 10, 11, 19, 22, 29, 31, 32, 37, 129, 162, 227, 260, 293, 326, 359, 393, 426, 459, 492, 1672], "procedur": [5, 8, 9, 12, 13, 196], "y": [5, 9, 12, 13, 21, 25, 26, 30, 196, 615, 620, 799, 894, 904, 1031, 1069, 1188, 1226, 1327, 1699, 1707, 1717, 1719, 1720], "z": [5, 9, 12, 13, 25, 30, 620, 847, 872, 1031, 1069, 1188, 1226, 1305, 1339, 1373, 1435, 1552, 1614, 1680, 1689, 1699, 1707, 1716, 1717, 1719, 1720, 1724], "inlet": [5, 7, 8, 9, 11, 12, 13, 32, 33, 1681, 1700, 1701, 1705, 1708, 1718], "outlet": [5, 7, 8, 9, 11, 12, 13, 32, 33, 98, 122, 196, 1681, 1700, 1701, 1705, 1708], "updat": [5, 6, 7, 12, 13, 21, 27, 28, 33, 35, 60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 382, 416, 449, 482, 515, 563, 576, 947, 986, 1024, 1062, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1505, 1533, 1566, 1595, 1628, 1657, 1687, 1833, 1840], "soln": [5, 7, 31, 33, 58, 150, 183, 248, 281, 314, 347, 513, 615, 901, 902], "solut": [5, 7, 21, 22, 32, 37, 58, 129, 150, 162, 183, 227, 248, 260, 281, 293, 314, 326, 347, 359, 380, 393, 414, 426, 447, 459, 480, 492, 513, 615, 836, 850, 901, 902, 1672], "dict": [5, 21, 26, 29, 30, 31, 54, 69, 71, 86, 95, 114, 127, 129, 146, 160, 179, 193, 212, 225, 244, 258, 277, 291, 293, 310, 324, 343, 357, 376, 391, 410, 424, 443, 457, 476, 490, 492, 509, 522, 524, 525, 535, 540, 544, 558, 568, 587, 589, 602, 604, 608, 618, 619, 620, 622, 627, 636, 717, 719, 721, 769, 770, 772, 791, 795, 800, 807, 811, 813, 818, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 844, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 873, 874, 894, 901, 902, 903, 905, 906, 907, 908, 909, 910, 915, 918, 942, 952, 954, 957, 981, 991, 995, 1019, 1029, 1031, 1033, 1057, 1067, 1072, 1098, 1108, 1110, 1113, 1137, 1147, 1149, 1152, 1176, 1186, 1188, 1190, 1214, 1224, 1226, 1228, 1252, 1262, 1265, 1267, 1281, 1291, 1296, 1297, 1303, 1313, 1324, 1330, 1331, 1337, 1347, 1358, 1364, 1365, 1371, 1381, 1392, 1397, 1411, 1421, 1423, 1426, 1427, 1433, 1443, 1454, 1456, 1458, 1472, 1482, 1486, 1500, 1510, 1514, 1528, 1538, 1543, 1544, 1550, 1560, 1571, 1576, 1590, 1600, 1605, 1606, 1612, 1622, 1633, 1636, 1638, 1652, 1662, 1686, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1702, 1703, 1707, 1745, 1756, 1764, 1766, 1776, 1780, 1782, 1790, 1792, 1856, 1860, 1862, 1863, 1864, 1867, 1868, 1875, 1876], "quantiti": [5, 8, 19, 21, 31, 33, 61, 383, 901, 902, 903, 905, 906, 907, 908, 909, 910], "kei": [5, 6, 15, 19, 21, 24, 25, 27, 28, 29, 30, 31, 44, 45, 46, 50, 53, 54, 56, 65, 69, 76, 77, 78, 82, 85, 86, 88, 91, 95, 103, 104, 105, 109, 113, 114, 116, 123, 127, 136, 137, 138, 142, 145, 146, 148, 156, 160, 169, 170, 171, 175, 178, 179, 181, 189, 193, 201, 202, 203, 207, 211, 212, 214, 221, 225, 234, 235, 236, 240, 243, 244, 246, 254, 258, 267, 268, 269, 273, 276, 277, 279, 287, 291, 300, 301, 302, 306, 309, 310, 312, 320, 324, 333, 334, 335, 339, 342, 343, 345, 353, 357, 366, 367, 368, 372, 375, 376, 378, 387, 391, 400, 401, 402, 406, 409, 410, 412, 420, 424, 433, 434, 435, 439, 442, 443, 445, 453, 457, 466, 467, 468, 472, 475, 476, 478, 486, 490, 499, 500, 501, 505, 508, 509, 511, 518, 522, 528, 529, 530, 534, 535, 536, 537, 540, 548, 549, 550, 554, 557, 558, 560, 564, 568, 572, 582, 583, 586, 587, 588, 589, 591, 597, 598, 601, 602, 603, 604, 634, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 715, 716, 717, 718, 719, 721, 723, 725, 728, 729, 730, 731, 732, 734, 736, 740, 741, 742, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 765, 767, 768, 769, 770, 772, 774, 775, 776, 777, 781, 782, 783, 784, 785, 786, 791, 792, 793, 794, 795, 796, 797, 798, 800, 802, 805, 806, 807, 811, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 847, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 929, 930, 932, 937, 941, 942, 944, 948, 952, 954, 968, 969, 971, 976, 980, 981, 983, 987, 991, 1006, 1007, 1009, 1014, 1018, 1019, 1021, 1025, 1029, 1031, 1044, 1045, 1047, 1052, 1056, 1057, 1059, 1063, 1067, 1085, 1086, 1088, 1093, 1097, 1098, 1100, 1104, 1108, 1110, 1124, 1125, 1127, 1132, 1136, 1137, 1139, 1143, 1147, 1149, 1163, 1164, 1166, 1171, 1175, 1176, 1178, 1182, 1186, 1188, 1201, 1202, 1204, 1209, 1213, 1214, 1216, 1220, 1224, 1226, 1239, 1240, 1242, 1247, 1251, 1252, 1254, 1258, 1262, 1271, 1272, 1273, 1277, 1280, 1281, 1283, 1287, 1291, 1301, 1302, 1303, 1304, 1309, 1312, 1313, 1315, 1320, 1324, 1326, 1335, 1336, 1337, 1338, 1343, 1346, 1347, 1349, 1354, 1358, 1360, 1369, 1370, 1371, 1372, 1377, 1380, 1381, 1383, 1388, 1392, 1394, 1401, 1402, 1403, 1407, 1410, 1411, 1413, 1417, 1421, 1431, 1432, 1433, 1434, 1439, 1442, 1443, 1445, 1450, 1454, 1462, 1463, 1464, 1468, 1471, 1472, 1474, 1478, 1482, 1490, 1491, 1492, 1496, 1499, 1500, 1502, 1506, 1510, 1518, 1519, 1520, 1524, 1527, 1528, 1530, 1534, 1538, 1548, 1549, 1550, 1551, 1556, 1559, 1560, 1562, 1567, 1571, 1573, 1580, 1581, 1582, 1586, 1589, 1590, 1592, 1596, 1600, 1610, 1611, 1612, 1613, 1618, 1621, 1622, 1624, 1629, 1633, 1635, 1642, 1643, 1644, 1648, 1651, 1652, 1654, 1658, 1662, 1732, 1734, 1736, 1738, 1741, 1743, 1747, 1749, 1751, 1754, 1759, 1760, 1763, 1764, 1765, 1766, 1771, 1772, 1775, 1776, 1777, 1780, 1782, 1785, 1786, 1789, 1790, 1791, 1792, 1805, 1823, 1848, 1849, 1855, 1856, 1859, 1860, 1863, 1864, 1867, 1868, 1876], "e": [5, 8, 13, 17, 24, 26, 27, 28, 29, 30, 32, 35, 47, 56, 61, 69, 79, 88, 95, 106, 116, 127, 139, 148, 160, 172, 181, 193, 204, 214, 225, 237, 246, 258, 270, 279, 291, 303, 312, 324, 336, 345, 357, 369, 378, 380, 383, 391, 403, 412, 414, 424, 436, 445, 447, 457, 469, 478, 480, 490, 502, 511, 522, 531, 536, 540, 543, 551, 560, 568, 589, 594, 595, 604, 607, 620, 634, 635, 662, 667, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 696, 699, 703, 704, 706, 710, 712, 717, 719, 720, 721, 734, 769, 770, 771, 772, 795, 799, 800, 804, 807, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 916, 917, 934, 944, 952, 954, 955, 956, 973, 983, 991, 994, 1011, 1021, 1029, 1032, 1049, 1059, 1067, 1069, 1070, 1071, 1090, 1100, 1108, 1111, 1112, 1129, 1139, 1147, 1149, 1150, 1151, 1168, 1178, 1186, 1189, 1206, 1216, 1224, 1227, 1244, 1254, 1262, 1266, 1274, 1283, 1291, 1293, 1295, 1306, 1315, 1324, 1326, 1329, 1340, 1349, 1358, 1360, 1363, 1374, 1383, 1392, 1394, 1396, 1404, 1413, 1421, 1425, 1436, 1445, 1454, 1457, 1465, 1474, 1482, 1485, 1493, 1502, 1510, 1513, 1521, 1530, 1538, 1542, 1553, 1562, 1571, 1573, 1575, 1583, 1592, 1600, 1604, 1615, 1624, 1633, 1635, 1637, 1645, 1654, 1662, 1672, 1687, 1705, 1708, 1734, 1736, 1743, 1749, 1766, 1780, 1792, 1805, 1823, 1829, 1832, 1839, 1841, 1847, 1854, 1860, 1872], "ndarrai": [5, 26, 30, 46, 47, 58, 67, 68, 78, 79, 93, 94, 105, 106, 118, 120, 122, 125, 126, 138, 139, 150, 158, 159, 171, 172, 183, 191, 192, 203, 204, 223, 224, 236, 237, 248, 256, 257, 269, 270, 281, 289, 290, 302, 303, 314, 322, 323, 335, 336, 347, 355, 356, 368, 369, 380, 389, 390, 402, 403, 414, 422, 423, 435, 436, 447, 455, 456, 468, 469, 480, 488, 489, 501, 502, 513, 520, 521, 530, 531, 538, 539, 550, 551, 566, 567, 615, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 713, 715, 716, 718, 721, 723, 725, 728, 729, 730, 731, 732, 734, 736, 738, 740, 741, 742, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 765, 767, 768, 772, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 790, 793, 794, 796, 798, 799, 802, 803, 805, 807, 811, 813, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 843, 849, 850, 852, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 869, 870, 871, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 899, 912, 913, 924, 925, 932, 934, 950, 951, 963, 964, 971, 973, 989, 990, 1001, 1002, 1009, 1011, 1027, 1028, 1039, 1040, 1047, 1049, 1065, 1066, 1078, 1079, 1088, 1090, 1106, 1107, 1119, 1120, 1127, 1129, 1145, 1146, 1158, 1159, 1166, 1168, 1184, 1185, 1196, 1197, 1204, 1206, 1222, 1223, 1234, 1235, 1242, 1244, 1260, 1261, 1273, 1274, 1289, 1290, 1294, 1304, 1305, 1306, 1322, 1323, 1326, 1328, 1338, 1339, 1340, 1356, 1357, 1360, 1362, 1372, 1373, 1374, 1390, 1391, 1394, 1403, 1404, 1419, 1420, 1424, 1434, 1435, 1436, 1452, 1453, 1464, 1465, 1480, 1481, 1492, 1493, 1508, 1509, 1520, 1521, 1536, 1537, 1541, 1551, 1552, 1553, 1569, 1570, 1573, 1582, 1583, 1598, 1599, 1603, 1613, 1614, 1615, 1631, 1632, 1635, 1644, 1645, 1660, 1661, 1672, 1682, 1684, 1685, 1687, 1690, 1692, 1693, 1695, 1696, 1702, 1703, 1704, 1707, 1716, 1717, 1719, 1720, 1721, 1870], "last": [5, 11, 24, 26, 54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 376, 410, 443, 476, 509, 535, 558, 587, 602, 921, 942, 960, 981, 998, 1019, 1036, 1057, 1075, 1098, 1116, 1137, 1155, 1176, 1193, 1214, 1231, 1252, 1281, 1313, 1347, 1381, 1411, 1443, 1472, 1500, 1528, 1560, 1590, 1622, 1652, 1764, 1776, 1790, 1802, 1820, 1856], "cell": [5, 6, 11, 24, 28, 32, 33, 713, 915, 1149, 1226], "abov": [5, 6, 7, 11, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 789, 1698, 1717, 1743, 1852, 1857], "new": [5, 6, 8, 17, 19, 21, 24, 26, 27, 28, 29, 30, 32, 35, 44, 76, 103, 136, 169, 195, 201, 234, 267, 300, 333, 366, 400, 433, 466, 499, 528, 548, 582, 597, 713, 825, 852, 929, 968, 1006, 1044, 1085, 1124, 1163, 1201, 1239, 1271, 1301, 1335, 1369, 1401, 1431, 1462, 1490, 1518, 1548, 1580, 1610, 1642, 1680, 1681, 1683, 1684, 1688, 1715, 1717, 1720, 1722, 1736, 1738, 1749, 1751, 1759, 1771, 1785, 1808, 1829, 1832, 1839, 1841, 1847, 1848, 1854], "comput": [5, 15, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 543, 551, 561, 607, 609, 619, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 744, 825, 829, 830, 847, 848, 849, 854, 855, 869, 872, 873, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 899, 912, 913, 917, 934, 945, 956, 973, 984, 994, 1011, 1022, 1032, 1049, 1060, 1071, 1090, 1101, 1112, 1129, 1140, 1151, 1168, 1179, 1189, 1206, 1217, 1227, 1244, 1255, 1266, 1274, 1284, 1293, 1295, 1306, 1316, 1329, 1340, 1350, 1363, 1374, 1384, 1396, 1404, 1414, 1425, 1436, 1446, 1457, 1465, 1475, 1485, 1493, 1503, 1513, 1521, 1531, 1540, 1542, 1553, 1563, 1575, 1583, 1593, 1602, 1604, 1615, 1625, 1637, 1645, 1655, 1671, 1697, 1704], "solv": [5, 8, 21, 22, 28, 31, 61, 383, 901, 902, 1671, 1673, 1675, 1677], "visul": 5, "ax": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 37, 129, 162, 227, 260, 293, 326, 359, 393, 426, 459, 492, 596, 1666, 1668, 1670, 1671, 1672, 1674, 1676, 1678], "plot_connect": [5, 6, 8, 25, 27, 32, 33], "plot_coordin": [5, 8, 9, 25, 27, 32, 33], "color_bi": [5, 8, 9, 25, 32, 33], "usr": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "share": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 924, 927, 928, 938, 963, 966, 967, 977, 1001, 1004, 1005, 1015, 1039, 1042, 1043, 1053, 1078, 1081, 1082, 1094, 1119, 1122, 1123, 1133, 1158, 1161, 1162, 1172, 1196, 1199, 1200, 1210, 1234, 1237, 1238, 1248, 1685, 1691, 1693, 1694, 1695], "miniconda3": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "env": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 35], "test": [5, 6, 7, 8, 9, 10, 12, 13, 14, 22, 24, 25, 26, 27, 28, 29, 32, 33, 790, 825, 1866], "lib": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "python3": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "8": [5, 6, 7, 8, 9, 10, 12, 13, 15, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 702, 832, 852, 863, 901, 902], "site": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 98, 927, 928, 966, 967, 1004, 1005, 1042, 1043, 1081, 1082, 1122, 1123, 1161, 1162, 1199, 1200, 1237, 1238, 1682, 1685, 1687, 1690, 1691, 1692, 1694, 1695, 1697, 1707, 1708, 1719, 1721], "packag": [5, 6, 7, 8, 9, 10, 12, 13, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 619, 622, 631, 825, 865, 1293, 1484, 1540, 1602, 1877], "ipython": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "core": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 1671], "pylabtool": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "151": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "userwarn": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "figur": [5, 6, 7, 8, 9, 10, 11, 12, 13, 22, 25, 26, 27, 28, 29, 32, 33], "compat": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 1681, 1873, 1874], "tight_layout": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "might": [5, 6, 7, 8, 9, 10, 12, 13, 15, 25, 26, 27, 28, 29, 30, 31, 32, 33, 615, 638, 784, 785, 790, 927, 928, 966, 967, 1004, 1005, 1042, 1043, 1081, 1082, 1122, 1123, 1161, 1162, 1199, 1200, 1237, 1238, 1691, 1694, 1695, 1698, 1722, 1843], "incorrect": [5, 6, 7, 8, 9, 10, 12, 13, 20, 25, 26, 27, 28, 29, 32, 33], "fig": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33, 719, 770, 800], "canva": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "print_figur": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "bytes_io": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "kw": [5, 6, 7, 8, 9, 10, 12, 13, 25, 26, 27, 28, 29, 32, 33], "k_": [5, 13], "ab": [5, 8, 9, 12, 13, 19, 687], "frac": [5, 7, 8, 9, 10, 12, 13, 19, 21, 22, 31, 687, 702, 852, 880, 892, 896, 901, 902], "delta": [5, 8, 19, 22, 31, 129, 687, 702], "where": [5, 7, 10, 12, 13, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 55, 59, 60, 61, 62, 63, 64, 66, 67, 68, 87, 89, 90, 92, 93, 94, 115, 119, 121, 124, 125, 126, 147, 151, 152, 153, 154, 155, 157, 158, 159, 180, 184, 185, 186, 187, 188, 190, 191, 192, 213, 217, 219, 222, 223, 224, 245, 249, 250, 251, 252, 253, 255, 256, 257, 278, 282, 283, 284, 285, 286, 288, 289, 290, 311, 315, 316, 317, 318, 319, 321, 322, 323, 344, 348, 349, 350, 351, 352, 354, 355, 356, 377, 381, 382, 383, 384, 385, 386, 388, 389, 390, 411, 415, 416, 417, 418, 419, 421, 422, 423, 444, 448, 449, 450, 451, 452, 454, 455, 456, 477, 481, 482, 483, 484, 485, 487, 488, 489, 510, 514, 515, 516, 517, 519, 520, 521, 524, 538, 539, 543, 559, 563, 565, 566, 567, 575, 576, 577, 607, 620, 624, 666, 668, 718, 802, 823, 887, 888, 892, 896, 901, 902, 916, 917, 926, 927, 928, 943, 947, 949, 950, 951, 955, 956, 965, 966, 967, 982, 986, 988, 989, 990, 994, 1003, 1004, 1005, 1020, 1024, 1026, 1027, 1028, 1032, 1041, 1042, 1043, 1058, 1062, 1064, 1065, 1066, 1070, 1071, 1080, 1081, 1082, 1099, 1103, 1105, 1106, 1107, 1111, 1112, 1121, 1122, 1123, 1138, 1142, 1144, 1145, 1146, 1150, 1151, 1160, 1161, 1162, 1177, 1181, 1183, 1184, 1185, 1189, 1198, 1199, 1200, 1215, 1219, 1221, 1222, 1223, 1227, 1236, 1237, 1238, 1253, 1257, 1259, 1260, 1261, 1266, 1282, 1286, 1288, 1289, 1290, 1295, 1297, 1314, 1319, 1321, 1322, 1323, 1329, 1331, 1348, 1353, 1355, 1356, 1357, 1363, 1365, 1382, 1387, 1389, 1390, 1391, 1396, 1412, 1416, 1418, 1419, 1420, 1425, 1427, 1444, 1449, 1451, 1452, 1453, 1457, 1473, 1477, 1479, 1480, 1481, 1485, 1501, 1505, 1507, 1508, 1509, 1513, 1529, 1533, 1535, 1536, 1537, 1540, 1542, 1544, 1561, 1566, 1568, 1569, 1570, 1575, 1591, 1595, 1597, 1598, 1599, 1602, 1604, 1606, 1623, 1628, 1630, 1631, 1632, 1637, 1653, 1657, 1659, 1660, 1661, 1671, 1688, 1720, 1869], "area": [5, 9, 11, 22, 31, 619, 687, 702, 706, 707, 708, 709, 710, 713, 723, 724, 725, 726, 734, 740, 741, 742, 767, 774, 775, 776, 777, 783, 877, 885, 892, 901, 902, 954, 1700, 1701], "distanc": [5, 11, 28, 713, 718, 785, 813, 814, 815, 816, 818, 822, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236, 1680, 1681, 1697, 1715], "between": [5, 6, 7, 10, 11, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 524, 616, 631, 744, 778, 779, 784, 785, 792, 801, 814, 815, 822, 901, 902, 915, 954, 993, 1069, 1084, 1149, 1188, 1683, 1684, 1693, 1696, 1697, 1698, 1699, 1703, 1867, 1868], "differ": [5, 8, 11, 12, 19, 20, 22, 24, 25, 26, 28, 30, 31, 33, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 623, 634, 636, 647, 661, 712, 718, 720, 771, 804, 825, 877, 892, 901, 902, 1069, 1226, 1672, 1839, 1840], "were": [5, 6, 9, 11, 17, 20, 24, 25, 27, 28, 29, 30, 49, 81, 98, 108, 141, 174, 206, 239, 272, 305, 338, 371, 405, 438, 471, 504, 533, 553, 784, 818, 924, 926, 928, 936, 963, 965, 967, 975, 1001, 1003, 1005, 1013, 1039, 1041, 1043, 1051, 1078, 1080, 1082, 1092, 1119, 1121, 1123, 1131, 1158, 1160, 1162, 1170, 1196, 1198, 1200, 1208, 1234, 1236, 1238, 1246, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647, 1683, 1687], "have": [5, 6, 8, 12, 13, 15, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 59, 63, 75, 89, 102, 119, 135, 151, 154, 168, 184, 187, 200, 217, 233, 249, 252, 266, 282, 285, 299, 315, 318, 332, 348, 351, 365, 381, 385, 399, 415, 418, 432, 448, 451, 465, 481, 484, 498, 514, 547, 571, 624, 661, 675, 690, 718, 734, 745, 825, 916, 923, 924, 927, 928, 938, 955, 962, 963, 966, 967, 977, 1000, 1001, 1004, 1005, 1015, 1038, 1039, 1042, 1043, 1053, 1070, 1077, 1078, 1081, 1082, 1094, 1111, 1118, 1119, 1122, 1123, 1133, 1150, 1157, 1158, 1161, 1162, 1172, 1188, 1195, 1196, 1199, 1200, 1210, 1233, 1234, 1237, 1238, 1248, 1270, 1300, 1334, 1368, 1400, 1430, 1461, 1489, 1517, 1547, 1579, 1609, 1641, 1691, 1694, 1695, 1812, 1834], "simplifi": [5, 22], "equat": [5, 7, 10, 20, 21, 22, 31, 32, 834, 839, 865, 879, 880, 895, 896, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 1666, 1668, 1670, 1674, 1676, 1678], "nbval_ignore_output": [5, 9], "mode": [5, 6, 7, 9, 12, 13, 15, 27, 28, 30, 32, 35, 43, 47, 49, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 66, 75, 79, 81, 82, 83, 84, 87, 89, 90, 92, 102, 106, 108, 109, 110, 111, 115, 119, 120, 121, 122, 124, 135, 139, 141, 142, 143, 144, 147, 149, 151, 152, 153, 154, 155, 157, 168, 172, 174, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 200, 204, 206, 207, 208, 209, 213, 217, 218, 219, 220, 222, 233, 237, 239, 240, 241, 242, 245, 247, 249, 250, 251, 252, 253, 255, 266, 270, 272, 273, 274, 275, 278, 280, 282, 283, 284, 285, 286, 288, 299, 303, 305, 306, 307, 308, 311, 313, 315, 316, 317, 318, 319, 321, 332, 336, 338, 339, 340, 341, 344, 346, 348, 349, 350, 351, 352, 354, 365, 369, 371, 372, 373, 374, 377, 379, 381, 382, 383, 384, 385, 386, 388, 399, 403, 405, 406, 407, 408, 411, 413, 415, 416, 417, 418, 419, 421, 432, 436, 438, 439, 440, 441, 444, 446, 448, 449, 450, 451, 452, 454, 465, 469, 471, 472, 473, 474, 477, 479, 481, 482, 483, 484, 485, 487, 498, 502, 504, 505, 506, 507, 510, 512, 514, 515, 516, 517, 519, 531, 533, 547, 551, 553, 554, 555, 556, 559, 563, 565, 571, 572, 573, 574, 575, 576, 577, 643, 644, 645, 646, 647, 648, 649, 716, 764, 765, 768, 793, 794, 847, 872, 894, 895, 896, 898, 923, 924, 927, 928, 934, 936, 937, 938, 939, 940, 943, 947, 949, 962, 963, 966, 967, 973, 975, 976, 977, 978, 979, 982, 986, 988, 1000, 1001, 1004, 1005, 1011, 1013, 1014, 1015, 1016, 1017, 1020, 1024, 1026, 1038, 1039, 1042, 1043, 1049, 1051, 1052, 1053, 1054, 1055, 1058, 1062, 1064, 1077, 1078, 1081, 1082, 1090, 1092, 1093, 1094, 1095, 1096, 1099, 1103, 1105, 1118, 1119, 1122, 1123, 1129, 1131, 1132, 1133, 1134, 1135, 1138, 1142, 1144, 1157, 1158, 1161, 1162, 1168, 1170, 1171, 1172, 1173, 1174, 1177, 1181, 1183, 1195, 1196, 1199, 1200, 1206, 1208, 1209, 1210, 1211, 1212, 1215, 1219, 1221, 1233, 1234, 1237, 1238, 1244, 1246, 1247, 1248, 1249, 1250, 1253, 1257, 1259, 1270, 1274, 1276, 1277, 1278, 1279, 1282, 1286, 1288, 1300, 1305, 1306, 1308, 1309, 1310, 1311, 1314, 1319, 1321, 1334, 1339, 1340, 1342, 1343, 1344, 1345, 1348, 1353, 1355, 1368, 1373, 1374, 1376, 1377, 1378, 1379, 1382, 1387, 1389, 1400, 1404, 1406, 1407, 1408, 1409, 1412, 1416, 1418, 1430, 1435, 1436, 1438, 1439, 1440, 1441, 1444, 1449, 1451, 1461, 1465, 1467, 1468, 1469, 1470, 1473, 1477, 1479, 1489, 1493, 1495, 1496, 1497, 1498, 1501, 1505, 1507, 1517, 1521, 1523, 1524, 1525, 1526, 1529, 1533, 1535, 1547, 1552, 1553, 1555, 1556, 1557, 1558, 1561, 1566, 1568, 1579, 1583, 1585, 1586, 1587, 1588, 1591, 1595, 1597, 1609, 1614, 1615, 1617, 1618, 1619, 1620, 1623, 1628, 1630, 1641, 1645, 1647, 1648, 1649, 1650, 1653, 1657, 1659, 1683, 1722, 1723], "group": [5, 9, 12, 13, 21, 35, 57, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 619, 623, 1684], "topotool": [5, 9, 11, 25, 27, 954, 1684, 1698, 1715, 1716, 1722, 1727], "get_domain_area": [5, 9, 11], "get_domain_length": [5, 9, 11], "delta_p": 5, "print": [5, 6, 7, 8, 9, 11, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 578, 631, 632, 924, 925, 926, 927, 928, 938, 963, 964, 965, 966, 967, 977, 1001, 1002, 1003, 1004, 1005, 1015, 1039, 1040, 1041, 1042, 1043, 1053, 1078, 1079, 1080, 1081, 1082, 1094, 1119, 1120, 1121, 1122, 1123, 1133, 1158, 1159, 1160, 1161, 1162, 1172, 1188, 1196, 1197, 1198, 1199, 1200, 1210, 1234, 1235, 1236, 1237, 1238, 1248, 1540, 1602, 1680, 1715, 1749, 1751, 1782, 1794, 1806, 1867, 1868], "f": [5, 6, 8, 9, 11, 20, 21, 28, 30, 32, 69, 95, 127, 160, 193, 225, 258, 291, 324, 357, 391, 424, 457, 490, 522, 540, 568, 589, 604, 632, 635, 734, 825, 901, 902, 952, 991, 1029, 1067, 1108, 1147, 1186, 1224, 1262, 1291, 1324, 1358, 1392, 1421, 1454, 1482, 1510, 1538, 1571, 1600, 1633, 1662, 1766, 1780, 1792, 1860], "98e": 5, "12": [5, 6, 8, 21, 25, 26, 27, 28, 29, 31, 32, 655], "1000": [5, 20, 717, 769, 795, 894, 895, 896], "2f": [5, 9, 11], "md": 5, "55": [5, 32], "attempt": [5, 8, 9, 11, 26, 30, 31, 63, 154, 187, 252, 285, 318, 351, 385, 418, 451, 484, 1484, 1714], "estim": [5, 9, 10, 11, 20, 30, 835, 836], "low": [5, 9, 11, 28, 712, 720, 771, 804, 852, 1297, 1331, 1365, 1427, 1544, 1606], "_topotool": [5, 9, 11], "1120": [5, 9], "length": [5, 6, 7, 8, 9, 11, 19, 22, 24, 25, 27, 31, 55, 59, 66, 67, 68, 87, 89, 92, 93, 94, 115, 119, 124, 125, 126, 147, 151, 157, 158, 159, 180, 184, 190, 191, 192, 213, 217, 222, 223, 224, 245, 249, 255, 256, 257, 278, 282, 288, 289, 290, 311, 315, 321, 322, 323, 344, 348, 354, 355, 356, 377, 381, 388, 389, 390, 411, 415, 421, 422, 423, 444, 448, 454, 455, 456, 477, 481, 487, 488, 489, 510, 514, 519, 520, 521, 538, 539, 543, 559, 565, 566, 567, 575, 577, 607, 619, 620, 636, 643, 644, 645, 646, 647, 648, 649, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 687, 702, 712, 715, 716, 717, 719, 720, 721, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 781, 782, 783, 784, 785, 786, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 813, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 894, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 917, 925, 938, 943, 949, 950, 951, 954, 956, 964, 977, 982, 988, 989, 990, 994, 1002, 1015, 1020, 1026, 1027, 1028, 1032, 1040, 1053, 1058, 1064, 1065, 1066, 1071, 1079, 1094, 1099, 1105, 1106, 1107, 1112, 1120, 1133, 1138, 1144, 1145, 1146, 1151, 1159, 1172, 1177, 1183, 1184, 1185, 1189, 1197, 1210, 1215, 1221, 1222, 1223, 1227, 1235, 1248, 1253, 1259, 1260, 1261, 1266, 1282, 1288, 1289, 1290, 1295, 1314, 1321, 1322, 1323, 1329, 1348, 1355, 1356, 1357, 1363, 1382, 1389, 1390, 1391, 1396, 1412, 1418, 1419, 1420, 1425, 1444, 1451, 1452, 1453, 1457, 1473, 1479, 1480, 1481, 1485, 1501, 1507, 1508, 1509, 1513, 1529, 1535, 1536, 1537, 1542, 1561, 1568, 1569, 1570, 1575, 1591, 1597, 1598, 1599, 1604, 1623, 1630, 1631, 1632, 1637, 1653, 1659, 1660, 1661, 1692, 1701, 1708, 1722], "could": [5, 8, 9, 11, 19, 21, 26, 28, 30, 784, 785, 1083, 1084], "1164": [5, 9], "ad": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 21, 24, 25, 26, 29, 32, 35, 60, 90, 121, 152, 185, 195, 219, 250, 283, 293, 316, 349, 380, 382, 414, 416, 447, 449, 480, 482, 515, 524, 542, 543, 563, 576, 606, 607, 615, 660, 717, 730, 769, 785, 795, 916, 917, 947, 955, 956, 986, 994, 1024, 1032, 1062, 1070, 1071, 1103, 1110, 1111, 1112, 1142, 1150, 1151, 1181, 1189, 1219, 1227, 1257, 1266, 1286, 1295, 1319, 1329, 1353, 1363, 1387, 1396, 1416, 1425, 1449, 1457, 1477, 1485, 1505, 1513, 1533, 1542, 1566, 1575, 1595, 1604, 1628, 1637, 1657, 1681, 1683, 1684, 1688, 1698, 1714, 1852, 1862], "07": [5, 8], "method": [5, 6, 8, 10, 11, 21, 22, 25, 26, 28, 30, 32, 33, 37, 58, 59, 69, 71, 89, 95, 97, 119, 127, 129, 150, 151, 160, 162, 183, 184, 193, 195, 196, 217, 225, 227, 248, 249, 258, 260, 281, 282, 291, 293, 314, 315, 324, 326, 347, 348, 357, 359, 381, 391, 393, 415, 424, 426, 448, 457, 459, 481, 490, 492, 513, 514, 522, 524, 525, 540, 542, 568, 570, 589, 591, 604, 606, 614, 630, 639, 717, 719, 721, 769, 770, 772, 783, 795, 800, 807, 829, 830, 852, 859, 861, 898, 915, 921, 922, 931, 933, 938, 952, 954, 960, 961, 970, 972, 977, 991, 993, 998, 999, 1008, 1010, 1015, 1029, 1031, 1036, 1037, 1046, 1048, 1053, 1067, 1069, 1075, 1076, 1084, 1087, 1089, 1094, 1108, 1110, 1116, 1117, 1126, 1128, 1133, 1147, 1149, 1155, 1156, 1165, 1167, 1172, 1186, 1188, 1193, 1194, 1203, 1205, 1210, 1224, 1226, 1231, 1232, 1241, 1243, 1248, 1262, 1265, 1291, 1293, 1294, 1317, 1324, 1326, 1327, 1328, 1351, 1358, 1360, 1361, 1362, 1385, 1392, 1394, 1395, 1421, 1423, 1424, 1447, 1454, 1456, 1482, 1484, 1510, 1512, 1538, 1540, 1541, 1564, 1571, 1573, 1574, 1600, 1602, 1603, 1626, 1633, 1635, 1636, 1662, 1665, 1667, 1669, 1671, 1672, 1673, 1675, 1677, 1680, 1684, 1690, 1698, 1709, 1715, 1716, 1722, 1723, 1724, 1725, 1730, 1733, 1735, 1736, 1738, 1740, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1751, 1753, 1755, 1756, 1766, 1768, 1780, 1792, 1825, 1843, 1860, 1863, 1867, 1868, 1873], "base": [5, 6, 7, 12, 20, 22, 25, 28, 30, 32, 33, 35, 620, 631, 716, 765, 768, 789, 790, 792, 793, 794, 796, 797, 798, 801, 802, 803, 805, 806, 843, 867, 898, 899, 901, 902, 1031, 1069, 1226, 1665, 1667, 1669, 1672, 1699, 1734, 1738, 1740, 1741, 1743, 1745, 1747, 1749, 1751, 1862, 1863, 1873, 1874], "scipi": [5, 7, 19, 26, 32, 35, 717, 719, 721, 769, 770, 772, 795, 800, 807, 921, 960, 998, 1036, 1075, 1116, 1155, 1193, 1231, 1675, 1677, 1682, 1685, 1687, 1692, 1696, 1697, 1721, 1726, 1728], "convexhul": 5, "approxim": [5, 11, 13, 22, 30, 685, 700], "both": [5, 10, 12, 15, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 50, 56, 82, 88, 109, 116, 142, 148, 175, 181, 207, 214, 240, 246, 273, 279, 306, 312, 339, 345, 372, 378, 406, 412, 439, 445, 472, 478, 505, 511, 536, 554, 560, 572, 821, 825, 835, 898, 901, 902, 937, 944, 976, 983, 1014, 1021, 1052, 1059, 1093, 1100, 1132, 1139, 1171, 1178, 1209, 1216, 1247, 1254, 1277, 1283, 1309, 1315, 1343, 1349, 1377, 1383, 1407, 1413, 1439, 1445, 1468, 1474, 1496, 1502, 1524, 1530, 1556, 1562, 1586, 1592, 1618, 1624, 1648, 1654, 1685, 1691, 1694, 1695, 1708, 1721, 1832], "without": [5, 28, 29, 30, 31, 32, 718, 1188, 1715, 1736, 1738], "necessarili": [5, 15], "locat": [5, 6, 8, 11, 19, 21, 24, 25, 26, 27, 28, 30, 31, 32, 43, 50, 51, 52, 55, 59, 60, 62, 63, 64, 66, 68, 75, 82, 83, 84, 87, 89, 90, 92, 94, 102, 109, 110, 111, 115, 119, 120, 121, 122, 124, 126, 135, 142, 143, 144, 147, 151, 152, 153, 154, 155, 157, 159, 168, 175, 176, 177, 180, 184, 185, 186, 187, 188, 190, 192, 200, 207, 208, 209, 213, 217, 219, 222, 224, 233, 240, 241, 242, 245, 249, 250, 251, 252, 253, 255, 257, 266, 273, 274, 275, 278, 282, 283, 284, 285, 286, 288, 290, 299, 306, 307, 308, 311, 315, 316, 317, 318, 319, 321, 323, 332, 339, 340, 341, 344, 348, 349, 350, 351, 352, 354, 356, 365, 372, 373, 374, 377, 381, 382, 384, 385, 386, 388, 390, 399, 406, 407, 408, 411, 415, 416, 417, 418, 419, 421, 423, 432, 439, 440, 441, 444, 448, 449, 450, 451, 452, 454, 456, 465, 472, 473, 474, 477, 481, 482, 483, 484, 485, 487, 489, 498, 505, 506, 507, 510, 514, 515, 516, 517, 519, 521, 524, 539, 543, 544, 547, 554, 555, 556, 559, 562, 563, 565, 567, 571, 572, 573, 574, 575, 576, 577, 607, 608, 610, 619, 623, 718, 784, 785, 835, 915, 917, 918, 921, 922, 923, 924, 931, 933, 937, 939, 940, 943, 946, 947, 949, 951, 956, 957, 960, 961, 962, 963, 970, 972, 976, 978, 979, 982, 985, 986, 988, 990, 993, 994, 995, 998, 999, 1000, 1001, 1008, 1010, 1014, 1016, 1017, 1020, 1023, 1024, 1026, 1028, 1032, 1033, 1036, 1037, 1038, 1039, 1046, 1048, 1052, 1054, 1055, 1058, 1061, 1062, 1064, 1066, 1071, 1072, 1075, 1076, 1077, 1078, 1087, 1089, 1093, 1095, 1096, 1099, 1102, 1103, 1105, 1107, 1112, 1113, 1116, 1117, 1118, 1119, 1126, 1128, 1132, 1134, 1135, 1138, 1141, 1142, 1144, 1146, 1149, 1151, 1152, 1155, 1156, 1157, 1158, 1165, 1167, 1171, 1173, 1174, 1177, 1180, 1181, 1183, 1185, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1203, 1205, 1209, 1211, 1212, 1215, 1218, 1219, 1221, 1223, 1227, 1228, 1231, 1232, 1233, 1234, 1241, 1243, 1247, 1249, 1250, 1253, 1256, 1257, 1259, 1261, 1266, 1267, 1270, 1277, 1278, 1279, 1282, 1285, 1286, 1288, 1290, 1295, 1296, 1297, 1300, 1309, 1310, 1311, 1314, 1318, 1319, 1321, 1323, 1329, 1330, 1331, 1334, 1343, 1344, 1345, 1348, 1352, 1353, 1355, 1357, 1363, 1364, 1365, 1368, 1377, 1378, 1379, 1382, 1386, 1387, 1389, 1391, 1396, 1397, 1400, 1407, 1408, 1409, 1412, 1415, 1416, 1418, 1420, 1425, 1426, 1427, 1430, 1439, 1440, 1441, 1444, 1448, 1449, 1451, 1453, 1457, 1458, 1461, 1468, 1469, 1470, 1473, 1476, 1477, 1479, 1481, 1485, 1486, 1489, 1496, 1497, 1498, 1501, 1504, 1505, 1507, 1509, 1513, 1514, 1517, 1524, 1525, 1526, 1529, 1532, 1533, 1535, 1537, 1542, 1543, 1544, 1547, 1556, 1557, 1558, 1561, 1565, 1566, 1568, 1570, 1575, 1576, 1579, 1586, 1587, 1588, 1591, 1594, 1595, 1597, 1599, 1604, 1605, 1606, 1609, 1618, 1619, 1620, 1623, 1627, 1628, 1630, 1632, 1637, 1638, 1641, 1648, 1649, 1650, 1653, 1656, 1657, 1659, 1661, 1680, 1687, 1690, 1692, 1697, 1715], "almost": [5, 22, 24, 27, 28], "flat": [5, 632, 1794, 1865], "plane": [5, 11, 666, 668], "ha": [5, 6, 7, 8, 14, 15, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 69, 75, 95, 102, 127, 135, 160, 168, 193, 200, 225, 233, 258, 266, 291, 299, 324, 332, 357, 365, 391, 399, 424, 432, 457, 465, 490, 498, 522, 524, 540, 542, 547, 568, 571, 589, 595, 604, 666, 668, 705, 829, 892, 901, 902, 921, 922, 923, 952, 960, 961, 962, 991, 998, 999, 1000, 1029, 1036, 1037, 1038, 1067, 1075, 1076, 1077, 1108, 1116, 1117, 1118, 1147, 1155, 1156, 1157, 1186, 1188, 1193, 1194, 1195, 1224, 1231, 1232, 1233, 1262, 1270, 1291, 1293, 1300, 1324, 1327, 1334, 1358, 1361, 1368, 1392, 1400, 1421, 1430, 1454, 1461, 1482, 1489, 1510, 1517, 1538, 1540, 1547, 1571, 1579, 1600, 1602, 1609, 1633, 1641, 1662, 1686, 1734, 1766, 1780, 1782, 1792, 1794, 1826, 1860, 1873, 1874], "spheric": [5, 11, 22, 25, 28, 31, 33, 728, 731, 744, 781, 782, 783, 784, 785, 786, 1031, 1699, 1707, 1725], "cylindr": [5, 11, 22, 25, 31, 685, 700, 741, 775, 782, 784, 785, 877, 880, 895, 1031, 1699, 1707], "each": [5, 6, 7, 11, 12, 13, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 46, 47, 57, 59, 62, 64, 78, 79, 89, 105, 106, 119, 138, 139, 149, 151, 153, 155, 171, 172, 182, 184, 186, 188, 203, 204, 217, 236, 237, 247, 249, 251, 253, 269, 270, 280, 282, 284, 286, 302, 303, 313, 315, 317, 319, 335, 336, 346, 348, 350, 352, 368, 369, 379, 381, 384, 386, 402, 403, 413, 415, 417, 419, 435, 436, 446, 448, 450, 452, 468, 469, 479, 481, 483, 485, 501, 502, 512, 514, 516, 517, 524, 530, 531, 543, 550, 551, 591, 607, 620, 623, 636, 672, 685, 687, 700, 702, 712, 713, 718, 720, 744, 771, 799, 804, 810, 811, 812, 814, 815, 818, 822, 825, 829, 834, 835, 836, 843, 844, 847, 848, 849, 854, 858, 860, 869, 872, 873, 898, 899, 915, 916, 917, 921, 922, 924, 925, 926, 927, 928, 931, 932, 933, 934, 938, 954, 955, 956, 960, 961, 963, 964, 965, 966, 967, 970, 971, 972, 973, 977, 993, 994, 998, 999, 1001, 1002, 1003, 1004, 1005, 1008, 1009, 1010, 1011, 1015, 1032, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1048, 1049, 1053, 1069, 1070, 1071, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1094, 1111, 1112, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1133, 1149, 1150, 1151, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1168, 1172, 1188, 1189, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1203, 1204, 1205, 1206, 1210, 1226, 1227, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1248, 1266, 1273, 1274, 1294, 1295, 1297, 1303, 1304, 1306, 1328, 1329, 1331, 1337, 1338, 1340, 1362, 1363, 1365, 1371, 1372, 1374, 1396, 1403, 1404, 1424, 1425, 1427, 1433, 1434, 1436, 1457, 1464, 1465, 1485, 1492, 1493, 1513, 1520, 1521, 1541, 1542, 1544, 1550, 1551, 1553, 1575, 1582, 1583, 1603, 1604, 1606, 1612, 1613, 1615, 1637, 1644, 1645, 1682, 1683, 1684, 1686, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1702, 1703, 1706, 1707, 1713, 1714, 1716, 1719, 1720, 1721, 1722, 1745, 1794, 1805, 1823, 1858, 1863, 1864, 1867, 1868], "necessari": [5, 7, 17, 21, 22, 26, 28, 32, 712, 716, 717, 719, 720, 721, 765, 768, 769, 770, 771, 772, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 1722, 1852, 1875], "accordingli": [5, 1687], "These": [5, 8, 12, 15, 24, 25, 26, 27, 28, 30, 32, 33, 64, 155, 188, 253, 286, 319, 352, 386, 419, 452, 485, 517, 619, 660, 904, 915, 925, 964, 1002, 1040, 1079, 1120, 1149, 1159, 1188, 1197, 1235, 1688], "altern": [5, 24, 30, 901, 902], "choos": [5, 8, 12], "hydraulic_size_factor": [5, 6, 8, 22, 26, 28, 31, 643, 644, 645, 646, 647, 648, 649, 890, 891], "For": [5, 6, 8, 11, 12, 13, 15, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 352, 383, 384, 386, 417, 419, 450, 452, 483, 485, 516, 517, 524, 543, 607, 721, 772, 807, 825, 901, 902, 917, 954, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1484, 1485, 1513, 1542, 1575, 1604, 1637, 1680, 1697, 1698, 1715, 1809], "inform": [5, 6, 8, 10, 12, 15, 24, 26, 27, 30, 31, 32, 544, 608, 721, 772, 807, 894, 918, 957, 995, 1033, 1072, 1113, 1152, 1190, 1228, 1267, 1296, 1330, 1364, 1397, 1426, 1458, 1486, 1514, 1543, 1576, 1605, 1638, 1718, 1852, 1857, 1867, 1868], "see": [5, 13, 15, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 60, 61, 62, 64, 90, 121, 152, 153, 155, 185, 186, 188, 219, 250, 251, 253, 283, 284, 286, 316, 317, 319, 349, 350, 352, 382, 383, 384, 386, 416, 417, 419, 449, 450, 452, 482, 483, 485, 515, 516, 517, 543, 544, 563, 576, 607, 608, 621, 631, 839, 887, 888, 917, 918, 947, 956, 957, 986, 994, 995, 1024, 1032, 1033, 1062, 1071, 1072, 1103, 1112, 1113, 1142, 1151, 1152, 1181, 1189, 1190, 1219, 1227, 1228, 1257, 1266, 1267, 1286, 1295, 1296, 1319, 1329, 1330, 1353, 1363, 1364, 1387, 1396, 1397, 1416, 1425, 1426, 1449, 1457, 1458, 1477, 1485, 1486, 1505, 1513, 1514, 1533, 1542, 1543, 1566, 1575, 1576, 1595, 1604, 1605, 1628, 1637, 1638, 1657, 1684, 1690, 1699, 1736, 1738, 1852, 1857], "notebook": [5, 8, 15, 19, 20, 21, 22, 23, 25, 30, 31, 32], "show": [6, 7, 8, 9, 10, 25, 26, 27, 28, 30, 32, 33, 717, 719, 721, 769, 770, 772, 795, 796, 800, 807], "your": [6, 17, 28, 35], "veri": [6, 10, 17, 19, 24, 25, 26, 27, 28, 29, 31, 195, 825, 852, 927, 928, 966, 967, 1004, 1005, 1042, 1043, 1081, 1082, 1122, 1123, 1161, 1162, 1199, 1200, 1237, 1238, 1694, 1695, 1729], "own": [6, 15, 25, 28, 29, 854, 855], "custom": [6, 7, 15, 24, 716, 765, 768, 793, 794, 796, 1809], "describ": [6, 19, 21, 22, 26, 27, 28, 29, 879, 895, 993], "built": [6, 8, 10, 19, 24, 631], "work": [6, 7, 8, 14, 15, 20, 22, 23, 24, 26, 28, 29, 30, 32, 35, 595, 619, 623, 638, 713, 719, 721, 770, 772, 800, 807, 825, 1293, 1326, 1360, 1394, 1484, 1573, 1635, 1684, 1715, 1736, 1738, 1749, 1751, 1794, 1852, 1857], "calcul": [6, 7, 10, 20, 22, 29, 33, 57, 129, 149, 182, 247, 260, 280, 313, 346, 379, 413, 446, 479, 492, 512, 595, 631, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 705, 706, 707, 708, 709, 710, 712, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 737, 738, 739, 740, 741, 742, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 811, 824, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 877, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 954, 1293, 1297, 1331, 1365, 1427, 1456, 1544, 1606, 1686], "next": [6, 8, 10, 12, 13, 15, 25, 26, 28, 32, 33, 195, 791], "add": [6, 7, 8, 11, 15, 19, 21, 24, 25, 27, 28, 29, 30, 31, 32, 34, 59, 60, 61, 62, 63, 64, 89, 90, 119, 120, 121, 122, 151, 152, 153, 154, 155, 184, 185, 186, 187, 188, 217, 218, 219, 220, 249, 250, 251, 252, 253, 282, 283, 284, 285, 286, 315, 316, 317, 318, 319, 348, 349, 350, 351, 352, 381, 382, 383, 384, 385, 386, 415, 416, 417, 418, 419, 448, 449, 450, 451, 452, 481, 482, 483, 484, 485, 514, 515, 516, 517, 524, 543, 544, 563, 570, 576, 607, 608, 620, 717, 769, 795, 916, 917, 918, 947, 955, 956, 957, 986, 994, 995, 1024, 1032, 1033, 1062, 1070, 1071, 1072, 1103, 1111, 1112, 1113, 1142, 1150, 1151, 1152, 1181, 1189, 1190, 1219, 1227, 1228, 1257, 1266, 1267, 1286, 1294, 1295, 1296, 1319, 1328, 1329, 1330, 1353, 1362, 1363, 1364, 1387, 1396, 1397, 1416, 1424, 1425, 1426, 1449, 1456, 1457, 1458, 1477, 1485, 1486, 1505, 1513, 1514, 1533, 1541, 1542, 1543, 1566, 1575, 1576, 1595, 1603, 1604, 1605, 1628, 1637, 1638, 1657, 1681, 1683, 1684, 1688, 1714, 1756], "our": [6, 8, 15, 19, 21, 22, 24, 25, 28, 30, 35], "pyplot": [6, 7, 8, 9, 10, 11, 12, 13, 15, 25, 27, 28, 29, 32, 33, 717, 719, 721, 769, 770, 772, 795, 800, 807], "plt": [6, 7, 8, 9, 10, 11, 12, 13, 15, 25, 27, 28, 29, 32, 33, 717, 719, 721, 769, 770, 772, 795, 800, 807], "spst": [6, 28], "lattic": [6, 10, 915, 954, 955, 993, 1111, 1149], "given": [6, 7, 12, 13, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 39, 43, 49, 50, 51, 52, 53, 55, 57, 59, 60, 62, 63, 64, 66, 68, 73, 75, 81, 82, 83, 84, 85, 87, 89, 90, 92, 94, 100, 102, 108, 109, 110, 111, 113, 115, 119, 120, 121, 122, 124, 126, 131, 135, 141, 142, 143, 144, 145, 147, 149, 151, 152, 153, 154, 155, 157, 159, 164, 168, 174, 175, 176, 177, 178, 180, 182, 184, 185, 186, 187, 188, 190, 192, 198, 200, 206, 207, 208, 209, 211, 213, 216, 217, 219, 222, 224, 227, 229, 233, 239, 240, 241, 242, 243, 245, 247, 249, 250, 251, 252, 253, 255, 257, 262, 266, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 285, 286, 288, 290, 295, 299, 305, 306, 307, 308, 309, 311, 313, 315, 316, 317, 318, 319, 321, 323, 328, 332, 338, 339, 340, 341, 342, 344, 346, 348, 349, 350, 351, 352, 354, 356, 361, 365, 371, 372, 373, 374, 375, 377, 379, 381, 382, 384, 385, 386, 388, 390, 395, 399, 405, 406, 407, 408, 409, 411, 413, 415, 416, 417, 418, 419, 421, 423, 428, 432, 438, 439, 440, 441, 442, 444, 446, 448, 449, 450, 451, 452, 454, 456, 461, 465, 471, 472, 473, 474, 475, 477, 479, 481, 482, 483, 484, 485, 487, 489, 494, 498, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 519, 521, 524, 533, 534, 539, 543, 547, 553, 554, 555, 556, 557, 559, 561, 563, 565, 567, 571, 572, 573, 574, 575, 576, 577, 586, 601, 607, 609, 618, 623, 624, 626, 631, 632, 634, 638, 639, 717, 718, 719, 721, 769, 770, 772, 789, 790, 795, 796, 797, 798, 799, 800, 801, 802, 806, 807, 832, 839, 843, 846, 848, 856, 863, 867, 874, 880, 894, 898, 899, 901, 902, 903, 905, 906, 907, 908, 909, 910, 915, 916, 917, 923, 924, 926, 927, 928, 936, 937, 938, 939, 940, 941, 943, 945, 947, 949, 951, 954, 955, 956, 962, 963, 965, 966, 967, 975, 976, 977, 978, 979, 980, 982, 984, 986, 988, 990, 993, 994, 1000, 1001, 1003, 1004, 1005, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1022, 1024, 1026, 1028, 1031, 1032, 1038, 1039, 1041, 1042, 1043, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1060, 1062, 1064, 1066, 1070, 1071, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1105, 1107, 1110, 1111, 1112, 1118, 1119, 1121, 1122, 1123, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1142, 1144, 1146, 1149, 1150, 1151, 1157, 1158, 1160, 1161, 1162, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1181, 1183, 1185, 1188, 1189, 1195, 1196, 1198, 1199, 1200, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1219, 1221, 1223, 1226, 1227, 1233, 1234, 1236, 1237, 1238, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1255, 1257, 1259, 1261, 1266, 1270, 1276, 1277, 1278, 1279, 1280, 1282, 1284, 1286, 1288, 1290, 1294, 1295, 1300, 1305, 1308, 1309, 1310, 1311, 1312, 1314, 1316, 1317, 1319, 1321, 1323, 1326, 1328, 1329, 1334, 1339, 1342, 1343, 1344, 1345, 1346, 1348, 1350, 1351, 1353, 1355, 1357, 1360, 1362, 1363, 1368, 1373, 1376, 1377, 1378, 1379, 1380, 1382, 1384, 1385, 1387, 1389, 1391, 1394, 1396, 1400, 1406, 1407, 1408, 1409, 1410, 1412, 1414, 1416, 1418, 1420, 1423, 1424, 1425, 1430, 1435, 1438, 1439, 1440, 1441, 1442, 1444, 1446, 1447, 1449, 1451, 1453, 1457, 1461, 1467, 1468, 1469, 1470, 1471, 1473, 1475, 1477, 1479, 1481, 1484, 1485, 1489, 1495, 1496, 1497, 1498, 1499, 1501, 1503, 1505, 1507, 1509, 1513, 1517, 1523, 1524, 1525, 1526, 1527, 1529, 1531, 1533, 1535, 1537, 1541, 1542, 1547, 1552, 1555, 1556, 1557, 1558, 1559, 1561, 1563, 1564, 1566, 1568, 1570, 1573, 1575, 1579, 1585, 1586, 1587, 1588, 1589, 1591, 1593, 1595, 1597, 1599, 1603, 1604, 1609, 1614, 1617, 1618, 1619, 1620, 1621, 1623, 1625, 1626, 1628, 1630, 1632, 1635, 1637, 1641, 1647, 1648, 1649, 1650, 1651, 1653, 1655, 1657, 1659, 1661, 1666, 1668, 1670, 1674, 1676, 1678, 1680, 1681, 1682, 1685, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1704, 1705, 1706, 1707, 1708, 1714, 1715, 1717, 1719, 1720, 1721, 1726, 1728, 1736, 1738, 1745, 1747, 1749, 1751, 1763, 1775, 1789, 1805, 1806, 1808, 1823, 1854, 1855, 1857, 1865, 1875], "yet": [6, 21, 26, 34, 35, 543, 607, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1863], "onli": [6, 7, 10, 12, 13, 14, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 43, 49, 50, 51, 52, 55, 66, 75, 81, 82, 83, 84, 87, 92, 102, 108, 109, 110, 111, 115, 122, 124, 135, 141, 142, 143, 144, 147, 157, 168, 174, 175, 176, 177, 180, 190, 200, 206, 207, 208, 209, 213, 222, 233, 239, 240, 241, 242, 245, 255, 266, 272, 273, 274, 275, 278, 288, 299, 305, 306, 307, 308, 311, 321, 332, 338, 339, 340, 341, 344, 354, 365, 371, 372, 373, 374, 377, 388, 399, 405, 406, 407, 408, 411, 421, 432, 438, 439, 440, 441, 444, 454, 465, 471, 472, 473, 474, 477, 487, 498, 504, 505, 506, 507, 510, 519, 533, 543, 547, 553, 554, 555, 556, 559, 561, 565, 571, 572, 573, 574, 575, 577, 594, 607, 609, 624, 630, 638, 639, 662, 667, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 696, 699, 703, 704, 706, 710, 713, 777, 825, 829, 850, 898, 901, 902, 917, 921, 922, 923, 924, 927, 928, 931, 933, 936, 937, 938, 939, 940, 943, 945, 949, 954, 956, 960, 961, 962, 963, 966, 967, 970, 972, 975, 976, 977, 978, 979, 982, 984, 988, 994, 998, 999, 1000, 1001, 1004, 1005, 1008, 1010, 1013, 1014, 1015, 1016, 1017, 1020, 1022, 1026, 1032, 1036, 1037, 1038, 1039, 1042, 1043, 1046, 1048, 1051, 1052, 1053, 1054, 1055, 1058, 1060, 1064, 1071, 1075, 1076, 1077, 1078, 1081, 1082, 1087, 1089, 1092, 1093, 1094, 1095, 1096, 1099, 1101, 1105, 1112, 1116, 1117, 1118, 1119, 1122, 1123, 1126, 1128, 1131, 1132, 1133, 1134, 1135, 1138, 1140, 1144, 1151, 1155, 1156, 1157, 1158, 1161, 1162, 1165, 1167, 1170, 1171, 1172, 1173, 1174, 1177, 1179, 1183, 1189, 1193, 1194, 1195, 1196, 1199, 1200, 1203, 1205, 1208, 1209, 1210, 1211, 1212, 1215, 1217, 1221, 1227, 1231, 1232, 1233, 1234, 1237, 1238, 1241, 1243, 1246, 1247, 1248, 1249, 1250, 1253, 1255, 1259, 1266, 1270, 1276, 1277, 1278, 1279, 1282, 1284, 1288, 1293, 1295, 1300, 1308, 1309, 1310, 1311, 1314, 1316, 1321, 1329, 1334, 1342, 1343, 1344, 1345, 1348, 1350, 1355, 1363, 1368, 1376, 1377, 1378, 1379, 1382, 1384, 1389, 1396, 1400, 1406, 1407, 1408, 1409, 1412, 1414, 1418, 1425, 1430, 1438, 1439, 1440, 1441, 1444, 1446, 1451, 1457, 1461, 1467, 1468, 1469, 1470, 1473, 1475, 1479, 1485, 1489, 1495, 1496, 1497, 1498, 1501, 1503, 1507, 1513, 1517, 1523, 1524, 1525, 1526, 1529, 1531, 1535, 1542, 1547, 1555, 1556, 1557, 1558, 1561, 1563, 1568, 1575, 1579, 1585, 1586, 1587, 1588, 1591, 1593, 1597, 1604, 1609, 1617, 1618, 1619, 1620, 1623, 1625, 1630, 1637, 1641, 1647, 1648, 1649, 1650, 1653, 1655, 1659, 1683, 1684, 1691, 1694, 1695, 1705, 1716, 1745, 1749, 1751, 1794, 1806, 1863, 1867, 1868], "dictat": [6, 19, 32, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 543, 551, 607, 917, 934, 956, 973, 994, 1011, 1032, 1049, 1071, 1090, 1112, 1129, 1151, 1168, 1189, 1206, 1227, 1244, 1266, 1274, 1295, 1306, 1329, 1340, 1363, 1374, 1396, 1404, 1425, 1436, 1457, 1465, 1485, 1493, 1513, 1521, 1542, 1553, 1575, 1583, 1604, 1615, 1637, 1645, 1723], "upper": [6, 26, 27, 28, 801, 921, 931, 960, 970, 998, 1008, 1036, 1046, 1075, 1087, 1116, 1126, 1155, 1165, 1193, 1203, 1231, 1241, 1685, 1710, 1712, 1726, 1728], "limit": [6, 10, 13, 15, 22, 24, 25, 28, 32, 718, 789, 801, 898, 1722], "don": [6, 8, 10, 11, 15, 17, 22, 28, 35], "want": [6, 8, 15, 19, 24, 27, 28, 29, 31, 35, 1684, 1869], "exce": [6, 32], "overlap": [6, 27, 28, 29, 718, 784, 785], "neighbor": [6, 7, 19, 22, 28, 32, 47, 79, 98, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 551, 711, 713, 716, 718, 723, 724, 725, 726, 765, 768, 793, 794, 812, 814, 815, 915, 924, 926, 927, 928, 934, 938, 954, 963, 965, 966, 967, 973, 977, 1001, 1003, 1004, 1005, 1011, 1015, 1039, 1041, 1042, 1043, 1049, 1053, 1069, 1078, 1080, 1081, 1082, 1090, 1094, 1119, 1121, 1122, 1123, 1129, 1133, 1149, 1158, 1160, 1161, 1162, 1168, 1172, 1196, 1198, 1199, 1200, 1206, 1210, 1234, 1236, 1237, 1238, 1244, 1248, 1274, 1306, 1340, 1374, 1404, 1436, 1465, 1493, 1521, 1553, 1583, 1615, 1645, 1689, 1691, 1694, 1695, 1715, 1720], "caus": [6, 28, 32, 1715], "paradox": [6, 718], "neg": [6, 28, 57, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 1685], "ll": [6, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31], "larg": [6, 17, 19, 27, 28, 32, 784, 785, 927, 928, 966, 967, 1004, 1005, 1042, 1043, 1081, 1082, 1083, 1084, 1122, 1123, 1161, 1162, 1199, 1200, 1237, 1238, 1694, 1695, 1697], "do": [6, 7, 8, 12, 13, 22, 24, 26, 27, 28, 29, 30, 31, 32, 63, 154, 187, 252, 285, 318, 351, 385, 418, 451, 484, 825, 1831], "need": [6, 8, 10, 11, 12, 13, 15, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 524, 620, 825, 877, 1681, 1684, 1692], "express": [6, 22, 26, 31], "scientif": [6, 24], "notat": [6, 19, 22, 28, 29], "below": [6, 8, 10, 11, 21, 22, 25, 26, 27, 28, 29, 30, 31, 618, 789, 813, 818, 825, 1717, 1722], "25": [6, 28, 29, 30, 31, 32, 34, 118, 927, 966, 1004, 1042, 1081, 1122, 1161, 1199, 1237, 1680, 1869], "under": [6, 8, 21, 22, 28, 34, 606, 634, 1741, 1743, 1747, 1863], "readi": [6, 8, 14, 19, 21, 34], "dictionari": [6, 15, 21, 27, 28, 29, 30, 31, 32, 44, 45, 46, 56, 65, 76, 77, 78, 88, 91, 103, 104, 105, 116, 123, 136, 137, 138, 148, 156, 169, 170, 171, 181, 189, 201, 202, 203, 214, 221, 234, 235, 236, 246, 254, 267, 268, 269, 279, 287, 300, 301, 302, 312, 320, 333, 334, 335, 345, 353, 366, 367, 368, 378, 387, 400, 401, 402, 412, 420, 433, 434, 435, 445, 453, 466, 467, 468, 478, 486, 499, 500, 501, 511, 518, 524, 525, 528, 529, 530, 536, 537, 544, 548, 549, 550, 560, 564, 582, 583, 588, 591, 597, 598, 603, 608, 618, 619, 620, 622, 634, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 715, 716, 717, 718, 719, 721, 723, 725, 728, 729, 730, 731, 732, 734, 736, 740, 741, 742, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 765, 767, 768, 769, 770, 772, 774, 775, 776, 777, 781, 782, 783, 784, 785, 786, 792, 793, 794, 795, 796, 797, 798, 800, 802, 805, 806, 807, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 843, 847, 850, 852, 854, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 894, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 918, 929, 930, 932, 944, 948, 957, 968, 969, 971, 983, 987, 995, 1006, 1007, 1009, 1021, 1025, 1033, 1044, 1045, 1047, 1059, 1063, 1072, 1085, 1086, 1088, 1100, 1104, 1113, 1124, 1125, 1127, 1139, 1143, 1152, 1163, 1164, 1166, 1178, 1182, 1190, 1201, 1202, 1204, 1216, 1220, 1228, 1239, 1240, 1242, 1254, 1258, 1267, 1271, 1272, 1273, 1283, 1287, 1294, 1296, 1301, 1302, 1303, 1304, 1315, 1320, 1326, 1328, 1330, 1335, 1336, 1337, 1338, 1349, 1354, 1360, 1362, 1364, 1369, 1370, 1371, 1372, 1383, 1388, 1394, 1397, 1401, 1402, 1403, 1413, 1417, 1424, 1426, 1431, 1432, 1433, 1434, 1445, 1450, 1458, 1462, 1463, 1464, 1474, 1478, 1486, 1490, 1491, 1492, 1502, 1506, 1514, 1518, 1519, 1520, 1530, 1534, 1541, 1543, 1548, 1549, 1550, 1551, 1562, 1567, 1573, 1576, 1580, 1581, 1582, 1592, 1596, 1603, 1605, 1610, 1611, 1612, 1613, 1624, 1629, 1635, 1638, 1642, 1643, 1644, 1654, 1658, 1686, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1702, 1703, 1707, 1736, 1738, 1749, 1751, 1756, 1759, 1760, 1765, 1771, 1772, 1777, 1785, 1786, 1791, 1843, 1848, 1849, 1859, 1862, 1863, 1864, 1867, 1868, 1875, 1876], "contain": [6, 8, 10, 14, 17, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 49, 50, 55, 56, 66, 67, 78, 79, 81, 82, 87, 88, 92, 93, 98, 105, 106, 108, 109, 115, 116, 124, 125, 138, 139, 141, 142, 147, 148, 157, 158, 171, 172, 174, 175, 180, 181, 190, 191, 203, 204, 206, 207, 213, 214, 222, 223, 236, 237, 239, 240, 245, 246, 255, 256, 269, 270, 272, 273, 278, 279, 288, 289, 302, 303, 305, 306, 311, 312, 321, 322, 335, 336, 338, 339, 344, 345, 354, 355, 368, 369, 371, 372, 377, 378, 380, 388, 389, 402, 403, 405, 406, 411, 412, 414, 421, 422, 435, 436, 438, 439, 444, 445, 447, 454, 455, 468, 469, 471, 472, 477, 478, 480, 487, 488, 501, 502, 504, 505, 510, 511, 519, 520, 524, 530, 531, 533, 536, 538, 550, 551, 553, 554, 559, 560, 565, 566, 572, 575, 577, 591, 596, 612, 616, 618, 620, 623, 624, 630, 631, 634, 635, 636, 637, 638, 639, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 725, 727, 728, 729, 730, 731, 732, 733, 734, 736, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 790, 791, 793, 794, 795, 796, 798, 800, 802, 803, 805, 807, 808, 811, 813, 824, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 843, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 894, 898, 899, 901, 902, 903, 905, 906, 907, 908, 909, 910, 912, 913, 921, 922, 924, 925, 926, 927, 928, 932, 934, 936, 937, 943, 944, 949, 950, 960, 961, 963, 964, 965, 966, 967, 971, 973, 975, 976, 982, 983, 988, 989, 998, 999, 1001, 1002, 1003, 1004, 1005, 1009, 1011, 1013, 1014, 1020, 1021, 1026, 1027, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1047, 1049, 1051, 1052, 1058, 1059, 1064, 1065, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1088, 1090, 1092, 1093, 1099, 1100, 1105, 1106, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1127, 1129, 1131, 1132, 1138, 1139, 1144, 1145, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1168, 1170, 1171, 1177, 1178, 1183, 1184, 1188, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1204, 1206, 1208, 1209, 1215, 1216, 1221, 1222, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1242, 1244, 1246, 1247, 1253, 1254, 1259, 1260, 1273, 1274, 1276, 1277, 1282, 1283, 1288, 1289, 1297, 1304, 1306, 1308, 1309, 1314, 1315, 1321, 1322, 1331, 1338, 1340, 1342, 1343, 1348, 1349, 1355, 1356, 1365, 1372, 1374, 1376, 1377, 1382, 1383, 1389, 1390, 1403, 1404, 1406, 1407, 1412, 1413, 1418, 1419, 1427, 1434, 1436, 1438, 1439, 1444, 1445, 1451, 1452, 1464, 1465, 1467, 1468, 1473, 1474, 1479, 1480, 1492, 1493, 1495, 1496, 1501, 1502, 1507, 1508, 1520, 1521, 1523, 1524, 1529, 1530, 1535, 1536, 1544, 1551, 1553, 1555, 1556, 1561, 1562, 1568, 1569, 1582, 1583, 1585, 1586, 1591, 1592, 1597, 1598, 1606, 1613, 1615, 1617, 1618, 1623, 1624, 1630, 1631, 1644, 1645, 1647, 1648, 1653, 1654, 1659, 1660, 1664, 1679, 1682, 1686, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1700, 1701, 1702, 1703, 1704, 1718, 1721, 1724, 1725, 1729, 1782, 1794, 1806, 1808, 1835, 1836, 1843, 1853, 1858, 1863, 1867, 1868], "everyth": [6, 8], "pro": 6, "tip": 6, "rememb": 6, "treat": [6, 21, 570, 1069, 1691, 1694, 1695, 1707], "list": [6, 21, 26, 27, 28, 29, 30, 32, 39, 43, 50, 51, 52, 55, 56, 59, 60, 66, 73, 75, 82, 83, 84, 87, 88, 89, 90, 92, 100, 102, 109, 110, 111, 115, 116, 119, 120, 121, 122, 124, 131, 135, 142, 143, 144, 147, 148, 151, 152, 157, 164, 168, 175, 176, 177, 180, 181, 184, 185, 190, 195, 198, 200, 207, 208, 209, 213, 214, 217, 219, 222, 229, 233, 240, 241, 242, 245, 246, 249, 250, 255, 262, 266, 273, 274, 275, 278, 279, 282, 283, 288, 295, 299, 306, 307, 308, 311, 312, 315, 316, 321, 328, 332, 339, 340, 341, 344, 345, 348, 349, 354, 361, 365, 372, 373, 374, 377, 378, 381, 382, 388, 395, 399, 406, 407, 408, 411, 412, 415, 416, 421, 428, 432, 439, 440, 441, 444, 445, 448, 449, 454, 461, 465, 472, 473, 474, 477, 478, 481, 482, 487, 494, 498, 505, 506, 507, 510, 511, 514, 515, 519, 536, 547, 554, 555, 556, 559, 560, 561, 563, 565, 571, 572, 573, 574, 575, 576, 577, 595, 609, 620, 631, 633, 634, 635, 636, 638, 639, 678, 688, 693, 703, 712, 713, 720, 771, 791, 802, 803, 804, 806, 818, 825, 836, 839, 843, 880, 894, 915, 916, 923, 924, 925, 926, 927, 928, 937, 939, 940, 943, 944, 945, 947, 949, 954, 955, 962, 963, 964, 965, 966, 967, 976, 978, 979, 982, 983, 984, 986, 988, 993, 1000, 1001, 1002, 1003, 1004, 1005, 1014, 1016, 1017, 1020, 1021, 1022, 1024, 1026, 1031, 1038, 1039, 1040, 1041, 1042, 1043, 1052, 1054, 1055, 1058, 1059, 1060, 1062, 1064, 1069, 1070, 1077, 1078, 1079, 1080, 1081, 1082, 1093, 1095, 1096, 1099, 1100, 1101, 1103, 1105, 1110, 1111, 1118, 1119, 1120, 1121, 1122, 1123, 1132, 1134, 1135, 1138, 1139, 1140, 1142, 1144, 1149, 1150, 1157, 1158, 1159, 1160, 1161, 1162, 1171, 1173, 1174, 1177, 1178, 1179, 1181, 1183, 1188, 1195, 1196, 1197, 1198, 1199, 1200, 1209, 1211, 1212, 1215, 1216, 1217, 1219, 1221, 1226, 1233, 1234, 1235, 1236, 1237, 1238, 1247, 1249, 1250, 1253, 1254, 1255, 1257, 1259, 1270, 1277, 1278, 1279, 1282, 1283, 1284, 1286, 1288, 1297, 1300, 1309, 1310, 1311, 1314, 1315, 1316, 1319, 1321, 1331, 1334, 1343, 1344, 1345, 1348, 1349, 1350, 1353, 1355, 1365, 1368, 1377, 1378, 1379, 1382, 1383, 1384, 1387, 1389, 1400, 1407, 1408, 1409, 1412, 1413, 1414, 1416, 1418, 1423, 1427, 1430, 1439, 1440, 1441, 1444, 1445, 1446, 1449, 1451, 1461, 1468, 1469, 1470, 1473, 1474, 1475, 1477, 1479, 1489, 1496, 1497, 1498, 1501, 1502, 1503, 1505, 1507, 1517, 1524, 1525, 1526, 1529, 1530, 1531, 1533, 1535, 1544, 1547, 1556, 1557, 1558, 1561, 1562, 1563, 1566, 1568, 1579, 1586, 1587, 1588, 1591, 1592, 1593, 1595, 1597, 1606, 1609, 1618, 1619, 1620, 1623, 1624, 1625, 1628, 1630, 1641, 1648, 1649, 1650, 1653, 1654, 1655, 1657, 1659, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1699, 1706, 1707, 1714, 1715, 1716, 1717, 1718, 1721, 1722, 1745, 1756, 1794, 1795, 1796, 1797, 1799, 1802, 1805, 1806, 1808, 1812, 1813, 1814, 1815, 1817, 1820, 1823, 1843, 1847, 1854, 1862, 1863, 1865, 1867, 1868, 1873, 1874], "quickli": [6, 19, 24, 25], "view": [6, 8, 17, 26, 30, 48, 70, 80, 96, 107, 128, 140, 161, 173, 194, 205, 226, 238, 259, 271, 292, 304, 325, 337, 358, 370, 392, 404, 425, 437, 458, 470, 491, 503, 523, 532, 541, 552, 569, 584, 585, 590, 599, 600, 605, 632, 935, 953, 974, 992, 1012, 1030, 1050, 1068, 1091, 1109, 1130, 1148, 1169, 1187, 1207, 1225, 1245, 1263, 1275, 1292, 1307, 1325, 1341, 1359, 1375, 1393, 1405, 1422, 1437, 1455, 1466, 1483, 1494, 1511, 1522, 1539, 1540, 1554, 1572, 1584, 1601, 1602, 1616, 1634, 1646, 1663, 1761, 1762, 1767, 1773, 1774, 1781, 1787, 1788, 1793, 1806, 1850, 1851, 1861], "alreadi": [6, 10, 13, 15, 27, 29, 30, 31, 32, 59, 63, 89, 119, 120, 122, 151, 154, 184, 187, 217, 249, 252, 282, 285, 315, 318, 348, 351, 381, 385, 415, 418, 448, 451, 481, 484, 514, 718, 916, 931, 933, 955, 970, 972, 1008, 1010, 1046, 1048, 1070, 1087, 1089, 1110, 1111, 1126, 1128, 1150, 1165, 1167, 1203, 1205, 1241, 1243, 1686, 1692, 1698, 1826], "dict_kei": [6, 24, 30, 31], "max_siz": [6, 8, 26, 28, 31, 643, 644, 645, 646, 647, 648, 649], "volum": [6, 8, 12, 13, 20, 26, 28, 29, 31, 32, 210, 561, 609, 619, 643, 644, 645, 646, 647, 648, 649, 666, 668, 715, 728, 729, 730, 731, 732, 781, 782, 783, 784, 785, 786, 829, 830, 836, 899, 945, 984, 1022, 1060, 1101, 1140, 1179, 1217, 1255, 1284, 1316, 1350, 1384, 1414, 1446, 1475, 1503, 1531, 1563, 1593, 1625, 1655], "cross_sectional_area": [6, 7, 8, 26, 28, 31, 643, 644, 645, 646, 647, 648, 649, 723, 724, 725, 726, 734, 735, 736, 767, 783, 885, 892], "total_volum": [6, 8, 11, 26, 28, 31, 647], "lens_volum": [6, 8, 26, 28, 31, 647], "diffusive_size_factor": [6, 8, 22, 26, 28, 31, 643, 644, 645, 646, 647, 648, 649, 882, 883, 884, 885, 887, 888, 912, 913], "return": [6, 7, 12, 13, 15, 17, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 37, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 71, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 98, 102, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 123, 124, 125, 126, 129, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 162, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192, 195, 196, 200, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 221, 222, 223, 224, 227, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 254, 255, 256, 257, 260, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 288, 289, 290, 293, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 320, 321, 322, 323, 326, 332, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 353, 354, 355, 356, 359, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 387, 388, 389, 390, 393, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 420, 421, 422, 423, 426, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 453, 454, 455, 456, 459, 465, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 486, 487, 488, 489, 492, 498, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 543, 547, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 567, 571, 572, 573, 574, 575, 577, 583, 586, 587, 588, 594, 595, 598, 601, 602, 603, 607, 615, 618, 619, 620, 622, 623, 627, 634, 635, 636, 672, 687, 702, 709, 712, 713, 715, 716, 717, 718, 720, 721, 725, 731, 734, 738, 744, 756, 761, 765, 767, 768, 769, 771, 772, 775, 779, 782, 790, 793, 794, 795, 796, 798, 799, 802, 803, 804, 805, 807, 811, 813, 818, 829, 831, 835, 843, 846, 848, 849, 850, 852, 855, 856, 862, 863, 869, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 894, 898, 899, 901, 902, 903, 905, 906, 907, 908, 909, 910, 912, 913, 915, 917, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 949, 950, 951, 954, 956, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 987, 988, 989, 990, 993, 994, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1031, 1032, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1063, 1064, 1065, 1066, 1069, 1071, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1143, 1144, 1145, 1146, 1149, 1151, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1182, 1183, 1184, 1185, 1188, 1189, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1220, 1221, 1222, 1223, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1266, 1270, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1287, 1288, 1289, 1290, 1295, 1297, 1300, 1302, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1320, 1321, 1322, 1323, 1326, 1329, 1331, 1334, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1354, 1355, 1356, 1357, 1360, 1363, 1365, 1368, 1370, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1388, 1389, 1390, 1391, 1394, 1396, 1400, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1417, 1418, 1419, 1420, 1425, 1427, 1430, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1450, 1451, 1452, 1453, 1457, 1461, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1478, 1479, 1480, 1481, 1485, 1489, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1506, 1507, 1508, 1509, 1513, 1517, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1534, 1535, 1536, 1537, 1542, 1544, 1547, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1567, 1568, 1569, 1570, 1573, 1575, 1579, 1581, 1582, 1583, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1596, 1597, 1598, 1599, 1604, 1606, 1609, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1629, 1630, 1631, 1632, 1635, 1637, 1641, 1643, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1658, 1659, 1660, 1661, 1672, 1681, 1682, 1684, 1685, 1686, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1741, 1743, 1745, 1747, 1751, 1754, 1756, 1760, 1763, 1764, 1765, 1772, 1775, 1776, 1777, 1786, 1789, 1790, 1791, 1797, 1798, 1800, 1802, 1805, 1808, 1815, 1816, 1818, 1820, 1823, 1828, 1829, 1832, 1834, 1837, 1839, 1841, 1847, 1849, 1854, 1855, 1856, 1859, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1872, 1876], "argument": [6, 15, 24, 25, 26, 27, 30, 55, 60, 63, 66, 87, 90, 92, 115, 121, 124, 147, 152, 154, 157, 180, 185, 187, 190, 213, 219, 222, 245, 250, 252, 255, 278, 283, 285, 288, 311, 316, 318, 321, 344, 349, 351, 354, 377, 382, 385, 388, 411, 416, 418, 421, 444, 449, 451, 454, 477, 482, 484, 487, 510, 515, 519, 543, 559, 563, 565, 575, 576, 577, 607, 615, 619, 634, 796, 803, 825, 877, 904, 917, 921, 922, 926, 938, 943, 947, 949, 956, 960, 961, 965, 977, 982, 986, 988, 993, 994, 998, 999, 1003, 1015, 1020, 1024, 1026, 1032, 1036, 1037, 1041, 1053, 1058, 1062, 1064, 1071, 1075, 1076, 1080, 1094, 1099, 1103, 1105, 1112, 1116, 1117, 1121, 1133, 1138, 1142, 1144, 1151, 1155, 1156, 1160, 1172, 1177, 1181, 1183, 1189, 1193, 1194, 1198, 1210, 1215, 1219, 1221, 1227, 1231, 1232, 1236, 1248, 1253, 1257, 1259, 1266, 1282, 1286, 1288, 1295, 1314, 1319, 1321, 1329, 1348, 1353, 1355, 1363, 1382, 1387, 1389, 1396, 1412, 1416, 1418, 1425, 1444, 1449, 1451, 1457, 1473, 1477, 1479, 1485, 1501, 1505, 1507, 1513, 1529, 1533, 1535, 1542, 1561, 1566, 1568, 1575, 1591, 1595, 1597, 1604, 1623, 1628, 1630, 1637, 1653, 1657, 1659, 1684, 1690, 1707, 1720, 1734, 1751, 1806], "function": [6, 7, 11, 15, 17, 19, 22, 25, 27, 28, 29, 30, 31, 32, 33, 35, 50, 59, 67, 82, 89, 93, 98, 109, 119, 125, 142, 151, 158, 175, 184, 191, 196, 207, 217, 223, 240, 249, 256, 273, 282, 289, 306, 315, 322, 339, 348, 355, 372, 380, 381, 389, 406, 414, 415, 422, 439, 447, 448, 455, 472, 480, 481, 488, 505, 514, 520, 524, 538, 542, 543, 554, 561, 566, 570, 572, 578, 579, 606, 607, 609, 615, 634, 643, 644, 645, 646, 647, 648, 649, 652, 655, 656, 658, 659, 661, 675, 690, 705, 711, 714, 718, 719, 721, 722, 725, 727, 733, 737, 739, 743, 745, 759, 763, 766, 770, 772, 773, 778, 780, 787, 796, 798, 800, 802, 807, 808, 824, 825, 827, 829, 833, 837, 842, 845, 850, 851, 853, 857, 864, 868, 876, 877, 878, 881, 886, 889, 892, 893, 897, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 917, 937, 945, 950, 956, 976, 984, 989, 994, 1014, 1022, 1027, 1032, 1052, 1060, 1065, 1071, 1093, 1101, 1106, 1112, 1132, 1140, 1145, 1151, 1171, 1179, 1184, 1188, 1189, 1209, 1217, 1222, 1227, 1247, 1255, 1260, 1266, 1277, 1284, 1289, 1293, 1295, 1309, 1316, 1322, 1329, 1343, 1350, 1356, 1363, 1377, 1384, 1390, 1396, 1407, 1414, 1419, 1425, 1439, 1446, 1452, 1457, 1468, 1475, 1480, 1485, 1496, 1503, 1508, 1513, 1524, 1531, 1536, 1540, 1542, 1556, 1563, 1569, 1575, 1586, 1593, 1598, 1602, 1604, 1618, 1625, 1631, 1637, 1648, 1655, 1660, 1681, 1682, 1684, 1697, 1698, 1699, 1713, 1718, 1720, 1721, 1731, 1737, 1739, 1740, 1749, 1750, 1751, 1752, 1805, 1809, 1823, 1843, 1867, 1868], "misc": [6, 28, 30, 796], "_basic_math": 6, "product": [6, 28, 643, 644, 645, 646, 647, 648, 649], "target": [6, 7, 591, 716, 717, 719, 721, 765, 768, 769, 770, 772, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 805, 806, 807, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 894, 898, 899, 910, 912, 913, 1716], "prop": [6, 26, 28, 30, 49, 50, 81, 82, 108, 109, 141, 142, 174, 175, 206, 207, 239, 240, 272, 273, 305, 306, 338, 339, 371, 372, 405, 406, 438, 439, 471, 472, 504, 505, 533, 553, 554, 572, 643, 644, 645, 646, 647, 648, 649, 652, 655, 716, 764, 765, 768, 789, 791, 793, 794, 796, 797, 798, 801, 802, 803, 805, 806, 843, 846, 847, 872, 936, 937, 975, 976, 1013, 1014, 1051, 1052, 1092, 1093, 1131, 1132, 1170, 1171, 1188, 1208, 1209, 1246, 1247, 1276, 1277, 1308, 1309, 1342, 1343, 1376, 1377, 1406, 1407, 1438, 1439, 1467, 1468, 1495, 1496, 1523, 1524, 1555, 1556, 1585, 1586, 1617, 1618, 1647, 1648], "final": [6, 15, 19, 22, 24, 25, 31, 32, 33, 1069, 1672, 1738, 1751], "forget": [6, 10, 19], "els": [6, 28, 45, 65, 77, 91, 104, 123, 137, 156, 170, 189, 196, 202, 221, 235, 254, 268, 287, 301, 320, 334, 353, 367, 387, 401, 420, 434, 453, 467, 486, 500, 518, 529, 537, 549, 564, 583, 588, 598, 603, 930, 948, 969, 987, 1007, 1025, 1045, 1063, 1086, 1104, 1125, 1143, 1164, 1182, 1202, 1220, 1240, 1258, 1272, 1287, 1302, 1320, 1336, 1354, 1370, 1388, 1402, 1417, 1432, 1450, 1463, 1478, 1491, 1506, 1519, 1534, 1549, 1567, 1581, 1596, 1611, 1629, 1643, 1658, 1756, 1760, 1765, 1772, 1777, 1786, 1791, 1849, 1859], "appear": [6, 17, 21, 26, 28, 30, 1745, 1747], "been": [6, 7, 8, 13, 14, 19, 24, 26, 27, 28, 29, 30, 31, 32, 43, 63, 75, 102, 135, 154, 168, 187, 200, 233, 252, 266, 285, 299, 318, 332, 351, 365, 385, 399, 418, 432, 451, 465, 484, 498, 547, 571, 718, 892, 923, 962, 1000, 1038, 1077, 1118, 1157, 1195, 1233, 1270, 1300, 1334, 1368, 1400, 1430, 1461, 1489, 1517, 1547, 1579, 1609, 1641, 1686, 1691], "net": [6, 8, 10, 17, 19, 21, 22, 25, 27, 28, 29, 31, 57, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 901, 902, 1698], "0x7fb84e9f3040": 6, "valid": [6, 8, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 67, 93, 125, 158, 191, 223, 256, 289, 322, 355, 389, 422, 455, 488, 520, 538, 566, 832, 850, 856, 863, 867, 874, 950, 989, 1027, 1065, 1106, 1145, 1184, 1222, 1260, 1289, 1322, 1356, 1390, 1419, 1452, 1480, 1508, 1536, 1569, 1598, 1631, 1660, 1872], "coord": [6, 8, 21, 25, 26, 27, 28, 29, 31, 620, 665, 666, 667, 668, 669, 670, 679, 680, 681, 682, 683, 684, 694, 695, 696, 697, 698, 699, 749, 750, 751, 752, 753, 754, 915, 954, 993, 1031, 1069, 1110, 1149, 1188, 1226, 1688, 1706, 1719, 1720, 1722], "625": [6, 32, 1722], "3": [6, 7, 8, 11, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 46, 78, 98, 105, 138, 171, 203, 236, 269, 302, 335, 368, 402, 435, 468, 501, 530, 543, 550, 607, 619, 620, 652, 655, 672, 687, 702, 717, 744, 769, 779, 795, 830, 831, 835, 863, 865, 899, 901, 902, 903, 904, 906, 907, 908, 909, 917, 926, 927, 932, 938, 956, 965, 966, 971, 977, 994, 1003, 1004, 1009, 1015, 1031, 1032, 1041, 1042, 1047, 1053, 1069, 1071, 1080, 1081, 1088, 1094, 1112, 1121, 1122, 1127, 1133, 1151, 1160, 1161, 1166, 1172, 1188, 1189, 1198, 1199, 1204, 1210, 1226, 1227, 1236, 1237, 1242, 1248, 1266, 1273, 1295, 1304, 1329, 1338, 1363, 1372, 1396, 1403, 1425, 1434, 1457, 1464, 1485, 1492, 1513, 1520, 1542, 1551, 1575, 1582, 1604, 1613, 1637, 1644, 1680, 1684, 1686, 1688, 1698, 1704, 1706, 1719, 1720, 1732, 1733, 1735, 1737, 1739, 1742, 1744, 1746, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1794], "conn": [6, 7, 8, 21, 25, 26, 27, 28, 29, 31, 620, 779, 915, 954, 993, 1031, 1069, 1110, 1149, 1188, 1226, 1682, 1684, 1685, 1688, 1708, 1721], "1200": [6, 32], "coordination_numb": [6, 8, 15, 26, 28, 29, 31], "7": [6, 7, 8, 10, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 631, 643, 644, 645, 646, 647, 648, 649, 652, 892, 927, 966, 1004, 1042, 1081, 1122, 1161, 1199, 1237, 1684], "9": [6, 7, 8, 9, 12, 15, 21, 25, 26, 27, 28, 29, 30, 31, 32, 652, 655, 712, 720, 771, 804, 896, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236, 1684], "11": [6, 8, 25, 26, 27, 28, 29, 30, 31, 32, 652], "13": [6, 8, 22, 25, 26, 27, 28, 29, 31, 32], "16": [6, 8, 22, 25, 26, 28, 29, 31, 32, 652, 1684], "17": [6, 8, 22, 25, 26, 28, 29, 31, 32, 652], "18": [6, 8, 9, 22, 25, 26, 28, 29, 31, 32, 34, 835, 954], "surfac": [6, 8, 10, 12, 13, 21, 25, 26, 27, 29, 31, 32, 33, 631, 723, 724, 725, 726, 734, 736, 767, 774, 775, 776, 777, 783, 836, 854, 855, 856, 879, 880, 894, 1680, 1698, 1699, 1713, 1717], "96": [6, 25, 32], "front": [6, 7, 8, 10, 21, 25, 27, 28, 29, 31, 955, 1070, 1111, 1698], "back": [6, 7, 8, 21, 25, 27, 28, 29, 31, 713, 715, 767, 790, 894, 955, 1070, 1111, 1698], "hist": [6, 28, 717, 719, 721, 769, 770, 772, 795, 800, 807], "ax1": 6, "ax2": 6, "subplot": [6, 7, 8, 9, 27, 28, 29], "figsiz": [6, 8, 9, 12, 13, 27, 28, 29, 596], "bin": [6, 717, 719, 721, 769, 770, 772, 795, 800, 807], "edgecolor": [6, 28], "set_titl": 6, "approach": [6, 17, 27, 28, 29, 32, 35, 713, 829, 879, 880, 895, 1697], "most": [6, 8, 11, 15, 24, 27, 30, 31, 32, 195, 825, 880, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "simpl": [6, 8, 10, 22, 24, 25, 26, 27, 29, 30, 31, 915, 954, 993, 1149, 1782, 1794], "straight": [6, 778, 779], "forward": 6, "modul": [6, 11, 21, 25, 26, 28, 31, 36, 380, 414, 447, 480, 524, 612, 616, 640, 641, 642, 650, 651, 653, 654, 657, 660, 661, 675, 690, 705, 711, 714, 719, 721, 722, 727, 733, 737, 739, 743, 745, 759, 763, 766, 770, 772, 773, 778, 780, 787, 800, 807, 808, 824, 826, 827, 833, 837, 842, 845, 851, 853, 857, 864, 868, 875, 876, 878, 881, 886, 889, 893, 897, 900, 911, 914, 1264, 1664, 1679, 1696, 1726, 1728, 1729], "second": [6, 8, 21, 22, 24, 30, 622, 1684, 1693, 1722, 1749, 1751], "latter": [6, 901, 902, 1691], "recommend": [6, 28, 29, 35, 619, 1715], "fetch": [6, 10, 26, 28, 30, 31, 46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 368, 402, 435, 468, 501, 530, 550, 825, 846, 932, 971, 1009, 1047, 1088, 1127, 1166, 1204, 1242, 1273, 1303, 1304, 1305, 1337, 1338, 1339, 1371, 1372, 1373, 1403, 1433, 1434, 1435, 1464, 1492, 1520, 1550, 1551, 1552, 1582, 1612, 1613, 1614, 1644], "statist": [6, 15, 28], "case": [6, 10, 11, 17, 19, 22, 27, 29, 30, 31, 32, 69, 95, 127, 160, 193, 225, 258, 291, 324, 357, 391, 424, 457, 490, 522, 540, 568, 589, 595, 604, 718, 825, 901, 902, 952, 991, 1029, 1067, 1108, 1147, 1186, 1224, 1262, 1291, 1324, 1358, 1392, 1421, 1454, 1482, 1510, 1538, 1571, 1600, 1633, 1662, 1684, 1691, 1715, 1766, 1780, 1792, 1806, 1860], "weibull_min": [6, 28, 717, 721, 769, 772, 795, 807], "genert": 6, "number": [6, 14, 15, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 51, 52, 83, 84, 110, 111, 118, 143, 144, 176, 177, 208, 209, 216, 241, 242, 274, 275, 307, 308, 340, 341, 373, 374, 407, 408, 440, 441, 473, 474, 506, 507, 555, 556, 573, 574, 620, 685, 700, 712, 713, 715, 718, 719, 720, 721, 734, 770, 771, 772, 787, 799, 800, 804, 807, 810, 811, 812, 813, 894, 901, 902, 915, 924, 938, 939, 940, 954, 963, 977, 978, 979, 1001, 1015, 1016, 1017, 1031, 1039, 1053, 1054, 1055, 1069, 1078, 1094, 1095, 1096, 1119, 1133, 1134, 1135, 1149, 1158, 1172, 1173, 1174, 1196, 1210, 1211, 1212, 1226, 1234, 1248, 1249, 1250, 1278, 1279, 1293, 1310, 1311, 1344, 1345, 1378, 1379, 1408, 1409, 1440, 1441, 1469, 1470, 1497, 1498, 1525, 1526, 1557, 1558, 1587, 1588, 1619, 1620, 1649, 1650, 1671, 1682, 1685, 1688, 1689, 1690, 1692, 1699, 1708, 1716, 1721, 1724, 1725, 1729, 1751, 1754, 1798, 1816, 1863], "rv": [6, 28], "arrai": [6, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 46, 47, 49, 55, 58, 59, 60, 66, 67, 68, 78, 79, 81, 87, 89, 90, 92, 93, 94, 105, 106, 108, 115, 118, 119, 121, 124, 125, 126, 138, 139, 141, 147, 150, 151, 152, 157, 158, 159, 171, 172, 174, 180, 183, 184, 185, 190, 191, 192, 196, 203, 204, 206, 213, 217, 219, 222, 223, 224, 236, 237, 239, 245, 248, 249, 250, 255, 256, 257, 269, 270, 272, 278, 281, 282, 283, 288, 289, 290, 302, 303, 305, 311, 314, 315, 316, 321, 322, 323, 335, 336, 338, 344, 347, 348, 349, 354, 355, 356, 368, 369, 371, 377, 380, 381, 382, 388, 389, 390, 402, 403, 405, 411, 414, 415, 416, 421, 422, 423, 435, 436, 438, 444, 447, 448, 449, 454, 455, 456, 468, 469, 471, 477, 480, 481, 482, 487, 488, 489, 501, 502, 504, 510, 513, 514, 515, 519, 520, 521, 530, 531, 533, 538, 539, 543, 550, 551, 553, 559, 563, 565, 566, 567, 570, 575, 576, 577, 607, 615, 634, 638, 672, 687, 702, 712, 713, 716, 717, 718, 719, 720, 721, 734, 744, 765, 768, 769, 770, 771, 772, 779, 787, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 811, 813, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 917, 921, 922, 924, 926, 927, 928, 932, 934, 936, 938, 943, 947, 949, 950, 951, 956, 960, 961, 963, 965, 966, 967, 971, 973, 975, 977, 982, 986, 988, 989, 990, 993, 994, 998, 999, 1001, 1003, 1004, 1005, 1009, 1011, 1013, 1015, 1020, 1024, 1026, 1027, 1028, 1031, 1032, 1036, 1037, 1039, 1041, 1042, 1043, 1047, 1049, 1051, 1053, 1058, 1062, 1064, 1065, 1066, 1069, 1071, 1075, 1076, 1078, 1080, 1081, 1082, 1088, 1090, 1092, 1094, 1099, 1103, 1105, 1106, 1107, 1112, 1116, 1117, 1119, 1121, 1122, 1123, 1127, 1129, 1131, 1133, 1138, 1142, 1144, 1145, 1146, 1151, 1155, 1156, 1158, 1160, 1161, 1162, 1166, 1168, 1170, 1172, 1177, 1181, 1183, 1184, 1185, 1188, 1189, 1193, 1194, 1196, 1198, 1199, 1200, 1204, 1206, 1208, 1210, 1215, 1219, 1221, 1222, 1223, 1226, 1227, 1231, 1232, 1234, 1236, 1237, 1238, 1242, 1244, 1246, 1248, 1253, 1257, 1259, 1260, 1261, 1266, 1273, 1274, 1276, 1282, 1286, 1288, 1289, 1290, 1295, 1304, 1306, 1308, 1314, 1319, 1321, 1322, 1323, 1329, 1338, 1340, 1342, 1348, 1353, 1355, 1356, 1357, 1363, 1372, 1374, 1376, 1382, 1387, 1389, 1390, 1391, 1396, 1403, 1404, 1406, 1412, 1416, 1418, 1419, 1420, 1425, 1434, 1436, 1438, 1444, 1449, 1451, 1452, 1453, 1457, 1464, 1465, 1467, 1473, 1477, 1479, 1480, 1481, 1485, 1492, 1493, 1495, 1501, 1505, 1507, 1508, 1509, 1513, 1520, 1521, 1523, 1529, 1533, 1535, 1536, 1537, 1542, 1551, 1553, 1555, 1561, 1566, 1568, 1569, 1570, 1575, 1582, 1583, 1585, 1591, 1595, 1597, 1598, 1599, 1604, 1613, 1615, 1617, 1623, 1628, 1630, 1631, 1632, 1637, 1644, 1645, 1647, 1653, 1657, 1659, 1660, 1661, 1672, 1680, 1682, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1694, 1695, 1696, 1698, 1699, 1702, 1703, 1704, 1707, 1708, 1715, 1716, 1717, 1718, 1721, 1724, 1725, 1782, 1862, 1864, 1867, 1868, 1869, 1876], "put": [6, 15, 27, 28, 196, 524, 636, 1719], "one": [6, 9, 15, 17, 22, 24, 26, 27, 28, 29, 30, 31, 32, 43, 50, 51, 52, 55, 59, 66, 75, 82, 83, 84, 87, 89, 92, 102, 109, 110, 111, 115, 119, 124, 135, 142, 143, 144, 147, 151, 157, 168, 175, 176, 177, 180, 184, 190, 200, 207, 208, 209, 213, 217, 222, 227, 233, 240, 241, 242, 245, 249, 255, 266, 273, 274, 275, 278, 282, 288, 299, 306, 307, 308, 311, 315, 321, 332, 339, 340, 341, 344, 348, 354, 365, 372, 373, 374, 377, 381, 388, 399, 406, 407, 408, 411, 415, 421, 432, 439, 440, 441, 444, 448, 454, 465, 472, 473, 474, 477, 481, 487, 498, 505, 506, 507, 510, 514, 519, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 595, 623, 636, 782, 835, 915, 923, 924, 927, 928, 931, 933, 937, 938, 939, 940, 943, 949, 954, 962, 963, 966, 967, 970, 972, 976, 977, 978, 979, 982, 988, 993, 1000, 1001, 1004, 1005, 1008, 1010, 1014, 1015, 1016, 1017, 1020, 1026, 1031, 1038, 1039, 1042, 1043, 1046, 1048, 1052, 1053, 1054, 1055, 1058, 1064, 1069, 1077, 1078, 1081, 1082, 1087, 1089, 1093, 1094, 1095, 1096, 1099, 1105, 1110, 1118, 1119, 1122, 1123, 1126, 1128, 1132, 1133, 1134, 1135, 1138, 1144, 1149, 1157, 1158, 1161, 1162, 1165, 1167, 1171, 1172, 1173, 1174, 1177, 1183, 1188, 1195, 1196, 1199, 1200, 1203, 1205, 1209, 1210, 1211, 1212, 1215, 1221, 1226, 1233, 1234, 1237, 1238, 1241, 1243, 1247, 1248, 1249, 1250, 1253, 1259, 1270, 1277, 1278, 1279, 1282, 1288, 1300, 1309, 1310, 1311, 1314, 1321, 1334, 1343, 1344, 1345, 1348, 1355, 1368, 1377, 1378, 1379, 1382, 1389, 1400, 1407, 1408, 1409, 1412, 1418, 1430, 1439, 1440, 1441, 1444, 1451, 1461, 1468, 1469, 1470, 1473, 1479, 1484, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1547, 1556, 1557, 1558, 1561, 1568, 1579, 1586, 1587, 1588, 1591, 1597, 1609, 1618, 1619, 1620, 1623, 1630, 1641, 1648, 1649, 1650, 1653, 1659, 1682, 1685, 1691, 1694, 1695, 1698, 1714, 1720, 1721, 1722, 1756, 1806, 1839, 1843, 1847, 1854, 1858], "c": [6, 7, 8, 24, 25, 27, 28, 32, 35, 717, 721, 769, 772, 791, 795, 807, 835, 899, 901, 902, 904, 1719, 1720, 1749, 1751, 1852, 1857], "random_st": 6, "none": [6, 15, 26, 28, 29, 31, 38, 43, 44, 45, 49, 50, 51, 52, 55, 58, 59, 60, 62, 64, 65, 66, 68, 69, 72, 75, 76, 77, 81, 82, 83, 84, 87, 89, 90, 91, 92, 94, 95, 99, 102, 103, 104, 108, 109, 110, 111, 112, 115, 119, 121, 123, 124, 126, 127, 130, 135, 136, 137, 141, 142, 143, 144, 147, 150, 151, 152, 153, 155, 156, 157, 159, 160, 163, 168, 169, 170, 174, 175, 176, 177, 180, 183, 184, 185, 186, 188, 189, 190, 192, 193, 197, 200, 201, 202, 206, 207, 208, 209, 213, 217, 218, 219, 220, 221, 222, 224, 225, 228, 233, 234, 235, 239, 240, 241, 242, 245, 248, 249, 250, 251, 253, 254, 255, 257, 258, 261, 266, 267, 268, 272, 273, 274, 275, 278, 281, 282, 283, 284, 286, 287, 288, 290, 291, 294, 299, 300, 301, 305, 306, 307, 308, 311, 314, 315, 316, 317, 319, 320, 321, 323, 324, 327, 332, 333, 334, 338, 339, 340, 341, 344, 347, 348, 349, 350, 352, 353, 354, 356, 357, 360, 365, 366, 367, 371, 372, 373, 374, 377, 380, 381, 382, 384, 386, 387, 388, 390, 391, 394, 399, 400, 401, 405, 406, 407, 408, 411, 414, 415, 416, 417, 419, 420, 421, 423, 424, 427, 432, 433, 434, 438, 439, 440, 441, 444, 447, 448, 449, 450, 452, 453, 454, 456, 457, 460, 465, 466, 467, 471, 472, 473, 474, 477, 480, 481, 482, 483, 485, 486, 487, 489, 490, 493, 498, 499, 500, 504, 505, 506, 507, 510, 513, 514, 515, 516, 517, 518, 519, 521, 522, 526, 528, 529, 533, 537, 539, 540, 545, 547, 548, 549, 553, 554, 555, 556, 559, 561, 562, 563, 564, 565, 567, 568, 571, 572, 573, 574, 575, 576, 577, 580, 582, 583, 588, 589, 592, 596, 597, 598, 603, 604, 609, 610, 614, 624, 630, 631, 634, 635, 638, 639, 643, 644, 645, 646, 647, 648, 649, 712, 713, 720, 765, 771, 800, 804, 811, 894, 895, 896, 919, 921, 922, 923, 925, 929, 930, 936, 937, 939, 940, 943, 945, 946, 947, 948, 949, 951, 952, 955, 958, 960, 961, 962, 964, 968, 969, 975, 976, 978, 979, 982, 984, 985, 986, 987, 988, 990, 991, 996, 998, 999, 1000, 1002, 1006, 1007, 1013, 1014, 1016, 1017, 1020, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1034, 1036, 1037, 1038, 1040, 1044, 1045, 1051, 1052, 1054, 1055, 1058, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1070, 1073, 1075, 1076, 1077, 1079, 1083, 1084, 1085, 1086, 1092, 1093, 1095, 1096, 1099, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1111, 1114, 1116, 1117, 1118, 1120, 1124, 1125, 1131, 1132, 1134, 1135, 1138, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1153, 1155, 1156, 1157, 1159, 1163, 1164, 1170, 1171, 1173, 1174, 1177, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1191, 1193, 1194, 1195, 1197, 1201, 1202, 1208, 1209, 1211, 1212, 1215, 1217, 1218, 1219, 1220, 1221, 1223, 1224, 1229, 1231, 1232, 1233, 1235, 1239, 1240, 1246, 1247, 1249, 1250, 1253, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1268, 1270, 1271, 1272, 1276, 1277, 1278, 1279, 1282, 1284, 1285, 1286, 1287, 1288, 1290, 1291, 1298, 1300, 1301, 1302, 1308, 1309, 1310, 1311, 1314, 1318, 1319, 1320, 1321, 1323, 1324, 1326, 1332, 1334, 1335, 1336, 1342, 1343, 1344, 1345, 1348, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1366, 1368, 1369, 1370, 1376, 1377, 1378, 1379, 1382, 1386, 1387, 1388, 1389, 1391, 1392, 1394, 1398, 1400, 1401, 1402, 1406, 1407, 1408, 1409, 1412, 1414, 1415, 1416, 1417, 1418, 1420, 1421, 1428, 1430, 1431, 1432, 1438, 1439, 1440, 1441, 1444, 1448, 1449, 1450, 1451, 1453, 1454, 1459, 1461, 1462, 1463, 1467, 1468, 1469, 1470, 1473, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1487, 1489, 1490, 1491, 1495, 1496, 1497, 1498, 1501, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1515, 1517, 1518, 1519, 1523, 1524, 1525, 1526, 1529, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1545, 1547, 1548, 1549, 1555, 1556, 1557, 1558, 1561, 1565, 1566, 1567, 1568, 1570, 1571, 1573, 1577, 1579, 1580, 1581, 1585, 1586, 1587, 1588, 1591, 1593, 1594, 1595, 1596, 1597, 1599, 1600, 1607, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1623, 1627, 1628, 1629, 1630, 1632, 1633, 1635, 1639, 1641, 1642, 1643, 1647, 1648, 1649, 1650, 1653, 1655, 1656, 1657, 1658, 1659, 1661, 1662, 1672, 1680, 1685, 1686, 1696, 1698, 1700, 1701, 1705, 1722, 1723, 1734, 1740, 1741, 1743, 1745, 1747, 1757, 1759, 1760, 1765, 1766, 1769, 1771, 1772, 1777, 1778, 1780, 1783, 1785, 1786, 1791, 1792, 1805, 1808, 1810, 1823, 1844, 1847, 1848, 1849, 1854, 1857, 1858, 1859, 1860], "would": [6, 7, 11, 17, 19, 21, 24, 25, 27, 29, 30, 713, 899, 1697, 1722], "overwrit": [6, 24, 29, 30, 32, 59, 60, 89, 90, 119, 120, 121, 122, 151, 152, 184, 185, 217, 219, 249, 250, 282, 283, 315, 316, 348, 349, 381, 382, 415, 416, 448, 449, 481, 482, 514, 515, 563, 576, 825, 947, 986, 1024, 1062, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1505, 1533, 1566, 1595, 1628, 1657], "advantag": [6, 29, 954], "regener": [6, 10, 15, 20, 21, 28, 29, 30, 543, 544, 562, 607, 608, 610, 796, 917, 918, 946, 956, 957, 985, 994, 995, 1023, 1032, 1033, 1061, 1071, 1072, 1102, 1112, 1113, 1141, 1151, 1152, 1180, 1189, 1190, 1218, 1227, 1228, 1256, 1266, 1267, 1285, 1295, 1296, 1318, 1329, 1330, 1352, 1363, 1364, 1386, 1396, 1397, 1415, 1425, 1426, 1448, 1457, 1458, 1476, 1485, 1486, 1504, 1513, 1514, 1532, 1542, 1543, 1565, 1575, 1576, 1594, 1604, 1605, 1627, 1637, 1638, 1656], "programmat": 6, "b": [6, 10, 19, 21, 24, 32, 34, 37, 58, 129, 150, 162, 183, 227, 248, 260, 281, 293, 314, 326, 347, 359, 393, 426, 459, 492, 513, 619, 655, 735, 791, 798, 836, 892, 904, 910, 927, 928, 966, 967, 1004, 1005, 1042, 1043, 1081, 1082, 1122, 1123, 1161, 1162, 1199, 1200, 1237, 1238, 1666, 1668, 1670, 1671, 1672, 1674, 1676, 1678, 1694, 1695, 1719, 1720, 1749], "save": [6, 7, 17, 29, 33, 622, 624, 630, 631, 633, 637, 638, 639, 931, 933, 970, 972, 1008, 1010, 1046, 1048, 1087, 1089, 1126, 1128, 1165, 1167, 1188, 1203, 1205, 1241, 1243, 1692, 1740, 1745, 1845, 1853, 1857, 1858], "file": [6, 14, 25, 33, 35, 618, 619, 622, 623, 624, 626, 630, 631, 632, 633, 635, 636, 637, 638, 639, 1681, 1843, 1852, 1857, 1858], "retain": [6, 32], "parametr": 6, "studi": [6, 10, 27, 32], "easili": [6, 8, 28, 32, 35, 195], "hard": [6, 17], "previous": [6, 29, 35], "revers": [6, 196, 1805, 1823], "look": [6, 8, 10, 17, 21, 22, 24, 27, 28, 29, 30, 31, 35, 195, 718, 825, 843, 865, 954, 1745, 1756, 1852, 1857], "up": [6, 8, 11, 17, 22, 26, 27, 28, 30, 32, 35, 195, 825, 843, 850, 865], "random": [6, 7, 8, 9, 10, 12, 13, 15, 19, 20, 21, 26, 28, 29, 30, 32, 33, 643, 644, 645, 646, 647, 648, 649, 713, 717, 719, 721, 769, 770, 772, 784, 785, 787, 795, 796, 800, 807, 879, 904, 921, 922, 954, 960, 961, 998, 999, 1031, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1226, 1231, 1232, 1713, 1716, 1751], "correspond": [6, 9, 20, 26, 27, 28, 29, 30, 31, 32, 53, 85, 113, 145, 178, 211, 243, 276, 309, 342, 375, 409, 442, 475, 508, 534, 543, 557, 586, 591, 601, 607, 623, 631, 634, 721, 772, 779, 799, 802, 807, 818, 825, 829, 850, 917, 921, 922, 925, 927, 928, 941, 956, 960, 961, 964, 966, 967, 980, 994, 998, 999, 1002, 1004, 1005, 1018, 1032, 1036, 1037, 1040, 1042, 1043, 1056, 1069, 1071, 1075, 1076, 1079, 1081, 1082, 1097, 1112, 1116, 1117, 1120, 1122, 1123, 1136, 1151, 1155, 1156, 1159, 1161, 1162, 1175, 1189, 1193, 1194, 1197, 1199, 1200, 1213, 1227, 1231, 1232, 1235, 1237, 1238, 1251, 1266, 1280, 1295, 1312, 1329, 1346, 1363, 1380, 1396, 1410, 1425, 1442, 1457, 1471, 1485, 1499, 1513, 1527, 1542, 1559, 1575, 1589, 1604, 1621, 1637, 1651, 1684, 1690, 1692, 1717, 1763, 1775, 1789, 1855], "determin": [6, 8, 9, 10, 19, 21, 27, 31, 32, 631, 825, 894, 898, 901, 902, 954, 1700, 1701, 1702, 1703, 1706, 1708, 1870], "cumul": [6, 27, 28, 57, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512], "probabl": [6, 17, 27, 28, 30, 32], "allow": [6, 24, 25, 28, 30, 524, 620, 631, 713, 796, 825, 1327, 1361, 1484, 1698, 1812, 1843], "user": [6, 7, 12, 13, 14, 15, 24, 25, 26, 29, 30, 33, 622, 638, 796, 915, 954, 1031, 1110, 1149, 1188, 1226, 1456, 1698], "instanc": [6, 17, 24, 25, 27, 28, 30, 543, 607, 825, 916, 917, 955, 956, 994, 1032, 1070, 1071, 1111, 1112, 1150, 1151, 1188, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1484, 1485, 1513, 1540, 1542, 1575, 1602, 1604, 1637, 1672, 1680, 1698, 1715, 1806, 1809, 1843], "spatial": [6, 10, 713, 813, 818, 926, 965, 1003, 1041, 1080, 1121, 1160, 1188, 1198, 1236, 1686, 1697, 1699, 1726, 1728], "correl": [6, 711, 713, 798, 835, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 866, 869, 870, 871, 873, 874], "origin": [6, 7, 11, 21, 32, 33, 898, 1707, 1717, 1736, 1738, 1749, 1751, 1808], "make": [6, 7, 8, 15, 17, 21, 24, 25, 27, 28, 29, 30, 31, 32, 50, 51, 52, 55, 82, 83, 84, 87, 109, 110, 111, 115, 142, 143, 144, 147, 175, 176, 177, 180, 207, 208, 209, 213, 240, 241, 242, 245, 273, 274, 275, 278, 306, 307, 308, 311, 339, 340, 341, 344, 372, 373, 374, 377, 406, 407, 408, 411, 439, 440, 441, 444, 472, 473, 474, 477, 505, 506, 507, 510, 554, 555, 556, 559, 572, 573, 574, 575, 892, 894, 904, 937, 939, 940, 943, 976, 978, 979, 982, 1014, 1016, 1017, 1020, 1052, 1054, 1055, 1058, 1093, 1095, 1096, 1099, 1132, 1134, 1135, 1138, 1171, 1173, 1174, 1177, 1209, 1211, 1212, 1215, 1247, 1249, 1250, 1253, 1277, 1278, 1279, 1282, 1309, 1310, 1311, 1314, 1343, 1344, 1345, 1348, 1377, 1378, 1379, 1382, 1407, 1408, 1409, 1412, 1439, 1440, 1441, 1444, 1468, 1469, 1470, 1473, 1496, 1497, 1498, 1501, 1524, 1525, 1526, 1529, 1556, 1557, 1558, 1561, 1586, 1587, 1588, 1591, 1618, 1619, 1620, 1623, 1648, 1649, 1650, 1653, 1681, 1684, 1722, 1724, 1725, 1847], "sure": [6, 8, 19, 28, 32, 35, 1684], "afterward": 6, "pore_se": [6, 15, 28, 29, 717, 769, 795], "num_rang": [6, 15, 28, 29, 643, 644, 645, 646, 647, 648, 649, 712, 720, 765, 771, 804], "99": [6, 25, 28, 32], "ve": [6, 35], "settl": 6, "should": [6, 8, 11, 15, 21, 24, 26, 27, 28, 31, 32, 35, 50, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 82, 83, 84, 87, 88, 89, 90, 92, 109, 110, 111, 115, 116, 119, 120, 121, 122, 124, 142, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 157, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 207, 208, 209, 213, 214, 217, 219, 222, 240, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 255, 273, 274, 275, 278, 279, 280, 282, 283, 284, 285, 286, 288, 306, 307, 308, 311, 312, 313, 315, 316, 317, 318, 319, 321, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 352, 354, 372, 373, 374, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 406, 407, 408, 411, 412, 413, 415, 416, 417, 418, 419, 421, 439, 440, 441, 444, 445, 446, 448, 449, 450, 451, 452, 454, 472, 473, 474, 477, 478, 479, 481, 482, 483, 484, 485, 487, 505, 506, 507, 510, 511, 512, 514, 515, 516, 517, 519, 536, 543, 544, 554, 555, 556, 559, 560, 562, 563, 565, 572, 573, 574, 575, 576, 577, 591, 595, 607, 608, 610, 619, 620, 632, 634, 662, 667, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 696, 699, 703, 704, 706, 710, 713, 784, 785, 805, 806, 825, 898, 901, 902, 917, 918, 926, 937, 939, 940, 943, 944, 946, 947, 949, 955, 956, 957, 965, 976, 978, 979, 982, 983, 985, 986, 988, 994, 995, 1003, 1014, 1016, 1017, 1020, 1021, 1023, 1024, 1026, 1032, 1033, 1041, 1052, 1054, 1055, 1058, 1059, 1061, 1062, 1064, 1071, 1072, 1080, 1083, 1084, 1093, 1095, 1096, 1099, 1100, 1102, 1103, 1105, 1111, 1112, 1113, 1121, 1132, 1134, 1135, 1138, 1139, 1141, 1142, 1144, 1151, 1152, 1160, 1171, 1173, 1174, 1177, 1178, 1180, 1181, 1183, 1189, 1190, 1198, 1209, 1211, 1212, 1215, 1216, 1218, 1219, 1221, 1227, 1228, 1236, 1247, 1249, 1250, 1253, 1254, 1256, 1257, 1259, 1266, 1267, 1277, 1278, 1279, 1282, 1283, 1285, 1286, 1288, 1295, 1296, 1309, 1310, 1311, 1314, 1315, 1318, 1319, 1321, 1329, 1330, 1343, 1344, 1345, 1348, 1349, 1352, 1353, 1355, 1363, 1364, 1377, 1378, 1379, 1382, 1383, 1386, 1387, 1389, 1396, 1397, 1407, 1408, 1409, 1412, 1413, 1415, 1416, 1418, 1425, 1426, 1439, 1440, 1441, 1444, 1445, 1448, 1449, 1451, 1457, 1458, 1468, 1469, 1470, 1473, 1474, 1476, 1477, 1479, 1485, 1486, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1507, 1513, 1514, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1542, 1543, 1556, 1557, 1558, 1561, 1562, 1565, 1566, 1568, 1575, 1576, 1586, 1587, 1588, 1591, 1592, 1594, 1595, 1597, 1604, 1605, 1618, 1619, 1620, 1623, 1624, 1627, 1628, 1630, 1637, 1638, 1648, 1649, 1650, 1653, 1654, 1656, 1657, 1659, 1680, 1681, 1684, 1688, 1692, 1707, 1714, 1715, 1717, 1720, 1727, 1754, 1863], "alwai": [6, 26, 28, 32, 57, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 1031, 1719, 1720], "less": [6, 11, 26, 28, 785], "than": [6, 7, 22, 25, 26, 28, 29, 30, 32, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 98, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 354, 365, 372, 373, 374, 377, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 454, 465, 472, 473, 474, 477, 487, 498, 505, 506, 507, 510, 519, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 636, 734, 829, 832, 856, 874, 923, 927, 931, 933, 937, 939, 940, 943, 949, 962, 966, 970, 972, 976, 978, 979, 982, 988, 1000, 1004, 1008, 1010, 1014, 1016, 1017, 1020, 1026, 1038, 1042, 1046, 1048, 1052, 1054, 1055, 1058, 1064, 1077, 1081, 1087, 1089, 1093, 1095, 1096, 1099, 1105, 1118, 1122, 1126, 1128, 1132, 1134, 1135, 1138, 1144, 1157, 1161, 1165, 1167, 1171, 1173, 1174, 1177, 1183, 1195, 1199, 1203, 1205, 1209, 1211, 1212, 1215, 1221, 1233, 1237, 1241, 1243, 1247, 1249, 1250, 1253, 1259, 1270, 1277, 1278, 1279, 1282, 1288, 1300, 1309, 1310, 1311, 1314, 1321, 1334, 1343, 1344, 1345, 1348, 1355, 1368, 1377, 1378, 1379, 1382, 1389, 1400, 1407, 1408, 1409, 1412, 1418, 1430, 1439, 1440, 1441, 1444, 1451, 1461, 1468, 1469, 1470, 1473, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1547, 1556, 1557, 1558, 1561, 1568, 1579, 1586, 1587, 1588, 1591, 1597, 1609, 1618, 1619, 1620, 1623, 1630, 1641, 1648, 1649, 1650, 1653, 1659, 1691, 1694, 1695], "equal": [6, 7, 21, 24, 26, 790, 896, 901, 902, 954, 1708, 1805, 1823], "thei": [6, 10, 11, 12, 13, 14, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 98, 595, 619, 638, 713, 718, 723, 724, 725, 726, 825, 901, 902, 904, 915, 916, 924, 926, 928, 954, 955, 963, 965, 967, 1001, 1003, 1005, 1039, 1041, 1043, 1069, 1078, 1080, 1082, 1111, 1119, 1121, 1123, 1149, 1150, 1158, 1160, 1162, 1188, 1196, 1198, 1200, 1226, 1234, 1236, 1238, 1297, 1331, 1365, 1427, 1456, 1484, 1544, 1606, 1682, 1708, 1713, 1715, 1720, 1721, 1808, 1809], "connect": [6, 10, 21, 22, 25, 26, 28, 31, 32, 33, 98, 620, 778, 779, 784, 785, 816, 817, 820, 821, 823, 894, 896, 915, 921, 922, 924, 925, 926, 954, 960, 961, 963, 964, 965, 993, 998, 999, 1001, 1002, 1003, 1031, 1036, 1037, 1039, 1040, 1041, 1069, 1075, 1076, 1078, 1079, 1080, 1084, 1110, 1116, 1117, 1119, 1120, 1121, 1149, 1155, 1156, 1158, 1159, 1160, 1188, 1193, 1194, 1196, 1197, 1198, 1226, 1231, 1232, 1234, 1235, 1236, 1681, 1682, 1683, 1684, 1685, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1698, 1705, 1708, 1715, 1716, 1718, 1721, 1722], "otherwis": [6, 53, 67, 85, 93, 113, 125, 145, 158, 178, 191, 211, 223, 243, 256, 276, 289, 309, 322, 342, 355, 375, 389, 409, 422, 442, 455, 475, 488, 508, 520, 534, 538, 557, 566, 586, 601, 636, 847, 872, 926, 938, 941, 950, 965, 977, 980, 989, 1003, 1015, 1018, 1027, 1041, 1053, 1056, 1065, 1080, 1094, 1097, 1106, 1121, 1133, 1136, 1145, 1160, 1172, 1175, 1184, 1198, 1210, 1213, 1222, 1236, 1248, 1251, 1260, 1280, 1289, 1305, 1312, 1322, 1339, 1346, 1356, 1373, 1380, 1390, 1410, 1419, 1435, 1442, 1452, 1471, 1480, 1499, 1508, 1527, 1536, 1552, 1559, 1569, 1589, 1598, 1614, 1621, 1631, 1651, 1660, 1684, 1708, 1741, 1743, 1747, 1763, 1775, 1782, 1789, 1855, 1862, 1870], "re": [6, 15, 17, 28, 30, 35, 117, 712, 720, 771, 801, 804, 825], "realli": [6, 24, 26, 27, 28, 29, 32], "break": [6, 17, 26, 32], "happen": [6, 15, 28, 29, 30, 31, 784, 785], "d": [6, 8, 19, 22, 24, 26, 27, 30, 38, 42, 48, 53, 69, 70, 72, 74, 80, 85, 95, 96, 99, 101, 107, 113, 127, 128, 130, 134, 140, 145, 160, 161, 163, 167, 173, 178, 193, 194, 197, 199, 205, 211, 225, 226, 228, 232, 238, 243, 258, 259, 261, 265, 271, 276, 291, 292, 294, 298, 304, 309, 324, 325, 327, 331, 337, 342, 357, 358, 360, 364, 370, 375, 391, 392, 394, 398, 404, 409, 424, 425, 427, 431, 437, 442, 457, 458, 460, 464, 470, 475, 490, 491, 493, 497, 503, 508, 522, 523, 526, 527, 532, 534, 540, 541, 545, 546, 552, 557, 568, 569, 580, 581, 584, 585, 586, 589, 590, 592, 593, 599, 600, 601, 604, 605, 619, 835, 863, 892, 919, 920, 935, 941, 952, 953, 958, 959, 974, 980, 991, 992, 996, 997, 1012, 1018, 1029, 1030, 1034, 1035, 1050, 1056, 1067, 1068, 1073, 1074, 1091, 1097, 1108, 1109, 1114, 1115, 1130, 1136, 1147, 1148, 1153, 1154, 1169, 1175, 1186, 1187, 1191, 1192, 1207, 1213, 1224, 1225, 1229, 1230, 1245, 1251, 1262, 1263, 1268, 1269, 1275, 1280, 1291, 1292, 1298, 1299, 1307, 1312, 1324, 1325, 1332, 1333, 1341, 1346, 1358, 1359, 1366, 1367, 1375, 1380, 1392, 1393, 1398, 1399, 1405, 1410, 1421, 1422, 1428, 1429, 1437, 1442, 1454, 1455, 1459, 1460, 1466, 1471, 1482, 1483, 1487, 1488, 1494, 1499, 1510, 1511, 1515, 1516, 1522, 1527, 1538, 1539, 1545, 1546, 1554, 1559, 1571, 1572, 1577, 1578, 1584, 1589, 1600, 1601, 1607, 1608, 1616, 1621, 1633, 1634, 1639, 1640, 1646, 1651, 1662, 1663, 1749, 1751, 1757, 1758, 1761, 1762, 1763, 1766, 1767, 1769, 1770, 1773, 1774, 1775, 1780, 1781, 1782, 1783, 1784, 1787, 1788, 1789, 1792, 1793, 1844, 1850, 1851, 1855, 1860, 1861, 1864, 1876], "check": [6, 24, 26, 31, 67, 93, 125, 158, 191, 223, 256, 289, 322, 355, 389, 422, 455, 488, 520, 538, 566, 825, 950, 989, 1027, 1065, 1106, 1145, 1184, 1222, 1260, 1289, 1297, 1322, 1331, 1356, 1365, 1390, 1419, 1427, 1452, 1480, 1508, 1536, 1544, 1569, 1598, 1606, 1631, 1660, 1686, 1698, 1705, 1706, 1709, 1756, 1862, 1863, 1870, 1872], "consist": [6, 11, 22, 26, 31, 619, 623, 687, 702, 1423, 1809], "carefulli": [6, 31, 32, 1715], "ensur": [6, 7, 9, 11, 26, 28, 30, 32, 67, 93, 125, 158, 191, 223, 256, 289, 322, 355, 389, 422, 455, 488, 520, 538, 561, 566, 595, 609, 825, 945, 950, 984, 989, 1022, 1027, 1060, 1065, 1101, 1106, 1140, 1145, 1179, 1184, 1217, 1222, 1255, 1260, 1284, 1289, 1316, 1322, 1350, 1356, 1384, 1390, 1414, 1419, 1446, 1452, 1475, 1480, 1503, 1508, 1531, 1536, 1563, 1569, 1593, 1598, 1625, 1631, 1655, 1660, 1809, 1875], "thoat": 6, "smaller": [6, 28], "provid": [6, 10, 11, 20, 26, 27, 28, 29, 30, 31, 32, 34, 39, 48, 59, 70, 73, 80, 89, 96, 100, 107, 119, 128, 131, 140, 151, 161, 164, 173, 184, 194, 198, 205, 217, 226, 229, 238, 249, 259, 262, 271, 282, 292, 295, 304, 315, 325, 328, 337, 348, 358, 361, 370, 381, 392, 395, 404, 415, 425, 428, 437, 448, 458, 461, 470, 481, 491, 494, 503, 514, 523, 532, 541, 552, 569, 578, 584, 585, 590, 599, 600, 605, 606, 623, 712, 716, 717, 718, 719, 720, 721, 734, 765, 768, 769, 770, 771, 772, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 811, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 935, 953, 974, 992, 993, 1012, 1030, 1050, 1068, 1091, 1109, 1130, 1148, 1169, 1187, 1207, 1225, 1245, 1263, 1275, 1292, 1307, 1325, 1326, 1341, 1359, 1360, 1375, 1393, 1394, 1405, 1422, 1437, 1455, 1466, 1483, 1484, 1494, 1511, 1522, 1539, 1554, 1572, 1573, 1584, 1601, 1616, 1634, 1635, 1646, 1663, 1692, 1696, 1698, 1718, 1761, 1762, 1767, 1773, 1774, 1781, 1787, 1788, 1793, 1806, 1843, 1850, 1851, 1858, 1861, 1867, 1868], "call": [6, 8, 10, 11, 13, 15, 17, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 58, 59, 67, 89, 93, 119, 125, 150, 151, 158, 183, 184, 191, 217, 223, 248, 249, 256, 281, 282, 289, 314, 315, 322, 347, 348, 355, 380, 381, 389, 414, 415, 422, 447, 448, 455, 480, 481, 488, 513, 514, 520, 524, 538, 543, 561, 566, 579, 591, 595, 607, 609, 721, 772, 807, 825, 917, 945, 950, 956, 984, 989, 994, 1022, 1027, 1032, 1060, 1065, 1071, 1101, 1106, 1112, 1140, 1145, 1151, 1179, 1184, 1189, 1217, 1222, 1227, 1255, 1260, 1266, 1284, 1289, 1295, 1316, 1317, 1322, 1329, 1350, 1351, 1356, 1363, 1384, 1385, 1390, 1396, 1414, 1419, 1425, 1446, 1447, 1452, 1457, 1475, 1480, 1485, 1503, 1508, 1513, 1531, 1536, 1542, 1563, 1564, 1569, 1575, 1593, 1598, 1604, 1625, 1626, 1631, 1637, 1655, 1660], "from_neighbor_por": [6, 28, 29, 643, 644, 645, 646, 647, 648, 649], "either": [6, 13, 19, 21, 24, 26, 27, 28, 30, 31, 32, 67, 69, 93, 95, 98, 125, 127, 158, 160, 191, 193, 223, 225, 256, 258, 289, 291, 322, 324, 355, 357, 389, 391, 422, 424, 455, 457, 459, 488, 490, 520, 522, 538, 540, 566, 568, 589, 604, 622, 799, 836, 898, 950, 952, 989, 991, 1027, 1029, 1031, 1065, 1067, 1069, 1106, 1108, 1145, 1147, 1184, 1186, 1222, 1224, 1226, 1260, 1262, 1289, 1291, 1294, 1317, 1322, 1324, 1328, 1351, 1356, 1358, 1362, 1385, 1390, 1392, 1419, 1421, 1424, 1447, 1452, 1454, 1480, 1482, 1508, 1510, 1536, 1538, 1541, 1564, 1569, 1571, 1598, 1600, 1603, 1626, 1631, 1633, 1660, 1662, 1680, 1684, 1687, 1690, 1692, 1707, 1710, 1734, 1745, 1766, 1780, 1792, 1806, 1841, 1860], "minimum": [6, 28, 716, 765, 768, 793, 794, 899, 1713, 1716], "mayb": 6, "down": [6, 17, 22, 26, 32], "distinct": 6, "demonstr": [6, 12, 20, 27, 28, 29, 30, 31, 32, 33], "min": [6, 28, 29, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 551, 643, 644, 645, 646, 647, 648, 649, 716, 764, 765, 768, 793, 794, 934, 973, 1011, 1049, 1090, 1129, 1168, 1206, 1244, 1274, 1306, 1340, 1374, 1404, 1436, 1465, 1493, 1521, 1553, 1583, 1615, 1645], "throat_siz": [6, 28, 29], "diameter_2": 6, "carefuli": 6, "chosen": [6, 30, 1715], "reason": [6, 11, 15, 17, 20, 22, 24, 27, 28, 30, 31], "mention": [6, 21], "If": [6, 17, 19, 21, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 49, 50, 51, 52, 53, 55, 57, 59, 61, 62, 64, 66, 68, 69, 73, 81, 82, 83, 84, 85, 87, 89, 92, 94, 95, 100, 108, 109, 110, 111, 113, 115, 119, 120, 122, 124, 126, 127, 131, 141, 142, 143, 144, 145, 147, 149, 151, 153, 155, 157, 159, 160, 164, 174, 175, 176, 177, 178, 180, 182, 184, 186, 188, 190, 192, 193, 198, 206, 207, 208, 209, 211, 213, 217, 222, 224, 225, 227, 229, 239, 240, 241, 242, 243, 245, 247, 249, 251, 253, 255, 257, 258, 262, 272, 273, 274, 275, 276, 278, 280, 282, 284, 286, 288, 290, 291, 295, 305, 306, 307, 308, 309, 311, 313, 315, 317, 319, 321, 323, 324, 328, 338, 339, 340, 341, 342, 344, 346, 348, 350, 352, 354, 356, 357, 361, 371, 372, 373, 374, 375, 377, 379, 380, 381, 383, 384, 386, 388, 390, 391, 395, 405, 406, 407, 408, 409, 411, 413, 414, 415, 417, 419, 421, 423, 424, 428, 438, 439, 440, 441, 442, 444, 446, 447, 448, 450, 452, 454, 456, 457, 461, 471, 472, 473, 474, 475, 477, 479, 480, 481, 483, 485, 487, 489, 490, 494, 504, 505, 506, 507, 508, 510, 512, 514, 516, 517, 519, 521, 522, 533, 534, 539, 540, 543, 553, 554, 555, 556, 557, 559, 561, 565, 567, 568, 572, 573, 574, 575, 577, 586, 589, 601, 604, 607, 609, 615, 623, 634, 636, 638, 718, 765, 768, 791, 793, 811, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 847, 850, 852, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 870, 871, 872, 873, 874, 880, 894, 898, 904, 915, 917, 921, 922, 924, 926, 927, 928, 931, 933, 936, 937, 938, 939, 940, 941, 943, 945, 949, 951, 952, 954, 956, 960, 961, 963, 965, 966, 967, 970, 972, 975, 976, 977, 978, 979, 980, 982, 984, 988, 990, 991, 993, 994, 998, 999, 1001, 1003, 1004, 1005, 1008, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1022, 1026, 1028, 1029, 1031, 1032, 1036, 1037, 1039, 1041, 1042, 1043, 1046, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1060, 1064, 1066, 1067, 1071, 1075, 1076, 1078, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1101, 1105, 1107, 1108, 1110, 1112, 1116, 1117, 1119, 1121, 1122, 1123, 1126, 1128, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1144, 1146, 1147, 1149, 1151, 1155, 1156, 1158, 1160, 1161, 1162, 1165, 1167, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1183, 1185, 1186, 1188, 1189, 1193, 1194, 1196, 1198, 1199, 1200, 1203, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1221, 1223, 1224, 1226, 1227, 1231, 1232, 1234, 1236, 1237, 1238, 1241, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1255, 1259, 1261, 1262, 1266, 1276, 1277, 1278, 1279, 1280, 1282, 1284, 1288, 1290, 1291, 1295, 1305, 1308, 1309, 1310, 1311, 1312, 1314, 1316, 1321, 1323, 1324, 1326, 1329, 1339, 1342, 1343, 1344, 1345, 1346, 1348, 1350, 1355, 1357, 1358, 1360, 1363, 1373, 1376, 1377, 1378, 1379, 1380, 1382, 1384, 1389, 1391, 1392, 1394, 1396, 1406, 1407, 1408, 1409, 1410, 1412, 1414, 1418, 1420, 1421, 1425, 1435, 1438, 1439, 1440, 1441, 1442, 1444, 1446, 1451, 1453, 1454, 1457, 1467, 1468, 1469, 1470, 1471, 1473, 1475, 1479, 1481, 1482, 1484, 1485, 1495, 1496, 1497, 1498, 1499, 1501, 1503, 1507, 1509, 1510, 1513, 1523, 1524, 1525, 1526, 1527, 1529, 1531, 1535, 1537, 1538, 1542, 1552, 1555, 1556, 1557, 1558, 1559, 1561, 1563, 1568, 1570, 1571, 1573, 1575, 1585, 1586, 1587, 1588, 1589, 1591, 1593, 1597, 1599, 1600, 1604, 1614, 1617, 1618, 1619, 1620, 1621, 1623, 1625, 1630, 1632, 1633, 1635, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1655, 1659, 1661, 1662, 1680, 1684, 1685, 1686, 1690, 1691, 1694, 1695, 1696, 1698, 1699, 1705, 1707, 1708, 1719, 1720, 1721, 1722, 1741, 1743, 1747, 1756, 1763, 1766, 1775, 1780, 1782, 1789, 1792, 1805, 1808, 1823, 1831, 1838, 1847, 1854, 1855, 1857, 1858, 1860, 1867, 1868], "some": [6, 10, 11, 12, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 524, 578, 615, 805, 825, 899, 901, 902, 1188, 1484, 1698, 1720, 1722], "unhappi": 6, "reduc": [6, 11, 29, 32, 129, 1685], "small": [6, 14, 19, 27, 28, 32, 631], "after": [6, 7, 8, 10, 22, 28, 30, 32, 33, 638, 718, 1687], "illustr": [6, 10, 21, 24, 25, 26, 27, 28, 30, 31, 32, 717, 719, 721, 769, 770, 772, 795, 800, 807, 1722], "power": [6, 21, 28, 29, 32, 713, 847, 872, 1305, 1339, 1373, 1435, 1552, 1614], "util": [6, 28, 30, 1782, 1794, 1869], "properli": [6, 7, 35], "instead": [6, 15, 19, 22, 24, 27, 28, 29, 30, 31, 1733, 1735, 1737, 1739, 1742, 1744, 1746, 1748, 1750, 1752, 1753, 1755], "essenti": [6, 26, 27, 28, 29, 524, 620, 1682, 1699, 1720, 1721], "done": [6, 8, 10, 17, 19, 24, 25, 26, 27, 28, 31, 32, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 551, 635, 825, 934, 973, 1011, 1049, 1090, 1129, 1168, 1206, 1244, 1274, 1306, 1340, 1374, 1404, 1436, 1465, 1493, 1521, 1553, 1583, 1615, 1645], "plot": [6, 7, 10, 12, 13, 25, 27, 28, 29, 32], "itself": [6, 17, 27, 28, 58, 150, 183, 248, 281, 314, 347, 513, 578, 1685, 1805, 1823, 1833, 1840, 1842], "ahould": 6, "ideal": [6, 24, 825, 828], "paraview": [6, 25, 35, 637, 638], "plot_networkx": 6, "ig": 6, "fri": 7, "combarn": 7, "1971": 7, "longitudin": 7, "c_": [7, 21, 129, 901, 902], "erfc": 7, "bigl": 7, "ut": 7, "d_": [7, 8, 9, 12, 19, 22, 129, 687], "bigr": 7, "exp": [7, 901, 902, 907], "ux": 7, "time": [7, 8, 11, 17, 22, 24, 26, 27, 28, 29, 32, 33, 195, 380, 414, 447, 480, 543, 607, 615, 712, 720, 771, 804, 917, 956, 994, 1032, 1071, 1112, 1151, 1188, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1692, 1858], "u": [7, 24, 25, 27], "averag": [7, 8, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 551, 713, 737, 738, 838, 840, 843, 896, 934, 973, 1011, 1049, 1090, 1129, 1168, 1206, 1244, 1274, 1306, 1340, 1374, 1404, 1436, 1465, 1493, 1521, 1553, 1583, 1615, 1645, 1716], "veloc": 7, "concentr": [7, 8, 9, 19, 21, 22, 26, 33, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 850, 852, 901, 902], "complementari": 7, "error": [7, 11, 21, 24, 26, 28, 30, 63, 154, 187, 252, 285, 318, 351, 385, 418, 451, 484], "implement": [7, 12, 21, 26, 30, 260, 492, 825, 895, 896], "fit": [7, 8, 30], "special": [7, 11, 28, 31, 32, 1484], "optim": [7, 195, 1083, 1084], "curve_fit": 7, "2d": [7, 29, 624, 662, 667, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 696, 699, 703, 704, 706, 710, 762, 777, 954, 1031, 1069, 1226, 1699, 1707, 1719, 1724], "3d": [7, 29, 631, 713, 1031, 1699, 1707, 1719, 1720], "well": [7, 8, 19, 22, 25, 26, 27, 28, 29, 30, 31, 32, 61, 383, 619, 903, 905, 906, 907, 908, 909, 910, 931, 933, 970, 972, 1008, 1010, 1031, 1046, 1048, 1084, 1087, 1089, 1126, 1128, 1165, 1167, 1203, 1205, 1226, 1241, 1243, 1699, 1729], "etc": [7, 8, 12, 13, 22, 26, 29, 31, 33, 803, 825, 1713], "entri": [7, 12, 13, 19, 21, 27, 28, 32, 195, 591, 802, 825, 879, 880, 894, 931, 970, 1008, 1046, 1087, 1126, 1165, 1203, 1241, 1756, 1862, 1870], "40": [7, 10, 29, 31, 32, 33, 856, 892], "38": [7, 9, 10, 13, 25, 32, 735], "05": [7, 28, 30, 33, 652, 655, 850], "electrical_conduct": [7, 659, 887, 888], "accumul": 7, "mass": [7, 19, 21, 22, 31, 828, 831, 844, 849, 901], "occur": [7, 17, 26, 28, 30, 31, 32, 129, 195, 1719], "order": [7, 21, 26, 27, 28, 30, 32, 54, 59, 86, 89, 114, 119, 146, 151, 179, 184, 195, 212, 217, 244, 249, 277, 282, 310, 315, 343, 348, 376, 381, 410, 415, 443, 448, 476, 481, 509, 514, 535, 558, 561, 587, 591, 595, 602, 609, 802, 894, 924, 928, 942, 945, 963, 967, 981, 984, 1001, 1005, 1019, 1022, 1039, 1043, 1057, 1060, 1078, 1082, 1098, 1101, 1119, 1123, 1137, 1140, 1158, 1162, 1176, 1179, 1196, 1200, 1214, 1217, 1234, 1238, 1252, 1255, 1281, 1284, 1313, 1316, 1347, 1350, 1381, 1384, 1411, 1414, 1443, 1446, 1472, 1475, 1500, 1503, 1528, 1531, 1560, 1563, 1590, 1593, 1622, 1625, 1652, 1655, 1698, 1716, 1764, 1776, 1790, 1805, 1823, 1856], "surround": [7, 879], "its": [7, 11, 12, 22, 25, 28, 30, 32, 33, 98, 814, 815, 825, 836, 854, 855, 1683], "def": [7, 12, 13, 15, 24, 30, 1749, 1751, 1869], "effective_pore_volum": 7, "throat_volum": [7, 11, 28, 730], "pore_volum": [7, 11, 28, 29, 715, 730], "pvol": 7, "tvol": 7, "vtot": 7, "sum": [7, 8, 11, 12, 13, 24, 27, 28, 31, 57, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 806, 848, 938, 977, 1015, 1053, 1094, 1133, 1172, 1210, 1248], "assert": 7, "isclos": 7, "effective_volum": 7, "field": [7, 1864, 1876], "therefor": [7, 9, 11, 12, 13, 20, 22, 26, 32, 619, 666, 668, 901, 902], "netwok": 7, "prior": [7, 32], "advectiondiffus": [7, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "algorthim": 7, "50": [7, 10, 11, 22, 27, 28, 30, 32, 717, 719, 721, 769, 770, 772, 795, 800, 807], "rang": [7, 12, 13, 15, 24, 28, 32, 34, 1699, 1802, 1820], "timestep": 7, "tell": [7, 17, 21, 24, 27, 28, 32], "rather": [7, 21, 28, 32, 829, 927, 966, 1004, 1042, 1081, 1122, 1161, 1199, 1237, 1691, 1694, 1695], "default": [7, 20, 24, 29, 30, 31, 33, 35, 43, 45, 50, 56, 57, 59, 60, 61, 62, 63, 64, 65, 75, 77, 82, 88, 89, 90, 91, 102, 104, 109, 116, 119, 120, 121, 122, 123, 135, 137, 142, 148, 149, 151, 152, 153, 154, 155, 156, 168, 170, 175, 181, 182, 184, 185, 186, 187, 188, 189, 200, 202, 207, 214, 217, 219, 221, 233, 235, 240, 246, 247, 249, 250, 251, 252, 253, 254, 260, 266, 268, 273, 279, 280, 282, 283, 284, 285, 286, 287, 299, 301, 306, 312, 313, 315, 316, 317, 318, 319, 320, 332, 334, 339, 345, 346, 348, 349, 350, 351, 352, 353, 365, 367, 372, 378, 379, 381, 382, 383, 384, 385, 386, 387, 399, 401, 406, 412, 413, 415, 416, 417, 418, 419, 420, 432, 434, 439, 445, 446, 448, 449, 450, 451, 452, 453, 465, 467, 472, 478, 479, 481, 482, 483, 484, 485, 486, 498, 500, 505, 511, 512, 514, 515, 516, 517, 518, 529, 536, 537, 543, 544, 547, 549, 554, 560, 563, 564, 571, 572, 576, 583, 588, 594, 598, 603, 607, 608, 619, 626, 631, 632, 634, 635, 636, 638, 639, 712, 715, 716, 718, 720, 765, 767, 768, 771, 790, 793, 794, 804, 825, 847, 872, 894, 898, 915, 917, 918, 921, 922, 923, 924, 926, 927, 928, 930, 931, 933, 937, 938, 944, 947, 948, 954, 956, 957, 960, 961, 962, 963, 965, 966, 967, 969, 970, 972, 976, 977, 983, 986, 987, 994, 995, 998, 999, 1000, 1001, 1003, 1004, 1005, 1007, 1008, 1010, 1014, 1015, 1021, 1024, 1025, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1045, 1046, 1048, 1052, 1053, 1059, 1062, 1063, 1069, 1071, 1072, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1086, 1087, 1089, 1093, 1094, 1100, 1103, 1104, 1110, 1112, 1113, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1125, 1126, 1128, 1132, 1133, 1139, 1142, 1143, 1149, 1151, 1152, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1164, 1165, 1167, 1171, 1172, 1178, 1181, 1182, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1202, 1203, 1205, 1209, 1210, 1216, 1219, 1220, 1226, 1227, 1228, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1240, 1241, 1243, 1247, 1248, 1254, 1257, 1258, 1266, 1267, 1270, 1272, 1277, 1283, 1286, 1287, 1295, 1296, 1300, 1302, 1305, 1309, 1315, 1319, 1320, 1329, 1330, 1334, 1336, 1339, 1343, 1349, 1353, 1354, 1363, 1364, 1368, 1370, 1373, 1377, 1383, 1387, 1388, 1396, 1397, 1400, 1402, 1407, 1413, 1416, 1417, 1425, 1426, 1430, 1432, 1435, 1439, 1445, 1449, 1450, 1457, 1458, 1461, 1463, 1468, 1474, 1477, 1478, 1485, 1486, 1489, 1491, 1496, 1502, 1505, 1506, 1513, 1514, 1517, 1519, 1524, 1530, 1533, 1534, 1542, 1543, 1547, 1549, 1552, 1556, 1562, 1566, 1567, 1575, 1576, 1579, 1581, 1586, 1592, 1595, 1596, 1604, 1605, 1609, 1611, 1614, 1618, 1624, 1628, 1629, 1637, 1638, 1641, 1643, 1648, 1654, 1657, 1658, 1672, 1680, 1683, 1684, 1685, 1686, 1691, 1694, 1695, 1698, 1713, 1722, 1760, 1765, 1772, 1777, 1786, 1791, 1802, 1820, 1849, 1859], "which": [7, 8, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 43, 49, 57, 71, 75, 81, 98, 102, 108, 120, 122, 129, 135, 141, 149, 168, 174, 182, 195, 200, 206, 227, 233, 239, 247, 266, 272, 280, 293, 299, 305, 313, 332, 338, 346, 365, 371, 379, 380, 399, 405, 413, 414, 432, 438, 446, 447, 459, 465, 471, 479, 480, 492, 498, 504, 512, 524, 525, 533, 543, 544, 547, 553, 562, 571, 591, 595, 596, 607, 608, 610, 615, 619, 631, 634, 636, 638, 687, 702, 712, 716, 717, 718, 719, 720, 721, 765, 768, 769, 770, 771, 772, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 811, 813, 818, 820, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 917, 918, 921, 922, 923, 925, 926, 936, 946, 954, 956, 957, 960, 961, 962, 964, 965, 975, 985, 994, 995, 998, 999, 1000, 1002, 1003, 1013, 1023, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1051, 1061, 1069, 1071, 1072, 1075, 1076, 1077, 1079, 1080, 1092, 1102, 1112, 1113, 1116, 1117, 1118, 1120, 1121, 1131, 1141, 1149, 1151, 1152, 1155, 1156, 1157, 1159, 1160, 1170, 1180, 1188, 1189, 1190, 1193, 1194, 1195, 1197, 1198, 1208, 1218, 1226, 1227, 1228, 1231, 1232, 1233, 1235, 1236, 1246, 1256, 1265, 1266, 1267, 1270, 1276, 1285, 1294, 1295, 1296, 1300, 1308, 1318, 1327, 1328, 1329, 1330, 1334, 1342, 1352, 1361, 1362, 1363, 1364, 1368, 1376, 1386, 1396, 1397, 1400, 1406, 1415, 1423, 1424, 1425, 1426, 1430, 1438, 1448, 1456, 1457, 1458, 1461, 1467, 1476, 1484, 1485, 1486, 1489, 1495, 1504, 1513, 1514, 1517, 1523, 1532, 1541, 1542, 1543, 1547, 1555, 1565, 1575, 1576, 1579, 1585, 1594, 1603, 1604, 1605, 1609, 1617, 1627, 1636, 1637, 1638, 1641, 1647, 1656, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1691, 1696, 1697, 1698, 1707, 1708, 1713, 1714, 1715, 1716, 1718, 1720, 1721, 1722, 1723, 1727, 1736, 1738, 1741, 1743, 1747, 1749, 1751, 1754, 1806, 1852, 1857, 1862, 1863], "interv": [7, 380, 414, 447, 480, 615], "integr": [7, 22, 31, 380, 414, 447, 480, 615], "span": [7, 380, 414, 447, 480, 1708, 1716], "tspan": [7, 380, 414, 447, 480, 615], "mod": [7, 28], "ad_dif_conduct": [7, 659], "ad_dif": [7, 659], "s_scheme": [7, 877], "powerlaw": [7, 877], "transientadvectiondiffus": [7, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "_updat": [7, 12, 13], "set_outflow_bc": 7, "100": [7, 8, 9, 11, 24, 25, 32, 928, 967, 1005, 1043, 1082, 1123, 1162, 1200, 1238], "saveat": [7, 380, 414, 447, 480, 615], "x0": [7, 58, 150, 183, 248, 281, 314, 347, 380, 414, 447, 480, 513, 615, 1672], "ps_front": 7, "ts_front": 7, "find_neighbor_throat": [7, 27, 29, 32, 938, 977, 1015, 1053, 1094, 1133, 1172, 1188, 1210, 1248], "xor": [7, 27, 29, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 354, 365, 372, 373, 374, 377, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 454, 465, 472, 473, 474, 477, 487, 498, 505, 506, 507, 510, 519, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 923, 924, 927, 928, 937, 938, 939, 940, 943, 949, 962, 963, 966, 967, 976, 977, 978, 979, 982, 988, 1000, 1001, 1004, 1005, 1014, 1015, 1016, 1017, 1020, 1026, 1038, 1039, 1042, 1043, 1052, 1053, 1054, 1055, 1058, 1064, 1077, 1078, 1081, 1082, 1093, 1094, 1095, 1096, 1099, 1105, 1118, 1119, 1122, 1123, 1132, 1133, 1134, 1135, 1138, 1144, 1157, 1158, 1161, 1162, 1171, 1172, 1173, 1174, 1177, 1183, 1195, 1196, 1199, 1200, 1209, 1210, 1211, 1212, 1215, 1221, 1233, 1234, 1237, 1238, 1247, 1248, 1249, 1250, 1253, 1259, 1270, 1277, 1278, 1279, 1282, 1288, 1300, 1309, 1310, 1311, 1314, 1321, 1334, 1343, 1344, 1345, 1348, 1355, 1368, 1377, 1378, 1379, 1382, 1389, 1400, 1407, 1408, 1409, 1412, 1418, 1430, 1439, 1440, 1441, 1444, 1451, 1461, 1468, 1469, 1470, 1473, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1547, 1556, 1557, 1558, 1561, 1568, 1579, 1586, 1587, 1588, 1591, 1597, 1609, 1618, 1619, 1620, 1623, 1630, 1641, 1648, 1649, 1650, 1653, 1659, 1691, 1694, 1695], "count": [7, 28, 51, 52, 83, 84, 110, 111, 143, 144, 176, 177, 208, 209, 241, 242, 274, 275, 307, 308, 340, 341, 373, 374, 407, 408, 440, 441, 473, 474, 506, 507, 555, 556, 573, 574, 619, 734, 813, 924, 927, 928, 938, 939, 940, 963, 966, 967, 977, 978, 979, 1001, 1004, 1005, 1015, 1016, 1017, 1039, 1042, 1043, 1053, 1054, 1055, 1078, 1081, 1082, 1094, 1095, 1096, 1119, 1122, 1123, 1133, 1134, 1135, 1158, 1161, 1162, 1172, 1173, 1174, 1196, 1199, 1200, 1210, 1211, 1212, 1234, 1237, 1238, 1248, 1249, 1250, 1278, 1279, 1310, 1311, 1344, 1345, 1378, 1379, 1408, 1409, 1440, 1441, 1469, 1470, 1497, 1498, 1525, 1526, 1557, 1558, 1587, 1588, 1619, 1620, 1649, 1650, 1713], "c_avg": 7, "ti": 7, "c_front": 7, "q_front": 7, "append": [7, 12, 13, 24, 29, 30, 1688, 1722, 1799, 1817], "o": [7, 10, 12, 13, 29, 32, 33, 1852, 1857], "legend": [7, 12, 13, 29, 32], "set_xlabel": [7, 29], "set_ylabel": [7, 29], "being": [7, 13, 21, 24, 29, 30, 32, 63, 154, 187, 252, 285, 318, 351, 385, 418, 451, 484, 543, 607, 636, 798, 802, 917, 921, 922, 956, 960, 961, 994, 998, 999, 1032, 1036, 1037, 1071, 1075, 1076, 1112, 1116, 1117, 1151, 1155, 1156, 1189, 1193, 1194, 1227, 1231, 1232, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1852, 1870], "effictivli": 7, "fittiong": 7, "v": [7, 27, 28, 30, 53, 69, 85, 95, 113, 127, 145, 160, 178, 193, 210, 211, 225, 243, 258, 276, 291, 309, 324, 342, 357, 375, 391, 409, 424, 442, 457, 475, 490, 508, 522, 534, 540, 557, 568, 586, 589, 601, 604, 734, 901, 902, 941, 952, 980, 991, 1018, 1029, 1056, 1067, 1097, 1108, 1136, 1147, 1175, 1186, 1213, 1224, 1251, 1262, 1280, 1291, 1312, 1324, 1346, 1358, 1380, 1392, 1410, 1421, 1442, 1454, 1471, 1482, 1499, 1510, 1527, 1538, 1559, 1571, 1589, 1600, 1621, 1633, 1651, 1662, 1763, 1766, 1775, 1780, 1789, 1792, 1855, 1860], "dl": 7, "el1": 7, "el2": 7, "el3": 7, "v_pred": 7, "q_throat": 7, "a_throat": 7, "v_throat": 7, "g": [7, 19, 22, 25, 28, 29, 30, 32, 35, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 543, 551, 607, 620, 627, 634, 735, 736, 828, 830, 831, 832, 850, 856, 859, 861, 862, 863, 867, 870, 871, 873, 874, 879, 901, 902, 915, 916, 917, 934, 955, 956, 973, 994, 1011, 1032, 1049, 1070, 1071, 1090, 1111, 1112, 1129, 1149, 1150, 1151, 1168, 1189, 1206, 1227, 1244, 1266, 1274, 1295, 1306, 1329, 1340, 1363, 1374, 1396, 1404, 1425, 1436, 1457, 1465, 1485, 1493, 1513, 1521, 1542, 1553, 1575, 1583, 1604, 1615, 1637, 1645, 1686, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1702, 1703, 1707, 1736, 1749, 1847, 1854], "xdata": 7, "float": [7, 19, 27, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 352, 380, 384, 386, 414, 417, 419, 447, 450, 452, 480, 483, 485, 516, 517, 615, 631, 719, 721, 770, 772, 789, 798, 800, 801, 807, 813, 818, 836, 879, 894, 898, 899, 901, 902, 1294, 1328, 1362, 1424, 1541, 1603, 1691, 1722, 1749, 1751, 1870], "ydata": 7, "popt": 7, "pcov": 7, "p0": 7, "disp_coeff": 7, "v_fit": 7, "4e": [7, 25], "m": [7, 20, 22, 28, 34, 619, 655, 735, 798, 830, 831, 832, 836, 855, 856, 862, 863, 867, 874, 901, 902], "6581e": 7, "09": [7, 9, 11, 28], "3610e": 7, "04": 7, "0669e": 7, "el": 7, "zero": [7, 19, 26, 27, 32, 620, 666, 668, 898, 901, 902, 915, 921, 922, 931, 933, 954, 960, 961, 970, 972, 993, 998, 999, 1008, 1010, 1031, 1036, 1037, 1046, 1048, 1069, 1075, 1076, 1087, 1089, 1110, 1116, 1117, 1126, 1128, 1149, 1155, 1156, 1165, 1167, 1188, 1193, 1194, 1203, 1205, 1226, 1231, 1232, 1241, 1243, 1692], "len": [7, 11, 13, 28, 31, 543, 607, 647, 744, 782, 785, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1697], "torutous": 8, "complic": [8, 17, 19, 27, 28, 29, 30, 32], "multipli": [8, 24, 896, 898, 1681], "divid": [8, 13], "eff": [8, 9, 12, 129], "epsilon": [8, 834], "tau": 8, "correct": [8, 9, 11, 20, 22, 27, 28, 29, 31, 543, 561, 562, 607, 609, 610, 734, 877, 883, 917, 945, 946, 956, 984, 985, 994, 1022, 1023, 1032, 1060, 1061, 1071, 1101, 1102, 1112, 1140, 1141, 1151, 1179, 1180, 1189, 1217, 1218, 1227, 1255, 1256, 1266, 1284, 1285, 1295, 1316, 1318, 1329, 1350, 1352, 1363, 1384, 1386, 1396, 1414, 1415, 1425, 1446, 1448, 1457, 1475, 1476, 1485, 1503, 1504, 1513, 1531, 1532, 1542, 1563, 1565, 1575, 1593, 1594, 1604, 1625, 1627, 1637, 1655, 1656], "windi": 8, "path": [8, 10, 619, 623, 633, 637, 778, 779, 1696, 1852, 1853, 1857], "matter": 8, "move": [8, 57, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 1680, 1685], "substanc": 8, "classic": [8, 195], "definit": [8, 15, 21, 22, 30, 61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 352, 383, 384, 386, 417, 419, 450, 452, 483, 485, 516, 517, 1226, 1843], "actual": [8, 15, 17, 21, 22, 24, 26, 27, 28, 29, 30, 32, 619, 630, 634, 721, 725, 772, 807, 899, 1698, 1858], "realiti": [8, 22, 30], "mani": [8, 15, 19, 24, 28, 30, 631, 799, 825, 879, 895, 954], "pathwai": 8, "thought": [8, 26, 32], "l_": 8, "repres": [8, 27, 29, 32, 615, 687, 702, 721, 772, 807, 829, 901, 902, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1423, 1484, 1681, 1682, 1719, 1721], "microstructur": 8, "materi": [8, 10, 12, 13, 25, 32, 57, 129, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 880, 1877], "toray090": 8, "carbon": 8, "paper": 8, "sand": [8, 32], "stone": 8, "electrospun": 8, "fiber": 8, "sphere": [8, 10, 11, 22, 25, 28, 29, 33, 644, 646, 647, 672, 685, 687, 700, 702, 715, 744, 756, 879, 1725], "cylind": [8, 10, 11, 22, 25, 28, 644, 647, 663, 665, 672, 677, 679, 685, 687, 692, 694, 700, 702, 744, 747, 749, 756, 879, 895, 1724], "all": [8, 10, 15, 17, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 43, 50, 51, 52, 55, 56, 59, 60, 61, 62, 63, 64, 66, 72, 73, 75, 82, 83, 84, 87, 88, 89, 90, 92, 98, 99, 100, 102, 109, 110, 111, 115, 116, 119, 120, 121, 122, 124, 130, 131, 132, 133, 135, 142, 143, 144, 147, 148, 151, 152, 153, 154, 155, 157, 163, 164, 165, 166, 168, 175, 176, 177, 180, 181, 184, 185, 186, 187, 188, 190, 195, 197, 198, 200, 207, 208, 209, 213, 214, 217, 219, 222, 228, 229, 230, 231, 233, 240, 241, 242, 245, 246, 249, 250, 251, 252, 253, 255, 261, 262, 263, 264, 266, 273, 274, 275, 278, 279, 282, 283, 284, 285, 286, 288, 294, 295, 296, 297, 299, 306, 307, 308, 311, 312, 315, 316, 317, 318, 319, 321, 327, 328, 329, 330, 332, 339, 340, 341, 344, 345, 348, 349, 350, 351, 352, 354, 360, 361, 362, 363, 365, 372, 373, 374, 377, 378, 381, 382, 383, 384, 385, 386, 388, 394, 395, 396, 397, 399, 406, 407, 408, 411, 412, 415, 416, 417, 418, 419, 421, 427, 428, 429, 430, 432, 439, 440, 441, 444, 445, 448, 449, 450, 451, 452, 454, 460, 461, 462, 463, 465, 472, 473, 474, 477, 478, 481, 482, 483, 484, 485, 487, 493, 494, 495, 496, 498, 505, 506, 507, 510, 511, 514, 515, 516, 517, 519, 524, 526, 536, 543, 544, 545, 547, 554, 555, 556, 559, 560, 561, 562, 563, 565, 571, 572, 573, 574, 575, 576, 577, 580, 591, 592, 607, 608, 609, 610, 623, 627, 633, 634, 636, 717, 718, 730, 769, 787, 795, 796, 825, 904, 917, 918, 919, 921, 922, 923, 924, 926, 927, 928, 937, 938, 939, 940, 943, 944, 945, 946, 947, 949, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 976, 977, 978, 979, 982, 983, 984, 985, 986, 988, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1026, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1062, 1064, 1069, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1093, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1103, 1105, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1132, 1133, 1134, 1135, 1138, 1139, 1140, 1141, 1142, 1144, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1171, 1172, 1173, 1174, 1177, 1178, 1179, 1180, 1181, 1183, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1221, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1259, 1266, 1267, 1268, 1270, 1277, 1278, 1279, 1282, 1283, 1284, 1285, 1286, 1288, 1295, 1296, 1297, 1298, 1300, 1309, 1310, 1311, 1314, 1315, 1316, 1318, 1319, 1321, 1326, 1329, 1330, 1331, 1332, 1334, 1343, 1344, 1345, 1348, 1349, 1350, 1352, 1353, 1355, 1360, 1363, 1364, 1365, 1366, 1368, 1377, 1378, 1379, 1382, 1383, 1384, 1386, 1387, 1389, 1394, 1396, 1397, 1398, 1400, 1407, 1408, 1409, 1412, 1413, 1414, 1415, 1416, 1418, 1423, 1425, 1426, 1427, 1428, 1430, 1439, 1440, 1441, 1444, 1445, 1446, 1448, 1449, 1451, 1456, 1457, 1458, 1459, 1461, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1479, 1484, 1485, 1486, 1487, 1489, 1496, 1497, 1498, 1501, 1502, 1503, 1504, 1505, 1507, 1513, 1514, 1515, 1517, 1524, 1525, 1526, 1529, 1530, 1531, 1532, 1533, 1535, 1542, 1543, 1544, 1545, 1547, 1556, 1557, 1558, 1561, 1562, 1563, 1565, 1566, 1568, 1573, 1575, 1576, 1577, 1579, 1586, 1587, 1588, 1591, 1592, 1593, 1594, 1595, 1597, 1604, 1605, 1606, 1607, 1609, 1618, 1619, 1620, 1623, 1624, 1625, 1627, 1628, 1630, 1635, 1637, 1638, 1639, 1641, 1648, 1649, 1650, 1653, 1654, 1655, 1656, 1657, 1659, 1665, 1667, 1672, 1680, 1681, 1682, 1685, 1691, 1694, 1695, 1697, 1698, 1705, 1713, 1714, 1715, 1717, 1718, 1721, 1726, 1728, 1741, 1743, 1747, 1756, 1757, 1769, 1783, 1796, 1806, 1808, 1812, 1814, 1827, 1829, 1830, 1832, 1839, 1841, 1843, 1844, 1857, 1858, 1862, 1864, 1867, 1868, 1873, 1874, 1875], "notic": [8, 30, 32], "0x7f3928c4df40": 8, "180": [8, 12, 13, 24, 32, 735], "36": [8, 11, 25, 28, 30, 32], "thermophys": [8, 10, 30, 824, 1456], "about": [8, 17, 21, 26, 27, 29, 30, 31, 32, 901, 902, 903, 905, 906, 907, 908, 909, 910, 938, 977, 1015, 1053, 1094, 1133, 1172, 1210, 1248, 1699, 1717, 1719, 1720], "air": [8, 12, 13, 17, 19, 30, 32, 33, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292], "remov": [8, 22, 24, 25, 28, 29, 32, 35, 38, 53, 54, 59, 60, 63, 72, 85, 86, 89, 90, 99, 113, 114, 119, 120, 121, 122, 130, 145, 146, 151, 152, 154, 163, 178, 179, 184, 185, 187, 197, 211, 212, 217, 219, 228, 243, 244, 249, 250, 252, 261, 276, 277, 282, 283, 285, 294, 309, 310, 315, 316, 318, 327, 342, 343, 348, 349, 351, 360, 375, 376, 381, 382, 385, 394, 409, 410, 415, 416, 418, 427, 442, 443, 448, 449, 451, 460, 475, 476, 481, 482, 484, 493, 508, 509, 514, 515, 526, 534, 535, 545, 557, 558, 563, 576, 580, 586, 587, 592, 601, 602, 919, 921, 922, 941, 942, 947, 954, 958, 960, 961, 980, 981, 986, 996, 998, 999, 1018, 1019, 1024, 1034, 1036, 1037, 1056, 1057, 1062, 1073, 1075, 1076, 1097, 1098, 1103, 1114, 1116, 1117, 1136, 1137, 1142, 1153, 1155, 1156, 1175, 1176, 1181, 1191, 1193, 1194, 1213, 1214, 1219, 1229, 1231, 1232, 1251, 1252, 1257, 1268, 1280, 1281, 1286, 1298, 1312, 1313, 1317, 1319, 1332, 1346, 1347, 1351, 1353, 1366, 1380, 1381, 1385, 1387, 1398, 1410, 1411, 1416, 1428, 1442, 1443, 1447, 1449, 1459, 1471, 1472, 1477, 1487, 1499, 1500, 1505, 1515, 1527, 1528, 1533, 1545, 1559, 1560, 1564, 1566, 1577, 1589, 1590, 1595, 1607, 1621, 1622, 1626, 1628, 1639, 1651, 1652, 1657, 1685, 1687, 1691, 1695, 1727, 1733, 1735, 1737, 1739, 1742, 1744, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1757, 1763, 1764, 1769, 1775, 1776, 1783, 1789, 1790, 1796, 1802, 1814, 1820, 1827, 1830, 1831, 1837, 1844, 1845, 1855, 1856, 1863], "del": [8, 24, 29, 30, 1317, 1351, 1385, 1447, 1564, 1626], "purpos": [8, 15, 19, 20, 28, 30, 32, 790], "fickiandiffus": [8, 9, 12, 21, 33, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "fd": [8, 12, 21, 33], "requir": [8, 10, 12, 13, 14, 15, 17, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 122, 561, 609, 631, 796, 825, 879, 895, 899, 945, 954, 984, 1022, 1060, 1101, 1140, 1179, 1188, 1217, 1255, 1284, 1316, 1350, 1384, 1414, 1446, 1456, 1475, 1503, 1531, 1563, 1593, 1625, 1655, 1681, 1706], "pretti": [8, 29, 578], "much": [8, 19, 22, 24, 27, 28, 29, 31], "everi": [8, 15, 26, 28, 29, 30, 35, 1294, 1328, 1362, 1424, 1541, 1603, 1867, 1868], "specifi": [8, 19, 21, 28, 29, 30, 32, 43, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 64, 66, 75, 82, 83, 84, 85, 87, 89, 90, 92, 102, 109, 110, 111, 113, 115, 119, 120, 121, 122, 124, 129, 135, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 157, 168, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 190, 196, 200, 207, 208, 209, 211, 213, 217, 219, 222, 233, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 255, 266, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 288, 299, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 321, 332, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 354, 365, 372, 373, 374, 375, 377, 379, 381, 382, 384, 385, 386, 388, 399, 406, 407, 408, 409, 411, 413, 415, 416, 417, 418, 419, 421, 432, 439, 440, 441, 442, 444, 446, 448, 449, 450, 451, 452, 454, 459, 465, 472, 473, 474, 475, 477, 479, 481, 482, 483, 484, 485, 487, 498, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 517, 519, 524, 534, 547, 554, 555, 556, 557, 559, 561, 563, 565, 571, 572, 573, 574, 575, 576, 577, 586, 601, 609, 620, 623, 624, 631, 634, 635, 639, 712, 713, 717, 720, 721, 769, 771, 772, 795, 804, 807, 846, 847, 872, 877, 915, 916, 921, 922, 923, 924, 927, 928, 931, 933, 937, 939, 940, 941, 943, 945, 947, 949, 954, 960, 961, 962, 963, 966, 967, 970, 972, 976, 978, 979, 980, 982, 984, 986, 988, 993, 998, 999, 1000, 1001, 1004, 1005, 1008, 1010, 1014, 1016, 1017, 1018, 1020, 1022, 1024, 1026, 1031, 1036, 1037, 1038, 1039, 1042, 1043, 1046, 1048, 1052, 1054, 1055, 1056, 1058, 1060, 1062, 1064, 1069, 1070, 1075, 1076, 1077, 1078, 1081, 1082, 1084, 1087, 1089, 1093, 1095, 1096, 1097, 1099, 1101, 1103, 1105, 1110, 1116, 1117, 1118, 1119, 1122, 1123, 1126, 1128, 1132, 1134, 1135, 1136, 1138, 1140, 1142, 1144, 1149, 1150, 1155, 1156, 1157, 1158, 1161, 1162, 1165, 1167, 1171, 1173, 1174, 1175, 1177, 1179, 1181, 1183, 1188, 1193, 1194, 1195, 1196, 1199, 1200, 1203, 1205, 1209, 1211, 1212, 1213, 1215, 1217, 1219, 1221, 1226, 1231, 1232, 1233, 1234, 1237, 1238, 1241, 1243, 1247, 1249, 1250, 1251, 1253, 1255, 1257, 1259, 1270, 1277, 1278, 1279, 1280, 1282, 1284, 1286, 1288, 1300, 1305, 1309, 1310, 1311, 1312, 1314, 1316, 1319, 1321, 1326, 1334, 1339, 1343, 1344, 1345, 1346, 1348, 1350, 1353, 1355, 1360, 1368, 1373, 1377, 1378, 1379, 1380, 1382, 1384, 1387, 1389, 1394, 1400, 1407, 1408, 1409, 1410, 1412, 1414, 1416, 1418, 1430, 1435, 1439, 1440, 1441, 1442, 1444, 1446, 1449, 1451, 1456, 1461, 1468, 1469, 1470, 1471, 1473, 1475, 1477, 1479, 1489, 1496, 1497, 1498, 1499, 1501, 1503, 1505, 1507, 1517, 1524, 1525, 1526, 1527, 1529, 1531, 1533, 1535, 1547, 1552, 1556, 1557, 1558, 1559, 1561, 1563, 1566, 1568, 1573, 1579, 1586, 1587, 1588, 1589, 1591, 1593, 1595, 1597, 1609, 1614, 1618, 1619, 1620, 1621, 1623, 1625, 1628, 1630, 1635, 1641, 1648, 1649, 1650, 1651, 1653, 1655, 1657, 1659, 1680, 1683, 1691, 1694, 1695, 1698, 1699, 1705, 1707, 1716, 1745, 1763, 1775, 1789, 1845, 1852, 1855], "c_in": [8, 9], "c_out": [8, 9], "attach": [8, 15, 24, 27, 29, 30, 627, 712, 717, 719, 720, 721, 769, 770, 771, 772, 795, 799, 800, 804, 807, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 1484, 1718, 1722, 1867, 1868], "know": [8, 14, 15, 22, 24, 25, 26, 27, 28, 30, 31, 32, 35], "take": [8, 10, 22, 24, 26, 28, 30, 195, 1864], "interpol": [8, 31, 33, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 551, 880, 894, 934, 973, 1011, 1049, 1090, 1129, 1168, 1206, 1244, 1274, 1306, 1340, 1374, 1404, 1436, 1465, 1493, 1521, 1553, 1583, 1615, 1645], "pc": [8, 10, 12, 30, 32, 825, 834, 855, 859, 861, 866, 870, 871, 873, 899], "tc": [8, 30, 825, 829, 830, 834, 841, 855, 862, 865, 866, 870, 871, 873], "interpolate_data": [8, 31], "size_bi": [8, 9, 25], "markers": [8, 9, 25, 27], "400": [8, 25, 28], "linewidth": [8, 25], "_": [8, 9, 22, 32], "axi": [8, 9, 28, 31, 596, 619, 799, 894, 1680, 1686, 1698, 1707, 1713, 1719, 1720], "off": [8, 9, 32, 825, 1720], "fick": [8, 19, 22, 129, 687], "shown": [8, 11, 20, 21, 22, 25, 26, 27, 29, 31, 32, 33, 734], "n_a": [8, 19, 687], "molar": [8, 829, 831, 836], "mole": [8, 829, 838, 840, 844, 847, 848, 849, 872, 1294, 1297, 1305, 1326, 1328, 1331, 1339, 1360, 1362, 1365, 1373, 1394, 1424, 1427, 1435, 1541, 1544, 1552, 1573, 1603, 1606, 1614, 1635], "per": [8, 10, 832, 850, 856, 863, 867, 874, 892], "rate_inlet": 8, "5e": [8, 10, 15, 25, 28, 31, 895, 896], "mol": [8, 828, 830, 831, 836, 841, 850, 852, 859, 861, 862, 870, 871, 873, 901, 902], "88846e": 8, "d_eff": [8, 9], "6e": 8, "776925e": 8, "measur": [8, 9], "varepsilon": 8, "But": [8, 29, 30], "pleas": [8, 9, 34], "v_p": 8, "v_t": 8, "v_bulk": 8, "prod": 8, "429901e": 8, "02": [8, 196], "d_ab": 8, "270571e": 8, "00": 8, "ratio": [9, 13, 22, 678, 688, 693, 703, 735, 792, 896], "conducit": 9, "pure": [9, 26, 31, 359, 426, 825, 830, 832, 855, 856, 859, 861, 862, 863, 865, 866, 867, 870, 871, 873, 874, 1294, 1328, 1362, 1424, 1541, 1603], "brine": 9, "sigma_": 9, "factior": 9, "299e": 9, "diff": [9, 28], "colour": [9, 33], "media": [9, 10, 34, 879, 892], "research": [9, 34, 892], "process": [9, 10, 13, 15, 19, 21, 24, 28, 29, 31, 543, 607, 717, 769, 795, 875, 877, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1682, 1721], "substitut": [9, 22, 1671, 1731, 1732, 1754], "electron": [9, 22, 260, 901, 902], "analag": 9, "sigma": [9, 10, 19, 829, 834, 847, 854, 872, 880, 896, 1305, 1339, 1373, 1435, 1552, 1614], "respect": [9, 22, 26, 30, 46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 368, 402, 435, 468, 501, 530, 550, 624, 799, 901, 902, 932, 971, 1009, 1047, 1088, 1127, 1166, 1204, 1242, 1273, 1304, 1338, 1372, 1403, 1434, 1464, 1492, 1520, 1551, 1582, 1613, 1644, 1719, 1870], "pai": 9, "attent": 9, "mai": [9, 11, 17, 19, 24, 26, 27, 28, 29, 30, 34, 59, 89, 119, 120, 122, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 543, 607, 631, 712, 718, 720, 771, 804, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1698], "underestim": [9, 11], "r": [9, 11, 12, 13, 25, 31, 32, 570, 735, 736, 879, 880, 896, 903, 905, 906, 907, 908, 909, 910, 926, 965, 1003, 1031, 1041, 1080, 1121, 1160, 1198, 1236, 1699, 1707, 1715, 1717, 1719], "10089643222": 9, "common": [10, 24, 25, 26, 27, 28, 29, 924, 927, 928, 938, 963, 966, 967, 977, 1001, 1004, 1005, 1015, 1039, 1042, 1043, 1053, 1078, 1081, 1082, 1094, 1119, 1122, 1123, 1133, 1158, 1161, 1162, 1172, 1196, 1199, 1200, 1210, 1234, 1237, 1238, 1248, 1691, 1694, 1695, 1722], "techniqu": 10, "w": [10, 17, 34, 619, 849, 862, 863, 892], "loglevel": [10, 22], "20": [10, 25, 26, 28, 29, 32, 901, 902, 954, 1715], "um": [10, 28], "topolog": [10, 28, 30, 808, 814, 815, 816, 1188, 1714, 1863], "conveni": [10, 26, 27, 29, 30, 31, 32, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 901, 902], "half": [10, 11, 28, 31, 718, 730], "smallest": [10, 28, 32, 1870], "neighbour": [10, 730], "invad": [10, 12, 13, 32, 98, 120, 195, 210, 880, 894, 898, 899], "tension": [10, 12, 13, 32, 836, 854, 855, 856, 879, 880, 894], "cours": [10, 24, 27, 29], "name": [10, 11, 12, 13, 15, 17, 24, 25, 28, 29, 30, 33, 35, 37, 56, 59, 63, 71, 88, 89, 97, 116, 119, 129, 148, 151, 154, 162, 181, 184, 187, 195, 214, 217, 227, 246, 249, 252, 260, 279, 282, 285, 293, 312, 315, 318, 326, 345, 348, 351, 359, 378, 381, 385, 393, 412, 415, 418, 426, 445, 448, 451, 459, 478, 481, 484, 492, 511, 514, 524, 525, 536, 542, 543, 560, 562, 578, 607, 610, 618, 620, 623, 626, 631, 633, 634, 637, 638, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 715, 717, 718, 719, 721, 723, 725, 728, 729, 730, 731, 732, 734, 736, 740, 741, 742, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 767, 769, 770, 772, 774, 775, 776, 777, 781, 782, 783, 784, 785, 786, 795, 800, 803, 807, 825, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 846, 850, 852, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 870, 871, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 899, 910, 912, 913, 915, 917, 944, 946, 954, 956, 983, 985, 993, 994, 1021, 1023, 1031, 1032, 1059, 1061, 1069, 1071, 1100, 1102, 1110, 1112, 1139, 1141, 1149, 1151, 1178, 1180, 1188, 1189, 1216, 1218, 1226, 1227, 1254, 1256, 1265, 1266, 1283, 1285, 1293, 1294, 1295, 1303, 1315, 1317, 1318, 1326, 1327, 1328, 1329, 1337, 1349, 1351, 1352, 1360, 1361, 1362, 1363, 1371, 1383, 1385, 1386, 1394, 1395, 1396, 1413, 1415, 1423, 1424, 1425, 1433, 1445, 1447, 1448, 1456, 1457, 1474, 1476, 1484, 1485, 1502, 1504, 1512, 1513, 1530, 1532, 1540, 1541, 1542, 1550, 1562, 1564, 1565, 1573, 1574, 1575, 1592, 1594, 1602, 1603, 1604, 1612, 1624, 1626, 1627, 1635, 1636, 1637, 1654, 1656, 1722, 1734, 1806, 1808, 1843, 1847, 1852, 1854, 1857, 1863, 1864, 1872], "calul": 10, "washburn": [10, 32, 658, 659, 896, 899], "p_c": [10, 32, 880, 896], "co": [10, 796, 880, 896], "theta": [10, 880, 896], "r_t": [10, 892], "22": [10, 25, 29, 32, 874, 1684], "contact": [10, 11, 12, 13, 32, 785, 879, 880, 894], "angl": [10, 12, 13, 32, 879, 880, 894], "while": [10, 17, 24, 25, 26, 30, 32, 37, 60, 71, 90, 97, 121, 129, 152, 162, 185, 195, 219, 227, 250, 260, 283, 293, 316, 326, 349, 359, 382, 393, 416, 426, 449, 459, 482, 492, 515, 563, 576, 901, 902, 947, 986, 993, 1024, 1062, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1505, 1533, 1566, 1595, 1628, 1657], "radiu": [10, 28, 31, 33, 879, 894, 895, 896, 926, 965, 1003, 1031, 1041, 1080, 1121, 1160, 1198, 1236, 1699, 1707, 1722, 1724, 1725], "setup": [10, 32], "invasionpercol": [10, 13, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], "ordinarypercol": [10, 12], "class": [10, 15, 17, 20, 24, 26, 27, 29, 31, 32, 33, 36, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 525, 542, 570, 578, 591, 606, 611, 612, 613, 614, 620, 623, 624, 892, 914, 915, 954, 993, 1031, 1069, 1110, 1149, 1188, 1226, 1264, 1265, 1293, 1327, 1361, 1395, 1423, 1456, 1484, 1512, 1540, 1574, 1602, 1636, 1664, 1665, 1667, 1669, 1671, 1673, 1675, 1677, 1730, 1756, 1768, 1782, 1794, 1806, 1809, 1810, 1812, 1824, 1825, 1843, 1858, 1867, 1868, 1869], "ordinari": [10, 32], "percol": [10, 25, 28, 98, 195, 196, 210, 899, 1682, 1690, 1708, 1721], "access": [10, 14, 15, 17, 21, 24, 26, 29, 30, 32, 35, 195, 620, 712, 716, 717, 719, 720, 721, 765, 768, 769, 770, 771, 772, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243, 1484, 1736, 1749], "fix": [10, 14, 28, 30, 32, 825, 1863], "appli": [10, 11, 21, 22, 26, 28, 29, 31, 32, 33, 43, 50, 59, 60, 61, 62, 63, 64, 75, 82, 89, 90, 98, 102, 109, 118, 119, 120, 121, 122, 129, 135, 142, 151, 152, 153, 154, 155, 168, 175, 184, 185, 186, 187, 188, 200, 207, 217, 219, 233, 240, 249, 250, 251, 252, 253, 266, 273, 282, 283, 284, 285, 286, 299, 306, 315, 316, 317, 318, 319, 332, 339, 348, 349, 350, 351, 352, 365, 372, 381, 382, 383, 384, 385, 386, 399, 406, 415, 416, 417, 418, 419, 432, 439, 448, 449, 450, 451, 452, 465, 472, 481, 482, 483, 484, 485, 498, 505, 514, 515, 516, 517, 524, 543, 544, 547, 554, 563, 571, 572, 576, 607, 608, 734, 790, 796, 825, 847, 872, 892, 901, 902, 917, 918, 921, 922, 923, 927, 928, 937, 938, 947, 956, 957, 960, 961, 962, 966, 967, 976, 977, 986, 994, 995, 998, 999, 1000, 1004, 1005, 1014, 1015, 1024, 1032, 1033, 1036, 1037, 1038, 1042, 1043, 1052, 1053, 1062, 1071, 1072, 1075, 1076, 1077, 1081, 1082, 1093, 1094, 1103, 1112, 1113, 1116, 1117, 1118, 1122, 1123, 1132, 1133, 1142, 1151, 1152, 1155, 1156, 1157, 1161, 1162, 1171, 1172, 1181, 1189, 1190, 1193, 1194, 1195, 1199, 1200, 1209, 1210, 1219, 1227, 1228, 1231, 1232, 1233, 1237, 1238, 1247, 1248, 1257, 1266, 1267, 1270, 1277, 1286, 1294, 1295, 1296, 1300, 1305, 1309, 1319, 1328, 1329, 1330, 1334, 1339, 1343, 1353, 1362, 1363, 1364, 1368, 1373, 1377, 1387, 1396, 1397, 1400, 1407, 1416, 1424, 1425, 1426, 1430, 1435, 1439, 1449, 1457, 1458, 1461, 1468, 1477, 1485, 1486, 1489, 1496, 1505, 1513, 1514, 1517, 1524, 1533, 1541, 1542, 1543, 1547, 1552, 1556, 1566, 1575, 1576, 1579, 1586, 1595, 1603, 1604, 1605, 1609, 1614, 1618, 1628, 1637, 1638, 1641, 1648, 1657, 1680, 1683, 1684, 1688, 1694, 1695, 1698, 1707, 1713, 1715, 1722, 1805, 1823], "penetr": 10, "possibli": [10, 30], "sourc": [10, 11, 33, 34, 35, 37, 61, 63, 71, 73, 89, 97, 98, 112, 117, 118, 120, 122, 129, 154, 162, 187, 195, 196, 210, 215, 216, 218, 220, 227, 252, 260, 285, 293, 315, 318, 326, 351, 359, 385, 393, 418, 426, 451, 459, 480, 484, 492, 495, 496, 512, 513, 516, 517, 525, 526, 530, 531, 533, 534, 536, 538, 539, 542, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 591, 594, 595, 596, 604, 606, 607, 608, 609, 610, 611, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 732, 734, 735, 736, 738, 740, 741, 742, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 764, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 894, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 916, 954, 955, 993, 1031, 1069, 1070, 1083, 1084, 1110, 1149, 1150, 1188, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1203, 1205, 1210, 1226, 1265, 1293, 1327, 1360, 1361, 1394, 1395, 1423, 1424, 1427, 1433, 1435, 1446, 1447, 1456, 1484, 1512, 1540, 1574, 1602, 1636, 1665, 1666, 1667, 1669, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1756, 1768, 1774, 1778, 1779, 1782, 1794, 1806, 1808, 1809, 1810, 1811, 1812, 1813, 1817, 1819, 1824, 1825, 1826, 1843, 1845, 1846, 1847, 1852, 1853, 1854, 1857, 1858, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876], "directli": [10, 17, 21, 22, 24, 26, 27, 28, 29, 30, 32, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 850, 852, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 870, 871, 873, 874, 916, 955, 1111, 1150, 1684, 1695, 1720], "though": [10, 25, 26, 28, 29, 922, 954, 961, 999, 1037, 1076, 1117, 1156, 1194, 1232], "frequent": [10, 35, 901, 902], "subclass": [10, 26, 37, 71, 129, 162, 260, 293, 326, 359, 426, 459, 492, 525, 591, 615, 1265, 1423, 1456, 1636, 1782, 1794], "sever": [10, 21, 24, 25, 26, 27, 28, 29, 30, 32, 542, 544, 608, 825, 898, 918, 957, 995, 1033, 1072, 1113, 1152, 1188, 1190, 1228, 1267, 1296, 1330, 1364, 1397, 1426, 1458, 1486, 1514, 1543, 1576, 1605, 1638], "drainag": [10, 12, 13, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "set_inlet_bc": [10, 12, 13, 32, 195], "messag": [10, 24, 28], "analyz": [10, 28], "pc_curv": [10, 32, 97], "semilogx": 10, "challeng": [11, 32], "modulenotfounderror": 11, "traceback": 11, "recent": 11, "No": [11, 26, 27, 1683], "cubes_and_cuboid": [11, 22], "vol_void": 11, "vol_bulk": 11, "poro": 11, "2022": [11, 22, 34], "01": [11, 28, 30], "47": [11, 25, 28, 32], "485": 11, "21": [11, 25, 26, 29, 30, 32], "One": [11, 19, 24, 25, 26, 27, 28, 29, 30, 32, 818, 892, 1297, 1331, 1365, 1427, 1544, 1606], "correctli": [11, 1722], "erron": 11, "addit": [11, 19, 20, 26, 28, 29, 30, 524, 543, 544, 607, 608, 782, 825, 904, 915, 917, 918, 956, 957, 994, 995, 1032, 1033, 1071, 1072, 1112, 1113, 1149, 1151, 1152, 1189, 1190, 1227, 1228, 1266, 1267, 1295, 1296, 1329, 1330, 1363, 1364, 1396, 1397, 1425, 1426, 1457, 1458, 1485, 1486, 1513, 1514, 1542, 1543, 1575, 1576, 1604, 1605, 1637, 1638, 1680], "green": [11, 27, 28, 32], "center": [11, 22, 25, 26, 31, 785, 822, 894, 915, 954, 993, 1149, 1226, 1707], "ignor": [11, 22, 60, 63, 68, 90, 94, 121, 126, 152, 154, 159, 185, 187, 192, 219, 224, 250, 252, 257, 283, 285, 290, 316, 318, 323, 349, 351, 356, 382, 385, 390, 416, 418, 423, 449, 451, 456, 482, 484, 489, 515, 521, 539, 563, 567, 576, 765, 768, 793, 847, 872, 921, 947, 951, 960, 986, 990, 998, 1024, 1028, 1036, 1062, 1066, 1075, 1103, 1107, 1116, 1142, 1146, 1155, 1181, 1185, 1193, 1219, 1223, 1231, 1257, 1261, 1286, 1290, 1305, 1319, 1323, 1339, 1353, 1357, 1373, 1387, 1391, 1416, 1420, 1435, 1449, 1453, 1477, 1481, 1505, 1509, 1533, 1537, 1552, 1566, 1570, 1595, 1599, 1614, 1628, 1632, 1657, 1661, 1672, 1719, 1720, 1867, 1868, 1869], "far": [11, 22, 28, 29, 1707], "overestim": 11, "becaus": [11, 22, 24, 26, 27, 28, 29, 30, 31, 32, 713, 718, 927, 928, 966, 967, 1004, 1005, 1042, 1043, 1081, 1082, 1122, 1123, 1161, 1162, 1199, 1200, 1237, 1238, 1694, 1695, 1808], "real": [11, 19, 638], "depend": [11, 19, 22, 26, 30, 32, 35, 543, 594, 595, 596, 607, 634, 734, 877, 901, 902, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637], "account": [11, 12, 13, 19, 22, 31, 725, 781, 782, 783, 786, 879, 895, 899], "pendular_r": [11, 782, 784], "tackl": 11, "problem": [11, 12, 21, 24, 26, 27, 28, 359, 426, 877, 1863], "end": [11, 22, 26, 27, 28, 31, 687, 702, 712, 720, 744, 771, 784, 785, 804, 821, 825, 877, 1685, 1717, 1795, 1806, 1813, 1867, 1868], "vol_void_initi": 11, "vol_void_correct": 11, "poro_initi": 11, "poro_correct": 11, "initi": [11, 17, 21, 28, 31, 58, 150, 183, 248, 281, 314, 347, 380, 414, 447, 480, 513, 615, 1680], "5f": 11, "12852": 11, "12590": 11, "although": [11, 22, 26, 825, 901, 902], "neglig": [11, 666, 668], "too": [11, 26, 1297, 1331, 1365, 1427, 1544, 1606], "high": [11, 28, 32, 712, 720, 771, 804, 954, 1297, 1331, 1365, 1427, 1544, 1606], "neglect": [11, 32], "pendular": [11, 785], "ring": [11, 785, 1724], "resid": [11, 784, 785], "radii": [11, 28, 785], "howev": [11, 12, 13, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 51, 52, 83, 84, 110, 111, 143, 144, 176, 177, 195, 208, 209, 241, 242, 274, 275, 307, 308, 340, 341, 373, 374, 407, 408, 440, 441, 473, 474, 506, 507, 555, 556, 573, 574, 825, 939, 940, 978, 979, 1016, 1017, 1054, 1055, 1095, 1096, 1134, 1135, 1173, 1174, 1211, 1212, 1249, 1250, 1278, 1279, 1310, 1311, 1344, 1345, 1378, 1379, 1408, 1409, 1440, 1441, 1469, 1470, 1497, 1498, 1525, 1526, 1557, 1558, 1587, 1588, 1619, 1620, 1649, 1650], "segment": 11, "region": [11, 28, 921, 960, 998, 1036, 1075, 1116, 1155, 1193, 1231], "regular": 11, "fill": [11, 27, 29, 32, 898, 899], "perfectli": [11, 736, 1699], "im": [11, 25, 27, 915, 922, 954, 961, 993, 999, 1031, 1037, 1069, 1076, 1110, 1117, 1149, 1156, 1188, 1194, 1226, 1232, 1724, 1725], "overlapping_spher": 11, "maxit": [11, 1669, 1671, 1672, 1675], "imshow": [11, 27], "im_poro": 11, "metric": 11, "imag": [11, 22, 25, 27, 28, 33, 619, 713, 921, 960, 993, 998, 1036, 1075, 1116, 1155, 1193, 1231, 1724, 1725], "1f": 11, "63": [11, 25, 32], "snow": 11, "snow2": 11, "boundary_width": 11, "io": [11, 25, 33, 1858], "network_from_porespi": 11, "inscribed_diamet": 11, "throat_length": [11, 28, 643, 644, 645, 646, 647, 648, 649, 774, 775, 776, 777, 781, 782, 783, 786], "regen_mod": [11, 12, 13, 21, 30, 543, 544, 607, 608, 917, 918, 956, 957, 994, 995, 1032, 1033, 1071, 1072, 1112, 1113, 1151, 1152, 1189, 1190, 1227, 1228, 1266, 1267, 1295, 1296, 1329, 1330, 1363, 1364, 1396, 1397, 1425, 1426, 1457, 1458, 1485, 1486, 1513, 1514, 1542, 1543, 1575, 1576, 1604, 1605, 1637, 1638], "normal": [11, 28, 29, 30, 35, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 543, 607, 713, 825, 832, 856, 863, 865, 874, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1226, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1681, 1875], "cube": [11, 645, 664, 678, 693, 715, 748], "cuboid": [11, 28, 645, 646, 664, 671, 678, 680, 686, 693, 695, 701, 748, 750, 755], "pnm_poro": 11, "pnm": [11, 19, 31, 32, 788, 1852, 1857, 1858], "67": [11, 25, 32], "better": [11, 13, 30, 33, 1697], "term": [12, 22, 29, 31, 32, 63, 154, 187, 252, 285, 293, 318, 351, 385, 418, 451, 484, 619, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 954], "indic": [12, 13, 15, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 55, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 87, 88, 90, 92, 93, 94, 115, 116, 120, 121, 124, 125, 126, 147, 148, 149, 152, 153, 154, 155, 157, 158, 159, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 213, 214, 219, 222, 223, 224, 245, 246, 247, 250, 251, 252, 253, 255, 256, 257, 278, 279, 280, 283, 284, 285, 286, 288, 289, 290, 311, 312, 313, 316, 317, 318, 319, 321, 322, 323, 344, 345, 346, 349, 350, 351, 352, 354, 355, 356, 377, 378, 379, 382, 383, 384, 385, 386, 388, 389, 390, 411, 412, 413, 416, 417, 418, 419, 421, 422, 423, 444, 445, 446, 449, 450, 451, 452, 454, 455, 456, 477, 478, 479, 482, 483, 484, 485, 487, 488, 489, 510, 511, 512, 515, 516, 517, 519, 520, 521, 524, 536, 538, 539, 543, 544, 559, 560, 563, 565, 566, 567, 575, 576, 577, 607, 608, 620, 632, 634, 712, 713, 720, 771, 804, 818, 847, 872, 915, 916, 917, 918, 921, 922, 925, 927, 928, 931, 933, 943, 944, 947, 949, 950, 951, 954, 955, 956, 957, 960, 961, 964, 966, 967, 970, 972, 982, 983, 986, 988, 989, 990, 993, 994, 995, 998, 999, 1002, 1004, 1005, 1008, 1010, 1020, 1021, 1024, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1040, 1042, 1043, 1046, 1048, 1058, 1059, 1062, 1064, 1065, 1066, 1069, 1070, 1071, 1072, 1075, 1076, 1079, 1081, 1082, 1083, 1087, 1089, 1099, 1100, 1103, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1116, 1117, 1120, 1122, 1123, 1126, 1128, 1138, 1139, 1142, 1144, 1145, 1146, 1149, 1150, 1151, 1152, 1155, 1156, 1159, 1161, 1162, 1165, 1167, 1177, 1178, 1181, 1183, 1184, 1185, 1188, 1189, 1190, 1193, 1194, 1197, 1199, 1200, 1203, 1205, 1215, 1216, 1219, 1221, 1222, 1223, 1226, 1227, 1228, 1231, 1232, 1235, 1237, 1238, 1241, 1243, 1253, 1254, 1257, 1259, 1260, 1261, 1266, 1267, 1282, 1283, 1286, 1288, 1289, 1290, 1295, 1296, 1297, 1305, 1314, 1315, 1319, 1321, 1322, 1323, 1329, 1330, 1331, 1339, 1348, 1349, 1353, 1355, 1356, 1357, 1363, 1364, 1365, 1373, 1382, 1383, 1387, 1389, 1390, 1391, 1396, 1397, 1412, 1413, 1416, 1418, 1419, 1420, 1425, 1426, 1427, 1435, 1444, 1445, 1449, 1451, 1452, 1453, 1457, 1458, 1473, 1474, 1477, 1479, 1480, 1481, 1485, 1486, 1501, 1502, 1505, 1507, 1508, 1509, 1513, 1514, 1529, 1530, 1533, 1535, 1536, 1537, 1542, 1543, 1544, 1552, 1561, 1562, 1566, 1568, 1569, 1570, 1575, 1576, 1591, 1592, 1595, 1597, 1598, 1599, 1604, 1605, 1606, 1614, 1623, 1624, 1628, 1630, 1631, 1632, 1637, 1638, 1653, 1654, 1657, 1659, 1660, 1661, 1680, 1682, 1684, 1686, 1687, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1700, 1701, 1705, 1707, 1708, 1716, 1718, 1721, 1723, 1727, 1873, 1874], "concept": [12, 22, 24, 28], "mechan": [12, 15, 32], "info": [12, 13, 1293, 1327, 1361, 1423, 1540, 1602], "similarli": [12, 17, 28], "072": [12, 13, 32], "contact_angl": [12, 13, 30, 32, 655, 656, 879, 880, 894, 895, 896], "partial": [12, 29, 1697], "non": [12, 13, 19, 21, 26, 27, 32, 819, 880, 899, 915, 921, 922, 931, 933, 954, 960, 961, 970, 972, 993, 998, 999, 1008, 1010, 1031, 1036, 1037, 1046, 1048, 1069, 1075, 1076, 1087, 1089, 1110, 1116, 1117, 1126, 1128, 1149, 1155, 1156, 1165, 1167, 1188, 1193, 1194, 1203, 1205, 1226, 1231, 1232, 1241, 1243, 1692], "wet": [12, 13, 32, 736, 880, 892, 899], "accomplish": [12, 29, 31, 32, 1069, 1188], "invasonpercol": 12, "drn": [12, 32], "occup": [12, 843, 898], "point": [12, 13, 15, 25, 26, 27, 28, 29, 30, 31, 33, 35, 118, 380, 414, 447, 480, 615, 622, 717, 719, 721, 744, 769, 770, 772, 784, 792, 795, 797, 800, 806, 807, 811, 819, 823, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 899, 904, 910, 912, 913, 1031, 1069, 1226, 1685, 1688, 1698, 1699, 1704, 1706, 1707, 1717, 1720], "invasion_pressur": [12, 32, 98], "10000": [12, 719, 721, 770, 772, 800, 807], "costum": [12, 13, 33], "sat_upd": 12, "nwp": [12, 13, 32, 899], "wp": [12, 13, 32, 899], "pore_mask": [12, 13], "throat_mask": [12, 13], "sat_p": [12, 13], "sat_t": [12, 13], "sat1": [12, 13], "bulk": [12, 13, 24], "sat": [12, 13], "cancel": [12, 13, 22], "out": [12, 13, 19, 22, 24, 26, 27, 28, 30, 31, 54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 376, 410, 443, 476, 509, 535, 558, 587, 602, 843, 942, 981, 1019, 1057, 1098, 1137, 1176, 1214, 1252, 1281, 1313, 1347, 1381, 1411, 1443, 1472, 1500, 1528, 1560, 1590, 1622, 1652, 1745, 1764, 1776, 1790, 1802, 1820, 1856], "remain": [12, 13, 32, 718, 1809], "fraction": [12, 13, 28, 829, 838, 840, 844, 847, 848, 849, 872, 899, 901, 902, 954, 1294, 1297, 1305, 1326, 1328, 1331, 1339, 1360, 1362, 1365, 1373, 1394, 1424, 1427, 1435, 1541, 1544, 1552, 1573, 1603, 1606, 1614, 1635, 1707], "rate_": 12, "fickian": [12, 22, 33, 129], "conduit_conduct": [12, 13], "wherea": [12, 13, 22, 901, 902], "generic_diffusive_conduct": 12, "same": [12, 13, 17, 19, 22, 24, 25, 27, 28, 29, 30, 31, 59, 62, 64, 89, 119, 151, 153, 155, 184, 186, 188, 217, 249, 251, 253, 282, 284, 286, 315, 317, 319, 348, 350, 352, 381, 384, 386, 415, 417, 419, 448, 450, 452, 481, 483, 485, 514, 516, 517, 544, 608, 636, 637, 715, 767, 784, 785, 821, 829, 879, 895, 901, 902, 918, 925, 938, 957, 964, 977, 993, 995, 1002, 1015, 1033, 1040, 1053, 1072, 1079, 1094, 1113, 1120, 1133, 1152, 1159, 1172, 1190, 1197, 1210, 1228, 1235, 1248, 1267, 1296, 1330, 1364, 1397, 1426, 1458, 1486, 1514, 1543, 1576, 1605, 1638, 1682, 1683, 1690, 1692, 1705, 1707, 1708, 1721, 1812, 1843, 1864], "calcuat": [12, 13, 28, 759, 760, 761, 762, 763, 766, 773, 780], "rate_calc": [12, 13], "keyword": [12, 13, 543, 607, 615, 825, 904, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1691, 1694, 1695], "val": [12, 13, 15, 30, 543, 607, 846, 848, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1303, 1305, 1329, 1337, 1339, 1363, 1371, 1373, 1396, 1425, 1433, 1435, 1457, 1485, 1513, 1542, 1550, 1552, 1575, 1604, 1612, 1614, 1637], "focus": [12, 13], "diff_in": 12, "diff_out": 12, "presenc": [12, 13, 30], "model_mp_cond": [12, 13], "conduit_diffusive_conduct": 12, "throat_conduct": [12, 13, 887, 888, 898, 912, 913], "defer": [12, 13, 15, 21, 28, 29, 30, 543, 544, 607, 608, 917, 918, 956, 957, 994, 995, 1032, 1033, 1071, 1072, 1112, 1113, 1151, 1152, 1189, 1190, 1227, 1228, 1266, 1267, 1295, 1296, 1329, 1330, 1363, 1364, 1396, 1397, 1425, 1426, 1457, 1458, 1485, 1486, 1513, 1514, 1542, 1543, 1575, 1576, 1604, 1605, 1637, 1638], "over": [12, 13, 22, 28, 29, 33, 713, 825, 829, 843, 1671, 1843], "snwparr": [12, 13], "reldiff_nwp": 12, "reldiff_wp": 12, "uniqu": [12, 27, 29, 227, 915, 924, 928, 954, 963, 967, 1001, 1005, 1031, 1039, 1043, 1078, 1082, 1110, 1119, 1123, 1149, 1158, 1162, 1188, 1196, 1200, 1226, 1234, 1238, 1484, 1722, 1808, 1854], "sat_point": 12, "rate_single_nwp": 12, "rate_single_wp": 12, "rate_mult_nwp": 12, "rate_mult_wp": 12, "dr_nwp": 12, "dr_wp": 12, "xlabel": [12, 13, 32], "snwp": [12, 13, 32], "ylabel": [12, 13, 32], "dr": [12, 896], "titl": [12, 13], "0x7fd0fab9b1f0": 12, "41": [13, 25, 32], "sequenc": [13, 24, 32, 196], "asum": 13, "ip": [13, 32], "impplement": 13, "face": [13, 25, 129, 916, 954, 955, 1070, 1111, 1149, 1150, 1680, 1681, 1698, 1699, 1713, 1717], "By": [13, 22, 544, 608, 825, 918, 957, 995, 1033, 1069, 1072, 1113, 1152, 1190, 1226, 1228, 1267, 1296, 1330, 1364, 1397, 1426, 1458, 1486, 1514, 1543, 1576, 1605, 1638, 1698], "finlets_init": 13, "finlet": 13, "satur": [13, 32, 832, 856, 863, 874], "sat_occ_upd": 13, "ran": 13, "befor": [13, 27, 28, 29, 30, 32, 33, 60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 382, 416, 449, 482, 515, 561, 563, 576, 595, 609, 825, 894, 945, 947, 984, 986, 1022, 1024, 1060, 1062, 1101, 1103, 1140, 1142, 1179, 1181, 1217, 1219, 1255, 1257, 1284, 1286, 1316, 1319, 1350, 1353, 1384, 1387, 1414, 1416, 1446, 1449, 1475, 1477, 1503, 1505, 1531, 1533, 1563, 1566, 1593, 1595, 1625, 1628, 1655, 1657, 1722, 1801, 1819], "int": [13, 22, 27, 51, 52, 59, 83, 84, 89, 110, 111, 118, 119, 143, 144, 151, 176, 177, 184, 208, 209, 217, 241, 242, 249, 274, 275, 282, 307, 308, 315, 340, 341, 348, 373, 374, 381, 407, 408, 415, 440, 441, 448, 473, 474, 481, 506, 507, 514, 555, 556, 573, 574, 620, 685, 700, 712, 713, 720, 771, 804, 939, 940, 954, 978, 979, 1016, 1017, 1031, 1054, 1055, 1069, 1095, 1096, 1134, 1135, 1173, 1174, 1211, 1212, 1226, 1249, 1250, 1278, 1279, 1310, 1311, 1344, 1345, 1378, 1379, 1408, 1409, 1440, 1441, 1469, 1470, 1497, 1498, 1525, 1526, 1557, 1558, 1587, 1588, 1619, 1620, 1649, 1650, 1689, 1724, 1725, 1732, 1749, 1751, 1754], "invasion_sequ": [13, 32, 98, 196], "mask": [13, 24, 27, 55, 60, 67, 68, 87, 90, 93, 94, 115, 121, 125, 126, 147, 152, 158, 159, 180, 185, 191, 192, 213, 219, 223, 224, 245, 250, 256, 257, 278, 283, 289, 290, 311, 316, 322, 323, 344, 349, 355, 356, 377, 382, 389, 390, 411, 416, 422, 423, 444, 449, 455, 456, 477, 482, 488, 489, 510, 515, 520, 521, 538, 539, 559, 563, 566, 567, 575, 576, 927, 928, 943, 947, 950, 951, 966, 967, 982, 986, 989, 990, 993, 1004, 1005, 1020, 1024, 1027, 1028, 1042, 1043, 1058, 1062, 1065, 1066, 1081, 1082, 1099, 1103, 1106, 1107, 1122, 1123, 1138, 1142, 1145, 1146, 1161, 1162, 1177, 1181, 1184, 1185, 1199, 1200, 1215, 1219, 1222, 1223, 1237, 1238, 1253, 1257, 1260, 1261, 1282, 1286, 1289, 1290, 1314, 1319, 1322, 1323, 1348, 1353, 1356, 1357, 1382, 1387, 1390, 1391, 1412, 1416, 1419, 1420, 1444, 1449, 1452, 1453, 1473, 1477, 1480, 1481, 1501, 1505, 1508, 1509, 1529, 1533, 1536, 1537, 1561, 1566, 1569, 1570, 1591, 1595, 1598, 1599, 1623, 1628, 1631, 1632, 1653, 1657, 1660, 1661, 1687, 1690, 1707, 1718], "within": [13, 24, 26, 28, 30, 31, 594, 789, 818, 856, 863, 899, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236, 1684, 1699, 1715, 1722], "thorat": 13, "meet": [13, 31, 666, 668], "rphase": 13, "ephas": 13, "q_": 13, "stoke": [13, 702], "generic_hydraulic_conduct": 13, "st_p": 13, "relativep": 13, "flow_in": 13, "flow_out": 13, "detail": [13, 15, 22, 24, 25, 26, 28, 29, 30, 31, 33, 543, 607, 621, 879, 895, 901, 902, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1690], "plesas": 13, "conduit_hydraulic_conduct": 13, "hydraulic_conduct": [13, 31, 658, 659, 877, 885], "select": [13, 28, 30, 33, 61, 383, 661, 675, 690, 705, 714, 722, 727, 733, 739, 745, 759, 763, 766, 773, 780, 901, 902, 1679, 1680, 1715, 1736, 1749], "higher": [13, 25, 31, 32, 98, 779, 832, 856, 863, 874], "snwp_num": 13, "max_seq": 13, "max": [13, 28, 29, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 551, 716, 765, 768, 793, 794, 894, 895, 896, 934, 973, 1011, 1049, 1090, 1129, 1168, 1206, 1244, 1274, 1306, 1340, 1374, 1404, 1436, 1465, 1493, 1521, 1553, 1583, 1615, 1645], "stop": [13, 1800, 1818], "relperm_nwp": 13, "relperm_wp": 13, "rate_abs_nwp": 13, "rate_abs_wp": 13, "rate_enwp": 13, "rate_ewp": 13, "43": [13, 25, 32], "44": [13, 25, 30, 32], "45": [13, 24, 25, 32, 1720], "46": [13, 25, 32], "kr_nwp": 13, "kr_wp": 13, "kr": 13, "0x7fa18d7cdca0": 13, "folder": [14, 33, 35, 619, 623], "contribut": 14, "develop": [14, 20, 25, 29, 32, 34, 35, 619], "quit": [14, 25, 27, 28, 32, 718, 916, 955, 1070, 1111, 1150], "perman": 14, "repositori": 14, "via": [14, 17, 25, 26, 30, 32, 35, 615, 1069], "github": [14, 35, 1745], "NOT": [14, 32, 543, 607, 620, 781, 783, 786, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637], "suit": [14, 28, 30, 1540, 1602], "gaurante": 14, "usual": [14, 17, 22, 26, 29], "them": [14, 15, 21, 22, 24, 25, 26, 27, 29, 30, 32, 33, 524, 543, 607, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1680, 1683, 1684, 1708, 1713, 1718, 1721, 1722, 1805, 1823], "encourag": 14, "__version__": 14, "reader": 14, "least": [14, 24, 1698, 1706], "version": [14, 24, 27, 28, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 371, 405, 438, 471, 504, 533, 553, 829, 865, 936, 975, 1013, 1051, 1092, 1131, 1170, 1208, 1246, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647, 1733, 1735, 1737, 1739, 1742, 1744, 1746, 1748, 1750, 1752, 1753, 1755, 1808], "inten": 14, "part": [15, 22, 26, 27, 31, 687, 702, 832, 856, 863, 867, 874, 927, 928, 966, 967, 1004, 1005, 1042, 1043, 1081, 1082, 1122, 1123, 1161, 1162, 1199, 1200, 1237, 1238, 1690, 1694, 1695, 1708, 1721, 1734, 1736, 1747, 1749], "design": [15, 17, 21, 22, 543, 607, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637], "cover": [15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "pore_to_pore_dist": [15, 29], "those": [15, 27, 29, 33, 380, 414, 447, 480, 623, 713, 716, 734, 765, 768, 793, 794, 924, 927, 928, 938, 963, 966, 967, 977, 1001, 1004, 1005, 1015, 1039, 1042, 1043, 1053, 1078, 1081, 1082, 1094, 1119, 1122, 1123, 1133, 1158, 1161, 1162, 1172, 1196, 1199, 1200, 1210, 1234, 1237, 1238, 1248, 1689, 1691, 1694, 1695], "receiv": [15, 27, 43, 55, 75, 87, 102, 115, 135, 147, 168, 180, 200, 213, 233, 245, 266, 278, 299, 311, 332, 344, 365, 377, 399, 411, 432, 444, 465, 477, 498, 510, 547, 559, 571, 575, 825, 923, 943, 962, 982, 1000, 1020, 1038, 1058, 1077, 1099, 1118, 1138, 1157, 1177, 1195, 1215, 1233, 1253, 1270, 1282, 1300, 1314, 1334, 1348, 1368, 1382, 1400, 1412, 1430, 1444, 1461, 1473, 1489, 1501, 1517, 1529, 1547, 1561, 1579, 1591, 1609, 1623, 1641, 1653], "avoid": [15, 17, 26, 28, 32, 622], "long": [15, 24, 26, 28, 29, 67, 93, 125, 158, 191, 223, 256, 289, 322, 355, 389, 422, 455, 488, 520, 538, 566, 796, 811, 921, 926, 950, 960, 965, 989, 998, 1003, 1027, 1036, 1041, 1065, 1075, 1080, 1106, 1116, 1121, 1145, 1155, 1160, 1184, 1193, 1198, 1222, 1231, 1236, 1260, 1289, 1294, 1322, 1328, 1356, 1362, 1390, 1419, 1424, 1452, 1480, 1508, 1536, 1541, 1569, 1598, 1603, 1631, 1660, 1690], "tail": [15, 28, 712, 720, 771, 804, 1188], "And": [15, 19, 21, 24, 26, 28, 29, 31], "featur": [15, 17, 21, 24, 26, 27, 28, 29, 35, 524, 591, 619, 894], "rand": [15, 19, 21, 28, 30, 717, 719, 721, 769, 770, 772, 795, 796, 800, 807, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232], "5292881": 15, "62911362": 15, "56165803": 15, "52692991": 15, "45419288": 15, "58753647": 15, "46255233": 15, "7350638": 15, "77819766": 15, "wonder": [15, 24], "why": [15, 24], "write": [15, 19, 21, 22, 24, 26, 28, 626, 627, 630, 638], "pass": [15, 24, 26, 28, 29, 30, 380, 414, 447, 480, 543, 562, 607, 610, 825, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 850, 852, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 870, 871, 873, 874, 877, 904, 917, 946, 956, 985, 994, 1023, 1032, 1061, 1071, 1102, 1112, 1141, 1151, 1180, 1189, 1218, 1227, 1256, 1266, 1285, 1295, 1318, 1329, 1352, 1363, 1386, 1396, 1415, 1425, 1448, 1457, 1476, 1485, 1504, 1513, 1532, 1542, 1565, 1575, 1594, 1604, 1627, 1637, 1656, 1684, 1715, 1724, 1725, 1749, 1806, 1854], "what": [15, 17, 21, 22, 24, 26, 27, 28, 29, 30, 35, 825, 894, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1713], "forc": [15, 28, 61, 383], "expect": [15, 25, 28, 30, 1843], "caught": [15, 24], "written": [15, 21, 24, 26, 28, 29, 31, 638], "abil": [15, 24, 26, 30, 31, 524, 578], "variou": [15, 27, 28, 30, 61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 352, 383, 384, 386, 417, 419, 450, 452, 483, 485, 516, 517, 623, 675, 690, 705, 727, 745, 780], "placesn": 15, "throughout": [15, 19, 26, 28, 29, 1484], "script": [15, 29, 1671], "desir": [15, 26, 27, 28, 29, 30, 543, 594, 607, 624, 626, 630, 631, 635, 637, 639, 846, 917, 921, 922, 956, 960, 961, 993, 994, 998, 999, 1032, 1036, 1037, 1071, 1075, 1076, 1112, 1116, 1117, 1151, 1155, 1156, 1189, 1193, 1194, 1227, 1231, 1232, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1716], "proudc": 15, "worri": [17, 22], "until": [17, 32, 718, 1747], "equival": [17, 30, 59, 67, 89, 93, 119, 125, 151, 158, 184, 191, 217, 223, 249, 256, 282, 289, 315, 322, 348, 355, 381, 389, 415, 422, 448, 455, 481, 488, 514, 520, 538, 562, 566, 610, 924, 927, 928, 938, 946, 950, 963, 966, 967, 977, 985, 989, 1001, 1004, 1005, 1015, 1023, 1027, 1039, 1042, 1043, 1053, 1061, 1065, 1078, 1081, 1082, 1094, 1102, 1106, 1119, 1122, 1123, 1133, 1141, 1145, 1158, 1161, 1162, 1172, 1180, 1184, 1196, 1199, 1200, 1210, 1218, 1222, 1234, 1237, 1238, 1248, 1256, 1260, 1285, 1289, 1318, 1322, 1326, 1352, 1356, 1360, 1386, 1390, 1394, 1415, 1419, 1448, 1452, 1476, 1480, 1504, 1508, 1532, 1536, 1565, 1569, 1573, 1594, 1598, 1627, 1631, 1635, 1656, 1660, 1691, 1694, 1695, 1749, 1751], "web": 17, "browser": [17, 33], "window": 17, "tab": [17, 28, 33], "insid": [17, 744, 894, 1084], "isol": [17, 27, 1683, 1713, 1863], "associ": [17, 459, 524, 591, 712, 716, 717, 719, 720, 721, 765, 768, 769, 770, 771, 772, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 848, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 890, 891, 892, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 1484, 1806, 1857], "There": [17, 24, 25, 26, 27, 28, 29, 30, 31, 620, 779], "open": [17, 33, 34, 35, 637, 901, 902, 1690, 1806, 1843, 1852], "regist": [17, 1806], "load": [17, 618, 619, 622, 623, 1852, 1853, 1858], "verifi": [17, 22, 31], "current": [17, 21, 30, 33, 37, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 619, 901, 902, 903, 905, 906, 907, 908, 909, 910, 1722, 1808, 1852, 1853, 1857, 1858], "empti": [17, 29, 30, 31, 50, 54, 59, 82, 86, 89, 109, 114, 119, 142, 146, 151, 175, 179, 184, 207, 212, 217, 240, 244, 249, 273, 277, 282, 306, 310, 315, 339, 343, 348, 372, 376, 381, 406, 410, 415, 439, 443, 448, 472, 476, 481, 505, 509, 514, 535, 554, 558, 572, 587, 602, 818, 937, 942, 976, 981, 1014, 1019, 1052, 1057, 1093, 1098, 1132, 1137, 1171, 1176, 1209, 1214, 1247, 1252, 1277, 1281, 1309, 1313, 1343, 1347, 1377, 1381, 1407, 1411, 1439, 1443, 1456, 1468, 1472, 1496, 1500, 1524, 1528, 1556, 1560, 1586, 1590, 1618, 1622, 1648, 1652, 1696, 1756, 1764, 1776, 1790, 1802, 1820, 1837, 1854, 1856, 1862], "automat": [17, 26, 28, 30, 31, 631, 796, 1671, 1698, 1808, 1854], "id": [17, 25, 33, 915, 931, 933, 954, 970, 972, 993, 1008, 1010, 1031, 1046, 1048, 1069, 1087, 1089, 1110, 1126, 1128, 1149, 1165, 1167, 1188, 1203, 1205, 1226, 1241, 1243], "0x7f36a37dad60": 17, "possibl": [17, 21, 24, 25, 26, 27, 28, 29, 30, 35, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 595, 784, 785, 927, 928, 966, 967, 1004, 1005, 1031, 1042, 1043, 1081, 1082, 1122, 1123, 1161, 1162, 1199, 1200, 1226, 1237, 1238, 1672, 1684, 1694, 1695, 1716, 1806], "proj": [17, 1808, 1847, 1854], "new_project": 17, "pn2": [17, 1722], "demo": [17, 24, 26, 30, 31, 32, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148], "activ": [17, 34, 35, 1843], "proj_01": [17, 1854], "proj_02": [17, 1847], "0x7f36a37b6a40": 17, "purg": [17, 29, 60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 382, 416, 449, 482, 515, 563, 576, 947, 986, 1024, 1062, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1505, 1533, 1566, 1595, 1628, 1657], "close_project": 17, "again": [17, 19, 27, 28, 31, 718], "pattern": [17, 32, 713, 896], "ONE": 17, "session": [17, 1843], "enabl": [17, 32, 634, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "lookup": [17, 27, 29, 30, 31, 839, 852, 1484], "relationship": [17, 22], "belong": [17, 21, 29, 32, 98, 543, 607, 811, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1682, 1721, 1806], "scan": [17, 28, 1083, 1084], "item": [17, 24, 27, 28, 30, 38, 72, 99, 130, 163, 195, 197, 228, 261, 294, 327, 360, 394, 427, 460, 493, 526, 545, 580, 592, 894, 903, 905, 906, 907, 908, 909, 910, 919, 958, 996, 1034, 1073, 1114, 1153, 1191, 1229, 1268, 1297, 1298, 1331, 1332, 1365, 1366, 1398, 1427, 1428, 1459, 1487, 1515, 1544, 1545, 1577, 1606, 1607, 1639, 1736, 1738, 1749, 1751, 1757, 1769, 1782, 1783, 1794, 1796, 1802, 1805, 1807, 1811, 1814, 1820, 1823, 1826, 1844, 1867, 1868], "0x7f36a333b400": 17, "handl": [17, 25, 27, 28, 30, 32, 59, 60, 89, 90, 119, 121, 151, 152, 184, 185, 217, 219, 249, 250, 282, 283, 315, 316, 348, 349, 381, 382, 415, 416, 448, 449, 481, 482, 514, 515, 543, 563, 576, 607, 615, 622, 632, 635, 796, 825, 917, 947, 956, 986, 994, 1024, 1032, 1062, 1069, 1071, 1103, 1112, 1142, 1151, 1181, 1189, 1219, 1227, 1257, 1266, 1286, 1295, 1317, 1319, 1329, 1351, 1353, 1363, 1385, 1387, 1396, 1416, 1425, 1447, 1449, 1457, 1477, 1485, 1505, 1513, 1533, 1542, 1564, 1566, 1575, 1595, 1604, 1626, 1628, 1637, 1657, 1671, 1847, 1862], "trigger": [17, 24, 30], "doe": [17, 21, 26, 27, 28, 30, 31, 32, 60, 61, 67, 69, 90, 93, 95, 121, 125, 127, 152, 158, 160, 185, 191, 193, 196, 219, 223, 225, 250, 256, 258, 283, 289, 291, 316, 322, 324, 349, 355, 357, 382, 383, 389, 391, 416, 422, 424, 449, 455, 457, 482, 488, 490, 515, 520, 522, 538, 540, 563, 566, 568, 576, 589, 604, 620, 638, 781, 782, 783, 784, 785, 786, 899, 947, 950, 952, 986, 989, 991, 1024, 1027, 1029, 1062, 1065, 1067, 1103, 1106, 1108, 1142, 1145, 1147, 1181, 1184, 1186, 1219, 1222, 1224, 1257, 1260, 1262, 1286, 1289, 1291, 1319, 1322, 1324, 1353, 1356, 1358, 1387, 1390, 1392, 1416, 1419, 1421, 1449, 1452, 1454, 1477, 1480, 1482, 1505, 1508, 1510, 1533, 1536, 1538, 1566, 1569, 1571, 1595, 1598, 1600, 1628, 1631, 1633, 1657, 1660, 1662, 1698, 1714, 1719, 1766, 1780, 1792, 1845, 1860, 1863], "search": [17, 29, 55, 66, 87, 92, 98, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 354, 377, 388, 411, 421, 444, 454, 477, 487, 510, 519, 559, 565, 575, 577, 718, 926, 943, 949, 965, 982, 988, 1003, 1020, 1026, 1041, 1058, 1064, 1080, 1099, 1105, 1121, 1138, 1144, 1160, 1177, 1183, 1198, 1215, 1221, 1236, 1253, 1259, 1282, 1288, 1314, 1321, 1348, 1355, 1382, 1389, 1412, 1418, 1444, 1451, 1473, 1479, 1501, 1507, 1529, 1535, 1561, 1568, 1591, 1597, 1623, 1630, 1653, 1659], "seem": [17, 24, 29], "convolut": [17, 22, 713], "benefit": [17, 28, 30], "v1": 17, "lead": [17, 28, 1684], "memori": [17, 27, 29, 622, 1672], "leak": 17, "tricki": 17, "delet": [17, 24, 25, 27, 29, 63, 154, 187, 252, 285, 318, 351, 385, 418, 451, 484, 954, 1716, 1734, 1736, 1738, 1852], "syntact": [17, 30], "sugar": [17, 30], "behind": [17, 21, 24, 27, 30, 1484], "scene": [17, 21, 24, 27, 30, 1484], "uphold": 17, "output": [19, 25, 26, 29, 32, 33, 35, 637, 1743, 1867, 1868], "underli": 19, "speci": [19, 21, 26, 825, 829, 834, 835, 844, 849, 852, 854, 858, 860, 869, 901, 902, 1294, 1297, 1317, 1326, 1328, 1331, 1351, 1360, 1362, 1365, 1385, 1394, 1423, 1424, 1427, 1447, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1541, 1544, 1564, 1573, 1603, 1606, 1626, 1635], "j": [19, 22, 26, 27, 31, 34, 196, 713, 823, 832, 835, 841, 856, 863, 867, 874, 879, 892, 896, 1692, 1697, 1720], "consid": [19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 122, 718, 725, 784, 785, 813, 818, 885, 927, 928, 966, 967, 1004, 1005, 1042, 1043, 1081, 1082, 1122, 1123, 1161, 1162, 1188, 1199, 1200, 1237, 1238, 1682, 1690, 1694, 1695, 1698, 1707, 1756], "c_a": [19, 21, 687], "composit": [19, 825, 829, 1293, 1327, 1361, 1540, 1602, 1866], "temperatur": [19, 20, 21, 26, 30, 31, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 551, 652, 655, 825, 828, 829, 830, 832, 834, 835, 836, 839, 841, 850, 852, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 870, 871, 873, 874, 883, 901, 902, 934, 973, 1011, 1049, 1090, 1129, 1168, 1206, 1244, 1274, 1306, 1340, 1374, 1404, 1436, 1465, 1493, 1521, 1553, 1583, 1615, 1645], "subject": [19, 28, 30, 31], "present": [19, 25, 26, 27, 29, 30, 43, 50, 51, 52, 55, 59, 66, 69, 75, 82, 83, 84, 87, 89, 92, 95, 102, 109, 110, 111, 115, 119, 120, 122, 124, 127, 135, 142, 143, 144, 147, 151, 157, 160, 168, 175, 176, 177, 180, 184, 190, 193, 200, 207, 208, 209, 213, 217, 222, 225, 233, 240, 241, 242, 245, 249, 255, 258, 266, 273, 274, 275, 278, 282, 288, 291, 299, 306, 307, 308, 311, 315, 321, 324, 332, 339, 340, 341, 344, 348, 354, 357, 365, 372, 373, 374, 377, 381, 388, 391, 399, 406, 407, 408, 411, 415, 421, 424, 432, 439, 440, 441, 444, 448, 454, 457, 465, 472, 473, 474, 477, 481, 487, 490, 498, 505, 506, 507, 510, 514, 519, 522, 540, 547, 554, 555, 556, 559, 565, 568, 571, 572, 573, 574, 575, 577, 589, 604, 781, 783, 786, 852, 923, 931, 933, 937, 939, 940, 943, 949, 952, 962, 970, 972, 976, 978, 979, 982, 988, 991, 1000, 1008, 1010, 1014, 1016, 1017, 1020, 1026, 1029, 1038, 1046, 1048, 1052, 1054, 1055, 1058, 1064, 1067, 1077, 1087, 1089, 1093, 1095, 1096, 1099, 1105, 1108, 1118, 1126, 1128, 1132, 1134, 1135, 1138, 1144, 1147, 1157, 1165, 1167, 1171, 1173, 1174, 1177, 1183, 1186, 1195, 1203, 1205, 1209, 1211, 1212, 1215, 1221, 1224, 1233, 1241, 1243, 1247, 1249, 1250, 1253, 1259, 1262, 1270, 1277, 1278, 1279, 1282, 1288, 1291, 1300, 1309, 1310, 1311, 1314, 1321, 1324, 1334, 1343, 1344, 1345, 1348, 1355, 1358, 1368, 1377, 1378, 1379, 1382, 1389, 1392, 1400, 1407, 1408, 1409, 1412, 1418, 1421, 1430, 1439, 1440, 1441, 1444, 1451, 1454, 1461, 1468, 1469, 1470, 1473, 1479, 1482, 1489, 1496, 1497, 1498, 1501, 1507, 1510, 1517, 1524, 1525, 1526, 1529, 1535, 1538, 1547, 1556, 1557, 1558, 1561, 1568, 1571, 1579, 1586, 1587, 1588, 1591, 1597, 1600, 1609, 1618, 1619, 1620, 1623, 1630, 1633, 1641, 1648, 1649, 1650, 1653, 1659, 1662, 1766, 1780, 1792, 1800, 1803, 1818, 1821, 1826, 1858, 1860], "2x2": 19, "nt": [19, 21, 22, 25, 26, 27, 28, 31, 32, 37, 46, 52, 66, 67, 68, 71, 78, 84, 92, 93, 94, 97, 105, 111, 124, 125, 126, 129, 138, 144, 157, 158, 159, 162, 171, 177, 190, 191, 192, 195, 203, 209, 222, 223, 224, 227, 236, 242, 255, 256, 257, 260, 269, 275, 288, 289, 290, 293, 302, 308, 321, 322, 323, 326, 335, 341, 354, 355, 356, 359, 368, 374, 388, 389, 390, 393, 402, 408, 421, 422, 423, 426, 435, 441, 454, 455, 456, 459, 468, 474, 487, 488, 489, 492, 501, 507, 519, 520, 521, 525, 530, 538, 539, 542, 550, 556, 565, 566, 567, 574, 577, 672, 687, 702, 744, 779, 915, 921, 922, 932, 940, 949, 950, 951, 954, 960, 961, 971, 979, 988, 989, 990, 993, 998, 999, 1009, 1017, 1026, 1027, 1028, 1031, 1036, 1037, 1047, 1055, 1064, 1065, 1066, 1069, 1075, 1076, 1088, 1096, 1105, 1106, 1107, 1110, 1116, 1117, 1127, 1135, 1144, 1145, 1146, 1149, 1155, 1156, 1166, 1174, 1183, 1184, 1185, 1188, 1193, 1194, 1204, 1212, 1221, 1222, 1223, 1226, 1231, 1232, 1242, 1250, 1259, 1260, 1261, 1265, 1273, 1279, 1288, 1289, 1290, 1293, 1304, 1311, 1321, 1322, 1323, 1327, 1338, 1345, 1355, 1356, 1357, 1361, 1372, 1379, 1389, 1390, 1391, 1395, 1403, 1409, 1418, 1419, 1420, 1423, 1434, 1441, 1451, 1452, 1453, 1456, 1464, 1470, 1479, 1480, 1481, 1484, 1492, 1498, 1507, 1508, 1509, 1512, 1520, 1526, 1535, 1536, 1537, 1540, 1551, 1558, 1568, 1569, 1570, 1574, 1582, 1588, 1597, 1598, 1599, 1602, 1613, 1620, 1630, 1631, 1632, 1636, 1644, 1650, 1659, 1660, 1661, 1684, 1690, 1722, 1727], "interest": [19, 28, 30, 31, 32, 836, 847, 872, 901, 902, 903, 905, 906, 907, 908, 909, 910], "awai": [19, 24], "At": [19, 28, 735, 781, 783, 786, 1706], "absenc": 19, "reaction": [19, 21, 129, 293, 393, 875, 901, 902], "thu": [19, 26, 27, 28, 32, 57, 129, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 687, 702, 725, 927, 928, 966, 967, 1004, 1005, 1042, 1043, 1081, 1082, 1122, 1123, 1161, 1162, 1199, 1200, 1226, 1237, 1238, 1691, 1694, 1695], "balanc": [19, 21, 22, 31], "summat": 19, "g_": [19, 21, 22], "x_j": 19, "x_i": [19, 21, 829, 847, 872, 1305, 1339, 1373, 1435, 1552, 1614], "coupl": [19, 35], "linear": [19, 21, 22, 30, 31, 492, 619, 655, 847, 872, 901, 902, 903, 904, 906, 907, 908, 909, 910, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1188, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243, 1305, 1339, 1373, 1435, 1552, 1614, 1666, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1720], "hand": [19, 22, 24, 25, 27, 28, 30, 31, 32, 37, 129, 162, 227, 260, 293, 326, 359, 393, 426, 459, 492, 1672], "csgraph": [19, 32, 1682, 1696, 1721], "csg": [19, 32], "am": [19, 26, 27, 32, 915, 921, 931, 954, 960, 970, 993, 998, 1008, 1031, 1036, 1046, 1069, 1075, 1087, 1110, 1116, 1126, 1149, 1155, 1165, 1188, 1193, 1203, 1226, 1231, 1241, 1685, 1687, 1692, 1709, 1710, 1711, 1712], "create_adjacency_matrix": [19, 26, 27, 32, 931, 970, 1008, 1046, 1087, 1126, 1165, 1203, 1241], "weight": [19, 26, 27, 32, 713, 828, 829, 830, 831, 838, 840, 843, 847, 849, 859, 861, 862, 870, 871, 872, 873, 883, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243, 1305, 1339, 1373, 1435, 1552, 1614, 1696, 1716, 1726, 1728], "fmt": [19, 27, 32, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "csr": [19, 26, 32, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "triu": [19, 26, 27, 32, 921, 931, 960, 970, 998, 1008, 1036, 1046, 1075, 1087, 1116, 1126, 1155, 1165, 1193, 1203, 1231, 1241], "fals": [19, 25, 26, 27, 29, 32, 55, 58, 60, 61, 66, 87, 90, 92, 98, 115, 121, 124, 147, 150, 152, 157, 180, 183, 185, 190, 213, 219, 222, 245, 248, 250, 255, 278, 281, 283, 288, 311, 314, 316, 321, 344, 347, 349, 354, 377, 382, 383, 388, 411, 416, 421, 444, 449, 454, 477, 482, 487, 510, 513, 515, 519, 559, 563, 565, 575, 576, 577, 594, 596, 614, 628, 630, 632, 634, 636, 921, 922, 924, 926, 927, 928, 938, 943, 947, 949, 960, 961, 963, 965, 966, 967, 977, 982, 986, 988, 998, 999, 1001, 1003, 1004, 1005, 1015, 1020, 1024, 1026, 1036, 1037, 1039, 1041, 1042, 1043, 1053, 1058, 1062, 1064, 1075, 1076, 1078, 1080, 1081, 1082, 1094, 1099, 1103, 1105, 1116, 1117, 1119, 1121, 1122, 1123, 1133, 1138, 1142, 1144, 1155, 1156, 1158, 1160, 1161, 1162, 1172, 1177, 1181, 1183, 1193, 1194, 1196, 1198, 1199, 1200, 1210, 1215, 1219, 1221, 1231, 1232, 1234, 1236, 1237, 1238, 1248, 1253, 1257, 1259, 1282, 1286, 1288, 1314, 1319, 1321, 1348, 1353, 1355, 1382, 1387, 1389, 1412, 1416, 1418, 1444, 1449, 1451, 1473, 1477, 1479, 1501, 1505, 1507, 1529, 1533, 1535, 1561, 1566, 1568, 1591, 1595, 1597, 1623, 1628, 1630, 1653, 1657, 1659, 1686, 1691, 1694, 1695, 1706, 1756, 1805, 1823, 1862, 1870, 1873, 1874], "laplacian": 19, "todens": [19, 21, 26, 27], "03464931": 19, "32518766": 19, "70946165": 19, "24067042": 19, "91548276": 19, "69257814": 19, "98311649": 19, "89859925": 19, "trivial": [19, 27, 29, 32, 195], "movement": [19, 32], "r_i": [19, 22], "replac": [19, 28, 29, 30, 35, 638, 713, 789], "b_i": 19, "x_0": 19, "r_3": 19, "dtype": [19, 26, 27, 32, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236], "n": [19, 22, 24, 27, 30, 32, 620, 685, 700, 734, 736, 791, 835, 836, 855, 856, 879, 901, 902, 926, 927, 965, 966, 1003, 1004, 1031, 1041, 1042, 1069, 1080, 1081, 1121, 1122, 1160, 1161, 1198, 1199, 1226, 1236, 1237, 1682, 1685, 1688, 1696, 1698, 1708, 1721, 1745], "linalg": [19, 1675, 1677], "43416308": 19, "55459634": 19, "23317276": 19, "convert": [19, 20, 27, 28, 32, 67, 93, 125, 158, 191, 223, 256, 289, 322, 355, 389, 422, 455, 488, 520, 538, 566, 627, 636, 713, 829, 844, 850, 904, 925, 950, 964, 989, 1002, 1027, 1040, 1065, 1079, 1106, 1120, 1145, 1159, 1184, 1197, 1222, 1235, 1260, 1289, 1322, 1356, 1390, 1419, 1452, 1480, 1508, 1536, 1569, 1598, 1631, 1660, 1672, 1685, 1692, 1699, 1726, 1728, 1864, 1873, 1874, 1875, 1876], "dens": 19, "form": [19, 22, 27, 28, 30, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 744, 784, 839, 847, 872, 879, 915, 1031, 1149, 1226, 1305, 1339, 1373, 1435, 1552, 1614, 1680, 1715, 1720], "larger": [19, 22, 28, 32, 1697], "natur": [19, 24, 25, 847, 872, 879, 895, 1069, 1305, 1339, 1373, 1435, 1552, 1614], "particular": 19, "bc": [19, 21, 31, 32, 39, 40, 41, 59, 73, 89, 100, 119, 131, 132, 133, 151, 164, 165, 166, 184, 196, 198, 217, 229, 230, 231, 249, 262, 263, 264, 282, 295, 296, 297, 315, 328, 329, 330, 348, 361, 362, 363, 381, 395, 396, 397, 415, 428, 429, 430, 448, 461, 462, 463, 481, 494, 495, 496, 514], "coo": [19, 26, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243, 1685, 1687, 1726, 1728], "manner": [19, 632, 1683], "element": [19, 24, 26, 28, 29, 31, 32, 50, 56, 82, 88, 109, 116, 142, 148, 175, 181, 207, 214, 240, 246, 273, 279, 306, 312, 339, 345, 372, 378, 406, 412, 439, 445, 472, 478, 505, 511, 536, 554, 560, 572, 615, 631, 634, 643, 644, 645, 646, 647, 648, 649, 672, 687, 702, 712, 713, 720, 771, 791, 799, 802, 804, 806, 898, 899, 921, 925, 937, 938, 944, 960, 964, 976, 977, 983, 998, 1002, 1014, 1015, 1021, 1036, 1040, 1052, 1053, 1059, 1075, 1079, 1093, 1094, 1100, 1116, 1120, 1132, 1133, 1139, 1155, 1159, 1171, 1172, 1178, 1193, 1197, 1209, 1210, 1216, 1231, 1235, 1247, 1248, 1254, 1277, 1283, 1309, 1315, 1343, 1349, 1377, 1383, 1407, 1413, 1439, 1445, 1468, 1474, 1496, 1502, 1524, 1530, 1556, 1562, 1586, 1592, 1618, 1624, 1648, 1654, 1682, 1684, 1692, 1721, 1799, 1805, 1812, 1817, 1823, 1826, 1827, 1829, 1830, 1831, 1832, 1837, 1838, 1839, 1841], "row": [19, 26, 27, 818, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243, 1697, 1722], "except": [19, 24, 26, 59, 67, 89, 93, 119, 120, 122, 125, 151, 158, 184, 191, 196, 217, 223, 249, 256, 282, 289, 315, 322, 348, 355, 381, 389, 415, 422, 448, 455, 481, 488, 514, 520, 538, 566, 595, 950, 989, 993, 1027, 1065, 1106, 1145, 1184, 1222, 1260, 1289, 1322, 1356, 1390, 1419, 1452, 1480, 1508, 1536, 1569, 1598, 1631, 1660], "diagon": [19, 27, 915, 1149, 1672, 1720], "cannot": [19, 24, 26, 27, 30, 63, 98, 154, 187, 252, 285, 318, 351, 385, 418, 451, 484, 1188], "index": [19, 24, 26, 27, 28, 29, 30, 32, 524, 620, 779, 816, 925, 964, 1002, 1040, 1079, 1120, 1159, 1197, 1235, 1691, 1801, 1802, 1819, 1820], "inspect": [19, 22, 25, 26, 28, 29, 30, 595, 1188], "hit": [19, 28], "Then": [19, 28, 29, 33], "diag": 19, "setdiag": 19, "eliminate_zero": [19, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232], "proper": [19, 28, 877], "spsolv": [19, 1673, 1677], "tocsr": 19, "identi": 19, "effort": 19, "deal": [19, 30, 31, 1679], "becom": [19, 22, 27, 29, 898, 1867, 1868], "intract": 19, "si": [20, 28, 619], "relat": [20, 22, 25, 28, 30, 32, 735, 736, 825, 875], "tabl": [20, 22, 26, 1672, 1867, 1868, 1873, 1874], "pa": [20, 30, 32, 828, 834, 835, 836, 855, 859, 861, 866, 870, 871, 873, 874], "emperatur": 20, "examin": 20, "section": [20, 21, 22, 26, 28, 31, 619, 666, 668, 706, 707, 708, 709, 710, 713, 723, 725, 740, 741, 742, 759, 760, 761, 762, 767, 781, 877, 885, 887, 888, 1700, 1731, 1732, 1734, 1736, 1738, 1745, 1749, 1751], "298": 20, "101325": 20, "water_correl": [20, 30, 31, 656], "mean_vi": 20, "3f": 20, "mpa": 20, "893": 20, "report": [20, 30, 1835, 1836], "celsiu": 20, "unyt": 20, "pint": 20, "despit": [20, 636], "broad": 20, "due": [20, 28, 29, 31, 825], "overhead": 20, "pre": [20, 21, 26, 28, 30, 687, 702, 717, 769, 795], "still": [21, 25, 32, 35], "progress": [21, 23, 32], "incorpor": 21, "chemic": [21, 30, 825, 829, 839, 852, 865, 1293, 1484, 1540, 1602], "0x7fd459df8f40": 21, "ph": 21, "varieti": [21, 25, 26, 30, 31, 1843], "standar": 21, "a_0": 21, "a_1": 21, "a_3": 21, "rightarrow": [21, 22], "r_a": 21, "kc_a": 21, "kinet": [21, 901, 902], "strong": [21, 30], "source_term": [21, 904], "power_law": 21, "specif": [21, 22, 24, 27, 28, 29, 32, 39, 73, 100, 118, 131, 164, 198, 229, 262, 295, 328, 361, 395, 428, 461, 494, 623, 796, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1679, 1698, 1713, 1749, 1751, 1806], "isotherm": 21, "a1": [21, 30, 825, 903, 905, 906, 907, 908, 909], "a2": [21, 30, 903, 905, 906, 907, 908, 909], "a3": [21, 30, 903, 906, 907, 908, 909], "unpack": 21, "retriev": [21, 22, 24, 26, 28, 29, 56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 378, 412, 445, 478, 511, 524, 536, 560, 717, 769, 795, 944, 983, 1021, 1059, 1100, 1139, 1178, 1216, 1254, 1283, 1315, 1349, 1383, 1413, 1445, 1474, 1502, 1530, 1562, 1592, 1624, 1654, 1806], "throw": [21, 26, 30, 1869], "scalar": [21, 29, 30, 57, 62, 64, 149, 153, 155, 182, 186, 188, 247, 251, 253, 280, 284, 286, 313, 317, 319, 346, 350, 352, 379, 380, 384, 386, 413, 414, 417, 419, 446, 447, 450, 452, 479, 480, 483, 485, 512, 516, 517, 619, 638, 790, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 847, 850, 852, 854, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 870, 871, 872, 873, 874, 916, 926, 938, 955, 965, 977, 1003, 1015, 1031, 1041, 1053, 1069, 1070, 1080, 1094, 1111, 1121, 1133, 1150, 1160, 1172, 1198, 1210, 1226, 1236, 1248, 1294, 1305, 1326, 1328, 1339, 1360, 1362, 1373, 1394, 1424, 1435, 1541, 1552, 1573, 1603, 1614, 1635, 1681, 1699, 1700, 1701, 1707, 1713, 1716, 1719, 1720], "string": [21, 24, 43, 51, 52, 56, 59, 75, 83, 84, 88, 89, 102, 110, 111, 116, 119, 135, 143, 144, 148, 151, 168, 176, 177, 181, 184, 200, 208, 209, 214, 217, 233, 241, 242, 246, 249, 266, 274, 275, 279, 282, 299, 307, 308, 312, 315, 332, 340, 341, 345, 348, 365, 373, 374, 378, 381, 399, 407, 408, 412, 415, 432, 440, 441, 445, 448, 465, 473, 474, 478, 481, 498, 506, 507, 511, 514, 536, 547, 555, 556, 560, 561, 571, 573, 574, 609, 631, 634, 836, 923, 939, 940, 944, 945, 962, 978, 979, 983, 984, 1000, 1016, 1017, 1021, 1022, 1038, 1054, 1055, 1059, 1060, 1077, 1095, 1096, 1100, 1101, 1118, 1134, 1135, 1139, 1140, 1157, 1173, 1174, 1178, 1179, 1195, 1211, 1212, 1216, 1217, 1233, 1249, 1250, 1254, 1255, 1270, 1278, 1279, 1283, 1284, 1300, 1310, 1311, 1315, 1316, 1334, 1344, 1345, 1349, 1350, 1368, 1378, 1379, 1383, 1384, 1400, 1408, 1409, 1413, 1414, 1430, 1440, 1441, 1445, 1446, 1461, 1469, 1470, 1474, 1475, 1489, 1497, 1498, 1502, 1503, 1517, 1525, 1526, 1530, 1531, 1547, 1557, 1558, 1562, 1563, 1579, 1587, 1588, 1592, 1593, 1609, 1619, 1620, 1624, 1625, 1641, 1649, 1650, 1654, 1655, 1684, 1732, 1734, 1745, 1754, 1852, 1857, 1867, 1868], "set_sourc": 21, "act": [21, 24, 26, 724, 726, 788, 1681, 1875], "seen": [21, 25, 26, 28, 29, 30, 31], "fick_02": 21, "0x7fd459bd9ea0": 21, "boolean": [21, 24, 25, 32, 49, 55, 60, 66, 67, 68, 81, 87, 90, 92, 93, 94, 108, 115, 121, 124, 125, 126, 141, 147, 152, 157, 158, 159, 174, 180, 185, 190, 191, 192, 206, 213, 219, 222, 223, 224, 239, 245, 250, 255, 256, 257, 272, 278, 283, 288, 289, 290, 305, 311, 316, 321, 322, 323, 338, 344, 349, 354, 355, 356, 371, 377, 382, 388, 389, 390, 405, 411, 416, 421, 422, 423, 438, 444, 449, 454, 455, 456, 471, 477, 482, 487, 488, 489, 504, 510, 515, 519, 520, 521, 533, 538, 539, 553, 559, 563, 565, 566, 567, 570, 575, 576, 577, 634, 927, 928, 936, 943, 947, 949, 950, 951, 966, 967, 975, 982, 986, 988, 989, 990, 1004, 1005, 1013, 1020, 1024, 1026, 1027, 1028, 1042, 1043, 1051, 1058, 1062, 1064, 1065, 1066, 1081, 1082, 1092, 1099, 1103, 1105, 1106, 1107, 1122, 1123, 1131, 1138, 1142, 1144, 1145, 1146, 1161, 1162, 1170, 1177, 1181, 1183, 1184, 1185, 1199, 1200, 1208, 1215, 1219, 1221, 1222, 1223, 1237, 1238, 1246, 1253, 1257, 1259, 1260, 1261, 1276, 1282, 1286, 1288, 1289, 1290, 1308, 1314, 1319, 1321, 1322, 1323, 1342, 1348, 1353, 1355, 1356, 1357, 1376, 1382, 1387, 1389, 1390, 1391, 1406, 1412, 1416, 1418, 1419, 1420, 1438, 1444, 1449, 1451, 1452, 1453, 1467, 1473, 1477, 1479, 1480, 1481, 1495, 1501, 1505, 1507, 1508, 1509, 1523, 1529, 1533, 1535, 1536, 1537, 1555, 1561, 1566, 1568, 1569, 1570, 1585, 1591, 1595, 1597, 1598, 1599, 1617, 1623, 1628, 1630, 1631, 1632, 1647, 1653, 1657, 1659, 1660, 1661, 1682, 1686, 1687, 1690, 1691, 1694, 1695, 1706, 1707, 1708, 1716, 1718, 1721, 1867, 1868], "true": [21, 24, 25, 26, 27, 28, 29, 32, 55, 61, 66, 67, 68, 87, 92, 93, 94, 98, 115, 124, 125, 126, 147, 157, 158, 159, 180, 190, 191, 192, 196, 213, 222, 223, 224, 245, 255, 256, 257, 278, 288, 289, 290, 311, 321, 322, 323, 344, 354, 355, 356, 377, 383, 388, 389, 390, 411, 421, 422, 423, 444, 454, 455, 456, 477, 487, 488, 489, 510, 519, 520, 521, 524, 538, 539, 559, 565, 566, 567, 575, 577, 636, 662, 667, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 696, 699, 703, 704, 706, 710, 765, 768, 777, 793, 794, 921, 922, 924, 926, 927, 928, 938, 943, 949, 950, 951, 960, 961, 963, 965, 966, 967, 977, 982, 988, 989, 990, 993, 998, 999, 1001, 1003, 1004, 1005, 1015, 1020, 1026, 1027, 1028, 1036, 1037, 1039, 1041, 1042, 1043, 1053, 1058, 1064, 1065, 1066, 1075, 1076, 1078, 1080, 1081, 1082, 1094, 1099, 1105, 1106, 1107, 1116, 1117, 1119, 1121, 1122, 1123, 1133, 1138, 1144, 1145, 1146, 1155, 1156, 1158, 1160, 1161, 1162, 1172, 1177, 1183, 1184, 1185, 1193, 1194, 1196, 1198, 1199, 1200, 1210, 1215, 1221, 1222, 1223, 1231, 1232, 1234, 1236, 1237, 1238, 1248, 1253, 1259, 1260, 1261, 1282, 1288, 1289, 1290, 1297, 1314, 1321, 1322, 1323, 1331, 1348, 1355, 1356, 1357, 1365, 1382, 1389, 1390, 1391, 1412, 1418, 1419, 1420, 1427, 1444, 1451, 1452, 1453, 1473, 1479, 1480, 1481, 1501, 1507, 1508, 1509, 1529, 1535, 1536, 1537, 1544, 1561, 1568, 1569, 1570, 1591, 1597, 1598, 1599, 1606, 1623, 1630, 1631, 1632, 1653, 1659, 1660, 1661, 1682, 1684, 1685, 1686, 1687, 1691, 1694, 1695, 1699, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1716, 1721, 1834, 1862, 1870, 1873, 1874], "had": [21, 29], "another_react": 21, "printout": [21, 25, 30], "initial_guess": [21, 31], "awar": [21, 24, 638], "iter": [21, 28, 37, 44, 69, 71, 76, 95, 97, 103, 127, 129, 136, 160, 162, 169, 193, 195, 201, 225, 227, 234, 258, 260, 267, 291, 293, 300, 324, 326, 333, 357, 359, 366, 391, 393, 400, 424, 426, 433, 457, 459, 466, 490, 492, 499, 522, 528, 540, 548, 568, 582, 589, 597, 604, 643, 644, 645, 646, 647, 648, 649, 718, 929, 952, 968, 991, 1006, 1029, 1044, 1067, 1085, 1108, 1124, 1147, 1163, 1186, 1201, 1224, 1239, 1262, 1271, 1291, 1301, 1324, 1335, 1358, 1369, 1392, 1401, 1421, 1431, 1454, 1462, 1482, 1490, 1510, 1518, 1538, 1548, 1571, 1580, 1600, 1610, 1633, 1642, 1662, 1669, 1672, 1759, 1766, 1771, 1780, 1785, 1792, 1794, 1799, 1812, 1817, 1824, 1825, 1848, 1860], "henc": [21, 26, 28], "guess": [21, 58, 150, 183, 248, 281, 314, 347, 513], "phase_01": [21, 30, 31, 1867, 1868], "0x7fd459beab80": 21, "s1": [21, 901, 902, 903, 905, 906, 907, 908, 909, 910], "s2": [21, 901, 902, 903, 905, 906, 907, 908, 909, 910], "recal": [21, 28, 31], "when": [21, 24, 26, 27, 28, 29, 30, 32, 33, 50, 59, 82, 89, 109, 119, 142, 151, 175, 184, 207, 217, 240, 249, 273, 282, 293, 306, 315, 339, 348, 372, 381, 406, 415, 439, 448, 472, 481, 505, 514, 524, 543, 554, 572, 607, 635, 715, 718, 744, 767, 877, 894, 898, 917, 937, 956, 976, 994, 1014, 1032, 1052, 1071, 1093, 1112, 1132, 1151, 1171, 1189, 1209, 1227, 1247, 1266, 1277, 1295, 1309, 1329, 1343, 1363, 1377, 1396, 1407, 1425, 1439, 1457, 1468, 1485, 1496, 1513, 1524, 1542, 1556, 1575, 1586, 1604, 1618, 1637, 1648, 1672, 1696, 1698, 1722, 1732, 1754, 1806, 1858, 1867, 1868], "self": [21, 24, 579], "explanatori": 21, "patankar": 21, "ref": [21, 901, 902], "slope": [21, 798, 901, 902, 903, 905, 906, 907, 908, 909, 910, 1720], "intercept": [21, 26, 798, 901, 902, 903, 905, 906, 907, 908, 909, 910], "outlin": [21, 27, 28, 30, 32, 196, 543, 607, 618, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637], "around": [21, 22, 24, 31, 713, 1083], "flux": [21, 129], "consumpt": 21, "further": [21, 22, 25, 30], "expresss": 21, "abl": [21, 26], "proce": [21, 27, 28, 98], "s_1": 21, "s_2": 21, "system": [21, 22, 615, 901, 902, 1666, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1699, 1717], "unknown": [21, 30, 58, 150, 183, 248, 281, 314, 347, 513], "newton": 21, "rearrang": [21, 22], "deriv": [21, 524], "lump": 21, "togeth": [21, 28, 31, 32, 619, 1723], "enter": [21, 22, 25, 57, 120, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232], "previou": [21, 22, 33], "revisit": 21, "hidden": 21, "_build_a": 21, "_build_b": 21, "_apply_bc": 21, "_apply_sourc": 21, "rh": [21, 37, 129, 162, 227, 260, 293, 326, 359, 393, 426, 459, 492, 615], "evolv": 21, "37698405": 21, "25862264": 21, "11836141": 21, "54802005": 21, "9018147": 21, "3875827": 21, "88286942": 21, "98105472": 21, "77016878": 21, "40173418": 21, "25007319": 21, "34077133": 21, "5420896": 21, "00936485": 21, "32370199": 21, "80055768": 21, "15742044": 21, "90734725": 21, "75030982": 21, "83359772": 21, "6341554": 21, "ultim": [22, 31], "come": [22, 30], "sum_k": 22, "nb": 22, "m_": 22, "ik": 22, "c_i": 22, "c_k": 22, "overal": 22, "exit": [22, 57, 122, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512], "n_p": 22, "cross": [22, 28, 31, 619, 666, 668, 706, 707, 708, 709, 710, 713, 723, 725, 740, 741, 742, 759, 760, 761, 762, 767, 781, 877, 885, 1700], "subscript": [22, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "denot": 22, "diffusion": 22, "transfer": [22, 901, 902, 1069], "cdot": [22, 829, 847, 872, 892, 1305, 1339, 1373, 1435, 1552, 1614], "assembli": 22, "begin": [22, 26, 32], "seri": [22, 25, 26, 31, 32, 685, 700], "electr": [22, 887, 888], "circuit": [22, 901, 902], "analogi": 22, "resist": [22, 734], "invers": [22, 31, 1720], "r_": [22, 901, 902], "r_k": 22, "superscript": 22, "entir": [22, 26, 29, 30, 32, 877, 1705, 1740, 1745], "rewritten": 22, "g_i": 22, "g_k": 22, "simplic": 22, "assumpt": [22, 779], "pi": [22, 31, 702], "d_i": 22, "ell_i": 22, "quad": 22, "d_k": 22, "ell_k": 22, "ell_": 22, "literatur": 22, "text": [22, 1722], "past": 22, "sake": [22, 26], "clariti": 22, "introduc": [22, 25, 26, 28, 30], "terminologi": [22, 29], "coin": 22, "mathcal": 22, "decoupl": 22, "word": [22, 26, 27, 32, 719, 770, 800], "join": [22, 24, 628, 636, 1723, 1736, 1749], "_func": 22, "__all__": 22, "circles_and_rectangl": 22, "cones_and_cylind": 22, "intersecting_con": 22, "hybrid_cones_and_cylind": 22, "trapezoids_and_rectangl": 22, "hybrid_trapezoids_and_rectangl": 22, "intersecting_trapezoid": 22, "pyramids_and_cuboid": 22, "intersecting_pyramid": 22, "hybrid_pyramids_and_cuboid": 22, "squares_and_rectangl": 22, "ncylinders_in_seri": 22, "involv": [22, 32], "molecular": [22, 26, 828, 829, 830, 831, 849, 859, 861, 862, 870, 871, 873, 883], "heat": [22, 162, 841, 1069], "choic": [22, 28, 30], "taken": [22, 28, 30, 779, 1540, 1602, 1685], "dc": 22, "dx": [22, 896], "posit": [22, 57, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 779, 1722], "gradient": [22, 30, 57, 61, 149, 182, 247, 280, 313, 346, 379, 383, 413, 446, 479, 512, 1672], "int_": 22, "bigg": [22, 31], "big": [22, 901, 902], "combin": [22, 29, 30, 636, 687, 702, 954, 1069, 1672, 1714, 1715, 1743], "_i": 22, "_k": 22, "a_i": 22, "a_": [22, 901, 902, 903, 905, 906, 907, 908, 909], "a_k": 22, "declar": 22, "earlier": 22, "breviti": 22, "nitti": 22, "gritti": 22, "pointer": 22, "slightli": [22, 26, 32], "main": [22, 26, 28, 30, 32, 59, 89, 117, 119, 151, 184, 217, 249, 260, 282, 315, 348, 381, 415, 448, 481, 514, 542, 591, 901, 902, 1188, 1809], "satisfi": [22, 29, 55, 66, 87, 92, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 354, 377, 388, 411, 421, 444, 454, 477, 487, 510, 519, 559, 565, 575, 577, 943, 949, 982, 988, 1020, 1026, 1058, 1064, 1099, 1105, 1138, 1144, 1177, 1183, 1215, 1221, 1253, 1259, 1282, 1288, 1314, 1321, 1348, 1355, 1382, 1389, 1412, 1418, 1444, 1451, 1473, 1479, 1501, 1507, 1529, 1535, 1561, 1568, 1591, 1597, 1623, 1630, 1653, 1659, 1689], "drop": [22, 25, 1687], "along": [22, 26, 29, 30, 543, 607, 894, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1680, 1713, 1720], "p_i": 22, "p_k": 22, "slip": 22, "wall": 22, "gradual": 22, "dp": [22, 724, 726], "i_p": 22, "rho": [22, 30, 831, 854], "da": 22, "volumetr": 22, "polar": 22, "moment": 22, "inertia": 22, "calculu": 22, "p_j": 22, "friction": 22, "loss": [22, 31], "inerti": 22, "safe": 22, "keep": [22, 27, 28, 35, 60, 90, 121, 152, 185, 195, 219, 250, 283, 316, 349, 382, 416, 449, 482, 515, 563, 576, 947, 986, 1024, 1062, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1484, 1505, 1533, 1566, 1595, 1628, 1657, 1749, 1751, 1863], "expand": [22, 29, 718], "cylidnr": 22, "128": [22, 32], "hagen": [22, 734, 892], "poiseuil": [22, 31, 734, 892], "ell": 22, "individu": [22, 26, 29, 30, 31, 32, 57, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512, 578, 825, 1423, 1720], "resistor": [22, 26, 31], "eventu": [22, 30], "discuss": [22, 24, 25, 26, 825], "column": [22, 26, 27, 28, 31, 32, 46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 368, 402, 435, 468, 501, 530, 550, 623, 636, 779, 921, 922, 932, 960, 961, 971, 998, 999, 1009, 1036, 1037, 1047, 1075, 1076, 1088, 1116, 1117, 1127, 1155, 1156, 1166, 1193, 1194, 1204, 1231, 1232, 1242, 1273, 1304, 1338, 1372, 1403, 1434, 1464, 1492, 1520, 1551, 1582, 1613, 1644, 1692, 1697, 1782], "third": [22, 27, 901, 902, 1749], "machin": 22, "voxel": [22, 619], "vector": [22, 28, 30, 37, 57, 62, 64, 129, 149, 153, 155, 162, 182, 186, 188, 227, 247, 251, 253, 260, 280, 284, 286, 293, 313, 317, 319, 326, 346, 350, 352, 359, 379, 384, 386, 393, 413, 417, 419, 426, 446, 450, 452, 459, 479, 483, 485, 492, 512, 516, 517, 615, 779, 825, 829, 925, 964, 1002, 1040, 1079, 1120, 1159, 1197, 1235, 1672, 1680, 1692], "input": [22, 27, 33, 924, 926, 927, 928, 938, 963, 965, 966, 967, 977, 1001, 1003, 1004, 1005, 1015, 1039, 1041, 1042, 1043, 1053, 1078, 1080, 1081, 1082, 1094, 1119, 1121, 1122, 1123, 1133, 1158, 1160, 1161, 1162, 1172, 1196, 1198, 1199, 1200, 1210, 1234, 1236, 1237, 1238, 1248, 1680, 1691, 1694, 1695], "type": [22, 24, 25, 26, 29, 31, 33, 35, 39, 46, 47, 49, 51, 52, 56, 58, 59, 67, 68, 73, 78, 79, 81, 83, 84, 88, 89, 93, 94, 100, 105, 106, 108, 110, 111, 116, 119, 120, 122, 125, 126, 131, 138, 139, 141, 143, 144, 148, 150, 151, 158, 159, 164, 171, 172, 174, 176, 177, 181, 183, 184, 191, 192, 198, 203, 204, 206, 208, 209, 214, 217, 223, 224, 229, 236, 237, 239, 241, 242, 246, 248, 249, 256, 257, 262, 269, 270, 272, 274, 275, 279, 281, 282, 289, 290, 295, 302, 303, 305, 307, 308, 312, 314, 315, 322, 323, 328, 335, 336, 338, 340, 341, 345, 347, 348, 355, 356, 361, 368, 369, 371, 373, 374, 378, 380, 381, 389, 390, 395, 402, 403, 405, 407, 408, 412, 414, 415, 422, 423, 428, 435, 436, 438, 440, 441, 445, 447, 448, 455, 456, 461, 468, 469, 471, 473, 474, 478, 480, 481, 488, 489, 494, 501, 502, 504, 506, 507, 511, 513, 514, 520, 521, 530, 531, 533, 536, 538, 539, 550, 551, 553, 555, 556, 560, 566, 567, 573, 574, 615, 618, 619, 620, 622, 623, 627, 634, 635, 672, 687, 702, 709, 713, 715, 716, 718, 721, 725, 731, 734, 738, 744, 756, 761, 765, 767, 768, 772, 775, 779, 782, 790, 793, 794, 796, 798, 799, 802, 803, 805, 807, 811, 813, 818, 829, 831, 835, 843, 846, 848, 849, 850, 852, 855, 856, 862, 863, 869, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 894, 895, 898, 901, 902, 903, 905, 906, 907, 908, 909, 910, 912, 913, 915, 921, 922, 925, 932, 934, 936, 939, 940, 944, 950, 951, 954, 960, 961, 964, 971, 973, 975, 978, 979, 983, 989, 990, 998, 999, 1002, 1009, 1011, 1013, 1016, 1017, 1021, 1027, 1028, 1031, 1036, 1037, 1040, 1047, 1049, 1051, 1054, 1055, 1059, 1065, 1066, 1075, 1076, 1079, 1088, 1090, 1092, 1095, 1096, 1100, 1106, 1107, 1110, 1116, 1117, 1120, 1127, 1129, 1131, 1134, 1135, 1139, 1145, 1146, 1149, 1155, 1156, 1159, 1166, 1168, 1170, 1173, 1174, 1178, 1184, 1185, 1188, 1193, 1194, 1197, 1204, 1206, 1208, 1211, 1212, 1216, 1222, 1223, 1226, 1231, 1232, 1235, 1242, 1244, 1246, 1249, 1250, 1254, 1260, 1261, 1273, 1274, 1276, 1278, 1279, 1283, 1289, 1290, 1297, 1303, 1304, 1305, 1306, 1308, 1310, 1311, 1315, 1322, 1323, 1331, 1337, 1338, 1339, 1340, 1342, 1344, 1345, 1349, 1356, 1357, 1365, 1371, 1372, 1373, 1374, 1376, 1378, 1379, 1383, 1390, 1391, 1403, 1404, 1406, 1408, 1409, 1413, 1419, 1420, 1427, 1433, 1434, 1435, 1436, 1438, 1440, 1441, 1445, 1452, 1453, 1464, 1465, 1467, 1469, 1470, 1474, 1480, 1481, 1492, 1493, 1495, 1497, 1498, 1502, 1508, 1509, 1520, 1521, 1523, 1525, 1526, 1530, 1536, 1537, 1544, 1550, 1551, 1552, 1553, 1555, 1557, 1558, 1562, 1569, 1570, 1582, 1583, 1585, 1587, 1588, 1592, 1598, 1599, 1606, 1612, 1613, 1614, 1615, 1617, 1619, 1620, 1624, 1631, 1632, 1644, 1645, 1647, 1649, 1650, 1654, 1660, 1661, 1672, 1681, 1684, 1685, 1686, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1716, 1717, 1719, 1720, 1723, 1724, 1725, 1734, 1738, 1741, 1743, 1745, 1747, 1749, 1751, 1754, 1808, 1812, 1824, 1825, 1847, 1854, 1862, 1863, 1864, 1867, 1868, 1869, 1870, 1872, 1876], "akbari": 22, "sinton": 22, "bahrami": 22, "viscou": [22, 326], "microchannel": [22, 734], "intern": [22, 26, 723, 724, 725, 726, 1692, 1698], "journal": [22, 736], "54": [22, 25, 30, 32], "2011": 22, "3970": 22, "3978": 22, "majid": 22, "michael": 22, "yovanovich": 22, "richard": 22, "culham": 22, "novel": 22, "singli": 22, "2007": [22, 713], "2492": 22, "2502": 22, "http": [22, 35, 196, 1745], "en": 22, "wikipedia": [22, 26], "org": [22, 196, 631], "wiki": 22, "e2": 22, "80": [22, 25, 32, 1684], "93poiseuille_equ": 22, "misaghian": 22, "niloo": 22, "et": [22, 713, 734, 832, 835, 852, 856, 862, 870, 874, 896], "al": [22, 713, 734, 832, 835, 852, 856, 862, 870, 874, 896], "neural": 22, "geoscienc": 22, "162": [22, 32], "105086": 22, "stil": 23, "structur": [24, 29, 32, 195, 619, 634, 713, 954], "comfort": 24, "topic": [24, 30], "squar": [24, 28, 648, 673, 688, 703, 757, 759, 760, 767, 781, 892, 1031, 1226, 1699, 1707, 1709], "bracket": 24, "round": 24, "tupl": [24, 32, 54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 376, 380, 410, 414, 443, 447, 476, 480, 509, 535, 558, 587, 596, 602, 615, 942, 981, 1019, 1057, 1098, 1137, 1176, 1214, 1252, 1281, 1313, 1347, 1381, 1411, 1443, 1472, 1500, 1528, 1560, 1590, 1622, 1652, 1682, 1690, 1718, 1721, 1764, 1776, 1790, 1856], "immut": 24, "read": [24, 25, 26, 30, 47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 551, 901, 902, 934, 973, 1011, 1049, 1090, 1129, 1168, 1206, 1244, 1274, 1306, 1340, 1374, 1404, 1436, 1465, 1493, 1521, 1553, 1583, 1615, 1645], "32": [24, 25, 32, 1684, 1715], "longer": [24, 28, 634], "ing": 24, "extend": [24, 27, 32, 865, 896, 1684, 1707, 1714, 1741], "200": [24, 25, 32, 928, 967, 1005, 1043, 1082, 1123, 1162, 1200, 1238], "300": [24, 30, 1684, 1722, 1727], "Or": [24, 26, 27], "good": [24, 25, 28], "math": 24, "try": [24, 26], "typeerror": 24, "multipl": [24, 26, 29, 31, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 718, 784, 785, 803, 1685, 1686, 1714, 1722], "duplic": [24, 27, 28, 1697, 1863], "oper": [24, 26, 28, 29, 227, 791, 796, 1720, 1723], "str": [24, 39, 43, 46, 47, 49, 50, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 73, 75, 78, 79, 81, 82, 83, 84, 87, 88, 89, 90, 92, 100, 102, 105, 106, 108, 109, 110, 111, 115, 116, 119, 120, 121, 122, 124, 131, 135, 138, 139, 141, 142, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 157, 164, 168, 171, 172, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 198, 200, 203, 204, 206, 207, 208, 209, 213, 214, 217, 219, 222, 227, 229, 233, 236, 237, 239, 240, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 255, 262, 266, 269, 270, 272, 273, 274, 275, 278, 279, 280, 282, 283, 284, 285, 286, 288, 295, 299, 302, 303, 305, 306, 307, 308, 311, 312, 313, 315, 316, 317, 318, 319, 321, 328, 332, 335, 336, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 352, 354, 361, 365, 368, 369, 371, 372, 373, 374, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 395, 399, 402, 403, 405, 406, 407, 408, 411, 412, 413, 415, 416, 417, 418, 419, 421, 428, 432, 435, 436, 438, 439, 440, 441, 444, 445, 446, 448, 449, 450, 451, 452, 454, 461, 465, 468, 469, 471, 472, 473, 474, 477, 478, 479, 481, 482, 483, 484, 485, 487, 494, 498, 501, 502, 504, 505, 506, 507, 510, 511, 512, 514, 515, 516, 517, 519, 530, 531, 533, 536, 543, 544, 547, 550, 551, 553, 554, 555, 556, 559, 560, 562, 563, 565, 571, 572, 573, 574, 575, 576, 577, 607, 608, 610, 618, 619, 622, 623, 626, 631, 633, 634, 637, 638, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 715, 716, 717, 718, 719, 721, 723, 725, 728, 729, 730, 731, 732, 734, 736, 740, 741, 742, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 765, 767, 768, 769, 770, 772, 774, 775, 776, 777, 781, 782, 783, 784, 785, 786, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 805, 807, 811, 828, 829, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 843, 844, 846, 847, 849, 850, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 894, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 916, 917, 918, 921, 922, 923, 924, 927, 928, 931, 932, 933, 934, 936, 937, 938, 939, 940, 943, 944, 946, 947, 949, 954, 955, 956, 957, 960, 961, 962, 963, 966, 967, 970, 971, 972, 973, 975, 976, 977, 978, 979, 982, 983, 985, 986, 988, 993, 994, 995, 998, 999, 1000, 1001, 1004, 1005, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1023, 1024, 1026, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1042, 1043, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1061, 1062, 1064, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1081, 1082, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1099, 1100, 1102, 1103, 1105, 1110, 1111, 1112, 1113, 1116, 1117, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1141, 1142, 1144, 1149, 1150, 1151, 1152, 1155, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1177, 1178, 1180, 1181, 1183, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1199, 1200, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1215, 1216, 1218, 1219, 1221, 1226, 1227, 1228, 1231, 1232, 1233, 1234, 1237, 1238, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1256, 1257, 1259, 1266, 1267, 1270, 1273, 1274, 1276, 1277, 1278, 1279, 1282, 1283, 1285, 1286, 1288, 1295, 1296, 1300, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1314, 1315, 1317, 1318, 1319, 1321, 1326, 1329, 1330, 1334, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1348, 1349, 1351, 1352, 1353, 1355, 1360, 1363, 1364, 1368, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1382, 1383, 1385, 1386, 1387, 1389, 1394, 1396, 1397, 1400, 1403, 1404, 1406, 1407, 1408, 1409, 1412, 1413, 1415, 1416, 1418, 1425, 1426, 1430, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1444, 1445, 1447, 1448, 1449, 1451, 1457, 1458, 1461, 1464, 1465, 1467, 1468, 1469, 1470, 1473, 1474, 1476, 1477, 1479, 1484, 1485, 1486, 1489, 1492, 1493, 1495, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1507, 1513, 1514, 1517, 1520, 1521, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1542, 1543, 1547, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1561, 1562, 1564, 1565, 1566, 1568, 1573, 1575, 1576, 1579, 1582, 1583, 1585, 1586, 1587, 1588, 1591, 1592, 1594, 1595, 1597, 1604, 1605, 1609, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1623, 1624, 1626, 1627, 1628, 1630, 1635, 1637, 1638, 1641, 1644, 1645, 1647, 1648, 1649, 1650, 1653, 1654, 1656, 1657, 1659, 1672, 1680, 1683, 1688, 1691, 1694, 1695, 1698, 1713, 1715, 1722, 1723, 1732, 1734, 1736, 1738, 1741, 1743, 1745, 1747, 1749, 1751, 1754, 1808, 1847, 1852, 1853, 1854, 1857, 1858, 1867, 1868, 1872], "integ": [24, 29, 631, 718, 1687, 1751], "introduct": [24, 27], "resourc": [24, 892], "internet": 24, "offici": [24, 35], "doc": [24, 1731, 1745], "answer": [24, 26], "question": 24, "exclus": 24, "nativ": [24, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "fast": [24, 27, 32], "downsid": [24, 28], "mini": [24, 28], "languag": [24, 28, 631], "understan": 24, "guid": 24, "fun": [24, 25], "arang": [24, 1869], "30": [24, 25, 32], "60": [24, 25, 32, 34, 852], "75": [24, 32, 33], "90": [24, 25, 30, 32], "hundr": 24, "profici": 24, "dir": 24, "999": [24, 1669, 1671, 1675], "fanci": [24, 26], "111": [24, 25, 32, 1715], "222": [24, 32, 835], "333": 24, "interpret": [24, 623, 904, 1707], "sens": [24, 27, 28, 31], "assur": [24, 1716], "elementwis": 24, "behavior": [24, 25, 28, 29, 30, 736], "unlik": [24, 28, 829, 852], "matlab": 24, "444": 24, "666": 24, "211": [24, 32], "322": 24, "433": 24, "190": [24, 32], "12321": 24, "49284": 24, "110889": 24, "8100": 24, "trick": [24, 28, 29, 31, 1699], "recogn": 24, "lack": [24, 27, 69, 95, 127, 160, 193, 225, 258, 291, 324, 357, 391, 424, 457, 490, 522, 540, 568, 589, 604, 952, 991, 1029, 1067, 1108, 1147, 1186, 1224, 1262, 1291, 1324, 1358, 1392, 1421, 1454, 1482, 1510, 1538, 1571, 1600, 1633, 1662, 1766, 1780, 1792, 1860], "thereof": 24, "offer": [24, 26, 28, 30, 32, 825, 954], "level": [24, 26, 30, 631, 634, 1843, 1865], "arr": [24, 29, 1782], "computation": [24, 32, 195], "ident": [24, 901, 902, 922, 961, 999, 1037, 1076, 1117, 1156, 1194, 1232, 1808], "familiar": 24, "readabl": [24, 619, 632], "peopl": 24, "who": [24, 30], "prefer": [24, 28], "piec": [24, 26, 30], "puzzl": 24, "datatyp": [24, 1809], "address": [24, 33], "pair": [24, 26, 27, 28, 31, 54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 376, 410, 443, 476, 509, 535, 558, 587, 602, 822, 901, 902, 915, 925, 942, 954, 964, 981, 1002, 1019, 1031, 1040, 1057, 1079, 1098, 1110, 1120, 1137, 1149, 1159, 1176, 1188, 1197, 1214, 1226, 1235, 1252, 1281, 1313, 1347, 1381, 1411, 1443, 1472, 1500, 1528, 1560, 1590, 1622, 1652, 1685, 1692, 1696, 1764, 1776, 1790, 1856], "dict_valu": 24, "catch": [24, 29, 1869], "overview": [24, 28], "intimid": 24, "beautifulli": 24, "onc": [24, 28, 30, 31, 35, 544, 608, 918, 957, 995, 1033, 1072, 1113, 1152, 1190, 1228, 1267, 1296, 1330, 1364, 1397, 1426, 1458, 1486, 1514, 1543, 1576, 1605, 1638, 1699, 1805, 1823], "feel": [24, 28], "relev": [24, 29], "extens": [24, 26, 1738, 1751], "often": [24, 26, 27, 29, 30, 31], "augment": [24, 25], "deep": [24, 594, 596, 1808], "dive": [24, 26], "idea": [24, 25, 26], "pertain": [24, 26], "whenev": [24, 1843], "__getitem__": 24, "__setitem__": [24, 26], "doubl": [24, 28, 1734], "underscor": 24, "intrins": 24, "sometim": [24, 64, 155, 188, 253, 286, 319, 352, 386, 419, 452, 485, 517, 1691], "magic": [24, 1484], "plu": [24, 1717, 1720], "extra": [24, 25, 28, 578], "newdict": 24, "setitem": 24, "super": 24, "dnew": 24, "overload": [24, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 371, 405, 438, 471, 504, 533, 553, 936, 975, 1013, 1051, 1092, 1131, 1170, 1208, 1246, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647], "perform": [24, 26, 27, 28, 31, 32, 34, 50, 51, 52, 55, 66, 82, 83, 84, 87, 92, 109, 110, 111, 115, 124, 142, 143, 144, 147, 157, 175, 176, 177, 180, 190, 207, 208, 209, 213, 216, 222, 240, 241, 242, 245, 255, 273, 274, 275, 278, 288, 293, 306, 307, 308, 311, 321, 339, 340, 341, 344, 354, 359, 372, 373, 374, 377, 388, 406, 407, 408, 411, 421, 426, 439, 440, 441, 444, 454, 472, 473, 474, 477, 487, 505, 506, 507, 510, 519, 554, 555, 556, 559, 565, 572, 573, 574, 575, 577, 718, 926, 937, 939, 940, 943, 949, 965, 976, 978, 979, 982, 988, 1003, 1014, 1016, 1017, 1020, 1026, 1031, 1041, 1052, 1054, 1055, 1058, 1064, 1069, 1080, 1093, 1095, 1096, 1099, 1105, 1121, 1132, 1134, 1135, 1138, 1144, 1160, 1171, 1173, 1174, 1177, 1183, 1198, 1209, 1211, 1212, 1215, 1221, 1236, 1247, 1249, 1250, 1253, 1259, 1277, 1278, 1279, 1282, 1288, 1309, 1310, 1311, 1314, 1321, 1343, 1344, 1345, 1348, 1355, 1377, 1378, 1379, 1382, 1389, 1407, 1408, 1409, 1412, 1418, 1439, 1440, 1441, 1444, 1451, 1468, 1469, 1470, 1473, 1479, 1496, 1497, 1498, 1501, 1507, 1524, 1525, 1526, 1529, 1535, 1556, 1557, 1558, 1561, 1568, 1586, 1587, 1588, 1591, 1597, 1618, 1619, 1620, 1623, 1630, 1648, 1649, 1650, 1653, 1659, 1690, 1698, 1720, 1722, 1877], "enforc": [24, 26, 227, 1809, 1812], "foo": [24, 26, 30, 1809], "bar": [24, 26, 30, 33, 1745, 1809], "statement": 24, "rais": [24, 53, 54, 59, 63, 67, 85, 86, 89, 93, 113, 114, 119, 120, 122, 125, 145, 146, 151, 154, 158, 178, 179, 184, 187, 191, 196, 211, 212, 217, 223, 243, 244, 249, 252, 256, 276, 277, 282, 285, 289, 309, 310, 315, 318, 322, 342, 343, 348, 351, 355, 375, 376, 381, 385, 389, 409, 410, 415, 418, 422, 442, 443, 448, 451, 455, 475, 476, 481, 484, 488, 508, 509, 514, 520, 534, 535, 538, 557, 558, 566, 586, 587, 595, 601, 602, 941, 942, 950, 980, 981, 989, 1018, 1019, 1027, 1056, 1057, 1065, 1097, 1098, 1106, 1136, 1137, 1145, 1175, 1176, 1184, 1213, 1214, 1222, 1251, 1252, 1260, 1280, 1281, 1289, 1312, 1313, 1322, 1346, 1347, 1356, 1380, 1381, 1390, 1410, 1411, 1419, 1442, 1443, 1452, 1471, 1472, 1480, 1499, 1500, 1508, 1527, 1528, 1536, 1559, 1560, 1569, 1589, 1590, 1598, 1621, 1622, 1631, 1651, 1652, 1660, 1732, 1754, 1763, 1764, 1775, 1776, 1789, 1790, 1800, 1802, 1803, 1818, 1820, 1821, 1837, 1838, 1855, 1856], "clearli": [24, 28, 29, 32], "implememnt": 24, "startswith": [24, 27], "old": [24, 1720], "ones": [24, 25, 27, 63, 154, 187, 252, 285, 318, 351, 385, 418, 451, 484, 825, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232], "poreprop": 24, "blah": [24, 825], "bob": 24, "summari": [24, 30, 1672, 1741, 1743, 1747], "extrem": [24, 712, 720, 771, 804], "versatil": 24, "handi": 24, "alter": [24, 25, 28, 32], "interact": [24, 25, 1069], "rest": [25, 30, 32, 993, 1873, 1874], "troubleshoot": 25, "full": [25, 28, 30, 31, 35, 524, 543, 607, 623, 662, 663, 665, 672, 713, 887, 888, 917, 956, 994, 1031, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637, 1743], "dedic": [25, 32], "softwar": [25, 33, 619, 621], "draongfli": 25, "shield": 25, "explor": [25, 26, 28, 879, 895, 938, 977, 1015, 1053, 1094, 1133, 1172, 1210, 1248], "late": 25, "10e": 25, "26": [25, 27, 32, 927, 954, 966, 1004, 1042, 1081, 1122, 1161, 1199, 1237], "connreadd": 25, "descript": [25, 49, 60, 81, 90, 108, 121, 141, 152, 174, 185, 206, 219, 239, 250, 272, 283, 305, 316, 338, 349, 371, 382, 405, 416, 438, 449, 471, 482, 504, 515, 533, 543, 553, 563, 576, 607, 613, 614, 894, 898, 910, 917, 936, 947, 956, 975, 986, 994, 1013, 1024, 1032, 1051, 1062, 1071, 1092, 1103, 1112, 1131, 1142, 1151, 1170, 1181, 1189, 1208, 1219, 1227, 1246, 1257, 1266, 1276, 1286, 1295, 1308, 1319, 1329, 1342, 1353, 1363, 1376, 1387, 1396, 1406, 1416, 1425, 1438, 1449, 1457, 1467, 1477, 1485, 1495, 1505, 1513, 1523, 1533, 1542, 1555, 1566, 1575, 1585, 1595, 1604, 1617, 1628, 1637, 1647, 1657, 1683, 1690, 1691, 1694, 1695, 1722, 1736, 1738, 1743, 1749, 1751], "trim": [25, 27, 32, 825, 954, 993, 1031, 1069, 1699, 1714, 1716, 1863], "randint": 25, "500": [25, 28], "practic": [25, 27, 29], "prompt": 25, "0x7f83095f5400": 25, "64": [25, 32], "161": [25, 32], "56": [25, 32], "reveal": [25, 26, 30, 32], "dure": [25, 28, 29, 524, 1722, 1812], "elsewher": [25, 31, 1724, 1725], "convent": [25, 26, 1745], "AND": 25, "28": [25, 32, 652, 856], "29": [25, 32], "31": [25, 30, 32, 652], "61": [25, 32], "62": [25, 32], "19": [25, 26, 29, 31, 32], "23": [25, 29, 32], "24": [25, 29, 32, 901, 902], "27": [25, 32, 927, 966, 1004, 1042, 1081, 1122, 1161, 1199, 1237], "33": [25, 30, 32], "34": [25, 32], "35": [25, 32], "42": [25, 32], "48": [25, 32], "49": [25, 32, 34], "52": [25, 32], "58": [25, 30, 32, 835], "59": [25, 32], "68": [25, 32, 1684], "69": [25, 32], "71": [25, 32, 734], "73": [25, 32, 835], "76": [25, 32], "77": [25, 32], "83": [25, 32], "85": [25, 32], "86": [25, 32], "89": [25, 32], "91": [25, 32], "93": [25, 32], "97": [25, 32], "105": [25, 32], "109": [25, 32], "110": [25, 30, 32, 656, 852], "112": [25, 32], "113": [25, 32], "115": [25, 32], "119": [25, 32], "120": [25, 32], "121": [25, 32], "122": [25, 32], "124": [25, 32, 1727], "126": [25, 32], "130": [25, 32, 879], "131": [25, 32], "133": [25, 32], "134": [25, 32], "135": [25, 32], "136": [25, 32], "139": [25, 32], "140": [25, 32, 655], "141": [25, 32, 736], "143": [25, 32], "144": [25, 32], "146": [25, 32], "147": [25, 32], "148": [25, 30, 32], "149": [25, 32], "150": [25, 31, 32, 874, 1680], "153": [25, 32], "154": [25, 30, 32], "160": [25, 32, 832, 850, 863, 879], "arbitrari": [25, 26, 776, 796, 993, 1031, 1226, 1837, 1865], "even": [25, 28, 29, 30, 816, 927, 966, 1004, 1042, 1081, 1122, 1161, 1199, 1237, 1686], "wil": 25, "catalyst": 25, "pellet": 25, "helper": [25, 29, 1294, 1317, 1326, 1327, 1328, 1351, 1360, 1361, 1362, 1385, 1394, 1424, 1447, 1541, 1564, 1573, 1603, 1626, 1635], "free": [25, 1672], "template_cylinder_annulu": 25, "r_outer": [25, 1724, 1725], "r_inner": [25, 1724, 1725], "templat": [25, 993, 1724, 1725], "facecenteredcub": [25, 915, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "bodycenteredcub": [25, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 1149], "jam": 25, "intersti": 25, "fcc": 25, "bcc": [25, 915], "4x4x4": 25, "corner": [25, 29, 32, 734, 915, 954, 1069, 1149], "node": [25, 28, 32, 620, 1069, 1083, 1084, 1687, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1703, 1707, 1708, 1718, 1724, 1725], "place": [25, 26, 28, 68, 94, 126, 159, 192, 224, 257, 290, 323, 356, 390, 423, 456, 489, 521, 539, 562, 567, 610, 631, 638, 713, 718, 790, 796, 921, 922, 946, 951, 960, 961, 985, 990, 998, 999, 1023, 1028, 1036, 1037, 1061, 1066, 1075, 1076, 1102, 1107, 1116, 1117, 1141, 1146, 1155, 1156, 1180, 1185, 1193, 1194, 1218, 1223, 1231, 1232, 1256, 1261, 1285, 1290, 1318, 1323, 1352, 1357, 1386, 1391, 1415, 1420, 1448, 1453, 1476, 1481, 1504, 1509, 1532, 1537, 1565, 1570, 1594, 1599, 1627, 1632, 1656, 1661, 1719, 1720, 1723, 1804, 1805, 1822, 1823], "whether": [25, 30, 50, 56, 82, 88, 98, 109, 116, 142, 148, 175, 181, 207, 214, 240, 246, 273, 279, 306, 312, 339, 345, 372, 378, 406, 412, 439, 445, 472, 478, 505, 511, 536, 554, 560, 572, 594, 899, 926, 937, 944, 965, 976, 983, 1003, 1014, 1021, 1041, 1052, 1059, 1080, 1093, 1100, 1121, 1132, 1139, 1160, 1171, 1178, 1198, 1209, 1216, 1236, 1247, 1254, 1277, 1283, 1309, 1315, 1343, 1349, 1377, 1383, 1407, 1413, 1439, 1445, 1468, 1474, 1496, 1502, 1524, 1530, 1556, 1562, 1586, 1592, 1618, 1624, 1648, 1654, 1682, 1684, 1691, 1694, 1698, 1705, 1706, 1713, 1721, 1835, 1836, 1872, 1873, 1874], "indidc": 25, "portion": [25, 29, 1685], "color": [25, 32, 33], "0x7f83095c7360": 25, "414": 25, "bodi": [25, 28, 31, 705, 706, 707, 708, 709, 710, 715, 723, 724, 725, 726, 727, 728, 729, 731, 732, 781, 782, 783, 786, 899, 915, 1867, 1868], "corner_to_bodi": [25, 915, 1149], "216": [25, 32], "corner_to_corn": 25, "body_to_bodi": 25, "orang": [25, 28], "eas": 25, "delaunayvoronoidu": [25, 1031, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109], "cartesian": 25, "cyl": 25, "sph": 25, "coordin": [25, 26, 27, 28, 33, 620, 665, 666, 667, 668, 669, 670, 679, 680, 681, 682, 683, 684, 694, 695, 696, 698, 699, 737, 738, 744, 749, 751, 752, 753, 754, 915, 954, 993, 1031, 1069, 1110, 1149, 1188, 1226, 1688, 1689, 1698, 1699, 1700, 1701, 1704, 1716, 1717, 1719, 1720, 1722], "dpore": 25, "dthroat": 25, "preced": [25, 620], "depth": [25, 26, 1865], "littl": [25, 26], "bit": [25, 29, 31, 32], "wide": [25, 26, 28, 34, 1867, 1868], "assort": [25, 30], "deper": 26, "scheme": [26, 27, 877], "humbl": 26, "accord": [26, 43, 50, 55, 66, 75, 82, 87, 92, 102, 109, 115, 124, 135, 142, 147, 157, 168, 175, 180, 190, 195, 200, 207, 213, 222, 233, 240, 245, 255, 266, 273, 278, 288, 299, 306, 311, 321, 332, 339, 344, 354, 365, 372, 377, 388, 399, 406, 411, 421, 432, 439, 444, 454, 465, 472, 477, 487, 498, 505, 510, 519, 547, 554, 559, 565, 571, 572, 575, 577, 923, 927, 928, 937, 943, 949, 962, 966, 967, 976, 982, 988, 1000, 1004, 1005, 1014, 1020, 1026, 1038, 1042, 1043, 1052, 1058, 1064, 1069, 1077, 1081, 1082, 1093, 1099, 1105, 1118, 1122, 1123, 1132, 1138, 1144, 1157, 1161, 1162, 1171, 1177, 1183, 1195, 1199, 1200, 1209, 1215, 1221, 1233, 1237, 1238, 1247, 1253, 1259, 1270, 1277, 1282, 1288, 1300, 1309, 1314, 1321, 1334, 1343, 1348, 1355, 1368, 1377, 1382, 1389, 1400, 1407, 1412, 1418, 1430, 1439, 1444, 1451, 1461, 1468, 1473, 1479, 1489, 1496, 1501, 1507, 1517, 1524, 1529, 1535, 1547, 1556, 1561, 1568, 1579, 1586, 1591, 1597, 1609, 1618, 1623, 1630, 1641, 1648, 1653, 1659, 1713, 1805, 1823], "imagin": 26, "panda": [26, 636], "pull": [26, 35], "pd": 26, "pore_data_sheet": 26, "datafram": [26, 636], "ndim": 26, "474407": 26, "055905": 26, "557595": 26, "090773": 26, "501382": 26, "065994": 26, "472442": 26, "055213": 26, "float64": 26, "05590507143096387": 26, "apt": 26, "colum": 26, "mathemat": 26, "serv": [26, 1740], "identifi": [26, 27, 32, 954, 993, 1690, 1698, 1707, 1713, 1723, 1736, 1738, 1745, 1749, 1751], "wrong": 26, "creation": [26, 1684], "cast": 26, "species_a": 26, "species_b": 26, "request": [26, 27, 30, 31, 46, 47, 55, 66, 78, 79, 87, 92, 105, 106, 115, 124, 138, 139, 147, 157, 171, 172, 180, 190, 203, 204, 213, 222, 236, 237, 245, 255, 269, 270, 278, 288, 302, 303, 311, 321, 335, 336, 344, 354, 368, 369, 377, 388, 402, 403, 411, 421, 435, 436, 444, 454, 468, 469, 477, 487, 501, 502, 510, 519, 530, 531, 550, 551, 559, 562, 565, 575, 577, 610, 846, 931, 932, 933, 934, 943, 946, 949, 970, 971, 972, 973, 982, 985, 988, 1008, 1009, 1010, 1011, 1020, 1023, 1026, 1046, 1047, 1048, 1049, 1058, 1061, 1064, 1087, 1088, 1089, 1090, 1099, 1102, 1105, 1126, 1127, 1128, 1129, 1138, 1141, 1144, 1165, 1166, 1167, 1168, 1177, 1180, 1183, 1203, 1204, 1205, 1206, 1215, 1218, 1221, 1241, 1242, 1243, 1244, 1253, 1256, 1259, 1273, 1274, 1282, 1285, 1288, 1303, 1304, 1305, 1306, 1314, 1318, 1321, 1326, 1337, 1338, 1339, 1340, 1348, 1352, 1355, 1360, 1371, 1372, 1373, 1374, 1382, 1386, 1389, 1394, 1403, 1404, 1412, 1415, 1418, 1433, 1434, 1435, 1436, 1444, 1448, 1451, 1464, 1465, 1473, 1476, 1479, 1492, 1493, 1501, 1504, 1507, 1520, 1521, 1529, 1532, 1535, 1550, 1551, 1552, 1553, 1561, 1565, 1568, 1573, 1582, 1583, 1591, 1594, 1597, 1612, 1613, 1614, 1615, 1623, 1627, 1630, 1635, 1644, 1645, 1653, 1656, 1659], "retreiv": [26, 846], "retun": 26, "subdictionari": [26, 30], "NO": 26, "ask": [26, 30, 595], "int64": [26, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236], "set_label": 26, "meant": [26, 27, 1069, 1713], "pend": 26, "_hidden": 26, "shorthand": 26, "impli": [26, 921, 960, 998, 1036, 1075, 1116, 1155, 1193, 1231], "critic": [26, 30, 830, 841, 855, 859, 861, 862, 865, 866, 870, 871, 873], "v3": [26, 28, 29, 30, 34], "lattice_connect": 26, "dimension": 26, "dispatch": [26, 30], "particularli": [26, 29], "arg": [26, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 525, 542, 591, 606, 915, 954, 993, 1031, 1069, 1110, 1149, 1188, 1226, 1265, 1293, 1327, 1361, 1395, 1423, 1456, 1484, 1512, 1540, 1574, 1602, 1636, 1685, 1730, 1733, 1734, 1735, 1737, 1739, 1742, 1744, 1746, 1748, 1750, 1752, 1753, 1755, 1782, 1806, 1809, 1843, 1866], "dn": 26, "delaunai": [26, 879, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1083, 1084, 1698, 1723, 1726], "plot_tutori": 26, "premis": 26, "sentenc": 26, "diagram": [26, 1069], "colunm": 26, "exactli": [26, 27, 29, 30, 31, 1839], "singular": 26, "technic": [26, 50, 51, 52, 55, 82, 83, 84, 87, 109, 110, 111, 115, 142, 143, 144, 147, 175, 176, 177, 180, 207, 208, 209, 213, 240, 241, 242, 245, 273, 274, 275, 278, 306, 307, 308, 311, 339, 340, 341, 344, 372, 373, 374, 377, 406, 407, 408, 411, 439, 440, 441, 444, 472, 473, 474, 477, 505, 506, 507, 510, 554, 555, 556, 559, 572, 573, 574, 575, 937, 939, 940, 943, 976, 978, 979, 982, 1014, 1016, 1017, 1020, 1052, 1054, 1055, 1058, 1093, 1095, 1096, 1099, 1132, 1134, 1135, 1138, 1171, 1173, 1174, 1177, 1209, 1211, 1212, 1215, 1247, 1249, 1250, 1253, 1277, 1278, 1279, 1282, 1309, 1310, 1311, 1314, 1343, 1344, 1345, 1348, 1377, 1378, 1379, 1382, 1407, 1408, 1409, 1412, 1439, 1440, 1441, 1444, 1468, 1469, 1470, 1473, 1496, 1497, 1498, 1501, 1524, 1525, 1526, 1529, 1556, 1557, 1558, 1561, 1586, 1587, 1588, 1591, 1618, 1619, 1620, 1623, 1648, 1649, 1650, 1653], "rigorosli": 26, "support": [26, 30, 631, 1671, 1672], "unintend": 26, "aris": 26, "ijv": 26, "evid": 26, "symmetr": [26, 27, 921, 954, 960, 998, 1036, 1075, 1116, 1155, 1193, 1231, 1692, 1709, 1839, 1840, 1870], "highli": [26, 880], "mostli": [26, 27, 790, 1681], "nonzero": [26, 27, 713], "travers": [26, 1696], "redund": [26, 922, 961, 999, 1037, 1076, 1117, 1156, 1194, 1232], "triangular": [26, 27, 28, 736, 892, 921, 931, 960, 970, 998, 1008, 1036, 1046, 1075, 1087, 1116, 1126, 1155, 1165, 1193, 1203, 1231, 1241, 1685, 1710, 1711, 1712, 1726, 1728], "lil": [26, 27, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "accept": [26, 29, 43, 49, 50, 51, 52, 55, 66, 75, 81, 82, 83, 84, 87, 92, 102, 108, 109, 110, 111, 115, 124, 135, 141, 142, 143, 144, 147, 157, 168, 174, 175, 176, 177, 180, 190, 200, 206, 207, 208, 209, 213, 222, 233, 239, 240, 241, 242, 245, 255, 266, 272, 273, 274, 275, 278, 288, 299, 305, 306, 307, 308, 311, 321, 332, 338, 339, 340, 341, 344, 354, 365, 371, 372, 373, 374, 377, 388, 399, 405, 406, 407, 408, 411, 421, 432, 438, 439, 440, 441, 444, 454, 465, 471, 472, 473, 474, 477, 487, 498, 504, 505, 506, 507, 510, 519, 533, 547, 553, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 717, 719, 769, 770, 795, 800, 904, 923, 924, 927, 928, 936, 937, 938, 939, 940, 943, 949, 962, 963, 966, 967, 975, 976, 977, 978, 979, 982, 988, 1000, 1001, 1004, 1005, 1013, 1014, 1015, 1016, 1017, 1020, 1026, 1038, 1039, 1042, 1043, 1051, 1052, 1053, 1054, 1055, 1058, 1064, 1077, 1078, 1081, 1082, 1092, 1093, 1094, 1095, 1096, 1099, 1105, 1118, 1119, 1122, 1123, 1131, 1132, 1133, 1134, 1135, 1138, 1144, 1157, 1158, 1161, 1162, 1170, 1171, 1172, 1173, 1174, 1177, 1183, 1195, 1196, 1199, 1200, 1208, 1209, 1210, 1211, 1212, 1215, 1221, 1233, 1234, 1237, 1238, 1246, 1247, 1248, 1249, 1250, 1253, 1259, 1270, 1276, 1277, 1278, 1279, 1282, 1288, 1300, 1308, 1309, 1310, 1311, 1314, 1321, 1334, 1342, 1343, 1344, 1345, 1348, 1355, 1368, 1376, 1377, 1378, 1379, 1382, 1389, 1400, 1406, 1407, 1408, 1409, 1412, 1418, 1430, 1438, 1439, 1440, 1441, 1444, 1451, 1461, 1467, 1468, 1469, 1470, 1473, 1479, 1489, 1495, 1496, 1497, 1498, 1501, 1507, 1517, 1523, 1524, 1525, 1526, 1529, 1535, 1547, 1555, 1556, 1557, 1558, 1561, 1568, 1579, 1585, 1586, 1587, 1588, 1591, 1597, 1609, 1617, 1618, 1619, 1620, 1623, 1630, 1641, 1647, 1648, 1649, 1650, 1653, 1659, 1684, 1691, 1694, 1695], "merit": 26, "articl": 26, "conductor": 26, "interconnect": [26, 1069], "thing": [26, 27, 28, 29, 30, 32, 35], "enough": [26, 30], "short": 26, "cut": [26, 718], "47440675": 26, "23720338": 26, "55759468": 26, "25069084": 26, "50138169": 26, "2362208": 26, "47244159": 26, "reflect": [26, 1699, 1717], "r1_r2": 26, "methon": 26, "contuit": 26, "get_conduit_data": 26, "understand": [27, 28, 29], "represen": 27, "occassion": 27, "invok": 27, "easier": [27, 28, 29, 227, 915, 954, 1031, 1110, 1149, 1188, 1226], "notabl": 27, "obviou": 27, "grow": [27, 718], "million": [27, 829], "suggest": [27, 1863], "especi": 27, "amount": [27, 32, 1680, 1719, 1720], "intuit": [27, 29], "lower": [27, 31, 32, 779, 801, 921, 960, 998, 1036, 1075, 1116, 1155, 1193, 1231, 1710, 1711], "basi": 27, "suitabl": [27, 719, 721, 770, 772, 777, 800, 807, 880, 1691, 1854], "luckili": 27, "locations_of_nonzero": 27, "values_of_nonzero": 27, "wish": [27, 28, 30, 1698], "dicionari": [27, 915, 954, 1031, 1110, 1149, 1188, 1226], "thank": 27, "sophist": 27, "strutur": 27, "dok": [27, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243, 1692], "gotcha": 27, "remedi": [27, 718], "subtract": [27, 28, 723, 724, 725, 726, 784, 791], "slight": 27, "variat": 27, "create_incidence_matrix": [27, 933, 972, 1010, 1048, 1089, 1128, 1167, 1205, 1243], "background": 27, "predefin": [27, 30, 31, 1293, 1540, 1602], "cn": 27, "p_left": 27, "p_bottom": 27, "lightgrei": [27, 32], "red": 27, "marker": [27, 1698], "blue": 27, "OR": [27, 32], "find_neighbor_por": [27, 938, 977, 1015, 1053, 1094, 1133, 1172, 1188, 1210, 1248], "exclusve_or": 27, "neigbhor": [27, 938, 977, 1015, 1053, 1094, 1133, 1172, 1210, 1248], "xnor": [27, 29, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 354, 365, 372, 373, 374, 377, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 454, 465, 472, 473, 474, 477, 487, 498, 505, 506, 507, 510, 519, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 923, 924, 927, 928, 937, 938, 939, 940, 943, 949, 962, 963, 966, 967, 976, 977, 978, 979, 982, 988, 1000, 1001, 1004, 1005, 1014, 1015, 1016, 1017, 1020, 1026, 1038, 1039, 1042, 1043, 1052, 1053, 1054, 1055, 1058, 1064, 1077, 1078, 1081, 1082, 1093, 1094, 1095, 1096, 1099, 1105, 1118, 1119, 1122, 1123, 1132, 1133, 1134, 1135, 1138, 1144, 1157, 1158, 1161, 1162, 1171, 1172, 1173, 1174, 1177, 1183, 1195, 1196, 1199, 1200, 1209, 1210, 1211, 1212, 1215, 1221, 1233, 1234, 1237, 1238, 1247, 1248, 1249, 1250, 1253, 1259, 1270, 1277, 1278, 1279, 1282, 1288, 1300, 1309, 1310, 1311, 1314, 1321, 1334, 1343, 1344, 1345, 1348, 1355, 1368, 1377, 1378, 1379, 1382, 1389, 1400, 1407, 1408, 1409, 1412, 1418, 1430, 1439, 1440, 1441, 1444, 1451, 1461, 1468, 1469, 1470, 1473, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1547, 1556, 1557, 1558, 1561, 1568, 1579, 1586, 1587, 1588, 1591, 1597, 1609, 1618, 1619, 1620, 1623, 1630, 1641, 1648, 1649, 1650, 1653, 1659, 1691, 1694, 1695], "opposit": [27, 1069], "nxor": [27, 1691, 1694, 1695], "interchang": 27, "logic": [27, 29, 55, 66, 87, 92, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 354, 377, 388, 411, 421, 444, 454, 477, 487, 510, 519, 559, 565, 575, 577, 924, 927, 928, 938, 943, 949, 963, 966, 967, 977, 982, 988, 1001, 1004, 1005, 1015, 1020, 1026, 1039, 1042, 1043, 1053, 1058, 1064, 1078, 1081, 1082, 1094, 1099, 1105, 1119, 1122, 1123, 1133, 1138, 1144, 1158, 1161, 1162, 1172, 1177, 1183, 1196, 1199, 1200, 1210, 1215, 1221, 1234, 1237, 1238, 1248, 1253, 1259, 1282, 1288, 1314, 1321, 1348, 1355, 1382, 1389, 1412, 1418, 1444, 1451, 1473, 1479, 1501, 1507, 1529, 1535, 1561, 1568, 1591, 1597, 1623, 1630, 1653, 1659, 1691, 1694, 1695], "find_connecting_throat": 27, "p1": [27, 925, 964, 1002, 1040, 1079, 1120, 1159, 1197, 1235, 1692, 1693], "p2": [27, 925, 964, 1002, 1040, 1079, 1120, 1159, 1197, 1235, 1692, 1693], "nan": [27, 29, 31, 59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 636, 638, 765, 768, 793, 925, 964, 1002, 1040, 1079, 1120, 1159, 1197, 1235, 1294, 1328, 1362, 1424, 1541, 1603, 1691, 1692, 1869], "find_connected_por": [27, 32], "flatten": [27, 32, 634, 924, 926, 927, 928, 938, 963, 965, 966, 967, 977, 1001, 1003, 1004, 1005, 1015, 1039, 1041, 1042, 1043, 1053, 1078, 1080, 1081, 1082, 1094, 1119, 1121, 1122, 1123, 1133, 1158, 1160, 1161, 1162, 1172, 1196, 1198, 1199, 1200, 1210, 1234, 1236, 1237, 1238, 1248, 1691, 1694, 1695, 1715], "heterogen": [27, 28, 29], "blockag": 27, "actuali": [27, 29], "simpli": [27, 29, 725, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232], "manual": [27, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 377, 411, 444, 477, 510, 559, 575, 943, 982, 1020, 1058, 1099, 1138, 1177, 1188, 1215, 1253, 1282, 1314, 1348, 1382, 1412, 1444, 1473, 1501, 1529, 1561, 1591, 1623, 1653, 1858], "0x7fb4296419f0": 27, "easiest": 27, "bool": [27, 32, 55, 61, 66, 87, 92, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 354, 377, 383, 388, 411, 421, 444, 454, 477, 487, 510, 519, 559, 565, 575, 577, 594, 632, 636, 765, 768, 793, 921, 922, 924, 926, 927, 928, 938, 943, 949, 960, 961, 963, 965, 966, 967, 977, 982, 988, 998, 999, 1001, 1003, 1004, 1005, 1015, 1020, 1026, 1036, 1037, 1039, 1041, 1042, 1043, 1053, 1058, 1064, 1075, 1076, 1078, 1080, 1081, 1082, 1094, 1099, 1105, 1116, 1117, 1119, 1121, 1122, 1123, 1133, 1138, 1144, 1155, 1156, 1158, 1160, 1161, 1162, 1172, 1177, 1183, 1193, 1194, 1196, 1198, 1199, 1200, 1210, 1215, 1221, 1231, 1232, 1234, 1236, 1237, 1238, 1248, 1253, 1259, 1282, 1288, 1314, 1321, 1348, 1355, 1382, 1389, 1412, 1418, 1444, 1451, 1473, 1479, 1501, 1507, 1529, 1535, 1561, 1568, 1591, 1597, 1623, 1630, 1653, 1659, 1684, 1685, 1691, 1694, 1695, 1699, 1705, 1706, 1870, 1872, 1873, 1874], "inde": [27, 32], "signific": 27, "noth": [27, 98, 1723, 1831], "totrim": 27, "offset": [27, 916, 955, 1070, 1111, 1150, 1680, 1681], "cumsum": 27, "lastli": [27, 29, 30], "remap": 27, "did": 27, "0x7fb4296492c0": 27, "Of": 27, "decis": 27, "made": [27, 29, 30, 34, 98, 954, 1719, 1720], "new_por": 27, "vstack": 27, "0x7fb429a8ddb0": 27, "lucki": 27, "hstack": 27, "new_conn": 27, "obvious": 27, "enterpr": 28, "tomograph": 28, "Not": 28, "blank": 28, "0x7fbfdca553b0": 28, "8000": 28, "22800": 28, "2168": 28, "4332": 28, "favor": [28, 921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "thorough": 28, "psd": 28, "norm": [28, 719, 770, 800], "xlim": 28, "greater": 28, "5593961722893255": 28, "80996128980269": 28, "tsd": 28, "5130345457395142": 28, "96861960231873": 28, "nm": 28, "vice": [28, 31, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236], "versa": [28, 31, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236], "strang": 28, "constrict": [28, 805], "problemat": [28, 636], "564": 28, "ever": 28, "tempt": 28, "loop": [28, 32, 825, 1083, 1084], "interog": 28, "ye": 28, "safer": 28, "randomli": [28, 1699, 1716], "amin": 28, "densiti": [28, 30, 652, 655, 656, 828, 829, 830, 831, 832, 854, 901, 902], "alpha": [28, 33, 734, 894, 896], "50e": 28, "shift": [28, 29, 1680], "bia": 28, "toward": 28, "lo": 28, "hi": [28, 619], "prevent": [28, 30, 712, 720, 771, 804], "lie": [28, 744, 916, 955, 1031, 1111, 1150, 1226, 1698, 1699, 1707], "overli": 28, "ppf": [28, 717, 719, 721, 769, 770, 772, 795, 800, 807], "tend": 28, "mandatori": 28, "occupi": [28, 1682, 1708, 1718, 1721], "regard": 28, "r1": 28, "r2": 28, "l_total": 28, "sqrt": 28, "squeez": 28, "lt": 28, "euclidean": 28, "root": [28, 35], "home": 28, "nest": [28, 632, 1865, 1875], "deeper": 28, "unbuff": 28, "sap": 28, "08485305e": 28, "68134509e": 28, "33947201e": 28, "57211706e": 28, "92152447e": 28, "72429278e": 28, "potenti": [28, 901, 902], "substract": 28, "fashion": [28, 1684], "adjac": [28, 716, 718, 737, 738, 765, 768, 793, 794, 915, 921, 922, 931, 954, 960, 961, 970, 993, 998, 999, 1008, 1031, 1036, 1037, 1046, 1069, 1075, 1076, 1087, 1110, 1116, 1117, 1126, 1149, 1155, 1156, 1165, 1188, 1193, 1194, 1203, 1226, 1231, 1232, 1241, 1685, 1687, 1692, 1709, 1710, 1711, 1712, 1726, 1728], "lengthi": 28, "lai": 28, "bare": 28, "job": 28, "fresh": 28, "close": [28, 30, 31, 631, 635, 898], "inherit": [28, 524, 542, 591], "throat_se": 28, "docstr": [28, 29, 30, 61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 352, 383, 384, 386, 417, 419, 450, 452, 483, 485, 516, 517, 544, 608, 918, 957, 995, 1033, 1072, 1113, 1152, 1190, 1228, 1267, 1296, 1330, 1364, 1397, 1426, 1458, 1486, 1514, 1543, 1576, 1605, 1638, 1731, 1736, 1740, 1741, 1743, 1745, 1747, 1749, 1751], "78": [28, 32, 1867, 1868], "charact": [28, 1745, 1867, 1868], "cursor": 28, "explicitli": [28, 620], "track": [28, 32, 524, 1484], "f1": 28, "f2": 28, "f3": 28, "f4": 28, "lens": 28, "06671058e": 28, "49724923e": 28, "03844746e": 28, "92245838e": 28, "40091924e": 28, "59556144e": 28, "05978813e": 28, "48884831e": 28, "03085190e": 28, "tediou": 28, "prone": 28, "predfin": 28, "complet": [28, 60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 382, 416, 449, 482, 515, 563, 576, 898, 901, 902, 947, 986, 1024, 1062, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1505, 1533, 1566, 1595, 1628, 1657, 1697], "pprint": 28, "0x7fbfac0b69d0": 28, "largest_spher": [28, 643, 644, 645, 646, 647, 648, 649], "0x7fbfaa115940": 28, "0x7fbfac0b61f0": 28, "0x7fbfaa115d30": 28, "pore_diamet": [28, 643, 644, 645, 646, 647, 648, 649, 662, 663, 664, 665, 666, 667, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 723, 724, 725, 726, 728, 729, 730, 731, 732, 744, 746, 747, 748, 749, 750, 751, 755, 756, 757, 758, 784, 785, 883, 896], "0x7fbfaa11ea60": 28, "throat_diamet": [28, 643, 644, 645, 646, 647, 648, 649, 662, 663, 664, 671, 672, 673, 674, 676, 677, 678, 685, 686, 687, 688, 689, 691, 692, 693, 697, 700, 701, 702, 703, 704, 730, 735, 740, 741, 742, 744, 746, 747, 748, 755, 756, 757, 758, 760, 761, 762, 774, 775, 781, 782, 784, 785, 786, 883, 894, 895, 896], "0x7fbfac0b6a60": 28, "0x7fbfaa073d30": 28, "0x7fbfaa0e54c0": 28, "0x7fbfaa129430": 28, "0x7fbfaa0b1700": 28, "0x7fbfac0b6c10": 28, "0x7fbfaa0b14c0": 28, "0x7fbfac0b6670": 28, "nice": [28, 1794, 1867, 1868], "add_models_collect": 28, "0x7fbf9c8d69a0": 28, "bound": 28, "nearest": [28, 718, 816, 1722], "dall": 28, "truncat": [28, 666, 671, 677, 679, 680, 686, 692, 694, 695, 701], "reach": [28, 32], "constrain": 28, "life": 28, "recomput": 28, "reomcomput": 28, "15319619": 28, "0328116": 28, "2287953": 28, "23887453": 28, "8411705": 28, "10988224": 28, "59011212e": 28, "06": [28, 614, 652, 655, 813, 818, 895, 896, 898], "75717988e": 28, "13561876e": 28, "66940036e": 28, "27284536e": 28, "36618201": 28, "35063831": 28, "40236746": 28, "58822388": 28, "42461491": 28, "9016327": 28, "11640227e": 28, "20171387e": 28, "57748463e": 28, "30989878e": 28, "79091080e": 28, "automatical": 28, "graph": [28, 30, 594, 595, 596, 620, 627, 921, 922, 931, 960, 961, 970, 998, 999, 1008, 1036, 1037, 1046, 1075, 1076, 1087, 1116, 1117, 1126, 1155, 1156, 1165, 1193, 1194, 1203, 1231, 1232, 1241, 1686, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1707], "networkx": [28, 594, 620, 627], "sort": [28, 32, 195, 899], "tree": [28, 1697, 1716], "downstream": 28, "roughli": 28, "dependency_map": [28, 591, 594, 595], "style": [28, 596], "planar": [28, 662, 667, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 696, 699, 703, 704, 706, 710], "circl": [28, 643, 649, 662, 676, 691, 746, 767, 1707, 1724], "dependency_graph": [28, 591, 595, 596], "draw_networkx": 28, "draw_planar": 28, "bookmark": 29, "certain": [29, 1672, 1715], "0x7fc2a6df3040": 29, "decrib": 29, "nd": [29, 846, 848], "wast": [29, 32], "wors": 29, "consum": 29, "8x": 29, "nonetheless": 29, "invest": 29, "great": 29, "mask1": 29, "mask2": 29, "edg": [29, 32, 620, 715, 767, 954, 1687, 1691, 1692, 1693, 1694, 1696, 1718], "theori": [29, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232, 1691, 1694, 1695], "nor": [29, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 354, 365, 372, 373, 374, 377, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 454, 465, 472, 473, 474, 477, 487, 498, 505, 506, 507, 510, 519, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 923, 937, 939, 940, 943, 949, 962, 976, 978, 979, 982, 988, 1000, 1014, 1016, 1017, 1020, 1026, 1038, 1052, 1054, 1055, 1058, 1064, 1077, 1093, 1095, 1096, 1099, 1105, 1118, 1132, 1134, 1135, 1138, 1144, 1157, 1171, 1173, 1174, 1177, 1183, 1195, 1209, 1211, 1212, 1215, 1221, 1233, 1247, 1249, 1250, 1253, 1259, 1270, 1277, 1278, 1279, 1282, 1288, 1300, 1309, 1310, 1311, 1314, 1321, 1334, 1343, 1344, 1345, 1348, 1355, 1368, 1377, 1378, 1379, 1382, 1389, 1400, 1407, 1408, 1409, 1412, 1418, 1430, 1439, 1440, 1441, 1444, 1451, 1461, 1468, 1469, 1470, 1473, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1547, 1556, 1557, 1558, 1561, 1568, 1579, 1586, 1587, 1588, 1591, 1597, 1609, 1618, 1619, 1620, 1623, 1630, 1641, 1648, 1649, 1650, 1653, 1659], "confus": [29, 32], "nand": [29, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 354, 365, 372, 373, 374, 377, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 454, 465, 472, 473, 474, 477, 487, 498, 505, 506, 507, 510, 519, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 923, 937, 939, 940, 943, 949, 962, 976, 978, 979, 982, 988, 1000, 1014, 1016, 1017, 1020, 1026, 1038, 1052, 1054, 1055, 1058, 1064, 1077, 1093, 1095, 1096, 1099, 1105, 1118, 1132, 1134, 1135, 1138, 1144, 1157, 1171, 1173, 1174, 1177, 1183, 1195, 1209, 1211, 1212, 1215, 1221, 1233, 1247, 1249, 1250, 1253, 1259, 1270, 1277, 1278, 1279, 1282, 1288, 1300, 1309, 1310, 1311, 1314, 1321, 1334, 1343, 1344, 1345, 1348, 1355, 1368, 1377, 1378, 1379, 1382, 1389, 1400, 1407, 1408, 1409, 1412, 1418, 1430, 1439, 1440, 1441, 1444, 1451, 1461, 1468, 1469, 1470, 1473, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1547, 1556, 1557, 1558, 1561, 1568, 1579, 1586, 1587, 1588, 1591, 1597, 1609, 1618, 1619, 1620, 1623, 1630, 1641, 1648, 1649, 1650, 1653, 1659], "retiev": 29, "annoi": [29, 1869], "shortcut": [29, 31, 35, 37, 129, 162, 227, 260, 293, 326, 359, 393, 426, 459, 492, 1069, 1110], "syntax": [29, 620], "certainli": 29, "infer": [29, 916, 955, 993, 1070, 1111, 1150], "suppli": [29, 30, 43, 51, 52, 59, 62, 63, 64, 75, 83, 84, 89, 102, 110, 111, 119, 120, 122, 135, 143, 144, 151, 153, 154, 155, 168, 176, 177, 184, 186, 187, 188, 200, 208, 209, 217, 233, 241, 242, 249, 251, 252, 253, 266, 274, 275, 282, 284, 285, 286, 299, 307, 308, 315, 317, 318, 319, 332, 340, 341, 348, 350, 351, 352, 365, 373, 374, 381, 384, 385, 386, 399, 407, 408, 415, 417, 418, 419, 432, 440, 441, 448, 450, 451, 452, 465, 473, 474, 481, 483, 484, 485, 498, 506, 507, 514, 516, 517, 544, 547, 555, 556, 571, 573, 574, 608, 789, 801, 918, 923, 926, 939, 940, 957, 962, 965, 978, 979, 995, 1000, 1003, 1016, 1017, 1033, 1038, 1041, 1054, 1055, 1072, 1077, 1080, 1095, 1096, 1113, 1118, 1121, 1134, 1135, 1152, 1157, 1160, 1173, 1174, 1190, 1195, 1198, 1211, 1212, 1226, 1228, 1233, 1236, 1249, 1250, 1267, 1270, 1278, 1279, 1296, 1300, 1310, 1311, 1330, 1334, 1344, 1345, 1364, 1368, 1378, 1379, 1397, 1400, 1408, 1409, 1426, 1430, 1440, 1441, 1458, 1461, 1469, 1470, 1486, 1489, 1497, 1498, 1514, 1517, 1525, 1526, 1543, 1547, 1557, 1558, 1576, 1579, 1587, 1588, 1605, 1609, 1619, 1620, 1638, 1641, 1649, 1650, 1684, 1707, 1720, 1806, 1808, 1847], "bonu": 29, "new_arrai": 29, "overwrot": 29, "symbol": [29, 904], "major": [29, 524], "conceptu": 29, "gone": 29, "bimod": 29, "layer": [29, 713, 896, 1720], "v2": [29, 30], "lost": [29, 1845], "suffici": [29, 30], "sai": 29, "separ": [29, 634], "manag": [29, 524, 896], "mainten": 29, "backend": 29, "think": 29, "tidier": 29, "consequ": [29, 31, 901, 902], "mark": [29, 993, 1698], "leav": [29, 57, 60, 90, 121, 149, 152, 182, 185, 219, 247, 250, 280, 283, 313, 316, 346, 349, 379, 382, 413, 416, 446, 449, 479, 482, 512, 515, 563, 576, 947, 986, 1024, 1062, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1505, 1533, 1566, 1595, 1628, 1657], "unspecifi": 29, "everywher": 29, "visibl": 29, "recogin": 29, "redefin": 29, "run_model": 29, "observ": [29, 32], "With": 29, "dealt": [29, 638], "uniform": 29, "uniformli": 29, "abstract": 29, "freeli": 29, "asmask": [29, 55, 66, 87, 92, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 354, 377, 388, 411, 421, 444, 454, 477, 487, 510, 519, 559, 565, 575, 577, 927, 928, 943, 949, 966, 967, 982, 988, 1004, 1005, 1020, 1026, 1042, 1043, 1058, 1064, 1081, 1082, 1099, 1105, 1122, 1123, 1138, 1144, 1161, 1162, 1177, 1183, 1199, 1200, 1215, 1221, 1237, 1238, 1253, 1259, 1282, 1288, 1314, 1321, 1348, 1355, 1382, 1389, 1412, 1418, 1444, 1451, 1473, 1479, 1501, 1507, 1529, 1535, 1561, 1568, 1591, 1597, 1623, 1630, 1653, 1659], "beed": 29, "thermodynam": [30, 31, 825], "framework": 30, "submodul": [30, 660, 717, 769, 787, 795, 808, 824, 875], "exhaust": 30, "librari": [30, 32, 33, 717, 769, 795, 1852, 1857], "polici": 30, "exact": [30, 829], "cantera": 30, "handler": 30, "ca": [30, 839], "leverag": 30, "extern": [30, 1698], "001": [30, 719, 770, 800], "three": [30, 31, 591, 903, 905, 906, 907, 908, 909, 910], "phase1": 30, "0x7fd8c002fe00": 30, "nearli": 30, "broadcast": 30, "perhap": [30, 825], "polynomi": [30, 652, 655], "4th": 30, "experiment": [30, 32, 901, 902], "yield": 30, "a4": [30, 903, 906, 907, 908], "8543e": 30, "6756e": 30, "08": [30, 652, 655, 1669, 1671, 1675], "7831e": 30, "3156e": 30, "03": 30, "a0": [30, 802, 825], "8898e": 30, "00091476": 30, "350": 30, "rerun": [30, 35], "0008697": 30, "00051058": 30, "00082117": 30, "00041743": 30, "th": [30, 1720], "00084707": 30, "00047905": 30, "00079695": 30, "0003751": 30, "viscostii": 30, "custom_mu": 30, "reimplement": 30, "commonli": 30, "appropri": [30, 852, 877, 1698], "phase_02": 30, "0x7fd8bffdbe00": 30, "molar_dens": [30, 652, 655, 656], "thermal_conduct": [30, 652, 655, 656, 659, 858, 860, 912, 913], "vapor_pressur": [30, 656], "salin": [30, 832, 856, 863, 867, 874], "mass_to_molar": [30, 652, 655, 656], "mw": [30, 652, 828, 829, 830, 831, 834, 835, 844, 849, 854, 858, 859, 860, 861, 862, 869, 870, 871, 873, 1866], "param": [30, 37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 525, 542, 825, 828, 829, 830, 831, 834, 835, 836, 839, 841, 844, 849, 852, 854, 855, 858, 859, 860, 861, 862, 866, 869, 870, 871, 873, 915, 954, 993, 1031, 1069, 1110, 1149, 1188, 1226, 1265, 1293, 1327, 1361, 1395, 1423, 1456, 1484, 1512, 1540, 1574, 1602, 1636, 1731, 1732, 1734, 1736, 1738, 1741, 1743, 1747, 1749, 1751, 1754, 1866, 1873, 1874], "molecular_weight": [30, 828, 829, 830, 831, 834, 835, 844, 849, 854, 858, 859, 860, 861, 862, 869, 870, 871, 873, 883, 1484, 1866], "liquid_pure_antoin": [30, 656], "therebi": 30, "molar_denstii": 30, "cycl": [30, 595], "resolv": [30, 591], "upstream": 30, "unusu": 30, "reproduc": 30, "api": [30, 31], "unnecessari": 30, "On": [30, 32, 35], "beta": [30, 901, 902], "creatig": 30, "oxygen": 30, "nitrogen": 30, "o2": 30, "phase_03": 30, "0x7fd8bddecb30": 30, "seealso": 30, "thermo": 30, "synonym": 30, "databas": 30, "BUT": 30, "host": 30, "7782": 30, "common_nam": 30, "charg": [30, 227, 902], "formula": [30, 852, 892], "boiling_temperatur": [30, 855, 859, 861, 862], "188": [30, 32], "melting_temperatur": 30, "triple_point_temperatur": 30, "triple_point_pressur": 30, "9796864589355": 30, "dipole_mo": 30, "lj_diamet": [30, 834], "29728": 30, "lj_energi": [30, 834], "6520845934e": 30, "surface_tension_tb": [30, 836], "013145633010272155": 30, "molar_volume_tb": [30, 836], "802254619756072e": 30, "9988": [30, 652], "critical_temperatur": [30, 825, 829, 830, 834, 841, 855, 862, 866, 870, 871, 873], "critical_pressur": [30, 834, 855, 859, 861, 866, 870, 871, 873], "5042945": 30, "critical_volum": [30, 829, 830], "34e": 30, "critical_compressibilty_factor": 30, "2880002236716698": 30, "acentric_factor": [30, 829, 830, 834, 841, 859, 861, 866, 873], "021": 30, "prefix": [30, 623], "stiel": [30, 871, 873], "thodo": [30, 871], "gas_pure_l": 30, "gas_pure_st": 30, "01023694e": 30, "tcrit": 30, "becuas": [30, 129], "gase": [30, 824], "standardliquid": [30, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601], "standardga": [30, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539], "approximat": 30, "h2o": [30, 1484], "popul": 30, "phase_04": 30, "0x7fd8bddd7860": 30, "heat_capacity_ga": [30, 841], "heat_capac": [30, 838, 839, 840], "phase_05": 30, "0x7fd8bddd7f90": 30, "minim": 30, "liquid_pure_costald": 30, "vc": [30, 829, 830], "omega": [30, 829, 830, 834, 841, 859, 861, 866, 873], "gas_pure_trc": 30, "liquid_pure_rp": 30, "cpg": [30, 841], "liquid_pure_gismr": 30, "tb": [30, 855, 859, 861, 862], "liquid_pure_l": 30, "n2": 30, "standardgasmixtur": [30, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573], "79": [30, 32], "compositio": 30, "mixture_01": 30, "0x7fd8bdd90a90": 30, "mole_fract": [30, 1294, 1317, 1326, 1328, 1351, 1360, 1362, 1385, 1394, 1424, 1447, 1541, 1564, 1573, 1603, 1626, 1635], "blend": 30, "78543425e": 30, "01881831e": 30, "sub": [30, 924, 926, 927, 963, 965, 966, 1001, 1003, 1004, 1039, 1041, 1042, 1078, 1080, 1081, 1119, 1121, 1122, 1158, 1160, 1161, 1196, 1198, 1199, 1234, 1236, 1237, 1691, 1694, 1695], "0x7fd8bddd7090": 30, "0x7fd8bddd7b30": 30, "liquidmixtur": [30, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1602], "gasmixtur": [30, 1293, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1540], "remove_comp": 30, "liter": [30, 938, 977, 1015, 1053, 1094, 1133, 1172, 1210, 1248], "add_comp": 30, "compnam": [30, 846, 1326, 1360, 1394, 1573, 1635], "09391006e": 30, "69779528e": 30, "propertei": 30, "failur": 30, "health": [30, 1297, 1331, 1365, 1427, 1544, 1606, 1756, 1862, 1863], "mole_fraction_too_low": 30, "mole_fraction_too_high": 30, "univers": [30, 734], "symbmol": 30, "instruct": [30, 630], "mole_fraction_weight": 30, "55064928e": 30, "suffix": [30, 1867, 1868], "crucial": 30, "viscsoiti": 30, "turn": [30, 543, 607, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637], "0x7fd5c8339270": 31, "fulli": [31, 32, 35, 898, 1083, 1705], "driven": 31, "0x7fd57e742c20": 31, "00089319": 31, "simplest": 31, "hagan": 31, "tube": [31, 33, 736, 879, 880, 892, 895], "prefactor": [31, 910], "g_h": 31, "aim": [31, 34], "protip": 31, "91246779e": 31, "39922179e": 31, "56630237e": 31, "23707109e": 31, "16930434e": 31, "15448763e": 31, "87764051e": 31, "21086675e": 31, "70515467e": 31, "75265728e": 31, "65855868e": 31, "56013152e": 31, "31861116e": 31, "06772231e": 31, "25161705e": 31, "49334567e": 31, "58113060e": 31, "63233417e": 31, "39081867e": 31, "18972792e": 31, "11503819e": 31, "14595426e": 31, "77516181e": 31, "31648734e": 31, "06376215e": 31, "35873086e": 31, "02664265e": 31, "82209386e": 31, "55454812e": 31, "21510704e": 31, "43370923e": 31, "57971781e": 31, "18508341e": 31, "04925161e": 31, "85636628e": 31, "04662901e": 31, "71835033e": 31, "75876836e": 31, "79239012e": 31, "87224955e": 31, "auotmat": 31, "disabl": 31, "stokes_01": 31, "0x7fd57e748590": 31, "100_000": 31, "set_rate_bc": 31, "preceed": [31, 1734], "sustain": [31, 894], "compon": [31, 825, 829, 835, 836, 847, 848, 849, 872, 904, 1293, 1294, 1303, 1317, 1326, 1327, 1328, 1337, 1351, 1360, 1361, 1362, 1371, 1385, 1394, 1423, 1424, 1433, 1447, 1540, 1541, 1550, 1564, 1573, 1602, 1603, 1612, 1626, 1635, 1720, 1867, 1868], "multiphys": 31, "quanti": 31, "204437": 31, "59397347": 31, "190705": 31, "90361522": 31, "210069": 31, "16687764": 31, "131951": 31, "1304135": 31, "129964": 31, "928015": 31, "kpa": 31, "simplist": 31, "finish": 31, "intersect": [31, 43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 354, 365, 372, 373, 374, 377, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 454, 465, 472, 473, 474, 477, 487, 498, 505, 506, 507, 510, 519, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 666, 668, 669, 670, 682, 683, 684, 697, 698, 699, 725, 744, 752, 753, 754, 781, 782, 783, 784, 786, 923, 924, 927, 928, 937, 938, 939, 940, 943, 949, 962, 963, 966, 967, 976, 977, 978, 979, 982, 988, 1000, 1001, 1004, 1005, 1014, 1015, 1016, 1017, 1020, 1026, 1038, 1039, 1042, 1043, 1052, 1053, 1054, 1055, 1058, 1064, 1077, 1078, 1081, 1082, 1093, 1094, 1095, 1096, 1099, 1105, 1118, 1119, 1122, 1123, 1132, 1133, 1134, 1135, 1138, 1144, 1157, 1158, 1161, 1162, 1171, 1172, 1173, 1174, 1177, 1183, 1195, 1196, 1199, 1200, 1209, 1210, 1211, 1212, 1215, 1221, 1233, 1234, 1237, 1238, 1247, 1248, 1249, 1250, 1253, 1259, 1270, 1277, 1278, 1279, 1282, 1288, 1300, 1309, 1310, 1311, 1314, 1321, 1334, 1343, 1344, 1345, 1348, 1355, 1368, 1377, 1378, 1379, 1382, 1389, 1400, 1407, 1408, 1409, 1412, 1418, 1430, 1439, 1440, 1441, 1444, 1451, 1461, 1468, 1469, 1470, 1473, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1547, 1556, 1557, 1558, 1561, 1568, 1579, 1586, 1587, 1588, 1591, 1597, 1609, 1618, 1619, 1620, 1623, 1630, 1641, 1648, 1649, 1650, 1653, 1659, 1691, 1694, 1695, 1833, 1834], "53460169e": 31, "49458081e": 31, "12687665e": 31, "08760961e": 31, "24977224e": 31, "52643228e": 31, "39900710e": 31, "01139359e": 31, "53996561e": 31, "10494070e": 31, "98435056e": 31, "10631163e": 31, "04441205e": 31, "32165808e": 31, "03117790e": 31, "08194905e": 31, "64574289e": 31, "35666435e": 31, "62397163e": 31, "65338686e": 31, "08153522e": 31, "91214496e": 31, "66238185e": 31, "30941061e": 31, "01881277e": 31, "35183951e": 31, "75671208e": 31, "34195639e": 31, "48140960e": 31, "28013278e": 31, "39349535e": 31, "98172784e": 31, "81296066e": 31, "96415345e": 31, "26238719e": 31, "49509750e": 31, "74006180e": 31, "10191872e": 31, "07242849e": 31, "47707870e": 31, "93350087e": 31, "47937042e": 31, "56986066e": 31, "38683744e": 31, "66458818e": 31, "81047773e": 31, "87162552e": 31, "13755895e": 31, "15451546e": 31, "70822138e": 31, "30422733e": 31, "72230733e": 31, "42179990e": 31, "97260415e": 31, "56870581e": 31, "16011063e": 31, "84737588e": 31, "16908355e": 31, "58555846e": 31, "31813936e": 31, "87525057e": 31, "96225647e": 31, "13003856e": 31, "93761507e": 31, "50142723e": 31, "82925111e": 31, "57275179e": 31, "03689833e": 31, "16987921e": 31, "43465312e": 31, "90595772e": 31, "98662343e": 31, "37028162e": 31, "96034925e": 31, "38850831e": 31, "08532261e": 31, "67261763e": 31, "51108819e": 31, "06695800e": 31, "19737154e": 31, "40633387e": 31, "61457619e": 31, "84488767e": 31, "32304925e": 31, "18951868e": 31, "71299198e": 31, "33766240e": 31, "46316129e": 31, "37506733e": 31, "34839554e": 31, "15076657e": 31, "53481496e": 31, "68363327e": 31, "36219572e": 31, "25048882e": 31, "74647421e": 31, "01269637e": 31, "34480704e": 31, "13823109e": 31, "poisseiul": 31, "f_h": 31, "roll": [31, 35], "invert": [31, 129], "f_": 31, "h": [31, 34, 619, 734, 832, 852, 856, 867, 874, 892], "66451644e": 31, "33865600e": 31, "49922700e": 31, "12544400e": 31, "12337733e": 31, "10947104e": 31, "16398956e": 31, "10347450e": 31, "21257369e": 31, "25223804e": 31, "49514267e": 31, "40825266e": 31, "89258794e": 31, "90254165e": 31, "98624861e": 31, "14786918e": 31, "22936615e": 31, "48169305e": 31, "18445517e": 31, "97624715e": 31, "78457951e": 31, "80634714e": 31, "69538117e": 31, "88851096e": 31, "68177296e": 31, "10622042e": 31, "88603172e": 31, "46003796e": 31, "40327574e": 31, "10729180e": 31, "98993636e": 31, "10706170e": 31, "01139220e": 31, "77045801e": 31, "14565694e": 31, "00757120e": 31, "64261419e": 31, "60955573e": 31, "42978980e": 31, "72917927e": 31, "210459": 31, "91158": 31, "196400": 31, "76123778": 31, "216332": 31, "47297264": 31, "136151": 31, "58834838": 31, "133782": 31, "21133681": 31, "somewhat": 31, "inclus": 31, "impact": [32, 129], "multiphas": 32, "motiv": 32, "imbibit": 32, "imbibt": 32, "menisci": 32, "plan": 32, "degre": [32, 1719, 1720], "capillary_pressur": 32, "displac": [32, 879, 899, 1681], "increasingli": 32, "p_": [32, 899], "increas": [32, 33, 718, 879, 895, 899], "decreas": 32, "suction": 32, "stem": 32, "drain": 32, "regardless": [32, 98, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236], "clear": [32, 39, 40, 41, 59, 60, 63, 73, 89, 90, 100, 119, 121, 131, 132, 133, 151, 152, 154, 164, 165, 166, 184, 185, 187, 198, 217, 219, 229, 230, 231, 249, 250, 252, 262, 263, 264, 282, 283, 285, 295, 296, 297, 315, 316, 318, 328, 329, 330, 348, 349, 351, 361, 362, 363, 381, 382, 385, 395, 396, 397, 415, 416, 418, 428, 429, 430, 448, 449, 451, 461, 462, 463, 481, 482, 484, 494, 495, 496, 514, 515, 563, 576, 947, 986, 1024, 1062, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1505, 1533, 1566, 1595, 1628, 1657], "inject": 32, "withdraw": 32, "spars": [32, 915, 921, 922, 931, 933, 954, 960, 961, 970, 972, 993, 998, 999, 1008, 1010, 1031, 1036, 1037, 1046, 1048, 1069, 1075, 1076, 1087, 1089, 1110, 1116, 1117, 1126, 1128, 1149, 1155, 1156, 1165, 1167, 1188, 1193, 1194, 1203, 1205, 1226, 1231, 1232, 1241, 1243, 1664, 1671, 1675, 1677, 1682, 1685, 1687, 1692, 1696, 1709, 1710, 1711, 1712, 1721, 1726, 1728, 1870], "connected_compon": [32, 1682, 1721], "cluster": [32, 98, 810, 811, 1682, 1690, 1705, 1708, 1715, 1718, 1721, 1723, 1863], "drop_zero": [32, 921, 922, 960, 961, 998, 999, 1036, 1037, 1075, 1076, 1116, 1117, 1155, 1156, 1193, 1194, 1231, 1232], "39": 32, "51": 32, "57": 32, "65": [32, 852], "66": 32, "70": 32, "72": 32, "74": [32, 34], "81": 32, "82": 32, "84": 32, "87": 32, "88": 32, "92": 32, "94": 32, "95": 32, "98": [32, 1698], "101": [32, 928, 967, 1005, 1043, 1082, 1123, 1162, 1200, 1238], "102": 32, "103": 32, "104": 32, "106": 32, "107": 32, "108": 32, "114": 32, "116": 32, "117": 32, "118": 32, "123": 32, "125": [32, 1680, 1722, 1727], "127": 32, "129": 32, "132": 32, "137": 32, "138": 32, "142": 32, "145": 32, "152": 32, "155": 32, "156": 32, "157": 32, "158": 32, "159": 32, "163": [32, 896], "164": 32, "165": 32, "166": 32, "167": 32, "168": [32, 879], "169": 32, "170": 32, "171": 32, "172": 32, "173": 32, "174": 32, "175": 32, "176": 32, "177": [32, 735], "178": 32, "179": 32, "181": 32, "182": 32, "183": 32, "184": 32, "185": 32, "186": 32, "187": 32, "189": 32, "191": 32, "192": 32, "193": 32, "194": 32, "195": 32, "196": 32, "197": 32, "198": 32, "199": 32, "201": [32, 928, 967, 1005, 1043, 1082, 1123, 1162, 1200, 1238], "202": 32, "203": 32, "204": 32, "205": 32, "206": 32, "207": 32, "208": 32, "209": 32, "210": 32, "212": 32, "213": 32, "214": 32, "215": 32, "217": 32, "218": 32, "219": 32, "220": 32, "221": 32, "223": 32, "224": 32, "225": 32, "226": 32, "227": 32, "228": 32, "229": 32, "230": 32, "231": 32, "232": 32, "233": 32, "234": 32, "235": 32, "236": [32, 892], "237": 32, "238": 32, "239": 32, "240": [32, 867], "241": 32, "242": 32, "243": 32, "244": 32, "245": 32, "246": 32, "247": 32, "248": 32, "249": 32, "250": [32, 1722], "251": 32, "252": 32, "253": 32, "254": 32, "255": 32, "256": 32, "257": 32, "258": 32, "259": 32, "260": 32, "261": 32, "262": [32, 736], "263": 32, "264": 32, "265": 32, "266": 32, "267": 32, "268": 32, "269": 32, "270": 32, "271": 32, "272": 32, "273": [32, 832, 856, 863, 867, 874], "274": [32, 736], "275": 32, "276": 32, "277": 32, "278": 32, "279": 32, "280": 32, "281": 32, "282": 32, "283": 32, "284": 32, "285": 32, "286": 32, "287": 32, "288": 32, "289": 32, "290": [32, 713], "291": 32, "292": 32, "293": 32, "294": 32, "295": [32, 892], "296": [32, 1727], "cmap": 32, "cm": 32, "nipy_spectr": 32, "black": 32, "thoughout": 32, "speak": 32, "uninvad": [32, 98, 1682, 1690], "yellow": 32, "invaded_por": 32, "isin": 32, "viridi": 32, "yeild": [32, 993], "repeat": [32, 817], "increaingli": 32, "subsequ": [32, 712, 720, 771, 804], "beyond": [32, 825, 879, 895, 1707], "drainage_01": 32, "0x7f207aaa3db0": 32, "trap": [32, 98, 122, 196], "actaulli": 32, "histori": [32, 98], "inv_pattern": 32, "9000": 32, "grei": 32, "post": 32, "escap": [32, 98], "apply_trap": 32, "inf": [32, 98, 638, 1722, 1869], "set_outlet_bc": [32, 195, 196], "calibr": 32, "froma": 32, "namedtupl": 32, "evacu": 32, "data2": 32, "plateau": 32, "rigor": [32, 901, 902], "fictiti": 32, "invaded": 32, "percoalt": 32, "event": 32, "increment": 32, "mainli": 32, "binari": [32, 129, 195, 619, 835, 1293], "heap": [32, 195], "queue": 32, "accessb": 32, "newli": [32, 1681, 1722], "pinv": 32, "tinv": 32, "9260": 32, "551831957262": 32, "9493": 32, "684102948075": 32, "5453": 32, "772363059359": 32, "381": 32, "2nd": [32, 779], "heapq": 32, "hq": 32, "heapifi": 32, "easilii": 32, "sequenti": 32, "care": 32, "heappop": 32, "p_new": 32, "p_next": 32, "t_new": 32, "t_next": 32, "401": [32, 863], "maintain": [32, 1716, 1805, 1823, 1843], "heappush": 32, "5878": 32, "523914979102": 32, "8650": 32, "998219036319": 32, "9187": 32, "961176612249": 32, "confirm": [32, 829, 1680], "lowest": 32, "compili": 32, "numba": [32, 195], "acceler": 32, "abovec": 32, "reset": [32, 195, 790], "contigu": 32, "untrap": 32, "vari": 32, "overlai": 32, "data_ip": 32, "film": 32, "crack": 32, "jump": 32, "displai": [32, 1806], "rise": 32, "fall": 32, "spike": 32, "vallei": 32, "never": [32, 718], "envelop": 32, "peak": 32, "current_directori": 33, "getcwd": 33, "pane": 33, "consol": [33, 35, 632], "editor": 33, "wirefram": 33, "transpar": 33, "static": [33, 1737, 1739, 1750, 1752], "plotli": 33, "scatter": 33, "plot_notebook": 33, "rotat": [33, 1719], "zoom": 33, "hover": 33, "box": 33, "node_color": 33, "node_scal": 33, "sceenshot": 33, "analysi": [33, 619, 713], "export": [33, 624, 631, 637], "vtp": [33, 637, 638], "paraveiw": 33, "project_to_vtk": 33, "file_nam": 33, "directori": [33, 35, 619, 1852, 1857], "path_to_fil": 33, "_vtk": 33, "filenam": [33, 617, 618, 619, 621, 622, 624, 625, 626, 629, 630, 631, 633, 635, 637, 638, 639, 1852, 1853, 1857, 1858], "paraview_net": 33, "parview": 33, "click": 33, "button": 33, "glyph": 33, "tool": [33, 713], "filter": [33, 43, 50, 55, 66, 75, 82, 87, 92, 102, 109, 115, 124, 135, 142, 147, 157, 168, 175, 180, 190, 200, 207, 213, 222, 233, 240, 245, 255, 266, 273, 278, 288, 299, 306, 311, 321, 332, 339, 344, 354, 365, 372, 377, 388, 399, 406, 411, 421, 432, 439, 444, 454, 465, 472, 477, 487, 498, 505, 510, 519, 547, 554, 559, 565, 571, 572, 575, 577, 923, 924, 927, 928, 937, 943, 949, 962, 963, 966, 967, 976, 982, 988, 1000, 1001, 1004, 1005, 1014, 1020, 1026, 1038, 1039, 1042, 1043, 1052, 1058, 1064, 1077, 1078, 1081, 1082, 1093, 1099, 1105, 1118, 1119, 1122, 1123, 1132, 1138, 1144, 1157, 1158, 1161, 1162, 1171, 1177, 1183, 1195, 1196, 1199, 1200, 1209, 1215, 1221, 1233, 1234, 1237, 1238, 1247, 1253, 1259, 1270, 1277, 1282, 1288, 1300, 1309, 1314, 1321, 1334, 1343, 1348, 1355, 1368, 1377, 1382, 1389, 1400, 1407, 1412, 1418, 1430, 1439, 1444, 1451, 1461, 1468, 1473, 1479, 1489, 1496, 1501, 1507, 1517, 1524, 1529, 1535, 1547, 1556, 1561, 1568, 1579, 1586, 1591, 1597, 1609, 1618, 1623, 1630, 1641, 1648, 1653, 1659, 1689, 1691, 1694, 1695], "pipelin": [33, 796], "alphabet": 33, "shrink": 33, "celldatatopointdata": 33, "transpos": 33, "extractsurfac": 33, "proport": [33, 799], "ey": 33, "icon": 33, "glyph1": 33, "solid": [33, 824, 894, 901, 902, 1069, 1724, 1725], "tube1": 33, "didn": 33, "document": [34, 623, 1731, 1736, 1738, 1745, 1749, 1751], "releas": [34, 35], "mid": 34, "septemb": 34, "public": 34, "gostick": [34, 713, 879, 895], "aghighi": 34, "hinebaugh": 34, "tranter": 34, "hoeh": 34, "ma": 34, "dai": 34, "spellaci": 34, "sharqawi": [34, 832, 856, 867, 874], "mh": 34, "bazylak": 34, "burn": 34, "lehnert": 34, "scienc": [34, 736], "engin": [34, 852], "2016": [34, 196, 896], "doi": [34, 196, 859, 861], "1109": 34, "mcse": 34, "heavili": 35, "stack": [35, 1720], "environ": 35, "anaconda": 35, "Be": 35, "forg": 35, "pip": 35, "won": 35, "publish": 35, "month": 35, "latest": 35, "branch": 35, "git": 35, "com": [35, 1745], "pmeal": 35, "contributor": 35, "insist": 35, "uninstal": 35, "command": 35, "clone": [35, 1680, 1683], "repo": 35, "local": 35, "difficult": [35, 916, 955, 1070, 1111, 1150], "sound": 35, "termin": 35, "cmd": 35, "cd": 35, "somewher": 35, "disk": [35, 626, 1699], "txt": [35, 1745], "overrid": [35, 915, 954, 1031, 1110, 1149, 1188, 1226], "channel": 35, "edit": [35, 901, 902], "dep": 35, "voila": 35, "date": [35, 1858], "program": 35, "menu": [35, 1843], "kwarg": [37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492, 525, 542, 543, 591, 606, 607, 615, 796, 825, 904, 915, 917, 954, 956, 993, 994, 1031, 1032, 1069, 1071, 1110, 1112, 1149, 1151, 1188, 1189, 1226, 1227, 1265, 1266, 1293, 1295, 1316, 1327, 1329, 1350, 1361, 1363, 1384, 1395, 1396, 1423, 1425, 1446, 1456, 1457, 1484, 1485, 1512, 1513, 1540, 1542, 1563, 1574, 1575, 1602, 1604, 1625, 1636, 1637, 1674, 1676, 1678, 1685, 1688, 1691, 1692, 1694, 1695, 1699, 1707, 1717, 1718, 1719, 1720, 1724, 1725, 1730, 1733, 1734, 1735, 1737, 1739, 1742, 1744, 1746, 1748, 1750, 1752, 1753, 1755, 1756, 1782, 1806, 1843], "reactivetransport": [37, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 459], "advect": [37, 359, 426, 877], "iterative_prop": [37, 71, 97, 129, 162, 195, 227, 260, 293, 326, 359, 393, 426, 459, 492], "bctype": [39, 59, 61, 73, 89, 100, 119, 120, 122, 131, 151, 164, 184, 198, 217, 229, 249, 262, 282, 295, 315, 328, 348, 361, 381, 383, 395, 415, 428, 448, 461, 481, 494, 514], "shallow": [42, 74, 101, 134, 167, 199, 232, 265, 298, 331, 364, 398, 431, 464, 497, 527, 546, 581, 593, 920, 959, 997, 1035, 1074, 1115, 1154, 1192, 1230, 1269, 1299, 1333, 1367, 1399, 1429, 1460, 1488, 1516, 1546, 1578, 1608, 1640, 1758, 1770, 1784, 1797, 1815, 1828], "array_lik": [43, 57, 59, 60, 61, 62, 63, 64, 68, 75, 89, 90, 94, 102, 119, 121, 126, 135, 149, 151, 152, 153, 154, 155, 159, 168, 182, 184, 185, 186, 187, 188, 192, 200, 217, 219, 224, 233, 247, 249, 250, 251, 252, 253, 257, 266, 280, 282, 283, 284, 285, 286, 290, 299, 313, 315, 316, 317, 318, 319, 323, 332, 346, 348, 349, 350, 351, 352, 356, 365, 379, 380, 381, 382, 383, 384, 385, 386, 390, 399, 413, 414, 415, 416, 417, 418, 419, 423, 432, 446, 447, 448, 449, 450, 451, 452, 456, 465, 479, 480, 481, 482, 483, 484, 485, 489, 498, 512, 514, 515, 516, 517, 521, 539, 547, 563, 567, 571, 576, 615, 713, 799, 802, 879, 915, 916, 921, 922, 923, 924, 925, 926, 927, 928, 938, 947, 951, 954, 955, 960, 961, 962, 963, 964, 965, 966, 967, 977, 986, 990, 993, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1015, 1024, 1028, 1031, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1053, 1062, 1066, 1069, 1070, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1094, 1103, 1107, 1111, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1133, 1142, 1146, 1149, 1150, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1172, 1181, 1185, 1188, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1210, 1219, 1223, 1226, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1248, 1257, 1261, 1270, 1286, 1290, 1294, 1300, 1319, 1323, 1328, 1334, 1353, 1357, 1362, 1368, 1387, 1391, 1400, 1416, 1420, 1424, 1430, 1449, 1453, 1461, 1477, 1481, 1489, 1505, 1509, 1517, 1533, 1537, 1541, 1547, 1566, 1570, 1579, 1595, 1599, 1603, 1609, 1628, 1632, 1641, 1657, 1661, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1705, 1706, 1707, 1708, 1715, 1718, 1719, 1720, 1721, 1722, 1724, 1725], "union": [43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 354, 365, 372, 373, 374, 377, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 454, 465, 472, 473, 474, 477, 487, 498, 505, 506, 507, 510, 519, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 923, 924, 927, 928, 937, 938, 939, 940, 943, 949, 962, 963, 966, 967, 976, 977, 978, 979, 982, 988, 1000, 1001, 1004, 1005, 1014, 1015, 1016, 1017, 1020, 1026, 1038, 1039, 1042, 1043, 1052, 1053, 1054, 1055, 1058, 1064, 1077, 1078, 1081, 1082, 1093, 1094, 1095, 1096, 1099, 1105, 1118, 1119, 1122, 1123, 1132, 1133, 1134, 1135, 1138, 1144, 1157, 1158, 1161, 1162, 1171, 1172, 1173, 1174, 1177, 1183, 1195, 1196, 1199, 1200, 1209, 1210, 1211, 1212, 1215, 1221, 1233, 1234, 1237, 1238, 1247, 1248, 1249, 1250, 1253, 1259, 1270, 1277, 1278, 1279, 1282, 1288, 1300, 1309, 1310, 1311, 1314, 1321, 1334, 1343, 1344, 1345, 1348, 1355, 1368, 1377, 1378, 1379, 1382, 1389, 1400, 1407, 1408, 1409, 1412, 1418, 1430, 1439, 1440, 1441, 1444, 1451, 1461, 1468, 1469, 1470, 1473, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1547, 1556, 1557, 1558, 1561, 1568, 1579, 1586, 1587, 1588, 1591, 1597, 1609, 1618, 1619, 1620, 1623, 1630, 1641, 1648, 1649, 1650, 1653, 1659, 1691, 1694, 1695, 1842], "exclusive_or": [43, 50, 51, 52, 55, 66, 75, 82, 83, 84, 87, 92, 102, 109, 110, 111, 115, 124, 135, 142, 143, 144, 147, 157, 168, 175, 176, 177, 180, 190, 200, 207, 208, 209, 213, 222, 233, 240, 241, 242, 245, 255, 266, 273, 274, 275, 278, 288, 299, 306, 307, 308, 311, 321, 332, 339, 340, 341, 344, 354, 365, 372, 373, 374, 377, 388, 399, 406, 407, 408, 411, 421, 432, 439, 440, 441, 444, 454, 465, 472, 473, 474, 477, 487, 498, 505, 506, 507, 510, 519, 547, 554, 555, 556, 559, 565, 571, 572, 573, 574, 575, 577, 923, 924, 927, 928, 937, 938, 939, 940, 943, 949, 962, 963, 966, 967, 976, 977, 978, 979, 982, 988, 1000, 1001, 1004, 1005, 1014, 1015, 1016, 1017, 1020, 1026, 1038, 1039, 1042, 1043, 1052, 1053, 1054, 1055, 1058, 1064, 1077, 1078, 1081, 1082, 1093, 1094, 1095, 1096, 1099, 1105, 1118, 1119, 1122, 1123, 1132, 1133, 1134, 1135, 1138, 1144, 1157, 1158, 1161, 1162, 1171, 1172, 1173, 1174, 1177, 1183, 1195, 1196, 1199, 1200, 1209, 1210, 1211, 1212, 1215, 1221, 1233, 1234, 1237, 1238, 1247, 1248, 1249, 1250, 1253, 1259, 1270, 1277, 1278, 1279, 1282, 1288, 1300, 1309, 1310, 1311, 1314, 1321, 1334, 1343, 1344, 1345, 1348, 1355, 1368, 1377, 1378, 1379, 1382, 1389, 1400, 1407, 1408, 1409, 1412, 1418, 1430, 1439, 1440, 1441, 1444, 1451, 1461, 1468, 1469, 1470, 1473, 1479, 1489, 1496, 1497, 1498, 1501, 1507, 1517, 1524, 1525, 1526, 1529, 1535, 1547, 1556, 1557, 1558, 1561, 1568, 1579, 1586, 1587, 1588, 1591, 1597, 1609, 1618, 1619, 1620, 1623, 1630, 1641, 1648, 1649, 1650, 1653, 1659, 1691, 1694, 1695], "criteria": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 365, 399, 432, 465, 498, 547, 571, 923, 926, 962, 965, 1000, 1003, 1038, 1041, 1077, 1080, 1118, 1121, 1157, 1160, 1195, 1198, 1233, 1236, 1270, 1300, 1334, 1368, 1400, 1430, 1461, 1489, 1517, 1547, 1579, 1609, 1641, 1689], "subset": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 365, 399, 432, 465, 498, 524, 543, 547, 571, 607, 917, 923, 956, 962, 994, 1000, 1032, 1038, 1071, 1077, 1112, 1118, 1151, 1157, 1189, 1195, 1227, 1233, 1266, 1270, 1295, 1300, 1329, 1334, 1363, 1368, 1396, 1400, 1425, 1430, 1457, 1461, 1485, 1489, 1513, 1517, 1542, 1547, 1575, 1579, 1604, 1609, 1637, 1641], "requrest": [46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 368, 402, 435, 468, 501, 530, 550, 932, 971, 1009, 1047, 1088, 1127, 1166, 1204, 1242, 1273, 1304, 1338, 1372, 1403, 1434, 1464, 1492, 1520, 1551, 1582, 1613, 1644], "pore1": [46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 368, 402, 435, 468, 501, 530, 550, 672, 687, 702, 932, 971, 1009, 1047, 1088, 1127, 1166, 1204, 1242, 1273, 1304, 1338, 1372, 1403, 1434, 1464, 1492, 1520, 1551, 1582, 1613, 1644], "pore2": [46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 368, 402, 435, 468, 501, 530, 550, 672, 687, 702, 932, 971, 1009, 1047, 1088, 1127, 1166, 1204, 1242, 1273, 1304, 1338, 1372, 1403, 1434, 1464, 1492, 1520, 1551, 1582, 1613, 1644], "addition": [50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 372, 406, 439, 472, 505, 554, 572, 634, 937, 976, 1014, 1052, 1093, 1132, 1171, 1209, 1247, 1277, 1309, 1343, 1377, 1407, 1439, 1468, 1496, 1524, 1556, 1586, 1618, 1648], "whose": [50, 55, 66, 82, 87, 92, 109, 115, 124, 142, 147, 157, 175, 180, 190, 207, 213, 222, 240, 245, 255, 273, 278, 288, 306, 311, 321, 339, 344, 354, 372, 377, 388, 406, 411, 421, 439, 444, 454, 472, 477, 487, 505, 510, 519, 554, 559, 565, 572, 575, 577, 635, 639, 806, 925, 927, 928, 937, 938, 943, 949, 964, 966, 967, 976, 977, 982, 988, 1002, 1004, 1005, 1014, 1015, 1020, 1026, 1040, 1042, 1043, 1052, 1053, 1058, 1064, 1069, 1079, 1081, 1082, 1083, 1084, 1093, 1094, 1099, 1105, 1120, 1122, 1123, 1132, 1133, 1138, 1144, 1159, 1161, 1162, 1171, 1172, 1177, 1183, 1197, 1199, 1200, 1209, 1210, 1215, 1221, 1235, 1237, 1238, 1247, 1248, 1253, 1259, 1277, 1282, 1288, 1309, 1314, 1321, 1343, 1348, 1355, 1377, 1382, 1389, 1407, 1412, 1418, 1439, 1444, 1451, 1468, 1473, 1479, 1496, 1501, 1507, 1524, 1529, 1535, 1556, 1561, 1568, 1586, 1591, 1597, 1618, 1623, 1630, 1648, 1653, 1659, 1691, 1694, 1695, 1705, 1707, 1716, 1731], "sought": [50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 372, 406, 439, 472, 505, 554, 572, 865, 925, 926, 927, 928, 937, 964, 965, 966, 967, 976, 1002, 1003, 1004, 1005, 1014, 1040, 1041, 1042, 1043, 1052, 1079, 1080, 1081, 1082, 1083, 1084, 1093, 1120, 1121, 1122, 1123, 1132, 1159, 1160, 1161, 1162, 1171, 1197, 1198, 1199, 1200, 1209, 1235, 1236, 1237, 1238, 1247, 1277, 1309, 1343, 1377, 1407, 1439, 1468, 1496, 1524, 1556, 1586, 1618, 1648, 1691, 1694, 1695, 1696], "num_throat": [51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 373, 407, 440, 473, 506, 555, 573, 921, 922, 939, 960, 961, 978, 998, 999, 1016, 1036, 1037, 1054, 1075, 1076, 1095, 1116, 1117, 1134, 1155, 1156, 1173, 1193, 1194, 1211, 1231, 1232, 1249, 1278, 1310, 1344, 1378, 1408, 1440, 1469, 1497, 1525, 1557, 1587, 1619, 1649, 1715], "num_por": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 374, 408, 441, 474, 507, 543, 556, 574, 607, 917, 940, 956, 979, 994, 1017, 1032, 1055, 1071, 1096, 1112, 1135, 1151, 1174, 1189, 1212, 1227, 1250, 1266, 1279, 1295, 1311, 1329, 1345, 1363, 1379, 1396, 1409, 1425, 1441, 1457, 1470, 1485, 1498, 1513, 1526, 1542, 1558, 1575, 1588, 1604, 1620, 1637, 1650, 1698], "keyerror": [53, 54, 85, 86, 113, 114, 145, 146, 178, 179, 211, 212, 243, 244, 276, 277, 309, 310, 342, 343, 375, 376, 409, 410, 442, 443, 475, 476, 508, 509, 534, 535, 557, 558, 586, 587, 601, 602, 941, 942, 980, 981, 1018, 1019, 1056, 1057, 1097, 1098, 1136, 1137, 1175, 1176, 1213, 1214, 1251, 1252, 1280, 1281, 1312, 1313, 1346, 1347, 1380, 1381, 1410, 1411, 1442, 1443, 1471, 1472, 1499, 1500, 1527, 1528, 1559, 1560, 1589, 1590, 1621, 1622, 1651, 1652, 1763, 1764, 1775, 1776, 1789, 1790, 1837, 1838, 1855, 1856], "lifo": [54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 376, 410, 443, 476, 509, 535, 558, 587, 602, 942, 981, 1019, 1057, 1098, 1137, 1176, 1214, 1252, 1281, 1313, 1347, 1381, 1411, 1443, 1472, 1500, 1528, 1560, 1590, 1622, 1652, 1764, 1776, 1790, 1856], "indici": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 377, 411, 444, 477, 510, 559, 575, 943, 982, 1020, 1058, 1084, 1099, 1138, 1177, 1215, 1253, 1282, 1314, 1348, 1382, 1412, 1444, 1473, 1501, 1529, 1561, 1591, 1623, 1653], "wildcard": [55, 66, 87, 92, 115, 124, 147, 157, 180, 190, 213, 222, 245, 255, 278, 288, 311, 321, 344, 354, 377, 388, 411, 421, 444, 454, 477, 487, 510, 519, 559, 565, 575, 577, 943, 949, 982, 988, 1020, 1026, 1058, 1064, 1099, 1105, 1138, 1144, 1177, 1183, 1215, 1221, 1253, 1259, 1282, 1288, 1314, 1321, 1348, 1355, 1382, 1389, 1412, 1418, 1444, 1451, 1473, 1479, 1501, 1507, 1529, 1535, 1561, 1568, 1591, 1597, 1623, 1630, 1653, 1659], "compound": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 377, 411, 444, 477, 510, 559, 575, 852, 943, 982, 1020, 1058, 1099, 1138, 1177, 1215, 1253, 1282, 1314, 1348, 1382, 1412, 1444, 1473, 1501, 1529, 1561, 1591, 1623, 1653], "opt": [55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 377, 411, 444, 477, 510, 559, 575, 943, 982, 1020, 1058, 1099, 1138, 1177, 1215, 1253, 1282, 1314, 1348, 1382, 1412, 1444, 1473, 1501, 1529, 1561, 1591, 1623, 1653], "verbos": [58, 150, 183, 248, 281, 314, 347, 513, 614, 1873, 1874], "build": [58, 150, 183, 248, 281, 314, 347, 513], "matric": [58, 150, 183, 248, 281, 314, 347, 513, 1188], "solutioncontain": [58, 150, 183, 248, 281, 314, 347, 513], "bcvalu": [59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514], "wrapper": [59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514, 612, 825, 895, 896, 1327, 1361, 1664], "remvo": [59, 89, 119, 120, 122, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514], "remaind": [60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 382, 416, 449, 482, 515, 563, 576, 947, 986, 1024, 1062, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1505, 1533, 1566, 1595, 1628, 1657], "intact": [60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 382, 416, 449, 482, 515, 563, 576, 947, 986, 1024, 1062, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1505, 1533, 1566, 1595, 1628, 1657], "outflow": [61, 383], "merg": [61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 352, 383, 384, 386, 417, 419, 450, 452, 483, 485, 516, 517, 1715], "set_bc": [61, 62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 352, 383, 384, 386, 417, 419, 450, 452, 483, 485, 516, 517], "conditon": [62, 64, 153, 155, 186, 188, 251, 253, 284, 286, 317, 319, 350, 352, 384, 386, 417, 419, 450, 452, 483, 485, 516, 517], "dirichlet": [64, 155, 188, 253, 286, 319, 352, 386, 419, 452, 485, 517], "omit": [66, 92, 124, 157, 190, 222, 255, 288, 321, 354, 388, 421, 454, 487, 519, 565, 577, 921, 922, 949, 960, 961, 988, 998, 999, 1026, 1036, 1037, 1064, 1075, 1076, 1105, 1116, 1117, 1144, 1155, 1156, 1183, 1193, 1194, 1221, 1231, 1232, 1259, 1288, 1321, 1355, 1389, 1418, 1451, 1479, 1507, 1535, 1568, 1597, 1630, 1659], "inidic": [66, 92, 124, 157, 190, 222, 255, 288, 321, 354, 388, 421, 454, 487, 519, 565, 577, 949, 988, 1026, 1064, 1105, 1144, 1183, 1221, 1259, 1288, 1321, 1355, 1389, 1418, 1451, 1479, 1507, 1535, 1568, 1597, 1630, 1659], "foundat": 71, "themselv": [98, 825, 927, 966, 1004, 1042, 1081, 1122, 1161, 1199, 1237], "pressu": 118, "defend": 122, "void": [129, 1069], "confin": 129, "simualt": 129, "oppos": 129, "n_": 129, "lineartransport": [162, 260, 326], "fourierconduct": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "speed": 195, "upon": [195, 543, 544, 607, 608, 917, 918, 956, 957, 994, 995, 1032, 1033, 1071, 1072, 1112, 1113, 1151, 1152, 1189, 1190, 1227, 1228, 1266, 1267, 1295, 1296, 1329, 1330, 1363, 1364, 1396, 1397, 1425, 1426, 1457, 1458, 1485, 1486, 1513, 1514, 1542, 1543, 1575, 1576, 1604, 1605, 1637, 1638, 1723], "effici": 195, "masson": 196, "ninf": 196, "alg": 196, "1016": 196, "cageo": 196, "003": 196, "conserv": 227, "ionic": [227, 260], "identif": [227, 915, 954, 1031, 1110, 1149, 1188, 1226, 1722], "ionicconduct": [228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "role": 260, "ohmicconduct": [261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "phenomena": 293, "signifi": [380, 414, 447, 480], "instanti": [380, 414, 447, 480, 524, 1806, 1843], "intermedi": [380, 414, 447, 480, 615], "transientsolut": [380, 414, 447, 480, 615], "transientfickiandiffus": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "transientionicconduct": [427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "transientreactivetransport": [460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "subdomain": 524, "descend": [524, 1805, 1823], "geomeri": 524, "boss": 524, "geom1": 524, "mixin": [524, 542, 570], "base2": [526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 570], "obj": [543, 544, 607, 608, 917, 918, 956, 957, 994, 995, 1032, 1033, 1071, 1072, 1112, 1113, 1151, 1152, 1189, 1190, 1227, 1228, 1266, 1267, 1295, 1296, 1326, 1329, 1330, 1360, 1363, 1364, 1394, 1396, 1397, 1425, 1426, 1457, 1458, 1485, 1486, 1513, 1514, 1542, 1543, 1573, 1575, 1576, 1604, 1605, 1635, 1637, 1638, 1806, 1808, 1809, 1862, 1873, 1874], "immedi": [543, 607, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637], "discard": [543, 607, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637], "exclud": [561, 609, 945, 984, 1022, 1060, 1101, 1140, 1179, 1217, 1255, 1284, 1316, 1350, 1384, 1414, 1446, 1475, 1503, 1531, 1563, 1593, 1625, 1655, 1749], "domain1": [562, 610, 946, 985, 1023, 1061, 1102, 1141, 1180, 1218, 1256, 1285, 1318, 1352, 1386, 1415, 1448, 1476, 1504, 1532, 1565, 1594, 1627, 1656], "labelmixin": [571, 572, 573, 574, 575, 576, 577], "hold": [578, 623, 1809], "modelwrapp": [579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590], "modelsmixin": 591, "dependency_list": [591, 594, 596], "modelsdict": [592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605], "intra": 594, "inter": 594, "unresolv": 595, "shell": [596, 1725], "decent": 596, "map": [596, 620, 825, 1745, 1768], "drawn": 596, "frame": 596, "modelsmixin2": [607, 608, 609, 610], "brief": [613, 614, 1768, 1824, 1825, 1846], "atol": [614, 1672], "rtol": [614, 1672, 1707, 1870], "linsolv": 614, "scipyrk45": 615, "od": 615, "dy": 615, "dt": [615, 735], "timespan": 615, "ex": 615, "t_i": 615, "jgf": [618, 626], "onto": 618, "voxel_s": 619, "3dma": 619, "rock": 619, "np2th": 619, "th2np": 619, "resolut": 619, "eac": 619, "dimens": [619, 1031, 1069, 1226, 1681, 1686, 1699, 1707, 1719], "rocknam": 619, "th2pn": 619, "human": [619, 632], "brent": 619, "lindquist": 619, "medial": 619, "thin": 619, "skeleton": 619, "lee": [619, 866], "oh": 619, "venkatarangan": 619, "shin": 619, "prodanov": 619, "autom": 619, "microtomographi": 619, "suni": 619, "stoni": 619, "brook": 619, "2005": [619, 734, 867], "undirect": [620, 627, 1685, 1726, 1728], "gap": 620, "pore_": 620, "prepend": [620, 634], "central": [620, 721, 772, 807, 1707], "1x3": 620, "adj": 620, "throat_": 620, "embed": 620, "pergeo": 621, "avizo": 621, "pickl": [622, 1875], "dat": 623, "_node1": 623, "statoil": [623, 892, 1681], "maxim": 623, "ball": 623, "imperi": 623, "colleg": 623, "london": 623, "dataset": 623, "download": 623, "websit": 623, "header": 623, "theses": 623, "rectangular": [624, 742, 759, 762, 777, 786], "circular": [624, 723, 759, 761, 892, 1031, 1699, 1707, 1724], "comsol": 624, "mesh": [624, 631], "delim": [628, 634, 636], "explicit": 630, "salom": 630, "maxsiz": [631, 1800, 1818], "auto": [631, 1875], "fileformat": 631, "stl": 631, "logger_level": 631, "holder": [631, 638], "maximum": [631, 716, 718, 765, 768, 793, 794, 894, 926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236, 1685, 1713], "finner": 631, "slower": 631, "gmsh": 631, "fluent": 631, "ngsolv": 631, "logger": 631, "netgen": 631, "triangl": [631, 736, 921, 960, 998, 1036, 1075, 1116, 1155, 1193, 1231], "tessel": [631, 879, 1031, 1069, 1226, 1699, 1723, 1728], "cad": 631, "slow": [631, 825, 927, 966, 1004, 1042, 1081, 1083, 1084, 1122, 1161, 1199, 1237, 1691, 1694, 1695], "instal": 631, "hdf5": [632, 635], "flag": [632, 927, 966, 1004, 1042, 1081, 1122, 1161, 1199, 1237, 1805, 1823], "csv": 633, "categorize_bi": 634, "organ": 634, "net_01": 634, "hierarch": 634, "shorter": 636, "pvsm": 637, "fill_nan": 638, "fill_inf": 638, "vtk": 638, "issu": 638, "rectangl": [643, 648, 649, 662, 667, 673, 674, 676, 681, 688, 689, 691, 696, 703, 704, 746, 751, 757, 758, 1069], "ideal_ga": 652, "0134": 652, "vdm": [652, 835], "gas_mixture_fesg": 652, "00422791": 652, "89606e": 652, "56383e": 652, "82082e": 652, "51815e": 652, "48553e": 652, "11409e": 652, "14280": 655, "47004": 655, "56254": 655, "00028": 655, "98691": 655, "0170967": 655, "3862e": 655, "00355837": 655, "00131e": 655, "23684e": 655, "1684e": 655, "generic_diffus": [658, 659], "generic_electr": 659, "generic_therm": 659, "symmetri": [662, 667, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 696, 699, 703, 704, 706, 710, 901, 902], "cone": [663, 665, 668, 677, 679, 682, 692, 694, 697, 747, 749, 752], "throat_coord": [665, 666, 667, 668, 669, 670, 679, 680, 681, 682, 683, 684, 694, 695, 696, 697, 698, 699, 749, 750, 751, 752, 753, 754], "centroid": [665, 666, 667, 668, 669, 670, 679, 680, 681, 682, 683, 684, 694, 695, 696, 698, 699, 738, 744, 749, 751, 752, 753, 754, 1704, 1715], "pyramid": [666, 669, 671, 680, 683, 686, 695, 698, 701, 750, 753, 755], "trapezoid": [667, 670, 674, 681, 684, 689, 696, 699, 704, 751, 754, 758], "pore_coord": [668, 669, 670, 752, 753, 754], "pore_aspect": [678, 688, 693, 703], "throat_aspect": [678, 688, 693, 703], "aspect": [678, 688, 693, 703, 735, 1863], "divis": [685, 700, 894], "size_factor": [687, 702, 882, 883, 884, 885, 887, 888, 890, 891, 912, 913], "s_": [687, 702, 899, 901, 902, 903, 905, 906, 907, 908, 909, 910], "ndarri": [709, 713, 725, 1692], "spatailli": [711, 713], "sent": [712, 720, 771, 802, 804, 924, 928, 963, 967, 1001, 1005, 1039, 1043, 1078, 1082, 1119, 1123, 1158, 1162, 1196, 1200, 1234, 1238], "strel": 713, "strength": 713, "extent": 713, "achiev": 713, "geoemtri": 713, "appproach": 713, "anistrop": 713, "ga": [713, 828, 834, 835, 841, 858, 859, 869, 870, 871, 879, 1327], "fuel": 713, "electrod": [713, 901, 902], "fibrou": [713, 879], "polym": 713, "electrolyt": [713, 901, 902], "membran": 713, "v173": 713, "pp277": 713, "pore_shap": 715, "adopt": [716, 765, 768, 793, 794], "func": [717, 719, 721, 769, 770, 772, 795, 796, 800, 807, 1731], "rv_frozen": [717, 769, 795], "stat": [717, 719, 721, 769, 770, 772, 795, 800, 807], "eed": [717, 719, 721, 769, 770, 772, 795, 800, 807], "frozen": [717, 769, 795], "stats_obj": [717, 769, 795], "0001": [717, 719, 721, 769, 770, 772, 795, 800, 807, 904], "fixed_diamet": 718, "touch": [718, 894], "encompass": 718, "closer": 718, "zeno": 718, "stddev": [719, 770, 800], "deviat": [719, 770, 800], "inner": [719, 721, 770, 772, 800, 807, 1724, 1725], "width": [721, 772, 807], "skew": [721, 772, 807], "ndndarrai": [721, 772, 807], "throat_cross_sectional_area": [723, 724, 725, 726], "surface_area": [725, 775], "crude": 725, "curvatur": [725, 879], "throat_perimet": [734, 735, 736, 776], "perimet": [734, 735, 736, 760, 761, 762, 776, 1717], "throat_area": [734, 735, 736, 767, 783, 885, 892], "mortensen": [734, 736], "hydralu": 734, "linearli": [734, 838, 840], "sharp": 734, "ellipt": [734, 735, 894], "vertic": [734, 1069], "okkel": 734, "bruu": 734, "reexamin": 734, "review": 734, "pp": [734, 735, 736], "057301": 734, "indiamet": 735, "jenkin": 735, "rao": 735, "elipt": 735, "pt": 735, "powder": 735, "technologi": 735, "1984": 735, "mason": [736, 879, 895], "morrow": [736, 879, 895], "liquid": [736, 824, 829, 830, 836, 855, 860, 861, 862, 865, 866, 873, 1361], "irregular": 736, "colloid": [736, 879, 892], "interfac": [736, 879, 892, 899], "1991": 736, "throat_centroid": 744, "endpoint": 744, "ignore_nan": [765, 768, 793, 794], "throat_shap": 767, "cirlc": 767, "sqaur": 767, "unit_vec": 779, "impicit": 779, "1st": 779, "assu": [780, 781, 782, 786], "reprsent": [781, 782, 783, 786], "abnorm": [783, 1715], "hemispher": 784, "cap": [784, 1293], "placehold": 788, "xmax": [789, 801, 894], "xmin": [789, 801, 894], "useless": 790, "denomin": 792, "keyward": 796, "thermofluid": [798, 802], "corel": 798, "independ": [798, 802, 829, 904], "bin_cent": 799, "bin_height": 799, "skip": 802, "nth": 802, "thresh": [813, 818], "coincid": [813, 818], "furthest": 814, "closest": 815, "occurr": [817, 1798, 1803, 1816, 1821], "letsou_stiel": 825, "default_argmap": 825, "cvm": 825, "mixtur": [825, 829, 835, 847, 854, 858, 860, 869, 872, 873, 1293, 1294, 1297, 1303, 1305, 1317, 1326, 1327, 1328, 1331, 1337, 1339, 1351, 1360, 1361, 1362, 1365, 1371, 1373, 1385, 1394, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1484, 1512, 1540, 1541, 1544, 1550, 1552, 1564, 1573, 1574, 1602, 1603, 1606, 1612, 1614, 1626, 1635, 1867, 1868], "3e": 825, "9e": 825, "trail": 825, "iterpret": 825, "ie": 825, "mix": [825, 829, 847, 872, 892], "agre": [825, 901, 902], "corrospod": [829, 830], "costald": [829, 830], "kg": [829, 831, 832, 850, 854, 856, 863, 867, 874], "m3": [829, 831, 836, 854], "mw_": 829, "mw_i": 829, "costald_mixtur": 829, "typic": [829, 899, 1843], "accentr": [830, 841, 859, 861, 866, 873], "dimensionless": [830, 841, 859, 861, 866, 873], "ndrrai": 831, "seawat": [832, 856, 863, 867, 874], "atmospher": [832, 856, 863, 874], "eq": [832, 856, 874, 901, 902], "boil": [832, 836, 855, 856, 859, 861, 862, 863, 874], "salt": [832, 850, 856, 863, 867, 874], "ppt": [832, 856, 863, 867, 874], "thousand": [832, 856, 863, 867, 874], "453": [832, 863, 874], "accuraci": [832, 856, 863, 867, 874], "pct": 832, "lienhard": [832, 856, 867, 874], "zubair": [832, 856, 867, 874], "desalin": [832, 856, 863, 867, 874], "treatment": [832, 856, 867, 874], "2010": [832, 856, 867, 874], "chapman": 834, "enskog": 834, "molar_diffusion_volum": 835, "fuller": 835, "dij": 835, "gid": 835, "chromatogr": 835, "1965": 835, "schettler": 835, "ind": [835, 1687, 1689, 1691, 1692, 1694, 1695], "eng": 835, "chem": 835, "1966": 835, "enslei": 835, "3679": 835, "1969": 835, "vms_at_tb": 836, "sigmas_at_tb": 836, "tyn": 836, "calu": 836, "dilut": 836, "principl": 836, "kinemat": 836, "cp": [838, 840], "trc_gas_data": 839, "capac": 841, "weighted_averag": 843, "logarithm": [847, 872, 1305, 1339, 1373, 1435, 1552, 1614], "rule": [847, 872, 1867, 1868], "ln": [847, 872, 908, 1305, 1339, 1373, 1435, 1552, 1614], "z_i": [847, 872, 1305, 1339, 1373, 1435, 1552, 1614], "expon": [847, 872, 899, 901, 902, 910, 1305, 1339, 1373, 1435, 1552, 1614], "guarante": 848, "conc": 850, "nacl": 850, "henri": 852, "gaseou": 852, "dissolv": 852, "kpx": 852, "atm": 852, "yaw": 852, "carl": 852, "solubl": 852, "sulfur": 852, "tradit": 852, "2003": 852, "liqiud": 854, "vapor": [854, 855, 865, 866, 867], "winterfeld": 854, "scriven": 854, "davi": 854, "brock": 855, "bird": 855, "313": 856, "percent": [856, 863, 867, 874], "wassiljew": 858, "hern": [858, 869], "zipper": [858, 869], "thermal": [859, 860, 861, 862, 863, 912, 913], "conductivti": 859, "gharagheizi": [859, 861, 870], "1002": [859, 861], "aic": [859, 861], "13938": [859, 861], "dippr9h": 860, "sato": 862, "jamieson": 863, "tudhop": 863, "393": 863, "1970": 863, "antoin": 865, "rpp": 865, "kesler": 866, "raoult": 867, "473": 867, "ashra": 867, "handbook": 867, "fundament": 867, "letsou": 873, "pore_pressur": [877, 885], "throat_hydraulic_conduct": [877, 885], "throat_diffusive_conduct": 877, "discret": [877, 1707], "diffuvs": 877, "impos": 877, "conduit_shape_factor": 877, "shape_factor": [877, 892], "r_toroid": [879, 895, 896], "toroid": [879, 894, 895, 896], "converg": [879, 895], "diverg": [879, 895], "advanc": [879, 895, 896, 1684], "meniscu": [879, 894, 895], "apex": [879, 895], "context": [879, 895], "sci": [879, 892], "1994": 879, "pemfc": 879, "voronoi": [879, 1031, 1069, 1083, 1084, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1728], "electrochem": [879, 901, 902], "soc": 879, "f731": 879, "2013": 879, "pore_diffus": [882, 883, 884, 885], "throat_diffus": [882, 883, 884, 885], "pore_temperatur": 883, "throat_temperatur": 883, "knudsen": 883, "molecular_weigth": 883, "pore_area": [885, 892], "taylor": 885, "ari": 885, "pore_conduct": [887, 888, 912, 913], "dict_blurb": [888, 894], "return_arr": 888, "pore_viscos": [890, 891, 892], "throat_viscos": [890, 891, 892], "pore_shape_factor": 892, "throat_shape_factor": 892, "conduit_length": 892, "adapt": 892, "a_p": 892, "r_p": 892, "sf_p": 892, "theorat": 892, "p_p": 892, "4\u03c0": 892, "t_a": 892, "sf_t": 892, "t_p": 892, "valvatn": 892, "martin": 892, "blunt": 892, "2004": [892, 901, 902], "patzek": 892, "silin": 892, "2001": 892, "noncircular": 892, "creep": 892, "304": 892, "profile_equ": 894, "target_pc": [894, 895, 896], "num_point": [894, 895, 896, 1699], "throat_scale_a": 894, "scale_a": 894, "throat_scale_b": 894, "scale_b": 894, "touch_length": [894, 895, 896], "sinusoid": 894, "send": [894, 1698], "men": 894, "profil": [894, 895, 896], "assess": 894, "minima": 894, "maxima": 894, "perpendicular": 894, "protrud": 894, "therfor": 894, "po": 894, "xpo": 894, "rx": 894, "fa": 894, "fb": 894, "throatrad": 894, "fill_angl": 894, "alpha_min": 894, "alpha_max": 894, "c2x": 894, "gamma": [894, 901, 902], "cap_angl": 894, "rad_curv": 894, "men_data": 894, "men_max": 894, "toru": 895, "quarter": 896, "wavelength": 896, "amplitud": 896, "arctan": 896, "forner": 896, "cuenca": 896, "pefc": 896, "wettabl": 896, "ec": 896, "f1038": 896, "f1048": 896, "throat_occup": 898, "pore_occup": 898, "strict": 898, "agress": 898, "unoccupi": [898, 1718, 1721], "loos": 898, "pc_star": 899, "swp_star": 899, "eta": 899, "residu": 899, "i0_ref": [901, 902], "c_ref": [901, 902], "reaction_area": [901, 902], "solid_voltag": [901, 902], "electrolyte_voltag": [901, 902], "open_circuit_voltag": [901, 902], "butler": [901, 902], "volmer": [901, 902], "redox": [901, 902], "exchang": [901, 902], "promot": [901, 902], "cathod": [901, 902], "theoret": [901, 902], "justif": [901, 902], "voltag": [901, 902], "equilibrium": [901, 902], "butler_volmer_voltag": 901, "former": [901, 902, 1806], "shouldn": [901, 902], "faradai": [901, 902], "book": [901, 902], "cite": [901, 902], "i_": [901, 902], "0ref": [901, 902], "rxn": [901, 902], "rt": [901, 902], "eta_": [901, 902], "phi_": [901, 902], "met": [901, 902], "u_": [901, 902], "electrostat": [901, 902], "consentr": [901, 902], "john": [901, 902], "newman": [901, 902], "karen": [901, 902], "thoma": [901, 902], "alyea": [901, 902], "wilei": [901, 902], "son": [901, 902], "chapter8": [901, 902], "electrolyte_concentr": 902, "rate_info": [902, 910], "butler_volmer_conc": 902, "a5": [903, 906, 907, 908], "a6": [903, 906], "eqn": 904, "sympi": 904, "evalu": [904, 1297, 1331, 1365, 1427, 1544, 1606], "sympifi": 904, "live": 904, "IF": 904, "referenc": 904, "st": 904, "arg_map": 904, "log_": 906, "pore_thermal_conduct": 913, "throat_thermal_conduct": 913, "dataclass": [915, 954, 1031, 1110, 1149, 1188, 1226], "belon": [915, 1149], "corner_sit": [915, 1149], "body_sit": 915, "incid": [915, 922, 933, 954, 961, 972, 993, 999, 1010, 1031, 1037, 1048, 1069, 1076, 1089, 1110, 1117, 1128, 1149, 1156, 1167, 1188, 1194, 1205, 1226, 1232, 1243], "mirror": [921, 960, 998, 1036, 1075, 1116, 1155, 1193, 1231], "wise": [921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "slice": [921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "algebra": [921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "routin": [921, 922, 931, 933, 960, 961, 970, 972, 998, 999, 1008, 1010, 1036, 1037, 1046, 1048, 1075, 1076, 1087, 1089, 1116, 1117, 1126, 1128, 1155, 1156, 1165, 1167, 1193, 1194, 1203, 1205, 1231, 1232, 1241, 1243], "sparse_arrai": [922, 961, 999, 1037, 1076, 1117, 1156, 1194, 1232], "cousin": [922, 961, 999, 1037, 1076, 1117, 1156, 1194, 1232], "1d": [924, 927, 928, 938, 963, 966, 967, 977, 1001, 1004, 1005, 1015, 1039, 1042, 1043, 1053, 1078, 1081, 1082, 1094, 1119, 1122, 1123, 1133, 1158, 1161, 1162, 1172, 1196, 1199, 1200, 1210, 1234, 1237, 1238, 1248], "arra": [924, 963, 1001, 1039, 1078, 1119, 1158, 1196, 1234], "minu": [924, 927, 928, 938, 963, 966, 967, 977, 1001, 1004, 1005, 1015, 1039, 1042, 1043, 1053, 1078, 1081, 1082, 1094, 1119, 1122, 1123, 1133, 1158, 1161, 1162, 1172, 1196, 1199, 1200, 1210, 1234, 1237, 1238, 1248, 1691, 1694, 1695], "isnan": [925, 964, 1002, 1040, 1079, 1120, 1159, 1197, 1235], "include_input": [926, 927, 965, 966, 1003, 1004, 1041, 1042, 1080, 1081, 1121, 1122, 1160, 1161, 1198, 1199, 1236, 1237, 1695], "radial": [926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236], "toplog": [926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236], "whom": [926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236], "nearbi": [926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236, 1714], "compress": [927, 966, 1004, 1042, 1081, 1122, 1161, 1199, 1237, 1691, 1694, 1695], "unflatten": [927, 966, 1004, 1042, 1081, 1122, 1161, 1199, 1237, 1691, 1694, 1695], "global": [927, 928, 966, 967, 1004, 1005, 1042, 1043, 1081, 1082, 1122, 1123, 1161, 1162, 1199, 1200, 1237, 1238, 1694, 1695], "bond": [928, 967, 1005, 1043, 1082, 1123, 1162, 1200, 1238, 1682, 1690, 1691, 1708, 1721], "futur": [931, 933, 970, 972, 1008, 1010, 1046, 1048, 1087, 1089, 1126, 1128, 1165, 1167, 1188, 1203, 1205, 1241, 1243], "sp": [931, 970, 1008, 1046, 1087, 1126, 1165, 1203, 1241], "uncertain": [938, 977, 1015, 1053, 1094, 1133, 1172, 1210, 1248], "accur": 954, "reduce_coordin": 954, "permit": 954, "disconnect": [954, 1723, 1863], "kept": 993, "cubictempl": [994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030], "height": [1031, 1699, 1707, 1724], "gabriel": [1031, 1723], "outsid": [1031, 1698, 1707], "excess": [1069, 1699], "outer": [1069, 1717, 1724, 1725], "li": 1069, "dual": 1069, "simultan": 1069, "tri": [1069, 1726], "delanuai": 1069, "subnetwork": 1069, "vor": [1069, 1728], "convex": [1083, 1704], "hull": [1083, 1704], "metod": 1083, "facet": 1084, "ridg": 1084, "face_sit": 1149, "head": [1188, 1867, 1868], "num_neighbor": 1188, "construct": 1188, "preset": [1265, 1395, 1636], "lennard": 1293, "jone": 1293, "binaryga": [1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326], "healthdict": [1297, 1331, 1365, 1427, 1544, 1606, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1862], "uniti": [1297, 1331, 1365, 1427, 1544, 1606], "healthi": [1297, 1331, 1365, 1427, 1544, 1606, 1756, 1862], "weigth": [1305, 1339, 1373, 1435, 1552, 1614], "getter": [1326, 1360, 1394, 1573, 1635], "multicompon": 1423, "constitut": 1423, "genericnetwork": 1484, "tabul": 1484, "contant": 1484, "gas_mix": 1540, "liq_mix": 1602, "standardliquidmixtur": [1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635], "basesolv": 1666, "directsolv": 1668, "tol": [1669, 1671, 1675, 1713], "iterativesolv": 1670, "petsc": [1671, 1672], "parallel": 1671, "partit": 1671, "mpirun": 1671, "num_cor": 1671, "petsclinearsolv": 1672, "solver_typ": 1672, "cg": [1672, 1675], "precondion": 1672, "jacobi": 1672, "vec": 1672, "destroi": 1672, "csr_matrix": 1672, "conjug": 1672, "precondition": 1672, "precondit": 1672, "factorization_typ": 1672, "lu": 1672, "pypardiso": 1673, "pardisospsolv": 1674, "scipycg": 1676, "scipyspsolv": 1678, "move_to": 1680, "apply_label": 1680, "clone_por": 1680, "translat": [1680, 1722], "cl": 1681, "reservoir": 1681, "occupied_bond": 1682, "acccord": [1682, 1721], "parent": 1683, "sibl": 1683, "pores1": [1684, 1697, 1723], "pores2": [1684, 1697, 1723], "add_conn": 1684, "usag": 1684, "consecut": [1684, 1715], "member": [1684, 1831, 1838], "batch": 1684, "306": 1684, "force_triu": 1685, "drop_diag": 1685, "drop_dup": 1685, "drop_neg": 1685, "cach": 1686, "recalcul": 1686, "dim": 1686, "headless": [1687, 1863], "dropped_edg": 1687, "render": 1687, "invalid": [1687, 1732, 1754], "p_label": 1690, "t_label": 1690, "inds_1": [1693, 1697], "inds_2": [1693, 1697], "somtim": [1694, 1695], "gind": 1695, "pore_pair": 1696, "shortest": 1696, "node_path": 1696, "edge_path": 1696, "dijkstra": 1696, "ok": 1697, "nodes1": 1697, "dist": 1697, "site1": 1697, "sites2": 1697, "kd": 1697, "triangul": [1698, 1726], "top_surfac": 1698, "sufac": 1698, "fail": [1698, 1809], "rectilinear": 1699, "domain_s": [1699, 1717], "smooth": 1699, "cart2sph": 1699, "cart2cyl": 1699, "enclos": [1704, 1734], "xyz": 1704, "pores_bc": 1705, "coplanar": 1706, "upward": 1707, "threshold": 1707, "toler": [1713, 1870], "find_surface_por": 1713, "donor": [1714, 1722], "stich": 1714, "stitch": [1714, 1723], "preferr": 1715, "continu": 1715, "find_nearby_por": 1715, "321": 1715, "320": 1715, "relect": 1717, "relfect": 1717, "across": 1717, "site_percol": 1718, "bond_percol": 1718, "transform": [1719, 1720], "copi": [1719, 1720, 1845, 1847], "shear_coord": 1719, "shear": 1720, "ai": 1720, "az": 1720, "bx": 1720, "bz": 1720, "cx": 1720, "cy": 1720, "rotate_coord": 1720, "aj": 1720, "occupied_sit": 1721, "p_network": 1722, "p_donor": 1722, "len_max": 1722, "label_suffix": 1722, "label_stitch": 1722, "recipi": 1722, "defaul": 1722, "recipienet": 1722, "disc": 1724, "annulu": 1724, "demarc": [1724, 1725], "unweight": [1726, 1728], "docor": [1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755], "shall": [1731, 1736, 1738, 1741, 1743, 1747, 1749, 1751], "dedent": [1731, 1749, 1751, 1754], "with_ind": 1731, "indent": [1731, 1754], "stacklevel": [1732, 1754], "safe_modul": [1732, 1754], "encount": [1732, 1754], "deprec": [1733, 1735, 1737, 1739, 1742, 1744, 1746, 1748, 1750, 1752, 1753, 1755], "base_kei": [1734, 1736, 1738, 1749, 1751], "no_arg": 1734, "no_kwarg": 1734, "no_args_kwarg": 1734, "similarili": 1734, "classmethod": 1735, "docrep": [1735, 1737, 1739, 1749, 1750, 1751, 1752], "delete_kwarg": [1735, 1745], "no_": 1736, "original_kei": [1736, 1749], "no_param1": 1736, "param2": [1736, 1749], "keep_param": [1736, 1745, 1750, 1751], "delete_typ": [1736, 1739, 1745, 1751], "delete_param": [1737, 1738, 1745, 1749], "out_kei": [1738, 1751], "keep_typ": [1738, 1745, 1749, 1752], "get_sect": [1740, 1746, 1749, 1751], "descriptor": 1740, "summary_ext": 1741, "get_extended_summari": [1742, 1743], "get_summari": [1743, 1748], "full_desc": 1743, "get_full_descript": 1744, "exctract": 1745, "guidelin": 1745, "param_like_sect": 1745, "text_sect": 1745, "split": 1745, "newlin": [1745, 1747], "napoleon": 1745, "blob": 1745, "master": 1745, "howto_docu": 1745, "rst": 1745, "save_docstr": 1745, "basicli": 1747, "param1": 1749, "reus": [1749, 1751], "docstringprocessor": [1749, 1751], "do_someth": [1749, 1751], "That": [1749, 1751], "doc_kei": [1749, 1751], "do_less": [1749, 1751], "my": [1749, 1751], "__doc__": [1749, 1751], "no_b": 1749, "int_onli": 1751, "no_float": 1751, "get_docstr": 1753, "unhealthi": 1756, "delimit": 1768, "to_dict": 1768, "unravel": 1768, "nesteddict": [1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781], "dct": 1778, "nicer": 1782, "item1": [1782, 1794], "item2": [1782, 1794], "item3": [1782, 1794], "item4": 1782, "printabledict": [1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793], "temp": 1794, "printablelist": [1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805], "sy": [1800, 1818], "valueerror": [1800, 1803, 1818, 1821], "indexerror": [1802, 1820], "IN": [1804, 1822], "ascend": [1805, 1823], "modifi": [1805, 1823], "stabl": [1805, 1823], "convers": 1806, "moreov": 1806, "uuid": 1808, "original_uuid": 1808, "456": 1809, "simplelist": 1811, "typedlist": [1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823], "typedset": [1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842], "null": 1834, "highest": 1843, "adminstr": 1843, "singleton": 1843, "wherev": 1843, "record": 1843, "gui": 1843, "renam": 1852, "load_workspac": 1852, "saved_fil": [1852, 1857], "networkssaved_fil": [1852, 1857], "pathlib": [1852, 1857], "save_workspac": 1857, "zip": 1858, "archiv": 1858, "load_project": 1858, "deem": 1862, "bidirect": 1863, "offend": 1863, "restor": 1863, "largest": 1863, "struct": [1864, 1876], "wtih": 1864, "input_list": 1865, "hr": [1867, 1868], "__str__": [1867, 1868], "workaround": [1867, 1868], "enhanc": [1867, 1868], "horizont": [1867, 1868], "get_printable_prop": 1867, "get_printable_label": 1868, "runtimewarn": 1869, "decor": 1869, "inevit": 1869, "temporarili": 1869, "myfun": 1869, "33333333": 1869, "input_dict": 1875, "vivifi": 1875}, "objects": {"": [[1877, 0, 0, "-", "openpnm"]], "openpnm": [[36, 0, 0, "-", "algorithms"], [524, 0, 0, "-", "core"], [612, 0, 0, "-", "integrators"], [616, 0, 0, "-", "io"], [640, 0, 0, "-", "models"], [914, 0, 0, "-", "network"], [1264, 0, 0, "-", "phase"], [1664, 0, 0, "-", "solvers"], [1679, 0, 0, "-", "topotools"], [1729, 0, 0, "-", "utils"]], "openpnm.algorithms": [[37, 1, 1, "", "AdvectionDiffusion"], [71, 1, 1, "", "Algorithm"], [97, 1, 1, "", "Drainage"], [129, 1, 1, "", "FickianDiffusion"], [162, 1, 1, "", "FourierConduction"], [195, 1, 1, "", "InvasionPercolation"], [227, 1, 1, "", "IonicConduction"], [260, 1, 1, "", "OhmicConduction"], [293, 1, 1, "", "ReactiveTransport"], [326, 1, 1, "", "StokesFlow"], [359, 1, 1, "", "TransientAdvectionDiffusion"], [393, 1, 1, "", "TransientFickianDiffusion"], [426, 1, 1, "", "TransientIonicConduction"], [459, 1, 1, "", "TransientReactiveTransport"], [492, 1, 1, "", "Transport"]], "openpnm.algorithms.AdvectionDiffusion": [[38, 2, 1, "", "clear"], [39, 2, 1, "", "clear_BCs"], [40, 2, 1, "", "clear_rate_BCs"], [41, 2, 1, "", "clear_value_BCs"], [42, 2, 1, "", "copy"], [43, 2, 1, "", "filter_by_label"], [44, 2, 1, "", "fromkeys"], [45, 2, 1, "", "get"], [46, 2, 1, "", "get_conduit_data"], [47, 2, 1, "", "interpolate_data"], [48, 2, 1, "", "items"], [49, 2, 1, "", "keys"], [50, 2, 1, "", "labels"], [51, 2, 1, "", "num_pores"], [52, 2, 1, "", "num_throats"], [53, 2, 1, "", "pop"], [54, 2, 1, "", "popitem"], [55, 2, 1, "", "pores"], [56, 2, 1, "", "props"], [57, 2, 1, "", "rate"], [58, 2, 1, "", "run"], [59, 2, 1, "", "set_BC"], [60, 2, 1, "", "set_label"], [61, 2, 1, "", "set_outflow_BC"], [62, 2, 1, "", "set_rate_BC"], [63, 2, 1, "", "set_source"], [64, 2, 1, "", "set_value_BC"], [65, 2, 1, "", "setdefault"], [66, 2, 1, "", "throats"], [67, 2, 1, "", "to_indices"], [68, 2, 1, "", "to_mask"], [69, 2, 1, "", "update"], [70, 2, 1, "", "values"]], "openpnm.algorithms.Algorithm": [[72, 2, 1, "", "clear"], [73, 2, 1, "", "clear_BCs"], [74, 2, 1, "", "copy"], [75, 2, 1, "", "filter_by_label"], [76, 2, 1, "", "fromkeys"], [77, 2, 1, "", "get"], [78, 2, 1, "", "get_conduit_data"], [79, 2, 1, "", "interpolate_data"], [80, 2, 1, "", "items"], [81, 2, 1, "", "keys"], [82, 2, 1, "", "labels"], [83, 2, 1, "", "num_pores"], [84, 2, 1, "", "num_throats"], [85, 2, 1, "", "pop"], [86, 2, 1, "", "popitem"], [87, 2, 1, "", "pores"], [88, 2, 1, "", "props"], [89, 2, 1, "", "set_BC"], [90, 2, 1, "", "set_label"], [91, 2, 1, "", "setdefault"], [92, 2, 1, "", "throats"], [93, 2, 1, "", "to_indices"], [94, 2, 1, "", "to_mask"], [95, 2, 1, "", "update"], [96, 2, 1, "", "values"]], "openpnm.algorithms.Drainage": [[98, 2, 1, "", "apply_trapping"], [99, 2, 1, "", "clear"], [100, 2, 1, "", "clear_BCs"], [101, 2, 1, "", "copy"], [102, 2, 1, "", "filter_by_label"], [103, 2, 1, "", "fromkeys"], [104, 2, 1, "", "get"], [105, 2, 1, "", "get_conduit_data"], [106, 2, 1, "", "interpolate_data"], [107, 2, 1, "", "items"], [108, 2, 1, "", "keys"], [109, 2, 1, "", "labels"], [110, 2, 1, "", "num_pores"], [111, 2, 1, "", "num_throats"], [112, 2, 1, "", "pc_curve"], [113, 2, 1, "", "pop"], [114, 2, 1, "", "popitem"], [115, 2, 1, "", "pores"], [116, 2, 1, "", "props"], [117, 2, 1, "", "reset"], [118, 2, 1, "", "run"], [119, 2, 1, "", "set_BC"], [120, 2, 1, "", "set_inlet_BC"], [121, 2, 1, "", "set_label"], [122, 2, 1, "", "set_outlet_BC"], [123, 2, 1, "", "setdefault"], [124, 2, 1, "", "throats"], [125, 2, 1, "", "to_indices"], [126, 2, 1, "", "to_mask"], [127, 2, 1, "", "update"], [128, 2, 1, "", "values"]], "openpnm.algorithms.FickianDiffusion": [[130, 2, 1, "", "clear"], [131, 2, 1, "", "clear_BCs"], [132, 2, 1, "", "clear_rate_BCs"], [133, 2, 1, "", "clear_value_BCs"], [134, 2, 1, "", "copy"], [135, 2, 1, "", "filter_by_label"], [136, 2, 1, "", "fromkeys"], [137, 2, 1, "", "get"], [138, 2, 1, "", "get_conduit_data"], [139, 2, 1, "", "interpolate_data"], [140, 2, 1, "", "items"], [141, 2, 1, "", "keys"], [142, 2, 1, "", "labels"], [143, 2, 1, "", "num_pores"], [144, 2, 1, "", "num_throats"], [145, 2, 1, "", "pop"], [146, 2, 1, "", "popitem"], [147, 2, 1, "", "pores"], [148, 2, 1, "", "props"], [149, 2, 1, "", "rate"], [150, 2, 1, "", "run"], [151, 2, 1, "", "set_BC"], [152, 2, 1, "", "set_label"], [153, 2, 1, "", "set_rate_BC"], [154, 2, 1, "", "set_source"], [155, 2, 1, "", "set_value_BC"], [156, 2, 1, "", "setdefault"], [157, 2, 1, "", "throats"], [158, 2, 1, "", "to_indices"], [159, 2, 1, "", "to_mask"], [160, 2, 1, "", "update"], [161, 2, 1, "", "values"]], "openpnm.algorithms.FourierConduction": [[163, 2, 1, "", "clear"], [164, 2, 1, "", "clear_BCs"], [165, 2, 1, "", "clear_rate_BCs"], [166, 2, 1, "", "clear_value_BCs"], [167, 2, 1, "", "copy"], [168, 2, 1, "", "filter_by_label"], [169, 2, 1, "", "fromkeys"], [170, 2, 1, "", "get"], [171, 2, 1, "", "get_conduit_data"], [172, 2, 1, "", "interpolate_data"], [173, 2, 1, "", "items"], [174, 2, 1, "", "keys"], [175, 2, 1, "", "labels"], [176, 2, 1, "", "num_pores"], [177, 2, 1, "", "num_throats"], [178, 2, 1, "", "pop"], [179, 2, 1, "", "popitem"], [180, 2, 1, "", "pores"], [181, 2, 1, "", "props"], [182, 2, 1, "", "rate"], [183, 2, 1, "", "run"], [184, 2, 1, "", "set_BC"], [185, 2, 1, "", "set_label"], [186, 2, 1, "", "set_rate_BC"], [187, 2, 1, "", "set_source"], [188, 2, 1, "", "set_value_BC"], [189, 2, 1, "", "setdefault"], [190, 2, 1, "", "throats"], [191, 2, 1, "", "to_indices"], [192, 2, 1, "", "to_mask"], [193, 2, 1, "", "update"], [194, 2, 1, "", "values"]], "openpnm.algorithms.InvasionPercolation": [[196, 2, 1, "", "apply_trapping"], [197, 2, 1, "", "clear"], [198, 2, 1, "", "clear_BCs"], [199, 2, 1, "", "copy"], [200, 2, 1, "", "filter_by_label"], [201, 2, 1, "", "fromkeys"], [202, 2, 1, "", "get"], [203, 2, 1, "", "get_conduit_data"], [204, 2, 1, "", "interpolate_data"], [205, 2, 1, "", "items"], [206, 2, 1, "", "keys"], [207, 2, 1, "", "labels"], [208, 2, 1, "", "num_pores"], [209, 2, 1, "", "num_throats"], [210, 2, 1, "", "pc_curve"], [211, 2, 1, "", "pop"], [212, 2, 1, "", "popitem"], [213, 2, 1, "", "pores"], [214, 2, 1, "", "props"], [215, 2, 1, "", "reset"], [216, 2, 1, "", "run"], [217, 2, 1, "", "set_BC"], [218, 2, 1, "", "set_inlet_BC"], [219, 2, 1, "", "set_label"], [220, 2, 1, "", "set_outlet_BC"], [221, 2, 1, "", "setdefault"], [222, 2, 1, "", "throats"], [223, 2, 1, "", "to_indices"], [224, 2, 1, "", "to_mask"], [225, 2, 1, "", "update"], [226, 2, 1, "", "values"]], "openpnm.algorithms.IonicConduction": [[228, 2, 1, "", "clear"], [229, 2, 1, "", "clear_BCs"], [230, 2, 1, "", "clear_rate_BCs"], [231, 2, 1, "", "clear_value_BCs"], [232, 2, 1, "", "copy"], [233, 2, 1, "", "filter_by_label"], [234, 2, 1, "", "fromkeys"], [235, 2, 1, "", "get"], [236, 2, 1, "", "get_conduit_data"], [237, 2, 1, "", "interpolate_data"], [238, 2, 1, "", "items"], [239, 2, 1, "", "keys"], [240, 2, 1, "", "labels"], [241, 2, 1, "", "num_pores"], [242, 2, 1, "", "num_throats"], [243, 2, 1, "", "pop"], [244, 2, 1, "", "popitem"], [245, 2, 1, "", "pores"], [246, 2, 1, "", "props"], [247, 2, 1, "", "rate"], [248, 2, 1, "", "run"], [249, 2, 1, "", "set_BC"], [250, 2, 1, "", "set_label"], [251, 2, 1, "", "set_rate_BC"], [252, 2, 1, "", "set_source"], [253, 2, 1, "", "set_value_BC"], [254, 2, 1, "", "setdefault"], [255, 2, 1, "", "throats"], [256, 2, 1, "", "to_indices"], [257, 2, 1, "", "to_mask"], [258, 2, 1, "", "update"], [259, 2, 1, "", "values"]], "openpnm.algorithms.OhmicConduction": [[261, 2, 1, "", "clear"], [262, 2, 1, "", "clear_BCs"], [263, 2, 1, "", "clear_rate_BCs"], [264, 2, 1, "", "clear_value_BCs"], [265, 2, 1, "", "copy"], [266, 2, 1, "", "filter_by_label"], [267, 2, 1, "", "fromkeys"], [268, 2, 1, "", "get"], [269, 2, 1, "", "get_conduit_data"], [270, 2, 1, "", "interpolate_data"], [271, 2, 1, "", "items"], [272, 2, 1, "", "keys"], [273, 2, 1, "", "labels"], [274, 2, 1, "", "num_pores"], [275, 2, 1, "", "num_throats"], [276, 2, 1, "", "pop"], [277, 2, 1, "", "popitem"], [278, 2, 1, "", "pores"], [279, 2, 1, "", "props"], [280, 2, 1, "", "rate"], [281, 2, 1, "", "run"], [282, 2, 1, "", "set_BC"], [283, 2, 1, "", "set_label"], [284, 2, 1, "", "set_rate_BC"], [285, 2, 1, "", "set_source"], [286, 2, 1, "", "set_value_BC"], [287, 2, 1, "", "setdefault"], [288, 2, 1, "", "throats"], [289, 2, 1, "", "to_indices"], [290, 2, 1, "", "to_mask"], [291, 2, 1, "", "update"], [292, 2, 1, "", "values"]], "openpnm.algorithms.ReactiveTransport": [[294, 2, 1, "", "clear"], [295, 2, 1, "", "clear_BCs"], [296, 2, 1, "", "clear_rate_BCs"], [297, 2, 1, "", "clear_value_BCs"], [298, 2, 1, "", "copy"], [299, 2, 1, "", "filter_by_label"], [300, 2, 1, "", "fromkeys"], [301, 2, 1, "", "get"], [302, 2, 1, "", "get_conduit_data"], [303, 2, 1, "", "interpolate_data"], [304, 2, 1, "", "items"], [305, 2, 1, "", "keys"], [306, 2, 1, "", "labels"], [307, 2, 1, "", "num_pores"], [308, 2, 1, "", "num_throats"], [309, 2, 1, "", "pop"], [310, 2, 1, "", "popitem"], [311, 2, 1, "", "pores"], [312, 2, 1, "", "props"], [313, 2, 1, "", "rate"], [314, 2, 1, "", "run"], [315, 2, 1, "", "set_BC"], [316, 2, 1, "", "set_label"], [317, 2, 1, "", "set_rate_BC"], [318, 2, 1, "", "set_source"], [319, 2, 1, "", "set_value_BC"], [320, 2, 1, "", "setdefault"], [321, 2, 1, "", "throats"], [322, 2, 1, "", "to_indices"], [323, 2, 1, "", "to_mask"], [324, 2, 1, "", "update"], [325, 2, 1, "", "values"]], "openpnm.algorithms.StokesFlow": [[327, 2, 1, "", "clear"], [328, 2, 1, "", "clear_BCs"], [329, 2, 1, "", "clear_rate_BCs"], [330, 2, 1, "", "clear_value_BCs"], [331, 2, 1, "", "copy"], [332, 2, 1, "", "filter_by_label"], [333, 2, 1, "", "fromkeys"], [334, 2, 1, "", "get"], [335, 2, 1, "", "get_conduit_data"], [336, 2, 1, "", "interpolate_data"], [337, 2, 1, "", "items"], [338, 2, 1, "", "keys"], [339, 2, 1, "", "labels"], [340, 2, 1, "", "num_pores"], [341, 2, 1, "", "num_throats"], [342, 2, 1, "", "pop"], [343, 2, 1, "", "popitem"], [344, 2, 1, "", "pores"], [345, 2, 1, "", "props"], [346, 2, 1, "", "rate"], [347, 2, 1, "", "run"], [348, 2, 1, "", "set_BC"], [349, 2, 1, "", "set_label"], [350, 2, 1, "", "set_rate_BC"], [351, 2, 1, "", "set_source"], [352, 2, 1, "", "set_value_BC"], [353, 2, 1, "", "setdefault"], [354, 2, 1, "", "throats"], [355, 2, 1, "", "to_indices"], [356, 2, 1, "", "to_mask"], [357, 2, 1, "", "update"], [358, 2, 1, "", "values"]], "openpnm.algorithms.TransientAdvectionDiffusion": [[360, 2, 1, "", "clear"], [361, 2, 1, "", "clear_BCs"], [362, 2, 1, "", "clear_rate_BCs"], [363, 2, 1, "", "clear_value_BCs"], [364, 2, 1, "", "copy"], [365, 2, 1, "", "filter_by_label"], [366, 2, 1, "", "fromkeys"], [367, 2, 1, "", "get"], [368, 2, 1, "", "get_conduit_data"], [369, 2, 1, "", "interpolate_data"], [370, 2, 1, "", "items"], [371, 2, 1, "", "keys"], [372, 2, 1, "", "labels"], [373, 2, 1, "", "num_pores"], [374, 2, 1, "", "num_throats"], [375, 2, 1, "", "pop"], [376, 2, 1, "", "popitem"], [377, 2, 1, "", "pores"], [378, 2, 1, "", "props"], [379, 2, 1, "", "rate"], [380, 2, 1, "", "run"], [381, 2, 1, "", "set_BC"], [382, 2, 1, "", "set_label"], [383, 2, 1, "", "set_outflow_BC"], [384, 2, 1, "", "set_rate_BC"], [385, 2, 1, "", "set_source"], [386, 2, 1, "", "set_value_BC"], [387, 2, 1, "", "setdefault"], [388, 2, 1, "", "throats"], [389, 2, 1, "", "to_indices"], [390, 2, 1, "", "to_mask"], [391, 2, 1, "", "update"], [392, 2, 1, "", "values"]], "openpnm.algorithms.TransientFickianDiffusion": [[394, 2, 1, "", "clear"], [395, 2, 1, "", "clear_BCs"], [396, 2, 1, "", "clear_rate_BCs"], [397, 2, 1, "", "clear_value_BCs"], [398, 2, 1, "", "copy"], [399, 2, 1, "", "filter_by_label"], [400, 2, 1, "", "fromkeys"], [401, 2, 1, "", "get"], [402, 2, 1, "", "get_conduit_data"], [403, 2, 1, "", "interpolate_data"], [404, 2, 1, "", "items"], [405, 2, 1, "", "keys"], [406, 2, 1, "", "labels"], [407, 2, 1, "", "num_pores"], [408, 2, 1, "", "num_throats"], [409, 2, 1, "", "pop"], [410, 2, 1, "", "popitem"], [411, 2, 1, "", "pores"], [412, 2, 1, "", "props"], [413, 2, 1, "", "rate"], [414, 2, 1, "", "run"], [415, 2, 1, "", "set_BC"], [416, 2, 1, "", "set_label"], [417, 2, 1, "", "set_rate_BC"], [418, 2, 1, "", "set_source"], [419, 2, 1, "", "set_value_BC"], [420, 2, 1, "", "setdefault"], [421, 2, 1, "", "throats"], [422, 2, 1, "", "to_indices"], [423, 2, 1, "", "to_mask"], [424, 2, 1, "", "update"], [425, 2, 1, "", "values"]], "openpnm.algorithms.TransientIonicConduction": [[427, 2, 1, "", "clear"], [428, 2, 1, "", "clear_BCs"], [429, 2, 1, "", "clear_rate_BCs"], [430, 2, 1, "", "clear_value_BCs"], [431, 2, 1, "", "copy"], [432, 2, 1, "", "filter_by_label"], [433, 2, 1, "", "fromkeys"], [434, 2, 1, "", "get"], [435, 2, 1, "", "get_conduit_data"], [436, 2, 1, "", "interpolate_data"], [437, 2, 1, "", "items"], [438, 2, 1, "", "keys"], [439, 2, 1, "", "labels"], [440, 2, 1, "", "num_pores"], [441, 2, 1, "", "num_throats"], [442, 2, 1, "", "pop"], [443, 2, 1, "", "popitem"], [444, 2, 1, "", "pores"], [445, 2, 1, "", "props"], [446, 2, 1, "", "rate"], [447, 2, 1, "", "run"], [448, 2, 1, "", "set_BC"], [449, 2, 1, "", "set_label"], [450, 2, 1, "", "set_rate_BC"], [451, 2, 1, "", "set_source"], [452, 2, 1, "", "set_value_BC"], [453, 2, 1, "", "setdefault"], [454, 2, 1, "", "throats"], [455, 2, 1, "", "to_indices"], [456, 2, 1, "", "to_mask"], [457, 2, 1, "", "update"], [458, 2, 1, "", "values"]], "openpnm.algorithms.TransientReactiveTransport": [[460, 2, 1, "", "clear"], [461, 2, 1, "", "clear_BCs"], [462, 2, 1, "", "clear_rate_BCs"], [463, 2, 1, "", "clear_value_BCs"], [464, 2, 1, "", "copy"], [465, 2, 1, "", "filter_by_label"], [466, 2, 1, "", "fromkeys"], [467, 2, 1, "", "get"], [468, 2, 1, "", "get_conduit_data"], [469, 2, 1, "", "interpolate_data"], [470, 2, 1, "", "items"], [471, 2, 1, "", "keys"], [472, 2, 1, "", "labels"], [473, 2, 1, "", "num_pores"], [474, 2, 1, "", "num_throats"], [475, 2, 1, "", "pop"], [476, 2, 1, "", "popitem"], [477, 2, 1, "", "pores"], [478, 2, 1, "", "props"], [479, 2, 1, "", "rate"], [480, 2, 1, "", "run"], [481, 2, 1, "", "set_BC"], [482, 2, 1, "", "set_label"], [483, 2, 1, "", "set_rate_BC"], [484, 2, 1, "", "set_source"], [485, 2, 1, "", "set_value_BC"], [486, 2, 1, "", "setdefault"], [487, 2, 1, "", "throats"], [488, 2, 1, "", "to_indices"], [489, 2, 1, "", "to_mask"], [490, 2, 1, "", "update"], [491, 2, 1, "", "values"]], "openpnm.algorithms.Transport": [[493, 2, 1, "", "clear"], [494, 2, 1, "", "clear_BCs"], [495, 2, 1, "", "clear_rate_BCs"], [496, 2, 1, "", "clear_value_BCs"], [497, 2, 1, "", "copy"], [498, 2, 1, "", "filter_by_label"], [499, 2, 1, "", "fromkeys"], [500, 2, 1, "", "get"], [501, 2, 1, "", "get_conduit_data"], [502, 2, 1, "", "interpolate_data"], [503, 2, 1, "", "items"], [504, 2, 1, "", "keys"], [505, 2, 1, "", "labels"], [506, 2, 1, "", "num_pores"], [507, 2, 1, "", "num_throats"], [508, 2, 1, "", "pop"], [509, 2, 1, "", "popitem"], [510, 2, 1, "", "pores"], [511, 2, 1, "", "props"], [512, 2, 1, "", "rate"], [513, 2, 1, "", "run"], [514, 2, 1, "", "set_BC"], [515, 2, 1, "", "set_label"], [516, 2, 1, "", "set_rate_BC"], [517, 2, 1, "", "set_value_BC"], [518, 2, 1, "", "setdefault"], [519, 2, 1, "", "throats"], [520, 2, 1, "", "to_indices"], [521, 2, 1, "", "to_mask"], [522, 2, 1, "", "update"], [523, 2, 1, "", "values"]], "openpnm.core": [[525, 1, 1, "", "Base2"], [542, 1, 1, "", "Domain"], [570, 1, 1, "", "LabelMixin"], [578, 1, 1, "", "ModelWrapper"], [591, 1, 1, "", "ModelsDict"], [606, 1, 1, "", "ModelsMixin2"], [611, 1, 1, "", "ParserMixin"]], "openpnm.core.Base2": [[526, 2, 1, "", "clear"], [527, 2, 1, "", "copy"], [528, 2, 1, "", "fromkeys"], [529, 2, 1, "", "get"], [530, 2, 1, "", "get_conduit_data"], [531, 2, 1, "", "interpolate_data"], [532, 2, 1, "", "items"], [533, 2, 1, "", "keys"], [534, 2, 1, "", "pop"], [535, 2, 1, "", "popitem"], [536, 2, 1, "", "props"], [537, 2, 1, "", "setdefault"], [538, 2, 1, "", "to_indices"], [539, 2, 1, "", "to_mask"], [540, 2, 1, "", "update"], [541, 2, 1, "", "values"]], "openpnm.core.Domain": [[543, 2, 1, "", "add_model"], [544, 2, 1, "", "add_model_collection"], [545, 2, 1, "", "clear"], [546, 2, 1, "", "copy"], [547, 2, 1, "", "filter_by_label"], [548, 2, 1, "", "fromkeys"], [549, 2, 1, "", "get"], [550, 2, 1, "", "get_conduit_data"], [551, 2, 1, "", "interpolate_data"], [552, 2, 1, "", "items"], [553, 2, 1, "", "keys"], [554, 2, 1, "", "labels"], [555, 2, 1, "", "num_pores"], [556, 2, 1, "", "num_throats"], [557, 2, 1, "", "pop"], [558, 2, 1, "", "popitem"], [559, 2, 1, "", "pores"], [560, 2, 1, "", "props"], [561, 2, 1, "", "regenerate_models"], [562, 2, 1, "", "run_model"], [563, 2, 1, "", "set_label"], [564, 2, 1, "", "setdefault"], [565, 2, 1, "", "throats"], [566, 2, 1, "", "to_indices"], [567, 2, 1, "", "to_mask"], [568, 2, 1, "", "update"], [569, 2, 1, "", "values"]], "openpnm.core.LabelMixin": [[571, 2, 1, "", "filter_by_label"], [572, 2, 1, "", "labels"], [573, 2, 1, "", "num_pores"], [574, 2, 1, "", "num_throats"], [575, 2, 1, "", "pores"], [576, 2, 1, "", "set_label"], [577, 2, 1, "", "throats"]], "openpnm.core.ModelWrapper": [[579, 2, 1, "", "__call__"], [580, 2, 1, "", "clear"], [581, 2, 1, "", "copy"], [582, 2, 1, "", "fromkeys"], [583, 2, 1, "", "get"], [584, 2, 1, "", "items"], [585, 2, 1, "", "keys"], [586, 2, 1, "", "pop"], [587, 2, 1, "", "popitem"], [588, 2, 1, "", "setdefault"], [589, 2, 1, "", "update"], [590, 2, 1, "", "values"]], "openpnm.core.ModelsDict": [[592, 2, 1, "", "clear"], [593, 2, 1, "", "copy"], [594, 2, 1, "", "dependency_graph"], [595, 2, 1, "", "dependency_list"], [596, 2, 1, "", "dependency_map"], [597, 2, 1, "", "fromkeys"], [598, 2, 1, "", "get"], [599, 2, 1, "", "items"], [600, 2, 1, "", "keys"], [601, 2, 1, "", "pop"], [602, 2, 1, "", "popitem"], [603, 2, 1, "", "setdefault"], [604, 2, 1, "", "update"], [605, 2, 1, "", "values"]], "openpnm.core.ModelsMixin2": [[607, 2, 1, "", "add_model"], [608, 2, 1, "", "add_model_collection"], [609, 2, 1, "", "regenerate_models"], [610, 2, 1, "", "run_model"]], "openpnm.integrators": [[613, 1, 1, "", "Integrator"], [614, 1, 1, "", "ScipyRK45"]], "openpnm.integrators.ScipyRK45": [[615, 2, 1, "", "solve"]], "openpnm.io": [[617, 3, 1, "", "network_from_csv"], [618, 3, 1, "", "network_from_jsongraph"], [619, 3, 1, "", "network_from_marock"], [620, 3, 1, "", "network_from_networkx"], [621, 3, 1, "", "network_from_pergeos"], [622, 3, 1, "", "network_from_porespy"], [623, 3, 1, "", "network_from_statoil"], [624, 3, 1, "", "network_to_comsol"], [625, 3, 1, "", "network_to_csv"], [626, 3, 1, "", "network_to_jsongraph"], [627, 3, 1, "", "network_to_networkx"], [628, 3, 1, "", "network_to_pandas"], [629, 3, 1, "", "network_to_pergeos"], [630, 3, 1, "", "network_to_salome"], [631, 3, 1, "", "network_to_stl"], [632, 3, 1, "", "print_hdf5"], [633, 3, 1, "", "project_to_csv"], [634, 3, 1, "", "project_to_dict"], [635, 3, 1, "", "project_to_hdf5"], [636, 3, 1, "", "project_to_pandas"], [637, 3, 1, "", "project_to_paraview"], [638, 3, 1, "", "project_to_vtk"], [639, 3, 1, "", "project_to_xdmf"]], "openpnm.models": [[641, 0, 0, "-", "collections"], [660, 0, 0, "-", "geometry"], [787, 0, 0, "-", "misc"], [808, 0, 0, "-", "network"], [824, 0, 0, "-", "phase"], [875, 0, 0, "-", "physics"]], "openpnm.models.collections": [[642, 0, 0, "-", "geometry"], [650, 0, 0, "-", "network"], [651, 0, 0, "-", "phase"], [657, 0, 0, "-", "physics"]], "openpnm.models.collections.geometry": [[643, 4, 1, "", "circles_and_rectangles"], [644, 4, 1, "", "cones_and_cylinders"], [645, 4, 1, "", "cubes_and_cuboids"], [646, 4, 1, "", "pyramids_and_cuboids"], [647, 4, 1, "", "spheres_and_cylinders"], [648, 4, 1, "", "squares_and_rectangles"], [649, 4, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.collections.phase": [[652, 4, 1, "", "air"], [653, 0, 0, "-", "gas"], [654, 0, 0, "-", "liquid"], [655, 4, 1, "", "mercury"], [656, 4, 1, "", "water"]], "openpnm.models.collections.physics": [[658, 4, 1, "", "basic"], [659, 4, 1, "", "standard"]], "openpnm.models.geometry": [[661, 0, 0, "-", "conduit_lengths"], [675, 0, 0, "-", "diffusive_size_factors"], [690, 0, 0, "-", "hydraulic_size_factors"], [705, 0, 0, "-", "pore_cross_sectional_area"], [711, 0, 0, "-", "pore_seed"], [714, 0, 0, "-", "pore_size"], [722, 0, 0, "-", "pore_surface_area"], [727, 0, 0, "-", "pore_volume"], [733, 0, 0, "-", "throat_capillary_shape_factor"], [737, 0, 0, "-", "throat_centroid"], [739, 0, 0, "-", "throat_cross_sectional_area"], [743, 0, 0, "-", "throat_endpoints"], [745, 0, 0, "-", "throat_length"], [759, 0, 0, "-", "throat_perimeter"], [763, 0, 0, "-", "throat_seed"], [766, 0, 0, "-", "throat_size"], [773, 0, 0, "-", "throat_surface_area"], [778, 0, 0, "-", "throat_vector"], [780, 0, 0, "-", "throat_volume"]], "openpnm.models.geometry.conduit_lengths": [[662, 3, 1, "", "circles_and_rectangles"], [663, 3, 1, "", "cones_and_cylinders"], [664, 3, 1, "", "cubes_and_cuboids"], [665, 3, 1, "", "hybrid_cones_and_cylinders"], [666, 3, 1, "", "hybrid_pyramids_and_cuboids"], [667, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [668, 3, 1, "", "intersecting_cones"], [669, 3, 1, "", "intersecting_pyramids"], [670, 3, 1, "", "intersecting_trapezoids"], [671, 3, 1, "", "pyramids_and_cuboids"], [672, 3, 1, "", "spheres_and_cylinders"], [673, 3, 1, "", "squares_and_rectangles"], [674, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[676, 3, 1, "", "circles_and_rectangles"], [677, 3, 1, "", "cones_and_cylinders"], [678, 3, 1, "", "cubes_and_cuboids"], [679, 3, 1, "", "hybrid_cones_and_cylinders"], [680, 3, 1, "", "hybrid_pyramids_and_cuboids"], [681, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [682, 3, 1, "", "intersecting_cones"], [683, 3, 1, "", "intersecting_pyramids"], [684, 3, 1, "", "intersecting_trapezoids"], [685, 3, 1, "", "ncylinders_in_series"], [686, 3, 1, "", "pyramids_and_cuboids"], [687, 3, 1, "", "spheres_and_cylinders"], [688, 3, 1, "", "squares_and_rectangles"], [689, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[691, 3, 1, "", "circles_and_rectangles"], [692, 3, 1, "", "cones_and_cylinders"], [693, 3, 1, "", "cubes_and_cuboids"], [694, 3, 1, "", "hybrid_cones_and_cylinders"], [695, 3, 1, "", "hybrid_pyramids_and_cuboids"], [696, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [697, 3, 1, "", "intersecting_cones"], [698, 3, 1, "", "intersecting_pyramids"], [699, 3, 1, "", "intersecting_trapezoids"], [700, 3, 1, "", "ncylinders_in_series"], [701, 3, 1, "", "pyramids_and_cuboids"], [702, 3, 1, "", "spheres_and_cylinders"], [703, 3, 1, "", "squares_and_rectangles"], [704, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[706, 3, 1, "", "circle"], [707, 3, 1, "", "cone"], [708, 3, 1, "", "cube"], [709, 3, 1, "", "sphere"], [710, 3, 1, "", "square"]], "openpnm.models.geometry.pore_seed": [[712, 3, 1, "", "random"], [713, 3, 1, "", "spatially_correlated"]], "openpnm.models.geometry.pore_size": [[715, 3, 1, "", "equivalent_diameter"], [716, 3, 1, "", "from_neighbor_throats"], [717, 3, 1, "", "generic_distribution"], [718, 3, 1, "", "largest_sphere"], [719, 3, 1, "", "normal"], [720, 3, 1, "", "random"], [721, 3, 1, "", "weibull"]], "openpnm.models.geometry.pore_surface_area": [[723, 3, 1, "", "circle"], [724, 3, 1, "", "cube"], [725, 3, 1, "", "sphere"], [726, 3, 1, "", "square"]], "openpnm.models.geometry.pore_volume": [[728, 3, 1, "", "circle"], [729, 3, 1, "", "cube"], [730, 3, 1, "", "effective"], [731, 3, 1, "", "sphere"], [732, 3, 1, "", "square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[734, 3, 1, "", "compactness"], [735, 3, 1, "", "jenkins_rao"], [736, 3, 1, "", "mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[738, 3, 1, "", "pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[740, 3, 1, "", "cuboid"], [741, 3, 1, "", "cylinder"], [742, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_endpoints": [[744, 3, 1, "", "spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[746, 3, 1, "", "circles_and_rectangles"], [747, 3, 1, "", "cones_and_cylinders"], [748, 3, 1, "", "cubes_and_cuboids"], [749, 3, 1, "", "hybrid_cones_and_cylinders"], [750, 3, 1, "", "hybrid_pyramids_and_cuboids"], [751, 3, 1, "", "hybrid_trapezoids_and_rectangles"], [752, 3, 1, "", "intersecting_cones"], [753, 3, 1, "", "intersecting_pyramids"], [754, 3, 1, "", "intersecting_trapezoids"], [755, 3, 1, "", "pyramids_and_cuboids"], [756, 3, 1, "", "spheres_and_cylinders"], [757, 3, 1, "", "squares_and_rectangles"], [758, 3, 1, "", "trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[760, 3, 1, "", "cuboid"], [761, 3, 1, "", "cylinder"], [762, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_seed": [[764, 3, 1, "", "from_neighbor_pores"], [765, 3, 1, "", "random"]], "openpnm.models.geometry.throat_size": [[767, 3, 1, "", "equivalent_diameter"], [768, 3, 1, "", "from_neighbor_pores"], [769, 3, 1, "", "generic_distribution"], [770, 3, 1, "", "normal"], [771, 3, 1, "", "random"], [772, 3, 1, "", "weibull"]], "openpnm.models.geometry.throat_surface_area": [[774, 3, 1, "", "cuboid"], [775, 3, 1, "", "cylinder"], [776, 3, 1, "", "extrusion"], [777, 3, 1, "", "rectangle"]], "openpnm.models.geometry.throat_vector": [[779, 3, 1, "", "pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[781, 3, 1, "", "cuboid"], [782, 3, 1, "", "cylinder"], [783, 3, 1, "", "extrusion"], [784, 3, 1, "", "lens"], [785, 3, 1, "", "pendular_ring"], [786, 3, 1, "", "rectangle"]], "openpnm.models.misc": [[788, 3, 1, "", "blank"], [789, 3, 1, "", "clip"], [790, 3, 1, "", "constant"], [791, 3, 1, "", "difference"], [792, 3, 1, "", "fraction"], [793, 3, 1, "", "from_neighbor_pores"], [794, 3, 1, "", "from_neighbor_throats"], [795, 3, 1, "", "generic_distribution"], [796, 3, 1, "", "generic_function"], [797, 3, 1, "", "invert"], [798, 3, 1, "", "linear"], [799, 3, 1, "", "match_histogram"], [800, 3, 1, "", "normal"], [801, 3, 1, "", "normalize"], [802, 3, 1, "", "polynomial"], [803, 3, 1, "", "product"], [804, 3, 1, "", "random"], [805, 3, 1, "", "scaled"], [806, 3, 1, "", "summation"], [807, 3, 1, "", "weibull"]], "openpnm.models.network": [[809, 3, 1, "", "bidirectional_throats"], [810, 3, 1, "", "cluster_number"], [811, 3, 1, "", "cluster_size"], [812, 3, 1, "", "coordination_number"], [813, 3, 1, "", "count_coincident_pores"], [814, 3, 1, "", "distance_to_furthest_neighbor"], [815, 3, 1, "", "distance_to_nearest_neighbor"], [816, 3, 1, "", "distance_to_nearest_pore"], [817, 3, 1, "", "duplicate_throats"], [818, 3, 1, "", "find_coincident_pores"], [819, 3, 1, "", "headless_throats"], [820, 3, 1, "", "isolated_pores"], [821, 3, 1, "", "looped_throats"], [822, 3, 1, "", "pore_to_pore_distance"], [823, 3, 1, "", "reversed_throats"]], "openpnm.models.phase": [[825, 3, 1, "", "chemicals_wrapper"], [826, 0, 0, "-", "critical_props"], [827, 0, 0, "-", "density"], [833, 0, 0, "-", "diffusivity"], [837, 0, 0, "-", "heat_capacity"], [842, 0, 0, "-", "misc"], [845, 0, 0, "-", "mixtures"], [851, 0, 0, "-", "partition_coefficient"], [853, 0, 0, "-", "surface_tension"], [857, 0, 0, "-", "thermal_conductivity"], [864, 0, 0, "-", "vapor_pressure"], [868, 0, 0, "-", "viscosity"]], "openpnm.models.phase.density": [[828, 3, 1, "", "ideal_gas"], [829, 3, 1, "", "liquid_mixture_COSTALD"], [830, 3, 1, "", "liquid_pure_COSTALD"], [831, 3, 1, "", "mass_to_molar"], [832, 3, 1, "", "water_correlation"]], "openpnm.models.phase.diffusivity": [[834, 3, 1, "", "gas_mixture_ce"], [835, 3, 1, "", "gas_mixture_fesg"], [836, 3, 1, "", "liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[838, 3, 1, "", "gas_mixture_yweighted"], [839, 3, 1, "", "gas_pure_TRC"], [840, 3, 1, "", "liquid_mixture_xweighted"], [841, 3, 1, "", "liquid_pure_rp"]], "openpnm.models.phase.misc": [[843, 3, 1, "", "mix_and_match"], [844, 3, 1, "", "mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[846, 3, 1, "", "from_component"], [847, 3, 1, "", "mixing_rule"], [848, 3, 1, "", "mole_summation"], [849, 3, 1, "", "mole_to_mass_fraction"], [850, 3, 1, "", "salinity"]], "openpnm.models.phase.partition_coefficient": [[852, 3, 1, "", "gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[854, 3, 1, "", "liquid_mixture_wsd"], [855, 3, 1, "", "liquid_pure_bb"], [856, 3, 1, "", "water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[858, 3, 1, "", "gas_mixture_whz"], [859, 3, 1, "", "gas_pure_gismr"], [860, 3, 1, "", "liquid_mixture_DIPPR9H"], [861, 3, 1, "", "liquid_pure_gismr"], [862, 3, 1, "", "liquid_pure_sr"], [863, 3, 1, "", "water_correlation"]], "openpnm.models.phase.vapor_pressure": [[865, 3, 1, "", "liquid_pure_antoine"], [866, 3, 1, "", "liquid_pure_lk"], [867, 3, 1, "", "water_correlation"]], "openpnm.models.phase.viscosity": [[869, 3, 1, "", "gas_mixture_hz"], [870, 3, 1, "", "gas_pure_gesmr"], [871, 3, 1, "", "gas_pure_st"], [872, 3, 1, "", "liquid_mixture_xweighted"], [873, 3, 1, "", "liquid_pure_ls"], [874, 3, 1, "", "water_correlation"]], "openpnm.models.physics": [[876, 0, 0, "-", "ad_dif_conductance"], [878, 0, 0, "-", "capillary_pressure"], [881, 0, 0, "-", "diffusive_conductance"], [886, 0, 0, "-", "electrical_conductance"], [889, 0, 0, "-", "hydraulic_conductance"], [893, 0, 0, "-", "meniscus"], [897, 0, 0, "-", "multiphase"], [900, 0, 0, "-", "source_terms"], [911, 0, 0, "-", "thermal_conductance"]], "openpnm.models.physics.ad_dif_conductance": [[877, 3, 1, "", "ad_dif"]], "openpnm.models.physics.capillary_pressure": [[879, 3, 1, "", "purcell"], [880, 3, 1, "", "washburn"]], "openpnm.models.physics.diffusive_conductance": [[882, 3, 1, "", "generic_diffusive"], [883, 3, 1, "", "mixed_diffusion"], [884, 3, 1, "", "ordinary_diffusion"], [885, 3, 1, "", "taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[887, 3, 1, "", "generic_electrical"], [888, 3, 1, "", "series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[890, 3, 1, "", "generic_hydraulic"], [891, 3, 1, "", "hagen_poiseuille"], [892, 3, 1, "", "valvatne_blunt"]], "openpnm.models.physics.meniscus": [[894, 3, 1, "", "general_toroidal"], [895, 3, 1, "", "purcell"], [896, 3, 1, "", "sinusoidal"]], "openpnm.models.physics.multiphase": [[898, 3, 1, "", "conduit_conductance"], [899, 3, 1, "", "late_filling"]], "openpnm.models.physics.source_terms": [[901, 3, 1, "", "butler_volmer_conc"], [902, 3, 1, "", "butler_volmer_voltage"], [903, 3, 1, "", "exponential"], [904, 3, 1, "", "general_symbolic"], [905, 3, 1, "", "linear"], [906, 3, 1, "", "logarithm"], [907, 3, 1, "", "natural_exponential"], [908, 3, 1, "", "natural_logarithm"], [909, 3, 1, "", "power_law"], [910, 3, 1, "", "standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[912, 3, 1, "", "generic_thermal"], [913, 3, 1, "", "series_resistors"]], "openpnm.network": [[915, 1, 1, "", "BodyCenteredCubic"], [954, 1, 1, "", "Cubic"], [993, 1, 1, "", "CubicTemplate"], [1031, 1, 1, "", "Delaunay"], [1069, 1, 1, "", "DelaunayVoronoiDual"], [1110, 1, 1, "", "Demo"], [1149, 1, 1, "", "FaceCenteredCubic"], [1188, 1, 1, "", "Network"], [1226, 1, 1, "", "Voronoi"]], "openpnm.network.BodyCenteredCubic": [[916, 2, 1, "", "add_boundary_pores"], [917, 2, 1, "", "add_model"], [918, 2, 1, "", "add_model_collection"], [919, 2, 1, "", "clear"], [920, 2, 1, "", "copy"], [921, 2, 1, "", "create_adjacency_matrix"], [922, 2, 1, "", "create_incidence_matrix"], [923, 2, 1, "", "filter_by_label"], [924, 2, 1, "", "find_connected_pores"], [925, 2, 1, "", "find_connecting_throat"], [926, 2, 1, "", "find_nearby_pores"], [927, 2, 1, "", "find_neighbor_pores"], [928, 2, 1, "", "find_neighbor_throats"], [929, 2, 1, "", "fromkeys"], [930, 2, 1, "", "get"], [931, 2, 1, "", "get_adjacency_matrix"], [932, 2, 1, "", "get_conduit_data"], [933, 2, 1, "", "get_incidence_matrix"], [934, 2, 1, "", "interpolate_data"], [935, 2, 1, "", "items"], [936, 2, 1, "", "keys"], [937, 2, 1, "", "labels"], [938, 2, 1, "", "num_neighbors"], [939, 2, 1, "", "num_pores"], [940, 2, 1, "", "num_throats"], [941, 2, 1, "", "pop"], [942, 2, 1, "", "popitem"], [943, 2, 1, "", "pores"], [944, 2, 1, "", "props"], [945, 2, 1, "", "regenerate_models"], [946, 2, 1, "", "run_model"], [947, 2, 1, "", "set_label"], [948, 2, 1, "", "setdefault"], [949, 2, 1, "", "throats"], [950, 2, 1, "", "to_indices"], [951, 2, 1, "", "to_mask"], [952, 2, 1, "", "update"], [953, 2, 1, "", "values"]], "openpnm.network.Cubic": [[955, 2, 1, "", "add_boundary_pores"], [956, 2, 1, "", "add_model"], [957, 2, 1, "", "add_model_collection"], [958, 2, 1, "", "clear"], [959, 2, 1, "", "copy"], [960, 2, 1, "", "create_adjacency_matrix"], [961, 2, 1, "", "create_incidence_matrix"], [962, 2, 1, "", "filter_by_label"], [963, 2, 1, "", "find_connected_pores"], [964, 2, 1, "", "find_connecting_throat"], [965, 2, 1, "", "find_nearby_pores"], [966, 2, 1, "", "find_neighbor_pores"], [967, 2, 1, "", "find_neighbor_throats"], [968, 2, 1, "", "fromkeys"], [969, 2, 1, "", "get"], [970, 2, 1, "", "get_adjacency_matrix"], [971, 2, 1, "", "get_conduit_data"], [972, 2, 1, "", "get_incidence_matrix"], [973, 2, 1, "", "interpolate_data"], [974, 2, 1, "", "items"], [975, 2, 1, "", "keys"], [976, 2, 1, "", "labels"], [977, 2, 1, "", "num_neighbors"], [978, 2, 1, "", "num_pores"], [979, 2, 1, "", "num_throats"], [980, 2, 1, "", "pop"], [981, 2, 1, "", "popitem"], [982, 2, 1, "", "pores"], [983, 2, 1, "", "props"], [984, 2, 1, "", "regenerate_models"], [985, 2, 1, "", "run_model"], [986, 2, 1, "", "set_label"], [987, 2, 1, "", "setdefault"], [988, 2, 1, "", "throats"], [989, 2, 1, "", "to_indices"], [990, 2, 1, "", "to_mask"], [991, 2, 1, "", "update"], [992, 2, 1, "", "values"]], "openpnm.network.CubicTemplate": [[994, 2, 1, "", "add_model"], [995, 2, 1, "", "add_model_collection"], [996, 2, 1, "", "clear"], [997, 2, 1, "", "copy"], [998, 2, 1, "", "create_adjacency_matrix"], [999, 2, 1, "", "create_incidence_matrix"], [1000, 2, 1, "", "filter_by_label"], [1001, 2, 1, "", "find_connected_pores"], [1002, 2, 1, "", "find_connecting_throat"], [1003, 2, 1, "", "find_nearby_pores"], [1004, 2, 1, "", "find_neighbor_pores"], [1005, 2, 1, "", "find_neighbor_throats"], [1006, 2, 1, "", "fromkeys"], [1007, 2, 1, "", "get"], [1008, 2, 1, "", "get_adjacency_matrix"], [1009, 2, 1, "", "get_conduit_data"], [1010, 2, 1, "", "get_incidence_matrix"], [1011, 2, 1, "", "interpolate_data"], [1012, 2, 1, "", "items"], [1013, 2, 1, "", "keys"], [1014, 2, 1, "", "labels"], [1015, 2, 1, "", "num_neighbors"], [1016, 2, 1, "", "num_pores"], [1017, 2, 1, "", "num_throats"], [1018, 2, 1, "", "pop"], [1019, 2, 1, "", "popitem"], [1020, 2, 1, "", "pores"], [1021, 2, 1, "", "props"], [1022, 2, 1, "", "regenerate_models"], [1023, 2, 1, "", "run_model"], [1024, 2, 1, "", "set_label"], [1025, 2, 1, "", "setdefault"], [1026, 2, 1, "", "throats"], [1027, 2, 1, "", "to_indices"], [1028, 2, 1, "", "to_mask"], [1029, 2, 1, "", "update"], [1030, 2, 1, "", "values"]], "openpnm.network.Delaunay": [[1032, 2, 1, "", "add_model"], [1033, 2, 1, "", "add_model_collection"], [1034, 2, 1, "", "clear"], [1035, 2, 1, "", "copy"], [1036, 2, 1, "", "create_adjacency_matrix"], [1037, 2, 1, "", "create_incidence_matrix"], [1038, 2, 1, "", "filter_by_label"], [1039, 2, 1, "", "find_connected_pores"], [1040, 2, 1, "", "find_connecting_throat"], [1041, 2, 1, "", "find_nearby_pores"], [1042, 2, 1, "", "find_neighbor_pores"], [1043, 2, 1, "", "find_neighbor_throats"], [1044, 2, 1, "", "fromkeys"], [1045, 2, 1, "", "get"], [1046, 2, 1, "", "get_adjacency_matrix"], [1047, 2, 1, "", "get_conduit_data"], [1048, 2, 1, "", "get_incidence_matrix"], [1049, 2, 1, "", "interpolate_data"], [1050, 2, 1, "", "items"], [1051, 2, 1, "", "keys"], [1052, 2, 1, "", "labels"], [1053, 2, 1, "", "num_neighbors"], [1054, 2, 1, "", "num_pores"], [1055, 2, 1, "", "num_throats"], [1056, 2, 1, "", "pop"], [1057, 2, 1, "", "popitem"], [1058, 2, 1, "", "pores"], [1059, 2, 1, "", "props"], [1060, 2, 1, "", "regenerate_models"], [1061, 2, 1, "", "run_model"], [1062, 2, 1, "", "set_label"], [1063, 2, 1, "", "setdefault"], [1064, 2, 1, "", "throats"], [1065, 2, 1, "", "to_indices"], [1066, 2, 1, "", "to_mask"], [1067, 2, 1, "", "update"], [1068, 2, 1, "", "values"]], "openpnm.network.DelaunayVoronoiDual": [[1070, 2, 1, "", "add_boundary_pores"], [1071, 2, 1, "", "add_model"], [1072, 2, 1, "", "add_model_collection"], [1073, 2, 1, "", "clear"], [1074, 2, 1, "", "copy"], [1075, 2, 1, "", "create_adjacency_matrix"], [1076, 2, 1, "", "create_incidence_matrix"], [1077, 2, 1, "", "filter_by_label"], [1078, 2, 1, "", "find_connected_pores"], [1079, 2, 1, "", "find_connecting_throat"], [1080, 2, 1, "", "find_nearby_pores"], [1081, 2, 1, "", "find_neighbor_pores"], [1082, 2, 1, "", "find_neighbor_throats"], [1083, 2, 1, "", "find_pore_hulls"], [1084, 2, 1, "", "find_throat_facets"], [1085, 2, 1, "", "fromkeys"], [1086, 2, 1, "", "get"], [1087, 2, 1, "", "get_adjacency_matrix"], [1088, 2, 1, "", "get_conduit_data"], [1089, 2, 1, "", "get_incidence_matrix"], [1090, 2, 1, "", "interpolate_data"], [1091, 2, 1, "", "items"], [1092, 2, 1, "", "keys"], [1093, 2, 1, "", "labels"], [1094, 2, 1, "", "num_neighbors"], [1095, 2, 1, "", "num_pores"], [1096, 2, 1, "", "num_throats"], [1097, 2, 1, "", "pop"], [1098, 2, 1, "", "popitem"], [1099, 2, 1, "", "pores"], [1100, 2, 1, "", "props"], [1101, 2, 1, "", "regenerate_models"], [1102, 2, 1, "", "run_model"], [1103, 2, 1, "", "set_label"], [1104, 2, 1, "", "setdefault"], [1105, 2, 1, "", "throats"], [1106, 2, 1, "", "to_indices"], [1107, 2, 1, "", "to_mask"], [1108, 2, 1, "", "update"], [1109, 2, 1, "", "values"]], "openpnm.network.Demo": [[1111, 2, 1, "", "add_boundary_pores"], [1112, 2, 1, "", "add_model"], [1113, 2, 1, "", "add_model_collection"], [1114, 2, 1, "", "clear"], [1115, 2, 1, "", "copy"], [1116, 2, 1, "", "create_adjacency_matrix"], [1117, 2, 1, "", "create_incidence_matrix"], [1118, 2, 1, "", "filter_by_label"], [1119, 2, 1, "", "find_connected_pores"], [1120, 2, 1, "", "find_connecting_throat"], [1121, 2, 1, "", "find_nearby_pores"], [1122, 2, 1, "", "find_neighbor_pores"], [1123, 2, 1, "", "find_neighbor_throats"], [1124, 2, 1, "", "fromkeys"], [1125, 2, 1, "", "get"], [1126, 2, 1, "", "get_adjacency_matrix"], [1127, 2, 1, "", "get_conduit_data"], [1128, 2, 1, "", "get_incidence_matrix"], [1129, 2, 1, "", "interpolate_data"], [1130, 2, 1, "", "items"], [1131, 2, 1, "", "keys"], [1132, 2, 1, "", "labels"], [1133, 2, 1, "", "num_neighbors"], [1134, 2, 1, "", "num_pores"], [1135, 2, 1, "", "num_throats"], [1136, 2, 1, "", "pop"], [1137, 2, 1, "", "popitem"], [1138, 2, 1, "", "pores"], [1139, 2, 1, "", "props"], [1140, 2, 1, "", "regenerate_models"], [1141, 2, 1, "", "run_model"], [1142, 2, 1, "", "set_label"], [1143, 2, 1, "", "setdefault"], [1144, 2, 1, "", "throats"], [1145, 2, 1, "", "to_indices"], [1146, 2, 1, "", "to_mask"], [1147, 2, 1, "", "update"], [1148, 2, 1, "", "values"]], "openpnm.network.FaceCenteredCubic": [[1150, 2, 1, "", "add_boundary_pores"], [1151, 2, 1, "", "add_model"], [1152, 2, 1, "", "add_model_collection"], [1153, 2, 1, "", "clear"], [1154, 2, 1, "", "copy"], [1155, 2, 1, "", "create_adjacency_matrix"], [1156, 2, 1, "", "create_incidence_matrix"], [1157, 2, 1, "", "filter_by_label"], [1158, 2, 1, "", "find_connected_pores"], [1159, 2, 1, "", "find_connecting_throat"], [1160, 2, 1, "", "find_nearby_pores"], [1161, 2, 1, "", "find_neighbor_pores"], [1162, 2, 1, "", "find_neighbor_throats"], [1163, 2, 1, "", "fromkeys"], [1164, 2, 1, "", "get"], [1165, 2, 1, "", "get_adjacency_matrix"], [1166, 2, 1, "", "get_conduit_data"], [1167, 2, 1, "", "get_incidence_matrix"], [1168, 2, 1, "", "interpolate_data"], [1169, 2, 1, "", "items"], [1170, 2, 1, "", "keys"], [1171, 2, 1, "", "labels"], [1172, 2, 1, "", "num_neighbors"], [1173, 2, 1, "", "num_pores"], [1174, 2, 1, "", "num_throats"], [1175, 2, 1, "", "pop"], [1176, 2, 1, "", "popitem"], [1177, 2, 1, "", "pores"], [1178, 2, 1, "", "props"], [1179, 2, 1, "", "regenerate_models"], [1180, 2, 1, "", "run_model"], [1181, 2, 1, "", "set_label"], [1182, 2, 1, "", "setdefault"], [1183, 2, 1, "", "throats"], [1184, 2, 1, "", "to_indices"], [1185, 2, 1, "", "to_mask"], [1186, 2, 1, "", "update"], [1187, 2, 1, "", "values"]], "openpnm.network.Network": [[1189, 2, 1, "", "add_model"], [1190, 2, 1, "", "add_model_collection"], [1191, 2, 1, "", "clear"], [1192, 2, 1, "", "copy"], [1193, 2, 1, "", "create_adjacency_matrix"], [1194, 2, 1, "", "create_incidence_matrix"], [1195, 2, 1, "", "filter_by_label"], [1196, 2, 1, "", "find_connected_pores"], [1197, 2, 1, "", "find_connecting_throat"], [1198, 2, 1, "", "find_nearby_pores"], [1199, 2, 1, "", "find_neighbor_pores"], [1200, 2, 1, "", "find_neighbor_throats"], [1201, 2, 1, "", "fromkeys"], [1202, 2, 1, "", "get"], [1203, 2, 1, "", "get_adjacency_matrix"], [1204, 2, 1, "", "get_conduit_data"], [1205, 2, 1, "", "get_incidence_matrix"], [1206, 2, 1, "", "interpolate_data"], [1207, 2, 1, "", "items"], [1208, 2, 1, "", "keys"], [1209, 2, 1, "", "labels"], [1210, 2, 1, "", "num_neighbors"], [1211, 2, 1, "", "num_pores"], [1212, 2, 1, "", "num_throats"], [1213, 2, 1, "", "pop"], [1214, 2, 1, "", "popitem"], [1215, 2, 1, "", "pores"], [1216, 2, 1, "", "props"], [1217, 2, 1, "", "regenerate_models"], [1218, 2, 1, "", "run_model"], [1219, 2, 1, "", "set_label"], [1220, 2, 1, "", "setdefault"], [1221, 2, 1, "", "throats"], [1222, 2, 1, "", "to_indices"], [1223, 2, 1, "", "to_mask"], [1224, 2, 1, "", "update"], [1225, 2, 1, "", "values"]], "openpnm.network.Voronoi": [[1227, 2, 1, "", "add_model"], [1228, 2, 1, "", "add_model_collection"], [1229, 2, 1, "", "clear"], [1230, 2, 1, "", "copy"], [1231, 2, 1, "", "create_adjacency_matrix"], [1232, 2, 1, "", "create_incidence_matrix"], [1233, 2, 1, "", "filter_by_label"], [1234, 2, 1, "", "find_connected_pores"], [1235, 2, 1, "", "find_connecting_throat"], [1236, 2, 1, "", "find_nearby_pores"], [1237, 2, 1, "", "find_neighbor_pores"], [1238, 2, 1, "", "find_neighbor_throats"], [1239, 2, 1, "", "fromkeys"], [1240, 2, 1, "", "get"], [1241, 2, 1, "", "get_adjacency_matrix"], [1242, 2, 1, "", "get_conduit_data"], [1243, 2, 1, "", "get_incidence_matrix"], [1244, 2, 1, "", "interpolate_data"], [1245, 2, 1, "", "items"], [1246, 2, 1, "", "keys"], [1247, 2, 1, "", "labels"], [1248, 2, 1, "", "num_neighbors"], [1249, 2, 1, "", "num_pores"], [1250, 2, 1, "", "num_throats"], [1251, 2, 1, "", "pop"], [1252, 2, 1, "", "popitem"], [1253, 2, 1, "", "pores"], [1254, 2, 1, "", "props"], [1255, 2, 1, "", "regenerate_models"], [1256, 2, 1, "", "run_model"], [1257, 2, 1, "", "set_label"], [1258, 2, 1, "", "setdefault"], [1259, 2, 1, "", "throats"], [1260, 2, 1, "", "to_indices"], [1261, 2, 1, "", "to_mask"], [1262, 2, 1, "", "update"], [1263, 2, 1, "", "values"]], "openpnm.phase": [[1265, 1, 1, "", "Air"], [1293, 1, 1, "", "BinaryGas"], [1327, 1, 1, "", "GasMixture"], [1361, 1, 1, "", "LiquidMixture"], [1395, 1, 1, "", "Mercury"], [1423, 1, 1, "", "Mixture"], [1456, 1, 1, "", "Phase"], [1484, 1, 1, "", "Species"], [1512, 1, 1, "", "StandardGas"], [1540, 1, 1, "", "StandardGasMixture"], [1574, 1, 1, "", "StandardLiquid"], [1602, 1, 1, "", "StandardLiquidMixture"], [1636, 1, 1, "", "Water"]], "openpnm.phase.Air": [[1266, 2, 1, "", "add_model"], [1267, 2, 1, "", "add_model_collection"], [1268, 2, 1, "", "clear"], [1269, 2, 1, "", "copy"], [1270, 2, 1, "", "filter_by_label"], [1271, 2, 1, "", "fromkeys"], [1272, 2, 1, "", "get"], [1273, 2, 1, "", "get_conduit_data"], [1274, 2, 1, "", "interpolate_data"], [1275, 2, 1, "", "items"], [1276, 2, 1, "", "keys"], [1277, 2, 1, "", "labels"], [1278, 2, 1, "", "num_pores"], [1279, 2, 1, "", "num_throats"], [1280, 2, 1, "", "pop"], [1281, 2, 1, "", "popitem"], [1282, 2, 1, "", "pores"], [1283, 2, 1, "", "props"], [1284, 2, 1, "", "regenerate_models"], [1285, 2, 1, "", "run_model"], [1286, 2, 1, "", "set_label"], [1287, 2, 1, "", "setdefault"], [1288, 2, 1, "", "throats"], [1289, 2, 1, "", "to_indices"], [1290, 2, 1, "", "to_mask"], [1291, 2, 1, "", "update"], [1292, 2, 1, "", "values"]], "openpnm.phase.BinaryGas": [[1294, 2, 1, "", "add_comp"], [1295, 2, 1, "", "add_model"], [1296, 2, 1, "", "add_model_collection"], [1297, 2, 1, "", "check_mixture_health"], [1298, 2, 1, "", "clear"], [1299, 2, 1, "", "copy"], [1300, 2, 1, "", "filter_by_label"], [1301, 2, 1, "", "fromkeys"], [1302, 2, 1, "", "get"], [1303, 2, 1, "", "get_comp_vals"], [1304, 2, 1, "", "get_conduit_data"], [1305, 2, 1, "", "get_mix_vals"], [1306, 2, 1, "", "interpolate_data"], [1307, 2, 1, "", "items"], [1308, 2, 1, "", "keys"], [1309, 2, 1, "", "labels"], [1310, 2, 1, "", "num_pores"], [1311, 2, 1, "", "num_throats"], [1312, 2, 1, "", "pop"], [1313, 2, 1, "", "popitem"], [1314, 2, 1, "", "pores"], [1315, 2, 1, "", "props"], [1316, 2, 1, "", "regenerate_models"], [1317, 2, 1, "", "remove_comp"], [1318, 2, 1, "", "run_model"], [1319, 2, 1, "", "set_label"], [1320, 2, 1, "", "setdefault"], [1321, 2, 1, "", "throats"], [1322, 2, 1, "", "to_indices"], [1323, 2, 1, "", "to_mask"], [1324, 2, 1, "", "update"], [1325, 2, 1, "", "values"], [1326, 2, 1, "", "y"]], "openpnm.phase.GasMixture": [[1328, 2, 1, "", "add_comp"], [1329, 2, 1, "", "add_model"], [1330, 2, 1, "", "add_model_collection"], [1331, 2, 1, "", "check_mixture_health"], [1332, 2, 1, "", "clear"], [1333, 2, 1, "", "copy"], [1334, 2, 1, "", "filter_by_label"], [1335, 2, 1, "", "fromkeys"], [1336, 2, 1, "", "get"], [1337, 2, 1, "", "get_comp_vals"], [1338, 2, 1, "", "get_conduit_data"], [1339, 2, 1, "", "get_mix_vals"], [1340, 2, 1, "", "interpolate_data"], [1341, 2, 1, "", "items"], [1342, 2, 1, "", "keys"], [1343, 2, 1, "", "labels"], [1344, 2, 1, "", "num_pores"], [1345, 2, 1, "", "num_throats"], [1346, 2, 1, "", "pop"], [1347, 2, 1, "", "popitem"], [1348, 2, 1, "", "pores"], [1349, 2, 1, "", "props"], [1350, 2, 1, "", "regenerate_models"], [1351, 2, 1, "", "remove_comp"], [1352, 2, 1, "", "run_model"], [1353, 2, 1, "", "set_label"], [1354, 2, 1, "", "setdefault"], [1355, 2, 1, "", "throats"], [1356, 2, 1, "", "to_indices"], [1357, 2, 1, "", "to_mask"], [1358, 2, 1, "", "update"], [1359, 2, 1, "", "values"], [1360, 2, 1, "", "y"]], "openpnm.phase.LiquidMixture": [[1362, 2, 1, "", "add_comp"], [1363, 2, 1, "", "add_model"], [1364, 2, 1, "", "add_model_collection"], [1365, 2, 1, "", "check_mixture_health"], [1366, 2, 1, "", "clear"], [1367, 2, 1, "", "copy"], [1368, 2, 1, "", "filter_by_label"], [1369, 2, 1, "", "fromkeys"], [1370, 2, 1, "", "get"], [1371, 2, 1, "", "get_comp_vals"], [1372, 2, 1, "", "get_conduit_data"], [1373, 2, 1, "", "get_mix_vals"], [1374, 2, 1, "", "interpolate_data"], [1375, 2, 1, "", "items"], [1376, 2, 1, "", "keys"], [1377, 2, 1, "", "labels"], [1378, 2, 1, "", "num_pores"], [1379, 2, 1, "", "num_throats"], [1380, 2, 1, "", "pop"], [1381, 2, 1, "", "popitem"], [1382, 2, 1, "", "pores"], [1383, 2, 1, "", "props"], [1384, 2, 1, "", "regenerate_models"], [1385, 2, 1, "", "remove_comp"], [1386, 2, 1, "", "run_model"], [1387, 2, 1, "", "set_label"], [1388, 2, 1, "", "setdefault"], [1389, 2, 1, "", "throats"], [1390, 2, 1, "", "to_indices"], [1391, 2, 1, "", "to_mask"], [1392, 2, 1, "", "update"], [1393, 2, 1, "", "values"], [1394, 2, 1, "", "x"]], "openpnm.phase.Mercury": [[1396, 2, 1, "", "add_model"], [1397, 2, 1, "", "add_model_collection"], [1398, 2, 1, "", "clear"], [1399, 2, 1, "", "copy"], [1400, 2, 1, "", "filter_by_label"], [1401, 2, 1, "", "fromkeys"], [1402, 2, 1, "", "get"], [1403, 2, 1, "", "get_conduit_data"], [1404, 2, 1, "", "interpolate_data"], [1405, 2, 1, "", "items"], [1406, 2, 1, "", "keys"], [1407, 2, 1, "", "labels"], [1408, 2, 1, "", "num_pores"], [1409, 2, 1, "", "num_throats"], [1410, 2, 1, "", "pop"], [1411, 2, 1, "", "popitem"], [1412, 2, 1, "", "pores"], [1413, 2, 1, "", "props"], [1414, 2, 1, "", "regenerate_models"], [1415, 2, 1, "", "run_model"], [1416, 2, 1, "", "set_label"], [1417, 2, 1, "", "setdefault"], [1418, 2, 1, "", "throats"], [1419, 2, 1, "", "to_indices"], [1420, 2, 1, "", "to_mask"], [1421, 2, 1, "", "update"], [1422, 2, 1, "", "values"]], "openpnm.phase.Mixture": [[1424, 2, 1, "", "add_comp"], [1425, 2, 1, "", "add_model"], [1426, 2, 1, "", "add_model_collection"], [1427, 2, 1, "", "check_mixture_health"], [1428, 2, 1, "", "clear"], [1429, 2, 1, "", "copy"], [1430, 2, 1, "", "filter_by_label"], [1431, 2, 1, "", "fromkeys"], [1432, 2, 1, "", "get"], [1433, 2, 1, "", "get_comp_vals"], [1434, 2, 1, "", "get_conduit_data"], [1435, 2, 1, "", "get_mix_vals"], [1436, 2, 1, "", "interpolate_data"], [1437, 2, 1, "", "items"], [1438, 2, 1, "", "keys"], [1439, 2, 1, "", "labels"], [1440, 2, 1, "", "num_pores"], [1441, 2, 1, "", "num_throats"], [1442, 2, 1, "", "pop"], [1443, 2, 1, "", "popitem"], [1444, 2, 1, "", "pores"], [1445, 2, 1, "", "props"], [1446, 2, 1, "", "regenerate_models"], [1447, 2, 1, "", "remove_comp"], [1448, 2, 1, "", "run_model"], [1449, 2, 1, "", "set_label"], [1450, 2, 1, "", "setdefault"], [1451, 2, 1, "", "throats"], [1452, 2, 1, "", "to_indices"], [1453, 2, 1, "", "to_mask"], [1454, 2, 1, "", "update"], [1455, 2, 1, "", "values"]], "openpnm.phase.Phase": [[1457, 2, 1, "", "add_model"], [1458, 2, 1, "", "add_model_collection"], [1459, 2, 1, "", "clear"], [1460, 2, 1, "", "copy"], [1461, 2, 1, "", "filter_by_label"], [1462, 2, 1, "", "fromkeys"], [1463, 2, 1, "", "get"], [1464, 2, 1, "", "get_conduit_data"], [1465, 2, 1, "", "interpolate_data"], [1466, 2, 1, "", "items"], [1467, 2, 1, "", "keys"], [1468, 2, 1, "", "labels"], [1469, 2, 1, "", "num_pores"], [1470, 2, 1, "", "num_throats"], [1471, 2, 1, "", "pop"], [1472, 2, 1, "", "popitem"], [1473, 2, 1, "", "pores"], [1474, 2, 1, "", "props"], [1475, 2, 1, "", "regenerate_models"], [1476, 2, 1, "", "run_model"], [1477, 2, 1, "", "set_label"], [1478, 2, 1, "", "setdefault"], [1479, 2, 1, "", "throats"], [1480, 2, 1, "", "to_indices"], [1481, 2, 1, "", "to_mask"], [1482, 2, 1, "", "update"], [1483, 2, 1, "", "values"]], "openpnm.phase.Species": [[1485, 2, 1, "", "add_model"], [1486, 2, 1, "", "add_model_collection"], [1487, 2, 1, "", "clear"], [1488, 2, 1, "", "copy"], [1489, 2, 1, "", "filter_by_label"], [1490, 2, 1, "", "fromkeys"], [1491, 2, 1, "", "get"], [1492, 2, 1, "", "get_conduit_data"], [1493, 2, 1, "", "interpolate_data"], [1494, 2, 1, "", "items"], [1495, 2, 1, "", "keys"], [1496, 2, 1, "", "labels"], [1497, 2, 1, "", "num_pores"], [1498, 2, 1, "", "num_throats"], [1499, 2, 1, "", "pop"], [1500, 2, 1, "", "popitem"], [1501, 2, 1, "", "pores"], [1502, 2, 1, "", "props"], [1503, 2, 1, "", "regenerate_models"], [1504, 2, 1, "", "run_model"], [1505, 2, 1, "", "set_label"], [1506, 2, 1, "", "setdefault"], [1507, 2, 1, "", "throats"], [1508, 2, 1, "", "to_indices"], [1509, 2, 1, "", "to_mask"], [1510, 2, 1, "", "update"], [1511, 2, 1, "", "values"]], "openpnm.phase.StandardGas": [[1513, 2, 1, "", "add_model"], [1514, 2, 1, "", "add_model_collection"], [1515, 2, 1, "", "clear"], [1516, 2, 1, "", "copy"], [1517, 2, 1, "", "filter_by_label"], [1518, 2, 1, "", "fromkeys"], [1519, 2, 1, "", "get"], [1520, 2, 1, "", "get_conduit_data"], [1521, 2, 1, "", "interpolate_data"], [1522, 2, 1, "", "items"], [1523, 2, 1, "", "keys"], [1524, 2, 1, "", "labels"], [1525, 2, 1, "", "num_pores"], [1526, 2, 1, "", "num_throats"], [1527, 2, 1, "", "pop"], [1528, 2, 1, "", "popitem"], [1529, 2, 1, "", "pores"], [1530, 2, 1, "", "props"], [1531, 2, 1, "", "regenerate_models"], [1532, 2, 1, "", "run_model"], [1533, 2, 1, "", "set_label"], [1534, 2, 1, "", "setdefault"], [1535, 2, 1, "", "throats"], [1536, 2, 1, "", "to_indices"], [1537, 2, 1, "", "to_mask"], [1538, 2, 1, "", "update"], [1539, 2, 1, "", "values"]], "openpnm.phase.StandardGasMixture": [[1541, 2, 1, "", "add_comp"], [1542, 2, 1, "", "add_model"], [1543, 2, 1, "", "add_model_collection"], [1544, 2, 1, "", "check_mixture_health"], [1545, 2, 1, "", "clear"], [1546, 2, 1, "", "copy"], [1547, 2, 1, "", "filter_by_label"], [1548, 2, 1, "", "fromkeys"], [1549, 2, 1, "", "get"], [1550, 2, 1, "", "get_comp_vals"], [1551, 2, 1, "", "get_conduit_data"], [1552, 2, 1, "", "get_mix_vals"], [1553, 2, 1, "", "interpolate_data"], [1554, 2, 1, "", "items"], [1555, 2, 1, "", "keys"], [1556, 2, 1, "", "labels"], [1557, 2, 1, "", "num_pores"], [1558, 2, 1, "", "num_throats"], [1559, 2, 1, "", "pop"], [1560, 2, 1, "", "popitem"], [1561, 2, 1, "", "pores"], [1562, 2, 1, "", "props"], [1563, 2, 1, "", "regenerate_models"], [1564, 2, 1, "", "remove_comp"], [1565, 2, 1, "", "run_model"], [1566, 2, 1, "", "set_label"], [1567, 2, 1, "", "setdefault"], [1568, 2, 1, "", "throats"], [1569, 2, 1, "", "to_indices"], [1570, 2, 1, "", "to_mask"], [1571, 2, 1, "", "update"], [1572, 2, 1, "", "values"], [1573, 2, 1, "", "y"]], "openpnm.phase.StandardLiquid": [[1575, 2, 1, "", "add_model"], [1576, 2, 1, "", "add_model_collection"], [1577, 2, 1, "", "clear"], [1578, 2, 1, "", "copy"], [1579, 2, 1, "", "filter_by_label"], [1580, 2, 1, "", "fromkeys"], [1581, 2, 1, "", "get"], [1582, 2, 1, "", "get_conduit_data"], [1583, 2, 1, "", "interpolate_data"], [1584, 2, 1, "", "items"], [1585, 2, 1, "", "keys"], [1586, 2, 1, "", "labels"], [1587, 2, 1, "", "num_pores"], [1588, 2, 1, "", "num_throats"], [1589, 2, 1, "", "pop"], [1590, 2, 1, "", "popitem"], [1591, 2, 1, "", "pores"], [1592, 2, 1, "", "props"], [1593, 2, 1, "", "regenerate_models"], [1594, 2, 1, "", "run_model"], [1595, 2, 1, "", "set_label"], [1596, 2, 1, "", "setdefault"], [1597, 2, 1, "", "throats"], [1598, 2, 1, "", "to_indices"], [1599, 2, 1, "", "to_mask"], [1600, 2, 1, "", "update"], [1601, 2, 1, "", "values"]], "openpnm.phase.StandardLiquidMixture": [[1603, 2, 1, "", "add_comp"], [1604, 2, 1, "", "add_model"], [1605, 2, 1, "", "add_model_collection"], [1606, 2, 1, "", "check_mixture_health"], [1607, 2, 1, "", "clear"], [1608, 2, 1, "", "copy"], [1609, 2, 1, "", "filter_by_label"], [1610, 2, 1, "", "fromkeys"], [1611, 2, 1, "", "get"], [1612, 2, 1, "", "get_comp_vals"], [1613, 2, 1, "", "get_conduit_data"], [1614, 2, 1, "", "get_mix_vals"], [1615, 2, 1, "", "interpolate_data"], [1616, 2, 1, "", "items"], [1617, 2, 1, "", "keys"], [1618, 2, 1, "", "labels"], [1619, 2, 1, "", "num_pores"], [1620, 2, 1, "", "num_throats"], [1621, 2, 1, "", "pop"], [1622, 2, 1, "", "popitem"], [1623, 2, 1, "", "pores"], [1624, 2, 1, "", "props"], [1625, 2, 1, "", "regenerate_models"], [1626, 2, 1, "", "remove_comp"], [1627, 2, 1, "", "run_model"], [1628, 2, 1, "", "set_label"], [1629, 2, 1, "", "setdefault"], [1630, 2, 1, "", "throats"], [1631, 2, 1, "", "to_indices"], [1632, 2, 1, "", "to_mask"], [1633, 2, 1, "", "update"], [1634, 2, 1, "", "values"], [1635, 2, 1, "", "x"]], "openpnm.phase.Water": [[1637, 2, 1, "", "add_model"], [1638, 2, 1, "", "add_model_collection"], [1639, 2, 1, "", "clear"], [1640, 2, 1, "", "copy"], [1641, 2, 1, "", "filter_by_label"], [1642, 2, 1, "", "fromkeys"], [1643, 2, 1, "", "get"], [1644, 2, 1, "", "get_conduit_data"], [1645, 2, 1, "", "interpolate_data"], [1646, 2, 1, "", "items"], [1647, 2, 1, "", "keys"], [1648, 2, 1, "", "labels"], [1649, 2, 1, "", "num_pores"], [1650, 2, 1, "", "num_throats"], [1651, 2, 1, "", "pop"], [1652, 2, 1, "", "popitem"], [1653, 2, 1, "", "pores"], [1654, 2, 1, "", "props"], [1655, 2, 1, "", "regenerate_models"], [1656, 2, 1, "", "run_model"], [1657, 2, 1, "", "set_label"], [1658, 2, 1, "", "setdefault"], [1659, 2, 1, "", "throats"], [1660, 2, 1, "", "to_indices"], [1661, 2, 1, "", "to_mask"], [1662, 2, 1, "", "update"], [1663, 2, 1, "", "values"]], "openpnm.solvers": [[1665, 1, 1, "", "BaseSolver"], [1667, 1, 1, "", "DirectSolver"], [1669, 1, 1, "", "IterativeSolver"], [1671, 1, 1, "", "PETScLinearSolver"], [1673, 1, 1, "", "PardisoSpsolve"], [1675, 1, 1, "", "ScipyCG"], [1677, 1, 1, "", "ScipySpsolve"]], "openpnm.solvers.BaseSolver": [[1666, 2, 1, "", "solve"]], "openpnm.solvers.DirectSolver": [[1668, 2, 1, "", "solve"]], "openpnm.solvers.IterativeSolver": [[1670, 2, 1, "", "solve"]], "openpnm.solvers.PETScLinearSolver": [[1672, 2, 1, "", "solve"]], "openpnm.solvers.PardisoSpsolve": [[1674, 2, 1, "", "solve"]], "openpnm.solvers.ScipyCG": [[1676, 2, 1, "", "solve"]], "openpnm.solvers.ScipySpsolve": [[1678, 2, 1, "", "solve"]], "openpnm.topotools": [[1680, 3, 1, "", "add_boundary_pores"], [1681, 3, 1, "", "add_reservoir_pore"], [1682, 3, 1, "", "bond_percolation"], [1683, 3, 1, "", "clone_pores"], [1684, 3, 1, "", "connect_pores"], [1685, 3, 1, "", "conns_to_am"], [1686, 3, 1, "", "dimensionality"], [1687, 3, 1, "", "drop_sites"], [1688, 3, 1, "", "extend"], [1689, 3, 1, "", "filter_pores_by_z"], [1690, 3, 1, "", "find_clusters"], [1691, 3, 1, "", "find_connected_sites"], [1692, 3, 1, "", "find_connecting_bonds"], [1693, 3, 1, "", "find_interface_throats"], [1694, 3, 1, "", "find_neighbor_bonds"], [1695, 3, 1, "", "find_neighbor_sites"], [1696, 3, 1, "", "find_path"], [1697, 3, 1, "", "find_pore_to_pore_distance"], [1698, 3, 1, "", "find_surface_pores"], [1699, 3, 1, "", "generate_base_points"], [1700, 3, 1, "", "get_domain_area"], [1701, 3, 1, "", "get_domain_length"], [1702, 3, 1, "", "get_shape"], [1703, 3, 1, "", "get_spacing"], [1704, 3, 1, "", "hull_centroid"], [1705, 3, 1, "", "is_fully_connected"], [1706, 3, 1, "", "iscoplanar"], [1707, 3, 1, "", "isoutside"], [1708, 3, 1, "", "ispercolating"], [1709, 3, 1, "", "issymmetric"], [1710, 3, 1, "", "istriangular"], [1711, 3, 1, "", "istril"], [1712, 3, 1, "", "istriu"], [1713, 3, 1, "", "label_faces"], [1714, 3, 1, "", "merge_networks"], [1715, 3, 1, "", "merge_pores"], [1716, 3, 1, "", "reduce_coordination"], [1717, 3, 1, "", "reflect_base_points"], [1718, 3, 1, "", "remove_isolated_clusters"], [1719, 3, 1, "", "rotate_coords"], [1720, 3, 1, "", "shear_coords"], [1721, 3, 1, "", "site_percolation"], [1722, 3, 1, "", "stitch"], [1723, 3, 1, "", "stitch_pores"], [1724, 3, 1, "", "template_cylinder_annulus"], [1725, 3, 1, "", "template_sphere_shell"], [1726, 3, 1, "", "tri_to_am"], [1727, 3, 1, "", "trim"], [1728, 3, 1, "", "vor_to_am"]], "openpnm.utils": [[1730, 1, 1, "", "Docorator"], [1756, 1, 1, "", "HealthDict"], [1768, 1, 1, "", "NestedDict"], [1782, 1, 1, "", "PrintableDict"], [1794, 1, 1, "", "PrintableList"], [1806, 1, 1, "", "Project"], [1809, 1, 1, "", "SettingsAttr"], [1810, 1, 1, "", "SimpleList"], [1812, 1, 1, "", "TypedList"], [1824, 1, 1, "", "TypedMixin"], [1825, 1, 1, "", "TypedSet"], [1843, 1, 1, "", "Workspace"], [1862, 3, 1, "", "check_data_health"], [1863, 3, 1, "", "check_network_health"], [1864, 3, 1, "", "dict_to_struct"], [1865, 3, 1, "", "flat_list"], [1866, 3, 1, "", "get_mixture_model_args"], [1867, 3, 1, "", "get_printable_labels"], [1868, 3, 1, "", "get_printable_props"], [1869, 3, 1, "", "ignore_warnings"], [1870, 3, 1, "", "is_symmetric"], [1871, 3, 1, "", "is_transient"], [1872, 3, 1, "", "is_valid_propname"], [1873, 3, 1, "", "methods_to_table"], [1874, 3, 1, "", "models_to_table"], [1875, 3, 1, "", "sanitize_dict"], [1876, 3, 1, "", "struct_to_dict"]], "openpnm.utils.Docorator": [[1731, 2, 1, "", "__call__"], [1732, 2, 1, "", "dedent"], [1733, 2, 1, "", "dedents"], [1734, 2, 1, "", "delete_kwargs"], [1735, 2, 1, "", "delete_kwargs_s"], [1736, 2, 1, "", "delete_params"], [1737, 2, 1, "", "delete_params_s"], [1738, 2, 1, "", "delete_types"], [1739, 2, 1, "", "delete_types_s"], [1740, 2, 1, "", "get_docstring"], [1741, 2, 1, "", "get_extended_summary"], [1742, 2, 1, "", "get_extended_summaryf"], [1743, 2, 1, "", "get_full_description"], [1744, 2, 1, "", "get_full_descriptionf"], [1745, 2, 1, "", "get_sections"], [1746, 2, 1, "", "get_sectionsf"], [1747, 2, 1, "", "get_summary"], [1748, 2, 1, "", "get_summaryf"], [1749, 2, 1, "", "keep_params"], [1750, 2, 1, "", "keep_params_s"], [1751, 2, 1, "", "keep_types"], [1752, 2, 1, "", "keep_types_s"], [1753, 2, 1, "", "save_docstring"], [1754, 2, 1, "", "with_indent"], [1755, 2, 1, "", "with_indents"]], "openpnm.utils.HealthDict": [[1757, 2, 1, "", "clear"], [1758, 2, 1, "", "copy"], [1759, 2, 1, "", "fromkeys"], [1760, 2, 1, "", "get"], [1761, 2, 1, "", "items"], [1762, 2, 1, "", "keys"], [1763, 2, 1, "", "pop"], [1764, 2, 1, "", "popitem"], [1765, 2, 1, "", "setdefault"], [1766, 2, 1, "", "update"], [1767, 2, 1, "", "values"]], "openpnm.utils.NestedDict": [[1769, 2, 1, "", "clear"], [1770, 2, 1, "", "copy"], [1771, 2, 1, "", "fromkeys"], [1772, 2, 1, "", "get"], [1773, 2, 1, "", "items"], [1774, 2, 1, "", "keys"], [1775, 2, 1, "", "pop"], [1776, 2, 1, "", "popitem"], [1777, 2, 1, "", "setdefault"], [1778, 2, 1, "", "to_dict"], [1779, 2, 1, "", "unravel"], [1780, 2, 1, "", "update"], [1781, 2, 1, "", "values"]], "openpnm.utils.PrintableDict": [[1783, 2, 1, "", "clear"], [1784, 2, 1, "", "copy"], [1785, 2, 1, "", "fromkeys"], [1786, 2, 1, "", "get"], [1787, 2, 1, "", "items"], [1788, 2, 1, "", "keys"], [1789, 2, 1, "", "pop"], [1790, 2, 1, "", "popitem"], [1791, 2, 1, "", "setdefault"], [1792, 2, 1, "", "update"], [1793, 2, 1, "", "values"]], "openpnm.utils.PrintableList": [[1795, 2, 1, "", "append"], [1796, 2, 1, "", "clear"], [1797, 2, 1, "", "copy"], [1798, 2, 1, "", "count"], [1799, 2, 1, "", "extend"], [1800, 2, 1, "", "index"], [1801, 2, 1, "", "insert"], [1802, 2, 1, "", "pop"], [1803, 2, 1, "", "remove"], [1804, 2, 1, "", "reverse"], [1805, 2, 1, "", "sort"]], "openpnm.utils.Project": [[1807, 2, 1, "", "append"], [1808, 2, 1, "", "copy"]], "openpnm.utils.SimpleList": [[1811, 2, 1, "", "append"]], "openpnm.utils.TypedList": [[1813, 2, 1, "", "append"], [1814, 2, 1, "", "clear"], [1815, 2, 1, "", "copy"], [1816, 2, 1, "", "count"], [1817, 2, 1, "", "extend"], [1818, 2, 1, "", "index"], [1819, 2, 1, "", "insert"], [1820, 2, 1, "", "pop"], [1821, 2, 1, "", "remove"], [1822, 2, 1, "", "reverse"], [1823, 2, 1, "", "sort"]], "openpnm.utils.TypedSet": [[1826, 2, 1, "", "add"], [1827, 2, 1, "", "clear"], [1828, 2, 1, "", "copy"], [1829, 2, 1, "", "difference"], [1830, 2, 1, "", "difference_update"], [1831, 2, 1, "", "discard"], [1832, 2, 1, "", "intersection"], [1833, 2, 1, "", "intersection_update"], [1834, 2, 1, "", "isdisjoint"], [1835, 2, 1, "", "issubset"], [1836, 2, 1, "", "issuperset"], [1837, 2, 1, "", "pop"], [1838, 2, 1, "", "remove"], [1839, 2, 1, "", "symmetric_difference"], [1840, 2, 1, "", "symmetric_difference_update"], [1841, 2, 1, "", "union"], [1842, 2, 1, "", "update"]], "openpnm.utils.Workspace": [[1844, 2, 1, "", "clear"], [1845, 2, 1, "", "close_project"], [1846, 2, 1, "", "copy"], [1847, 2, 1, "", "copy_project"], [1848, 2, 1, "", "fromkeys"], [1849, 2, 1, "", "get"], [1850, 2, 1, "", "items"], [1851, 2, 1, "", "keys"], [1852, 2, 1, "", "load_project"], [1853, 2, 1, "", "load_workspace"], [1854, 2, 1, "", "new_project"], [1855, 2, 1, "", "pop"], [1856, 2, 1, "", "popitem"], [1857, 2, 1, "", "save_project"], [1858, 2, 1, "", "save_workspace"], [1859, 2, 1, "", "setdefault"], [1860, 2, 1, "", "update"], [1861, 2, 1, "", "values"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"applic": 0, "exampl": [1, 14], "refer": [2, 1877], "10": 3, "step": 3, "learn": 3, "openpnm": [3, 6, 21, 22, 27, 34, 524], "basic": [4, 31, 658], "usag": [4, 17], "problem": 4, "setup": 4, "visual": [4, 8, 9, 25, 33], "calcul": [4, 5, 8, 9, 11, 12, 13, 28, 31], "permeabl": [4, 5, 13], "adjust": [4, 6], "pore": [4, 6, 7, 11, 15, 22, 26, 27, 28, 29, 31, 34, 55, 87, 115, 147, 180, 213, 245, 278, 311, 344, 377, 411, 444, 477, 510, 559, 575, 640, 705, 711, 714, 722, 727, 943, 982, 1020, 1058, 1099, 1138, 1177, 1215, 1253, 1282, 1314, 1348, 1382, 1412, 1444, 1473, 1501, 1529, 1561, 1591, 1623, 1653], "size": [4, 6, 22, 28, 675, 690, 714, 766], "distribut": [4, 6, 28], "predict": [5, 7, 9, 11, 13], "absolut": [5, 20], "creat": [5, 9, 11, 12, 13, 19, 29, 30, 31], "random": [5, 11, 25, 712, 720, 765, 771, 804], "cubic": [5, 11, 25, 954], "network": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 22, 25, 26, 27, 34, 650, 808, 914, 1188, 1679], "phase": [5, 7, 8, 9, 10, 12, 13, 30, 31, 651, 824, 1264, 1456], "object": [5, 30, 31], "appli": [5, 7, 9, 12, 13, 19], "stoke": [5, 7], "flow": [5, 7], "geometri": [6, 8, 10, 642, 660], "throat": [6, 11, 22, 26, 27, 28, 29, 66, 92, 124, 157, 190, 222, 255, 288, 321, 354, 388, 421, 454, 487, 519, 565, 577, 733, 737, 739, 745, 759, 763, 766, 773, 778, 780, 949, 988, 1026, 1064, 1105, 1144, 1183, 1221, 1259, 1288, 1321, 1355, 1389, 1418, 1451, 1479, 1507, 1535, 1568, 1597, 1630, 1659], "us": [6, 20, 21, 27, 28, 29, 30, 32], "scipi": [6, 28], "stat": [6, 28], "class": [6, 30, 524, 1729], "directli": 6, "pre": 6, "defin": [6, 7, 12, 13, 29, 31], "model": [6, 15, 22, 28, 29, 30, 31, 34, 640, 650, 661, 675, 690, 705, 711, 714, 722, 727, 733, 737, 739, 745, 759, 763, 766, 773, 778, 780], "dispers": 7, "coeffici": [7, 19], "gener": [7, 25], "effect": [7, 8, 730], "volum": [7, 11, 727, 780], "perform": [7, 8, 10], "transient": [7, 23, 612], "advect": 7, "diffus": [7, 8, 9, 12, 22, 675, 833], "elut": 7, "curv": [7, 10, 12], "solv": [7, 19, 615, 1666, 1668, 1670, 1672, 1674, 1676, 1678], "find": [8, 27], "tortuos": 8, "physic": [8, 10, 657, 875], "fickian": [8, 9], "result": [8, 9], "format": [9, 27], "factor": [9, 22, 675, 690, 733], "simul": [10, 31, 32, 612, 1664], "mercuri": [10, 655, 1395], "intrus": 10, "porosimetri": 10, "add": [10, 1826], "poros": 11, "void": 11, "bulk": 11, "discuss": 11, "issu": 11, "domain": [11, 29, 542], "overlap": 11, "extract": 11, "obtain": 12, "rel": [12, 13], "ordinari": 12, "percol": [12, 13, 32], "satur": 12, "rate": [12, 19, 57, 149, 182, 247, 280, 313, 346, 379, 413, 446, 479, 512], "function": [12, 13, 21, 24, 616, 1679, 1729], "multiphas": [12, 13, 897], "conduct": [12, 13, 22, 31], "invas": [13, 32], "occup": 13, "contibut": 14, "scale": [15, 28, 31, 640, 805], "set": [16, 30], "attribut": [16, 30], "machineri": 16, "The": [17, 26, 27, 30, 35, 524], "workspac": [17, 1843], "project": [17, 1806], "i": [17, 34], "singleton": 17, "One": 17, "per": 17, "avail": 18, "matrix": [18, 19, 27, 1664], "solver": [18, 1664], "steadi": [19, 1664], "state": [19, 1664], "transport": [19, 21, 22, 23, 31, 492], "valu": [19, 26, 30, 70, 96, 128, 161, 194, 226, 259, 292, 325, 358, 392, 425, 458, 491, 523, 541, 569, 590, 605, 953, 992, 1030, 1068, 1109, 1148, 1187, 1225, 1263, 1292, 1325, 1359, 1393, 1422, 1455, 1483, 1511, 1539, 1572, 1601, 1634, 1663, 1767, 1781, 1793, 1861], "boundari": [19, 31], "condit": [19, 31], "system": 19, "equat": 19, "spars": [19, 26, 27], "matric": [19, 26], "explan": 20, "unit": 20, "pressur": 20, "v": [20, 22, 26], "gaug": 20, "convers": 20, "packag": 20, "challeng": 20, "reactiv": 21, "sourc": 21, "term": 21, "how": [21, 34], "work": 21, "singl": [22, 31], "conduit": [22, 26, 661], "shape": [22, 29, 733], "built": [22, 30], "deriv": 22, "arbitrari": 22, "hydraul": [22, 690], "element": 22, "numer": [24, 26], "python": [24, 34], "primer": 24, "list": 24, "flexibl": 24, "slow": 24, "numpi": [24, 26], "ndarrai": 24, "optim": 24, "vector": [24, 26, 778], "method": [24, 27, 29, 31], "versu": 24, "dictionari": [24, 26], "hold": 24, "thing": 24, "togeth": 24, "subclass": 24, "dict": 24, "quick": 25, "cubictempl": [25, 993], "other": [25, 27], "lattic": 25, "delaunai": [25, 1031], "voronoi": [25, 1226], "tessel": 25, "import": [25, 616], "storag": 26, "data": [26, 29, 616], "topologi": [26, 1679], "spreadsheet": 26, "analogi": 26, "rule": 26, "maintain": 26, "integr": [26, 612, 613], "all": 26, "ar": 26, "convert": 26, "arrai": 26, "kei": [26, 49, 81, 108, 141, 174, 206, 239, 272, 305, 338, 371, 405, 438, 471, 504, 533, 553, 585, 600, 936, 975, 1013, 1051, 1092, 1131, 1170, 1208, 1246, 1276, 1308, 1342, 1376, 1406, 1438, 1467, 1495, 1523, 1555, 1585, 1617, 1647, 1762, 1774, 1788, 1851], "must": 26, "start": 26, "With": 26, "ani": 26, "scalar": 26, "expand": 26, "full": [26, 29], "length": [26, 28, 661, 745], "nest": 26, "name": 26, "allow": 26, "boolean": [26, 29], "treat": 26, "label": [26, 29, 50, 82, 109, 142, 175, 207, 240, 273, 306, 339, 372, 406, 439, 472, 505, 554, 572, 937, 976, 1014, 1052, 1093, 1132, 1171, 1209, 1247, 1277, 1309, 1343, 1377, 1407, 1439, 1468, 1496, 1524, 1556, 1586, 1618, 1648], "properti": [26, 28, 30], "lead": 26, "underscor": 26, "hidden": 26, "param": 26, "prefix": 26, "repres": 26, "adjac": [26, 27], "dens": 26, "represent": 27, "queri": 27, "manipul": [27, 1679], "coo": 27, "incid": 27, "neighor": 27, "neighbor": 27, "connect": 27, "remov": [27, 30, 1803, 1821, 1838], "ad": [27, 28, 30], "assign": [28, 30, 31], "geometr": 28, "manual": [28, 31, 32], "from": 28, "comput": 28, "surfac": [28, 722, 773], "area": [28, 705, 722, 739, 773], "librari": 28, "predefin": [28, 29], "collect": [28, 612, 616, 640, 641, 650, 1664, 1679], "custom": [28, 29, 30], "overwrit": 28, "them": 28, "Their": 28, "argument": [28, 29], "introduct": 28, "depend": 28, "handler": 28, "mode": 29, "mask": 29, "set_label": [29, 60, 90, 121, 152, 185, 219, 250, 283, 316, 349, 382, 416, 449, 482, 515, 563, 576, 947, 986, 1024, 1062, 1103, 1142, 1181, 1219, 1257, 1286, 1319, 1353, 1387, 1416, 1449, 1477, 1505, 1533, 1566, 1595, 1628, 1657], "sytax": 29, "read": 29, "write": [29, 30], "subdomain": 29, "chang": 29, "locat": 29, "mix": 29, "mani": 29, "differ": [29, 791, 1829], "part": 30, "1": 30, "direct": 30, "constant": [30, 790], "water": [30, 656, 1636], "specif": 30, "your": 30, "own": 30, "common": 30, "fluid": 30, "2": 30, "speci": [30, 1484], "mixtur": [30, 845, 1423], "pure": 30, "ga": [30, 653], "liquid": [30, 654], "get": [30, 45, 77, 104, 137, 170, 202, 235, 268, 301, 334, 367, 401, 434, 467, 500, 529, 549, 583, 598, 930, 969, 1007, 1045, 1086, 1125, 1164, 1202, 1240, 1272, 1302, 1336, 1370, 1402, 1432, 1463, 1491, 1519, 1549, 1581, 1611, 1643, 1760, 1772, 1786, 1849], "composit": 30, "explor": 30, "featur": 30, "info": 30, "compon": 30, "mole": 30, "fraction": [30, 792], "get_comp_v": [30, 1303, 1337, 1371, 1433, 1550, 1612], "check": 30, "consist": 30, "check_mixture_health": [30, 1297, 1331, 1365, 1427, 1544, 1606], "retriev": 30, "wildcard": 30, "syntax": 30, "viscos": [31, 868], "algorithm": [31, 32, 36, 71], "rigor": 31, "drainag": [32, 97], "implement": 32, "draing": 32, "process": 32, "invasionpercol": [32, 195], "option": 33, "spyder": 33, "interact": 33, "plot": 33, "jupyt": 33, "notebook": 33, "paraview": 33, "framework": 34, "what": 34, "star": 34, "To": 34, "cite": 34, "citat": 34, "instal": 35, "dev": 35, "version": 35, "easi": 35, "wai": 35, "hard": 35, "correct": 35, "where": 35, "": 35, "my": 35, "conda": 35, "prompt": 35, "window": 35, "mac": 35, "linux": 35, "advectiondiffus": 37, "clear": [38, 72, 99, 130, 163, 197, 228, 261, 294, 327, 360, 394, 427, 460, 493, 526, 545, 580, 592, 919, 958, 996, 1034, 1073, 1114, 1153, 1191, 1229, 1268, 1298, 1332, 1366, 1398, 1428, 1459, 1487, 1515, 1545, 1577, 1607, 1639, 1757, 1769, 1783, 1796, 1814, 1827, 1844], "clear_bc": [39, 73, 100, 131, 164, 198, 229, 262, 295, 328, 361, 395, 428, 461, 494], "clear_rate_bc": [40, 132, 165, 230, 263, 296, 329, 362, 396, 429, 462, 495], "clear_value_bc": [41, 133, 166, 231, 264, 297, 330, 363, 397, 430, 463, 496], "copi": [42, 74, 101, 134, 167, 199, 232, 265, 298, 331, 364, 398, 431, 464, 497, 527, 546, 581, 593, 920, 959, 997, 1035, 1074, 1115, 1154, 1192, 1230, 1269, 1299, 1333, 1367, 1399, 1429, 1460, 1488, 1516, 1546, 1578, 1608, 1640, 1758, 1770, 1784, 1797, 1808, 1815, 1828, 1846], "filter_by_label": [43, 75, 102, 135, 168, 200, 233, 266, 299, 332, 365, 399, 432, 465, 498, 547, 571, 923, 962, 1000, 1038, 1077, 1118, 1157, 1195, 1233, 1270, 1300, 1334, 1368, 1400, 1430, 1461, 1489, 1517, 1547, 1579, 1609, 1641], "fromkei": [44, 76, 103, 136, 169, 201, 234, 267, 300, 333, 366, 400, 433, 466, 499, 528, 548, 582, 597, 929, 968, 1006, 1044, 1085, 1124, 1163, 1201, 1239, 1271, 1301, 1335, 1369, 1401, 1431, 1462, 1490, 1518, 1548, 1580, 1610, 1642, 1759, 1771, 1785, 1848], "get_conduit_data": [46, 78, 105, 138, 171, 203, 236, 269, 302, 335, 368, 402, 435, 468, 501, 530, 550, 932, 971, 1009, 1047, 1088, 1127, 1166, 1204, 1242, 1273, 1304, 1338, 1372, 1403, 1434, 1464, 1492, 1520, 1551, 1582, 1613, 1644], "interpolate_data": [47, 79, 106, 139, 172, 204, 237, 270, 303, 336, 369, 403, 436, 469, 502, 531, 551, 934, 973, 1011, 1049, 1090, 1129, 1168, 1206, 1244, 1274, 1306, 1340, 1374, 1404, 1436, 1465, 1493, 1521, 1553, 1583, 1615, 1645], "item": [48, 80, 107, 140, 173, 205, 238, 271, 304, 337, 370, 404, 437, 470, 503, 532, 552, 584, 599, 935, 974, 1012, 1050, 1091, 1130, 1169, 1207, 1245, 1275, 1307, 1341, 1375, 1405, 1437, 1466, 1494, 1522, 1554, 1584, 1616, 1646, 1761, 1773, 1787, 1850], "num_por": [51, 83, 110, 143, 176, 208, 241, 274, 307, 340, 373, 407, 440, 473, 506, 555, 573, 939, 978, 1016, 1054, 1095, 1134, 1173, 1211, 1249, 1278, 1310, 1344, 1378, 1408, 1440, 1469, 1497, 1525, 1557, 1587, 1619, 1649], "num_throat": [52, 84, 111, 144, 177, 209, 242, 275, 308, 341, 374, 408, 441, 474, 507, 556, 574, 940, 979, 1017, 1055, 1096, 1135, 1174, 1212, 1250, 1279, 1311, 1345, 1379, 1409, 1441, 1470, 1498, 1526, 1558, 1588, 1620, 1650], "pop": [53, 85, 113, 145, 178, 211, 243, 276, 309, 342, 375, 409, 442, 475, 508, 534, 557, 586, 601, 941, 980, 1018, 1056, 1097, 1136, 1175, 1213, 1251, 1280, 1312, 1346, 1380, 1410, 1442, 1471, 1499, 1527, 1559, 1589, 1621, 1651, 1763, 1775, 1789, 1802, 1820, 1837, 1855], "popitem": [54, 86, 114, 146, 179, 212, 244, 277, 310, 343, 376, 410, 443, 476, 509, 535, 558, 587, 602, 942, 981, 1019, 1057, 1098, 1137, 1176, 1214, 1252, 1281, 1313, 1347, 1381, 1411, 1443, 1472, 1500, 1528, 1560, 1590, 1622, 1652, 1764, 1776, 1790, 1856], "prop": [56, 88, 116, 148, 181, 214, 246, 279, 312, 345, 378, 412, 445, 478, 511, 536, 560, 944, 983, 1021, 1059, 1100, 1139, 1178, 1216, 1254, 1283, 1315, 1349, 1383, 1413, 1445, 1474, 1502, 1530, 1562, 1592, 1624, 1654], "run": [58, 118, 150, 183, 216, 248, 281, 314, 347, 380, 414, 447, 480, 513], "set_bc": [59, 89, 119, 151, 184, 217, 249, 282, 315, 348, 381, 415, 448, 481, 514], "set_outflow_bc": [61, 383], "set_rate_bc": [62, 153, 186, 251, 284, 317, 350, 384, 417, 450, 483, 516], "set_sourc": [63, 154, 187, 252, 285, 318, 351, 385, 418, 451, 484], "set_value_bc": [64, 155, 188, 253, 286, 319, 352, 386, 419, 452, 485, 517], "setdefault": [65, 91, 123, 156, 189, 221, 254, 287, 320, 353, 387, 420, 453, 486, 518, 537, 564, 588, 603, 948, 987, 1025, 1063, 1104, 1143, 1182, 1220, 1258, 1287, 1320, 1354, 1388, 1417, 1450, 1478, 1506, 1534, 1567, 1596, 1629, 1658, 1765, 1777, 1791, 1859], "to_indic": [67, 93, 125, 158, 191, 223, 256, 289, 322, 355, 389, 422, 455, 488, 520, 538, 566, 950, 989, 1027, 1065, 1106, 1145, 1184, 1222, 1260, 1289, 1322, 1356, 1390, 1419, 1452, 1480, 1508, 1536, 1569, 1598, 1631, 1660], "to_mask": [68, 94, 126, 159, 192, 224, 257, 290, 323, 356, 390, 423, 456, 489, 521, 539, 567, 951, 990, 1028, 1066, 1107, 1146, 1185, 1223, 1261, 1290, 1323, 1357, 1391, 1420, 1453, 1481, 1509, 1537, 1570, 1599, 1632, 1661], "updat": [69, 95, 127, 160, 193, 225, 258, 291, 324, 357, 391, 424, 457, 490, 522, 540, 568, 589, 604, 952, 991, 1029, 1067, 1108, 1147, 1186, 1224, 1262, 1291, 1324, 1358, 1392, 1421, 1454, 1482, 1510, 1538, 1571, 1600, 1633, 1662, 1766, 1780, 1792, 1842, 1860], "apply_trap": [98, 196], "pc_curv": [112, 210], "reset": [117, 215], "set_inlet_bc": [120, 218], "set_outlet_bc": [122, 220], "fickiandiffus": 129, "fourierconduct": 162, "ionicconduct": 227, "ohmicconduct": 260, "reactivetransport": 293, "stokesflow": 326, "transientadvectiondiffus": 359, "transientfickiandiffus": 393, "transientionicconduct": 426, "transientreactivetransport": 459, "core": 524, "main": 524, "base": 524, "modelsmixin": 524, "base2": 525, "add_model": [543, 607, 917, 956, 994, 1032, 1071, 1112, 1151, 1189, 1227, 1266, 1295, 1329, 1363, 1396, 1425, 1457, 1485, 1513, 1542, 1575, 1604, 1637], "add_model_collect": [544, 608, 918, 957, 995, 1033, 1072, 1113, 1152, 1190, 1228, 1267, 1296, 1330, 1364, 1397, 1426, 1458, 1486, 1514, 1543, 1576, 1605, 1638], "regenerate_model": [561, 609, 945, 984, 1022, 1060, 1101, 1140, 1179, 1217, 1255, 1284, 1316, 1350, 1384, 1414, 1446, 1475, 1503, 1531, 1563, 1593, 1625, 1655], "run_model": [562, 610, 946, 985, 1023, 1061, 1102, 1141, 1180, 1218, 1256, 1285, 1318, 1352, 1386, 1415, 1448, 1476, 1504, 1532, 1565, 1594, 1627, 1656], "labelmixin": 570, "modelwrapp": 578, "__call__": [579, 1731], "modelsdict": 591, "dependency_graph": 594, "dependency_list": 595, "dependency_map": 596, "modelsmixin2": 606, "parsermixin": 611, "od": 612, "scipyrk45": 614, "io": 616, "export": 616, "network_from_csv": 617, "network_from_jsongraph": 618, "network_from_marock": 619, "network_from_networkx": 620, "network_from_pergeo": 621, "network_from_porespi": 622, "network_from_statoil": 623, "network_to_comsol": 624, "network_to_csv": 625, "network_to_jsongraph": 626, "network_to_networkx": 627, "network_to_panda": 628, "network_to_pergeo": 629, "network_to_salom": 630, "network_to_stl": 631, "print_hdf5": 632, "project_to_csv": 633, "project_to_dict": 634, "project_to_hdf5": 635, "project_to_panda": 636, "project_to_paraview": 637, "project_to_vtk": 638, "project_to_xdmf": 639, "circles_and_rectangl": [643, 662, 676, 691, 746], "cones_and_cylind": [644, 663, 677, 692, 747], "cubes_and_cuboid": [645, 664, 678, 693, 748], "pyramids_and_cuboid": [646, 671, 686, 701, 755], "spheres_and_cylind": [647, 672, 687, 702, 744, 756], "squares_and_rectangl": [648, 673, 688, 703, 757], "trapezoids_and_rectangl": [649, 674, 689, 704, 758], "air": [652, 1265], "standard": 659, "conduit_length": 661, "hybrid_cones_and_cylind": [665, 679, 694, 749], "hybrid_pyramids_and_cuboid": [666, 680, 695, 750], "hybrid_trapezoids_and_rectangl": [667, 681, 696, 751], "intersecting_con": [668, 682, 697, 752], "intersecting_pyramid": [669, 683, 698, 753], "intersecting_trapezoid": [670, 684, 699, 754], "diffusive_size_factor": 675, "ncylinders_in_seri": [685, 700], "hydraulic_size_factor": 690, "pore_cross_sectional_area": 705, "cross": [705, 739], "section": [705, 739], "circl": [706, 723, 728], "cone": 707, "cube": [708, 724, 729], "sphere": [709, 725, 731], "squar": [710, 726, 732], "pore_se": 711, "seed": [711, 763], "spatially_correl": 713, "pore_s": 714, "equivalent_diamet": [715, 767], "from_neighbor_throat": [716, 794], "generic_distribut": [717, 769, 795], "largest_spher": 718, "normal": [719, 770, 800, 801], "weibul": [721, 772, 807], "pore_surface_area": 722, "pore_volum": 727, "throat_capillary_shape_factor": 733, "capillari": 733, "compact": 734, "jenkins_rao": 735, "mason_morrow": 736, "throat_centroid": 737, "centroid": 737, "pore_coord": 738, "throat_cross_sectional_area": 739, "cuboid": [740, 760, 774, 781], "cylind": [741, 761, 775, 782], "rectangl": [742, 762, 777, 786], "throat_endpoint": 743, "throat_length": 745, "throat_perimet": 759, "perimet": 759, "throat_se": 763, "from_neighbor_por": [764, 768, 793], "throat_siz": 766, "throat_surface_area": 773, "extrus": [776, 783], "throat_vector": 778, "pore_to_por": 779, "throat_volum": 780, "len": 784, "pendular_r": 785, "misc": [787, 842], "miscellan": 787, "blank": 788, "clip": 789, "generic_funct": 796, "invert": 797, "linear": [798, 905], "match_histogram": 799, "polynomi": 802, "product": 803, "summat": 806, "bidirectional_throat": 809, "cluster_numb": 810, "cluster_s": 811, "coordination_numb": 812, "count_coincident_por": 813, "distance_to_furthest_neighbor": 814, "distance_to_nearest_neighbor": 815, "distance_to_nearest_por": 816, "duplicate_throat": 817, "find_coincident_por": 818, "headless_throat": 819, "isolated_por": 820, "looped_throat": 821, "pore_to_pore_dist": 822, "reversed_throat": 823, "chemicals_wrapp": 825, "critical_prop": 826, "densiti": 827, "ideal_ga": 828, "liquid_mixture_costald": 829, "liquid_pure_costald": 830, "mass_to_molar": 831, "water_correl": [832, 856, 863, 867, 874], "gas_mixture_c": 834, "gas_mixture_fesg": 835, "liquid_mixture_tc": 836, "heat_capac": 837, "gas_mixture_yweight": 838, "gas_pure_trc": 839, "liquid_mixture_xweight": [840, 872], "liquid_pure_rp": 841, "mix_and_match": 843, "mole_to_mass_fract": [844, 849], "from_compon": 846, "mixing_rul": 847, "mole_summ": 848, "salin": 850, "partition_coeffici": 851, "gaseous_species_in_wat": 852, "surface_tens": 853, "liquid_mixture_wsd": 854, "liquid_pure_bb": 855, "thermal_conduct": [857, 911], "gas_mixture_whz": 858, "gas_pure_gismr": 859, "liquid_mixture_dippr9h": 860, "liquid_pure_gismr": 861, "liquid_pure_sr": 862, "vapor_pressur": 864, "liquid_pure_antoin": 865, "liquid_pure_lk": 866, "gas_mixture_hz": 869, "gas_pure_gesmr": 870, "gas_pure_st": 871, "liquid_pure_l": 873, "ad_dif_conduct": 876, "ad_dif": 877, "capillary_pressur": 878, "purcel": [879, 895], "washburn": 880, "diffusive_conduct": 881, "generic_diffus": 882, "mixed_diffus": 883, "ordinary_diffus": 884, "taylor_aris_diffus": 885, "electrical_conduct": 886, "generic_electr": 887, "series_resistor": [888, 913], "hydraulic_conduct": 889, "generic_hydraul": 890, "hagen_poiseuil": 891, "valvatne_blunt": 892, "meniscu": 893, "general_toroid": 894, "sinusoid": 896, "conduit_conduct": 898, "late_fil": 899, "source_term": 900, "butler_volmer_conc": 901, "butler_volmer_voltag": 902, "exponenti": 903, "general_symbol": 904, "logarithm": 906, "natural_exponenti": 907, "natural_logarithm": 908, "power_law": 909, "standard_kinet": 910, "generic_therm": 912, "bodycenteredcub": 915, "add_boundary_por": [916, 955, 1070, 1111, 1150, 1680], "create_adjacency_matrix": [921, 960, 998, 1036, 1075, 1116, 1155, 1193, 1231], "create_incidence_matrix": [922, 961, 999, 1037, 1076, 1117, 1156, 1194, 1232], "find_connected_por": [924, 963, 1001, 1039, 1078, 1119, 1158, 1196, 1234], "find_connecting_throat": [925, 964, 1002, 1040, 1079, 1120, 1159, 1197, 1235], "find_nearby_por": [926, 965, 1003, 1041, 1080, 1121, 1160, 1198, 1236], "find_neighbor_por": [927, 966, 1004, 1042, 1081, 1122, 1161, 1199, 1237], "find_neighbor_throat": [928, 967, 1005, 1043, 1082, 1123, 1162, 1200, 1238], "get_adjacency_matrix": [931, 970, 1008, 1046, 1087, 1126, 1165, 1203, 1241], "get_incidence_matrix": [933, 972, 1010, 1048, 1089, 1128, 1167, 1205, 1243], "num_neighbor": [938, 977, 1015, 1053, 1094, 1133, 1172, 1210, 1248], "delaunayvoronoidu": 1069, "find_pore_hul": 1083, "find_throat_facet": 1084, "demo": 1110, "facecenteredcub": 1149, "binaryga": 1293, "add_comp": [1294, 1328, 1362, 1424, 1541, 1603], "get_mix_v": [1305, 1339, 1373, 1435, 1552, 1614], "remove_comp": [1317, 1351, 1385, 1447, 1564, 1626], "y": [1326, 1360, 1573], "gasmixtur": 1327, "liquidmixtur": 1361, "x": [1394, 1635], "standardga": 1512, "standardgasmixtur": 1540, "standardliquid": 1574, "standardliquidmixtur": 1602, "basesolv": 1665, "directsolv": 1667, "iterativesolv": 1669, "petsclinearsolv": 1671, "pardisospsolv": 1673, "scipycg": 1675, "scipyspsolv": 1677, "topotool": 1679, "add_reservoir_por": 1681, "bond_percol": 1682, "clone_por": 1683, "connect_por": 1684, "conns_to_am": 1685, "dimension": 1686, "drop_sit": 1687, "extend": [1688, 1799, 1817], "filter_pores_by_z": 1689, "find_clust": 1690, "find_connected_sit": 1691, "find_connecting_bond": 1692, "find_interface_throat": 1693, "find_neighbor_bond": 1694, "find_neighbor_sit": 1695, "find_path": 1696, "find_pore_to_pore_dist": 1697, "find_surface_por": 1698, "generate_base_point": 1699, "get_domain_area": 1700, "get_domain_length": 1701, "get_shap": 1702, "get_spac": 1703, "hull_centroid": 1704, "is_fully_connect": 1705, "iscoplanar": 1706, "isoutsid": 1707, "ispercol": 1708, "issymmetr": 1709, "istriangular": 1710, "istril": 1711, "istriu": 1712, "label_fac": 1713, "merge_network": 1714, "merge_por": 1715, "reduce_coordin": 1716, "reflect_base_point": 1717, "remove_isolated_clust": 1718, "rotate_coord": 1719, "shear_coord": 1720, "site_percol": 1721, "stitch": 1722, "stitch_por": 1723, "template_cylinder_annulu": 1724, "template_sphere_shel": 1725, "tri_to_am": 1726, "trim": 1727, "vor_to_am": 1728, "util": 1729, "helper": 1729, "docor": 1730, "dedent": [1732, 1733], "delete_kwarg": 1734, "delete_kwargs_": 1735, "delete_param": 1736, "delete_params_": 1737, "delete_typ": 1738, "delete_types_": 1739, "get_docstr": 1740, "get_extended_summari": 1741, "get_extended_summaryf": 1742, "get_full_descript": 1743, "get_full_descriptionf": 1744, "get_sect": 1745, "get_sectionsf": 1746, "get_summari": 1747, "get_summaryf": 1748, "keep_param": 1749, "keep_params_": 1750, "keep_typ": 1751, "keep_types_": 1752, "save_docstr": 1753, "with_ind": [1754, 1755], "healthdict": 1756, "nesteddict": 1768, "to_dict": 1778, "unravel": 1779, "printabledict": 1782, "printablelist": 1794, "append": [1795, 1807, 1811, 1813], "count": [1798, 1816], "index": [1800, 1818], "insert": [1801, 1819], "revers": [1804, 1822], "sort": [1805, 1823], "settingsattr": 1809, "simplelist": 1810, "typedlist": 1812, "typedmixin": 1824, "typedset": 1825, "difference_upd": 1830, "discard": 1831, "intersect": 1832, "intersection_upd": 1833, "isdisjoint": 1834, "issubset": 1835, "issuperset": 1836, "symmetric_differ": 1839, "symmetric_difference_upd": 1840, "union": 1841, "close_project": 1845, "copy_project": 1847, "load_project": 1852, "load_workspac": 1853, "new_project": 1854, "save_project": 1857, "save_workspac": 1858, "check_data_health": 1862, "check_network_health": 1863, "dict_to_struct": 1864, "flat_list": 1865, "get_mixture_model_arg": 1866, "get_printable_label": 1867, "get_printable_prop": 1868, "ignore_warn": 1869, "is_symmetr": 1870, "is_transi": 1871, "is_valid_propnam": 1872, "methods_to_t": 1873, "models_to_t": 1874, "sanitize_dict": 1875, "struct_to_dict": 1876, "modul": 1877}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"clear": [[99, "clear"], [163, "clear"], [130, "clear"], [1844, "clear"], [1827, "clear"], [1757, "clear"], [1796, "clear"], [1783, "clear"], [1814, "clear"], [1769, "clear"], [1639, "clear"], [1545, "clear"], [1577, "clear"], [1607, "clear"], [1515, "clear"], [1487, "clear"], [1459, "clear"], [1366, "clear"], [1428, "clear"], [1398, "clear"], [1332, "clear"], [1268, "clear"], [1298, "clear"], [1229, "clear"], [1191, "clear"], [1153, "clear"], [1073, "clear"], [1114, "clear"], [996, "clear"], [1034, "clear"], [958, "clear"], [919, "clear"], [580, "clear"], [592, "clear"], [545, "clear"], [493, "clear"], [526, "clear"], [460, "clear"], [394, "clear"], [427, "clear"], [327, "clear"], [360, "clear"], [294, "clear"], [197, "clear"], [261, "clear"], [228, "clear"], [38, "clear"], [72, "clear"]], "items": [[107, "items"], [173, "items"], [140, "items"], [1850, "items"], [1761, "items"], [1773, "items"], [1787, "items"], [1646, "items"], [1616, "items"], [1584, "items"], [1554, "items"], [1522, "items"], [1494, "items"], [1466, "items"], [1437, "items"], [1375, "items"], [1405, "items"], [1275, "items"], [1341, "items"], [1307, "items"], [1169, "items"], [1207, "items"], [1245, "items"], [1130, "items"], [1091, "items"], [1050, "items"], [1012, "items"], [974, "items"], [935, "items"], [599, "items"], [584, "items"], [532, "items"], [503, "items"], [552, "items"], [404, "items"], [470, "items"], [437, "items"], [337, "items"], [304, "items"], [370, "items"], [238, "items"], [205, "items"], [271, "items"], [80, "items"], [48, "items"]], "popitem": [[146, "popitem"], [179, "popitem"], [114, "popitem"], [1856, "popitem"], [1764, "popitem"], [1790, "popitem"], [1776, "popitem"], [1652, "popitem"], [1622, "popitem"], [1560, "popitem"], [1590, "popitem"], [1472, "popitem"], [1443, "popitem"], [1500, "popitem"], [1528, "popitem"], [1347, "popitem"], [1381, "popitem"], [1411, "popitem"], [1281, "popitem"], [1313, "popitem"], [1252, "popitem"], [1214, "popitem"], [1176, "popitem"], [1137, "popitem"], [1057, "popitem"], [1098, "popitem"], [981, "popitem"], [1019, "popitem"], [942, "popitem"], [602, "popitem"], [587, "popitem"], [509, "popitem"], [558, "popitem"], [535, "popitem"], [476, "popitem"], [410, "popitem"], [443, "popitem"], [343, "popitem"], [310, "popitem"], [376, "popitem"], [244, "popitem"], [212, "popitem"], [277, "popitem"], [54, "popitem"], [86, "popitem"]], "set_label": [[152, "set-label"], [185, "set-label"], [121, "set-label"], [1657, "set-label"], [1566, "set-label"], [1628, "set-label"], [1595, "set-label"], [1505, "set-label"], [1449, "set-label"], [1533, "set-label"], [1477, "set-label"], [1387, "set-label"], [1353, "set-label"], [1416, "set-label"], [1319, "set-label"], [1286, "set-label"], [1257, "set-label"], [1219, "set-label"], [1181, "set-label"], [1062, "set-label"], [1103, "set-label"], [1142, "set-label"], [986, "set-label"], [1024, "set-label"], [947, "set-label"], [576, "set-label"], [482, "set-label"], [515, "set-label"], [563, "set-label"], [416, "set-label"], [449, "set-label"], [316, "set-label"], [349, "set-label"], [382, "set-label"], [283, "set-label"], [250, "set-label"], [219, "set-label"], [60, "set-label"], [90, "set-label"]], "props": [[116, "props"], [148, "props"], [181, "props"], [1654, "props"], [1624, "props"], [1592, "props"], [1562, "props"], [1445, "props"], [1502, "props"], [1530, "props"], [1474, "props"], [1383, "props"], [1413, "props"], [1349, "props"], [1315, "props"], [1254, "props"], [1283, "props"], [1216, "props"], [1178, "props"], [1139, "props"], [1059, "props"], [1100, "props"], [1021, "props"], [983, "props"], [944, "props"], [560, "props"], [536, "props"], [511, "props"], [478, "props"], [412, "props"], [445, "props"], [312, "props"], [345, "props"], [378, "props"], [214, "props"], [279, "props"], [246, "props"], [56, "props"], [88, "props"]], "rate": [[182, "rate"], [149, "rate"], [512, "rate"], [446, "rate"], [413, "rate"], [479, "rate"], [379, "rate"], [346, "rate"], [313, "rate"], [247, "rate"], [280, "rate"], [57, "rate"]], "run": [[183, "run"], [150, "run"], [118, "run"], [513, "run"], [480, "run"], [414, "run"], [447, "run"], [347, "run"], [380, "run"], [314, "run"], [248, "run"], [281, "run"], [216, "run"], [58, "run"]], "throats": [[157, "throats"], [190, "throats"], [124, "throats"], [1659, "throats"], [1630, "throats"], [1568, "throats"], [1597, "throats"], [1535, "throats"], [1507, "throats"], [1451, "throats"], [1479, "throats"], [1355, "throats"], [1389, "throats"], [1418, "throats"], [1321, "throats"], [1288, "throats"], [1259, "throats"], [1183, "throats"], [1221, "throats"], [1064, "throats"], [1144, "throats"], [1105, "throats"], [988, "throats"], [1026, "throats"], [949, "throats"], [577, "throats"], [487, "throats"], [565, "throats"], [519, "throats"], [454, "throats"], [388, "throats"], [421, "throats"], [354, "throats"], [288, "throats"], [321, "throats"], [222, "throats"], [255, "throats"], [92, "throats"], [66, "throats"]], "clear_BCs": [[164, "clear-bcs"], [131, "clear-bcs"], [100, "clear-bcs"], [494, "clear-bcs"], [428, "clear-bcs"], [461, "clear-bcs"], [395, "clear-bcs"], [295, "clear-bcs"], [328, "clear-bcs"], [361, "clear-bcs"], [198, "clear-bcs"], [262, "clear-bcs"], [229, "clear-bcs"], [39, "clear-bcs"], [73, "clear-bcs"]], "apply_trapping": [[98, "apply-trapping"], [196, "apply-trapping"]], "interpolate_data": [[106, "interpolate-data"], [139, "interpolate-data"], [172, "interpolate-data"], [1645, "interpolate-data"], [1583, "interpolate-data"], [1615, "interpolate-data"], [1553, "interpolate-data"], [1493, "interpolate-data"], [1465, "interpolate-data"], [1521, "interpolate-data"], [1374, "interpolate-data"], [1404, "interpolate-data"], [1436, "interpolate-data"], [1340, "interpolate-data"], [1306, "interpolate-data"], [1274, "interpolate-data"], [1244, "interpolate-data"], [1206, "interpolate-data"], [1168, "interpolate-data"], [1129, "interpolate-data"], [1090, "interpolate-data"], [1011, "interpolate-data"], [1049, "interpolate-data"], [973, "interpolate-data"], [934, "interpolate-data"], [531, "interpolate-data"], [551, "interpolate-data"], [502, "interpolate-data"], [403, "interpolate-data"], [469, "interpolate-data"], [436, "interpolate-data"], [336, "interpolate-data"], [303, "interpolate-data"], [369, "interpolate-data"], [270, "interpolate-data"], [204, "interpolate-data"], [237, "interpolate-data"], [47, "interpolate-data"], [79, "interpolate-data"]], "values": [[128, "values"], [161, "values"], [96, "values"], [1861, "values"], [1767, "values"], [1781, "values"], [1793, "values"], [1663, "values"], [1634, "values"], [1601, "values"], [1572, "values"], [1539, "values"], [1483, "values"], [1511, "values"], [1455, "values"], [1393, "values"], [1359, "values"], [1422, "values"], [1263, "values"], [1325, "values"], [1292, "values"], [1225, "values"], [1187, "values"], [1109, "values"], [1068, "values"], [1148, "values"], [992, "values"], [1030, "values"], [953, "values"], [590, "values"], [605, "values"], [491, "values"], [523, "values"], [541, "values"], [569, "values"], [392, "values"], [458, "values"], [425, "values"], [325, "values"], [358, "values"], [292, "values"], [194, "values"], [226, "values"], [259, "values"], [70, "values"]], "copy": [[101, "copy"], [167, "copy"], [134, "copy"], [1828, "copy"], [1846, "copy"], [1784, "copy"], [1797, "copy"], [1770, "copy"], [1815, "copy"], [1758, "copy"], [1808, "copy"], [1640, "copy"], [1546, "copy"], [1578, "copy"], [1608, "copy"], [1460, "copy"], [1516, "copy"], [1488, "copy"], [1367, "copy"], [1399, "copy"], [1429, "copy"], [1333, "copy"], [1299, "copy"], [1269, "copy"], [1230, "copy"], [1192, "copy"], [1154, "copy"], [1074, "copy"], [1115, "copy"], [1035, "copy"], [997, "copy"], [959, "copy"], [920, "copy"], [581, "copy"], [593, "copy"], [546, "copy"], [527, "copy"], [497, "copy"], [464, "copy"], [398, "copy"], [431, "copy"], [331, "copy"], [298, "copy"], [364, "copy"], [199, "copy"], [232, "copy"], [265, "copy"], [74, "copy"], [42, "copy"]], "setdefault": [[189, "setdefault"], [123, "setdefault"], [156, "setdefault"], [1859, "setdefault"], [1765, "setdefault"], [1791, "setdefault"], [1777, "setdefault"], [1658, "setdefault"], [1567, "setdefault"], [1629, "setdefault"], [1596, "setdefault"], [1506, "setdefault"], [1478, "setdefault"], [1450, "setdefault"], [1534, "setdefault"], [1388, "setdefault"], [1417, "setdefault"], [1354, "setdefault"], [1258, "setdefault"], [1287, "setdefault"], [1320, "setdefault"], [1220, "setdefault"], [1182, "setdefault"], [1063, "setdefault"], [1143, "setdefault"], [1104, "setdefault"], [987, "setdefault"], [1025, "setdefault"], [948, "setdefault"], [603, "setdefault"], [588, "setdefault"], [537, "setdefault"], [518, "setdefault"], [486, "setdefault"], [564, "setdefault"], [420, "setdefault"], [453, "setdefault"], [387, "setdefault"], [353, "setdefault"], [320, "setdefault"], [287, "setdefault"], [254, "setdefault"], [221, "setdefault"], [91, "setdefault"], [65, "setdefault"]], "to_mask": [[159, "to-mask"], [126, "to-mask"], [1632, "to-mask"], [1661, "to-mask"], [1537, "to-mask"], [1570, "to-mask"], [1599, "to-mask"], [1481, "to-mask"], [1509, "to-mask"], [1453, "to-mask"], [1357, "to-mask"], [1391, "to-mask"], [1420, "to-mask"], [1290, "to-mask"], [1261, "to-mask"], [1323, "to-mask"], [1223, "to-mask"], [1185, "to-mask"], [1066, "to-mask"], [1146, "to-mask"], [1107, "to-mask"], [990, "to-mask"], [1028, "to-mask"], [951, "to-mask"], [521, "to-mask"], [539, "to-mask"], [567, "to-mask"], [489, "to-mask"], [423, "to-mask"], [456, "to-mask"], [390, "to-mask"], [323, "to-mask"], [290, "to-mask"], [356, "to-mask"], [224, "to-mask"], [192, "to-mask"], [257, "to-mask"], [94, "to-mask"], [68, "to-mask"]], "clear_rate_BCs": [[132, "clear-rate-bcs"], [165, "clear-rate-bcs"], [495, "clear-rate-bcs"], [462, "clear-rate-bcs"], [429, "clear-rate-bcs"], [396, "clear-rate-bcs"], [296, "clear-rate-bcs"], [329, "clear-rate-bcs"], [362, "clear-rate-bcs"], [230, "clear-rate-bcs"], [263, "clear-rate-bcs"], [40, "clear-rate-bcs"]], "set_BC": [[119, "set-bc"], [151, "set-bc"], [184, "set-bc"], [514, "set-bc"], [481, "set-bc"], [415, "set-bc"], [448, "set-bc"], [381, "set-bc"], [348, "set-bc"], [315, "set-bc"], [282, "set-bc"], [217, "set-bc"], [249, "set-bc"], [59, "set-bc"], [89, "set-bc"]], "set_source": [[187, "set-source"], [154, "set-source"], [484, "set-source"], [418, "set-source"], [451, "set-source"], [385, "set-source"], [351, "set-source"], [318, "set-source"], [252, "set-source"], [285, "set-source"], [63, "set-source"]], "set_value_BC": [[188, "set-value-bc"], [155, "set-value-bc"], [517, "set-value-bc"], [485, "set-value-bc"], [386, "set-value-bc"], [452, "set-value-bc"], [419, "set-value-bc"], [352, "set-value-bc"], [319, "set-value-bc"], [253, "set-value-bc"], [286, "set-value-bc"], [64, "set-value-bc"]], "labels": [[109, "labels"], [142, "labels"], [175, "labels"], [1648, "labels"], [1556, "labels"], [1618, "labels"], [1586, "labels"], [1468, "labels"], [1524, "labels"], [1496, "labels"], [1407, "labels"], [1377, "labels"], [1439, "labels"], [1277, "labels"], [1309, "labels"], [1343, "labels"], [1209, "labels"], [1171, "labels"], [1247, "labels"], [1093, "labels"], [1132, "labels"], [1052, "labels"], [1014, "labels"], [976, "labels"], [937, "labels"], [505, "labels"], [554, "labels"], [572, "labels"], [406, "labels"], [472, "labels"], [439, "labels"], [339, "labels"], [372, "labels"], [306, "labels"], [207, "labels"], [273, "labels"], [240, "labels"], [82, "labels"], [50, "labels"]], "update": [[160, "update"], [127, "update"], [1860, "update"], [1842, "update"], [1766, "update"], [1780, "update"], [1792, "update"], [1633, "update"], [1662, "update"], [1600, "update"], [1538, "update"], [1571, "update"], [1510, "update"], [1482, "update"], [1454, "update"], [1358, "update"], [1421, "update"], [1392, "update"], [1324, "update"], [1262, "update"], [1291, "update"], [1224, "update"], [1186, "update"], [1147, "update"], [1108, "update"], [1067, "update"], [991, "update"], [1029, "update"], [952, "update"], [589, "update"], [604, "update"], [490, "update"], [540, "update"], [522, "update"], [568, "update"], [424, "update"], [391, "update"], [457, "update"], [357, "update"], [324, "update"], [291, "update"], [225, "update"], [193, "update"], [258, "update"], [69, "update"], [95, "update"]], "get": [[170, "get"], [104, "get"], [137, "get"], [1849, "get"], [1772, "get"], [1786, "get"], [1760, "get"], [1643, "get"], [1581, "get"], [1549, "get"], [1611, "get"], [1491, "get"], [1519, "get"], [1463, "get"], [1402, "get"], [1370, "get"], [1432, "get"], [1272, "get"], [1336, "get"], [1302, "get"], [1202, "get"], [1164, "get"], [1240, "get"], [1125, "get"], [1086, "get"], [1045, "get"], [969, "get"], [1007, "get"], [930, "get"], [583, "get"], [598, "get"], [500, "get"], [549, "get"], [529, "get"], [434, "get"], [467, "get"], [401, "get"], [367, "get"], [334, "get"], [301, "get"], [202, "get"], [268, "get"], [235, "get"], [77, "get"], [45, "get"]], "filter_by_label": [[102, "filter-by-label"], [135, "filter-by-label"], [168, "filter-by-label"], [1641, "filter-by-label"], [1547, "filter-by-label"], [1579, "filter-by-label"], [1609, "filter-by-label"], [1461, "filter-by-label"], [1517, "filter-by-label"], [1489, "filter-by-label"], [1368, "filter-by-label"], [1430, "filter-by-label"], [1400, "filter-by-label"], [1300, "filter-by-label"], [1270, "filter-by-label"], [1334, "filter-by-label"], [1233, "filter-by-label"], [1157, "filter-by-label"], [1195, "filter-by-label"], [1118, "filter-by-label"], [1077, "filter-by-label"], [1000, "filter-by-label"], [1038, "filter-by-label"], [962, "filter-by-label"], [923, "filter-by-label"], [547, "filter-by-label"], [571, "filter-by-label"], [498, "filter-by-label"], [432, "filter-by-label"], [465, "filter-by-label"], [399, "filter-by-label"], [299, "filter-by-label"], [332, "filter-by-label"], [365, "filter-by-label"], [233, "filter-by-label"], [200, "filter-by-label"], [266, "filter-by-label"], [75, "filter-by-label"], [43, "filter-by-label"]], "pop": [[178, "pop"], [145, "pop"], [113, "pop"], [1855, "pop"], [1837, "pop"], [1763, "pop"], [1789, "pop"], [1820, "pop"], [1802, "pop"], [1775, "pop"], [1651, "pop"], [1589, "pop"], [1559, "pop"], [1621, "pop"], [1442, "pop"], [1499, "pop"], [1471, "pop"], [1527, "pop"], [1410, "pop"], [1380, "pop"], [1346, "pop"], [1312, "pop"], [1251, "pop"], [1280, "pop"], [1213, "pop"], [1175, "pop"], [1056, "pop"], [1097, "pop"], [1136, "pop"], [980, "pop"], [1018, "pop"], [941, "pop"], [601, "pop"], [586, "pop"], [508, "pop"], [534, "pop"], [557, "pop"], [475, "pop"], [442, "pop"], [409, "pop"], [309, "pop"], [342, "pop"], [375, "pop"], [243, "pop"], [276, "pop"], [211, "pop"], [53, "pop"], [85, "pop"]], "Drainage": [[97, "drainage"], [32, "drainage"]], "keys": [[141, "keys"], [108, "keys"], [174, "keys"], [1851, "keys"], [1762, "keys"], [1788, "keys"], [1774, "keys"], [1647, "keys"], [1555, "keys"], [1585, "keys"], [1617, "keys"], [1523, "keys"], [1467, "keys"], [1495, "keys"], [1406, "keys"], [1376, "keys"], [1438, "keys"], [1342, "keys"], [1308, "keys"], [1276, "keys"], [1246, "keys"], [1170, "keys"], [1208, "keys"], [1131, "keys"], [1092, "keys"], [1013, "keys"], [975, "keys"], [1051, "keys"], [936, "keys"], [600, "keys"], [585, "keys"], [533, "keys"], [504, "keys"], [553, "keys"], [438, "keys"], [405, "keys"], [471, "keys"], [338, "keys"], [371, "keys"], [305, "keys"], [239, "keys"], [272, "keys"], [206, "keys"], [49, "keys"], [81, "keys"]], "set_outlet_BC": [[122, "set-outlet-bc"], [220, "set-outlet-bc"]], "clear_value_BCs": [[166, "clear-value-bcs"], [133, "clear-value-bcs"], [496, "clear-value-bcs"], [463, "clear-value-bcs"], [430, "clear-value-bcs"], [397, "clear-value-bcs"], [297, "clear-value-bcs"], [363, "clear-value-bcs"], [330, "clear-value-bcs"], [231, "clear-value-bcs"], [264, "clear-value-bcs"], [41, "clear-value-bcs"]], "pc_curve": [[112, "pc-curve"], [210, "pc-curve"]], "num_pores": [[143, "num-pores"], [176, "num-pores"], [110, "num-pores"], [1649, "num-pores"], [1557, "num-pores"], [1587, "num-pores"], [1619, "num-pores"], [1440, "num-pores"], [1469, "num-pores"], [1497, "num-pores"], [1525, "num-pores"], [1378, "num-pores"], [1408, "num-pores"], [1344, "num-pores"], [1278, "num-pores"], [1310, "num-pores"], [1249, "num-pores"], [1211, "num-pores"], [1173, "num-pores"], [1095, "num-pores"], [1134, "num-pores"], [1054, "num-pores"], [1016, "num-pores"], [978, "num-pores"], [939, "num-pores"], [573, "num-pores"], [555, "num-pores"], [506, "num-pores"], [440, "num-pores"], [473, "num-pores"], [407, "num-pores"], [373, "num-pores"], [340, "num-pores"], [307, "num-pores"], [208, "num-pores"], [241, "num-pores"], [274, "num-pores"], [83, "num-pores"], [51, "num-pores"]], "num_throats": [[111, "num-throats"], [144, "num-throats"], [177, "num-throats"], [1650, "num-throats"], [1588, "num-throats"], [1558, "num-throats"], [1620, "num-throats"], [1498, "num-throats"], [1470, "num-throats"], [1526, "num-throats"], [1441, "num-throats"], [1409, "num-throats"], [1345, "num-throats"], [1379, "num-throats"], [1250, "num-throats"], [1311, "num-throats"], [1279, "num-throats"], [1212, "num-throats"], [1174, "num-throats"], [1096, "num-throats"], [1135, "num-throats"], [1017, "num-throats"], [979, "num-throats"], [1055, "num-throats"], [940, "num-throats"], [574, "num-throats"], [556, "num-throats"], [507, "num-throats"], [441, "num-throats"], [474, "num-throats"], [408, "num-throats"], [374, "num-throats"], [308, "num-throats"], [341, "num-throats"], [209, "num-throats"], [242, "num-throats"], [275, "num-throats"], [84, "num-throats"], [52, "num-throats"]], "pores": [[115, "pores"], [180, "pores"], [147, "pores"], [1653, "pores"], [1561, "pores"], [1623, "pores"], [1591, "pores"], [1444, "pores"], [1529, "pores"], [1473, "pores"], [1501, "pores"], [1348, "pores"], [1412, "pores"], [1382, "pores"], [1282, "pores"], [1314, "pores"], [1253, "pores"], [1215, "pores"], [1177, "pores"], [1138, "pores"], [1058, "pores"], [1099, "pores"], [1020, "pores"], [982, "pores"], [943, "pores"], [575, "pores"], [559, "pores"], [510, "pores"], [477, "pores"], [444, "pores"], [411, "pores"], [377, "pores"], [311, "pores"], [344, "pores"], [213, "pores"], [245, "pores"], [278, "pores"], [55, "pores"], [87, "pores"]], "set_rate_BC": [[186, "set-rate-bc"], [153, "set-rate-bc"], [483, "set-rate-bc"], [516, "set-rate-bc"], [417, "set-rate-bc"], [384, "set-rate-bc"], [450, "set-rate-bc"], [317, "set-rate-bc"], [350, "set-rate-bc"], [251, "set-rate-bc"], [284, "set-rate-bc"], [62, "set-rate-bc"]], "set_inlet_BC": [[120, "set-inlet-bc"], [218, "set-inlet-bc"]], "FourierConduction": [[162, "fourierconduction"]], "fromkeys": [[136, "fromkeys"], [103, "fromkeys"], [169, "fromkeys"], [1848, "fromkeys"], [1771, "fromkeys"], [1759, "fromkeys"], [1785, "fromkeys"], [1642, "fromkeys"], [1548, "fromkeys"], [1610, "fromkeys"], [1580, "fromkeys"], [1462, "fromkeys"], [1490, "fromkeys"], [1518, "fromkeys"], [1431, "fromkeys"], [1401, "fromkeys"], [1369, "fromkeys"], [1335, "fromkeys"], [1271, "fromkeys"], [1301, "fromkeys"], [1201, "fromkeys"], [1239, "fromkeys"], [1163, "fromkeys"], [1124, "fromkeys"], [1085, "fromkeys"], [968, "fromkeys"], [1044, "fromkeys"], [1006, "fromkeys"], [929, "fromkeys"], [582, "fromkeys"], [597, "fromkeys"], [548, "fromkeys"], [528, "fromkeys"], [499, "fromkeys"], [400, "fromkeys"], [466, "fromkeys"], [433, "fromkeys"], [300, "fromkeys"], [366, "fromkeys"], [333, "fromkeys"], [201, "fromkeys"], [234, "fromkeys"], [267, "fromkeys"], [44, "fromkeys"], [76, "fromkeys"]], "to_indices": [[125, "to-indices"], [158, "to-indices"], [191, "to-indices"], [1660, "to-indices"], [1536, "to-indices"], [1569, "to-indices"], [1598, "to-indices"], [1631, "to-indices"], [1480, "to-indices"], [1508, "to-indices"], [1452, "to-indices"], [1390, "to-indices"], [1356, "to-indices"], [1419, "to-indices"], [1260, "to-indices"], [1322, "to-indices"], [1289, "to-indices"], [1222, "to-indices"], [1184, "to-indices"], [1106, "to-indices"], [1145, "to-indices"], [1065, "to-indices"], [1027, "to-indices"], [989, "to-indices"], [950, "to-indices"], [538, "to-indices"], [488, "to-indices"], [566, "to-indices"], [520, "to-indices"], [422, "to-indices"], [455, "to-indices"], [389, "to-indices"], [355, "to-indices"], [322, "to-indices"], [289, "to-indices"], [223, "to-indices"], [256, "to-indices"], [67, "to-indices"], [93, "to-indices"]], "get_conduit_data": [[171, "get-conduit-data"], [138, "get-conduit-data"], [105, "get-conduit-data"], [1644, "get-conduit-data"], [1613, "get-conduit-data"], [1551, "get-conduit-data"], [1582, "get-conduit-data"], [1520, "get-conduit-data"], [1492, "get-conduit-data"], [1464, "get-conduit-data"], [1372, "get-conduit-data"], [1403, "get-conduit-data"], [1434, "get-conduit-data"], [1273, "get-conduit-data"], [1338, "get-conduit-data"], [1304, "get-conduit-data"], [1166, "get-conduit-data"], [1204, "get-conduit-data"], [1242, "get-conduit-data"], [1088, "get-conduit-data"], [1127, "get-conduit-data"], [1047, "get-conduit-data"], [1009, "get-conduit-data"], [971, "get-conduit-data"], [932, "get-conduit-data"], [550, "get-conduit-data"], [501, "get-conduit-data"], [530, "get-conduit-data"], [402, "get-conduit-data"], [435, "get-conduit-data"], [468, "get-conduit-data"], [368, "get-conduit-data"], [302, "get-conduit-data"], [335, "get-conduit-data"], [236, "get-conduit-data"], [269, "get-conduit-data"], [203, "get-conduit-data"], [78, "get-conduit-data"], [46, "get-conduit-data"]], "reset": [[117, "reset"], [215, "reset"]], "FickianDiffusion": [[129, "fickiandiffusion"]], "TypedMixin": [[1824, "typedmixin"]], "ignore_warnings": [[1869, "ignore-warnings"]], "remove": [[1838, "remove"], [1803, "remove"], [1821, "remove"]], "difference": [[1829, "difference"], [791, "difference"]], "get_mixture_model_args": [[1866, "get-mixture-model-args"]], "sanitize_dict": [[1875, "sanitize-dict"]], "is_symmetric": [[1870, "is-symmetric"]], "flat_list": [[1865, "flat-list"]], "Module Reference": [[1877, "module-openpnm"]], "symmetric_difference_update": [[1840, "symmetric-difference-update"]], "methods_to_table": [[1873, "methods-to-table"]], "check_data_health": [[1862, "check-data-health"]], "issuperset": [[1836, "issuperset"]], "load_project": [[1852, "load-project"]], "copy_project": [[1847, "copy-project"]], "save_workspace": [[1858, "save-workspace"]], "get_printable_labels": [[1867, "get-printable-labels"]], "intersection_update": [[1833, "intersection-update"]], "discard": [[1831, "discard"]], "symmetric_difference": [[1839, "symmetric-difference"]], "Workspace": [[1843, "workspace"]], "isdisjoint": [[1834, "isdisjoint"]], "save_project": [[1857, "save-project"]], "get_printable_props": [[1868, "get-printable-props"]], "is_valid_propname": [[1872, "is-valid-propname"]], "close_project": [[1845, "close-project"]], "new_project": [[1854, "new-project"]], "load_workspace": [[1853, "load-workspace"]], "dict_to_struct": [[1864, "dict-to-struct"]], "is_transient": [[1871, "is-transient"]], "models_to_table": [[1874, "models-to-table"]], "issubset": [[1835, "issubset"]], "intersection": [[1832, "intersection"]], "check_network_health": [[1863, "check-network-health"]], "struct_to_dict": [[1876, "struct-to-dict"]], "union": [[1841, "union"]], "add": [[1826, "add"]], "TypedSet": [[1825, "typedset"]], "difference_update": [[1830, "difference-update"]], "reverse": [[1822, "reverse"], [1804, "reverse"]], "get_extended_summaryf": [[1742, "get-extended-summaryf"]], "insert": [[1819, "insert"], [1801, "insert"]], "append": [[1811, "append"], [1807, "append"], [1795, "append"], [1813, "append"]], "index": [[1800, "index"], [1818, "index"]], "dedents": [[1733, "dedents"]], "get_extended_summary": [[1741, "get-extended-summary"]], "dedent": [[1732, "dedent"]], "keep_types": [[1751, "keep-types"]], "SimpleList": [[1810, "simplelist"]], "delete_types_s": [[1739, "delete-types-s"]], "count": [[1816, "count"], [1798, "count"]], "with_indent": [[1754, "with-indent"]], "delete_kwargs_s": [[1735, "delete-kwargs-s"]], "Project": [[1806, "project"]], "HealthDict": [[1756, "healthdict"]], "sort": [[1805, "sort"], [1823, "sort"]], "get_sections": [[1745, "get-sections"]], "delete_params_s": [[1737, "delete-params-s"]], "delete_params": [[1736, "delete-params"]], "get_docstring": [[1740, "get-docstring"]], "keep_types_s": [[1752, "keep-types-s"]], "Docorator": [[1730, "docorator"]], "get_sectionsf": [[1746, "get-sectionsf"]], "get_full_description": [[1743, "get-full-description"]], "unravel": [[1779, "unravel"]], "to_dict": [[1778, "to-dict"]], "with_indents": [[1755, "with-indents"]], "utils": [[1729, "module-openpnm.utils"]], "Utilities and helper classes/functions": [[1729, "utilities-and-helper-classes-functions"]], "delete_types": [[1738, "delete-types"]], "keep_params": [[1749, "keep-params"]], "get_summary": [[1747, "get-summary"]], "PrintableList": [[1794, "printablelist"]], "delete_kwargs": [[1734, "delete-kwargs"]], "vor_to_am": [[1728, "vor-to-am"]], "keep_params_s": [[1750, "keep-params-s"]], "__call__": [[1731, "call"], [579, "call"]], "save_docstring": [[1753, "save-docstring"]], "get_full_descriptionf": [[1744, "get-full-descriptionf"]], "TypedList": [[1812, "typedlist"]], "extend": [[1799, "extend"], [1817, "extend"], [1688, "extend"]], "PrintableDict": [[1782, "printabledict"]], "SettingsAttr": [[1809, "settingsattr"]], "NestedDict": [[1768, "nesteddict"]], "get_summaryf": [[1748, "get-summaryf"]], "add_reservoir_pore": [[1681, "add-reservoir-pore"]], "solve": [[1666, "solve"], [1670, "solve"], [1674, "solve"], [1678, "solve"], [1668, "solve"], [1676, "solve"], [1672, "solve"], [615, "solve"]], "stitch": [[1722, "stitch"]], "issymmetric": [[1709, "issymmetric"]], "IterativeSolver": [[1669, "iterativesolver"]], "find_interface_throats": [[1693, "find-interface-throats"]], "find_path": [[1696, "find-path"]], "find_surface_pores": [[1698, "find-surface-pores"]], "dimensionality": [[1686, "dimensionality"]], "site_percolation": [[1721, "site-percolation"]], "PETScLinearSolver": [[1671, "petsclinearsolver"]], "tri_to_am": [[1726, "tri-to-am"]], "find_pore_to_pore_distance": [[1697, "find-pore-to-pore-distance"]], "get_domain_length": [[1701, "get-domain-length"]], "istriangular": [[1710, "istriangular"]], "find_clusters": [[1690, "find-clusters"]], "drop_sites": [[1687, "drop-sites"]], "get_spacing": [[1703, "get-spacing"]], "solvers": [[1664, "module-openpnm.solvers"]], "Collection of matrix solvers for steady state simulations": [[1664, "collection-of-matrix-solvers-for-steady-state-simulations"]], "get_shape": [[1702, "get-shape"]], "ScipySpsolve": [[1677, "scipyspsolve"]], "add_boundary_pores": [[1680, "add-boundary-pores"], [1150, "add-boundary-pores"], [1070, "add-boundary-pores"], [1111, "add-boundary-pores"], [916, "add-boundary-pores"], [955, "add-boundary-pores"]], "get_domain_area": [[1700, "get-domain-area"]], "PardisoSpsolve": [[1673, "pardisospsolve"]], "BaseSolver": [[1665, "basesolver"]], "clone_pores": [[1683, "clone-pores"]], "add_model_collection": [[1638, "add-model-collection"], [1605, "add-model-collection"], [1576, "add-model-collection"], [1543, "add-model-collection"], [1486, "add-model-collection"], [1514, "add-model-collection"], [1458, "add-model-collection"], [1426, "add-model-collection"], [1397, "add-model-collection"], [1364, "add-model-collection"], [1330, "add-model-collection"], [1267, "add-model-collection"], [1296, "add-model-collection"], [1152, "add-model-collection"], [1190, "add-model-collection"], [1228, "add-model-collection"], [1113, "add-model-collection"], [1072, "add-model-collection"], [1033, "add-model-collection"], [995, "add-model-collection"], [918, "add-model-collection"], [957, "add-model-collection"], [608, "add-model-collection"], [544, "add-model-collection"]], "ispercolating": [[1708, "ispercolating"]], "find_connected_sites": [[1691, "find-connected-sites"]], "filter_pores_by_z": [[1689, "filter-pores-by-z"]], "stitch_pores": [[1723, "stitch-pores"]], "topotools": [[1679, "module-openpnm.topotools"]], "Collection of functions for manipulating network topology": [[1679, "collection-of-functions-for-manipulating-network-topology"]], "trim": [[1727, "trim"]], "regenerate_models": [[1655, "regenerate-models"], [1563, "regenerate-models"], [1593, "regenerate-models"], [1625, "regenerate-models"], [1503, "regenerate-models"], [1475, "regenerate-models"], [1446, "regenerate-models"], [1531, "regenerate-models"], [1350, "regenerate-models"], [1414, "regenerate-models"], [1384, "regenerate-models"], [1316, "regenerate-models"], [1255, "regenerate-models"], [1284, "regenerate-models"], [1217, "regenerate-models"], [1179, "regenerate-models"], [1060, "regenerate-models"], [1140, "regenerate-models"], [1101, "regenerate-models"], [1022, "regenerate-models"], [984, "regenerate-models"], [945, "regenerate-models"], [609, "regenerate-models"], [561, "regenerate-models"]], "rotate_coords": [[1719, "rotate-coords"]], "template_cylinder_annulus": [[1724, "template-cylinder-annulus"]], "Water": [[1636, "water"]], "merge_pores": [[1715, "merge-pores"]], "merge_networks": [[1714, "merge-networks"]], "connect_pores": [[1684, "connect-pores"]], "istriu": [[1712, "istriu"]], "reflect_base_points": [[1717, "reflect-base-points"]], "conns_to_am": [[1685, "conns-to-am"]], "iscoplanar": [[1706, "iscoplanar"]], "run_model": [[1656, "run-model"], [1565, "run-model"], [1627, "run-model"], [1594, "run-model"], [1448, "run-model"], [1532, "run-model"], [1504, "run-model"], [1476, "run-model"], [1415, "run-model"], [1352, "run-model"], [1386, "run-model"], [1318, "run-model"], [1285, "run-model"], [1256, "run-model"], [1218, "run-model"], [1180, "run-model"], [1061, "run-model"], [1141, "run-model"], [1102, "run-model"], [985, "run-model"], [1023, "run-model"], [946, "run-model"], [610, "run-model"], [562, "run-model"]], "ScipyCG": [[1675, "scipycg"]], "DirectSolver": [[1667, "directsolver"]], "shear_coords": [[1720, "shear-coords"]], "label_faces": [[1713, "label-faces"]], "generate_base_points": [[1699, "generate-base-points"]], "find_neighbor_bonds": [[1694, "find-neighbor-bonds"]], "is_fully_connected": [[1705, "is-fully-connected"]], "istril": [[1711, "istril"]], "find_neighbor_sites": [[1695, "find-neighbor-sites"]], "bond_percolation": [[1682, "bond-percolation"]], "add_model": [[1637, "add-model"], [1542, "add-model"], [1604, "add-model"], [1575, "add-model"], [1485, "add-model"], [1457, "add-model"], [1513, "add-model"], [1396, "add-model"], [1363, "add-model"], [1425, "add-model"], [1295, "add-model"], [1329, "add-model"], [1266, "add-model"], [1189, "add-model"], [1227, "add-model"], [1151, "add-model"], [1112, "add-model"], [1071, "add-model"], [994, "add-model"], [1032, "add-model"], [917, "add-model"], [956, "add-model"], [607, "add-model"], [543, "add-model"]], "find_connecting_bonds": [[1692, "find-connecting-bonds"]], "remove_isolated_clusters": [[1718, "remove-isolated-clusters"]], "x": [[1635, "x"], [1394, "x"]], "hull_centroid": [[1704, "hull-centroid"]], "template_sphere_shell": [[1725, "template-sphere-shell"]], "isoutside": [[1707, "isoutside"]], "reduce_coordination": [[1716, "reduce-coordination"]], "add_comp": [[1541, "add-comp"], [1603, "add-comp"], [1362, "add-comp"], [1424, "add-comp"], [1294, "add-comp"], [1328, "add-comp"]], "StandardGasMixture": [[1540, "standardgasmixture"]], "get_mix_vals": [[1552, "get-mix-vals"], [1614, "get-mix-vals"], [1435, "get-mix-vals"], [1373, "get-mix-vals"], [1339, "get-mix-vals"], [1305, "get-mix-vals"]], "check_mixture_health": [[1544, "check-mixture-health"], [1606, "check-mixture-health"], [1427, "check-mixture-health"], [1365, "check-mixture-health"], [1297, "check-mixture-health"], [1331, "check-mixture-health"]], "y": [[1573, "y"], [1360, "y"], [1326, "y"]], "StandardLiquid": [[1574, "standardliquid"]], "StandardLiquidMixture": [[1602, "standardliquidmixture"]], "get_comp_vals": [[1612, "get-comp-vals"], [1550, "get-comp-vals"], [1433, "get-comp-vals"], [1371, "get-comp-vals"], [1303, "get-comp-vals"], [1337, "get-comp-vals"]], "remove_comp": [[1564, "remove-comp"], [1626, "remove-comp"], [1447, "remove-comp"], [1351, "remove-comp"], [1385, "remove-comp"], [1317, "remove-comp"]], "Species": [[1484, "species"]], "StandardGas": [[1512, "standardgas"]], "Phase": [[1456, "phase"], [824, "id1"], [8, "phase"], [10, "phase"]], "LiquidMixture": [[1361, "liquidmixture"]], "Mixture": [[1423, "mixture"]], "Mercury": [[1395, "mercury"]], "GasMixture": [[1327, "gasmixture"]], "phase": [[1264, "module-openpnm.phase"], [824, "module-openpnm.models.phase"], [651, "module-openpnm.models.collections.phase"]], "num_neighbors": [[1248, "num-neighbors"], [1210, "num-neighbors"], [1172, "num-neighbors"], [1133, "num-neighbors"], [1094, "num-neighbors"], [977, "num-neighbors"], [1053, "num-neighbors"], [1015, "num-neighbors"], [938, "num-neighbors"]], "Air": [[1265, "air"]], "BinaryGas": [[1293, "binarygas"]], "find_neighbor_throats": [[1238, "find-neighbor-throats"], [1162, "find-neighbor-throats"], [1200, "find-neighbor-throats"], [1123, "find-neighbor-throats"], [1082, "find-neighbor-throats"], [1043, "find-neighbor-throats"], [1005, "find-neighbor-throats"], [967, "find-neighbor-throats"], [928, "find-neighbor-throats"]], "create_incidence_matrix": [[1194, "create-incidence-matrix"], [1156, "create-incidence-matrix"], [1232, "create-incidence-matrix"], [1117, "create-incidence-matrix"], [1076, "create-incidence-matrix"], [961, "create-incidence-matrix"], [1037, "create-incidence-matrix"], [999, "create-incidence-matrix"], [922, "create-incidence-matrix"]], "get_incidence_matrix": [[1243, "get-incidence-matrix"], [1167, "get-incidence-matrix"], [1205, "get-incidence-matrix"], [1089, "get-incidence-matrix"], [1128, "get-incidence-matrix"], [1010, "get-incidence-matrix"], [1048, "get-incidence-matrix"], [972, "get-incidence-matrix"], [933, "get-incidence-matrix"]], "find_neighbor_pores": [[1161, "find-neighbor-pores"], [1199, "find-neighbor-pores"], [1237, "find-neighbor-pores"], [1081, "find-neighbor-pores"], [1122, "find-neighbor-pores"], [1004, "find-neighbor-pores"], [966, "find-neighbor-pores"], [1042, "find-neighbor-pores"], [927, "find-neighbor-pores"]], "find_connected_pores": [[1158, "find-connected-pores"], [1234, "find-connected-pores"], [1196, "find-connected-pores"], [1078, "find-connected-pores"], [1119, "find-connected-pores"], [1001, "find-connected-pores"], [1039, "find-connected-pores"], [963, "find-connected-pores"], [924, "find-connected-pores"]], "Network": [[1188, "network"], [808, "id1"], [8, "network"], [10, "network"], [6, "network"]], "find_connecting_throat": [[1235, "find-connecting-throat"], [1159, "find-connecting-throat"], [1197, "find-connecting-throat"], [1079, "find-connecting-throat"], [1120, "find-connecting-throat"], [1002, "find-connecting-throat"], [964, "find-connecting-throat"], [1040, "find-connecting-throat"], [925, "find-connecting-throat"]], "create_adjacency_matrix": [[1155, "create-adjacency-matrix"], [1231, "create-adjacency-matrix"], [1193, "create-adjacency-matrix"], [1116, "create-adjacency-matrix"], [1075, "create-adjacency-matrix"], [1036, "create-adjacency-matrix"], [960, "create-adjacency-matrix"], [998, "create-adjacency-matrix"], [921, "create-adjacency-matrix"]], "find_nearby_pores": [[1198, "find-nearby-pores"], [1160, "find-nearby-pores"], [1236, "find-nearby-pores"], [1080, "find-nearby-pores"], [1121, "find-nearby-pores"], [1003, "find-nearby-pores"], [1041, "find-nearby-pores"], [965, "find-nearby-pores"], [926, "find-nearby-pores"]], "get_adjacency_matrix": [[1203, "get-adjacency-matrix"], [1165, "get-adjacency-matrix"], [1241, "get-adjacency-matrix"], [1126, "get-adjacency-matrix"], [1087, "get-adjacency-matrix"], [970, "get-adjacency-matrix"], [1008, "get-adjacency-matrix"], [1046, "get-adjacency-matrix"], [931, "get-adjacency-matrix"]], "Voronoi": [[1226, "voronoi"]], "find_throat_facets": [[1084, "find-throat-facets"]], "DelaunayVoronoiDual": [[1069, "delaunayvoronoidual"]], "find_pore_hulls": [[1083, "find-pore-hulls"]], "FaceCenteredCubic": [[1149, "facecenteredcubic"]], "Demo": [[1110, "demo"]], "Delaunay": [[1031, "delaunay"]], "CubicTemplate": [[993, "cubictemplate"]], "power_law": [[909, "power-law"]], "linear": [[905, "linear"], [798, "linear"]], "series_resistors": [[913, "series-resistors"], [888, "series-resistors"]], "liquid_pure_antoine": [[865, "liquid-pure-antoine"]], "gas_pure_gesmr": [[870, "gas-pure-gesmr"]], "butler_volmer_conc": [[901, "butler-volmer-conc"]], "BodyCenteredCubic": [[915, "bodycenteredcubic"]], "physics": [[875, "module-openpnm.models.physics"], [657, "module-openpnm.models.collections.physics"]], "Physics": [[875, "id1"], [8, "physics"]], "general_toroidal": [[894, "general-toroidal"]], "ordinary_diffusion": [[884, "ordinary-diffusion"]], "viscosity": [[868, "module-openpnm.models.phase.viscosity"]], "capillary_pressure": [[878, "module-openpnm.models.physics.capillary_pressure"]], "liquid_pure_ls": [[873, "liquid-pure-ls"]], "gas_mixture_hz": [[869, "gas-mixture-hz"]], "water_correlation": [[867, "water-correlation"], [874, "water-correlation"], [856, "water-correlation"], [863, "water-correlation"], [832, "water-correlation"]], "generic_thermal": [[912, "generic-thermal"]], "generic_electrical": [[887, "generic-electrical"]], "Cubic": [[954, "cubic"], [25, "cubic"]], "purcell": [[895, "purcell"], [879, "purcell"]], "gas_pure_st": [[871, "gas-pure-st"]], "valvatne_blunt": [[892, "valvatne-blunt"]], "butler_volmer_voltage": [[902, "butler-volmer-voltage"]], "liquid_mixture_xweighted": [[872, "liquid-mixture-xweighted"], [840, "liquid-mixture-xweighted"]], "logarithm": [[906, "logarithm"]], "hagen_poiseuille": [[891, "hagen-poiseuille"]], "meniscus": [[893, "module-openpnm.models.physics.meniscus"]], "conduit_conductance": [[898, "conduit-conductance"]], "general_symbolic": [[904, "general-symbolic"]], "hydraulic_conductance": [[889, "module-openpnm.models.physics.hydraulic_conductance"]], "diffusive_conductance": [[881, "module-openpnm.models.physics.diffusive_conductance"]], "taylor_aris_diffusion": [[885, "taylor-aris-diffusion"]], "vapor_pressure": [[864, "module-openpnm.models.phase.vapor_pressure"]], "source_terms": [[900, "module-openpnm.models.physics.source_terms"]], "network": [[914, "module-openpnm.network"], [808, "module-openpnm.models.network"], [650, "module-openpnm.models.collections.network"]], "late_filling": [[899, "late-filling"]], "washburn": [[880, "washburn"]], "thermal_conductance": [[911, "module-openpnm.models.physics.thermal_conductance"]], "ad_dif_conductance": [[876, "module-openpnm.models.physics.ad_dif_conductance"]], "mixed_diffusion": [[883, "mixed-diffusion"]], "natural_exponential": [[907, "natural-exponential"]], "liquid_pure_lk": [[866, "liquid-pure-lk"]], "ad_dif": [[877, "ad-dif"]], "generic_hydraulic": [[890, "generic-hydraulic"]], "sinusoidal": [[896, "sinusoidal"]], "standard_kinetics": [[910, "standard-kinetics"]], "exponential": [[903, "exponential"]], "electrical_conductance": [[886, "module-openpnm.models.physics.electrical_conductance"]], "generic_diffusive": [[882, "generic-diffusive"]], "multiphase": [[897, "module-openpnm.models.physics.multiphase"]], "natural_logarithm": [[908, "natural-logarithm"]], "find_coincident_pores": [[818, "find-coincident-pores"]], "headless_throats": [[819, "headless-throats"]], "liquid_mixture_DIPPR9H": [[860, "liquid-mixture-dippr9h"]], "random": [[804, "random"], [771, "random"], [712, "random"], [720, "random"], [765, "random"]], "scaled": [[805, "scaled"]], "invert": [[797, "invert"]], "distance_to_nearest_neighbor": [[815, "distance-to-nearest-neighbor"]], "mole_to_mass_fraction": [[849, "mole-to-mass-fraction"], [844, "mole-to-mass-fraction"]], "gas_mixture_fesg": [[835, "gas-mixture-fesg"]], "distance_to_nearest_pore": [[816, "distance-to-nearest-pore"]], "gas_pure_gismr": [[859, "gas-pure-gismr"]], "liquid_pure_rp": [[841, "liquid-pure-rp"]], "coordination_number": [[812, "coordination-number"]], "pore_to_pore_distance": [[822, "pore-to-pore-distance"]], "surface_tension": [[853, "module-openpnm.models.phase.surface_tension"]], "count_coincident_pores": [[813, "count-coincident-pores"]], "reversed_throats": [[823, "reversed-throats"]], "bidirectional_throats": [[809, "bidirectional-throats"]], "rectangle": [[777, "rectangle"], [786, "rectangle"], [762, "rectangle"], [742, "rectangle"]], "cylinder": [[775, "cylinder"], [782, "cylinder"], [741, "cylinder"], [761, "cylinder"]], "match_histogram": [[799, "match-histogram"]], "cluster_number": [[810, "cluster-number"]], "distance_to_furthest_neighbor": [[814, "distance-to-furthest-neighbor"]], "from_neighbor_pores": [[793, "from-neighbor-pores"], [768, "from-neighbor-pores"], [764, "from-neighbor-pores"]], "clip": [[789, "clip"]], "extrusion": [[776, "extrusion"], [783, "extrusion"]], "mix_and_match": [[843, "mix-and-match"]], "fraction": [[792, "fraction"]], "gas_pure_TRC": [[839, "gas-pure-trc"]], "generic_distribution": [[769, "generic-distribution"], [795, "generic-distribution"], [717, "generic-distribution"]], "gas_mixture_whz": [[858, "gas-mixture-whz"]], "pore_to_pore": [[779, "pore-to-pore"]], "diffusivity": [[833, "module-openpnm.models.phase.diffusivity"]], "liquid_pure_gismr": [[861, "liquid-pure-gismr"]], "mole_summation": [[848, "mole-summation"]], "ideal_gas": [[828, "ideal-gas"]], "mixing_rule": [[847, "mixing-rule"]], "liquid_mixture_wsd": [[854, "liquid-mixture-wsd"]], "liquid_mixture_COSTALD": [[829, "liquid-mixture-costald"]], "throat_volume": [[780, "module-openpnm.models.geometry.throat_volume"]], "Throat Volume Models": [[780, "throat-volume-models"]], "weibull": [[807, "weibull"], [772, "weibull"], [721, "weibull"]], "cuboid": [[781, "cuboid"], [774, "cuboid"], [760, "cuboid"], [740, "cuboid"]], "liquid_pure_bb": [[855, "liquid-pure-bb"]], "cluster_size": [[811, "cluster-size"]], "critical_props": [[826, "module-openpnm.models.phase.critical_props"]], "normal": [[800, "normal"], [770, "normal"], [719, "normal"]], "misc": [[787, "module-openpnm.models.misc"], [842, "module-openpnm.models.phase.misc"]], "Miscellaneous": [[787, "miscellaneous"]], "from_component": [[846, "from-component"]], "mixtures": [[845, "module-openpnm.models.phase.mixtures"]], "partition_coefficient": [[851, "module-openpnm.models.phase.partition_coefficient"]], "liquid_mixture_tc": [[836, "liquid-mixture-tc"]], "pendular_ring": [[785, "pendular-ring"]], "throat_vector": [[778, "module-openpnm.models.geometry.throat_vector"]], "Throat Vector Model": [[778, "throat-vector-model"]], "gas_mixture_yweighted": [[838, "gas-mixture-yweighted"]], "gas_mixture_ce": [[834, "gas-mixture-ce"]], "density": [[827, "module-openpnm.models.phase.density"]], "gaseous_species_in_water": [[852, "gaseous-species-in-water"]], "thermal_conductivity": [[857, "module-openpnm.models.phase.thermal_conductivity"]], "chemicals_wrapper": [[825, "chemicals-wrapper"]], "throat_surface_area": [[773, "module-openpnm.models.geometry.throat_surface_area"]], "Throat Surface Area Models": [[773, "throat-surface-area-models"]], "liquid_pure_COSTALD": [[830, "liquid-pure-costald"]], "from_neighbor_throats": [[794, "from-neighbor-throats"], [716, "from-neighbor-throats"]], "liquid_pure_sr": [[862, "liquid-pure-sr"]], "summation": [[806, "summation"]], "constant": [[790, "constant"]], "product": [[803, "product"]], "mass_to_molar": [[831, "mass-to-molar"]], "generic_function": [[796, "generic-function"]], "looped_throats": [[821, "looped-throats"]], "salinity": [[850, "salinity"]], "isolated_pores": [[820, "isolated-pores"]], "heat_capacity": [[837, "module-openpnm.models.phase.heat_capacity"]], "normalize": [[801, "normalize"]], "lens": [[784, "lens"]], "blank": [[788, "blank"]], "duplicate_throats": [[817, "duplicate-throats"]], "polynomial": [[802, "polynomial"]], "sphere": [[731, "sphere"], [709, "sphere"], [725, "sphere"]], "spheres_and_cylinders": [[744, "spheres-and-cylinders"], [672, "spheres-and-cylinders"], [756, "spheres-and-cylinders"], [687, "spheres-and-cylinders"], [702, "spheres-and-cylinders"], [647, "spheres-and-cylinders"]], "circle": [[706, "circle"], [723, "circle"], [728, "circle"]], "hybrid_trapezoids_and_rectangles": [[696, "hybrid-trapezoids-and-rectangles"], [681, "hybrid-trapezoids-and-rectangles"], [751, "hybrid-trapezoids-and-rectangles"], [667, "hybrid-trapezoids-and-rectangles"]], "cones_and_cylinders": [[692, "cones-and-cylinders"], [677, "cones-and-cylinders"], [747, "cones-and-cylinders"], [644, "cones-and-cylinders"], [663, "cones-and-cylinders"]], "largest_sphere": [[718, "largest-sphere"]], "cube": [[724, "cube"], [708, "cube"], [729, "cube"]], "hybrid_cones_and_cylinders": [[679, "hybrid-cones-and-cylinders"], [694, "hybrid-cones-and-cylinders"], [749, "hybrid-cones-and-cylinders"], [665, "hybrid-cones-and-cylinders"]], "pore_coords": [[738, "pore-coords"]], "mason_morrow": [[736, "mason-morrow"]], "hybrid_pyramids_and_cuboids": [[750, "hybrid-pyramids-and-cuboids"], [695, "hybrid-pyramids-and-cuboids"], [680, "hybrid-pyramids-and-cuboids"], [666, "hybrid-pyramids-and-cuboids"]], "ncylinders_in_series": [[700, "ncylinders-in-series"], [685, "ncylinders-in-series"]], "pore_cross_sectional_area": [[705, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "Pore Cross-sectional Area Models": [[705, "pore-cross-sectional-area-models"]], "pore_size": [[714, "module-openpnm.models.geometry.pore_size"]], "Pore Size Models": [[714, "pore-size-models"]], "square": [[710, "square"], [726, "square"], [732, "square"]], "spatially_correlated": [[713, "spatially-correlated"]], "circles_and_rectangles": [[676, "circles-and-rectangles"], [746, "circles-and-rectangles"], [691, "circles-and-rectangles"], [662, "circles-and-rectangles"], [643, "circles-and-rectangles"]], "pore_seed": [[711, "module-openpnm.models.geometry.pore_seed"]], "Pore Seed Models": [[711, "pore-seed-models"]], "intersecting_cones": [[682, "intersecting-cones"], [697, "intersecting-cones"], [752, "intersecting-cones"], [668, "intersecting-cones"]], "jenkins_rao": [[735, "jenkins-rao"]], "cubes_and_cuboids": [[748, "cubes-and-cuboids"], [693, "cubes-and-cuboids"], [678, "cubes-and-cuboids"], [645, "cubes-and-cuboids"], [664, "cubes-and-cuboids"]], "pyramids_and_cuboids": [[686, "pyramids-and-cuboids"], [701, "pyramids-and-cuboids"], [755, "pyramids-and-cuboids"], [671, "pyramids-and-cuboids"], [646, "pyramids-and-cuboids"]], "throat_perimeter": [[759, "module-openpnm.models.geometry.throat_perimeter"]], "Throat Perimeter Models": [[759, "throat-perimeter-models"]], "squares_and_rectangles": [[673, "squares-and-rectangles"], [688, "squares-and-rectangles"], [703, "squares-and-rectangles"], [757, "squares-and-rectangles"], [648, "squares-and-rectangles"]], "cone": [[707, "cone"]], "throat_length": [[745, "module-openpnm.models.geometry.throat_length"]], "Throat Length Models": [[745, "throat-length-models"]], "throat_endpoints": [[743, "module-openpnm.models.geometry.throat_endpoints"]], "intersecting_pyramids": [[698, "intersecting-pyramids"], [683, "intersecting-pyramids"], [753, "intersecting-pyramids"], [669, "intersecting-pyramids"]], "intersecting_trapezoids": [[754, "intersecting-trapezoids"], [699, "intersecting-trapezoids"], [684, "intersecting-trapezoids"], [670, "intersecting-trapezoids"]], "effective": [[730, "effective"]], "throat_capillary_shape_factor": [[733, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "Throat Capillary Shape Factor Models": [[733, "throat-capillary-shape-factor-models"]], "equivalent_diameter": [[715, "equivalent-diameter"], [767, "equivalent-diameter"]], "trapezoids_and_rectangles": [[689, "trapezoids-and-rectangles"], [674, "trapezoids-and-rectangles"], [758, "trapezoids-and-rectangles"], [704, "trapezoids-and-rectangles"], [649, "trapezoids-and-rectangles"]], "diffusive_size_factors": [[675, "module-openpnm.models.geometry.diffusive_size_factors"]], "Diffusive Size Factors Models": [[675, "diffusive-size-factors-models"]], "throat_cross_sectional_area": [[739, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "Throat Cross-sectional Area Models": [[739, "throat-cross-sectional-area-models"]], "compactness": [[734, "compactness"]], "throat_seed": [[763, "module-openpnm.models.geometry.throat_seed"]], "Throat Seed Models": [[763, "throat-seed-models"]], "pore_surface_area": [[722, "module-openpnm.models.geometry.pore_surface_area"]], "Pore Surface Area Models": [[722, "pore-surface-area-models"]], "throat_centroid": [[737, "module-openpnm.models.geometry.throat_centroid"]], "Throat Centroid Model": [[737, "throat-centroid-model"]], "pore_volume": [[727, "module-openpnm.models.geometry.pore_volume"]], "Pore Volume Models": [[727, "pore-volume-models"]], "throat_size": [[766, "module-openpnm.models.geometry.throat_size"]], "Throat Size Models": [[766, "throat-size-models"]], "hydraulic_size_factors": [[690, "module-openpnm.models.geometry.hydraulic_size_factors"]], "Hydraulic Size Factors Models": [[690, "hydraulic-size-factors-models"]], "network_from_networkx": [[620, "network-from-networkx"]], "network_to_stl": [[631, "network-to-stl"]], "models": [[640, "module-openpnm.models"]], "Collection of pore-scale models": [[640, "collection-of-pore-scale-models"]], "project_to_pandas": [[636, "project-to-pandas"]], "network_from_jsongraph": [[618, "network-from-jsongraph"]], "Integrator": [[613, "integrator"]], "air": [[652, "air"]], "network_to_jsongraph": [[626, "network-to-jsongraph"]], "print_hdf5": [[632, "print-hdf5"]], "geometry": [[642, "module-openpnm.models.collections.geometry"], [660, "module-openpnm.models.geometry"]], "water": [[656, "water"]], "io": [[616, "module-openpnm.io"]], "Collection of functions for import/export of  data": [[616, "collection-of-functions-for-import-export-of-data"]], "network_to_networkx": [[627, "network-to-networkx"]], "network_from_porespy": [[622, "network-from-porespy"]], "dependency_list": [[595, "dependency-list"]], "Network Models Collections": [[650, "network-models-collections"]], "network_from_csv": [[617, "network-from-csv"]], "network_to_pandas": [[628, "network-to-pandas"]], "ScipyRK45": [[614, "scipyrk45"]], "project_to_hdf5": [[635, "project-to-hdf5"]], "mercury": [[655, "mercury"]], "network_to_salome": [[630, "network-to-salome"]], "integrators": [[612, "module-openpnm.integrators"]], "Collection of ODE integrators for transient simulations": [[612, "collection-of-ode-integrators-for-transient-simulations"]], "project_to_vtk": [[638, "project-to-vtk"]], "project_to_paraview": [[637, "project-to-paraview"]], "Geometry": [[660, "id1"], [8, "geometry"], [6, "geometry"]], "ModelsDict": [[591, "modelsdict"]], "standard": [[659, "standard"]], "project_to_dict": [[634, "project-to-dict"]], "network_to_pergeos": [[629, "network-to-pergeos"]], "network_from_pergeos": [[621, "network-from-pergeos"]], "dependency_map": [[596, "dependency-map"]], "network_from_marock": [[619, "network-from-marock"]], "liquid": [[654, "module-openpnm.models.collections.phase.liquid"]], "basic": [[658, "basic"]], "conduit_lengths": [[661, "module-openpnm.models.geometry.conduit_lengths"]], "Conduit Lengths Models": [[661, "conduit-lengths-models"]], "network_to_csv": [[625, "network-to-csv"]], "dependency_graph": [[594, "dependency-graph"]], "collections": [[641, "module-openpnm.models.collections"]], "network_from_statoil": [[623, "network-from-statoil"]], "network_to_comsol": [[624, "network-to-comsol"]], "ModelsMixin2": [[606, "modelsmixin2"]], "ModelWrapper": [[578, "modelwrapper"]], "gas": [[653, "module-openpnm.models.collections.phase.gas"]], "project_to_xdmf": [[639, "project-to-xdmf"]], "project_to_csv": [[633, "project-to-csv"]], "ParserMixin": [[611, "parsermixin"]], "Domain": [[542, "domain"]], "LabelMixin": [[570, "labelmixin"]], "Base2": [[525, "base2"]], "Transport": [[492, "transport"]], "core": [[524, "module-openpnm.core"]], "Main classes of OpenPNM": [[524, "main-classes-of-openpnm"]], "The Base class": [[524, "the-base-class"]], "The ModelsMixin class": [[524, "the-modelsmixin-class"]], "TransientIonicConduction": [[426, "transientionicconduction"]], "TransientReactiveTransport": [[459, "transientreactivetransport"]], "TransientFickianDiffusion": [[393, "transientfickiandiffusion"]], "TransientAdvectionDiffusion": [[359, "transientadvectiondiffusion"]], "ReactiveTransport": [[293, "reactivetransport"]], "set_outflow_BC": [[383, "set-outflow-bc"], [61, "set-outflow-bc"]], "StokesFlow": [[326, "stokesflow"]], "IonicConduction": [[227, "ionicconduction"]], "InvasionPercolation": [[195, "invasionpercolation"]], "OhmicConduction": [[260, "ohmicconduction"]], "Available Matrix Solvers": [[18, "available-matrix-solvers"]], "algorithms": [[36, "module-openpnm.algorithms"]], "Algorithm": [[71, "algorithm"]], "Predicting Formation Factor": [[9, "predicting-formation-factor"]], "Create Network": [[9, "create-network"]], "Create Phase": [[9, "create-phase"]], "Apply Fickian Diffusion": [[9, "apply-fickian-diffusion"]], "Visualize Results": [[9, "visualize-results"]], "Calculate Formation Factor": [[9, "calculate-formation-factor"]], "Assigning Geometric Properties": [[28, "assigning-geometric-properties"]], "Manually Calculating Properties": [[28, "manually-calculating-properties"]], "Adding pore and throat sizes from scipy.stats distributions": [[28, "adding-pore-and-throat-sizes-from-scipy-stats-distributions"]], "Computing throat length": [[28, "computing-throat-length"]], "Computing pore surface areas": [[28, "computing-pore-surface-areas"]], "Using Pore-scale Models from the Library": [[28, "using-pore-scale-models-from-the-library"]], "Using Predefined Collections of Models": [[28, "using-predefined-collections-of-models"]], "Customizing Models by Overwriting Them or Their Arguments": [[28, "customizing-models-by-overwriting-them-or-their-arguments"]], "Introduction to the Dependency Handler": [[28, "introduction-to-the-dependency-handler"]], "Transient Transport": [[23, "transient-transport"]], "The Workspace and Projects": [[17, "the-workspace-and-projects"]], "Usage of Projects and Workspace": [[17, "usage-of-projects-and-workspace"]], "Workspace is a Singleton": [[17, "workspace-is-a-singleton"]], "One Network per Project": [[17, "one-network-per-project"]], "Explanation of Units": [[20, "explanation-of-units"]], "Use of absolute pressure vs gauge pressure": [[20, "use-of-absolute-pressure-vs-gauge-pressure"]], "Unit conversion packages and challenges": [[20, "unit-conversion-packages-and-challenges"]], "Creating Phases": [[30, "creating-phases"]], "Part 1: The Phase class": [[30, "part-1-the-phase-class"]], "Direct assignment of a constant value": [[30, "direct-assignment-of-a-constant-value"]], "Using a built-in model": [[30, "using-a-built-in-model"]], "Using a water-specific model": [[30, "using-a-water-specific-model"]], "Writing your own custom model": [[30, "writing-your-own-custom-model"]], "Specific Classes for Common Fluids": [[30, "specific-classes-for-common-fluids"]], "Part 2: Using Species and Mixtures": [[30, "part-2-using-species-and-mixtures"]], "Pure Species": [[30, "pure-species"]], "Gas and Liquid Species": [[30, "gas-and-liquid-species"]], "Gas and Liquid Mixtures": [[30, "gas-and-liquid-mixtures"]], "Getting and Setting Compositions": [[30, "getting-and-setting-compositions"]], "Exploring Features of the Mixture Objects": [[30, "exploring-features-of-the-mixture-objects"]], "Adding and Removing Species": [[30, "adding-and-removing-species"]], "The info Attribute": [[30, "the-info-attribute"]], "Get component mole fractions": [[30, "get-component-mole-fractions"]], "The components Attribute": [[30, "the-components-attribute"]], "Using get_comp_vals": [[30, "using-get-comp-vals"]], "Checking consistency with check_mixture_health": [[30, "checking-consistency-with-check-mixture-health"]], "Retrieving Species Properties": [[30, "retrieving-species-properties"]], "Using the wildcard (*) syntax": [[30, "using-the-wildcard-syntax"]], "Simulating Invasion": [[32, "simulating-invasion"]], "Manual Implementation of the Drainge Process": [[32, "manual-implementation-of-the-drainge-process"]], "Using the Drainage Algorithm": [[32, "using-the-drainage-algorithm"]], "Invasion Percolation": [[32, "invasion-percolation"]], "Manual Implementation of the Invasion Percolation Process": [[32, "manual-implementation-of-the-invasion-percolation-process"]], "Using the InvasionPercolation Algorithm": [[32, "using-the-invasionpercolation-algorithm"]], "Generating Networks and Quick Visualization": [[25, "generating-networks-and-quick-visualization"]], "CubicTemplates": [[25, "cubictemplates"]], "Other Cubic Lattices": [[25, "other-cubic-lattices"]], "Random Network: Delaunay and Voronoi Tessellations": [[25, "random-network-delaunay-and-voronoi-tessellations"]], "Imported Networks": [[25, "imported-networks"]], "Using Labels and Defining Domains": [[29, "using-labels-and-defining-domains"]], "Using Predefined Labels": [[29, "using-predefined-labels"]], "Using the mode argument in the pores and throats methods": [[29, "using-the-mode-argument-in-the-pores-and-throats-methods"]], "Defining Custom Labels": [[29, "defining-custom-labels"]], "Creating Boolean Masks": [[29, "creating-boolean-masks"]], "Using set_label": [[29, "using-set-label"]], "Using the @ sytax to read and write data": [[29, "using-the-sytax-to-read-and-write-data"]], "Defining Subdomains": [[29, "defining-subdomains"]], "Defining and Changing Subdomain Locations": [[29, "defining-and-changing-subdomain-locations"]], "Mixing Full Domain and Subdomain Models": [[29, "mixing-full-domain-and-subdomain-models"]], "Mixing Many Subdomains of Different Shape": [[29, "mixing-many-subdomains-of-different-shape"]], "Storage of Network Data and Topology": [[26, "storage-of-network-data-and-topology"]], "Spreadsheet Analogy": [[26, "spreadsheet-analogy"]], "Rules to Maintain Data Integrity": [[26, "rules-to-maintain-data-integrity"]], "All Values are Converted to Numpy Arrays": [[26, "all-values-are-converted-to-numpy-arrays"]], "Dictionary Keys Must Start With \u2018pore\u2019 or \u2018throat\u2019": [[26, "dictionary-keys-must-start-with-pore-or-throat"]], "Any Scalars are Expanded to a Full-Length Vector": [[26, "any-scalars-are-expanded-to-a-full-length-vector"]], "Nested Dictionary Names are Allowed": [[26, "nested-dictionary-names-are-allowed"]], "Boolean Arrays are Treated as Labels, Numerical Arrays are Treated as Properties": [[26, "boolean-arrays-are-treated-as-labels-numerical-arrays-are-treated-as-properties"]], "Dictionary Keys with a Leading Underscore are Hidden": [[26, "dictionary-keys-with-a-leading-underscore-are-hidden"]], "The param prefix": [[26, "the-param-prefix"]], "Representing Topology": [[26, "representing-topology"]], "Adjacency Matrices: Dense vs Sparse": [[26, "adjacency-matrices-dense-vs-sparse"]], "The conduit prefix": [[26, "the-conduit-prefix"]], "Finding Effective Diffusivity and Tortuosity of a Network": [[8, "finding-effective-diffusivity-and-tortuosity-of-a-network"]], "Performing Fickian Diffusion": [[8, "performing-fickian-diffusion"]], "Visualize the Results": [[8, "visualize-the-results"]], "Calculate the Effective Diffusivity": [[8, "calculate-the-effective-diffusivity"]], "Calculate the Tortuosity": [[8, "calculate-the-tortuosity"]], "Obtaining Relative Diffusivity Curves": [[12, "obtaining-relative-diffusivity-curves"]], "Create network and phases": [[12, "create-network-and-phases"], [13, "create-network-and-phases"]], "Apply ordinary percolation": [[12, "apply-ordinary-percolation"]], "Saturation and rate functions": [[12, "saturation-and-rate-functions"]], "Define multiphase conductance": [[12, "define-multiphase-conductance"], [13, "define-multiphase-conductance"]], "Calculate relative diffusivities": [[12, "calculate-relative-diffusivities"]], "Simulating Single Phase Transport": [[31, "simulating-single-phase-transport"]], "Define Phase Viscosity": [[31, "define-phase-viscosity"]], "Basic Conductance Calculation": [[31, "basic-conductance-calculation"]], "Create Algorithm Object": [[31, "create-algorithm-object"]], "Assign Boundary Conditions": [[31, "assign-boundary-conditions"]], "Rigorous Conductance Calculation": [[31, "rigorous-conductance-calculation"]], "Manual Method": [[31, "manual-method"]], "Pore-Scale Model Method": [[31, "pore-scale-model-method"]], "Pore-Scale Models": [[15, "pore-scale-models"]], "10 Steps to Learn OpenPNM": [[3, "steps-to-learn-openpnm"]], "Applications": [[0, "applications"]], "Network Representation, Queries, and Manipulation": [[27, "network-representation-queries-and-manipulation"]], "The Adjacency Matrix": [[27, "the-adjacency-matrix"]], "COO Sparse Format": [[27, "coo-sparse-format"]], "Other Sparse Formats": [[27, "other-sparse-formats"]], "The Incidence Matrix": [[27, "the-incidence-matrix"]], "Using OpenPNM Methods Query Methods": [[27, "using-openpnm-methods-query-methods"]], "Find Neighoring Pores": [[27, "find-neighoring-pores"]], "Find Neighboring Throats": [[27, "find-neighboring-throats"]], "Find Connecting Throats": [[27, "find-connecting-throats"]], "Find Connected Pores": [[27, "find-connected-pores"]], "Removing Throats": [[27, "removing-throats"]], "Removing Pores": [[27, "removing-pores"]], "Adding Pores and Throats": [[27, "adding-pores-and-throats"]], "Examples": [[1, "examples"]], "Predicting relative permeability": [[13, "predicting-relative-permeability"]], "Apply invasion percolation": [[13, "apply-invasion-percolation"]], "Occupancy and permeability functions": [[13, "occupancy-and-permeability-functions"]], "Calculate relative permeabilities": [[13, "calculate-relative-permeabilities"]], "Size Factors and Transport Conductance": [[22, "size-factors-and-transport-conductance"]], "Conductance in pore network models": [[22, "conductance-in-pore-network-models"]], "Conductance of a single conduit": [[22, "conductance-of-a-single-conduit"]], "Size factors vs. shape factors": [[22, "size-factors-vs-shape-factors"]], "Built-in size factor models in OpenPNM": [[22, "built-in-size-factor-models-in-openpnm"]], "Deriving the size factor for arbitrary-shaped pores and throats": [[22, "deriving-the-size-factor-for-arbitrary-shaped-pores-and-throats"]], "Diffusive size factor": [[22, "diffusive-size-factor"]], "Hydraulic size factor": [[22, "hydraulic-size-factor"]], "Conduit vs. element size factor": [[22, "conduit-vs-element-size-factor"]], "Simulating Mercury Intrusion Porosimetry Curves": [[10, "simulating-mercury-intrusion-porosimetry-curves"]], "Add Geometry": [[10, "add-geometry"]], "Add Physics": [[10, "add-physics"]], "Perform Mercury Intrusion": [[10, "perform-mercury-intrusion"]], "Visualization options": [[33, "visualization-options"]], "Spyder": [[33, "spyder"]], "Interactive plots in Jupyter notebook": [[33, "interactive-plots-in-jupyter-notebook"]], "Paraview": [[33, "paraview"]], "Reference": [[2, "reference"]], "Predicting Porosity": [[11, "predicting-porosity"]], "Create a random cubic network": [[11, "create-a-random-cubic-network"], [5, "create-a-random-cubic-network"]], "Calculate void and bulk volume": [[11, "calculate-void-and-bulk-volume"]], "Discussions and Issues": [[11, "discussions-and-issues"]], "Domain volume:": [[11, "domain-volume"]], "Overlapping pores and throats:": [[11, "overlapping-pores-and-throats"]], "Extracted networks": [[11, "extracted-networks"]], "Void volume:": [[11, "void-volume"]], "Pore Network Modeling Framework in Python": [[34, "pore-network-modeling-framework-in-python"]], "What is OpenPNM? stars": [[34, "what-is-openpnm-stars"]], "How To Cite": [[34, "how-to-cite"]], "Citation": [[34, null]], "Settings Attribute Machinery": [[16, "settings-attribute-machinery"]], "Numerical Python Primer": [[24, "numerical-python-primer"]], "Python Lists: Flexible but Slow": [[24, "python-lists-flexible-but-slow"]], "Numpy ndarray: Optimized for Numerics": [[24, "numpy-ndarray-optimized-for-numerics"]], "Vectorization": [[24, "vectorization"]], "Methods versus Functions": [[24, "methods-versus-functions"]], "Dictionaries: Holding Things Together": [[24, "dictionaries-holding-things-together"]], "Subclassing dict": [[24, "subclassing-dict"]], "AdvectionDiffusion": [[37, "advectiondiffusion"]], "Predicting absolute permeability": [[5, "predicting-absolute-permeability"]], "Create phase object": [[5, "create-phase-object"]], "Apply Stokes flow": [[5, "apply-stokes-flow"]], "Calculate permeability": [[5, "calculate-permeability"]], "Predicting dispersion coefficient": [[7, "predicting-dispersion-coefficient"]], "Generating Network and phase": [[7, "generating-network-and-phase"]], "Defining Effective Pore Volume": [[7, "defining-effective-pore-volume"]], "Perform Stokes flow": [[7, "perform-stokes-flow"]], "Apply transient advection diffusion": [[7, "apply-transient-advection-diffusion"]], "Elution curve": [[7, "elution-curve"]], "Solving for the dispersion coefficient": [[7, "solving-for-the-dispersion-coefficient"]], "Basic Usage": [[4, "basic-usage"]], "Problem setup": [[4, "problem-setup"]], "Basic visualization": [[4, "basic-visualization"]], "Calculating permeability": [[4, "calculating-permeability"]], "Adjusting pore size distribution": [[4, "adjusting-pore-size-distribution"]], "Adjusting Pore Size Distributions": [[6, "adjusting-pore-size-distributions"]], "Adjusting Pore and Throat Sizes": [[6, "adjusting-pore-and-throat-sizes"]], "Using scipy.stats classes directly": [[6, "using-scipy-stats-classes-directly"]], "Using pre-defined models in OpenPNM": [[6, "using-pre-defined-models-in-openpnm"]], "Installation": [[35, "installation"]], "Installing the dev version": [[35, "installing-the-dev-version"]], "The easy way": [[35, "the-easy-way"]], "The hard (but correct) way": [[35, "the-hard-but-correct-way"]], "Where\u2019s my conda prompt?": [[35, "where-s-my-conda-prompt"]], "Windows": [[35, "windows"]], "Mac and Linux": [[35, "mac-and-linux"]], "Contibuted Examples": [[14, "contibuted-examples"]], "Reactive Transport": [[21, "reactive-transport"]], "Using the source term functionality in OpenPNM": [[21, "using-the-source-term-functionality-in-openpnm"]], "How the source-term functionality works": [[21, "how-the-source-term-functionality-works"]], "Steady State Transport": [[19, "steady-state-transport"]], "Creating the Coefficient Matrix": [[19, "creating-the-coefficient-matrix"]], "Applying Value and Rate Boundary Conditions": [[19, "applying-value-and-rate-boundary-conditions"]], "Solving the System of Equations": [[19, "solving-the-system-of-equations"]], "Sparse Matrices": [[19, "sparse-matrices"]]}, "indexentries": {"module": [[36, "module-openpnm.algorithms"], [524, "module-openpnm.core"], [612, "module-openpnm.integrators"], [616, "module-openpnm.io"], [640, "module-openpnm.models"], [641, "module-openpnm.models.collections"], [642, "module-openpnm.models.collections.geometry"], [650, "module-openpnm.models.collections.network"], [651, "module-openpnm.models.collections.phase"], [653, "module-openpnm.models.collections.phase.gas"], [654, "module-openpnm.models.collections.phase.liquid"], [657, "module-openpnm.models.collections.physics"], [660, "module-openpnm.models.geometry"], [661, "module-openpnm.models.geometry.conduit_lengths"], [675, "module-openpnm.models.geometry.diffusive_size_factors"], [690, "module-openpnm.models.geometry.hydraulic_size_factors"], [705, "module-openpnm.models.geometry.pore_cross_sectional_area"], [711, "module-openpnm.models.geometry.pore_seed"], [714, "module-openpnm.models.geometry.pore_size"], [722, "module-openpnm.models.geometry.pore_surface_area"], [727, "module-openpnm.models.geometry.pore_volume"], [733, "module-openpnm.models.geometry.throat_capillary_shape_factor"], [737, "module-openpnm.models.geometry.throat_centroid"], [739, "module-openpnm.models.geometry.throat_cross_sectional_area"], [743, "module-openpnm.models.geometry.throat_endpoints"], [745, "module-openpnm.models.geometry.throat_length"], [759, "module-openpnm.models.geometry.throat_perimeter"], [763, "module-openpnm.models.geometry.throat_seed"], [766, "module-openpnm.models.geometry.throat_size"], [773, "module-openpnm.models.geometry.throat_surface_area"], [778, "module-openpnm.models.geometry.throat_vector"], [780, "module-openpnm.models.geometry.throat_volume"], [787, "module-openpnm.models.misc"], [808, "module-openpnm.models.network"], [824, "module-openpnm.models.phase"], [826, "module-openpnm.models.phase.critical_props"], [827, "module-openpnm.models.phase.density"], [833, "module-openpnm.models.phase.diffusivity"], [837, "module-openpnm.models.phase.heat_capacity"], [842, "module-openpnm.models.phase.misc"], [845, "module-openpnm.models.phase.mixtures"], [851, "module-openpnm.models.phase.partition_coefficient"], [853, "module-openpnm.models.phase.surface_tension"], [857, "module-openpnm.models.phase.thermal_conductivity"], [864, "module-openpnm.models.phase.vapor_pressure"], [868, "module-openpnm.models.phase.viscosity"], [875, "module-openpnm.models.physics"], [876, "module-openpnm.models.physics.ad_dif_conductance"], [878, "module-openpnm.models.physics.capillary_pressure"], [881, "module-openpnm.models.physics.diffusive_conductance"], [886, "module-openpnm.models.physics.electrical_conductance"], [889, "module-openpnm.models.physics.hydraulic_conductance"], [893, "module-openpnm.models.physics.meniscus"], [897, "module-openpnm.models.physics.multiphase"], [900, "module-openpnm.models.physics.source_terms"], [911, "module-openpnm.models.physics.thermal_conductance"], [914, "module-openpnm.network"], [1264, "module-openpnm.phase"], [1664, "module-openpnm.solvers"], [1679, "module-openpnm.topotools"], [1729, "module-openpnm.utils"], [1877, "module-openpnm"]], "openpnm.algorithms": [[36, "module-openpnm.algorithms"]], "advectiondiffusion (class in openpnm.algorithms)": [[37, "openpnm.algorithms.AdvectionDiffusion"]], "clear() (advectiondiffusion method)": [[38, "openpnm.algorithms.AdvectionDiffusion.clear"]], "clear_bcs() (advectiondiffusion method)": [[39, "openpnm.algorithms.AdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (advectiondiffusion method)": [[40, "openpnm.algorithms.AdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (advectiondiffusion method)": [[41, "openpnm.algorithms.AdvectionDiffusion.clear_value_BCs"]], "copy() (advectiondiffusion method)": [[42, "openpnm.algorithms.AdvectionDiffusion.copy"]], "filter_by_label() (advectiondiffusion method)": [[43, "openpnm.algorithms.AdvectionDiffusion.filter_by_label"]], "fromkeys() (advectiondiffusion method)": [[44, "openpnm.algorithms.AdvectionDiffusion.fromkeys"]], "get() (advectiondiffusion method)": [[45, "openpnm.algorithms.AdvectionDiffusion.get"]], "get_conduit_data() (advectiondiffusion method)": [[46, "openpnm.algorithms.AdvectionDiffusion.get_conduit_data"]], "interpolate_data() (advectiondiffusion method)": [[47, "openpnm.algorithms.AdvectionDiffusion.interpolate_data"]], "items() (advectiondiffusion method)": [[48, "openpnm.algorithms.AdvectionDiffusion.items"]], "keys() (advectiondiffusion method)": [[49, "openpnm.algorithms.AdvectionDiffusion.keys"]], "labels() (advectiondiffusion method)": [[50, "openpnm.algorithms.AdvectionDiffusion.labels"]], "num_pores() (advectiondiffusion method)": [[51, "openpnm.algorithms.AdvectionDiffusion.num_pores"]], "num_throats() (advectiondiffusion method)": [[52, "openpnm.algorithms.AdvectionDiffusion.num_throats"]], "pop() (advectiondiffusion method)": [[53, "openpnm.algorithms.AdvectionDiffusion.pop"]], "popitem() (advectiondiffusion method)": [[54, "openpnm.algorithms.AdvectionDiffusion.popitem"]], "pores() (advectiondiffusion method)": [[55, "openpnm.algorithms.AdvectionDiffusion.pores"]], "props() (advectiondiffusion method)": [[56, "openpnm.algorithms.AdvectionDiffusion.props"]], "rate() (advectiondiffusion method)": [[57, "openpnm.algorithms.AdvectionDiffusion.rate"]], "run() (advectiondiffusion method)": [[58, "openpnm.algorithms.AdvectionDiffusion.run"]], "set_bc() (advectiondiffusion method)": [[59, "openpnm.algorithms.AdvectionDiffusion.set_BC"]], "set_label() (advectiondiffusion method)": [[60, "openpnm.algorithms.AdvectionDiffusion.set_label"]], "set_outflow_bc() (advectiondiffusion method)": [[61, "openpnm.algorithms.AdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (advectiondiffusion method)": [[62, "openpnm.algorithms.AdvectionDiffusion.set_rate_BC"]], "set_source() (advectiondiffusion method)": [[63, "openpnm.algorithms.AdvectionDiffusion.set_source"]], "set_value_bc() (advectiondiffusion method)": [[64, "openpnm.algorithms.AdvectionDiffusion.set_value_BC"]], "setdefault() (advectiondiffusion method)": [[65, "openpnm.algorithms.AdvectionDiffusion.setdefault"]], "throats() (advectiondiffusion method)": [[66, "openpnm.algorithms.AdvectionDiffusion.throats"]], "to_indices() (advectiondiffusion method)": [[67, "openpnm.algorithms.AdvectionDiffusion.to_indices"]], "to_mask() (advectiondiffusion method)": [[68, "openpnm.algorithms.AdvectionDiffusion.to_mask"]], "update() (advectiondiffusion method)": [[69, "openpnm.algorithms.AdvectionDiffusion.update"]], "values() (advectiondiffusion method)": [[70, "openpnm.algorithms.AdvectionDiffusion.values"]], "algorithm (class in openpnm.algorithms)": [[71, "openpnm.algorithms.Algorithm"]], "clear() (algorithm method)": [[72, "openpnm.algorithms.Algorithm.clear"]], "clear_bcs() (algorithm method)": [[73, "openpnm.algorithms.Algorithm.clear_BCs"]], "copy() (algorithm method)": [[74, "openpnm.algorithms.Algorithm.copy"]], "filter_by_label() (algorithm method)": [[75, "openpnm.algorithms.Algorithm.filter_by_label"]], "fromkeys() (algorithm method)": [[76, "openpnm.algorithms.Algorithm.fromkeys"]], "get() (algorithm method)": [[77, "openpnm.algorithms.Algorithm.get"]], "get_conduit_data() (algorithm method)": [[78, "openpnm.algorithms.Algorithm.get_conduit_data"]], "interpolate_data() (algorithm method)": [[79, "openpnm.algorithms.Algorithm.interpolate_data"]], "items() (algorithm method)": [[80, "openpnm.algorithms.Algorithm.items"]], "keys() (algorithm method)": [[81, "openpnm.algorithms.Algorithm.keys"]], "labels() (algorithm method)": [[82, "openpnm.algorithms.Algorithm.labels"]], "num_pores() (algorithm method)": [[83, "openpnm.algorithms.Algorithm.num_pores"]], "num_throats() (algorithm method)": [[84, "openpnm.algorithms.Algorithm.num_throats"]], "pop() (algorithm method)": [[85, "openpnm.algorithms.Algorithm.pop"]], "popitem() (algorithm method)": [[86, "openpnm.algorithms.Algorithm.popitem"]], "pores() (algorithm method)": [[87, "openpnm.algorithms.Algorithm.pores"]], "props() (algorithm method)": [[88, "openpnm.algorithms.Algorithm.props"]], "set_bc() (algorithm method)": [[89, "openpnm.algorithms.Algorithm.set_BC"]], "set_label() (algorithm method)": [[90, "openpnm.algorithms.Algorithm.set_label"]], "setdefault() (algorithm method)": [[91, "openpnm.algorithms.Algorithm.setdefault"]], "throats() (algorithm method)": [[92, "openpnm.algorithms.Algorithm.throats"]], "to_indices() (algorithm method)": [[93, "openpnm.algorithms.Algorithm.to_indices"]], "to_mask() (algorithm method)": [[94, "openpnm.algorithms.Algorithm.to_mask"]], "update() (algorithm method)": [[95, "openpnm.algorithms.Algorithm.update"]], "values() (algorithm method)": [[96, "openpnm.algorithms.Algorithm.values"]], "drainage (class in openpnm.algorithms)": [[97, "openpnm.algorithms.Drainage"]], "apply_trapping() (drainage method)": [[98, "openpnm.algorithms.Drainage.apply_trapping"]], "clear() (drainage method)": [[99, "openpnm.algorithms.Drainage.clear"]], "clear_bcs() (drainage method)": [[100, "openpnm.algorithms.Drainage.clear_BCs"]], "copy() (drainage method)": [[101, "openpnm.algorithms.Drainage.copy"]], "filter_by_label() (drainage method)": [[102, "openpnm.algorithms.Drainage.filter_by_label"]], "fromkeys() (drainage method)": [[103, "openpnm.algorithms.Drainage.fromkeys"]], "get() (drainage method)": [[104, "openpnm.algorithms.Drainage.get"]], "get_conduit_data() (drainage method)": [[105, "openpnm.algorithms.Drainage.get_conduit_data"]], "interpolate_data() (drainage method)": [[106, "openpnm.algorithms.Drainage.interpolate_data"]], "items() (drainage method)": [[107, "openpnm.algorithms.Drainage.items"]], "keys() (drainage method)": [[108, "openpnm.algorithms.Drainage.keys"]], "labels() (drainage method)": [[109, "openpnm.algorithms.Drainage.labels"]], "num_pores() (drainage method)": [[110, "openpnm.algorithms.Drainage.num_pores"]], "num_throats() (drainage method)": [[111, "openpnm.algorithms.Drainage.num_throats"]], "pc_curve() (drainage method)": [[112, "openpnm.algorithms.Drainage.pc_curve"]], "pop() (drainage method)": [[113, "openpnm.algorithms.Drainage.pop"]], "popitem() (drainage method)": [[114, "openpnm.algorithms.Drainage.popitem"]], "pores() (drainage method)": [[115, "openpnm.algorithms.Drainage.pores"]], "props() (drainage method)": [[116, "openpnm.algorithms.Drainage.props"]], "reset() (drainage method)": [[117, "openpnm.algorithms.Drainage.reset"]], "run() (drainage method)": [[118, "openpnm.algorithms.Drainage.run"]], "set_bc() (drainage method)": [[119, "openpnm.algorithms.Drainage.set_BC"]], "set_inlet_bc() (drainage method)": [[120, "openpnm.algorithms.Drainage.set_inlet_BC"]], "set_label() (drainage method)": [[121, "openpnm.algorithms.Drainage.set_label"]], "set_outlet_bc() (drainage method)": [[122, "openpnm.algorithms.Drainage.set_outlet_BC"]], "setdefault() (drainage method)": [[123, "openpnm.algorithms.Drainage.setdefault"]], "throats() (drainage method)": [[124, "openpnm.algorithms.Drainage.throats"]], "to_indices() (drainage method)": [[125, "openpnm.algorithms.Drainage.to_indices"]], "to_mask() (drainage method)": [[126, "openpnm.algorithms.Drainage.to_mask"]], "update() (drainage method)": [[127, "openpnm.algorithms.Drainage.update"]], "values() (drainage method)": [[128, "openpnm.algorithms.Drainage.values"]], "fickiandiffusion (class in openpnm.algorithms)": [[129, "openpnm.algorithms.FickianDiffusion"]], "clear() (fickiandiffusion method)": [[130, "openpnm.algorithms.FickianDiffusion.clear"]], "clear_bcs() (fickiandiffusion method)": [[131, "openpnm.algorithms.FickianDiffusion.clear_BCs"]], "clear_rate_bcs() (fickiandiffusion method)": [[132, "openpnm.algorithms.FickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (fickiandiffusion method)": [[133, "openpnm.algorithms.FickianDiffusion.clear_value_BCs"]], "copy() (fickiandiffusion method)": [[134, "openpnm.algorithms.FickianDiffusion.copy"]], "filter_by_label() (fickiandiffusion method)": [[135, "openpnm.algorithms.FickianDiffusion.filter_by_label"]], "fromkeys() (fickiandiffusion method)": [[136, "openpnm.algorithms.FickianDiffusion.fromkeys"]], "get() (fickiandiffusion method)": [[137, "openpnm.algorithms.FickianDiffusion.get"]], "get_conduit_data() (fickiandiffusion method)": [[138, "openpnm.algorithms.FickianDiffusion.get_conduit_data"]], "interpolate_data() (fickiandiffusion method)": [[139, "openpnm.algorithms.FickianDiffusion.interpolate_data"]], "items() (fickiandiffusion method)": [[140, "openpnm.algorithms.FickianDiffusion.items"]], "keys() (fickiandiffusion method)": [[141, "openpnm.algorithms.FickianDiffusion.keys"]], "labels() (fickiandiffusion method)": [[142, "openpnm.algorithms.FickianDiffusion.labels"]], "num_pores() (fickiandiffusion method)": [[143, "openpnm.algorithms.FickianDiffusion.num_pores"]], "num_throats() (fickiandiffusion method)": [[144, "openpnm.algorithms.FickianDiffusion.num_throats"]], "pop() (fickiandiffusion method)": [[145, "openpnm.algorithms.FickianDiffusion.pop"]], "popitem() (fickiandiffusion method)": [[146, "openpnm.algorithms.FickianDiffusion.popitem"]], "pores() (fickiandiffusion method)": [[147, "openpnm.algorithms.FickianDiffusion.pores"]], "props() (fickiandiffusion method)": [[148, "openpnm.algorithms.FickianDiffusion.props"]], "rate() (fickiandiffusion method)": [[149, "openpnm.algorithms.FickianDiffusion.rate"]], "run() (fickiandiffusion method)": [[150, "openpnm.algorithms.FickianDiffusion.run"]], "set_bc() (fickiandiffusion method)": [[151, "openpnm.algorithms.FickianDiffusion.set_BC"]], "set_label() (fickiandiffusion method)": [[152, "openpnm.algorithms.FickianDiffusion.set_label"]], "set_rate_bc() (fickiandiffusion method)": [[153, "openpnm.algorithms.FickianDiffusion.set_rate_BC"]], "set_source() (fickiandiffusion method)": [[154, "openpnm.algorithms.FickianDiffusion.set_source"]], "set_value_bc() (fickiandiffusion method)": [[155, "openpnm.algorithms.FickianDiffusion.set_value_BC"]], "setdefault() (fickiandiffusion method)": [[156, "openpnm.algorithms.FickianDiffusion.setdefault"]], "throats() (fickiandiffusion method)": [[157, "openpnm.algorithms.FickianDiffusion.throats"]], "to_indices() (fickiandiffusion method)": [[158, "openpnm.algorithms.FickianDiffusion.to_indices"]], "to_mask() (fickiandiffusion method)": [[159, "openpnm.algorithms.FickianDiffusion.to_mask"]], "update() (fickiandiffusion method)": [[160, "openpnm.algorithms.FickianDiffusion.update"]], "values() (fickiandiffusion method)": [[161, "openpnm.algorithms.FickianDiffusion.values"]], "fourierconduction (class in openpnm.algorithms)": [[162, "openpnm.algorithms.FourierConduction"]], "clear() (fourierconduction method)": [[163, "openpnm.algorithms.FourierConduction.clear"]], "clear_bcs() (fourierconduction method)": [[164, "openpnm.algorithms.FourierConduction.clear_BCs"]], "clear_rate_bcs() (fourierconduction method)": [[165, "openpnm.algorithms.FourierConduction.clear_rate_BCs"]], "clear_value_bcs() (fourierconduction method)": [[166, "openpnm.algorithms.FourierConduction.clear_value_BCs"]], "copy() (fourierconduction method)": [[167, "openpnm.algorithms.FourierConduction.copy"]], "filter_by_label() (fourierconduction method)": [[168, "openpnm.algorithms.FourierConduction.filter_by_label"]], "fromkeys() (fourierconduction method)": [[169, "openpnm.algorithms.FourierConduction.fromkeys"]], "get() (fourierconduction method)": [[170, "openpnm.algorithms.FourierConduction.get"]], "get_conduit_data() (fourierconduction method)": [[171, "openpnm.algorithms.FourierConduction.get_conduit_data"]], "interpolate_data() (fourierconduction method)": [[172, "openpnm.algorithms.FourierConduction.interpolate_data"]], "items() (fourierconduction method)": [[173, "openpnm.algorithms.FourierConduction.items"]], "keys() (fourierconduction method)": [[174, "openpnm.algorithms.FourierConduction.keys"]], "labels() (fourierconduction method)": [[175, "openpnm.algorithms.FourierConduction.labels"]], "num_pores() (fourierconduction method)": [[176, "openpnm.algorithms.FourierConduction.num_pores"]], "num_throats() (fourierconduction method)": [[177, "openpnm.algorithms.FourierConduction.num_throats"]], "pop() (fourierconduction method)": [[178, "openpnm.algorithms.FourierConduction.pop"]], "popitem() (fourierconduction method)": [[179, "openpnm.algorithms.FourierConduction.popitem"]], "pores() (fourierconduction method)": [[180, "openpnm.algorithms.FourierConduction.pores"]], "props() (fourierconduction method)": [[181, "openpnm.algorithms.FourierConduction.props"]], "rate() (fourierconduction method)": [[182, "openpnm.algorithms.FourierConduction.rate"]], "run() (fourierconduction method)": [[183, "openpnm.algorithms.FourierConduction.run"]], "set_bc() (fourierconduction method)": [[184, "openpnm.algorithms.FourierConduction.set_BC"]], "set_label() (fourierconduction method)": [[185, "openpnm.algorithms.FourierConduction.set_label"]], "set_rate_bc() (fourierconduction method)": [[186, "openpnm.algorithms.FourierConduction.set_rate_BC"]], "set_source() (fourierconduction method)": [[187, "openpnm.algorithms.FourierConduction.set_source"]], "set_value_bc() (fourierconduction method)": [[188, "openpnm.algorithms.FourierConduction.set_value_BC"]], "setdefault() (fourierconduction method)": [[189, "openpnm.algorithms.FourierConduction.setdefault"]], "throats() (fourierconduction method)": [[190, "openpnm.algorithms.FourierConduction.throats"]], "to_indices() (fourierconduction method)": [[191, "openpnm.algorithms.FourierConduction.to_indices"]], "to_mask() (fourierconduction method)": [[192, "openpnm.algorithms.FourierConduction.to_mask"]], "update() (fourierconduction method)": [[193, "openpnm.algorithms.FourierConduction.update"]], "values() (fourierconduction method)": [[194, "openpnm.algorithms.FourierConduction.values"]], "invasionpercolation (class in openpnm.algorithms)": [[195, "openpnm.algorithms.InvasionPercolation"]], "apply_trapping() (invasionpercolation method)": [[196, "openpnm.algorithms.InvasionPercolation.apply_trapping"]], "clear() (invasionpercolation method)": [[197, "openpnm.algorithms.InvasionPercolation.clear"]], "clear_bcs() (invasionpercolation method)": [[198, "openpnm.algorithms.InvasionPercolation.clear_BCs"]], "copy() (invasionpercolation method)": [[199, "openpnm.algorithms.InvasionPercolation.copy"]], "filter_by_label() (invasionpercolation method)": [[200, "openpnm.algorithms.InvasionPercolation.filter_by_label"]], "fromkeys() (invasionpercolation method)": [[201, "openpnm.algorithms.InvasionPercolation.fromkeys"]], "get() (invasionpercolation method)": [[202, "openpnm.algorithms.InvasionPercolation.get"]], "get_conduit_data() (invasionpercolation method)": [[203, "openpnm.algorithms.InvasionPercolation.get_conduit_data"]], "interpolate_data() (invasionpercolation method)": [[204, "openpnm.algorithms.InvasionPercolation.interpolate_data"]], "items() (invasionpercolation method)": [[205, "openpnm.algorithms.InvasionPercolation.items"]], "keys() (invasionpercolation method)": [[206, "openpnm.algorithms.InvasionPercolation.keys"]], "labels() (invasionpercolation method)": [[207, "openpnm.algorithms.InvasionPercolation.labels"]], "num_pores() (invasionpercolation method)": [[208, "openpnm.algorithms.InvasionPercolation.num_pores"]], "num_throats() (invasionpercolation method)": [[209, "openpnm.algorithms.InvasionPercolation.num_throats"]], "pc_curve() (invasionpercolation method)": [[210, "openpnm.algorithms.InvasionPercolation.pc_curve"]], "pop() (invasionpercolation method)": [[211, "openpnm.algorithms.InvasionPercolation.pop"]], "popitem() (invasionpercolation method)": [[212, "openpnm.algorithms.InvasionPercolation.popitem"]], "pores() (invasionpercolation method)": [[213, "openpnm.algorithms.InvasionPercolation.pores"]], "props() (invasionpercolation method)": [[214, "openpnm.algorithms.InvasionPercolation.props"]], "reset() (invasionpercolation method)": [[215, "openpnm.algorithms.InvasionPercolation.reset"]], "run() (invasionpercolation method)": [[216, "openpnm.algorithms.InvasionPercolation.run"]], "set_bc() (invasionpercolation method)": [[217, "openpnm.algorithms.InvasionPercolation.set_BC"]], "set_inlet_bc() (invasionpercolation method)": [[218, "openpnm.algorithms.InvasionPercolation.set_inlet_BC"]], "set_label() (invasionpercolation method)": [[219, "openpnm.algorithms.InvasionPercolation.set_label"]], "set_outlet_bc() (invasionpercolation method)": [[220, "openpnm.algorithms.InvasionPercolation.set_outlet_BC"]], "setdefault() (invasionpercolation method)": [[221, "openpnm.algorithms.InvasionPercolation.setdefault"]], "throats() (invasionpercolation method)": [[222, "openpnm.algorithms.InvasionPercolation.throats"]], "to_indices() (invasionpercolation method)": [[223, "openpnm.algorithms.InvasionPercolation.to_indices"]], "to_mask() (invasionpercolation method)": [[224, "openpnm.algorithms.InvasionPercolation.to_mask"]], "update() (invasionpercolation method)": [[225, "openpnm.algorithms.InvasionPercolation.update"]], "values() (invasionpercolation method)": [[226, "openpnm.algorithms.InvasionPercolation.values"]], "ionicconduction (class in openpnm.algorithms)": [[227, "openpnm.algorithms.IonicConduction"]], "clear() (ionicconduction method)": [[228, "openpnm.algorithms.IonicConduction.clear"]], "clear_bcs() (ionicconduction method)": [[229, "openpnm.algorithms.IonicConduction.clear_BCs"]], "clear_rate_bcs() (ionicconduction method)": [[230, "openpnm.algorithms.IonicConduction.clear_rate_BCs"]], "clear_value_bcs() (ionicconduction method)": [[231, "openpnm.algorithms.IonicConduction.clear_value_BCs"]], "copy() (ionicconduction method)": [[232, "openpnm.algorithms.IonicConduction.copy"]], "filter_by_label() (ionicconduction method)": [[233, "openpnm.algorithms.IonicConduction.filter_by_label"]], "fromkeys() (ionicconduction method)": [[234, "openpnm.algorithms.IonicConduction.fromkeys"]], "get() (ionicconduction method)": [[235, "openpnm.algorithms.IonicConduction.get"]], "get_conduit_data() (ionicconduction method)": [[236, "openpnm.algorithms.IonicConduction.get_conduit_data"]], "interpolate_data() (ionicconduction method)": [[237, "openpnm.algorithms.IonicConduction.interpolate_data"]], "items() (ionicconduction method)": [[238, "openpnm.algorithms.IonicConduction.items"]], "keys() (ionicconduction method)": [[239, "openpnm.algorithms.IonicConduction.keys"]], "labels() (ionicconduction method)": [[240, "openpnm.algorithms.IonicConduction.labels"]], "num_pores() (ionicconduction method)": [[241, "openpnm.algorithms.IonicConduction.num_pores"]], "num_throats() (ionicconduction method)": [[242, "openpnm.algorithms.IonicConduction.num_throats"]], "pop() (ionicconduction method)": [[243, "openpnm.algorithms.IonicConduction.pop"]], "popitem() (ionicconduction method)": [[244, "openpnm.algorithms.IonicConduction.popitem"]], "pores() (ionicconduction method)": [[245, "openpnm.algorithms.IonicConduction.pores"]], "props() (ionicconduction method)": [[246, "openpnm.algorithms.IonicConduction.props"]], "rate() (ionicconduction method)": [[247, "openpnm.algorithms.IonicConduction.rate"]], "run() (ionicconduction method)": [[248, "openpnm.algorithms.IonicConduction.run"]], "set_bc() (ionicconduction method)": [[249, "openpnm.algorithms.IonicConduction.set_BC"]], "set_label() (ionicconduction method)": [[250, "openpnm.algorithms.IonicConduction.set_label"]], "set_rate_bc() (ionicconduction method)": [[251, "openpnm.algorithms.IonicConduction.set_rate_BC"]], "set_source() (ionicconduction method)": [[252, "openpnm.algorithms.IonicConduction.set_source"]], "set_value_bc() (ionicconduction method)": [[253, "openpnm.algorithms.IonicConduction.set_value_BC"]], "setdefault() (ionicconduction method)": [[254, "openpnm.algorithms.IonicConduction.setdefault"]], "throats() (ionicconduction method)": [[255, "openpnm.algorithms.IonicConduction.throats"]], "to_indices() (ionicconduction method)": [[256, "openpnm.algorithms.IonicConduction.to_indices"]], "to_mask() (ionicconduction method)": [[257, "openpnm.algorithms.IonicConduction.to_mask"]], "update() (ionicconduction method)": [[258, "openpnm.algorithms.IonicConduction.update"]], "values() (ionicconduction method)": [[259, "openpnm.algorithms.IonicConduction.values"]], "ohmicconduction (class in openpnm.algorithms)": [[260, "openpnm.algorithms.OhmicConduction"]], "clear() (ohmicconduction method)": [[261, "openpnm.algorithms.OhmicConduction.clear"]], "clear_bcs() (ohmicconduction method)": [[262, "openpnm.algorithms.OhmicConduction.clear_BCs"]], "clear_rate_bcs() (ohmicconduction method)": [[263, "openpnm.algorithms.OhmicConduction.clear_rate_BCs"]], "clear_value_bcs() (ohmicconduction method)": [[264, "openpnm.algorithms.OhmicConduction.clear_value_BCs"]], "copy() (ohmicconduction method)": [[265, "openpnm.algorithms.OhmicConduction.copy"]], "filter_by_label() (ohmicconduction method)": [[266, "openpnm.algorithms.OhmicConduction.filter_by_label"]], "fromkeys() (ohmicconduction method)": [[267, "openpnm.algorithms.OhmicConduction.fromkeys"]], "get() (ohmicconduction method)": [[268, "openpnm.algorithms.OhmicConduction.get"]], "get_conduit_data() (ohmicconduction method)": [[269, "openpnm.algorithms.OhmicConduction.get_conduit_data"]], "interpolate_data() (ohmicconduction method)": [[270, "openpnm.algorithms.OhmicConduction.interpolate_data"]], "items() (ohmicconduction method)": [[271, "openpnm.algorithms.OhmicConduction.items"]], "keys() (ohmicconduction method)": [[272, "openpnm.algorithms.OhmicConduction.keys"]], "labels() (ohmicconduction method)": [[273, "openpnm.algorithms.OhmicConduction.labels"]], "num_pores() (ohmicconduction method)": [[274, "openpnm.algorithms.OhmicConduction.num_pores"]], "num_throats() (ohmicconduction method)": [[275, "openpnm.algorithms.OhmicConduction.num_throats"]], "pop() (ohmicconduction method)": [[276, "openpnm.algorithms.OhmicConduction.pop"]], "popitem() (ohmicconduction method)": [[277, "openpnm.algorithms.OhmicConduction.popitem"]], "pores() (ohmicconduction method)": [[278, "openpnm.algorithms.OhmicConduction.pores"]], "props() (ohmicconduction method)": [[279, "openpnm.algorithms.OhmicConduction.props"]], "rate() (ohmicconduction method)": [[280, "openpnm.algorithms.OhmicConduction.rate"]], "run() (ohmicconduction method)": [[281, "openpnm.algorithms.OhmicConduction.run"]], "set_bc() (ohmicconduction method)": [[282, "openpnm.algorithms.OhmicConduction.set_BC"]], "set_label() (ohmicconduction method)": [[283, "openpnm.algorithms.OhmicConduction.set_label"]], "set_rate_bc() (ohmicconduction method)": [[284, "openpnm.algorithms.OhmicConduction.set_rate_BC"]], "set_source() (ohmicconduction method)": [[285, "openpnm.algorithms.OhmicConduction.set_source"]], "set_value_bc() (ohmicconduction method)": [[286, "openpnm.algorithms.OhmicConduction.set_value_BC"]], "setdefault() (ohmicconduction method)": [[287, "openpnm.algorithms.OhmicConduction.setdefault"]], "throats() (ohmicconduction method)": [[288, "openpnm.algorithms.OhmicConduction.throats"]], "to_indices() (ohmicconduction method)": [[289, "openpnm.algorithms.OhmicConduction.to_indices"]], "to_mask() (ohmicconduction method)": [[290, "openpnm.algorithms.OhmicConduction.to_mask"]], "update() (ohmicconduction method)": [[291, "openpnm.algorithms.OhmicConduction.update"]], "values() (ohmicconduction method)": [[292, "openpnm.algorithms.OhmicConduction.values"]], "reactivetransport (class in openpnm.algorithms)": [[293, "openpnm.algorithms.ReactiveTransport"]], "clear() (reactivetransport method)": [[294, "openpnm.algorithms.ReactiveTransport.clear"]], "clear_bcs() (reactivetransport method)": [[295, "openpnm.algorithms.ReactiveTransport.clear_BCs"]], "clear_rate_bcs() (reactivetransport method)": [[296, "openpnm.algorithms.ReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (reactivetransport method)": [[297, "openpnm.algorithms.ReactiveTransport.clear_value_BCs"]], "copy() (reactivetransport method)": [[298, "openpnm.algorithms.ReactiveTransport.copy"]], "filter_by_label() (reactivetransport method)": [[299, "openpnm.algorithms.ReactiveTransport.filter_by_label"]], "fromkeys() (reactivetransport method)": [[300, "openpnm.algorithms.ReactiveTransport.fromkeys"]], "get() (reactivetransport method)": [[301, "openpnm.algorithms.ReactiveTransport.get"]], "get_conduit_data() (reactivetransport method)": [[302, "openpnm.algorithms.ReactiveTransport.get_conduit_data"]], "interpolate_data() (reactivetransport method)": [[303, "openpnm.algorithms.ReactiveTransport.interpolate_data"]], "items() (reactivetransport method)": [[304, "openpnm.algorithms.ReactiveTransport.items"]], "keys() (reactivetransport method)": [[305, "openpnm.algorithms.ReactiveTransport.keys"]], "labels() (reactivetransport method)": [[306, "openpnm.algorithms.ReactiveTransport.labels"]], "num_pores() (reactivetransport method)": [[307, "openpnm.algorithms.ReactiveTransport.num_pores"]], "num_throats() (reactivetransport method)": [[308, "openpnm.algorithms.ReactiveTransport.num_throats"]], "pop() (reactivetransport method)": [[309, "openpnm.algorithms.ReactiveTransport.pop"]], "popitem() (reactivetransport method)": [[310, "openpnm.algorithms.ReactiveTransport.popitem"]], "pores() (reactivetransport method)": [[311, "openpnm.algorithms.ReactiveTransport.pores"]], "props() (reactivetransport method)": [[312, "openpnm.algorithms.ReactiveTransport.props"]], "rate() (reactivetransport method)": [[313, "openpnm.algorithms.ReactiveTransport.rate"]], "run() (reactivetransport method)": [[314, "openpnm.algorithms.ReactiveTransport.run"]], "set_bc() (reactivetransport method)": [[315, "openpnm.algorithms.ReactiveTransport.set_BC"]], "set_label() (reactivetransport method)": [[316, "openpnm.algorithms.ReactiveTransport.set_label"]], "set_rate_bc() (reactivetransport method)": [[317, "openpnm.algorithms.ReactiveTransport.set_rate_BC"]], "set_source() (reactivetransport method)": [[318, "openpnm.algorithms.ReactiveTransport.set_source"]], "set_value_bc() (reactivetransport method)": [[319, "openpnm.algorithms.ReactiveTransport.set_value_BC"]], "setdefault() (reactivetransport method)": [[320, "openpnm.algorithms.ReactiveTransport.setdefault"]], "throats() (reactivetransport method)": [[321, "openpnm.algorithms.ReactiveTransport.throats"]], "to_indices() (reactivetransport method)": [[322, "openpnm.algorithms.ReactiveTransport.to_indices"]], "to_mask() (reactivetransport method)": [[323, "openpnm.algorithms.ReactiveTransport.to_mask"]], "update() (reactivetransport method)": [[324, "openpnm.algorithms.ReactiveTransport.update"]], "values() (reactivetransport method)": [[325, "openpnm.algorithms.ReactiveTransport.values"]], "stokesflow (class in openpnm.algorithms)": [[326, "openpnm.algorithms.StokesFlow"]], "clear() (stokesflow method)": [[327, "openpnm.algorithms.StokesFlow.clear"]], "clear_bcs() (stokesflow method)": [[328, "openpnm.algorithms.StokesFlow.clear_BCs"]], "clear_rate_bcs() (stokesflow method)": [[329, "openpnm.algorithms.StokesFlow.clear_rate_BCs"]], "clear_value_bcs() (stokesflow method)": [[330, "openpnm.algorithms.StokesFlow.clear_value_BCs"]], "copy() (stokesflow method)": [[331, "openpnm.algorithms.StokesFlow.copy"]], "filter_by_label() (stokesflow method)": [[332, "openpnm.algorithms.StokesFlow.filter_by_label"]], "fromkeys() (stokesflow method)": [[333, "openpnm.algorithms.StokesFlow.fromkeys"]], "get() (stokesflow method)": [[334, "openpnm.algorithms.StokesFlow.get"]], "get_conduit_data() (stokesflow method)": [[335, "openpnm.algorithms.StokesFlow.get_conduit_data"]], "interpolate_data() (stokesflow method)": [[336, "openpnm.algorithms.StokesFlow.interpolate_data"]], "items() (stokesflow method)": [[337, "openpnm.algorithms.StokesFlow.items"]], "keys() (stokesflow method)": [[338, "openpnm.algorithms.StokesFlow.keys"]], "labels() (stokesflow method)": [[339, "openpnm.algorithms.StokesFlow.labels"]], "num_pores() (stokesflow method)": [[340, "openpnm.algorithms.StokesFlow.num_pores"]], "num_throats() (stokesflow method)": [[341, "openpnm.algorithms.StokesFlow.num_throats"]], "pop() (stokesflow method)": [[342, "openpnm.algorithms.StokesFlow.pop"]], "popitem() (stokesflow method)": [[343, "openpnm.algorithms.StokesFlow.popitem"]], "pores() (stokesflow method)": [[344, "openpnm.algorithms.StokesFlow.pores"]], "props() (stokesflow method)": [[345, "openpnm.algorithms.StokesFlow.props"]], "rate() (stokesflow method)": [[346, "openpnm.algorithms.StokesFlow.rate"]], "run() (stokesflow method)": [[347, "openpnm.algorithms.StokesFlow.run"]], "set_bc() (stokesflow method)": [[348, "openpnm.algorithms.StokesFlow.set_BC"]], "set_label() (stokesflow method)": [[349, "openpnm.algorithms.StokesFlow.set_label"]], "set_rate_bc() (stokesflow method)": [[350, "openpnm.algorithms.StokesFlow.set_rate_BC"]], "set_source() (stokesflow method)": [[351, "openpnm.algorithms.StokesFlow.set_source"]], "set_value_bc() (stokesflow method)": [[352, "openpnm.algorithms.StokesFlow.set_value_BC"]], "setdefault() (stokesflow method)": [[353, "openpnm.algorithms.StokesFlow.setdefault"]], "throats() (stokesflow method)": [[354, "openpnm.algorithms.StokesFlow.throats"]], "to_indices() (stokesflow method)": [[355, "openpnm.algorithms.StokesFlow.to_indices"]], "to_mask() (stokesflow method)": [[356, "openpnm.algorithms.StokesFlow.to_mask"]], "update() (stokesflow method)": [[357, "openpnm.algorithms.StokesFlow.update"]], "values() (stokesflow method)": [[358, "openpnm.algorithms.StokesFlow.values"]], "transientadvectiondiffusion (class in openpnm.algorithms)": [[359, "openpnm.algorithms.TransientAdvectionDiffusion"]], "clear() (transientadvectiondiffusion method)": [[360, "openpnm.algorithms.TransientAdvectionDiffusion.clear"]], "clear_bcs() (transientadvectiondiffusion method)": [[361, "openpnm.algorithms.TransientAdvectionDiffusion.clear_BCs"]], "clear_rate_bcs() (transientadvectiondiffusion method)": [[362, "openpnm.algorithms.TransientAdvectionDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientadvectiondiffusion method)": [[363, "openpnm.algorithms.TransientAdvectionDiffusion.clear_value_BCs"]], "copy() (transientadvectiondiffusion method)": [[364, "openpnm.algorithms.TransientAdvectionDiffusion.copy"]], "filter_by_label() (transientadvectiondiffusion method)": [[365, "openpnm.algorithms.TransientAdvectionDiffusion.filter_by_label"]], "fromkeys() (transientadvectiondiffusion method)": [[366, "openpnm.algorithms.TransientAdvectionDiffusion.fromkeys"]], "get() (transientadvectiondiffusion method)": [[367, "openpnm.algorithms.TransientAdvectionDiffusion.get"]], "get_conduit_data() (transientadvectiondiffusion method)": [[368, "openpnm.algorithms.TransientAdvectionDiffusion.get_conduit_data"]], "interpolate_data() (transientadvectiondiffusion method)": [[369, "openpnm.algorithms.TransientAdvectionDiffusion.interpolate_data"]], "items() (transientadvectiondiffusion method)": [[370, "openpnm.algorithms.TransientAdvectionDiffusion.items"]], "keys() (transientadvectiondiffusion method)": [[371, "openpnm.algorithms.TransientAdvectionDiffusion.keys"]], "labels() (transientadvectiondiffusion method)": [[372, "openpnm.algorithms.TransientAdvectionDiffusion.labels"]], "num_pores() (transientadvectiondiffusion method)": [[373, "openpnm.algorithms.TransientAdvectionDiffusion.num_pores"]], "num_throats() (transientadvectiondiffusion method)": [[374, "openpnm.algorithms.TransientAdvectionDiffusion.num_throats"]], "pop() (transientadvectiondiffusion method)": [[375, "openpnm.algorithms.TransientAdvectionDiffusion.pop"]], "popitem() (transientadvectiondiffusion method)": [[376, "openpnm.algorithms.TransientAdvectionDiffusion.popitem"]], "pores() (transientadvectiondiffusion method)": [[377, "openpnm.algorithms.TransientAdvectionDiffusion.pores"]], "props() (transientadvectiondiffusion method)": [[378, "openpnm.algorithms.TransientAdvectionDiffusion.props"]], "rate() (transientadvectiondiffusion method)": [[379, "openpnm.algorithms.TransientAdvectionDiffusion.rate"]], "run() (transientadvectiondiffusion method)": [[380, "openpnm.algorithms.TransientAdvectionDiffusion.run"]], "set_bc() (transientadvectiondiffusion method)": [[381, "openpnm.algorithms.TransientAdvectionDiffusion.set_BC"]], "set_label() (transientadvectiondiffusion method)": [[382, "openpnm.algorithms.TransientAdvectionDiffusion.set_label"]], "set_outflow_bc() (transientadvectiondiffusion method)": [[383, "openpnm.algorithms.TransientAdvectionDiffusion.set_outflow_BC"]], "set_rate_bc() (transientadvectiondiffusion method)": [[384, "openpnm.algorithms.TransientAdvectionDiffusion.set_rate_BC"]], "set_source() (transientadvectiondiffusion method)": [[385, "openpnm.algorithms.TransientAdvectionDiffusion.set_source"]], "set_value_bc() (transientadvectiondiffusion method)": [[386, "openpnm.algorithms.TransientAdvectionDiffusion.set_value_BC"]], "setdefault() (transientadvectiondiffusion method)": [[387, "openpnm.algorithms.TransientAdvectionDiffusion.setdefault"]], "throats() (transientadvectiondiffusion method)": [[388, "openpnm.algorithms.TransientAdvectionDiffusion.throats"]], "to_indices() (transientadvectiondiffusion method)": [[389, "openpnm.algorithms.TransientAdvectionDiffusion.to_indices"]], "to_mask() (transientadvectiondiffusion method)": [[390, "openpnm.algorithms.TransientAdvectionDiffusion.to_mask"]], "update() (transientadvectiondiffusion method)": [[391, "openpnm.algorithms.TransientAdvectionDiffusion.update"]], "values() (transientadvectiondiffusion method)": [[392, "openpnm.algorithms.TransientAdvectionDiffusion.values"]], "transientfickiandiffusion (class in openpnm.algorithms)": [[393, "openpnm.algorithms.TransientFickianDiffusion"]], "clear() (transientfickiandiffusion method)": [[394, "openpnm.algorithms.TransientFickianDiffusion.clear"]], "clear_bcs() (transientfickiandiffusion method)": [[395, "openpnm.algorithms.TransientFickianDiffusion.clear_BCs"]], "clear_rate_bcs() (transientfickiandiffusion method)": [[396, "openpnm.algorithms.TransientFickianDiffusion.clear_rate_BCs"]], "clear_value_bcs() (transientfickiandiffusion method)": [[397, "openpnm.algorithms.TransientFickianDiffusion.clear_value_BCs"]], "copy() (transientfickiandiffusion method)": [[398, "openpnm.algorithms.TransientFickianDiffusion.copy"]], "filter_by_label() (transientfickiandiffusion method)": [[399, "openpnm.algorithms.TransientFickianDiffusion.filter_by_label"]], "fromkeys() (transientfickiandiffusion method)": [[400, "openpnm.algorithms.TransientFickianDiffusion.fromkeys"]], "get() (transientfickiandiffusion method)": [[401, "openpnm.algorithms.TransientFickianDiffusion.get"]], "get_conduit_data() (transientfickiandiffusion method)": [[402, "openpnm.algorithms.TransientFickianDiffusion.get_conduit_data"]], "interpolate_data() (transientfickiandiffusion method)": [[403, "openpnm.algorithms.TransientFickianDiffusion.interpolate_data"]], "items() (transientfickiandiffusion method)": [[404, "openpnm.algorithms.TransientFickianDiffusion.items"]], "keys() (transientfickiandiffusion method)": [[405, "openpnm.algorithms.TransientFickianDiffusion.keys"]], "labels() (transientfickiandiffusion method)": [[406, "openpnm.algorithms.TransientFickianDiffusion.labels"]], "num_pores() (transientfickiandiffusion method)": [[407, "openpnm.algorithms.TransientFickianDiffusion.num_pores"]], "num_throats() (transientfickiandiffusion method)": [[408, "openpnm.algorithms.TransientFickianDiffusion.num_throats"]], "pop() (transientfickiandiffusion method)": [[409, "openpnm.algorithms.TransientFickianDiffusion.pop"]], "popitem() (transientfickiandiffusion method)": [[410, "openpnm.algorithms.TransientFickianDiffusion.popitem"]], "pores() (transientfickiandiffusion method)": [[411, "openpnm.algorithms.TransientFickianDiffusion.pores"]], "props() (transientfickiandiffusion method)": [[412, "openpnm.algorithms.TransientFickianDiffusion.props"]], "rate() (transientfickiandiffusion method)": [[413, "openpnm.algorithms.TransientFickianDiffusion.rate"]], "run() (transientfickiandiffusion method)": [[414, "openpnm.algorithms.TransientFickianDiffusion.run"]], "set_bc() (transientfickiandiffusion method)": [[415, "openpnm.algorithms.TransientFickianDiffusion.set_BC"]], "set_label() (transientfickiandiffusion method)": [[416, "openpnm.algorithms.TransientFickianDiffusion.set_label"]], "set_rate_bc() (transientfickiandiffusion method)": [[417, "openpnm.algorithms.TransientFickianDiffusion.set_rate_BC"]], "set_source() (transientfickiandiffusion method)": [[418, "openpnm.algorithms.TransientFickianDiffusion.set_source"]], "set_value_bc() (transientfickiandiffusion method)": [[419, "openpnm.algorithms.TransientFickianDiffusion.set_value_BC"]], "setdefault() (transientfickiandiffusion method)": [[420, "openpnm.algorithms.TransientFickianDiffusion.setdefault"]], "throats() (transientfickiandiffusion method)": [[421, "openpnm.algorithms.TransientFickianDiffusion.throats"]], "to_indices() (transientfickiandiffusion method)": [[422, "openpnm.algorithms.TransientFickianDiffusion.to_indices"]], "to_mask() (transientfickiandiffusion method)": [[423, "openpnm.algorithms.TransientFickianDiffusion.to_mask"]], "update() (transientfickiandiffusion method)": [[424, "openpnm.algorithms.TransientFickianDiffusion.update"]], "values() (transientfickiandiffusion method)": [[425, "openpnm.algorithms.TransientFickianDiffusion.values"]], "transientionicconduction (class in openpnm.algorithms)": [[426, "openpnm.algorithms.TransientIonicConduction"]], "clear() (transientionicconduction method)": [[427, "openpnm.algorithms.TransientIonicConduction.clear"]], "clear_bcs() (transientionicconduction method)": [[428, "openpnm.algorithms.TransientIonicConduction.clear_BCs"]], "clear_rate_bcs() (transientionicconduction method)": [[429, "openpnm.algorithms.TransientIonicConduction.clear_rate_BCs"]], "clear_value_bcs() (transientionicconduction method)": [[430, "openpnm.algorithms.TransientIonicConduction.clear_value_BCs"]], "copy() (transientionicconduction method)": [[431, "openpnm.algorithms.TransientIonicConduction.copy"]], "filter_by_label() (transientionicconduction method)": [[432, "openpnm.algorithms.TransientIonicConduction.filter_by_label"]], "fromkeys() (transientionicconduction method)": [[433, "openpnm.algorithms.TransientIonicConduction.fromkeys"]], "get() (transientionicconduction method)": [[434, "openpnm.algorithms.TransientIonicConduction.get"]], "get_conduit_data() (transientionicconduction method)": [[435, "openpnm.algorithms.TransientIonicConduction.get_conduit_data"]], "interpolate_data() (transientionicconduction method)": [[436, "openpnm.algorithms.TransientIonicConduction.interpolate_data"]], "items() (transientionicconduction method)": [[437, "openpnm.algorithms.TransientIonicConduction.items"]], "keys() (transientionicconduction method)": [[438, "openpnm.algorithms.TransientIonicConduction.keys"]], "labels() (transientionicconduction method)": [[439, "openpnm.algorithms.TransientIonicConduction.labels"]], "num_pores() (transientionicconduction method)": [[440, "openpnm.algorithms.TransientIonicConduction.num_pores"]], "num_throats() (transientionicconduction method)": [[441, "openpnm.algorithms.TransientIonicConduction.num_throats"]], "pop() (transientionicconduction method)": [[442, "openpnm.algorithms.TransientIonicConduction.pop"]], "popitem() (transientionicconduction method)": [[443, "openpnm.algorithms.TransientIonicConduction.popitem"]], "pores() (transientionicconduction method)": [[444, "openpnm.algorithms.TransientIonicConduction.pores"]], "props() (transientionicconduction method)": [[445, "openpnm.algorithms.TransientIonicConduction.props"]], "rate() (transientionicconduction method)": [[446, "openpnm.algorithms.TransientIonicConduction.rate"]], "run() (transientionicconduction method)": [[447, "openpnm.algorithms.TransientIonicConduction.run"]], "set_bc() (transientionicconduction method)": [[448, "openpnm.algorithms.TransientIonicConduction.set_BC"]], "set_label() (transientionicconduction method)": [[449, "openpnm.algorithms.TransientIonicConduction.set_label"]], "set_rate_bc() (transientionicconduction method)": [[450, "openpnm.algorithms.TransientIonicConduction.set_rate_BC"]], "set_source() (transientionicconduction method)": [[451, "openpnm.algorithms.TransientIonicConduction.set_source"]], "set_value_bc() (transientionicconduction method)": [[452, "openpnm.algorithms.TransientIonicConduction.set_value_BC"]], "setdefault() (transientionicconduction method)": [[453, "openpnm.algorithms.TransientIonicConduction.setdefault"]], "throats() (transientionicconduction method)": [[454, "openpnm.algorithms.TransientIonicConduction.throats"]], "to_indices() (transientionicconduction method)": [[455, "openpnm.algorithms.TransientIonicConduction.to_indices"]], "to_mask() (transientionicconduction method)": [[456, "openpnm.algorithms.TransientIonicConduction.to_mask"]], "update() (transientionicconduction method)": [[457, "openpnm.algorithms.TransientIonicConduction.update"]], "values() (transientionicconduction method)": [[458, "openpnm.algorithms.TransientIonicConduction.values"]], "transientreactivetransport (class in openpnm.algorithms)": [[459, "openpnm.algorithms.TransientReactiveTransport"]], "clear() (transientreactivetransport method)": [[460, "openpnm.algorithms.TransientReactiveTransport.clear"]], "clear_bcs() (transientreactivetransport method)": [[461, "openpnm.algorithms.TransientReactiveTransport.clear_BCs"]], "clear_rate_bcs() (transientreactivetransport method)": [[462, "openpnm.algorithms.TransientReactiveTransport.clear_rate_BCs"]], "clear_value_bcs() (transientreactivetransport method)": [[463, "openpnm.algorithms.TransientReactiveTransport.clear_value_BCs"]], "copy() (transientreactivetransport method)": [[464, "openpnm.algorithms.TransientReactiveTransport.copy"]], "filter_by_label() (transientreactivetransport method)": [[465, "openpnm.algorithms.TransientReactiveTransport.filter_by_label"]], "fromkeys() (transientreactivetransport method)": [[466, "openpnm.algorithms.TransientReactiveTransport.fromkeys"]], "get() (transientreactivetransport method)": [[467, "openpnm.algorithms.TransientReactiveTransport.get"]], "get_conduit_data() (transientreactivetransport method)": [[468, "openpnm.algorithms.TransientReactiveTransport.get_conduit_data"]], "interpolate_data() (transientreactivetransport method)": [[469, "openpnm.algorithms.TransientReactiveTransport.interpolate_data"]], "items() (transientreactivetransport method)": [[470, "openpnm.algorithms.TransientReactiveTransport.items"]], "keys() (transientreactivetransport method)": [[471, "openpnm.algorithms.TransientReactiveTransport.keys"]], "labels() (transientreactivetransport method)": [[472, "openpnm.algorithms.TransientReactiveTransport.labels"]], "num_pores() (transientreactivetransport method)": [[473, "openpnm.algorithms.TransientReactiveTransport.num_pores"]], "num_throats() (transientreactivetransport method)": [[474, "openpnm.algorithms.TransientReactiveTransport.num_throats"]], "pop() (transientreactivetransport method)": [[475, "openpnm.algorithms.TransientReactiveTransport.pop"]], "popitem() (transientreactivetransport method)": [[476, "openpnm.algorithms.TransientReactiveTransport.popitem"]], "pores() (transientreactivetransport method)": [[477, "openpnm.algorithms.TransientReactiveTransport.pores"]], "props() (transientreactivetransport method)": [[478, "openpnm.algorithms.TransientReactiveTransport.props"]], "rate() (transientreactivetransport method)": [[479, "openpnm.algorithms.TransientReactiveTransport.rate"]], "run() (transientreactivetransport method)": [[480, "openpnm.algorithms.TransientReactiveTransport.run"]], "set_bc() (transientreactivetransport method)": [[481, "openpnm.algorithms.TransientReactiveTransport.set_BC"]], "set_label() (transientreactivetransport method)": [[482, "openpnm.algorithms.TransientReactiveTransport.set_label"]], "set_rate_bc() (transientreactivetransport method)": [[483, "openpnm.algorithms.TransientReactiveTransport.set_rate_BC"]], "set_source() (transientreactivetransport method)": [[484, "openpnm.algorithms.TransientReactiveTransport.set_source"]], "set_value_bc() (transientreactivetransport method)": [[485, "openpnm.algorithms.TransientReactiveTransport.set_value_BC"]], "setdefault() (transientreactivetransport method)": [[486, "openpnm.algorithms.TransientReactiveTransport.setdefault"]], "throats() (transientreactivetransport method)": [[487, "openpnm.algorithms.TransientReactiveTransport.throats"]], "to_indices() (transientreactivetransport method)": [[488, "openpnm.algorithms.TransientReactiveTransport.to_indices"]], "to_mask() (transientreactivetransport method)": [[489, "openpnm.algorithms.TransientReactiveTransport.to_mask"]], "update() (transientreactivetransport method)": [[490, "openpnm.algorithms.TransientReactiveTransport.update"]], "values() (transientreactivetransport method)": [[491, "openpnm.algorithms.TransientReactiveTransport.values"]], "transport (class in openpnm.algorithms)": [[492, "openpnm.algorithms.Transport"]], "clear() (transport method)": [[493, "openpnm.algorithms.Transport.clear"]], "clear_bcs() (transport method)": [[494, "openpnm.algorithms.Transport.clear_BCs"]], "clear_rate_bcs() (transport method)": [[495, "openpnm.algorithms.Transport.clear_rate_BCs"]], "clear_value_bcs() (transport method)": [[496, "openpnm.algorithms.Transport.clear_value_BCs"]], "copy() (transport method)": [[497, "openpnm.algorithms.Transport.copy"]], "filter_by_label() (transport method)": [[498, "openpnm.algorithms.Transport.filter_by_label"]], "fromkeys() (transport method)": [[499, "openpnm.algorithms.Transport.fromkeys"]], "get() (transport method)": [[500, "openpnm.algorithms.Transport.get"]], "get_conduit_data() (transport method)": [[501, "openpnm.algorithms.Transport.get_conduit_data"]], "interpolate_data() (transport method)": [[502, "openpnm.algorithms.Transport.interpolate_data"]], "items() (transport method)": [[503, "openpnm.algorithms.Transport.items"]], "keys() (transport method)": [[504, "openpnm.algorithms.Transport.keys"]], "labels() (transport method)": [[505, "openpnm.algorithms.Transport.labels"]], "num_pores() (transport method)": [[506, "openpnm.algorithms.Transport.num_pores"]], "num_throats() (transport method)": [[507, "openpnm.algorithms.Transport.num_throats"]], "pop() (transport method)": [[508, "openpnm.algorithms.Transport.pop"]], "popitem() (transport method)": [[509, "openpnm.algorithms.Transport.popitem"]], "pores() (transport method)": [[510, "openpnm.algorithms.Transport.pores"]], "props() (transport method)": [[511, "openpnm.algorithms.Transport.props"]], "rate() (transport method)": [[512, "openpnm.algorithms.Transport.rate"]], "run() (transport method)": [[513, "openpnm.algorithms.Transport.run"]], "set_bc() (transport method)": [[514, "openpnm.algorithms.Transport.set_BC"]], "set_label() (transport method)": [[515, "openpnm.algorithms.Transport.set_label"]], "set_rate_bc() (transport method)": [[516, "openpnm.algorithms.Transport.set_rate_BC"]], "set_value_bc() (transport method)": [[517, "openpnm.algorithms.Transport.set_value_BC"]], "setdefault() (transport method)": [[518, "openpnm.algorithms.Transport.setdefault"]], "throats() (transport method)": [[519, "openpnm.algorithms.Transport.throats"]], "to_indices() (transport method)": [[520, "openpnm.algorithms.Transport.to_indices"]], "to_mask() (transport method)": [[521, "openpnm.algorithms.Transport.to_mask"]], "update() (transport method)": [[522, "openpnm.algorithms.Transport.update"]], "values() (transport method)": [[523, "openpnm.algorithms.Transport.values"]], "openpnm.core": [[524, "module-openpnm.core"]], "base2 (class in openpnm.core)": [[525, "openpnm.core.Base2"]], "clear() (base2 method)": [[526, "openpnm.core.Base2.clear"]], "copy() (base2 method)": [[527, "openpnm.core.Base2.copy"]], "fromkeys() (base2 method)": [[528, "openpnm.core.Base2.fromkeys"]], "get() (base2 method)": [[529, "openpnm.core.Base2.get"]], "get_conduit_data() (base2 method)": [[530, "openpnm.core.Base2.get_conduit_data"]], "interpolate_data() (base2 method)": [[531, "openpnm.core.Base2.interpolate_data"]], "items() (base2 method)": [[532, "openpnm.core.Base2.items"]], "keys() (base2 method)": [[533, "openpnm.core.Base2.keys"]], "pop() (base2 method)": [[534, "openpnm.core.Base2.pop"]], "popitem() (base2 method)": [[535, "openpnm.core.Base2.popitem"]], "props() (base2 method)": [[536, "openpnm.core.Base2.props"]], "setdefault() (base2 method)": [[537, "openpnm.core.Base2.setdefault"]], "to_indices() (base2 method)": [[538, "openpnm.core.Base2.to_indices"]], "to_mask() (base2 method)": [[539, "openpnm.core.Base2.to_mask"]], "update() (base2 method)": [[540, "openpnm.core.Base2.update"]], "values() (base2 method)": [[541, "openpnm.core.Base2.values"]], "domain (class in openpnm.core)": [[542, "openpnm.core.Domain"]], "add_model() (domain method)": [[543, "openpnm.core.Domain.add_model"]], "add_model_collection() (domain method)": [[544, "openpnm.core.Domain.add_model_collection"]], "clear() (domain method)": [[545, "openpnm.core.Domain.clear"]], "copy() (domain method)": [[546, "openpnm.core.Domain.copy"]], "filter_by_label() (domain method)": [[547, "openpnm.core.Domain.filter_by_label"]], "fromkeys() (domain method)": [[548, "openpnm.core.Domain.fromkeys"]], "get() (domain method)": [[549, "openpnm.core.Domain.get"]], "get_conduit_data() (domain method)": [[550, "openpnm.core.Domain.get_conduit_data"]], "interpolate_data() (domain method)": [[551, "openpnm.core.Domain.interpolate_data"]], "items() (domain method)": [[552, "openpnm.core.Domain.items"]], "keys() (domain method)": [[553, "openpnm.core.Domain.keys"]], "labels() (domain method)": [[554, "openpnm.core.Domain.labels"]], "num_pores() (domain method)": [[555, "openpnm.core.Domain.num_pores"]], "num_throats() (domain method)": [[556, "openpnm.core.Domain.num_throats"]], "pop() (domain method)": [[557, "openpnm.core.Domain.pop"]], "popitem() (domain method)": [[558, "openpnm.core.Domain.popitem"]], "pores() (domain method)": [[559, "openpnm.core.Domain.pores"]], "props() (domain method)": [[560, "openpnm.core.Domain.props"]], "regenerate_models() (domain method)": [[561, "openpnm.core.Domain.regenerate_models"]], "run_model() (domain method)": [[562, "openpnm.core.Domain.run_model"]], "set_label() (domain method)": [[563, "openpnm.core.Domain.set_label"]], "setdefault() (domain method)": [[564, "openpnm.core.Domain.setdefault"]], "throats() (domain method)": [[565, "openpnm.core.Domain.throats"]], "to_indices() (domain method)": [[566, "openpnm.core.Domain.to_indices"]], "to_mask() (domain method)": [[567, "openpnm.core.Domain.to_mask"]], "update() (domain method)": [[568, "openpnm.core.Domain.update"]], "values() (domain method)": [[569, "openpnm.core.Domain.values"]], "labelmixin (class in openpnm.core)": [[570, "openpnm.core.LabelMixin"]], "filter_by_label() (labelmixin method)": [[571, "openpnm.core.LabelMixin.filter_by_label"]], "labels() (labelmixin method)": [[572, "openpnm.core.LabelMixin.labels"]], "num_pores() (labelmixin method)": [[573, "openpnm.core.LabelMixin.num_pores"]], "num_throats() (labelmixin method)": [[574, "openpnm.core.LabelMixin.num_throats"]], "pores() (labelmixin method)": [[575, "openpnm.core.LabelMixin.pores"]], "set_label() (labelmixin method)": [[576, "openpnm.core.LabelMixin.set_label"]], "throats() (labelmixin method)": [[577, "openpnm.core.LabelMixin.throats"]], "modelwrapper (class in openpnm.core)": [[578, "openpnm.core.ModelWrapper"]], "__call__() (modelwrapper method)": [[579, "openpnm.core.ModelWrapper.__call__"]], "clear() (modelwrapper method)": [[580, "openpnm.core.ModelWrapper.clear"]], "copy() (modelwrapper method)": [[581, "openpnm.core.ModelWrapper.copy"]], "fromkeys() (modelwrapper method)": [[582, "openpnm.core.ModelWrapper.fromkeys"]], "get() (modelwrapper method)": [[583, "openpnm.core.ModelWrapper.get"]], "items() (modelwrapper method)": [[584, "openpnm.core.ModelWrapper.items"]], "keys() (modelwrapper method)": [[585, "openpnm.core.ModelWrapper.keys"]], "pop() (modelwrapper method)": [[586, "openpnm.core.ModelWrapper.pop"]], "popitem() (modelwrapper method)": [[587, "openpnm.core.ModelWrapper.popitem"]], "setdefault() (modelwrapper method)": [[588, "openpnm.core.ModelWrapper.setdefault"]], "update() (modelwrapper method)": [[589, "openpnm.core.ModelWrapper.update"]], "values() (modelwrapper method)": [[590, "openpnm.core.ModelWrapper.values"]], "modelsdict (class in openpnm.core)": [[591, "openpnm.core.ModelsDict"]], "clear() (modelsdict method)": [[592, "openpnm.core.ModelsDict.clear"]], "copy() (modelsdict method)": [[593, "openpnm.core.ModelsDict.copy"]], "dependency_graph() (modelsdict method)": [[594, "openpnm.core.ModelsDict.dependency_graph"]], "dependency_list() (modelsdict method)": [[595, "openpnm.core.ModelsDict.dependency_list"]], "dependency_map() (modelsdict method)": [[596, "openpnm.core.ModelsDict.dependency_map"]], "fromkeys() (modelsdict method)": [[597, "openpnm.core.ModelsDict.fromkeys"]], "get() (modelsdict method)": [[598, "openpnm.core.ModelsDict.get"]], "items() (modelsdict method)": [[599, "openpnm.core.ModelsDict.items"]], "keys() (modelsdict method)": [[600, "openpnm.core.ModelsDict.keys"]], "pop() (modelsdict method)": [[601, "openpnm.core.ModelsDict.pop"]], "popitem() (modelsdict method)": [[602, "openpnm.core.ModelsDict.popitem"]], "setdefault() (modelsdict method)": [[603, "openpnm.core.ModelsDict.setdefault"]], "update() (modelsdict method)": [[604, "openpnm.core.ModelsDict.update"]], "values() (modelsdict method)": [[605, "openpnm.core.ModelsDict.values"]], "modelsmixin2 (class in openpnm.core)": [[606, "openpnm.core.ModelsMixin2"]], "add_model() (modelsmixin2 method)": [[607, "openpnm.core.ModelsMixin2.add_model"]], "add_model_collection() (modelsmixin2 method)": [[608, "openpnm.core.ModelsMixin2.add_model_collection"]], "regenerate_models() (modelsmixin2 method)": [[609, "openpnm.core.ModelsMixin2.regenerate_models"]], "run_model() (modelsmixin2 method)": [[610, "openpnm.core.ModelsMixin2.run_model"]], "parsermixin (class in openpnm.core)": [[611, "openpnm.core.ParserMixin"]], "openpnm.integrators": [[612, "module-openpnm.integrators"]], "integrator (class in openpnm.integrators)": [[613, "openpnm.integrators.Integrator"]], "scipyrk45 (class in openpnm.integrators)": [[614, "openpnm.integrators.ScipyRK45"]], "solve() (scipyrk45 method)": [[615, "openpnm.integrators.ScipyRK45.solve"]], "openpnm.io": [[616, "module-openpnm.io"]], "network_from_csv() (in module openpnm.io)": [[617, "openpnm.io.network_from_csv"]], "network_from_jsongraph() (in module openpnm.io)": [[618, "openpnm.io.network_from_jsongraph"]], "network_from_marock() (in module openpnm.io)": [[619, "openpnm.io.network_from_marock"]], "network_from_networkx() (in module openpnm.io)": [[620, "openpnm.io.network_from_networkx"]], "network_from_pergeos() (in module openpnm.io)": [[621, "openpnm.io.network_from_pergeos"]], "network_from_porespy() (in module openpnm.io)": [[622, "openpnm.io.network_from_porespy"]], "network_from_statoil() (in module openpnm.io)": [[623, "openpnm.io.network_from_statoil"]], "network_to_comsol() (in module openpnm.io)": [[624, "openpnm.io.network_to_comsol"]], "network_to_csv() (in module openpnm.io)": [[625, "openpnm.io.network_to_csv"]], "network_to_jsongraph() (in module openpnm.io)": [[626, "openpnm.io.network_to_jsongraph"]], "network_to_networkx() (in module openpnm.io)": [[627, "openpnm.io.network_to_networkx"]], "network_to_pandas() (in module openpnm.io)": [[628, "openpnm.io.network_to_pandas"]], "network_to_pergeos() (in module openpnm.io)": [[629, "openpnm.io.network_to_pergeos"]], "network_to_salome() (in module openpnm.io)": [[630, "openpnm.io.network_to_salome"]], "network_to_stl() (in module openpnm.io)": [[631, "openpnm.io.network_to_stl"]], "print_hdf5() (in module openpnm.io)": [[632, "openpnm.io.print_hdf5"]], "project_to_csv() (in module openpnm.io)": [[633, "openpnm.io.project_to_csv"]], "project_to_dict() (in module openpnm.io)": [[634, "openpnm.io.project_to_dict"]], "project_to_hdf5() (in module openpnm.io)": [[635, "openpnm.io.project_to_hdf5"]], "project_to_pandas() (in module openpnm.io)": [[636, "openpnm.io.project_to_pandas"]], "project_to_paraview() (in module openpnm.io)": [[637, "openpnm.io.project_to_paraview"]], "project_to_vtk() (in module openpnm.io)": [[638, "openpnm.io.project_to_vtk"]], "project_to_xdmf() (in module openpnm.io)": [[639, "openpnm.io.project_to_xdmf"]], "openpnm.models": [[640, "module-openpnm.models"]], "openpnm.models.collections": [[641, "module-openpnm.models.collections"]], "openpnm.models.collections.geometry": [[642, "module-openpnm.models.collections.geometry"]], "circles_and_rectangles (in module openpnm.models.collections.geometry)": [[643, "openpnm.models.collections.geometry.circles_and_rectangles"]], "cones_and_cylinders (in module openpnm.models.collections.geometry)": [[644, "openpnm.models.collections.geometry.cones_and_cylinders"]], "cubes_and_cuboids (in module openpnm.models.collections.geometry)": [[645, "openpnm.models.collections.geometry.cubes_and_cuboids"]], "pyramids_and_cuboids (in module openpnm.models.collections.geometry)": [[646, "openpnm.models.collections.geometry.pyramids_and_cuboids"]], "spheres_and_cylinders (in module openpnm.models.collections.geometry)": [[647, "openpnm.models.collections.geometry.spheres_and_cylinders"]], "squares_and_rectangles (in module openpnm.models.collections.geometry)": [[648, "openpnm.models.collections.geometry.squares_and_rectangles"]], "trapezoids_and_rectangles (in module openpnm.models.collections.geometry)": [[649, "openpnm.models.collections.geometry.trapezoids_and_rectangles"]], "openpnm.models.collections.network": [[650, "module-openpnm.models.collections.network"]], "openpnm.models.collections.phase": [[651, "module-openpnm.models.collections.phase"]], "air (in module openpnm.models.collections.phase)": [[652, "openpnm.models.collections.phase.air"]], "openpnm.models.collections.phase.gas": [[653, "module-openpnm.models.collections.phase.gas"]], "openpnm.models.collections.phase.liquid": [[654, "module-openpnm.models.collections.phase.liquid"]], "mercury (in module openpnm.models.collections.phase)": [[655, "openpnm.models.collections.phase.mercury"]], "water (in module openpnm.models.collections.phase)": [[656, "openpnm.models.collections.phase.water"]], "openpnm.models.collections.physics": [[657, "module-openpnm.models.collections.physics"]], "basic (in module openpnm.models.collections.physics)": [[658, "openpnm.models.collections.physics.basic"]], "standard (in module openpnm.models.collections.physics)": [[659, "openpnm.models.collections.physics.standard"]], "openpnm.models.geometry": [[660, "module-openpnm.models.geometry"]], "openpnm.models.geometry.conduit_lengths": [[661, "module-openpnm.models.geometry.conduit_lengths"]], "circles_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[662, "openpnm.models.geometry.conduit_lengths.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[663, "openpnm.models.geometry.conduit_lengths.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[664, "openpnm.models.geometry.conduit_lengths.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[665, "openpnm.models.geometry.conduit_lengths.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[666, "openpnm.models.geometry.conduit_lengths.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[667, "openpnm.models.geometry.conduit_lengths.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.conduit_lengths)": [[668, "openpnm.models.geometry.conduit_lengths.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.conduit_lengths)": [[669, "openpnm.models.geometry.conduit_lengths.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.conduit_lengths)": [[670, "openpnm.models.geometry.conduit_lengths.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.conduit_lengths)": [[671, "openpnm.models.geometry.conduit_lengths.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.conduit_lengths)": [[672, "openpnm.models.geometry.conduit_lengths.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[673, "openpnm.models.geometry.conduit_lengths.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.conduit_lengths)": [[674, "openpnm.models.geometry.conduit_lengths.trapezoids_and_rectangles"]], "openpnm.models.geometry.diffusive_size_factors": [[675, "module-openpnm.models.geometry.diffusive_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[676, "openpnm.models.geometry.diffusive_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[677, "openpnm.models.geometry.diffusive_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[678, "openpnm.models.geometry.diffusive_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[679, "openpnm.models.geometry.diffusive_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[680, "openpnm.models.geometry.diffusive_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[681, "openpnm.models.geometry.diffusive_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.diffusive_size_factors)": [[682, "openpnm.models.geometry.diffusive_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.diffusive_size_factors)": [[683, "openpnm.models.geometry.diffusive_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.diffusive_size_factors)": [[684, "openpnm.models.geometry.diffusive_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.diffusive_size_factors)": [[685, "openpnm.models.geometry.diffusive_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.diffusive_size_factors)": [[686, "openpnm.models.geometry.diffusive_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.diffusive_size_factors)": [[687, "openpnm.models.geometry.diffusive_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[688, "openpnm.models.geometry.diffusive_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.diffusive_size_factors)": [[689, "openpnm.models.geometry.diffusive_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.hydraulic_size_factors": [[690, "module-openpnm.models.geometry.hydraulic_size_factors"]], "circles_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[691, "openpnm.models.geometry.hydraulic_size_factors.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[692, "openpnm.models.geometry.hydraulic_size_factors.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[693, "openpnm.models.geometry.hydraulic_size_factors.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[694, "openpnm.models.geometry.hydraulic_size_factors.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[695, "openpnm.models.geometry.hydraulic_size_factors.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[696, "openpnm.models.geometry.hydraulic_size_factors.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.hydraulic_size_factors)": [[697, "openpnm.models.geometry.hydraulic_size_factors.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[698, "openpnm.models.geometry.hydraulic_size_factors.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[699, "openpnm.models.geometry.hydraulic_size_factors.intersecting_trapezoids"]], "ncylinders_in_series() (in module openpnm.models.geometry.hydraulic_size_factors)": [[700, "openpnm.models.geometry.hydraulic_size_factors.ncylinders_in_series"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.hydraulic_size_factors)": [[701, "openpnm.models.geometry.hydraulic_size_factors.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.hydraulic_size_factors)": [[702, "openpnm.models.geometry.hydraulic_size_factors.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[703, "openpnm.models.geometry.hydraulic_size_factors.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.hydraulic_size_factors)": [[704, "openpnm.models.geometry.hydraulic_size_factors.trapezoids_and_rectangles"]], "openpnm.models.geometry.pore_cross_sectional_area": [[705, "module-openpnm.models.geometry.pore_cross_sectional_area"]], "circle() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[706, "openpnm.models.geometry.pore_cross_sectional_area.circle"]], "cone() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[707, "openpnm.models.geometry.pore_cross_sectional_area.cone"]], "cube() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[708, "openpnm.models.geometry.pore_cross_sectional_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[709, "openpnm.models.geometry.pore_cross_sectional_area.sphere"]], "square() (in module openpnm.models.geometry.pore_cross_sectional_area)": [[710, "openpnm.models.geometry.pore_cross_sectional_area.square"]], "openpnm.models.geometry.pore_seed": [[711, "module-openpnm.models.geometry.pore_seed"]], "random() (in module openpnm.models.geometry.pore_seed)": [[712, "openpnm.models.geometry.pore_seed.random"]], "spatially_correlated() (in module openpnm.models.geometry.pore_seed)": [[713, "openpnm.models.geometry.pore_seed.spatially_correlated"]], "openpnm.models.geometry.pore_size": [[714, "module-openpnm.models.geometry.pore_size"]], "equivalent_diameter() (in module openpnm.models.geometry.pore_size)": [[715, "openpnm.models.geometry.pore_size.equivalent_diameter"]], "from_neighbor_throats() (in module openpnm.models.geometry.pore_size)": [[716, "openpnm.models.geometry.pore_size.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.geometry.pore_size)": [[717, "openpnm.models.geometry.pore_size.generic_distribution"]], "largest_sphere() (in module openpnm.models.geometry.pore_size)": [[718, "openpnm.models.geometry.pore_size.largest_sphere"]], "normal() (in module openpnm.models.geometry.pore_size)": [[719, "openpnm.models.geometry.pore_size.normal"]], "random() (in module openpnm.models.geometry.pore_size)": [[720, "openpnm.models.geometry.pore_size.random"]], "weibull() (in module openpnm.models.geometry.pore_size)": [[721, "openpnm.models.geometry.pore_size.weibull"]], "openpnm.models.geometry.pore_surface_area": [[722, "module-openpnm.models.geometry.pore_surface_area"]], "circle() (in module openpnm.models.geometry.pore_surface_area)": [[723, "openpnm.models.geometry.pore_surface_area.circle"]], "cube() (in module openpnm.models.geometry.pore_surface_area)": [[724, "openpnm.models.geometry.pore_surface_area.cube"]], "sphere() (in module openpnm.models.geometry.pore_surface_area)": [[725, "openpnm.models.geometry.pore_surface_area.sphere"]], "square() (in module openpnm.models.geometry.pore_surface_area)": [[726, "openpnm.models.geometry.pore_surface_area.square"]], "openpnm.models.geometry.pore_volume": [[727, "module-openpnm.models.geometry.pore_volume"]], "circle() (in module openpnm.models.geometry.pore_volume)": [[728, "openpnm.models.geometry.pore_volume.circle"]], "cube() (in module openpnm.models.geometry.pore_volume)": [[729, "openpnm.models.geometry.pore_volume.cube"]], "effective() (in module openpnm.models.geometry.pore_volume)": [[730, "openpnm.models.geometry.pore_volume.effective"]], "sphere() (in module openpnm.models.geometry.pore_volume)": [[731, "openpnm.models.geometry.pore_volume.sphere"]], "square() (in module openpnm.models.geometry.pore_volume)": [[732, "openpnm.models.geometry.pore_volume.square"]], "openpnm.models.geometry.throat_capillary_shape_factor": [[733, "module-openpnm.models.geometry.throat_capillary_shape_factor"]], "compactness() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[734, "openpnm.models.geometry.throat_capillary_shape_factor.compactness"]], "jenkins_rao() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[735, "openpnm.models.geometry.throat_capillary_shape_factor.jenkins_rao"]], "mason_morrow() (in module openpnm.models.geometry.throat_capillary_shape_factor)": [[736, "openpnm.models.geometry.throat_capillary_shape_factor.mason_morrow"]], "openpnm.models.geometry.throat_centroid": [[737, "module-openpnm.models.geometry.throat_centroid"]], "pore_coords() (in module openpnm.models.geometry.throat_centroid)": [[738, "openpnm.models.geometry.throat_centroid.pore_coords"]], "openpnm.models.geometry.throat_cross_sectional_area": [[739, "module-openpnm.models.geometry.throat_cross_sectional_area"]], "cuboid() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[740, "openpnm.models.geometry.throat_cross_sectional_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[741, "openpnm.models.geometry.throat_cross_sectional_area.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_cross_sectional_area)": [[742, "openpnm.models.geometry.throat_cross_sectional_area.rectangle"]], "openpnm.models.geometry.throat_endpoints": [[743, "module-openpnm.models.geometry.throat_endpoints"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_endpoints)": [[744, "openpnm.models.geometry.throat_endpoints.spheres_and_cylinders"]], "openpnm.models.geometry.throat_length": [[745, "module-openpnm.models.geometry.throat_length"]], "circles_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[746, "openpnm.models.geometry.throat_length.circles_and_rectangles"]], "cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[747, "openpnm.models.geometry.throat_length.cones_and_cylinders"]], "cubes_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[748, "openpnm.models.geometry.throat_length.cubes_and_cuboids"]], "hybrid_cones_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[749, "openpnm.models.geometry.throat_length.hybrid_cones_and_cylinders"]], "hybrid_pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[750, "openpnm.models.geometry.throat_length.hybrid_pyramids_and_cuboids"]], "hybrid_trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[751, "openpnm.models.geometry.throat_length.hybrid_trapezoids_and_rectangles"]], "intersecting_cones() (in module openpnm.models.geometry.throat_length)": [[752, "openpnm.models.geometry.throat_length.intersecting_cones"]], "intersecting_pyramids() (in module openpnm.models.geometry.throat_length)": [[753, "openpnm.models.geometry.throat_length.intersecting_pyramids"]], "intersecting_trapezoids() (in module openpnm.models.geometry.throat_length)": [[754, "openpnm.models.geometry.throat_length.intersecting_trapezoids"]], "pyramids_and_cuboids() (in module openpnm.models.geometry.throat_length)": [[755, "openpnm.models.geometry.throat_length.pyramids_and_cuboids"]], "spheres_and_cylinders() (in module openpnm.models.geometry.throat_length)": [[756, "openpnm.models.geometry.throat_length.spheres_and_cylinders"]], "squares_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[757, "openpnm.models.geometry.throat_length.squares_and_rectangles"]], "trapezoids_and_rectangles() (in module openpnm.models.geometry.throat_length)": [[758, "openpnm.models.geometry.throat_length.trapezoids_and_rectangles"]], "openpnm.models.geometry.throat_perimeter": [[759, "module-openpnm.models.geometry.throat_perimeter"]], "cuboid() (in module openpnm.models.geometry.throat_perimeter)": [[760, "openpnm.models.geometry.throat_perimeter.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_perimeter)": [[761, "openpnm.models.geometry.throat_perimeter.cylinder"]], "rectangle() (in module openpnm.models.geometry.throat_perimeter)": [[762, "openpnm.models.geometry.throat_perimeter.rectangle"]], "openpnm.models.geometry.throat_seed": [[763, "module-openpnm.models.geometry.throat_seed"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_seed)": [[764, "openpnm.models.geometry.throat_seed.from_neighbor_pores"]], "random() (in module openpnm.models.geometry.throat_seed)": [[765, "openpnm.models.geometry.throat_seed.random"]], "openpnm.models.geometry.throat_size": [[766, "module-openpnm.models.geometry.throat_size"]], "equivalent_diameter() (in module openpnm.models.geometry.throat_size)": [[767, "openpnm.models.geometry.throat_size.equivalent_diameter"]], "from_neighbor_pores() (in module openpnm.models.geometry.throat_size)": [[768, "openpnm.models.geometry.throat_size.from_neighbor_pores"]], "generic_distribution() (in module openpnm.models.geometry.throat_size)": [[769, "openpnm.models.geometry.throat_size.generic_distribution"]], "normal() (in module openpnm.models.geometry.throat_size)": [[770, "openpnm.models.geometry.throat_size.normal"]], "random() (in module openpnm.models.geometry.throat_size)": [[771, "openpnm.models.geometry.throat_size.random"]], "weibull() (in module openpnm.models.geometry.throat_size)": [[772, "openpnm.models.geometry.throat_size.weibull"]], "openpnm.models.geometry.throat_surface_area": [[773, "module-openpnm.models.geometry.throat_surface_area"]], "cuboid() (in module openpnm.models.geometry.throat_surface_area)": [[774, "openpnm.models.geometry.throat_surface_area.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_surface_area)": [[775, "openpnm.models.geometry.throat_surface_area.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_surface_area)": [[776, "openpnm.models.geometry.throat_surface_area.extrusion"]], "rectangle() (in module openpnm.models.geometry.throat_surface_area)": [[777, "openpnm.models.geometry.throat_surface_area.rectangle"]], "openpnm.models.geometry.throat_vector": [[778, "module-openpnm.models.geometry.throat_vector"]], "pore_to_pore() (in module openpnm.models.geometry.throat_vector)": [[779, "openpnm.models.geometry.throat_vector.pore_to_pore"]], "openpnm.models.geometry.throat_volume": [[780, "module-openpnm.models.geometry.throat_volume"]], "cuboid() (in module openpnm.models.geometry.throat_volume)": [[781, "openpnm.models.geometry.throat_volume.cuboid"]], "cylinder() (in module openpnm.models.geometry.throat_volume)": [[782, "openpnm.models.geometry.throat_volume.cylinder"]], "extrusion() (in module openpnm.models.geometry.throat_volume)": [[783, "openpnm.models.geometry.throat_volume.extrusion"]], "lens() (in module openpnm.models.geometry.throat_volume)": [[784, "openpnm.models.geometry.throat_volume.lens"]], "pendular_ring() (in module openpnm.models.geometry.throat_volume)": [[785, "openpnm.models.geometry.throat_volume.pendular_ring"]], "rectangle() (in module openpnm.models.geometry.throat_volume)": [[786, "openpnm.models.geometry.throat_volume.rectangle"]], "openpnm.models.misc": [[787, "module-openpnm.models.misc"]], "blank() (in module openpnm.models.misc)": [[788, "openpnm.models.misc.blank"]], "clip() (in module openpnm.models.misc)": [[789, "openpnm.models.misc.clip"]], "constant() (in module openpnm.models.misc)": [[790, "openpnm.models.misc.constant"]], "difference() (in module openpnm.models.misc)": [[791, "openpnm.models.misc.difference"]], "fraction() (in module openpnm.models.misc)": [[792, "openpnm.models.misc.fraction"]], "from_neighbor_pores() (in module openpnm.models.misc)": [[793, "openpnm.models.misc.from_neighbor_pores"]], "from_neighbor_throats() (in module openpnm.models.misc)": [[794, "openpnm.models.misc.from_neighbor_throats"]], "generic_distribution() (in module openpnm.models.misc)": [[795, "openpnm.models.misc.generic_distribution"]], "generic_function() (in module openpnm.models.misc)": [[796, "openpnm.models.misc.generic_function"]], "invert() (in module openpnm.models.misc)": [[797, "openpnm.models.misc.invert"]], "linear() (in module openpnm.models.misc)": [[798, "openpnm.models.misc.linear"]], "match_histogram() (in module openpnm.models.misc)": [[799, "openpnm.models.misc.match_histogram"]], "normal() (in module openpnm.models.misc)": [[800, "openpnm.models.misc.normal"]], "normalize() (in module openpnm.models.misc)": [[801, "openpnm.models.misc.normalize"]], "polynomial() (in module openpnm.models.misc)": [[802, "openpnm.models.misc.polynomial"]], "product() (in module openpnm.models.misc)": [[803, "openpnm.models.misc.product"]], "random() (in module openpnm.models.misc)": [[804, "openpnm.models.misc.random"]], "scaled() (in module openpnm.models.misc)": [[805, "openpnm.models.misc.scaled"]], "summation() (in module openpnm.models.misc)": [[806, "openpnm.models.misc.summation"]], "weibull() (in module openpnm.models.misc)": [[807, "openpnm.models.misc.weibull"]], "openpnm.models.network": [[808, "module-openpnm.models.network"]], "bidirectional_throats() (in module openpnm.models.network)": [[809, "openpnm.models.network.bidirectional_throats"]], "cluster_number() (in module openpnm.models.network)": [[810, "openpnm.models.network.cluster_number"]], "cluster_size() (in module openpnm.models.network)": [[811, "openpnm.models.network.cluster_size"]], "coordination_number() (in module openpnm.models.network)": [[812, "openpnm.models.network.coordination_number"]], "count_coincident_pores() (in module openpnm.models.network)": [[813, "openpnm.models.network.count_coincident_pores"]], "distance_to_furthest_neighbor() (in module openpnm.models.network)": [[814, "openpnm.models.network.distance_to_furthest_neighbor"]], "distance_to_nearest_neighbor() (in module openpnm.models.network)": [[815, "openpnm.models.network.distance_to_nearest_neighbor"]], "distance_to_nearest_pore() (in module openpnm.models.network)": [[816, "openpnm.models.network.distance_to_nearest_pore"]], "duplicate_throats() (in module openpnm.models.network)": [[817, "openpnm.models.network.duplicate_throats"]], "find_coincident_pores() (in module openpnm.models.network)": [[818, "openpnm.models.network.find_coincident_pores"]], "headless_throats() (in module openpnm.models.network)": [[819, "openpnm.models.network.headless_throats"]], "isolated_pores() (in module openpnm.models.network)": [[820, "openpnm.models.network.isolated_pores"]], "looped_throats() (in module openpnm.models.network)": [[821, "openpnm.models.network.looped_throats"]], "pore_to_pore_distance() (in module openpnm.models.network)": [[822, "openpnm.models.network.pore_to_pore_distance"]], "reversed_throats() (in module openpnm.models.network)": [[823, "openpnm.models.network.reversed_throats"]], "openpnm.models.phase": [[824, "module-openpnm.models.phase"]], "chemicals_wrapper() (in module openpnm.models.phase)": [[825, "openpnm.models.phase.chemicals_wrapper"]], "openpnm.models.phase.critical_props": [[826, "module-openpnm.models.phase.critical_props"]], "openpnm.models.phase.density": [[827, "module-openpnm.models.phase.density"]], "ideal_gas() (in module openpnm.models.phase.density)": [[828, "openpnm.models.phase.density.ideal_gas"]], "liquid_mixture_costald() (in module openpnm.models.phase.density)": [[829, "openpnm.models.phase.density.liquid_mixture_COSTALD"]], "liquid_pure_costald() (in module openpnm.models.phase.density)": [[830, "openpnm.models.phase.density.liquid_pure_COSTALD"]], "mass_to_molar() (in module openpnm.models.phase.density)": [[831, "openpnm.models.phase.density.mass_to_molar"]], "water_correlation() (in module openpnm.models.phase.density)": [[832, "openpnm.models.phase.density.water_correlation"]], "openpnm.models.phase.diffusivity": [[833, "module-openpnm.models.phase.diffusivity"]], "gas_mixture_ce() (in module openpnm.models.phase.diffusivity)": [[834, "openpnm.models.phase.diffusivity.gas_mixture_ce"]], "gas_mixture_fesg() (in module openpnm.models.phase.diffusivity)": [[835, "openpnm.models.phase.diffusivity.gas_mixture_fesg"]], "liquid_mixture_tc() (in module openpnm.models.phase.diffusivity)": [[836, "openpnm.models.phase.diffusivity.liquid_mixture_tc"]], "openpnm.models.phase.heat_capacity": [[837, "module-openpnm.models.phase.heat_capacity"]], "gas_mixture_yweighted() (in module openpnm.models.phase.heat_capacity)": [[838, "openpnm.models.phase.heat_capacity.gas_mixture_yweighted"]], "gas_pure_trc() (in module openpnm.models.phase.heat_capacity)": [[839, "openpnm.models.phase.heat_capacity.gas_pure_TRC"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.heat_capacity)": [[840, "openpnm.models.phase.heat_capacity.liquid_mixture_xweighted"]], "liquid_pure_rp() (in module openpnm.models.phase.heat_capacity)": [[841, "openpnm.models.phase.heat_capacity.liquid_pure_rp"]], "openpnm.models.phase.misc": [[842, "module-openpnm.models.phase.misc"]], "mix_and_match() (in module openpnm.models.phase.misc)": [[843, "openpnm.models.phase.misc.mix_and_match"]], "mole_to_mass_fraction() (in module openpnm.models.phase.misc)": [[844, "openpnm.models.phase.misc.mole_to_mass_fraction"]], "openpnm.models.phase.mixtures": [[845, "module-openpnm.models.phase.mixtures"]], "from_component() (in module openpnm.models.phase.mixtures)": [[846, "openpnm.models.phase.mixtures.from_component"]], "mixing_rule() (in module openpnm.models.phase.mixtures)": [[847, "openpnm.models.phase.mixtures.mixing_rule"]], "mole_summation() (in module openpnm.models.phase.mixtures)": [[848, "openpnm.models.phase.mixtures.mole_summation"]], "mole_to_mass_fraction() (in module openpnm.models.phase.mixtures)": [[849, "openpnm.models.phase.mixtures.mole_to_mass_fraction"]], "salinity() (in module openpnm.models.phase.mixtures)": [[850, "openpnm.models.phase.mixtures.salinity"]], "openpnm.models.phase.partition_coefficient": [[851, "module-openpnm.models.phase.partition_coefficient"]], "gaseous_species_in_water() (in module openpnm.models.phase.partition_coefficient)": [[852, "openpnm.models.phase.partition_coefficient.gaseous_species_in_water"]], "openpnm.models.phase.surface_tension": [[853, "module-openpnm.models.phase.surface_tension"]], "liquid_mixture_wsd() (in module openpnm.models.phase.surface_tension)": [[854, "openpnm.models.phase.surface_tension.liquid_mixture_wsd"]], "liquid_pure_bb() (in module openpnm.models.phase.surface_tension)": [[855, "openpnm.models.phase.surface_tension.liquid_pure_bb"]], "water_correlation() (in module openpnm.models.phase.surface_tension)": [[856, "openpnm.models.phase.surface_tension.water_correlation"]], "openpnm.models.phase.thermal_conductivity": [[857, "module-openpnm.models.phase.thermal_conductivity"]], "gas_mixture_whz() (in module openpnm.models.phase.thermal_conductivity)": [[858, "openpnm.models.phase.thermal_conductivity.gas_mixture_whz"]], "gas_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[859, "openpnm.models.phase.thermal_conductivity.gas_pure_gismr"]], "liquid_mixture_dippr9h() (in module openpnm.models.phase.thermal_conductivity)": [[860, "openpnm.models.phase.thermal_conductivity.liquid_mixture_DIPPR9H"]], "liquid_pure_gismr() (in module openpnm.models.phase.thermal_conductivity)": [[861, "openpnm.models.phase.thermal_conductivity.liquid_pure_gismr"]], "liquid_pure_sr() (in module openpnm.models.phase.thermal_conductivity)": [[862, "openpnm.models.phase.thermal_conductivity.liquid_pure_sr"]], "water_correlation() (in module openpnm.models.phase.thermal_conductivity)": [[863, "openpnm.models.phase.thermal_conductivity.water_correlation"]], "openpnm.models.phase.vapor_pressure": [[864, "module-openpnm.models.phase.vapor_pressure"]], "liquid_pure_antoine() (in module openpnm.models.phase.vapor_pressure)": [[865, "openpnm.models.phase.vapor_pressure.liquid_pure_antoine"]], "liquid_pure_lk() (in module openpnm.models.phase.vapor_pressure)": [[866, "openpnm.models.phase.vapor_pressure.liquid_pure_lk"]], "water_correlation() (in module openpnm.models.phase.vapor_pressure)": [[867, "openpnm.models.phase.vapor_pressure.water_correlation"]], "openpnm.models.phase.viscosity": [[868, "module-openpnm.models.phase.viscosity"]], "gas_mixture_hz() (in module openpnm.models.phase.viscosity)": [[869, "openpnm.models.phase.viscosity.gas_mixture_hz"]], "gas_pure_gesmr() (in module openpnm.models.phase.viscosity)": [[870, "openpnm.models.phase.viscosity.gas_pure_gesmr"]], "gas_pure_st() (in module openpnm.models.phase.viscosity)": [[871, "openpnm.models.phase.viscosity.gas_pure_st"]], "liquid_mixture_xweighted() (in module openpnm.models.phase.viscosity)": [[872, "openpnm.models.phase.viscosity.liquid_mixture_xweighted"]], "liquid_pure_ls() (in module openpnm.models.phase.viscosity)": [[873, "openpnm.models.phase.viscosity.liquid_pure_ls"]], "water_correlation() (in module openpnm.models.phase.viscosity)": [[874, "openpnm.models.phase.viscosity.water_correlation"]], "openpnm.models.physics": [[875, "module-openpnm.models.physics"]], "openpnm.models.physics.ad_dif_conductance": [[876, "module-openpnm.models.physics.ad_dif_conductance"]], "ad_dif() (in module openpnm.models.physics.ad_dif_conductance)": [[877, "openpnm.models.physics.ad_dif_conductance.ad_dif"]], "openpnm.models.physics.capillary_pressure": [[878, "module-openpnm.models.physics.capillary_pressure"]], "purcell() (in module openpnm.models.physics.capillary_pressure)": [[879, "openpnm.models.physics.capillary_pressure.purcell"]], "washburn() (in module openpnm.models.physics.capillary_pressure)": [[880, "openpnm.models.physics.capillary_pressure.washburn"]], "openpnm.models.physics.diffusive_conductance": [[881, "module-openpnm.models.physics.diffusive_conductance"]], "generic_diffusive() (in module openpnm.models.physics.diffusive_conductance)": [[882, "openpnm.models.physics.diffusive_conductance.generic_diffusive"]], "mixed_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[883, "openpnm.models.physics.diffusive_conductance.mixed_diffusion"]], "ordinary_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[884, "openpnm.models.physics.diffusive_conductance.ordinary_diffusion"]], "taylor_aris_diffusion() (in module openpnm.models.physics.diffusive_conductance)": [[885, "openpnm.models.physics.diffusive_conductance.taylor_aris_diffusion"]], "openpnm.models.physics.electrical_conductance": [[886, "module-openpnm.models.physics.electrical_conductance"]], "generic_electrical() (in module openpnm.models.physics.electrical_conductance)": [[887, "openpnm.models.physics.electrical_conductance.generic_electrical"]], "series_resistors() (in module openpnm.models.physics.electrical_conductance)": [[888, "openpnm.models.physics.electrical_conductance.series_resistors"]], "openpnm.models.physics.hydraulic_conductance": [[889, "module-openpnm.models.physics.hydraulic_conductance"]], "generic_hydraulic() (in module openpnm.models.physics.hydraulic_conductance)": [[890, "openpnm.models.physics.hydraulic_conductance.generic_hydraulic"]], "hagen_poiseuille() (in module openpnm.models.physics.hydraulic_conductance)": [[891, "openpnm.models.physics.hydraulic_conductance.hagen_poiseuille"]], "valvatne_blunt() (in module openpnm.models.physics.hydraulic_conductance)": [[892, "openpnm.models.physics.hydraulic_conductance.valvatne_blunt"]], "openpnm.models.physics.meniscus": [[893, "module-openpnm.models.physics.meniscus"]], "general_toroidal() (in module openpnm.models.physics.meniscus)": [[894, "openpnm.models.physics.meniscus.general_toroidal"]], "purcell() (in module openpnm.models.physics.meniscus)": [[895, "openpnm.models.physics.meniscus.purcell"]], "sinusoidal() (in module openpnm.models.physics.meniscus)": [[896, "openpnm.models.physics.meniscus.sinusoidal"]], "openpnm.models.physics.multiphase": [[897, "module-openpnm.models.physics.multiphase"]], "conduit_conductance() (in module openpnm.models.physics.multiphase)": [[898, "openpnm.models.physics.multiphase.conduit_conductance"]], "late_filling() (in module openpnm.models.physics.multiphase)": [[899, "openpnm.models.physics.multiphase.late_filling"]], "openpnm.models.physics.source_terms": [[900, "module-openpnm.models.physics.source_terms"]], "butler_volmer_conc() (in module openpnm.models.physics.source_terms)": [[901, "openpnm.models.physics.source_terms.butler_volmer_conc"]], "butler_volmer_voltage() (in module openpnm.models.physics.source_terms)": [[902, "openpnm.models.physics.source_terms.butler_volmer_voltage"]], "exponential() (in module openpnm.models.physics.source_terms)": [[903, "openpnm.models.physics.source_terms.exponential"]], "general_symbolic() (in module openpnm.models.physics.source_terms)": [[904, "openpnm.models.physics.source_terms.general_symbolic"]], "linear() (in module openpnm.models.physics.source_terms)": [[905, "openpnm.models.physics.source_terms.linear"]], "logarithm() (in module openpnm.models.physics.source_terms)": [[906, "openpnm.models.physics.source_terms.logarithm"]], "natural_exponential() (in module openpnm.models.physics.source_terms)": [[907, "openpnm.models.physics.source_terms.natural_exponential"]], "natural_logarithm() (in module openpnm.models.physics.source_terms)": [[908, "openpnm.models.physics.source_terms.natural_logarithm"]], "power_law() (in module openpnm.models.physics.source_terms)": [[909, "openpnm.models.physics.source_terms.power_law"]], "standard_kinetics() (in module openpnm.models.physics.source_terms)": [[910, "openpnm.models.physics.source_terms.standard_kinetics"]], "openpnm.models.physics.thermal_conductance": [[911, "module-openpnm.models.physics.thermal_conductance"]], "generic_thermal() (in module openpnm.models.physics.thermal_conductance)": [[912, "openpnm.models.physics.thermal_conductance.generic_thermal"]], "series_resistors() (in module openpnm.models.physics.thermal_conductance)": [[913, "openpnm.models.physics.thermal_conductance.series_resistors"]], "openpnm.network": [[914, "module-openpnm.network"]], "bodycenteredcubic (class in openpnm.network)": [[915, "openpnm.network.BodyCenteredCubic"]], "add_boundary_pores() (bodycenteredcubic method)": [[916, "openpnm.network.BodyCenteredCubic.add_boundary_pores"]], "add_model() (bodycenteredcubic method)": [[917, "openpnm.network.BodyCenteredCubic.add_model"]], "add_model_collection() (bodycenteredcubic method)": [[918, "openpnm.network.BodyCenteredCubic.add_model_collection"]], "clear() (bodycenteredcubic method)": [[919, "openpnm.network.BodyCenteredCubic.clear"]], "copy() (bodycenteredcubic method)": [[920, "openpnm.network.BodyCenteredCubic.copy"]], "create_adjacency_matrix() (bodycenteredcubic method)": [[921, "openpnm.network.BodyCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (bodycenteredcubic method)": [[922, "openpnm.network.BodyCenteredCubic.create_incidence_matrix"]], "filter_by_label() (bodycenteredcubic method)": [[923, "openpnm.network.BodyCenteredCubic.filter_by_label"]], "find_connected_pores() (bodycenteredcubic method)": [[924, "openpnm.network.BodyCenteredCubic.find_connected_pores"]], "find_connecting_throat() (bodycenteredcubic method)": [[925, "openpnm.network.BodyCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (bodycenteredcubic method)": [[926, "openpnm.network.BodyCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (bodycenteredcubic method)": [[927, "openpnm.network.BodyCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (bodycenteredcubic method)": [[928, "openpnm.network.BodyCenteredCubic.find_neighbor_throats"]], "fromkeys() (bodycenteredcubic method)": [[929, "openpnm.network.BodyCenteredCubic.fromkeys"]], "get() (bodycenteredcubic method)": [[930, "openpnm.network.BodyCenteredCubic.get"]], "get_adjacency_matrix() (bodycenteredcubic method)": [[931, "openpnm.network.BodyCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (bodycenteredcubic method)": [[932, "openpnm.network.BodyCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (bodycenteredcubic method)": [[933, "openpnm.network.BodyCenteredCubic.get_incidence_matrix"]], "interpolate_data() (bodycenteredcubic method)": [[934, "openpnm.network.BodyCenteredCubic.interpolate_data"]], "items() (bodycenteredcubic method)": [[935, "openpnm.network.BodyCenteredCubic.items"]], "keys() (bodycenteredcubic method)": [[936, "openpnm.network.BodyCenteredCubic.keys"]], "labels() (bodycenteredcubic method)": [[937, "openpnm.network.BodyCenteredCubic.labels"]], "num_neighbors() (bodycenteredcubic method)": [[938, "openpnm.network.BodyCenteredCubic.num_neighbors"]], "num_pores() (bodycenteredcubic method)": [[939, "openpnm.network.BodyCenteredCubic.num_pores"]], "num_throats() (bodycenteredcubic method)": [[940, "openpnm.network.BodyCenteredCubic.num_throats"]], "pop() (bodycenteredcubic method)": [[941, "openpnm.network.BodyCenteredCubic.pop"]], "popitem() (bodycenteredcubic method)": [[942, "openpnm.network.BodyCenteredCubic.popitem"]], "pores() (bodycenteredcubic method)": [[943, "openpnm.network.BodyCenteredCubic.pores"]], "props() (bodycenteredcubic method)": [[944, "openpnm.network.BodyCenteredCubic.props"]], "regenerate_models() (bodycenteredcubic method)": [[945, "openpnm.network.BodyCenteredCubic.regenerate_models"]], "run_model() (bodycenteredcubic method)": [[946, "openpnm.network.BodyCenteredCubic.run_model"]], "set_label() (bodycenteredcubic method)": [[947, "openpnm.network.BodyCenteredCubic.set_label"]], "setdefault() (bodycenteredcubic method)": [[948, "openpnm.network.BodyCenteredCubic.setdefault"]], "throats() (bodycenteredcubic method)": [[949, "openpnm.network.BodyCenteredCubic.throats"]], "to_indices() (bodycenteredcubic method)": [[950, "openpnm.network.BodyCenteredCubic.to_indices"]], "to_mask() (bodycenteredcubic method)": [[951, "openpnm.network.BodyCenteredCubic.to_mask"]], "update() (bodycenteredcubic method)": [[952, "openpnm.network.BodyCenteredCubic.update"]], "values() (bodycenteredcubic method)": [[953, "openpnm.network.BodyCenteredCubic.values"]], "cubic (class in openpnm.network)": [[954, "openpnm.network.Cubic"]], "add_boundary_pores() (cubic method)": [[955, "openpnm.network.Cubic.add_boundary_pores"]], "add_model() (cubic method)": [[956, "openpnm.network.Cubic.add_model"]], "add_model_collection() (cubic method)": [[957, "openpnm.network.Cubic.add_model_collection"]], "clear() (cubic method)": [[958, "openpnm.network.Cubic.clear"]], "copy() (cubic method)": [[959, "openpnm.network.Cubic.copy"]], "create_adjacency_matrix() (cubic method)": [[960, "openpnm.network.Cubic.create_adjacency_matrix"]], "create_incidence_matrix() (cubic method)": [[961, "openpnm.network.Cubic.create_incidence_matrix"]], "filter_by_label() (cubic method)": [[962, "openpnm.network.Cubic.filter_by_label"]], "find_connected_pores() (cubic method)": [[963, "openpnm.network.Cubic.find_connected_pores"]], "find_connecting_throat() (cubic method)": [[964, "openpnm.network.Cubic.find_connecting_throat"]], "find_nearby_pores() (cubic method)": [[965, "openpnm.network.Cubic.find_nearby_pores"]], "find_neighbor_pores() (cubic method)": [[966, "openpnm.network.Cubic.find_neighbor_pores"]], "find_neighbor_throats() (cubic method)": [[967, "openpnm.network.Cubic.find_neighbor_throats"]], "fromkeys() (cubic method)": [[968, "openpnm.network.Cubic.fromkeys"]], "get() (cubic method)": [[969, "openpnm.network.Cubic.get"]], "get_adjacency_matrix() (cubic method)": [[970, "openpnm.network.Cubic.get_adjacency_matrix"]], "get_conduit_data() (cubic method)": [[971, "openpnm.network.Cubic.get_conduit_data"]], "get_incidence_matrix() (cubic method)": [[972, "openpnm.network.Cubic.get_incidence_matrix"]], "interpolate_data() (cubic method)": [[973, "openpnm.network.Cubic.interpolate_data"]], "items() (cubic method)": [[974, "openpnm.network.Cubic.items"]], "keys() (cubic method)": [[975, "openpnm.network.Cubic.keys"]], "labels() (cubic method)": [[976, "openpnm.network.Cubic.labels"]], "num_neighbors() (cubic method)": [[977, "openpnm.network.Cubic.num_neighbors"]], "num_pores() (cubic method)": [[978, "openpnm.network.Cubic.num_pores"]], "num_throats() (cubic method)": [[979, "openpnm.network.Cubic.num_throats"]], "pop() (cubic method)": [[980, "openpnm.network.Cubic.pop"]], "popitem() (cubic method)": [[981, "openpnm.network.Cubic.popitem"]], "pores() (cubic method)": [[982, "openpnm.network.Cubic.pores"]], "props() (cubic method)": [[983, "openpnm.network.Cubic.props"]], "regenerate_models() (cubic method)": [[984, "openpnm.network.Cubic.regenerate_models"]], "run_model() (cubic method)": [[985, "openpnm.network.Cubic.run_model"]], "set_label() (cubic method)": [[986, "openpnm.network.Cubic.set_label"]], "setdefault() (cubic method)": [[987, "openpnm.network.Cubic.setdefault"]], "throats() (cubic method)": [[988, "openpnm.network.Cubic.throats"]], "to_indices() (cubic method)": [[989, "openpnm.network.Cubic.to_indices"]], "to_mask() (cubic method)": [[990, "openpnm.network.Cubic.to_mask"]], "update() (cubic method)": [[991, "openpnm.network.Cubic.update"]], "values() (cubic method)": [[992, "openpnm.network.Cubic.values"]], "cubictemplate (class in openpnm.network)": [[993, "openpnm.network.CubicTemplate"]], "add_model() (cubictemplate method)": [[994, "openpnm.network.CubicTemplate.add_model"]], "add_model_collection() (cubictemplate method)": [[995, "openpnm.network.CubicTemplate.add_model_collection"]], "clear() (cubictemplate method)": [[996, "openpnm.network.CubicTemplate.clear"]], "copy() (cubictemplate method)": [[997, "openpnm.network.CubicTemplate.copy"]], "create_adjacency_matrix() (cubictemplate method)": [[998, "openpnm.network.CubicTemplate.create_adjacency_matrix"]], "create_incidence_matrix() (cubictemplate method)": [[999, "openpnm.network.CubicTemplate.create_incidence_matrix"]], "filter_by_label() (cubictemplate method)": [[1000, "openpnm.network.CubicTemplate.filter_by_label"]], "find_connected_pores() (cubictemplate method)": [[1001, "openpnm.network.CubicTemplate.find_connected_pores"]], "find_connecting_throat() (cubictemplate method)": [[1002, "openpnm.network.CubicTemplate.find_connecting_throat"]], "find_nearby_pores() (cubictemplate method)": [[1003, "openpnm.network.CubicTemplate.find_nearby_pores"]], "find_neighbor_pores() (cubictemplate method)": [[1004, "openpnm.network.CubicTemplate.find_neighbor_pores"]], "find_neighbor_throats() (cubictemplate method)": [[1005, "openpnm.network.CubicTemplate.find_neighbor_throats"]], "fromkeys() (cubictemplate method)": [[1006, "openpnm.network.CubicTemplate.fromkeys"]], "get() (cubictemplate method)": [[1007, "openpnm.network.CubicTemplate.get"]], "get_adjacency_matrix() (cubictemplate method)": [[1008, "openpnm.network.CubicTemplate.get_adjacency_matrix"]], "get_conduit_data() (cubictemplate method)": [[1009, "openpnm.network.CubicTemplate.get_conduit_data"]], "get_incidence_matrix() (cubictemplate method)": [[1010, "openpnm.network.CubicTemplate.get_incidence_matrix"]], "interpolate_data() (cubictemplate method)": [[1011, "openpnm.network.CubicTemplate.interpolate_data"]], "items() (cubictemplate method)": [[1012, "openpnm.network.CubicTemplate.items"]], "keys() (cubictemplate method)": [[1013, "openpnm.network.CubicTemplate.keys"]], "labels() (cubictemplate method)": [[1014, "openpnm.network.CubicTemplate.labels"]], "num_neighbors() (cubictemplate method)": [[1015, "openpnm.network.CubicTemplate.num_neighbors"]], "num_pores() (cubictemplate method)": [[1016, "openpnm.network.CubicTemplate.num_pores"]], "num_throats() (cubictemplate method)": [[1017, "openpnm.network.CubicTemplate.num_throats"]], "pop() (cubictemplate method)": [[1018, "openpnm.network.CubicTemplate.pop"]], "popitem() (cubictemplate method)": [[1019, "openpnm.network.CubicTemplate.popitem"]], "pores() (cubictemplate method)": [[1020, "openpnm.network.CubicTemplate.pores"]], "props() (cubictemplate method)": [[1021, "openpnm.network.CubicTemplate.props"]], "regenerate_models() (cubictemplate method)": [[1022, "openpnm.network.CubicTemplate.regenerate_models"]], "run_model() (cubictemplate method)": [[1023, "openpnm.network.CubicTemplate.run_model"]], "set_label() (cubictemplate method)": [[1024, "openpnm.network.CubicTemplate.set_label"]], "setdefault() (cubictemplate method)": [[1025, "openpnm.network.CubicTemplate.setdefault"]], "throats() (cubictemplate method)": [[1026, "openpnm.network.CubicTemplate.throats"]], "to_indices() (cubictemplate method)": [[1027, "openpnm.network.CubicTemplate.to_indices"]], "to_mask() (cubictemplate method)": [[1028, "openpnm.network.CubicTemplate.to_mask"]], "update() (cubictemplate method)": [[1029, "openpnm.network.CubicTemplate.update"]], "values() (cubictemplate method)": [[1030, "openpnm.network.CubicTemplate.values"]], "delaunay (class in openpnm.network)": [[1031, "openpnm.network.Delaunay"]], "add_model() (delaunay method)": [[1032, "openpnm.network.Delaunay.add_model"]], "add_model_collection() (delaunay method)": [[1033, "openpnm.network.Delaunay.add_model_collection"]], "clear() (delaunay method)": [[1034, "openpnm.network.Delaunay.clear"]], "copy() (delaunay method)": [[1035, "openpnm.network.Delaunay.copy"]], "create_adjacency_matrix() (delaunay method)": [[1036, "openpnm.network.Delaunay.create_adjacency_matrix"]], "create_incidence_matrix() (delaunay method)": [[1037, "openpnm.network.Delaunay.create_incidence_matrix"]], "filter_by_label() (delaunay method)": [[1038, "openpnm.network.Delaunay.filter_by_label"]], "find_connected_pores() (delaunay method)": [[1039, "openpnm.network.Delaunay.find_connected_pores"]], "find_connecting_throat() (delaunay method)": [[1040, "openpnm.network.Delaunay.find_connecting_throat"]], "find_nearby_pores() (delaunay method)": [[1041, "openpnm.network.Delaunay.find_nearby_pores"]], "find_neighbor_pores() (delaunay method)": [[1042, "openpnm.network.Delaunay.find_neighbor_pores"]], "find_neighbor_throats() (delaunay method)": [[1043, "openpnm.network.Delaunay.find_neighbor_throats"]], "fromkeys() (delaunay method)": [[1044, "openpnm.network.Delaunay.fromkeys"]], "get() (delaunay method)": [[1045, "openpnm.network.Delaunay.get"]], "get_adjacency_matrix() (delaunay method)": [[1046, "openpnm.network.Delaunay.get_adjacency_matrix"]], "get_conduit_data() (delaunay method)": [[1047, "openpnm.network.Delaunay.get_conduit_data"]], "get_incidence_matrix() (delaunay method)": [[1048, "openpnm.network.Delaunay.get_incidence_matrix"]], "interpolate_data() (delaunay method)": [[1049, "openpnm.network.Delaunay.interpolate_data"]], "items() (delaunay method)": [[1050, "openpnm.network.Delaunay.items"]], "keys() (delaunay method)": [[1051, "openpnm.network.Delaunay.keys"]], "labels() (delaunay method)": [[1052, "openpnm.network.Delaunay.labels"]], "num_neighbors() (delaunay method)": [[1053, "openpnm.network.Delaunay.num_neighbors"]], "num_pores() (delaunay method)": [[1054, "openpnm.network.Delaunay.num_pores"]], "num_throats() (delaunay method)": [[1055, "openpnm.network.Delaunay.num_throats"]], "pop() (delaunay method)": [[1056, "openpnm.network.Delaunay.pop"]], "popitem() (delaunay method)": [[1057, "openpnm.network.Delaunay.popitem"]], "pores() (delaunay method)": [[1058, "openpnm.network.Delaunay.pores"]], "props() (delaunay method)": [[1059, "openpnm.network.Delaunay.props"]], "regenerate_models() (delaunay method)": [[1060, "openpnm.network.Delaunay.regenerate_models"]], "run_model() (delaunay method)": [[1061, "openpnm.network.Delaunay.run_model"]], "set_label() (delaunay method)": [[1062, "openpnm.network.Delaunay.set_label"]], "setdefault() (delaunay method)": [[1063, "openpnm.network.Delaunay.setdefault"]], "throats() (delaunay method)": [[1064, "openpnm.network.Delaunay.throats"]], "to_indices() (delaunay method)": [[1065, "openpnm.network.Delaunay.to_indices"]], "to_mask() (delaunay method)": [[1066, "openpnm.network.Delaunay.to_mask"]], "update() (delaunay method)": [[1067, "openpnm.network.Delaunay.update"]], "values() (delaunay method)": [[1068, "openpnm.network.Delaunay.values"]], "delaunayvoronoidual (class in openpnm.network)": [[1069, "openpnm.network.DelaunayVoronoiDual"]], "add_boundary_pores() (delaunayvoronoidual method)": [[1070, "openpnm.network.DelaunayVoronoiDual.add_boundary_pores"]], "add_model() (delaunayvoronoidual method)": [[1071, "openpnm.network.DelaunayVoronoiDual.add_model"]], "add_model_collection() (delaunayvoronoidual method)": [[1072, "openpnm.network.DelaunayVoronoiDual.add_model_collection"]], "clear() (delaunayvoronoidual method)": [[1073, "openpnm.network.DelaunayVoronoiDual.clear"]], "copy() (delaunayvoronoidual method)": [[1074, "openpnm.network.DelaunayVoronoiDual.copy"]], "create_adjacency_matrix() (delaunayvoronoidual method)": [[1075, "openpnm.network.DelaunayVoronoiDual.create_adjacency_matrix"]], "create_incidence_matrix() (delaunayvoronoidual method)": [[1076, "openpnm.network.DelaunayVoronoiDual.create_incidence_matrix"]], "filter_by_label() (delaunayvoronoidual method)": [[1077, "openpnm.network.DelaunayVoronoiDual.filter_by_label"]], "find_connected_pores() (delaunayvoronoidual method)": [[1078, "openpnm.network.DelaunayVoronoiDual.find_connected_pores"]], "find_connecting_throat() (delaunayvoronoidual method)": [[1079, "openpnm.network.DelaunayVoronoiDual.find_connecting_throat"]], "find_nearby_pores() (delaunayvoronoidual method)": [[1080, "openpnm.network.DelaunayVoronoiDual.find_nearby_pores"]], "find_neighbor_pores() (delaunayvoronoidual method)": [[1081, "openpnm.network.DelaunayVoronoiDual.find_neighbor_pores"]], "find_neighbor_throats() (delaunayvoronoidual method)": [[1082, "openpnm.network.DelaunayVoronoiDual.find_neighbor_throats"]], "find_pore_hulls() (delaunayvoronoidual method)": [[1083, "openpnm.network.DelaunayVoronoiDual.find_pore_hulls"]], "find_throat_facets() (delaunayvoronoidual method)": [[1084, "openpnm.network.DelaunayVoronoiDual.find_throat_facets"]], "fromkeys() (delaunayvoronoidual method)": [[1085, "openpnm.network.DelaunayVoronoiDual.fromkeys"]], "get() (delaunayvoronoidual method)": [[1086, "openpnm.network.DelaunayVoronoiDual.get"]], "get_adjacency_matrix() (delaunayvoronoidual method)": [[1087, "openpnm.network.DelaunayVoronoiDual.get_adjacency_matrix"]], "get_conduit_data() (delaunayvoronoidual method)": [[1088, "openpnm.network.DelaunayVoronoiDual.get_conduit_data"]], "get_incidence_matrix() (delaunayvoronoidual method)": [[1089, "openpnm.network.DelaunayVoronoiDual.get_incidence_matrix"]], "interpolate_data() (delaunayvoronoidual method)": [[1090, "openpnm.network.DelaunayVoronoiDual.interpolate_data"]], "items() (delaunayvoronoidual method)": [[1091, "openpnm.network.DelaunayVoronoiDual.items"]], "keys() (delaunayvoronoidual method)": [[1092, "openpnm.network.DelaunayVoronoiDual.keys"]], "labels() (delaunayvoronoidual method)": [[1093, "openpnm.network.DelaunayVoronoiDual.labels"]], "num_neighbors() (delaunayvoronoidual method)": [[1094, "openpnm.network.DelaunayVoronoiDual.num_neighbors"]], "num_pores() (delaunayvoronoidual method)": [[1095, "openpnm.network.DelaunayVoronoiDual.num_pores"]], "num_throats() (delaunayvoronoidual method)": [[1096, "openpnm.network.DelaunayVoronoiDual.num_throats"]], "pop() (delaunayvoronoidual method)": [[1097, "openpnm.network.DelaunayVoronoiDual.pop"]], "popitem() (delaunayvoronoidual method)": [[1098, "openpnm.network.DelaunayVoronoiDual.popitem"]], "pores() (delaunayvoronoidual method)": [[1099, "openpnm.network.DelaunayVoronoiDual.pores"]], "props() (delaunayvoronoidual method)": [[1100, "openpnm.network.DelaunayVoronoiDual.props"]], "regenerate_models() (delaunayvoronoidual method)": [[1101, "openpnm.network.DelaunayVoronoiDual.regenerate_models"]], "run_model() (delaunayvoronoidual method)": [[1102, "openpnm.network.DelaunayVoronoiDual.run_model"]], "set_label() (delaunayvoronoidual method)": [[1103, "openpnm.network.DelaunayVoronoiDual.set_label"]], "setdefault() (delaunayvoronoidual method)": [[1104, "openpnm.network.DelaunayVoronoiDual.setdefault"]], "throats() (delaunayvoronoidual method)": [[1105, "openpnm.network.DelaunayVoronoiDual.throats"]], "to_indices() (delaunayvoronoidual method)": [[1106, "openpnm.network.DelaunayVoronoiDual.to_indices"]], "to_mask() (delaunayvoronoidual method)": [[1107, "openpnm.network.DelaunayVoronoiDual.to_mask"]], "update() (delaunayvoronoidual method)": [[1108, "openpnm.network.DelaunayVoronoiDual.update"]], "values() (delaunayvoronoidual method)": [[1109, "openpnm.network.DelaunayVoronoiDual.values"]], "demo (class in openpnm.network)": [[1110, "openpnm.network.Demo"]], "add_boundary_pores() (demo method)": [[1111, "openpnm.network.Demo.add_boundary_pores"]], "add_model() (demo method)": [[1112, "openpnm.network.Demo.add_model"]], "add_model_collection() (demo method)": [[1113, "openpnm.network.Demo.add_model_collection"]], "clear() (demo method)": [[1114, "openpnm.network.Demo.clear"]], "copy() (demo method)": [[1115, "openpnm.network.Demo.copy"]], "create_adjacency_matrix() (demo method)": [[1116, "openpnm.network.Demo.create_adjacency_matrix"]], "create_incidence_matrix() (demo method)": [[1117, "openpnm.network.Demo.create_incidence_matrix"]], "filter_by_label() (demo method)": [[1118, "openpnm.network.Demo.filter_by_label"]], "find_connected_pores() (demo method)": [[1119, "openpnm.network.Demo.find_connected_pores"]], "find_connecting_throat() (demo method)": [[1120, "openpnm.network.Demo.find_connecting_throat"]], "find_nearby_pores() (demo method)": [[1121, "openpnm.network.Demo.find_nearby_pores"]], "find_neighbor_pores() (demo method)": [[1122, "openpnm.network.Demo.find_neighbor_pores"]], "find_neighbor_throats() (demo method)": [[1123, "openpnm.network.Demo.find_neighbor_throats"]], "fromkeys() (demo method)": [[1124, "openpnm.network.Demo.fromkeys"]], "get() (demo method)": [[1125, "openpnm.network.Demo.get"]], "get_adjacency_matrix() (demo method)": [[1126, "openpnm.network.Demo.get_adjacency_matrix"]], "get_conduit_data() (demo method)": [[1127, "openpnm.network.Demo.get_conduit_data"]], "get_incidence_matrix() (demo method)": [[1128, "openpnm.network.Demo.get_incidence_matrix"]], "interpolate_data() (demo method)": [[1129, "openpnm.network.Demo.interpolate_data"]], "items() (demo method)": [[1130, "openpnm.network.Demo.items"]], "keys() (demo method)": [[1131, "openpnm.network.Demo.keys"]], "labels() (demo method)": [[1132, "openpnm.network.Demo.labels"]], "num_neighbors() (demo method)": [[1133, "openpnm.network.Demo.num_neighbors"]], "num_pores() (demo method)": [[1134, "openpnm.network.Demo.num_pores"]], "num_throats() (demo method)": [[1135, "openpnm.network.Demo.num_throats"]], "pop() (demo method)": [[1136, "openpnm.network.Demo.pop"]], "popitem() (demo method)": [[1137, "openpnm.network.Demo.popitem"]], "pores() (demo method)": [[1138, "openpnm.network.Demo.pores"]], "props() (demo method)": [[1139, "openpnm.network.Demo.props"]], "regenerate_models() (demo method)": [[1140, "openpnm.network.Demo.regenerate_models"]], "run_model() (demo method)": [[1141, "openpnm.network.Demo.run_model"]], "set_label() (demo method)": [[1142, "openpnm.network.Demo.set_label"]], "setdefault() (demo method)": [[1143, "openpnm.network.Demo.setdefault"]], "throats() (demo method)": [[1144, "openpnm.network.Demo.throats"]], "to_indices() (demo method)": [[1145, "openpnm.network.Demo.to_indices"]], "to_mask() (demo method)": [[1146, "openpnm.network.Demo.to_mask"]], "update() (demo method)": [[1147, "openpnm.network.Demo.update"]], "values() (demo method)": [[1148, "openpnm.network.Demo.values"]], "facecenteredcubic (class in openpnm.network)": [[1149, "openpnm.network.FaceCenteredCubic"]], "add_boundary_pores() (facecenteredcubic method)": [[1150, "openpnm.network.FaceCenteredCubic.add_boundary_pores"]], "add_model() (facecenteredcubic method)": [[1151, "openpnm.network.FaceCenteredCubic.add_model"]], "add_model_collection() (facecenteredcubic method)": [[1152, "openpnm.network.FaceCenteredCubic.add_model_collection"]], "clear() (facecenteredcubic method)": [[1153, "openpnm.network.FaceCenteredCubic.clear"]], "copy() (facecenteredcubic method)": [[1154, "openpnm.network.FaceCenteredCubic.copy"]], "create_adjacency_matrix() (facecenteredcubic method)": [[1155, "openpnm.network.FaceCenteredCubic.create_adjacency_matrix"]], "create_incidence_matrix() (facecenteredcubic method)": [[1156, "openpnm.network.FaceCenteredCubic.create_incidence_matrix"]], "filter_by_label() (facecenteredcubic method)": [[1157, "openpnm.network.FaceCenteredCubic.filter_by_label"]], "find_connected_pores() (facecenteredcubic method)": [[1158, "openpnm.network.FaceCenteredCubic.find_connected_pores"]], "find_connecting_throat() (facecenteredcubic method)": [[1159, "openpnm.network.FaceCenteredCubic.find_connecting_throat"]], "find_nearby_pores() (facecenteredcubic method)": [[1160, "openpnm.network.FaceCenteredCubic.find_nearby_pores"]], "find_neighbor_pores() (facecenteredcubic method)": [[1161, "openpnm.network.FaceCenteredCubic.find_neighbor_pores"]], "find_neighbor_throats() (facecenteredcubic method)": [[1162, "openpnm.network.FaceCenteredCubic.find_neighbor_throats"]], "fromkeys() (facecenteredcubic method)": [[1163, "openpnm.network.FaceCenteredCubic.fromkeys"]], "get() (facecenteredcubic method)": [[1164, "openpnm.network.FaceCenteredCubic.get"]], "get_adjacency_matrix() (facecenteredcubic method)": [[1165, "openpnm.network.FaceCenteredCubic.get_adjacency_matrix"]], "get_conduit_data() (facecenteredcubic method)": [[1166, "openpnm.network.FaceCenteredCubic.get_conduit_data"]], "get_incidence_matrix() (facecenteredcubic method)": [[1167, "openpnm.network.FaceCenteredCubic.get_incidence_matrix"]], "interpolate_data() (facecenteredcubic method)": [[1168, "openpnm.network.FaceCenteredCubic.interpolate_data"]], "items() (facecenteredcubic method)": [[1169, "openpnm.network.FaceCenteredCubic.items"]], "keys() (facecenteredcubic method)": [[1170, "openpnm.network.FaceCenteredCubic.keys"]], "labels() (facecenteredcubic method)": [[1171, "openpnm.network.FaceCenteredCubic.labels"]], "num_neighbors() (facecenteredcubic method)": [[1172, "openpnm.network.FaceCenteredCubic.num_neighbors"]], "num_pores() (facecenteredcubic method)": [[1173, "openpnm.network.FaceCenteredCubic.num_pores"]], "num_throats() (facecenteredcubic method)": [[1174, "openpnm.network.FaceCenteredCubic.num_throats"]], "pop() (facecenteredcubic method)": [[1175, "openpnm.network.FaceCenteredCubic.pop"]], "popitem() (facecenteredcubic method)": [[1176, "openpnm.network.FaceCenteredCubic.popitem"]], "pores() (facecenteredcubic method)": [[1177, "openpnm.network.FaceCenteredCubic.pores"]], "props() (facecenteredcubic method)": [[1178, "openpnm.network.FaceCenteredCubic.props"]], "regenerate_models() (facecenteredcubic method)": [[1179, "openpnm.network.FaceCenteredCubic.regenerate_models"]], "run_model() (facecenteredcubic method)": [[1180, "openpnm.network.FaceCenteredCubic.run_model"]], "set_label() (facecenteredcubic method)": [[1181, "openpnm.network.FaceCenteredCubic.set_label"]], "setdefault() (facecenteredcubic method)": [[1182, "openpnm.network.FaceCenteredCubic.setdefault"]], "throats() (facecenteredcubic method)": [[1183, "openpnm.network.FaceCenteredCubic.throats"]], "to_indices() (facecenteredcubic method)": [[1184, "openpnm.network.FaceCenteredCubic.to_indices"]], "to_mask() (facecenteredcubic method)": [[1185, "openpnm.network.FaceCenteredCubic.to_mask"]], "update() (facecenteredcubic method)": [[1186, "openpnm.network.FaceCenteredCubic.update"]], "values() (facecenteredcubic method)": [[1187, "openpnm.network.FaceCenteredCubic.values"]], "network (class in openpnm.network)": [[1188, "openpnm.network.Network"]], "add_model() (network method)": [[1189, "openpnm.network.Network.add_model"]], "add_model_collection() (network method)": [[1190, "openpnm.network.Network.add_model_collection"]], "clear() (network method)": [[1191, "openpnm.network.Network.clear"]], "copy() (network method)": [[1192, "openpnm.network.Network.copy"]], "create_adjacency_matrix() (network method)": [[1193, "openpnm.network.Network.create_adjacency_matrix"]], "create_incidence_matrix() (network method)": [[1194, "openpnm.network.Network.create_incidence_matrix"]], "filter_by_label() (network method)": [[1195, "openpnm.network.Network.filter_by_label"]], "find_connected_pores() (network method)": [[1196, "openpnm.network.Network.find_connected_pores"]], "find_connecting_throat() (network method)": [[1197, "openpnm.network.Network.find_connecting_throat"]], "find_nearby_pores() (network method)": [[1198, "openpnm.network.Network.find_nearby_pores"]], "find_neighbor_pores() (network method)": [[1199, "openpnm.network.Network.find_neighbor_pores"]], "find_neighbor_throats() (network method)": [[1200, "openpnm.network.Network.find_neighbor_throats"]], "fromkeys() (network method)": [[1201, "openpnm.network.Network.fromkeys"]], "get() (network method)": [[1202, "openpnm.network.Network.get"]], "get_adjacency_matrix() (network method)": [[1203, "openpnm.network.Network.get_adjacency_matrix"]], "get_conduit_data() (network method)": [[1204, "openpnm.network.Network.get_conduit_data"]], "get_incidence_matrix() (network method)": [[1205, "openpnm.network.Network.get_incidence_matrix"]], "interpolate_data() (network method)": [[1206, "openpnm.network.Network.interpolate_data"]], "items() (network method)": [[1207, "openpnm.network.Network.items"]], "keys() (network method)": [[1208, "openpnm.network.Network.keys"]], "labels() (network method)": [[1209, "openpnm.network.Network.labels"]], "num_neighbors() (network method)": [[1210, "openpnm.network.Network.num_neighbors"]], "num_pores() (network method)": [[1211, "openpnm.network.Network.num_pores"]], "num_throats() (network method)": [[1212, "openpnm.network.Network.num_throats"]], "pop() (network method)": [[1213, "openpnm.network.Network.pop"]], "popitem() (network method)": [[1214, "openpnm.network.Network.popitem"]], "pores() (network method)": [[1215, "openpnm.network.Network.pores"]], "props() (network method)": [[1216, "openpnm.network.Network.props"]], "regenerate_models() (network method)": [[1217, "openpnm.network.Network.regenerate_models"]], "run_model() (network method)": [[1218, "openpnm.network.Network.run_model"]], "set_label() (network method)": [[1219, "openpnm.network.Network.set_label"]], "setdefault() (network method)": [[1220, "openpnm.network.Network.setdefault"]], "throats() (network method)": [[1221, "openpnm.network.Network.throats"]], "to_indices() (network method)": [[1222, "openpnm.network.Network.to_indices"]], "to_mask() (network method)": [[1223, "openpnm.network.Network.to_mask"]], "update() (network method)": [[1224, "openpnm.network.Network.update"]], "values() (network method)": [[1225, "openpnm.network.Network.values"]], "voronoi (class in openpnm.network)": [[1226, "openpnm.network.Voronoi"]], "add_model() (voronoi method)": [[1227, "openpnm.network.Voronoi.add_model"]], "add_model_collection() (voronoi method)": [[1228, "openpnm.network.Voronoi.add_model_collection"]], "clear() (voronoi method)": [[1229, "openpnm.network.Voronoi.clear"]], "copy() (voronoi method)": [[1230, "openpnm.network.Voronoi.copy"]], "create_adjacency_matrix() (voronoi method)": [[1231, "openpnm.network.Voronoi.create_adjacency_matrix"]], "create_incidence_matrix() (voronoi method)": [[1232, "openpnm.network.Voronoi.create_incidence_matrix"]], "filter_by_label() (voronoi method)": [[1233, "openpnm.network.Voronoi.filter_by_label"]], "find_connected_pores() (voronoi method)": [[1234, "openpnm.network.Voronoi.find_connected_pores"]], "find_connecting_throat() (voronoi method)": [[1235, "openpnm.network.Voronoi.find_connecting_throat"]], "find_nearby_pores() (voronoi method)": [[1236, "openpnm.network.Voronoi.find_nearby_pores"]], "find_neighbor_pores() (voronoi method)": [[1237, "openpnm.network.Voronoi.find_neighbor_pores"]], "find_neighbor_throats() (voronoi method)": [[1238, "openpnm.network.Voronoi.find_neighbor_throats"]], "fromkeys() (voronoi method)": [[1239, "openpnm.network.Voronoi.fromkeys"]], "get() (voronoi method)": [[1240, "openpnm.network.Voronoi.get"]], "get_adjacency_matrix() (voronoi method)": [[1241, "openpnm.network.Voronoi.get_adjacency_matrix"]], "get_conduit_data() (voronoi method)": [[1242, "openpnm.network.Voronoi.get_conduit_data"]], "get_incidence_matrix() (voronoi method)": [[1243, "openpnm.network.Voronoi.get_incidence_matrix"]], "interpolate_data() (voronoi method)": [[1244, "openpnm.network.Voronoi.interpolate_data"]], "items() (voronoi method)": [[1245, "openpnm.network.Voronoi.items"]], "keys() (voronoi method)": [[1246, "openpnm.network.Voronoi.keys"]], "labels() (voronoi method)": [[1247, "openpnm.network.Voronoi.labels"]], "num_neighbors() (voronoi method)": [[1248, "openpnm.network.Voronoi.num_neighbors"]], "num_pores() (voronoi method)": [[1249, "openpnm.network.Voronoi.num_pores"]], "num_throats() (voronoi method)": [[1250, "openpnm.network.Voronoi.num_throats"]], "pop() (voronoi method)": [[1251, "openpnm.network.Voronoi.pop"]], "popitem() (voronoi method)": [[1252, "openpnm.network.Voronoi.popitem"]], "pores() (voronoi method)": [[1253, "openpnm.network.Voronoi.pores"]], "props() (voronoi method)": [[1254, "openpnm.network.Voronoi.props"]], "regenerate_models() (voronoi method)": [[1255, "openpnm.network.Voronoi.regenerate_models"]], "run_model() (voronoi method)": [[1256, "openpnm.network.Voronoi.run_model"]], "set_label() (voronoi method)": [[1257, "openpnm.network.Voronoi.set_label"]], "setdefault() (voronoi method)": [[1258, "openpnm.network.Voronoi.setdefault"]], "throats() (voronoi method)": [[1259, "openpnm.network.Voronoi.throats"]], "to_indices() (voronoi method)": [[1260, "openpnm.network.Voronoi.to_indices"]], "to_mask() (voronoi method)": [[1261, "openpnm.network.Voronoi.to_mask"]], "update() (voronoi method)": [[1262, "openpnm.network.Voronoi.update"]], "values() (voronoi method)": [[1263, "openpnm.network.Voronoi.values"]], "openpnm.phase": [[1264, "module-openpnm.phase"]], "air (class in openpnm.phase)": [[1265, "openpnm.phase.Air"]], "add_model() (air method)": [[1266, "openpnm.phase.Air.add_model"]], "add_model_collection() (air method)": [[1267, "openpnm.phase.Air.add_model_collection"]], "clear() (air method)": [[1268, "openpnm.phase.Air.clear"]], "copy() (air method)": [[1269, "openpnm.phase.Air.copy"]], "filter_by_label() (air method)": [[1270, "openpnm.phase.Air.filter_by_label"]], "fromkeys() (air method)": [[1271, "openpnm.phase.Air.fromkeys"]], "get() (air method)": [[1272, "openpnm.phase.Air.get"]], "get_conduit_data() (air method)": [[1273, "openpnm.phase.Air.get_conduit_data"]], "interpolate_data() (air method)": [[1274, "openpnm.phase.Air.interpolate_data"]], "items() (air method)": [[1275, "openpnm.phase.Air.items"]], "keys() (air method)": [[1276, "openpnm.phase.Air.keys"]], "labels() (air method)": [[1277, "openpnm.phase.Air.labels"]], "num_pores() (air method)": [[1278, "openpnm.phase.Air.num_pores"]], "num_throats() (air method)": [[1279, "openpnm.phase.Air.num_throats"]], "pop() (air method)": [[1280, "openpnm.phase.Air.pop"]], "popitem() (air method)": [[1281, "openpnm.phase.Air.popitem"]], "pores() (air method)": [[1282, "openpnm.phase.Air.pores"]], "props() (air method)": [[1283, "openpnm.phase.Air.props"]], "regenerate_models() (air method)": [[1284, "openpnm.phase.Air.regenerate_models"]], "run_model() (air method)": [[1285, "openpnm.phase.Air.run_model"]], "set_label() (air method)": [[1286, "openpnm.phase.Air.set_label"]], "setdefault() (air method)": [[1287, "openpnm.phase.Air.setdefault"]], "throats() (air method)": [[1288, "openpnm.phase.Air.throats"]], "to_indices() (air method)": [[1289, "openpnm.phase.Air.to_indices"]], "to_mask() (air method)": [[1290, "openpnm.phase.Air.to_mask"]], "update() (air method)": [[1291, "openpnm.phase.Air.update"]], "values() (air method)": [[1292, "openpnm.phase.Air.values"]], "binarygas (class in openpnm.phase)": [[1293, "openpnm.phase.BinaryGas"]], "add_comp() (binarygas method)": [[1294, "openpnm.phase.BinaryGas.add_comp"]], "add_model() (binarygas method)": [[1295, "openpnm.phase.BinaryGas.add_model"]], "add_model_collection() (binarygas method)": [[1296, "openpnm.phase.BinaryGas.add_model_collection"]], "check_mixture_health() (binarygas method)": [[1297, "openpnm.phase.BinaryGas.check_mixture_health"]], "clear() (binarygas method)": [[1298, "openpnm.phase.BinaryGas.clear"]], "copy() (binarygas method)": [[1299, "openpnm.phase.BinaryGas.copy"]], "filter_by_label() (binarygas method)": [[1300, "openpnm.phase.BinaryGas.filter_by_label"]], "fromkeys() (binarygas method)": [[1301, "openpnm.phase.BinaryGas.fromkeys"]], "get() (binarygas method)": [[1302, "openpnm.phase.BinaryGas.get"]], "get_comp_vals() (binarygas method)": [[1303, "openpnm.phase.BinaryGas.get_comp_vals"]], "get_conduit_data() (binarygas method)": [[1304, "openpnm.phase.BinaryGas.get_conduit_data"]], "get_mix_vals() (binarygas method)": [[1305, "openpnm.phase.BinaryGas.get_mix_vals"]], "interpolate_data() (binarygas method)": [[1306, "openpnm.phase.BinaryGas.interpolate_data"]], "items() (binarygas method)": [[1307, "openpnm.phase.BinaryGas.items"]], "keys() (binarygas method)": [[1308, "openpnm.phase.BinaryGas.keys"]], "labels() (binarygas method)": [[1309, "openpnm.phase.BinaryGas.labels"]], "num_pores() (binarygas method)": [[1310, "openpnm.phase.BinaryGas.num_pores"]], "num_throats() (binarygas method)": [[1311, "openpnm.phase.BinaryGas.num_throats"]], "pop() (binarygas method)": [[1312, "openpnm.phase.BinaryGas.pop"]], "popitem() (binarygas method)": [[1313, "openpnm.phase.BinaryGas.popitem"]], "pores() (binarygas method)": [[1314, "openpnm.phase.BinaryGas.pores"]], "props() (binarygas method)": [[1315, "openpnm.phase.BinaryGas.props"]], "regenerate_models() (binarygas method)": [[1316, "openpnm.phase.BinaryGas.regenerate_models"]], "remove_comp() (binarygas method)": [[1317, "openpnm.phase.BinaryGas.remove_comp"]], "run_model() (binarygas method)": [[1318, "openpnm.phase.BinaryGas.run_model"]], "set_label() (binarygas method)": [[1319, "openpnm.phase.BinaryGas.set_label"]], "setdefault() (binarygas method)": [[1320, "openpnm.phase.BinaryGas.setdefault"]], "throats() (binarygas method)": [[1321, "openpnm.phase.BinaryGas.throats"]], "to_indices() (binarygas method)": [[1322, "openpnm.phase.BinaryGas.to_indices"]], "to_mask() (binarygas method)": [[1323, "openpnm.phase.BinaryGas.to_mask"]], "update() (binarygas method)": [[1324, "openpnm.phase.BinaryGas.update"]], "values() (binarygas method)": [[1325, "openpnm.phase.BinaryGas.values"]], "y() (binarygas method)": [[1326, "openpnm.phase.BinaryGas.y"]], "gasmixture (class in openpnm.phase)": [[1327, "openpnm.phase.GasMixture"]], "add_comp() (gasmixture method)": [[1328, "openpnm.phase.GasMixture.add_comp"]], "add_model() (gasmixture method)": [[1329, "openpnm.phase.GasMixture.add_model"]], "add_model_collection() (gasmixture method)": [[1330, "openpnm.phase.GasMixture.add_model_collection"]], "check_mixture_health() (gasmixture method)": [[1331, "openpnm.phase.GasMixture.check_mixture_health"]], "clear() (gasmixture method)": [[1332, "openpnm.phase.GasMixture.clear"]], "copy() (gasmixture method)": [[1333, "openpnm.phase.GasMixture.copy"]], "filter_by_label() (gasmixture method)": [[1334, "openpnm.phase.GasMixture.filter_by_label"]], "fromkeys() (gasmixture method)": [[1335, "openpnm.phase.GasMixture.fromkeys"]], "get() (gasmixture method)": [[1336, "openpnm.phase.GasMixture.get"]], "get_comp_vals() (gasmixture method)": [[1337, "openpnm.phase.GasMixture.get_comp_vals"]], "get_conduit_data() (gasmixture method)": [[1338, "openpnm.phase.GasMixture.get_conduit_data"]], "get_mix_vals() (gasmixture method)": [[1339, "openpnm.phase.GasMixture.get_mix_vals"]], "interpolate_data() (gasmixture method)": [[1340, "openpnm.phase.GasMixture.interpolate_data"]], "items() (gasmixture method)": [[1341, "openpnm.phase.GasMixture.items"]], "keys() (gasmixture method)": [[1342, "openpnm.phase.GasMixture.keys"]], "labels() (gasmixture method)": [[1343, "openpnm.phase.GasMixture.labels"]], "num_pores() (gasmixture method)": [[1344, "openpnm.phase.GasMixture.num_pores"]], "num_throats() (gasmixture method)": [[1345, "openpnm.phase.GasMixture.num_throats"]], "pop() (gasmixture method)": [[1346, "openpnm.phase.GasMixture.pop"]], "popitem() (gasmixture method)": [[1347, "openpnm.phase.GasMixture.popitem"]], "pores() (gasmixture method)": [[1348, "openpnm.phase.GasMixture.pores"]], "props() (gasmixture method)": [[1349, "openpnm.phase.GasMixture.props"]], "regenerate_models() (gasmixture method)": [[1350, "openpnm.phase.GasMixture.regenerate_models"]], "remove_comp() (gasmixture method)": [[1351, "openpnm.phase.GasMixture.remove_comp"]], "run_model() (gasmixture method)": [[1352, "openpnm.phase.GasMixture.run_model"]], "set_label() (gasmixture method)": [[1353, "openpnm.phase.GasMixture.set_label"]], "setdefault() (gasmixture method)": [[1354, "openpnm.phase.GasMixture.setdefault"]], "throats() (gasmixture method)": [[1355, "openpnm.phase.GasMixture.throats"]], "to_indices() (gasmixture method)": [[1356, "openpnm.phase.GasMixture.to_indices"]], "to_mask() (gasmixture method)": [[1357, "openpnm.phase.GasMixture.to_mask"]], "update() (gasmixture method)": [[1358, "openpnm.phase.GasMixture.update"]], "values() (gasmixture method)": [[1359, "openpnm.phase.GasMixture.values"]], "y() (gasmixture method)": [[1360, "openpnm.phase.GasMixture.y"]], "liquidmixture (class in openpnm.phase)": [[1361, "openpnm.phase.LiquidMixture"]], "add_comp() (liquidmixture method)": [[1362, "openpnm.phase.LiquidMixture.add_comp"]], "add_model() (liquidmixture method)": [[1363, "openpnm.phase.LiquidMixture.add_model"]], "add_model_collection() (liquidmixture method)": [[1364, "openpnm.phase.LiquidMixture.add_model_collection"]], "check_mixture_health() (liquidmixture method)": [[1365, "openpnm.phase.LiquidMixture.check_mixture_health"]], "clear() (liquidmixture method)": [[1366, "openpnm.phase.LiquidMixture.clear"]], "copy() (liquidmixture method)": [[1367, "openpnm.phase.LiquidMixture.copy"]], "filter_by_label() (liquidmixture method)": [[1368, "openpnm.phase.LiquidMixture.filter_by_label"]], "fromkeys() (liquidmixture method)": [[1369, "openpnm.phase.LiquidMixture.fromkeys"]], "get() (liquidmixture method)": [[1370, "openpnm.phase.LiquidMixture.get"]], "get_comp_vals() (liquidmixture method)": [[1371, "openpnm.phase.LiquidMixture.get_comp_vals"]], "get_conduit_data() (liquidmixture method)": [[1372, "openpnm.phase.LiquidMixture.get_conduit_data"]], "get_mix_vals() (liquidmixture method)": [[1373, "openpnm.phase.LiquidMixture.get_mix_vals"]], "interpolate_data() (liquidmixture method)": [[1374, "openpnm.phase.LiquidMixture.interpolate_data"]], "items() (liquidmixture method)": [[1375, "openpnm.phase.LiquidMixture.items"]], "keys() (liquidmixture method)": [[1376, "openpnm.phase.LiquidMixture.keys"]], "labels() (liquidmixture method)": [[1377, "openpnm.phase.LiquidMixture.labels"]], "num_pores() (liquidmixture method)": [[1378, "openpnm.phase.LiquidMixture.num_pores"]], "num_throats() (liquidmixture method)": [[1379, "openpnm.phase.LiquidMixture.num_throats"]], "pop() (liquidmixture method)": [[1380, "openpnm.phase.LiquidMixture.pop"]], "popitem() (liquidmixture method)": [[1381, "openpnm.phase.LiquidMixture.popitem"]], "pores() (liquidmixture method)": [[1382, "openpnm.phase.LiquidMixture.pores"]], "props() (liquidmixture method)": [[1383, "openpnm.phase.LiquidMixture.props"]], "regenerate_models() (liquidmixture method)": [[1384, "openpnm.phase.LiquidMixture.regenerate_models"]], "remove_comp() (liquidmixture method)": [[1385, "openpnm.phase.LiquidMixture.remove_comp"]], "run_model() (liquidmixture method)": [[1386, "openpnm.phase.LiquidMixture.run_model"]], "set_label() (liquidmixture method)": [[1387, "openpnm.phase.LiquidMixture.set_label"]], "setdefault() (liquidmixture method)": [[1388, "openpnm.phase.LiquidMixture.setdefault"]], "throats() (liquidmixture method)": [[1389, "openpnm.phase.LiquidMixture.throats"]], "to_indices() (liquidmixture method)": [[1390, "openpnm.phase.LiquidMixture.to_indices"]], "to_mask() (liquidmixture method)": [[1391, "openpnm.phase.LiquidMixture.to_mask"]], "update() (liquidmixture method)": [[1392, "openpnm.phase.LiquidMixture.update"]], "values() (liquidmixture method)": [[1393, "openpnm.phase.LiquidMixture.values"]], "x() (liquidmixture method)": [[1394, "openpnm.phase.LiquidMixture.x"]], "mercury (class in openpnm.phase)": [[1395, "openpnm.phase.Mercury"]], "add_model() (mercury method)": [[1396, "openpnm.phase.Mercury.add_model"]], "add_model_collection() (mercury method)": [[1397, "openpnm.phase.Mercury.add_model_collection"]], "clear() (mercury method)": [[1398, "openpnm.phase.Mercury.clear"]], "copy() (mercury method)": [[1399, "openpnm.phase.Mercury.copy"]], "filter_by_label() (mercury method)": [[1400, "openpnm.phase.Mercury.filter_by_label"]], "fromkeys() (mercury method)": [[1401, "openpnm.phase.Mercury.fromkeys"]], "get() (mercury method)": [[1402, "openpnm.phase.Mercury.get"]], "get_conduit_data() (mercury method)": [[1403, "openpnm.phase.Mercury.get_conduit_data"]], "interpolate_data() (mercury method)": [[1404, "openpnm.phase.Mercury.interpolate_data"]], "items() (mercury method)": [[1405, "openpnm.phase.Mercury.items"]], "keys() (mercury method)": [[1406, "openpnm.phase.Mercury.keys"]], "labels() (mercury method)": [[1407, "openpnm.phase.Mercury.labels"]], "num_pores() (mercury method)": [[1408, "openpnm.phase.Mercury.num_pores"]], "num_throats() (mercury method)": [[1409, "openpnm.phase.Mercury.num_throats"]], "pop() (mercury method)": [[1410, "openpnm.phase.Mercury.pop"]], "popitem() (mercury method)": [[1411, "openpnm.phase.Mercury.popitem"]], "pores() (mercury method)": [[1412, "openpnm.phase.Mercury.pores"]], "props() (mercury method)": [[1413, "openpnm.phase.Mercury.props"]], "regenerate_models() (mercury method)": [[1414, "openpnm.phase.Mercury.regenerate_models"]], "run_model() (mercury method)": [[1415, "openpnm.phase.Mercury.run_model"]], "set_label() (mercury method)": [[1416, "openpnm.phase.Mercury.set_label"]], "setdefault() (mercury method)": [[1417, "openpnm.phase.Mercury.setdefault"]], "throats() (mercury method)": [[1418, "openpnm.phase.Mercury.throats"]], "to_indices() (mercury method)": [[1419, "openpnm.phase.Mercury.to_indices"]], "to_mask() (mercury method)": [[1420, "openpnm.phase.Mercury.to_mask"]], "update() (mercury method)": [[1421, "openpnm.phase.Mercury.update"]], "values() (mercury method)": [[1422, "openpnm.phase.Mercury.values"]], "mixture (class in openpnm.phase)": [[1423, "openpnm.phase.Mixture"]], "add_comp() (mixture method)": [[1424, "openpnm.phase.Mixture.add_comp"]], "add_model() (mixture method)": [[1425, "openpnm.phase.Mixture.add_model"]], "add_model_collection() (mixture method)": [[1426, "openpnm.phase.Mixture.add_model_collection"]], "check_mixture_health() (mixture method)": [[1427, "openpnm.phase.Mixture.check_mixture_health"]], "clear() (mixture method)": [[1428, "openpnm.phase.Mixture.clear"]], "copy() (mixture method)": [[1429, "openpnm.phase.Mixture.copy"]], "filter_by_label() (mixture method)": [[1430, "openpnm.phase.Mixture.filter_by_label"]], "fromkeys() (mixture method)": [[1431, "openpnm.phase.Mixture.fromkeys"]], "get() (mixture method)": [[1432, "openpnm.phase.Mixture.get"]], "get_comp_vals() (mixture method)": [[1433, "openpnm.phase.Mixture.get_comp_vals"]], "get_conduit_data() (mixture method)": [[1434, "openpnm.phase.Mixture.get_conduit_data"]], "get_mix_vals() (mixture method)": [[1435, "openpnm.phase.Mixture.get_mix_vals"]], "interpolate_data() (mixture method)": [[1436, "openpnm.phase.Mixture.interpolate_data"]], "items() (mixture method)": [[1437, "openpnm.phase.Mixture.items"]], "keys() (mixture method)": [[1438, "openpnm.phase.Mixture.keys"]], "labels() (mixture method)": [[1439, "openpnm.phase.Mixture.labels"]], "num_pores() (mixture method)": [[1440, "openpnm.phase.Mixture.num_pores"]], "num_throats() (mixture method)": [[1441, "openpnm.phase.Mixture.num_throats"]], "pop() (mixture method)": [[1442, "openpnm.phase.Mixture.pop"]], "popitem() (mixture method)": [[1443, "openpnm.phase.Mixture.popitem"]], "pores() (mixture method)": [[1444, "openpnm.phase.Mixture.pores"]], "props() (mixture method)": [[1445, "openpnm.phase.Mixture.props"]], "regenerate_models() (mixture method)": [[1446, "openpnm.phase.Mixture.regenerate_models"]], "remove_comp() (mixture method)": [[1447, "openpnm.phase.Mixture.remove_comp"]], "run_model() (mixture method)": [[1448, "openpnm.phase.Mixture.run_model"]], "set_label() (mixture method)": [[1449, "openpnm.phase.Mixture.set_label"]], "setdefault() (mixture method)": [[1450, "openpnm.phase.Mixture.setdefault"]], "throats() (mixture method)": [[1451, "openpnm.phase.Mixture.throats"]], "to_indices() (mixture method)": [[1452, "openpnm.phase.Mixture.to_indices"]], "to_mask() (mixture method)": [[1453, "openpnm.phase.Mixture.to_mask"]], "update() (mixture method)": [[1454, "openpnm.phase.Mixture.update"]], "values() (mixture method)": [[1455, "openpnm.phase.Mixture.values"]], "phase (class in openpnm.phase)": [[1456, "openpnm.phase.Phase"]], "add_model() (phase method)": [[1457, "openpnm.phase.Phase.add_model"]], "add_model_collection() (phase method)": [[1458, "openpnm.phase.Phase.add_model_collection"]], "clear() (phase method)": [[1459, "openpnm.phase.Phase.clear"]], "copy() (phase method)": [[1460, "openpnm.phase.Phase.copy"]], "filter_by_label() (phase method)": [[1461, "openpnm.phase.Phase.filter_by_label"]], "fromkeys() (phase method)": [[1462, "openpnm.phase.Phase.fromkeys"]], "get() (phase method)": [[1463, "openpnm.phase.Phase.get"]], "get_conduit_data() (phase method)": [[1464, "openpnm.phase.Phase.get_conduit_data"]], "interpolate_data() (phase method)": [[1465, "openpnm.phase.Phase.interpolate_data"]], "items() (phase method)": [[1466, "openpnm.phase.Phase.items"]], "keys() (phase method)": [[1467, "openpnm.phase.Phase.keys"]], "labels() (phase method)": [[1468, "openpnm.phase.Phase.labels"]], "num_pores() (phase method)": [[1469, "openpnm.phase.Phase.num_pores"]], "num_throats() (phase method)": [[1470, "openpnm.phase.Phase.num_throats"]], "pop() (phase method)": [[1471, "openpnm.phase.Phase.pop"]], "popitem() (phase method)": [[1472, "openpnm.phase.Phase.popitem"]], "pores() (phase method)": [[1473, "openpnm.phase.Phase.pores"]], "props() (phase method)": [[1474, "openpnm.phase.Phase.props"]], "regenerate_models() (phase method)": [[1475, "openpnm.phase.Phase.regenerate_models"]], "run_model() (phase method)": [[1476, "openpnm.phase.Phase.run_model"]], "set_label() (phase method)": [[1477, "openpnm.phase.Phase.set_label"]], "setdefault() (phase method)": [[1478, "openpnm.phase.Phase.setdefault"]], "throats() (phase method)": [[1479, "openpnm.phase.Phase.throats"]], "to_indices() (phase method)": [[1480, "openpnm.phase.Phase.to_indices"]], "to_mask() (phase method)": [[1481, "openpnm.phase.Phase.to_mask"]], "update() (phase method)": [[1482, "openpnm.phase.Phase.update"]], "values() (phase method)": [[1483, "openpnm.phase.Phase.values"]], "species (class in openpnm.phase)": [[1484, "openpnm.phase.Species"]], "add_model() (species method)": [[1485, "openpnm.phase.Species.add_model"]], "add_model_collection() (species method)": [[1486, "openpnm.phase.Species.add_model_collection"]], "clear() (species method)": [[1487, "openpnm.phase.Species.clear"]], "copy() (species method)": [[1488, "openpnm.phase.Species.copy"]], "filter_by_label() (species method)": [[1489, "openpnm.phase.Species.filter_by_label"]], "fromkeys() (species method)": [[1490, "openpnm.phase.Species.fromkeys"]], "get() (species method)": [[1491, "openpnm.phase.Species.get"]], "get_conduit_data() (species method)": [[1492, "openpnm.phase.Species.get_conduit_data"]], "interpolate_data() (species method)": [[1493, "openpnm.phase.Species.interpolate_data"]], "items() (species method)": [[1494, "openpnm.phase.Species.items"]], "keys() (species method)": [[1495, "openpnm.phase.Species.keys"]], "labels() (species method)": [[1496, "openpnm.phase.Species.labels"]], "num_pores() (species method)": [[1497, "openpnm.phase.Species.num_pores"]], "num_throats() (species method)": [[1498, "openpnm.phase.Species.num_throats"]], "pop() (species method)": [[1499, "openpnm.phase.Species.pop"]], "popitem() (species method)": [[1500, "openpnm.phase.Species.popitem"]], "pores() (species method)": [[1501, "openpnm.phase.Species.pores"]], "props() (species method)": [[1502, "openpnm.phase.Species.props"]], "regenerate_models() (species method)": [[1503, "openpnm.phase.Species.regenerate_models"]], "run_model() (species method)": [[1504, "openpnm.phase.Species.run_model"]], "set_label() (species method)": [[1505, "openpnm.phase.Species.set_label"]], "setdefault() (species method)": [[1506, "openpnm.phase.Species.setdefault"]], "throats() (species method)": [[1507, "openpnm.phase.Species.throats"]], "to_indices() (species method)": [[1508, "openpnm.phase.Species.to_indices"]], "to_mask() (species method)": [[1509, "openpnm.phase.Species.to_mask"]], "update() (species method)": [[1510, "openpnm.phase.Species.update"]], "values() (species method)": [[1511, "openpnm.phase.Species.values"]], "standardgas (class in openpnm.phase)": [[1512, "openpnm.phase.StandardGas"]], "add_model() (standardgas method)": [[1513, "openpnm.phase.StandardGas.add_model"]], "add_model_collection() (standardgas method)": [[1514, "openpnm.phase.StandardGas.add_model_collection"]], "clear() (standardgas method)": [[1515, "openpnm.phase.StandardGas.clear"]], "copy() (standardgas method)": [[1516, "openpnm.phase.StandardGas.copy"]], "filter_by_label() (standardgas method)": [[1517, "openpnm.phase.StandardGas.filter_by_label"]], "fromkeys() (standardgas method)": [[1518, "openpnm.phase.StandardGas.fromkeys"]], "get() (standardgas method)": [[1519, "openpnm.phase.StandardGas.get"]], "get_conduit_data() (standardgas method)": [[1520, "openpnm.phase.StandardGas.get_conduit_data"]], "interpolate_data() (standardgas method)": [[1521, "openpnm.phase.StandardGas.interpolate_data"]], "items() (standardgas method)": [[1522, "openpnm.phase.StandardGas.items"]], "keys() (standardgas method)": [[1523, "openpnm.phase.StandardGas.keys"]], "labels() (standardgas method)": [[1524, "openpnm.phase.StandardGas.labels"]], "num_pores() (standardgas method)": [[1525, "openpnm.phase.StandardGas.num_pores"]], "num_throats() (standardgas method)": [[1526, "openpnm.phase.StandardGas.num_throats"]], "pop() (standardgas method)": [[1527, "openpnm.phase.StandardGas.pop"]], "popitem() (standardgas method)": [[1528, "openpnm.phase.StandardGas.popitem"]], "pores() (standardgas method)": [[1529, "openpnm.phase.StandardGas.pores"]], "props() (standardgas method)": [[1530, "openpnm.phase.StandardGas.props"]], "regenerate_models() (standardgas method)": [[1531, "openpnm.phase.StandardGas.regenerate_models"]], "run_model() (standardgas method)": [[1532, "openpnm.phase.StandardGas.run_model"]], "set_label() (standardgas method)": [[1533, "openpnm.phase.StandardGas.set_label"]], "setdefault() (standardgas method)": [[1534, "openpnm.phase.StandardGas.setdefault"]], "throats() (standardgas method)": [[1535, "openpnm.phase.StandardGas.throats"]], "to_indices() (standardgas method)": [[1536, "openpnm.phase.StandardGas.to_indices"]], "to_mask() (standardgas method)": [[1537, "openpnm.phase.StandardGas.to_mask"]], "update() (standardgas method)": [[1538, "openpnm.phase.StandardGas.update"]], "values() (standardgas method)": [[1539, "openpnm.phase.StandardGas.values"]], "standardgasmixture (class in openpnm.phase)": [[1540, "openpnm.phase.StandardGasMixture"]], "add_comp() (standardgasmixture method)": [[1541, "openpnm.phase.StandardGasMixture.add_comp"]], "add_model() (standardgasmixture method)": [[1542, "openpnm.phase.StandardGasMixture.add_model"]], "add_model_collection() (standardgasmixture method)": [[1543, "openpnm.phase.StandardGasMixture.add_model_collection"]], "check_mixture_health() (standardgasmixture method)": [[1544, "openpnm.phase.StandardGasMixture.check_mixture_health"]], "clear() (standardgasmixture method)": [[1545, "openpnm.phase.StandardGasMixture.clear"]], "copy() (standardgasmixture method)": [[1546, "openpnm.phase.StandardGasMixture.copy"]], "filter_by_label() (standardgasmixture method)": [[1547, "openpnm.phase.StandardGasMixture.filter_by_label"]], "fromkeys() (standardgasmixture method)": [[1548, "openpnm.phase.StandardGasMixture.fromkeys"]], "get() (standardgasmixture method)": [[1549, "openpnm.phase.StandardGasMixture.get"]], "get_comp_vals() (standardgasmixture method)": [[1550, "openpnm.phase.StandardGasMixture.get_comp_vals"]], "get_conduit_data() (standardgasmixture method)": [[1551, "openpnm.phase.StandardGasMixture.get_conduit_data"]], "get_mix_vals() (standardgasmixture method)": [[1552, "openpnm.phase.StandardGasMixture.get_mix_vals"]], "interpolate_data() (standardgasmixture method)": [[1553, "openpnm.phase.StandardGasMixture.interpolate_data"]], "items() (standardgasmixture method)": [[1554, "openpnm.phase.StandardGasMixture.items"]], "keys() (standardgasmixture method)": [[1555, "openpnm.phase.StandardGasMixture.keys"]], "labels() (standardgasmixture method)": [[1556, "openpnm.phase.StandardGasMixture.labels"]], "num_pores() (standardgasmixture method)": [[1557, "openpnm.phase.StandardGasMixture.num_pores"]], "num_throats() (standardgasmixture method)": [[1558, "openpnm.phase.StandardGasMixture.num_throats"]], "pop() (standardgasmixture method)": [[1559, "openpnm.phase.StandardGasMixture.pop"]], "popitem() (standardgasmixture method)": [[1560, "openpnm.phase.StandardGasMixture.popitem"]], "pores() (standardgasmixture method)": [[1561, "openpnm.phase.StandardGasMixture.pores"]], "props() (standardgasmixture method)": [[1562, "openpnm.phase.StandardGasMixture.props"]], "regenerate_models() (standardgasmixture method)": [[1563, "openpnm.phase.StandardGasMixture.regenerate_models"]], "remove_comp() (standardgasmixture method)": [[1564, "openpnm.phase.StandardGasMixture.remove_comp"]], "run_model() (standardgasmixture method)": [[1565, "openpnm.phase.StandardGasMixture.run_model"]], "set_label() (standardgasmixture method)": [[1566, "openpnm.phase.StandardGasMixture.set_label"]], "setdefault() (standardgasmixture method)": [[1567, "openpnm.phase.StandardGasMixture.setdefault"]], "throats() (standardgasmixture method)": [[1568, "openpnm.phase.StandardGasMixture.throats"]], "to_indices() (standardgasmixture method)": [[1569, "openpnm.phase.StandardGasMixture.to_indices"]], "to_mask() (standardgasmixture method)": [[1570, "openpnm.phase.StandardGasMixture.to_mask"]], "update() (standardgasmixture method)": [[1571, "openpnm.phase.StandardGasMixture.update"]], "values() (standardgasmixture method)": [[1572, "openpnm.phase.StandardGasMixture.values"]], "y() (standardgasmixture method)": [[1573, "openpnm.phase.StandardGasMixture.y"]], "standardliquid (class in openpnm.phase)": [[1574, "openpnm.phase.StandardLiquid"]], "add_model() (standardliquid method)": [[1575, "openpnm.phase.StandardLiquid.add_model"]], "add_model_collection() (standardliquid method)": [[1576, "openpnm.phase.StandardLiquid.add_model_collection"]], "clear() (standardliquid method)": [[1577, "openpnm.phase.StandardLiquid.clear"]], "copy() (standardliquid method)": [[1578, "openpnm.phase.StandardLiquid.copy"]], "filter_by_label() (standardliquid method)": [[1579, "openpnm.phase.StandardLiquid.filter_by_label"]], "fromkeys() (standardliquid method)": [[1580, "openpnm.phase.StandardLiquid.fromkeys"]], "get() (standardliquid method)": [[1581, "openpnm.phase.StandardLiquid.get"]], "get_conduit_data() (standardliquid method)": [[1582, "openpnm.phase.StandardLiquid.get_conduit_data"]], "interpolate_data() (standardliquid method)": [[1583, "openpnm.phase.StandardLiquid.interpolate_data"]], "items() (standardliquid method)": [[1584, "openpnm.phase.StandardLiquid.items"]], "keys() (standardliquid method)": [[1585, "openpnm.phase.StandardLiquid.keys"]], "labels() (standardliquid method)": [[1586, "openpnm.phase.StandardLiquid.labels"]], "num_pores() (standardliquid method)": [[1587, "openpnm.phase.StandardLiquid.num_pores"]], "num_throats() (standardliquid method)": [[1588, "openpnm.phase.StandardLiquid.num_throats"]], "pop() (standardliquid method)": [[1589, "openpnm.phase.StandardLiquid.pop"]], "popitem() (standardliquid method)": [[1590, "openpnm.phase.StandardLiquid.popitem"]], "pores() (standardliquid method)": [[1591, "openpnm.phase.StandardLiquid.pores"]], "props() (standardliquid method)": [[1592, "openpnm.phase.StandardLiquid.props"]], "regenerate_models() (standardliquid method)": [[1593, "openpnm.phase.StandardLiquid.regenerate_models"]], "run_model() (standardliquid method)": [[1594, "openpnm.phase.StandardLiquid.run_model"]], "set_label() (standardliquid method)": [[1595, "openpnm.phase.StandardLiquid.set_label"]], "setdefault() (standardliquid method)": [[1596, "openpnm.phase.StandardLiquid.setdefault"]], "throats() (standardliquid method)": [[1597, "openpnm.phase.StandardLiquid.throats"]], "to_indices() (standardliquid method)": [[1598, "openpnm.phase.StandardLiquid.to_indices"]], "to_mask() (standardliquid method)": [[1599, "openpnm.phase.StandardLiquid.to_mask"]], "update() (standardliquid method)": [[1600, "openpnm.phase.StandardLiquid.update"]], "values() (standardliquid method)": [[1601, "openpnm.phase.StandardLiquid.values"]], "standardliquidmixture (class in openpnm.phase)": [[1602, "openpnm.phase.StandardLiquidMixture"]], "add_comp() (standardliquidmixture method)": [[1603, "openpnm.phase.StandardLiquidMixture.add_comp"]], "add_model() (standardliquidmixture method)": [[1604, "openpnm.phase.StandardLiquidMixture.add_model"]], "add_model_collection() (standardliquidmixture method)": [[1605, "openpnm.phase.StandardLiquidMixture.add_model_collection"]], "check_mixture_health() (standardliquidmixture method)": [[1606, "openpnm.phase.StandardLiquidMixture.check_mixture_health"]], "clear() (standardliquidmixture method)": [[1607, "openpnm.phase.StandardLiquidMixture.clear"]], "copy() (standardliquidmixture method)": [[1608, "openpnm.phase.StandardLiquidMixture.copy"]], "filter_by_label() (standardliquidmixture method)": [[1609, "openpnm.phase.StandardLiquidMixture.filter_by_label"]], "fromkeys() (standardliquidmixture method)": [[1610, "openpnm.phase.StandardLiquidMixture.fromkeys"]], "get() (standardliquidmixture method)": [[1611, "openpnm.phase.StandardLiquidMixture.get"]], "get_comp_vals() (standardliquidmixture method)": [[1612, "openpnm.phase.StandardLiquidMixture.get_comp_vals"]], "get_conduit_data() (standardliquidmixture method)": [[1613, "openpnm.phase.StandardLiquidMixture.get_conduit_data"]], "get_mix_vals() (standardliquidmixture method)": [[1614, "openpnm.phase.StandardLiquidMixture.get_mix_vals"]], "interpolate_data() (standardliquidmixture method)": [[1615, "openpnm.phase.StandardLiquidMixture.interpolate_data"]], "items() (standardliquidmixture method)": [[1616, "openpnm.phase.StandardLiquidMixture.items"]], "keys() (standardliquidmixture method)": [[1617, "openpnm.phase.StandardLiquidMixture.keys"]], "labels() (standardliquidmixture method)": [[1618, "openpnm.phase.StandardLiquidMixture.labels"]], "num_pores() (standardliquidmixture method)": [[1619, "openpnm.phase.StandardLiquidMixture.num_pores"]], "num_throats() (standardliquidmixture method)": [[1620, "openpnm.phase.StandardLiquidMixture.num_throats"]], "pop() (standardliquidmixture method)": [[1621, "openpnm.phase.StandardLiquidMixture.pop"]], "popitem() (standardliquidmixture method)": [[1622, "openpnm.phase.StandardLiquidMixture.popitem"]], "pores() (standardliquidmixture method)": [[1623, "openpnm.phase.StandardLiquidMixture.pores"]], "props() (standardliquidmixture method)": [[1624, "openpnm.phase.StandardLiquidMixture.props"]], "regenerate_models() (standardliquidmixture method)": [[1625, "openpnm.phase.StandardLiquidMixture.regenerate_models"]], "remove_comp() (standardliquidmixture method)": [[1626, "openpnm.phase.StandardLiquidMixture.remove_comp"]], "run_model() (standardliquidmixture method)": [[1627, "openpnm.phase.StandardLiquidMixture.run_model"]], "set_label() (standardliquidmixture method)": [[1628, "openpnm.phase.StandardLiquidMixture.set_label"]], "setdefault() (standardliquidmixture method)": [[1629, "openpnm.phase.StandardLiquidMixture.setdefault"]], "throats() (standardliquidmixture method)": [[1630, "openpnm.phase.StandardLiquidMixture.throats"]], "to_indices() (standardliquidmixture method)": [[1631, "openpnm.phase.StandardLiquidMixture.to_indices"]], "to_mask() (standardliquidmixture method)": [[1632, "openpnm.phase.StandardLiquidMixture.to_mask"]], "update() (standardliquidmixture method)": [[1633, "openpnm.phase.StandardLiquidMixture.update"]], "values() (standardliquidmixture method)": [[1634, "openpnm.phase.StandardLiquidMixture.values"]], "x() (standardliquidmixture method)": [[1635, "openpnm.phase.StandardLiquidMixture.x"]], "water (class in openpnm.phase)": [[1636, "openpnm.phase.Water"]], "add_model() (water method)": [[1637, "openpnm.phase.Water.add_model"]], "add_model_collection() (water method)": [[1638, "openpnm.phase.Water.add_model_collection"]], "clear() (water method)": [[1639, "openpnm.phase.Water.clear"]], "copy() (water method)": [[1640, "openpnm.phase.Water.copy"]], "filter_by_label() (water method)": [[1641, "openpnm.phase.Water.filter_by_label"]], "fromkeys() (water method)": [[1642, "openpnm.phase.Water.fromkeys"]], "get() (water method)": [[1643, "openpnm.phase.Water.get"]], "get_conduit_data() (water method)": [[1644, "openpnm.phase.Water.get_conduit_data"]], "interpolate_data() (water method)": [[1645, "openpnm.phase.Water.interpolate_data"]], "items() (water method)": [[1646, "openpnm.phase.Water.items"]], "keys() (water method)": [[1647, "openpnm.phase.Water.keys"]], "labels() (water method)": [[1648, "openpnm.phase.Water.labels"]], "num_pores() (water method)": [[1649, "openpnm.phase.Water.num_pores"]], "num_throats() (water method)": [[1650, "openpnm.phase.Water.num_throats"]], "pop() (water method)": [[1651, "openpnm.phase.Water.pop"]], "popitem() (water method)": [[1652, "openpnm.phase.Water.popitem"]], "pores() (water method)": [[1653, "openpnm.phase.Water.pores"]], "props() (water method)": [[1654, "openpnm.phase.Water.props"]], "regenerate_models() (water method)": [[1655, "openpnm.phase.Water.regenerate_models"]], "run_model() (water method)": [[1656, "openpnm.phase.Water.run_model"]], "set_label() (water method)": [[1657, "openpnm.phase.Water.set_label"]], "setdefault() (water method)": [[1658, "openpnm.phase.Water.setdefault"]], "throats() (water method)": [[1659, "openpnm.phase.Water.throats"]], "to_indices() (water method)": [[1660, "openpnm.phase.Water.to_indices"]], "to_mask() (water method)": [[1661, "openpnm.phase.Water.to_mask"]], "update() (water method)": [[1662, "openpnm.phase.Water.update"]], "values() (water method)": [[1663, "openpnm.phase.Water.values"]], "openpnm.solvers": [[1664, "module-openpnm.solvers"]], "basesolver (class in openpnm.solvers)": [[1665, "openpnm.solvers.BaseSolver"]], "solve() (basesolver method)": [[1666, "openpnm.solvers.BaseSolver.solve"]], "directsolver (class in openpnm.solvers)": [[1667, "openpnm.solvers.DirectSolver"]], "solve() (directsolver method)": [[1668, "openpnm.solvers.DirectSolver.solve"]], "iterativesolver (class in openpnm.solvers)": [[1669, "openpnm.solvers.IterativeSolver"]], "solve() (iterativesolver method)": [[1670, "openpnm.solvers.IterativeSolver.solve"]], "petsclinearsolver (class in openpnm.solvers)": [[1671, "openpnm.solvers.PETScLinearSolver"]], "solve() (petsclinearsolver method)": [[1672, "openpnm.solvers.PETScLinearSolver.solve"]], "pardisospsolve (class in openpnm.solvers)": [[1673, "openpnm.solvers.PardisoSpsolve"]], "solve() (pardisospsolve method)": [[1674, "openpnm.solvers.PardisoSpsolve.solve"]], "scipycg (class in openpnm.solvers)": [[1675, "openpnm.solvers.ScipyCG"]], "solve() (scipycg method)": [[1676, "openpnm.solvers.ScipyCG.solve"]], "scipyspsolve (class in openpnm.solvers)": [[1677, "openpnm.solvers.ScipySpsolve"]], "solve() (scipyspsolve method)": [[1678, "openpnm.solvers.ScipySpsolve.solve"]], "openpnm.topotools": [[1679, "module-openpnm.topotools"]], "add_boundary_pores() (in module openpnm.topotools)": [[1680, "openpnm.topotools.add_boundary_pores"]], "add_reservoir_pore() (in module openpnm.topotools)": [[1681, "openpnm.topotools.add_reservoir_pore"]], "bond_percolation() (in module openpnm.topotools)": [[1682, "openpnm.topotools.bond_percolation"]], "clone_pores() (in module openpnm.topotools)": [[1683, "openpnm.topotools.clone_pores"]], "connect_pores() (in module openpnm.topotools)": [[1684, "openpnm.topotools.connect_pores"]], "conns_to_am() (in module openpnm.topotools)": [[1685, "openpnm.topotools.conns_to_am"]], "dimensionality() (in module openpnm.topotools)": [[1686, "openpnm.topotools.dimensionality"]], "drop_sites() (in module openpnm.topotools)": [[1687, "openpnm.topotools.drop_sites"]], "extend() (in module openpnm.topotools)": [[1688, "openpnm.topotools.extend"]], "filter_pores_by_z() (in module openpnm.topotools)": [[1689, "openpnm.topotools.filter_pores_by_z"]], "find_clusters() (in module openpnm.topotools)": [[1690, "openpnm.topotools.find_clusters"]], "find_connected_sites() (in module openpnm.topotools)": [[1691, "openpnm.topotools.find_connected_sites"]], "find_connecting_bonds() (in module openpnm.topotools)": [[1692, "openpnm.topotools.find_connecting_bonds"]], "find_interface_throats() (in module openpnm.topotools)": [[1693, "openpnm.topotools.find_interface_throats"]], "find_neighbor_bonds() (in module openpnm.topotools)": [[1694, "openpnm.topotools.find_neighbor_bonds"]], "find_neighbor_sites() (in module openpnm.topotools)": [[1695, "openpnm.topotools.find_neighbor_sites"]], "find_path() (in module openpnm.topotools)": [[1696, "openpnm.topotools.find_path"]], "find_pore_to_pore_distance() (in module openpnm.topotools)": [[1697, "openpnm.topotools.find_pore_to_pore_distance"]], "find_surface_pores() (in module openpnm.topotools)": [[1698, "openpnm.topotools.find_surface_pores"]], "generate_base_points() (in module openpnm.topotools)": [[1699, "openpnm.topotools.generate_base_points"]], "get_domain_area() (in module openpnm.topotools)": [[1700, "openpnm.topotools.get_domain_area"]], "get_domain_length() (in module openpnm.topotools)": [[1701, "openpnm.topotools.get_domain_length"]], "get_shape() (in module openpnm.topotools)": [[1702, "openpnm.topotools.get_shape"]], "get_spacing() (in module openpnm.topotools)": [[1703, "openpnm.topotools.get_spacing"]], "hull_centroid() (in module openpnm.topotools)": [[1704, "openpnm.topotools.hull_centroid"]], "is_fully_connected() (in module openpnm.topotools)": [[1705, "openpnm.topotools.is_fully_connected"]], "iscoplanar() (in module openpnm.topotools)": [[1706, "openpnm.topotools.iscoplanar"]], "isoutside() (in module openpnm.topotools)": [[1707, "openpnm.topotools.isoutside"]], "ispercolating() (in module openpnm.topotools)": [[1708, "openpnm.topotools.ispercolating"]], "issymmetric() (in module openpnm.topotools)": [[1709, "openpnm.topotools.issymmetric"]], "istriangular() (in module openpnm.topotools)": [[1710, "openpnm.topotools.istriangular"]], "istril() (in module openpnm.topotools)": [[1711, "openpnm.topotools.istril"]], "istriu() (in module openpnm.topotools)": [[1712, "openpnm.topotools.istriu"]], "label_faces() (in module openpnm.topotools)": [[1713, "openpnm.topotools.label_faces"]], "merge_networks() (in module openpnm.topotools)": [[1714, "openpnm.topotools.merge_networks"]], "merge_pores() (in module openpnm.topotools)": [[1715, "openpnm.topotools.merge_pores"]], "reduce_coordination() (in module openpnm.topotools)": [[1716, "openpnm.topotools.reduce_coordination"]], "reflect_base_points() (in module openpnm.topotools)": [[1717, "openpnm.topotools.reflect_base_points"]], "remove_isolated_clusters() (in module openpnm.topotools)": [[1718, "openpnm.topotools.remove_isolated_clusters"]], "rotate_coords() (in module openpnm.topotools)": [[1719, "openpnm.topotools.rotate_coords"]], "shear_coords() (in module openpnm.topotools)": [[1720, "openpnm.topotools.shear_coords"]], "site_percolation() (in module openpnm.topotools)": [[1721, "openpnm.topotools.site_percolation"]], "stitch() (in module openpnm.topotools)": [[1722, "openpnm.topotools.stitch"]], "stitch_pores() (in module openpnm.topotools)": [[1723, "openpnm.topotools.stitch_pores"]], "template_cylinder_annulus() (in module openpnm.topotools)": [[1724, "openpnm.topotools.template_cylinder_annulus"]], "template_sphere_shell() (in module openpnm.topotools)": [[1725, "openpnm.topotools.template_sphere_shell"]], "tri_to_am() (in module openpnm.topotools)": [[1726, "openpnm.topotools.tri_to_am"]], "trim() (in module openpnm.topotools)": [[1727, "openpnm.topotools.trim"]], "vor_to_am() (in module openpnm.topotools)": [[1728, "openpnm.topotools.vor_to_am"]], "openpnm.utils": [[1729, "module-openpnm.utils"]], "docorator (class in openpnm.utils)": [[1730, "openpnm.utils.Docorator"]], "__call__() (docorator method)": [[1731, "openpnm.utils.Docorator.__call__"]], "dedent() (docorator method)": [[1732, "openpnm.utils.Docorator.dedent"]], "dedents() (docorator method)": [[1733, "openpnm.utils.Docorator.dedents"]], "delete_kwargs() (docorator method)": [[1734, "openpnm.utils.Docorator.delete_kwargs"]], "delete_kwargs_s() (docorator class method)": [[1735, "openpnm.utils.Docorator.delete_kwargs_s"]], "delete_params() (docorator method)": [[1736, "openpnm.utils.Docorator.delete_params"]], "delete_params_s() (docorator static method)": [[1737, "openpnm.utils.Docorator.delete_params_s"]], "delete_types() (docorator method)": [[1738, "openpnm.utils.Docorator.delete_types"]], "delete_types_s() (docorator static method)": [[1739, "openpnm.utils.Docorator.delete_types_s"]], "get_docstring() (docorator method)": [[1740, "openpnm.utils.Docorator.get_docstring"]], "get_extended_summary() (docorator method)": [[1741, "openpnm.utils.Docorator.get_extended_summary"]], "get_extended_summaryf() (docorator method)": [[1742, "openpnm.utils.Docorator.get_extended_summaryf"]], "get_full_description() (docorator method)": [[1743, "openpnm.utils.Docorator.get_full_description"]], "get_full_descriptionf() (docorator method)": [[1744, "openpnm.utils.Docorator.get_full_descriptionf"]], "get_sections() (docorator method)": [[1745, "openpnm.utils.Docorator.get_sections"]], "get_sectionsf() (docorator method)": [[1746, "openpnm.utils.Docorator.get_sectionsf"]], "get_summary() (docorator method)": [[1747, "openpnm.utils.Docorator.get_summary"]], "get_summaryf() (docorator method)": [[1748, "openpnm.utils.Docorator.get_summaryf"]], "keep_params() (docorator method)": [[1749, "openpnm.utils.Docorator.keep_params"]], "keep_params_s() (docorator static method)": [[1750, "openpnm.utils.Docorator.keep_params_s"]], "keep_types() (docorator method)": [[1751, "openpnm.utils.Docorator.keep_types"]], "keep_types_s() (docorator static method)": [[1752, "openpnm.utils.Docorator.keep_types_s"]], "save_docstring() (docorator method)": [[1753, "openpnm.utils.Docorator.save_docstring"]], "with_indent() (docorator method)": [[1754, "openpnm.utils.Docorator.with_indent"]], "with_indents() (docorator method)": [[1755, "openpnm.utils.Docorator.with_indents"]], "healthdict (class in openpnm.utils)": [[1756, "openpnm.utils.HealthDict"]], "clear() (healthdict method)": [[1757, "openpnm.utils.HealthDict.clear"]], "copy() (healthdict method)": [[1758, "openpnm.utils.HealthDict.copy"]], "fromkeys() (healthdict method)": [[1759, "openpnm.utils.HealthDict.fromkeys"]], "get() (healthdict method)": [[1760, "openpnm.utils.HealthDict.get"]], "items() (healthdict method)": [[1761, "openpnm.utils.HealthDict.items"]], "keys() (healthdict method)": [[1762, "openpnm.utils.HealthDict.keys"]], "pop() (healthdict method)": [[1763, "openpnm.utils.HealthDict.pop"]], "popitem() (healthdict method)": [[1764, "openpnm.utils.HealthDict.popitem"]], "setdefault() (healthdict method)": [[1765, "openpnm.utils.HealthDict.setdefault"]], "update() (healthdict method)": [[1766, "openpnm.utils.HealthDict.update"]], "values() (healthdict method)": [[1767, "openpnm.utils.HealthDict.values"]], "nesteddict (class in openpnm.utils)": [[1768, "openpnm.utils.NestedDict"]], "clear() (nesteddict method)": [[1769, "openpnm.utils.NestedDict.clear"]], "copy() (nesteddict method)": [[1770, "openpnm.utils.NestedDict.copy"]], "fromkeys() (nesteddict method)": [[1771, "openpnm.utils.NestedDict.fromkeys"]], "get() (nesteddict method)": [[1772, "openpnm.utils.NestedDict.get"]], "items() (nesteddict method)": [[1773, "openpnm.utils.NestedDict.items"]], "keys() (nesteddict method)": [[1774, "openpnm.utils.NestedDict.keys"]], "pop() (nesteddict method)": [[1775, "openpnm.utils.NestedDict.pop"]], "popitem() (nesteddict method)": [[1776, "openpnm.utils.NestedDict.popitem"]], "setdefault() (nesteddict method)": [[1777, "openpnm.utils.NestedDict.setdefault"]], "to_dict() (nesteddict method)": [[1778, "openpnm.utils.NestedDict.to_dict"]], "unravel() (nesteddict method)": [[1779, "openpnm.utils.NestedDict.unravel"]], "update() (nesteddict method)": [[1780, "openpnm.utils.NestedDict.update"]], "values() (nesteddict method)": [[1781, "openpnm.utils.NestedDict.values"]], "printabledict (class in openpnm.utils)": [[1782, "openpnm.utils.PrintableDict"]], "clear() (printabledict method)": [[1783, "openpnm.utils.PrintableDict.clear"]], "copy() (printabledict method)": [[1784, "openpnm.utils.PrintableDict.copy"]], "fromkeys() (printabledict method)": [[1785, "openpnm.utils.PrintableDict.fromkeys"]], "get() (printabledict method)": [[1786, "openpnm.utils.PrintableDict.get"]], "items() (printabledict method)": [[1787, "openpnm.utils.PrintableDict.items"]], "keys() (printabledict method)": [[1788, "openpnm.utils.PrintableDict.keys"]], "pop() (printabledict method)": [[1789, "openpnm.utils.PrintableDict.pop"]], "popitem() (printabledict method)": [[1790, "openpnm.utils.PrintableDict.popitem"]], "setdefault() (printabledict method)": [[1791, "openpnm.utils.PrintableDict.setdefault"]], "update() (printabledict method)": [[1792, "openpnm.utils.PrintableDict.update"]], "values() (printabledict method)": [[1793, "openpnm.utils.PrintableDict.values"]], "printablelist (class in openpnm.utils)": [[1794, "openpnm.utils.PrintableList"]], "append() (printablelist method)": [[1795, "openpnm.utils.PrintableList.append"]], "clear() (printablelist method)": [[1796, "openpnm.utils.PrintableList.clear"]], "copy() (printablelist method)": [[1797, "openpnm.utils.PrintableList.copy"]], "count() (printablelist method)": [[1798, "openpnm.utils.PrintableList.count"]], "extend() (printablelist method)": [[1799, "openpnm.utils.PrintableList.extend"]], "index() (printablelist method)": [[1800, "openpnm.utils.PrintableList.index"]], "insert() (printablelist method)": [[1801, "openpnm.utils.PrintableList.insert"]], "pop() (printablelist method)": [[1802, "openpnm.utils.PrintableList.pop"]], "remove() (printablelist method)": [[1803, "openpnm.utils.PrintableList.remove"]], "reverse() (printablelist method)": [[1804, "openpnm.utils.PrintableList.reverse"]], "sort() (printablelist method)": [[1805, "openpnm.utils.PrintableList.sort"]], "project (class in openpnm.utils)": [[1806, "openpnm.utils.Project"]], "append() (project method)": [[1807, "openpnm.utils.Project.append"]], "copy() (project method)": [[1808, "openpnm.utils.Project.copy"]], "settingsattr (class in openpnm.utils)": [[1809, "openpnm.utils.SettingsAttr"]], "simplelist (class in openpnm.utils)": [[1810, "openpnm.utils.SimpleList"]], "append() (simplelist method)": [[1811, "openpnm.utils.SimpleList.append"]], "typedlist (class in openpnm.utils)": [[1812, "openpnm.utils.TypedList"]], "append() (typedlist method)": [[1813, "openpnm.utils.TypedList.append"]], "clear() (typedlist method)": [[1814, "openpnm.utils.TypedList.clear"]], "copy() (typedlist method)": [[1815, "openpnm.utils.TypedList.copy"]], "count() (typedlist method)": [[1816, "openpnm.utils.TypedList.count"]], "extend() (typedlist method)": [[1817, "openpnm.utils.TypedList.extend"]], "index() (typedlist method)": [[1818, "openpnm.utils.TypedList.index"]], "insert() (typedlist method)": [[1819, "openpnm.utils.TypedList.insert"]], "pop() (typedlist method)": [[1820, "openpnm.utils.TypedList.pop"]], "remove() (typedlist method)": [[1821, "openpnm.utils.TypedList.remove"]], "reverse() (typedlist method)": [[1822, "openpnm.utils.TypedList.reverse"]], "sort() (typedlist method)": [[1823, "openpnm.utils.TypedList.sort"]], "typedmixin (class in openpnm.utils)": [[1824, "openpnm.utils.TypedMixin"]], "typedset (class in openpnm.utils)": [[1825, "openpnm.utils.TypedSet"]], "add() (typedset method)": [[1826, "openpnm.utils.TypedSet.add"]], "clear() (typedset method)": [[1827, "openpnm.utils.TypedSet.clear"]], "copy() (typedset method)": [[1828, "openpnm.utils.TypedSet.copy"]], "difference() (typedset method)": [[1829, "openpnm.utils.TypedSet.difference"]], "difference_update() (typedset method)": [[1830, "openpnm.utils.TypedSet.difference_update"]], "discard() (typedset method)": [[1831, "openpnm.utils.TypedSet.discard"]], "intersection() (typedset method)": [[1832, "openpnm.utils.TypedSet.intersection"]], "intersection_update() (typedset method)": [[1833, "openpnm.utils.TypedSet.intersection_update"]], "isdisjoint() (typedset method)": [[1834, "openpnm.utils.TypedSet.isdisjoint"]], "issubset() (typedset method)": [[1835, "openpnm.utils.TypedSet.issubset"]], "issuperset() (typedset method)": [[1836, "openpnm.utils.TypedSet.issuperset"]], "pop() (typedset method)": [[1837, "openpnm.utils.TypedSet.pop"]], "remove() (typedset method)": [[1838, "openpnm.utils.TypedSet.remove"]], "symmetric_difference() (typedset method)": [[1839, "openpnm.utils.TypedSet.symmetric_difference"]], "symmetric_difference_update() (typedset method)": [[1840, "openpnm.utils.TypedSet.symmetric_difference_update"]], "union() (typedset method)": [[1841, "openpnm.utils.TypedSet.union"]], "update() (typedset method)": [[1842, "openpnm.utils.TypedSet.update"]], "workspace (class in openpnm.utils)": [[1843, "openpnm.utils.Workspace"]], "clear() (workspace method)": [[1844, "openpnm.utils.Workspace.clear"]], "close_project() (workspace method)": [[1845, "openpnm.utils.Workspace.close_project"]], "copy() (workspace method)": [[1846, "openpnm.utils.Workspace.copy"]], "copy_project() (workspace method)": [[1847, "openpnm.utils.Workspace.copy_project"]], "fromkeys() (workspace method)": [[1848, "openpnm.utils.Workspace.fromkeys"]], "get() (workspace method)": [[1849, "openpnm.utils.Workspace.get"]], "items() (workspace method)": [[1850, "openpnm.utils.Workspace.items"]], "keys() (workspace method)": [[1851, "openpnm.utils.Workspace.keys"]], "load_project() (workspace method)": [[1852, "openpnm.utils.Workspace.load_project"]], "load_workspace() (workspace method)": [[1853, "openpnm.utils.Workspace.load_workspace"]], "new_project() (workspace method)": [[1854, "openpnm.utils.Workspace.new_project"]], "pop() (workspace method)": [[1855, "openpnm.utils.Workspace.pop"]], "popitem() (workspace method)": [[1856, "openpnm.utils.Workspace.popitem"]], "save_project() (workspace method)": [[1857, "openpnm.utils.Workspace.save_project"]], "save_workspace() (workspace method)": [[1858, "openpnm.utils.Workspace.save_workspace"]], "setdefault() (workspace method)": [[1859, "openpnm.utils.Workspace.setdefault"]], "update() (workspace method)": [[1860, "openpnm.utils.Workspace.update"]], "values() (workspace method)": [[1861, "openpnm.utils.Workspace.values"]], "check_data_health() (in module openpnm.utils)": [[1862, "openpnm.utils.check_data_health"]], "check_network_health() (in module openpnm.utils)": [[1863, "openpnm.utils.check_network_health"]], "dict_to_struct() (in module openpnm.utils)": [[1864, "openpnm.utils.dict_to_struct"]], "flat_list() (in module openpnm.utils)": [[1865, "openpnm.utils.flat_list"]], "get_mixture_model_args() (in module openpnm.utils)": [[1866, "openpnm.utils.get_mixture_model_args"]], "get_printable_labels() (in module openpnm.utils)": [[1867, "openpnm.utils.get_printable_labels"]], "get_printable_props() (in module openpnm.utils)": [[1868, "openpnm.utils.get_printable_props"]], "ignore_warnings() (in module openpnm.utils)": [[1869, "openpnm.utils.ignore_warnings"]], "is_symmetric() (in module openpnm.utils)": [[1870, "openpnm.utils.is_symmetric"]], "is_transient() (in module openpnm.utils)": [[1871, "openpnm.utils.is_transient"]], "is_valid_propname() (in module openpnm.utils)": [[1872, "openpnm.utils.is_valid_propname"]], "methods_to_table() (in module openpnm.utils)": [[1873, "openpnm.utils.methods_to_table"]], "models_to_table() (in module openpnm.utils)": [[1874, "openpnm.utils.models_to_table"]], "sanitize_dict() (in module openpnm.utils)": [[1875, "openpnm.utils.sanitize_dict"]], "struct_to_dict() (in module openpnm.utils)": [[1876, "openpnm.utils.struct_to_dict"]], "openpnm": [[1877, "module-openpnm"]]}})